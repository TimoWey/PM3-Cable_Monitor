
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002a81c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017558  0802a9cc  0802a9cc  0003a9cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  08041f24  08041f24  00051f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08044c64  08044c64  00054c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  08044dd4  08044dd4  00054dd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08045448  08045448  00055448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815e478  0815e478  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815e478  0815e478  0016e478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815e480  0815e480  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815e480  0815e480  0016e480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815e494  0815e494  0016e494  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815e498  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013874  20000168  0815e600  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139dc  0815e600  001739dc  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   000997c3  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00209a8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00291759  00000000  00000000  00209b20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000325a3  00000000  00000000  0049b279  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004700  00000000  00000000  004cd820  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f43c  00000000  00000000  004d1f20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007ed6  00000000  00000000  005f135c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00030ade  00000000  00000000  005f9232  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c25e  00000000  00000000  00629d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d004  00000000  00000000  00665f70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00672f74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  006762ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802a9b4 	.word	0x0802a9b4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802a9b4 	.word	0x0802a9b4

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fc77 	bl	8008f68 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f029 fc1f 	bl	8029ebc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fed5 	bl	800142c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815e498 	.word	0x0815e498
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	200139dc 	.word	0x200139dc

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fba9 	bl	8000dfc <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba4 	b.w	8000e00 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 fae5 	bl	8028c8e <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f008 bda9 	b.w	8009398 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f008 bd91 	b.w	8009398 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f008 bd82 	b.w	80093a0 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 fd67 	bl	800938c <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012da3 	.word	0x20012da3

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4c 	bl	8000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f825 	bl	80019c4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f00f fe9a 	bl	80106c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0d 	b.w	8000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb11 	b.w	8000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb35 	b.w	8001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badd 	b.w	8000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae3 	b.w	8000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3b 	b.w	800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae7 	b.w	8000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f b8ef 	b.w	800fb9c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 f963 	bl	8028c8e <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012d9c 	.word	0x20012d9c
 8000a20:	20012d98 	.word	0x20012d98
 8000a24:	20012d9a 	.word	0x20012d9a

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f028 ff3b 	bl	80298b4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802aa24 	.word	0x0802aa24
 8000a5c:	0802aa5c 	.word	0x0802aa5c
 8000a60:	0802aaaa 	.word	0x0802aaaa
 8000a64:	20012da2 	.word	0x20012da2

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f028 ff17 	bl	80298b4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012d98 	.word	0x20012d98
 8000a94:	20012d9a 	.word	0x20012d9a
 8000a98:	0802aaef 	.word	0x0802aaef
 8000a9c:	0802ab52 	.word	0x0802ab52
 8000aa0:	0802aaaa 	.word	0x0802aaaa
 8000aa4:	20012d9e 	.word	0x20012d9e
 8000aa8:	20012da0 	.word	0x20012da0

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00b fe78 	bl	800c7a8 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f028 fef5 	bl	80298b4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00b ff1e 	bl	800c910 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802ac70 	.word	0x0802ac70
 8000aec:	0802acb9 	.word	0x0802acb9
 8000af0:	0802ace8 	.word	0x0802ace8
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802ad62 	.word	0x0802ad62

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00b bea4 	b.w	800c850 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00b bed2 	b.w	800c8b8 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00b be97 	b.w	800c850 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00b bf25 	b.w	800c984 <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00b ff4e 	bl	800c9f0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00b ff47 	bl	800c9f0 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f028 fe95 	bl	80298b4 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802adc7 	.word	0x0802adc7
 8000b90:	0802ada4 	.word	0x0802ada4
 8000b94:	0802ae05 	.word	0x0802ae05

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f028 fe87 	bl	80298b4 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802ae7d 	.word	0x0802ae7d
 8000bac:	0802ada4 	.word	0x0802ada4
 8000bb0:	0802ae05 	.word	0x0802ae05

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 f868 	bl	8028c8e <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f00f feca 	bl	8010974 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802aec4 	.word	0x0802aec4

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f8 	movw	r0, #5112	; 0x13f8
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMeasurement_Single_Display_1PScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 be42 	b.w	80038cc <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e fb2d 	bl	800f2ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802af7c 	.word	0x0802af7c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 f811 	bl	8028c8e <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e fb19 	bl	800f2ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802af48 	.word	0x0802af48

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8000c92:	f027 fffc 	bl	8028c8e <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e fb03 	bl	800f2ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802af14 	.word	0x0802af14

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f027 ffe7 	bl	8028c8e <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	300c      	adds	r0, #12
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802afb0 	.word	0x0802afb0

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51d0 	movw	r1, #5584	; 0x15d0
 8000d0e:	f027 ffbe 	bl	8028c8e <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fb88 	bl	8002430 <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fb89 	bl	8002438 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 fb33 	bl	801839c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 f966 	bl	8008010 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 fa91 	bl	801826c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d437      	bmi.n	8000dc4 <touchgfx_init+0xac>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f027 ff9c 	bl	8028c92 <__cxa_guard_acquire>
 8000d5a:	b398      	cbz	r0, 8000dc4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d5e:	4b21      	ldr	r3, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
 8000d60:	6023      	str	r3, [r4, #0]
 8000d62:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d66:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8000d6a:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8000d6e:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8000d72:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d74:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d7a:	6126      	str	r6, [r4, #16]
 8000d7c:	f00e fa98 	bl	800f2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d80:	4b19      	ldr	r3, [pc, #100]	; (8000de8 <touchgfx_init+0xd0>)
 8000d82:	6163      	str	r3, [r4, #20]
 8000d84:	4640      	mov	r0, r8
 8000d86:	f00e fa93 	bl	800f2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d8a:	4b18      	ldr	r3, [pc, #96]	; (8000dec <touchgfx_init+0xd4>)
 8000d8c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8e:	4638      	mov	r0, r7
 8000d90:	f00e fa8e 	bl	800f2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d94:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d98:	4a15      	ldr	r2, [pc, #84]	; (8000df0 <touchgfx_init+0xd8>)
 8000d9a:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8000d9e:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8000da2:	f007 fda1 	bl	80088e8 <_ZN5ModelC1Ev>
 8000da6:	4622      	mov	r2, r4
 8000da8:	f1a6 0108 	sub.w	r1, r6, #8
 8000dac:	4630      	mov	r0, r6
 8000dae:	f007 fa89 	bl	80082c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db2:	4630      	mov	r0, r6
 8000db4:	f002 fd8a 	bl	80038cc <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db8:	480e      	ldr	r0, [pc, #56]	; (8000df4 <touchgfx_init+0xdc>)
 8000dba:	f028 fd99 	bl	80298f0 <atexit>
 8000dbe:	4628      	mov	r0, r5
 8000dc0:	f027 ff73 	bl	8028caa <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc4:	480c      	ldr	r0, [pc, #48]	; (8000df8 <touchgfx_init+0xe0>)
}
 8000dc6:	b002      	add	sp, #8
 8000dc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dcc:	f7ff bdb4 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dd0:	20012e08 	.word	0x20012e08
 8000dd4:	20001844 	.word	0x20001844
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	0802afb0 	.word	0x0802afb0
 8000de8:	0802af14 	.word	0x0802af14
 8000dec:	0802af48 	.word	0x0802af48
 8000df0:	0802af7c 	.word	0x0802af7c
 8000df4:	08000cf1 	.word	0x08000cf1
 8000df8:	200017c8 	.word	0x200017c8

08000dfc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000dfc:	4770      	bx	lr
	...

08000e00 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e00:	4801      	ldr	r0, [pc, #4]	; (8000e08 <touchgfx_taskEntry+0x8>)
 8000e02:	f7ff bda7 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e06:	bf00      	nop
 8000e08:	200017c8 	.word	0x200017c8

08000e0c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e0c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e0e:	4e22      	ldr	r6, [pc, #136]	; (8000e98 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e10:	4c22      	ldr	r4, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e12:	4d23      	ldr	r5, [pc, #140]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e14:	4b23      	ldr	r3, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e16:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e18:	4630      	mov	r0, r6
 8000e1a:	f7ff fed3 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e1e:	4628      	mov	r0, r5
 8000e20:	f01b fd88 	bl	801c934 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e24:	4b20      	ldr	r3, [pc, #128]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e26:	4821      	ldr	r0, [pc, #132]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e28:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e2c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e30:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e34:	491e      	ldr	r1, [pc, #120]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e36:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e38:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e3c:	491d      	ldr	r1, [pc, #116]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e3e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e42:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e46:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e48:	21f0      	movs	r1, #240	; 0xf0
 8000e4a:	8001      	strh	r1, [r0, #0]
 8000e4c:	481b      	ldr	r0, [pc, #108]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e4e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e50:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e52:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e54:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e58:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e5c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e60:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e64:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e68:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e6c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e70:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e74:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e78:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e7c:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e7e:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e82:	8001      	strh	r1, [r0, #0]
 8000e84:	480f      	ldr	r0, [pc, #60]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e86:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e88:	490f      	ldr	r1, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8a:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e8c:	2201      	movs	r2, #1
 8000e8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e92:	4a0e      	ldr	r2, [pc, #56]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e94:	601a      	str	r2, [r3, #0]
}
 8000e96:	bd70      	pop	{r4, r5, r6, pc}
 8000e98:	20001784 	.word	0x20001784
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	20001848 	.word	0x20001848
 8000ea4:	0802aa14 	.word	0x0802aa14
 8000ea8:	200017c8 	.word	0x200017c8
 8000eac:	20012d98 	.word	0x20012d98
 8000eb0:	01000001 	.word	0x01000001
 8000eb4:	01010000 	.word	0x01010000
 8000eb8:	20012da4 	.word	0x20012da4
 8000ebc:	20012d9e 	.word	0x20012d9e
 8000ec0:	20012d9a 	.word	0x20012d9a
 8000ec4:	20012da0 	.word	0x20012da0
 8000ec8:	20012d9c 	.word	0x20012d9c
 8000ecc:	0802aba0 	.word	0x0802aba0

08000ed0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	4770      	bx	lr

08000ed4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed4:	8081      	strh	r1, [r0, #4]
    }
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000ed8:	80c1      	strh	r1, [r0, #6]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000edc:	8101      	strh	r1, [r0, #8]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee0:	8141      	strh	r1, [r0, #10]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee4:	4770      	bx	lr

08000ee6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000eee:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef0:	88c4      	ldrh	r4, [r0, #6]
 8000ef2:	6803      	ldr	r3, [r0, #0]
 8000ef4:	1b12      	subs	r2, r2, r4
 8000ef6:	8884      	ldrh	r4, [r0, #4]
 8000ef8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efa:	1b09      	subs	r1, r1, r4
 8000efc:	b212      	sxth	r2, r2
    }
 8000efe:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f02:	b209      	sxth	r1, r1
 8000f04:	4718      	bx	r3

08000f06 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f0c:	f04f 33ff 	mov.w	r3, #4294967295
 8000f10:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f12:	6813      	ldr	r3, [r2, #0]
 8000f14:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f16:	6010      	str	r0, [r2, #0]
    }
 8000f18:	4770      	bx	lr

08000f1a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f1e:	b11a      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f20:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f24:	b102      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f26:	6018      	str	r0, [r3, #0]
        }
    }
 8000f28:	4770      	bx	lr

08000f2a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f2e:	888b      	ldrh	r3, [r1, #4]
 8000f30:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f32:	2001      	movs	r0, #1
 8000f34:	4770      	bx	lr

08000f36 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f36:	4770      	bx	lr

08000f38 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f38:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f3c:	4770      	bx	lr

08000f3e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f3e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f42:	4770      	bx	lr

08000f44 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f44:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f46:	2200      	movs	r2, #0
        return rect.width;
 8000f48:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f4c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f50:	8002      	strh	r2, [r0, #0]
 8000f52:	8042      	strh	r2, [r0, #2]
 8000f54:	8084      	strh	r4, [r0, #4]
 8000f56:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f58:	bd10      	pop	{r4, pc}

08000f5a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	8002      	strh	r2, [r0, #0]
 8000f5e:	8042      	strh	r2, [r0, #2]
 8000f60:	8082      	strh	r2, [r0, #4]
 8000f62:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f64:	4770      	bx	lr
	...

08000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f68:	4b02      	ldr	r3, [pc, #8]	; (8000f74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6a:	2290      	movs	r2, #144	; 0x90
 8000f6c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f70:	4770      	bx	lr
 8000f72:	bf00      	nop
 8000f74:	e000e100 	.word	0xe000e100

08000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f78:	4b02      	ldr	r3, [pc, #8]	; (8000f84 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f7e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	e000e100 	.word	0xe000e100

08000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f88:	4a09      	ldr	r2, [pc, #36]	; (8000fb0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8a:	490a      	ldr	r1, [pc, #40]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f8c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f8e:	480a      	ldr	r0, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f90:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f94:	3b01      	subs	r3, #1
 8000f96:	b29b      	uxth	r3, r3
 8000f98:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9a:	6911      	ldr	r1, [r2, #16]
 8000f9c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa0:	3901      	subs	r1, #1
 8000fa2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000fa6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fa8:	f043 0301 	orr.w	r3, r3, #1
 8000fac:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fae:	4770      	bx	lr
 8000fb0:	40016800 	.word	0x40016800
 8000fb4:	200018ce 	.word	0x200018ce
 8000fb8:	200018cc 	.word	0x200018cc

08000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fbc:	4b01      	ldr	r3, [pc, #4]	; (8000fc4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fbe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc2:	4770      	bx	lr
 8000fc4:	40016800 	.word	0x40016800

08000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fc8:	4b02      	ldr	r3, [pc, #8]	; (8000fd4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fca:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd0:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd2:	4770      	bx	lr
 8000fd4:	40016800 	.word	0x40016800

08000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fd8:	b570      	push	{r4, r5, r6, lr}
 8000fda:	4604      	mov	r4, r0
    HAL::initialize();
 8000fdc:	f00e fe33 	bl	800fc46 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe0:	6823      	ldr	r3, [r4, #0]
 8000fe2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe4:	f013 fddc 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 8000fe8:	4601      	mov	r1, r0
 8000fea:	4620      	mov	r0, r4
 8000fec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000fee:	6823      	ldr	r3, [r4, #0]
 8000ff0:	4a05      	ldr	r2, [pc, #20]	; (8001008 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ff6:	4620      	mov	r0, r4
 8000ff8:	46ac      	mov	ip, r5
 8000ffa:	2300      	movs	r3, #0
}
 8000ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001000:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001004:	4760      	bx	ip
 8001006:	bf00      	nop
 8001008:	d004b000 	.word	0xd004b000

0800100c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800100c:	f00e be02 	b.w	800fc14 <_ZN8touchgfx3HAL10beginFrameEv>

08001010 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001010:	f00e be0c 	b.w	800fc2c <_ZN8touchgfx3HAL8endFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001014:	f00e bdc8 	b.w	800fba8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001018 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001018:	f00e bf29 	b.w	800fe6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800101c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001020:	b112      	cbz	r2, 8001028 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001022:	6803      	ldr	r3, [r0, #0]
 8001024:	695b      	ldr	r3, [r3, #20]
 8001026:	4718      	bx	r3
    }
 8001028:	4770      	bx	lr
	...

0800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800102c:	4b04      	ldr	r3, [pc, #16]	; (8001040 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800102e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001032:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001036:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103a:	f3bf 8f6f 	isb	sy
}
 800103e:	4770      	bx	lr
 8001040:	e000e100 	.word	0xe000e100

08001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001044:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001046:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001048:	4e12      	ldr	r6, [pc, #72]	; (8001094 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800104c:	4b12      	ldr	r3, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800104e:	6003      	str	r3, [r0, #0]
 8001050:	6833      	ldr	r3, [r6, #0]
 8001052:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001056:	4605      	mov	r5, r0
 8001058:	b10a      	cbz	r2, 800105e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800105c:	b900      	cbnz	r0, 8001060 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800105e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001060:	6803      	ldr	r3, [r0, #0]
 8001062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001064:	4798      	blx	r3
        return auxiliaryLCD;
 8001066:	6833      	ldr	r3, [r6, #0]
 8001068:	fab0 f480 	clz	r4, r0
 800106c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800106e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001070:	b130      	cbz	r0, 8001080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001072:	6803      	ldr	r3, [r0, #0]
 8001074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001076:	4798      	blx	r3
 8001078:	2800      	cmp	r0, #0
 800107a:	bf08      	it	eq
 800107c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001080:	b92c      	cbnz	r4, 800108e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001082:	4b06      	ldr	r3, [pc, #24]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001084:	4a06      	ldr	r2, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001086:	4807      	ldr	r0, [pc, #28]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001088:	212c      	movs	r1, #44	; 0x2c
 800108a:	f028 fc13 	bl	80298b4 <__assert_func>
    }
 800108e:	4628      	mov	r0, r5
 8001090:	bd70      	pop	{r4, r5, r6, pc}
 8001092:	bf00      	nop
 8001094:	20012da4 	.word	0x20012da4
 8001098:	0802b0c0 	.word	0x0802b0c0
 800109c:	0802afbc 	.word	0x0802afbc
 80010a0:	0802b01a 	.word	0x0802b01a
 80010a4:	0802b053 	.word	0x0802b053

080010a8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010a8:	4770      	bx	lr
	...

080010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b0:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010b6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010ba:	d105      	bne.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010bc:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c0:	4281      	cmp	r1, r0
 80010c2:	d8fb      	bhi.n	80010bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010c8:	4f17      	ldr	r7, [pc, #92]	; (8001128 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ca:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ce:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d2:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d6:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010da:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010dc:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010de:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e0:	b2db      	uxtb	r3, r3
 80010e2:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e4:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e8:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ec:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f0:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f4:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010f8:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010fc:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001100:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001104:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001106:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800110e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001112:	fbbe fef5 	udiv	lr, lr, r5
 8001116:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800111e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001122:	4281      	cmp	r1, r0
 8001124:	d8de      	bhi.n	80010e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8001126:	e7cd      	b.n	80010c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8001128:	fffff800 	.word	0xfffff800

0800112c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800112c:	b510      	push	{r4, lr}
        return instance;
 800112e:	4c14      	ldr	r4, [pc, #80]	; (8001180 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001130:	6823      	ldr	r3, [r4, #0]
 8001132:	b323      	cbz	r3, 800117e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001134:	4b13      	ldr	r3, [pc, #76]	; (8001184 <HAL_LTDC_LineEventCallback+0x58>)
 8001136:	4a14      	ldr	r2, [pc, #80]	; (8001188 <HAL_LTDC_LineEventCallback+0x5c>)
 8001138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113a:	8811      	ldrh	r1, [r2, #0]
 800113c:	428b      	cmp	r3, r1
 800113e:	d113      	bne.n	8001168 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001140:	4b12      	ldr	r3, [pc, #72]	; (800118c <HAL_LTDC_LineEventCallback+0x60>)
 8001142:	8819      	ldrh	r1, [r3, #0]
 8001144:	f009 ff44 	bl	800afd0 <HAL_LTDC_ProgramLineEvent>
 8001148:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800114e:	3301      	adds	r3, #1
 8001150:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001154:	f7ff fcea 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001158:	6820      	ldr	r0, [r4, #0]
 800115a:	f00f fab3 	bl	80106c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800115e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001162:	2000      	movs	r0, #0
 8001164:	f7ff bb62 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001168:	f009 ff32 	bl	800afd0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800116c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800116e:	6803      	ldr	r3, [r0, #0]
 8001170:	6a1b      	ldr	r3, [r3, #32]
 8001172:	4798      	blx	r3
    }
 8001174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001178:	2000      	movs	r0, #0
 800117a:	f7ff bb6f 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800117e:	bd10      	pop	{r4, pc}
 8001180:	20012da4 	.word	0x20012da4
 8001184:	40016800 	.word	0x40016800
 8001188:	200018ce 	.word	0x200018ce
 800118c:	200018cc 	.word	0x200018cc

08001190 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001194:	ed2d 8b02 	vpush	{d8}
 8001198:	b091      	sub	sp, #68	; 0x44
 800119a:	af00      	add	r7, sp, #0
 800119c:	4605      	mov	r5, r0
 800119e:	4688      	mov	r8, r1
 80011a0:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a2:	f000 fdc5 	bl	8001d30 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011a6:	b203      	sxth	r3, r0
 80011a8:	60bb      	str	r3, [r7, #8]
 80011aa:	009b      	lsls	r3, r3, #2
 80011ac:	607b      	str	r3, [r7, #4]
 80011ae:	3307      	adds	r3, #7
 80011b0:	f023 0307 	bic.w	r3, r3, #7
 80011b4:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011b8:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011ba:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011bc:	b1f0      	cbz	r0, 80011fc <calculate_freq_and_signalstrength+0x6c>
 80011be:	3d01      	subs	r5, #1
 80011c0:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c2:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c4:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	f000 fdb1 	bl	8001d2c <MEAS_get_num_of_chan>
 80011ca:	fb06 5000 	mla	r0, r6, r0, r5
 80011ce:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d2:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011d6:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011d8:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011dc:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011de:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e2:	d1f0      	bne.n	80011c6 <calculate_freq_and_signalstrength+0x36>
 80011e4:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011e6:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001294 <calculate_freq_and_signalstrength+0x104>
 80011ea:	4456      	add	r6, sl
 80011ec:	edd9 7a00 	vldr	s15, [r9]
 80011f0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f4:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011f8:	454e      	cmp	r6, r9
 80011fa:	d1f7      	bne.n	80011ec <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80011fc:	68bb      	ldr	r3, [r7, #8]
 80011fe:	466a      	mov	r2, sp
 8001200:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001204:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001206:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120a:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 800120c:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800120e:	b2a1      	uxth	r1, r4
 8001210:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001214:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001218:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800121c:	f026 fc76 	bl	8027b0c <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001220:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001222:	2300      	movs	r3, #0
 8001224:	4651      	mov	r1, sl
 8001226:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122a:	462a      	mov	r2, r5
 800122c:	f026 fcf2 	bl	8027c14 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001230:	4622      	mov	r2, r4
 8001232:	4629      	mov	r1, r5
 8001234:	4628      	mov	r0, r5
 8001236:	f027 f95b 	bl	80284f0 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123a:	f000 fd7b 	bl	8001d34 <MEAS_get_samp_freq>
 800123e:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001242:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 8001246:	edd9 7a00 	vldr	s15, [r9]
 800124a:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800124e:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001252:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001256:	f107 021c 	add.w	r2, r7, #28
 800125a:	4621      	mov	r1, r4
 800125c:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800125e:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001262:	f026 fbeb 	bl	8027a3c <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001266:	edd7 7a06 	vldr	s15, [r7, #24]
 800126a:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 800126e:	f000 fd61 	bl	8001d34 <MEAS_get_samp_freq>
 8001272:	ee07 0a90 	vmov	s15, r0
 8001276:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127a:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800127e:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001282:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001284:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8001288:	46bd      	mov	sp, r7
 800128a:	ecbd 8b02 	vpop	{d8}
 800128e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001292:	bf00      	nop
 8001294:	44fff000 	.word	0x44fff000

08001298 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001298:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129a:	2064      	movs	r0, #100	; 0x64
 800129c:	f00b fa76 	bl	800c78c <osDelay>
  for(;;)
 80012a0:	e7fb      	b.n	800129a <StartDefaultTask+0x2>
 80012a2:	bf00      	nop

080012a4 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	4c10      	ldr	r4, [pc, #64]	; (80012e8 <StartTimeoutTask+0x44>)
 80012a8:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80012f4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ac:	4f0f      	ldr	r7, [pc, #60]	; (80012ec <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012ae:	4e10      	ldr	r6, [pc, #64]	; (80012f0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80012b0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b2:	2300      	movs	r3, #0
 80012b4:	461a      	mov	r2, r3
 80012b6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012b8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012ba:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80012be:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012c0:	f00b fb60 	bl	800c984 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012c6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012c8:	4638      	mov	r0, r7
 80012ca:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80012cc:	b912      	cbnz	r2, 80012d4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80012ce:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012d0:	f008 f862 	bl	8009398 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012d4:	4630      	mov	r0, r6
 80012d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012da:	f008 f861 	bl	80093a0 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80012de:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012e2:	f00b fa53 	bl	800c78c <osDelay>
	  sleep_timeout_value--;
 80012e6:	e7e3      	b.n	80012b0 <StartTimeoutTask+0xc>
 80012e8:	20000014 	.word	0x20000014
 80012ec:	40021000 	.word	0x40021000
 80012f0:	40021800 	.word	0x40021800
 80012f4:	200018d8 	.word	0x200018d8

080012f8 <updateGUI_test>:
	return sleep_timeout_value;
 80012f8:	4b01      	ldr	r3, [pc, #4]	; (8001300 <updateGUI_test+0x8>)
}
 80012fa:	6818      	ldr	r0, [r3, #0]
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop
 8001300:	20000014 	.word	0x20000014

08001304 <gyro_disable>:
{
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001306:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001308:	4e1f      	ldr	r6, [pc, #124]	; (8001388 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800130a:	4d20      	ldr	r5, [pc, #128]	; (800138c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800130c:	4c20      	ldr	r4, [pc, #128]	; (8001390 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800130e:	2700      	movs	r7, #0
 8001310:	9700      	str	r7, [sp, #0]
 8001312:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001314:	f043 0304 	orr.w	r3, r3, #4
 8001318:	6333      	str	r3, [r6, #48]	; 0x30
 800131a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800131c:	f003 0304 	and.w	r3, r3, #4
 8001320:	9300      	str	r3, [sp, #0]
 8001322:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001324:	682b      	ldr	r3, [r5, #0]
 8001326:	f023 030c 	bic.w	r3, r3, #12
 800132a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800132c:	682b      	ldr	r3, [r5, #0]
 800132e:	f043 0304 	orr.w	r3, r3, #4
 8001332:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001334:	69ab      	ldr	r3, [r5, #24]
 8001336:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800133a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800133c:	200a      	movs	r0, #10
 800133e:	f007 fe4d 	bl	8008fdc <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	f043 030c 	orr.w	r3, r3, #12
 8001348:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800134a:	9701      	str	r7, [sp, #4]
 800134c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800134e:	f043 0320 	orr.w	r3, r3, #32
 8001352:	6333      	str	r3, [r6, #48]	; 0x30
 8001354:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001356:	f003 0320 	and.w	r3, r3, #32
 800135a:	9301      	str	r3, [sp, #4]
 800135c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800135e:	68a3      	ldr	r3, [r4, #8]
 8001360:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001364:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001366:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001368:	f023 030f 	bic.w	r3, r3, #15
 800136c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800136e:	68e3      	ldr	r3, [r4, #12]
 8001370:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001374:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001376:	200a      	movs	r0, #10
 8001378:	f007 fe30 	bl	8008fdc <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001382:	6023      	str	r3, [r4, #0]
}
 8001384:	b003      	add	sp, #12
 8001386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001388:	40023800 	.word	0x40023800
 800138c:	40020800 	.word	0x40020800
 8001390:	40021400 	.word	0x40021400

08001394 <SystemClock_Config>:
{
 8001394:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001396:	2400      	movs	r4, #0
{
 8001398:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800139a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800139e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013a2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013aa:	4a1e      	ldr	r2, [pc, #120]	; (8001424 <SystemClock_Config+0x90>)
 80013ac:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013ae:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b2:	4b1d      	ldr	r3, [pc, #116]	; (8001428 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80013b8:	6411      	str	r1, [r2, #64]	; 0x40
 80013ba:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80013bc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80013c0:	9201      	str	r2, [sp, #4]
 80013c2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013c4:	9402      	str	r4, [sp, #8]
 80013c6:	681a      	ldr	r2, [r3, #0]
 80013c8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013cc:	601a      	str	r2, [r3, #0]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013d4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013d6:	2201      	movs	r2, #1
 80013d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013dc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013e2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013e6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013ea:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013ee:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013f2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013f4:	2202      	movs	r2, #2
 80013f6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013f8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013fa:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013fe:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001400:	f009 fe08 	bl	800b014 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001404:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001406:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800140a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800140e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001412:	a803      	add	r0, sp, #12
 8001414:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001416:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800141a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800141c:	f00a f812 	bl	800b444 <HAL_RCC_ClockConfig>
}
 8001420:	b015      	add	sp, #84	; 0x54
 8001422:	bd30      	pop	{r4, r5, pc}
 8001424:	40023800 	.word	0x40023800
 8001428:	40007000 	.word	0x40007000

0800142c <main>:
{
 800142c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001430:	2400      	movs	r4, #0
{
 8001432:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001434:	f007 fda6 	bl	8008f84 <HAL_Init>
  SystemClock_Config();
 8001438:	f7ff ffac 	bl	8001394 <SystemClock_Config>
  gyro_disable();
 800143c:	f7ff ff62 	bl	8001304 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001440:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001444:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001448:	4bbe      	ldr	r3, [pc, #760]	; (8001744 <main+0x318>)
 800144a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800144c:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001450:	48bd      	ldr	r0, [pc, #756]	; (8001748 <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001452:	4dbe      	ldr	r5, [pc, #760]	; (800174c <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001454:	f041 0110 	orr.w	r1, r1, #16
 8001458:	6319      	str	r1, [r3, #48]	; 0x30
 800145a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800145c:	f001 0110 	and.w	r1, r1, #16
 8001460:	9100      	str	r1, [sp, #0]
 8001462:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001464:	9401      	str	r4, [sp, #4]
 8001466:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001468:	f041 0120 	orr.w	r1, r1, #32
 800146c:	6319      	str	r1, [r3, #48]	; 0x30
 800146e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001470:	f001 0120 	and.w	r1, r1, #32
 8001474:	9101      	str	r1, [sp, #4]
 8001476:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001478:	9402      	str	r4, [sp, #8]
 800147a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800147c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001480:	6319      	str	r1, [r3, #48]	; 0x30
 8001482:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001484:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001488:	9102      	str	r1, [sp, #8]
 800148a:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800148c:	9403      	str	r4, [sp, #12]
 800148e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001490:	f041 0104 	orr.w	r1, r1, #4
 8001494:	6319      	str	r1, [r3, #48]	; 0x30
 8001496:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001498:	f001 0104 	and.w	r1, r1, #4
 800149c:	9103      	str	r1, [sp, #12]
 800149e:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014a0:	9404      	str	r4, [sp, #16]
 80014a2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014a4:	f041 0101 	orr.w	r1, r1, #1
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0101 	and.w	r1, r1, #1
 80014b0:	9104      	str	r1, [sp, #16]
 80014b2:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014b4:	9405      	str	r4, [sp, #20]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0102 	orr.w	r1, r1, #2
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0102 	and.w	r1, r1, #2
 80014c4:	9105      	str	r1, [sp, #20]
 80014c6:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014c8:	9406      	str	r4, [sp, #24]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80014d8:	9106      	str	r1, [sp, #24]
 80014da:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014dc:	9407      	str	r4, [sp, #28]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0108 	orr.w	r1, r1, #8
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014e8:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ec:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014ee:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f0:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014f2:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f4:	f007 ff50 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80014f8:	4893      	ldr	r0, [pc, #588]	; (8001748 <main+0x31c>)
 80014fa:	2120      	movs	r1, #32
 80014fc:	2201      	movs	r2, #1
 80014fe:	f007 ff4b 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001502:	4893      	ldr	r0, [pc, #588]	; (8001750 <main+0x324>)
 8001504:	4622      	mov	r2, r4
 8001506:	2114      	movs	r1, #20
 8001508:	f007 ff46 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 800150c:	4891      	ldr	r0, [pc, #580]	; (8001754 <main+0x328>)
 800150e:	4622      	mov	r2, r4
 8001510:	2180      	movs	r1, #128	; 0x80
 8001512:	f007 ff41 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001516:	4890      	ldr	r0, [pc, #576]	; (8001758 <main+0x32c>)
 8001518:	4622      	mov	r2, r4
 800151a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800151e:	f007 ff3b 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001522:	488e      	ldr	r0, [pc, #568]	; (800175c <main+0x330>)
 8001524:	4622      	mov	r2, r4
 8001526:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800152a:	f007 ff35 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 800152e:	488c      	ldr	r0, [pc, #560]	; (8001760 <main+0x334>)
 8001530:	4622      	mov	r2, r4
 8001532:	2104      	movs	r1, #4
 8001534:	f007 ff30 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001538:	2201      	movs	r2, #1
 800153a:	4889      	ldr	r0, [pc, #548]	; (8001760 <main+0x334>)
 800153c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001540:	f007 ff2a 	bl	8009398 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001544:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001546:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800154a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800154c:	487e      	ldr	r0, [pc, #504]	; (8001748 <main+0x31c>)
 800154e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001550:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001558:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800155c:	f007 fdd8 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001560:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001564:	4878      	ldr	r0, [pc, #480]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001566:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001568:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800156a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800156e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001570:	f007 fdce 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001574:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001576:	4874      	ldr	r0, [pc, #464]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001578:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800157a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800157c:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800157e:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001582:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001586:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001588:	f007 fdc2 	bl	8009110 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158c:	4870      	ldr	r0, [pc, #448]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800158e:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001592:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001598:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800159a:	f007 fdb9 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 800159e:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a0:	486c      	ldr	r0, [pc, #432]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80015a2:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015a6:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015aa:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ae:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b0:	f007 fdae 	bl	8009110 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b4:	4866      	ldr	r0, [pc, #408]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ba:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015be:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015c2:	f007 fda5 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015c6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015ca:	4863      	ldr	r0, [pc, #396]	; (8001758 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015cc:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015ce:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d4:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d6:	f007 fd9b 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015da:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	485f      	ldr	r0, [pc, #380]	; (800175c <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015e0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ea:	f007 fd91 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015ee:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f2:	485b      	ldr	r0, [pc, #364]	; (8001760 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015f4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fc:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015fe:	f007 fd87 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001602:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	4853      	ldr	r0, [pc, #332]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001608:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800160a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 800160c:	230f      	movs	r3, #15
 800160e:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001610:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001614:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001616:	f007 fd7b 	bl	8009110 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800161a:	4622      	mov	r2, r4
 800161c:	2105      	movs	r1, #5
 800161e:	2009      	movs	r0, #9
 8001620:	f007 fd00 	bl	8009024 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001624:	2009      	movs	r0, #9
 8001626:	f007 fd3b 	bl	80090a0 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800162a:	484e      	ldr	r0, [pc, #312]	; (8001764 <main+0x338>)
 800162c:	4b4e      	ldr	r3, [pc, #312]	; (8001768 <main+0x33c>)
 800162e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001630:	f007 fd44 	bl	80090bc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001634:	494d      	ldr	r1, [pc, #308]	; (800176c <main+0x340>)
 8001636:	4b4e      	ldr	r3, [pc, #312]	; (8001770 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001638:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800163a:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800163e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001642:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001644:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001648:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164c:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001650:	f008 f908 	bl	8009864 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001654:	4651      	mov	r1, sl
 8001656:	4628      	mov	r0, r5
 8001658:	f009 fad0 	bl	800abfc <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165c:	4621      	mov	r1, r4
 800165e:	4628      	mov	r0, r5
 8001660:	f009 faec 	bl	800ac3c <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f8df c118 	ldr.w	ip, [pc, #280]	; 8001780 <main+0x354>
  hspi5.Instance = SPI5;
 8001668:	4842      	ldr	r0, [pc, #264]	; (8001774 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800166a:	4d43      	ldr	r5, [pc, #268]	; (8001778 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166e:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001672:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001676:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800167a:	2318      	movs	r3, #24
 800167c:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001680:	230a      	movs	r3, #10
 8001682:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001684:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001688:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001690:	f00a f9c6 	bl	800ba20 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001694:	2307      	movs	r3, #7
 8001696:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001698:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800169a:	4b38      	ldr	r3, [pc, #224]	; (800177c <main+0x350>)
 800169c:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800169e:	2040      	movs	r0, #64	; 0x40
 80016a0:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80016a4:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80016ac:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016ae:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b4:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016b6:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b8:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016bc:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c0:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016c2:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c4:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 80016c8:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 80016cc:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 80016ce:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d0:	f00a f8b4 	bl	800b83c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d8:	a909      	add	r1, sp, #36	; 0x24
 80016da:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016dc:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016e0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 80016e4:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e6:	f00a f8cb 	bl	800b880 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016ea:	4630      	mov	r0, r6
 80016ec:	f007 fc76 	bl	8008fdc <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f4:	a909      	add	r1, sp, #36	; 0x24
 80016f6:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016fc:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f00a f8be 	bl	800b880 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001704:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001708:	a909      	add	r1, sp, #36	; 0x24
 800170a:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001710:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001714:	f00a f8b4 	bl	800b880 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001718:	f44f 730c 	mov.w	r3, #560	; 0x230
 800171c:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171e:	9b08      	ldr	r3, [sp, #32]
 8001720:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001722:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001726:	a909      	add	r1, sp, #36	; 0x24
 8001728:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800172a:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800172e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001730:	f00a f8a6 	bl	800b880 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001734:	4628      	mov	r0, r5
 8001736:	f240 516a 	movw	r1, #1386	; 0x56a
 800173a:	f00a f8bf 	bl	800b8bc <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800173e:	2234      	movs	r2, #52	; 0x34
 8001740:	e020      	b.n	8001784 <main+0x358>
 8001742:	bf00      	nop
 8001744:	40023800 	.word	0x40023800
 8001748:	40021000 	.word	0x40021000
 800174c:	200018ec 	.word	0x200018ec
 8001750:	40020800 	.word	0x40020800
 8001754:	40020000 	.word	0x40020000
 8001758:	40020400 	.word	0x40020400
 800175c:	40020c00 	.word	0x40020c00
 8001760:	40021800 	.word	0x40021800
 8001764:	200018e4 	.word	0x200018e4
 8001768:	40023000 	.word	0x40023000
 800176c:	40005c00 	.word	0x40005c00
 8001770:	000186a0 	.word	0x000186a0
 8001774:	20001a1c 	.word	0x20001a1c
 8001778:	200019e8 	.word	0x200019e8
 800177c:	a0000140 	.word	0xa0000140
 8001780:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8001784:	4d3a      	ldr	r5, [pc, #232]	; (8001870 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001786:	4621      	mov	r1, r4
 8001788:	eb0d 0002 	add.w	r0, sp, r2
 800178c:	f028 fa97 	bl	8029cbe <memset>
  hltdc.Instance = LTDC;
 8001790:	4b38      	ldr	r3, [pc, #224]	; (8001874 <main+0x448>)
 8001792:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8001794:	2309      	movs	r3, #9
 8001796:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001798:	231d      	movs	r3, #29
 800179a:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800179c:	f240 1b0d 	movw	fp, #269	; 0x10d
 80017a0:	f240 1343 	movw	r3, #323	; 0x143
 80017a4:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80017a8:	f240 1217 	movw	r2, #279	; 0x117
 80017ac:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80017b0:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017b2:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80017b4:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80017b8:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80017ba:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80017be:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 80017c2:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80017c6:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017ca:	f009 fa5b 	bl	800ac84 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80017ce:	23f0      	movs	r3, #240	; 0xf0
 80017d0:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 80017d2:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 80017d4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80017d8:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 80017da:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 80017dc:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017de:	a90d      	add	r1, sp, #52	; 0x34
 80017e0:	4622      	mov	r2, r4
 80017e2:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017e4:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017e6:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80017ea:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 80017ec:	4d22      	ldr	r5, [pc, #136]	; (8001878 <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 80017ee:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80017f4:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017f6:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 80017f8:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 80017fa:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 80017fc:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001800:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001804:	f009 fb14 	bl	800ae30 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001808:	4b1c      	ldr	r3, [pc, #112]	; (800187c <main+0x450>)
 800180a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001810:	682b      	ldr	r3, [r5, #0]
 8001812:	68db      	ldr	r3, [r3, #12]
 8001814:	4798      	blx	r3
  MX_TouchGFX_Init();
 8001816:	f7fe ff45 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800181a:	f7fe ff41 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 800181e:	f7ff fd71 	bl	8001304 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001822:	f000 f945 	bl	8001ab0 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001826:	f000 f977 	bl	8001b18 <MEAS_timer_init>
  osKernelInitialize();
 800182a:	f00a ff37 	bl	800c69c <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800182e:	4a14      	ldr	r2, [pc, #80]	; (8001880 <main+0x454>)
 8001830:	4639      	mov	r1, r7
 8001832:	4650      	mov	r0, sl
 8001834:	f00b f86c 	bl	800c910 <osMessageQueueNew>
 8001838:	4b12      	ldr	r3, [pc, #72]	; (8001884 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800183a:	4a13      	ldr	r2, [pc, #76]	; (8001888 <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800183c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800183e:	4621      	mov	r1, r4
 8001840:	4812      	ldr	r0, [pc, #72]	; (800188c <main+0x460>)
 8001842:	f00a ff57 	bl	800c6f4 <osThreadNew>
 8001846:	4b12      	ldr	r3, [pc, #72]	; (8001890 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001848:	4a12      	ldr	r2, [pc, #72]	; (8001894 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800184a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800184c:	4621      	mov	r1, r4
 800184e:	4812      	ldr	r0, [pc, #72]	; (8001898 <main+0x46c>)
 8001850:	f00a ff50 	bl	800c6f4 <osThreadNew>
 8001854:	4b11      	ldr	r3, [pc, #68]	; (800189c <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001856:	4a12      	ldr	r2, [pc, #72]	; (80018a0 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001858:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800185a:	4621      	mov	r1, r4
 800185c:	4811      	ldr	r0, [pc, #68]	; (80018a4 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800185e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001860:	f00a ff48 	bl	800c6f4 <osThreadNew>
 8001864:	4b10      	ldr	r3, [pc, #64]	; (80018a8 <main+0x47c>)
 8001866:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001868:	f00a ff2a 	bl	800c6c0 <osKernelStart>
  while (1)
 800186c:	e7fe      	b.n	800186c <main+0x440>
 800186e:	bf00      	nop
 8001870:	20001940 	.word	0x20001940
 8001874:	40016800 	.word	0x40016800
 8001878:	200018d4 	.word	0x200018d4
 800187c:	20000018 	.word	0x20000018
 8001880:	0802b130 	.word	0x0802b130
 8001884:	200018d8 	.word	0x200018d8
 8001888:	0802b16c 	.word	0x0802b16c
 800188c:	08001299 	.word	0x08001299
 8001890:	200018e0 	.word	0x200018e0
 8001894:	0802b10c 	.word	0x0802b10c
 8001898:	080006b5 	.word	0x080006b5
 800189c:	200018d0 	.word	0x200018d0
 80018a0:	0802b148 	.word	0x0802b148
 80018a4:	080012a5 	.word	0x080012a5
 80018a8:	200018dc 	.word	0x200018dc

080018ac <IOE_Init>:
 80018ac:	4770      	bx	lr
 80018ae:	bf00      	nop

080018b0 <IOE_ITConfig>:
 80018b0:	4770      	bx	lr
 80018b2:	bf00      	nop

080018b4 <IOE_Write>:
{
 80018b4:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018b6:	4c09      	ldr	r4, [pc, #36]	; (80018dc <IOE_Write+0x28>)
{
 80018b8:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018ba:	6824      	ldr	r4, [r4, #0]
 80018bc:	9402      	str	r4, [sp, #8]
{
 80018be:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018c0:	2301      	movs	r3, #1
 80018c2:	f88d 4017 	strb.w	r4, [sp, #23]
 80018c6:	f10d 0417 	add.w	r4, sp, #23
 80018ca:	460a      	mov	r2, r1
 80018cc:	9301      	str	r3, [sp, #4]
 80018ce:	4601      	mov	r1, r0
 80018d0:	9400      	str	r4, [sp, #0]
 80018d2:	4803      	ldr	r0, [pc, #12]	; (80018e0 <IOE_Write+0x2c>)
 80018d4:	f008 f88e 	bl	80099f4 <HAL_I2C_Mem_Write>
}
 80018d8:	b006      	add	sp, #24
 80018da:	bd10      	pop	{r4, pc}
 80018dc:	2000000c 	.word	0x2000000c
 80018e0:	200018ec 	.word	0x200018ec

080018e4 <IOE_Read>:
{
 80018e4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018e6:	4b0b      	ldr	r3, [pc, #44]	; (8001914 <IOE_Read+0x30>)
{
 80018e8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	9302      	str	r3, [sp, #8]
{
 80018ee:	4684      	mov	ip, r0
 80018f0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018f2:	2301      	movs	r3, #1
 80018f4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80018f8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018fa:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80018fe:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001902:	4661      	mov	r1, ip
 8001904:	4804      	ldr	r0, [pc, #16]	; (8001918 <IOE_Read+0x34>)
 8001906:	f008 f967 	bl	8009bd8 <HAL_I2C_Mem_Read>
}
 800190a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800190e:	b007      	add	sp, #28
 8001910:	f85d fb04 	ldr.w	pc, [sp], #4
 8001914:	2000000c 	.word	0x2000000c
 8001918:	200018ec 	.word	0x200018ec

0800191c <IOE_ReadMultiple>:
{
 800191c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800191e:	4c09      	ldr	r4, [pc, #36]	; (8001944 <IOE_ReadMultiple+0x28>)
{
 8001920:	b084      	sub	sp, #16
 8001922:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001924:	6820      	ldr	r0, [r4, #0]
 8001926:	9002      	str	r0, [sp, #8]
 8001928:	e9cd 2300 	strd	r2, r3, [sp]
 800192c:	4806      	ldr	r0, [pc, #24]	; (8001948 <IOE_ReadMultiple+0x2c>)
 800192e:	460a      	mov	r2, r1
 8001930:	2301      	movs	r3, #1
 8001932:	4661      	mov	r1, ip
 8001934:	f008 f950 	bl	8009bd8 <HAL_I2C_Mem_Read>
}
 8001938:	3800      	subs	r0, #0
 800193a:	bf18      	it	ne
 800193c:	2001      	movne	r0, #1
 800193e:	b004      	add	sp, #16
 8001940:	bd10      	pop	{r4, pc}
 8001942:	bf00      	nop
 8001944:	2000000c 	.word	0x2000000c
 8001948:	200018ec 	.word	0x200018ec

0800194c <IOE_Delay>:
 800194c:	f007 bb46 	b.w	8008fdc <HAL_Delay>

08001950 <LCD_IO_Init>:
{
 8001950:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001952:	4806      	ldr	r0, [pc, #24]	; (800196c <LCD_IO_Init+0x1c>)
 8001954:	2200      	movs	r2, #0
 8001956:	2104      	movs	r1, #4
 8001958:	f007 fd1e 	bl	8009398 <HAL_GPIO_WritePin>
}
 800195c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001960:	4802      	ldr	r0, [pc, #8]	; (800196c <LCD_IO_Init+0x1c>)
 8001962:	2201      	movs	r2, #1
 8001964:	2104      	movs	r1, #4
 8001966:	f007 bd17 	b.w	8009398 <HAL_GPIO_WritePin>
 800196a:	bf00      	nop
 800196c:	40020800 	.word	0x40020800

08001970 <LCD_IO_WriteData>:
{
 8001970:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001972:	4d10      	ldr	r5, [pc, #64]	; (80019b4 <LCD_IO_WriteData+0x44>)
{
 8001974:	b083      	sub	sp, #12
 8001976:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001978:	2201      	movs	r2, #1
 800197a:	480f      	ldr	r0, [pc, #60]	; (80019b8 <LCD_IO_WriteData+0x48>)
 800197c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001980:	f007 fd0a 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001984:	4628      	mov	r0, r5
 8001986:	2200      	movs	r2, #0
 8001988:	2104      	movs	r1, #4
 800198a:	f007 fd05 	bl	8009398 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800198e:	4b0b      	ldr	r3, [pc, #44]	; (80019bc <LCD_IO_WriteData+0x4c>)
 8001990:	480b      	ldr	r0, [pc, #44]	; (80019c0 <LCD_IO_WriteData+0x50>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001998:	f10d 0106 	add.w	r1, sp, #6
 800199c:	2201      	movs	r2, #1
 800199e:	f00a f8a1 	bl	800bae4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a2:	2201      	movs	r2, #1
 80019a4:	2104      	movs	r1, #4
 80019a6:	4628      	mov	r0, r5
}
 80019a8:	b003      	add	sp, #12
 80019aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019ae:	f007 bcf3 	b.w	8009398 <HAL_GPIO_WritePin>
 80019b2:	bf00      	nop
 80019b4:	40020800 	.word	0x40020800
 80019b8:	40020c00 	.word	0x40020c00
 80019bc:	20000010 	.word	0x20000010
 80019c0:	20001a1c 	.word	0x20001a1c

080019c4 <LCD_IO_WriteReg>:
{
 80019c4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c6:	4d10      	ldr	r5, [pc, #64]	; (8001a08 <LCD_IO_WriteReg+0x44>)
{
 80019c8:	b083      	sub	sp, #12
 80019ca:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019cc:	2200      	movs	r2, #0
 80019ce:	480f      	ldr	r0, [pc, #60]	; (8001a0c <LCD_IO_WriteReg+0x48>)
 80019d0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019d4:	f007 fce0 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019d8:	4628      	mov	r0, r5
 80019da:	2200      	movs	r2, #0
 80019dc:	2104      	movs	r1, #4
 80019de:	f007 fcdb 	bl	8009398 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019e2:	4b0b      	ldr	r3, [pc, #44]	; (8001a10 <LCD_IO_WriteReg+0x4c>)
 80019e4:	480b      	ldr	r0, [pc, #44]	; (8001a14 <LCD_IO_WriteReg+0x50>)
 80019e6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80019e8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019ec:	f10d 0106 	add.w	r1, sp, #6
 80019f0:	2201      	movs	r2, #1
 80019f2:	f00a f877 	bl	800bae4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f6:	2201      	movs	r2, #1
 80019f8:	2104      	movs	r1, #4
 80019fa:	4628      	mov	r0, r5
}
 80019fc:	b003      	add	sp, #12
 80019fe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a02:	f007 bcc9 	b.w	8009398 <HAL_GPIO_WritePin>
 8001a06:	bf00      	nop
 8001a08:	40020800 	.word	0x40020800
 8001a0c:	40020c00 	.word	0x40020c00
 8001a10:	20000010 	.word	0x20000010
 8001a14:	20001a1c 	.word	0x20001a1c

08001a18 <LCD_IO_ReadData>:
{
 8001a18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1c:	4e19      	ldr	r6, [pc, #100]	; (8001a84 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a1e:	4f1a      	ldr	r7, [pc, #104]	; (8001a88 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a20:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001a8c <LCD_IO_ReadData+0x74>
 8001a24:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001a90 <LCD_IO_ReadData+0x78>
{
 8001a28:	b083      	sub	sp, #12
 8001a2a:	460c      	mov	r4, r1
 8001a2c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a2e:	2200      	movs	r2, #0
 8001a30:	4630      	mov	r0, r6
 8001a32:	2104      	movs	r1, #4
 8001a34:	f007 fcb0 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a38:	4638      	mov	r0, r7
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f007 fcaa 	bl	8009398 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a44:	f8d9 3000 	ldr.w	r3, [r9]
 8001a48:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001a4c:	a901      	add	r1, sp, #4
 8001a4e:	2201      	movs	r2, #1
 8001a50:	4640      	mov	r0, r8
 8001a52:	f00a f847 	bl	800bae4 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a56:	f8d9 3000 	ldr.w	r3, [r9]
 8001a5a:	4622      	mov	r2, r4
 8001a5c:	a901      	add	r1, sp, #4
 8001a5e:	4640      	mov	r0, r8
 8001a60:	f00a fae8 	bl	800c034 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a64:	4638      	mov	r0, r7
 8001a66:	2201      	movs	r2, #1
 8001a68:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a6c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a6e:	f007 fc93 	bl	8009398 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a72:	4630      	mov	r0, r6
 8001a74:	2201      	movs	r2, #1
 8001a76:	2104      	movs	r1, #4
 8001a78:	f007 fc8e 	bl	8009398 <HAL_GPIO_WritePin>
}
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	b003      	add	sp, #12
 8001a80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a84:	40020800 	.word	0x40020800
 8001a88:	40020c00 	.word	0x40020c00
 8001a8c:	20000010 	.word	0x20000010
 8001a90:	20001a1c 	.word	0x20001a1c

08001a94 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a94:	f007 baa2 	b.w	8008fdc <HAL_Delay>

08001a98 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a98:	4b03      	ldr	r3, [pc, #12]	; (8001aa8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a9a:	6802      	ldr	r2, [r0, #0]
 8001a9c:	429a      	cmp	r2, r3
 8001a9e:	d000      	beq.n	8001aa2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001aa0:	4770      	bx	lr
    HAL_IncTick();
 8001aa2:	f007 ba89 	b.w	8008fb8 <HAL_IncTick>
 8001aa6:	bf00      	nop
 8001aa8:	40001000 	.word	0x40001000

08001aac <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001aac:	4770      	bx	lr
 8001aae:	bf00      	nop

08001ab0 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001ab0:	b410      	push	{r4}
 8001ab2:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001ab4:	4b15      	ldr	r3, [pc, #84]	; (8001b0c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ab6:	4916      	ldr	r1, [pc, #88]	; (8001b10 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001ab8:	2400      	movs	r4, #0
 8001aba:	9400      	str	r4, [sp, #0]
 8001abc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001abe:	f042 0220 	orr.w	r2, r2, #32
 8001ac2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ac6:	f002 0220 	and.w	r2, r2, #32
 8001aca:	9200      	str	r2, [sp, #0]
 8001acc:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ace:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ad0:	4a10      	ldr	r2, [pc, #64]	; (8001b14 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ad2:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001ad6:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001ad8:	6808      	ldr	r0, [r1, #0]
 8001ada:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001ade:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001ae0:	9401      	str	r4, [sp, #4]
 8001ae2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ae4:	f041 0104 	orr.w	r1, r1, #4
 8001ae8:	6319      	str	r1, [r3, #48]	; 0x30
 8001aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aec:	f003 0304 	and.w	r3, r3, #4
 8001af0:	9301      	str	r3, [sp, #4]
 8001af2:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001af4:	6813      	ldr	r3, [r2, #0]
 8001af6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001afa:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001afc:	6813      	ldr	r3, [r2, #0]
 8001afe:	f043 030c 	orr.w	r3, r3, #12
 8001b02:	6013      	str	r3, [r2, #0]
}
 8001b04:	b003      	add	sp, #12
 8001b06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b0a:	4770      	bx	lr
 8001b0c:	40023800 	.word	0x40023800
 8001b10:	40021400 	.word	0x40021400
 8001b14:	40020800 	.word	0x40020800

08001b18 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001b18:	b410      	push	{r4}
 8001b1a:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b1c:	4a0e      	ldr	r2, [pc, #56]	; (8001b58 <MEAS_timer_init+0x40>)
 8001b1e:	2000      	movs	r0, #0
 8001b20:	9001      	str	r0, [sp, #4]
 8001b22:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001b24:	f041 0101 	orr.w	r1, r1, #1
 8001b28:	6411      	str	r1, [r2, #64]	; 0x40
 8001b2a:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b2c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b30:	f002 0201 	and.w	r2, r2, #1
 8001b34:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b36:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b3a:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b3c:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b3e:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b40:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001b42:	685a      	ldr	r2, [r3, #4]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001b44:	4905      	ldr	r1, [pc, #20]	; (8001b5c <MEAS_timer_init+0x44>)
 8001b46:	f042 0220 	orr.w	r2, r2, #32
 8001b4a:	605a      	str	r2, [r3, #4]
 8001b4c:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001b50:	b003      	add	sp, #12
 8001b52:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b56:	4770      	bx	lr
 8001b58:	40023800 	.word	0x40023800
 8001b5c:	e000e100 	.word	0xe000e100

08001b60 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001b60:	b410      	push	{r4}
 8001b62:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b64:	4a36      	ldr	r2, [pc, #216]	; (8001c40 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b66:	4b37      	ldr	r3, [pc, #220]	; (8001c44 <MEAS_ADC3_scan_init+0xe4>)
 8001b68:	4c37      	ldr	r4, [pc, #220]	; (8001c48 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b6a:	2100      	movs	r1, #0
 8001b6c:	9100      	str	r1, [sp, #0]
 8001b6e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001b70:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001b74:	6450      	str	r0, [r2, #68]	; 0x44
 8001b76:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001b78:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001b7c:	9000      	str	r0, [sp, #0]
 8001b7e:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b80:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001b82:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001b86:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001b88:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b8a:	f040 0004 	orr.w	r0, r0, #4
 8001b8e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001b90:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b92:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001b96:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001b98:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b9a:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001b9e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001ba0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001ba2:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001ba6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001ba8:	6858      	ldr	r0, [r3, #4]
 8001baa:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001bae:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001bb0:	6898      	ldr	r0, [r3, #8]
 8001bb2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001bb6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001bb8:	6898      	ldr	r0, [r3, #8]
 8001bba:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001bbe:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001bc0:	6898      	ldr	r0, [r3, #8]
 8001bc2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001bc6:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001bc8:	9101      	str	r1, [sp, #4]
 8001bca:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001bcc:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001bd0:	6310      	str	r0, [r2, #48]	; 0x30
 8001bd2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001bd4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001bd8:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001bda:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001bde:	9a01      	ldr	r2, [sp, #4]
 8001be0:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001be4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001be6:	f022 0201 	bic.w	r2, r2, #1
 8001bea:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001bec:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bee:	07d2      	lsls	r2, r2, #31
 8001bf0:	d4fc      	bmi.n	8001bec <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001bf2:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001bf4:	4815      	ldr	r0, [pc, #84]	; (8001c4c <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001bf6:	4916      	ldr	r1, [pc, #88]	; (8001c50 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001bf8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001bfc:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001bfe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c00:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c04:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001c06:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c08:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001c0c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001c0e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c10:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001c14:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001c16:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c18:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c1c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001c1e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c20:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001c24:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c26:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001c28:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c2c:	f042 0210 	orr.w	r2, r2, #16
 8001c30:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001c32:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c34:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c36:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001c38:	b003      	add	sp, #12
 8001c3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c3e:	4770      	bx	lr
 8001c40:	40023800 	.word	0x40023800
 8001c44:	40012200 	.word	0x40012200
 8001c48:	e000e100 	.word	0xe000e100
 8001c4c:	4001224c 	.word	0x4001224c
 8001c50:	20001a74 	.word	0x20001a74

08001c54 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c54:	4b1b      	ldr	r3, [pc, #108]	; (8001cc4 <DMA2_Stream1_IRQHandler+0x70>)
 8001c56:	681a      	ldr	r2, [r3, #0]
 8001c58:	0511      	lsls	r1, r2, #20
 8001c5a:	d400      	bmi.n	8001c5e <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001c5c:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c5e:	4a1a      	ldr	r2, [pc, #104]	; (8001cc8 <DMA2_Stream1_IRQHandler+0x74>)
 8001c60:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001c64:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001c68:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c6c:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c70:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001c74:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c76:	f022 0201 	bic.w	r2, r2, #1
 8001c7a:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001c7c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c7e:	07d2      	lsls	r2, r2, #31
 8001c80:	d4fc      	bmi.n	8001c7c <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001c82:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c84:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001c88:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001c8c:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c8e:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c90:	490e      	ldr	r1, [pc, #56]	; (8001ccc <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c92:	f023 0301 	bic.w	r3, r3, #1
 8001c96:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c98:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001c9a:	4b0d      	ldr	r3, [pc, #52]	; (8001cd0 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c9c:	f020 0001 	bic.w	r0, r0, #1
 8001ca0:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001ca2:	6888      	ldr	r0, [r1, #8]
 8001ca4:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001ca8:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001caa:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001cac:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001cb0:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001cb2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001cb4:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001cb8:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001cba:	6813      	ldr	r3, [r2, #0]
 8001cbc:	f023 0301 	bic.w	r3, r3, #1
 8001cc0:	6013      	str	r3, [r2, #0]
}
 8001cc2:	4770      	bx	lr
 8001cc4:	40026400 	.word	0x40026400
 8001cc8:	e000e100 	.word	0xe000e100
 8001ccc:	40012200 	.word	0x40012200
 8001cd0:	40023800 	.word	0x40023800

08001cd4 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001cd4:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001cd6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001cda:	2100      	movs	r1, #0
 8001cdc:	480f      	ldr	r0, [pc, #60]	; (8001d1c <MEAS_start_measure+0x48>)
 8001cde:	f027 ffee 	bl	8029cbe <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001ce2:	f7ff ff3d 	bl	8001b60 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001ce6:	4a0e      	ldr	r2, [pc, #56]	; (8001d20 <MEAS_start_measure+0x4c>)
 8001ce8:	490e      	ldr	r1, [pc, #56]	; (8001d24 <MEAS_start_measure+0x50>)
 8001cea:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001cec:	480e      	ldr	r0, [pc, #56]	; (8001d28 <MEAS_start_measure+0x54>)
 8001cee:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001cf2:	f043 0301 	orr.w	r3, r3, #1
 8001cf6:	6293      	str	r3, [r2, #40]	; 0x28
 8001cf8:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001cfc:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001cfe:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d00:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d04:	f043 0301 	orr.w	r3, r3, #1
 8001d08:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d0a:	680b      	ldr	r3, [r1, #0]
 8001d0c:	f043 0301 	orr.w	r3, r3, #1
 8001d10:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001d12:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001d14:	07db      	lsls	r3, r3, #31
 8001d16:	d4fc      	bmi.n	8001d12 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001d18:	4800      	ldr	r0, [pc, #0]	; (8001d1c <MEAS_start_measure+0x48>)
 8001d1a:	bd10      	pop	{r4, pc}
 8001d1c:	20001a74 	.word	0x20001a74
 8001d20:	40026400 	.word	0x40026400
 8001d24:	e000e100 	.word	0xe000e100
 8001d28:	40012200 	.word	0x40012200

08001d2c <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001d2c:	2004      	movs	r0, #4
 8001d2e:	4770      	bx	lr

08001d30 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001d30:	2040      	movs	r0, #64	; 0x40
 8001d32:	4770      	bx	lr

08001d34 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001d34:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001d38:	4770      	bx	lr
 8001d3a:	bf00      	nop

08001d3c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d3c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001d3e:	4b0e      	ldr	r3, [pc, #56]	; (8001d78 <HAL_MspInit+0x3c>)
 8001d40:	2200      	movs	r2, #0
 8001d42:	9200      	str	r2, [sp, #0]
 8001d44:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001d46:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001d4a:	6459      	str	r1, [r3, #68]	; 0x44
 8001d4c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001d4e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001d52:	9000      	str	r0, [sp, #0]
 8001d54:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d56:	9201      	str	r2, [sp, #4]
 8001d58:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001d5a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001d5e:	6418      	str	r0, [r3, #64]	; 0x40
 8001d60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d66:	9301      	str	r3, [sp, #4]
 8001d68:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d6a:	210f      	movs	r1, #15
 8001d6c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d70:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d72:	f007 b957 	b.w	8009024 <HAL_NVIC_SetPriority>
 8001d76:	bf00      	nop
 8001d78:	40023800 	.word	0x40023800

08001d7c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001d7c:	4b0b      	ldr	r3, [pc, #44]	; (8001dac <HAL_CRC_MspInit+0x30>)
 8001d7e:	6802      	ldr	r2, [r0, #0]
 8001d80:	429a      	cmp	r2, r3
 8001d82:	d000      	beq.n	8001d86 <HAL_CRC_MspInit+0xa>
 8001d84:	4770      	bx	lr
{
 8001d86:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001d88:	2200      	movs	r2, #0
 8001d8a:	9201      	str	r2, [sp, #4]
 8001d8c:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001d90:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001d94:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001d98:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001d9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001da2:	9301      	str	r3, [sp, #4]
 8001da4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001da6:	b002      	add	sp, #8
 8001da8:	4770      	bx	lr
 8001daa:	bf00      	nop
 8001dac:	40023000 	.word	0x40023000

08001db0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001db0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001db4:	4b2e      	ldr	r3, [pc, #184]	; (8001e70 <HAL_I2C_MspInit+0xc0>)
 8001db6:	6802      	ldr	r2, [r0, #0]
{
 8001db8:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dba:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001dbc:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dbe:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001dc2:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001dc6:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001dc8:	d002      	beq.n	8001dd0 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001dca:	b00a      	add	sp, #40	; 0x28
 8001dcc:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dd0:	4d28      	ldr	r5, [pc, #160]	; (8001e74 <HAL_I2C_MspInit+0xc4>)
 8001dd2:	9401      	str	r4, [sp, #4]
 8001dd4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd6:	4828      	ldr	r0, [pc, #160]	; (8001e78 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dd8:	f043 0304 	orr.w	r3, r3, #4
 8001ddc:	632b      	str	r3, [r5, #48]	; 0x30
 8001dde:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001de0:	f003 0304 	and.w	r3, r3, #4
 8001de4:	9301      	str	r3, [sp, #4]
 8001de6:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001de8:	9402      	str	r4, [sp, #8]
 8001dea:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dec:	f043 0301 	orr.w	r3, r3, #1
 8001df0:	632b      	str	r3, [r5, #48]	; 0x30
 8001df2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001df4:	f003 0301 	and.w	r3, r3, #1
 8001df8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001dfa:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001dfe:	f04f 0801 	mov.w	r8, #1
 8001e02:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e06:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e08:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001e0a:	2312      	movs	r3, #18
 8001e0c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001e10:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e14:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e16:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e18:	f007 f97a 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e1c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e1e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001e22:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e24:	4815      	ldr	r0, [pc, #84]	; (8001e7c <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e26:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e28:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001e2c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e30:	f007 f96e 	bl	8009110 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e34:	9403      	str	r4, [sp, #12]
 8001e36:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001e38:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e3c:	642b      	str	r3, [r5, #64]	; 0x40
 8001e3e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001e40:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001e44:	4622      	mov	r2, r4
 8001e46:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e48:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001e4a:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e4c:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001e4e:	f007 f8e9 	bl	8009024 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001e52:	2048      	movs	r0, #72	; 0x48
 8001e54:	f007 f924 	bl	80090a0 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001e58:	6a2b      	ldr	r3, [r5, #32]
 8001e5a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e5e:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001e60:	6a2b      	ldr	r3, [r5, #32]
 8001e62:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001e66:	622b      	str	r3, [r5, #32]
}
 8001e68:	b00a      	add	sp, #40	; 0x28
 8001e6a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001e6e:	bf00      	nop
 8001e70:	40005c00 	.word	0x40005c00
 8001e74:	40023800 	.word	0x40023800
 8001e78:	40020800 	.word	0x40020800
 8001e7c:	40020000 	.word	0x40020000

08001e80 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e84:	4604      	mov	r4, r0
 8001e86:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e88:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001e8a:	2230      	movs	r2, #48	; 0x30
 8001e8c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e8e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001e92:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001e96:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001e98:	f027 ff11 	bl	8029cbe <memset>
  if(hltdc->Instance==LTDC)
 8001e9c:	4b67      	ldr	r3, [pc, #412]	; (800203c <HAL_LTDC_MspInit+0x1bc>)
 8001e9e:	6822      	ldr	r2, [r4, #0]
 8001ea0:	429a      	cmp	r2, r3
 8001ea2:	d002      	beq.n	8001eaa <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001ea4:	b01a      	add	sp, #104	; 0x68
 8001ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001eaa:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001eac:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001eae:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001eb0:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001eb2:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001eb4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001eb8:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001eba:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ebc:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ebe:	f009 fb91 	bl	800b5e4 <HAL_RCCEx_PeriphCLKConfig>
 8001ec2:	2800      	cmp	r0, #0
 8001ec4:	f040 80b7 	bne.w	8002036 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ec8:	4b5d      	ldr	r3, [pc, #372]	; (8002040 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001eca:	485e      	ldr	r0, [pc, #376]	; (8002044 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ecc:	2400      	movs	r4, #0
 8001ece:	9401      	str	r4, [sp, #4]
 8001ed0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ed2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ed6:	645a      	str	r2, [r3, #68]	; 0x44
 8001ed8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001eda:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001ede:	9201      	str	r2, [sp, #4]
 8001ee0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ee2:	9402      	str	r4, [sp, #8]
 8001ee4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ee6:	f042 0220 	orr.w	r2, r2, #32
 8001eea:	631a      	str	r2, [r3, #48]	; 0x30
 8001eec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eee:	f002 0220 	and.w	r2, r2, #32
 8001ef2:	9202      	str	r2, [sp, #8]
 8001ef4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ef6:	9403      	str	r4, [sp, #12]
 8001ef8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001efa:	f042 0201 	orr.w	r2, r2, #1
 8001efe:	631a      	str	r2, [r3, #48]	; 0x30
 8001f00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f02:	f002 0201 	and.w	r2, r2, #1
 8001f06:	9203      	str	r2, [sp, #12]
 8001f08:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f0a:	9404      	str	r4, [sp, #16]
 8001f0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f0e:	f042 0202 	orr.w	r2, r2, #2
 8001f12:	631a      	str	r2, [r3, #48]	; 0x30
 8001f14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f16:	f002 0202 	and.w	r2, r2, #2
 8001f1a:	9204      	str	r2, [sp, #16]
 8001f1c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001f1e:	9405      	str	r4, [sp, #20]
 8001f20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f22:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001f26:	631a      	str	r2, [r3, #48]	; 0x30
 8001f28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f2a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001f2e:	9205      	str	r2, [sp, #20]
 8001f30:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f32:	9406      	str	r4, [sp, #24]
 8001f34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f36:	f042 0204 	orr.w	r2, r2, #4
 8001f3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f3e:	f002 0204 	and.w	r2, r2, #4
 8001f42:	9206      	str	r2, [sp, #24]
 8001f44:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f46:	9407      	str	r4, [sp, #28]
 8001f48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f4a:	f042 0208 	orr.w	r2, r2, #8
 8001f4e:	631a      	str	r2, [r3, #48]	; 0x30
 8001f50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f52:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001f56:	2600      	movs	r6, #0
 8001f58:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f5a:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f5c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f5e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001f60:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001f64:	2302      	movs	r3, #2
 8001f66:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f6a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f6e:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f70:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f72:	f007 f8cd 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f76:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f78:	f641 0258 	movw	r2, #6232	; 0x1858
 8001f7c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f7e:	4832      	ldr	r0, [pc, #200]	; (8002048 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f80:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f82:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f86:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f8a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f8e:	f007 f8bf 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f92:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f94:	2203      	movs	r2, #3
 8001f96:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f98:	482c      	ldr	r0, [pc, #176]	; (800204c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f9a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f9e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fa2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fa6:	f007 f8b3 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001faa:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001fac:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001fb0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fb2:	4826      	ldr	r0, [pc, #152]	; (800204c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fb4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001fb6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fba:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fbe:	f007 f8a7 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001fc4:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001fc8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fca:	4821      	ldr	r0, [pc, #132]	; (8002050 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fcc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001fce:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fd2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fd6:	f007 f89b 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fda:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001fdc:	22c0      	movs	r2, #192	; 0xc0
 8001fde:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	481c      	ldr	r0, [pc, #112]	; (8002054 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fe2:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001fe4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fe8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fec:	f007 f890 	bl	8009110 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ff0:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ff2:	2208      	movs	r2, #8
 8001ff4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ff6:	4818      	ldr	r0, [pc, #96]	; (8002058 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ff8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ffa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001ffe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002002:	f007 f885 	bl	8009110 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002006:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002008:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800200a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200e:	4810      	ldr	r0, [pc, #64]	; (8002050 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002010:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002014:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002018:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800201c:	f007 f878 	bl	8009110 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002020:	4622      	mov	r2, r4
 8002022:	2105      	movs	r1, #5
 8002024:	2058      	movs	r0, #88	; 0x58
 8002026:	f006 fffd 	bl	8009024 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800202a:	2058      	movs	r0, #88	; 0x58
 800202c:	f007 f838 	bl	80090a0 <HAL_NVIC_EnableIRQ>
}
 8002030:	b01a      	add	sp, #104	; 0x68
 8002032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002036:	f7ff fd39 	bl	8001aac <Error_Handler>
 800203a:	e745      	b.n	8001ec8 <HAL_LTDC_MspInit+0x48>
 800203c:	40016800 	.word	0x40016800
 8002040:	40023800 	.word	0x40023800
 8002044:	40021400 	.word	0x40021400
 8002048:	40020000 	.word	0x40020000
 800204c:	40020400 	.word	0x40020400
 8002050:	40021800 	.word	0x40021800
 8002054:	40020800 	.word	0x40020800
 8002058:	40020c00 	.word	0x40020c00
 800205c:	00000000 	.word	0x00000000

08002060 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002060:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002062:	4a1b      	ldr	r2, [pc, #108]	; (80020d0 <HAL_SPI_MspInit+0x70>)
 8002064:	6801      	ldr	r1, [r0, #0]
{
 8002066:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002068:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800206a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800206c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002070:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002074:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002076:	d001      	beq.n	800207c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002078:	b008      	add	sp, #32
 800207a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800207c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002080:	9300      	str	r3, [sp, #0]
 8002082:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002084:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002088:	6450      	str	r0, [r2, #68]	; 0x44
 800208a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800208c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002090:	9000      	str	r0, [sp, #0]
 8002092:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002094:	9301      	str	r3, [sp, #4]
 8002096:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002098:	480e      	ldr	r0, [pc, #56]	; (80020d4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800209a:	f043 0320 	orr.w	r3, r3, #32
 800209e:	6313      	str	r3, [r2, #48]	; 0x30
 80020a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80020a2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80020c8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80020a6:	f003 0320 	and.w	r3, r3, #32
 80020aa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020ac:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80020ae:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020b0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80020b2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80020b6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80020ba:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020bc:	f007 f828 	bl	8009110 <HAL_GPIO_Init>
}
 80020c0:	b008      	add	sp, #32
 80020c2:	bd10      	pop	{r4, pc}
 80020c4:	f3af 8000 	nop.w
 80020c8:	00000380 	.word	0x00000380
 80020cc:	00000002 	.word	0x00000002
 80020d0:	40015000 	.word	0x40015000
 80020d4:	40021400 	.word	0x40021400

080020d8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80020d8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80020da:	4a21      	ldr	r2, [pc, #132]	; (8002160 <HAL_TIM_Base_MspInit+0x88>)
 80020dc:	6803      	ldr	r3, [r0, #0]
 80020de:	4293      	cmp	r3, r2
{
 80020e0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80020e2:	d008      	beq.n	80020f6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80020e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80020e8:	d023      	beq.n	8002132 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80020ea:	4a1e      	ldr	r2, [pc, #120]	; (8002164 <HAL_TIM_Base_MspInit+0x8c>)
 80020ec:	4293      	cmp	r3, r2
 80020ee:	d011      	beq.n	8002114 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80020f0:	b005      	add	sp, #20
 80020f2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80020f6:	4b1c      	ldr	r3, [pc, #112]	; (8002168 <HAL_TIM_Base_MspInit+0x90>)
 80020f8:	2200      	movs	r2, #0
 80020fa:	9201      	str	r2, [sp, #4]
 80020fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80020fe:	f042 0201 	orr.w	r2, r2, #1
 8002102:	645a      	str	r2, [r3, #68]	; 0x44
 8002104:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002106:	f003 0301 	and.w	r3, r3, #1
 800210a:	9301      	str	r3, [sp, #4]
 800210c:	9b01      	ldr	r3, [sp, #4]
}
 800210e:	b005      	add	sp, #20
 8002110:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002114:	4b14      	ldr	r3, [pc, #80]	; (8002168 <HAL_TIM_Base_MspInit+0x90>)
 8002116:	2200      	movs	r2, #0
 8002118:	9203      	str	r2, [sp, #12]
 800211a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800211c:	f042 0202 	orr.w	r2, r2, #2
 8002120:	641a      	str	r2, [r3, #64]	; 0x40
 8002122:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002124:	f003 0302 	and.w	r3, r3, #2
 8002128:	9303      	str	r3, [sp, #12]
 800212a:	9b03      	ldr	r3, [sp, #12]
}
 800212c:	b005      	add	sp, #20
 800212e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002132:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002136:	2200      	movs	r2, #0
 8002138:	9202      	str	r2, [sp, #8]
 800213a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800213c:	f041 0101 	orr.w	r1, r1, #1
 8002140:	6419      	str	r1, [r3, #64]	; 0x40
 8002142:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002144:	f003 0301 	and.w	r3, r3, #1
 8002148:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 800214a:	201c      	movs	r0, #28
 800214c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 800214e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002150:	f006 ff68 	bl	8009024 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002154:	201c      	movs	r0, #28
}
 8002156:	b005      	add	sp, #20
 8002158:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800215c:	f006 bfa0 	b.w	80090a0 <HAL_NVIC_EnableIRQ>
 8002160:	40010000 	.word	0x40010000
 8002164:	40000400 	.word	0x40000400
 8002168:	40023800 	.word	0x40023800

0800216c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800216c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800216e:	4b2b      	ldr	r3, [pc, #172]	; (800221c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002170:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002172:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002174:	2200      	movs	r2, #0
 8002176:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002178:	2c00      	cmp	r4, #0
 800217a:	d14c      	bne.n	8002216 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800217c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800217e:	4a28      	ldr	r2, [pc, #160]	; (8002220 <HAL_SDRAM_MspInit+0xb4>)
 8002180:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002182:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002184:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002186:	4827      	ldr	r0, [pc, #156]	; (8002224 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002188:	433b      	orrs	r3, r7
 800218a:	6393      	str	r3, [r2, #56]	; 0x38
 800218c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800218e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002190:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002192:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002194:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002198:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800219a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800219c:	2302      	movs	r3, #2
 800219e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021a2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80021a6:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021a8:	f006 ffb2 	bl	8009110 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021ac:	481e      	ldr	r0, [pc, #120]	; (8002228 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80021ae:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021b2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021b4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021b8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021bc:	f006 ffa8 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80021c0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021c4:	4819      	ldr	r0, [pc, #100]	; (800222c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80021c6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021c8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ca:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021ce:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021d2:	f006 ff9d 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80021d6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80021da:	4815      	ldr	r0, [pc, #84]	; (8002230 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80021dc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80021de:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021e0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021e4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80021e8:	f006 ff92 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80021ec:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021f0:	4810      	ldr	r0, [pc, #64]	; (8002234 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80021f2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021f4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021f6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021fa:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021fe:	f006 ff87 	bl	8009110 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002202:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002204:	480c      	ldr	r0, [pc, #48]	; (8002238 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002206:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002208:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800220a:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800220e:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002210:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002212:	f006 ff7d 	bl	8009110 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002216:	b009      	add	sp, #36	; 0x24
 8002218:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800221a:	bf00      	nop
 800221c:	20001e74 	.word	0x20001e74
 8002220:	40023800 	.word	0x40023800
 8002224:	40021400 	.word	0x40021400
 8002228:	40020800 	.word	0x40020800
 800222c:	40021800 	.word	0x40021800
 8002230:	40021000 	.word	0x40021000
 8002234:	40020c00 	.word	0x40020c00
 8002238:	40020400 	.word	0x40020400

0800223c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800223c:	b570      	push	{r4, r5, r6, lr}
 800223e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002240:	4b23      	ldr	r3, [pc, #140]	; (80022d0 <HAL_InitTick+0x94>)
 8002242:	2200      	movs	r2, #0
 8002244:	9202      	str	r2, [sp, #8]
 8002246:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002248:	f042 0210 	orr.w	r2, r2, #16
 800224c:	641a      	str	r2, [r3, #64]	; 0x40
 800224e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002250:	f003 0310 	and.w	r3, r3, #16
 8002254:	9302      	str	r3, [sp, #8]
{
 8002256:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002258:	a901      	add	r1, sp, #4
 800225a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800225c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800225e:	f009 f99f 	bl	800b5a0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002262:	9b06      	ldr	r3, [sp, #24]
 8002264:	b9d3      	cbnz	r3, 800229c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002266:	f009 f98b 	bl	800b580 <HAL_RCC_GetPCLK1Freq>
 800226a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800226c:	4a19      	ldr	r2, [pc, #100]	; (80022d4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800226e:	4c1a      	ldr	r4, [pc, #104]	; (80022d8 <HAL_InitTick+0x9c>)
 8002270:	491a      	ldr	r1, [pc, #104]	; (80022dc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002272:	fba2 2303 	umull	r2, r3, r2, r3
 8002276:	0c9b      	lsrs	r3, r3, #18
 8002278:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800227a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800227c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002280:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002282:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002286:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002288:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800228a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800228c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800228e:	f009 ffb7 	bl	800c200 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002292:	4606      	mov	r6, r0
 8002294:	b130      	cbz	r0, 80022a4 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002296:	4630      	mov	r0, r6
 8002298:	b008      	add	sp, #32
 800229a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800229c:	f009 f970 	bl	800b580 <HAL_RCC_GetPCLK1Freq>
 80022a0:	0043      	lsls	r3, r0, #1
 80022a2:	e7e3      	b.n	800226c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80022a4:	4620      	mov	r0, r4
 80022a6:	f00a f839 	bl	800c31c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80022aa:	4606      	mov	r6, r0
 80022ac:	2800      	cmp	r0, #0
 80022ae:	d1f2      	bne.n	8002296 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80022b0:	2036      	movs	r0, #54	; 0x36
 80022b2:	f006 fef5 	bl	80090a0 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80022b6:	2d0f      	cmp	r5, #15
 80022b8:	d901      	bls.n	80022be <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80022ba:	2601      	movs	r6, #1
 80022bc:	e7eb      	b.n	8002296 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80022be:	4632      	mov	r2, r6
 80022c0:	4629      	mov	r1, r5
 80022c2:	2036      	movs	r0, #54	; 0x36
 80022c4:	f006 feae 	bl	8009024 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80022c8:	4b05      	ldr	r3, [pc, #20]	; (80022e0 <HAL_InitTick+0xa4>)
 80022ca:	601d      	str	r5, [r3, #0]
 80022cc:	e7e3      	b.n	8002296 <HAL_InitTick+0x5a>
 80022ce:	bf00      	nop
 80022d0:	40023800 	.word	0x40023800
 80022d4:	431bde83 	.word	0x431bde83
 80022d8:	20001e78 	.word	0x20001e78
 80022dc:	40001000 	.word	0x40001000
 80022e0:	20000080 	.word	0x20000080

080022e4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80022e4:	4770      	bx	lr
 80022e6:	bf00      	nop

080022e8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80022e8:	e7fe      	b.n	80022e8 <HardFault_Handler>
 80022ea:	bf00      	nop

080022ec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80022ec:	e7fe      	b.n	80022ec <MemManage_Handler>
 80022ee:	bf00      	nop

080022f0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80022f0:	e7fe      	b.n	80022f0 <BusFault_Handler>
 80022f2:	bf00      	nop

080022f4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80022f4:	e7fe      	b.n	80022f4 <UsageFault_Handler>
 80022f6:	bf00      	nop

080022f8 <DebugMon_Handler>:
 80022f8:	4770      	bx	lr
 80022fa:	bf00      	nop

080022fc <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80022fc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80022fe:	20c8      	movs	r0, #200	; 0xc8
 8002300:	f006 fe6c 	bl	8008fdc <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002304:	4804      	ldr	r0, [pc, #16]	; (8002318 <EXTI3_IRQHandler+0x1c>)
 8002306:	2200      	movs	r2, #0
 8002308:	2120      	movs	r1, #32
 800230a:	f007 f845 	bl	8009398 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800230e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002312:	2008      	movs	r0, #8
 8002314:	f007 b850 	b.w	80093b8 <HAL_GPIO_EXTI_IRQHandler>
 8002318:	40021000 	.word	0x40021000

0800231c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800231c:	4801      	ldr	r0, [pc, #4]	; (8002324 <TIM6_DAC_IRQHandler+0x8>)
 800231e:	f00a b841 	b.w	800c3a4 <HAL_TIM_IRQHandler>
 8002322:	bf00      	nop
 8002324:	20001e78 	.word	0x20001e78

08002328 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002328:	4801      	ldr	r0, [pc, #4]	; (8002330 <I2C3_EV_IRQHandler+0x8>)
 800232a:	f007 bfa5 	b.w	800a278 <HAL_I2C_EV_IRQHandler>
 800232e:	bf00      	nop
 8002330:	200018ec 	.word	0x200018ec

08002334 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002334:	4801      	ldr	r0, [pc, #4]	; (800233c <LTDC_IRQHandler+0x8>)
 8002336:	f008 bd19 	b.w	800ad6c <HAL_LTDC_IRQHandler>
 800233a:	bf00      	nop
 800233c:	20001940 	.word	0x20001940

08002340 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002340:	2001      	movs	r0, #1
 8002342:	4770      	bx	lr

08002344 <_kill>:

int _kill(int pid, int sig)
{
 8002344:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002346:	f027 fdb3 	bl	8029eb0 <__errno>
 800234a:	2316      	movs	r3, #22
 800234c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800234e:	f04f 30ff 	mov.w	r0, #4294967295
 8002352:	bd08      	pop	{r3, pc}

08002354 <_exit>:

void _exit (int status)
{
 8002354:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002356:	f027 fdab 	bl	8029eb0 <__errno>
 800235a:	2316      	movs	r3, #22
 800235c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800235e:	e7fe      	b.n	800235e <_exit+0xa>

08002360 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002360:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002362:	1e16      	subs	r6, r2, #0
 8002364:	dd07      	ble.n	8002376 <_read+0x16>
 8002366:	460c      	mov	r4, r1
 8002368:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800236a:	f3af 8000 	nop.w
 800236e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002372:	42a5      	cmp	r5, r4
 8002374:	d1f9      	bne.n	800236a <_read+0xa>
	}

return len;
}
 8002376:	4630      	mov	r0, r6
 8002378:	bd70      	pop	{r4, r5, r6, pc}
 800237a:	bf00      	nop

0800237c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800237c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800237e:	1e16      	subs	r6, r2, #0
 8002380:	dd07      	ble.n	8002392 <_write+0x16>
 8002382:	460c      	mov	r4, r1
 8002384:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002386:	f814 0b01 	ldrb.w	r0, [r4], #1
 800238a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800238e:	42ac      	cmp	r4, r5
 8002390:	d1f9      	bne.n	8002386 <_write+0xa>
	}
	return len;
}
 8002392:	4630      	mov	r0, r6
 8002394:	bd70      	pop	{r4, r5, r6, pc}
 8002396:	bf00      	nop

08002398 <_close>:

int _close(int file)
{
	return -1;
}
 8002398:	f04f 30ff 	mov.w	r0, #4294967295
 800239c:	4770      	bx	lr
 800239e:	bf00      	nop

080023a0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80023a0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80023a4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80023a6:	2000      	movs	r0, #0
 80023a8:	4770      	bx	lr
 80023aa:	bf00      	nop

080023ac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80023ac:	2001      	movs	r0, #1
 80023ae:	4770      	bx	lr

080023b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80023b0:	2000      	movs	r0, #0
 80023b2:	4770      	bx	lr

080023b4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80023b4:	4a0b      	ldr	r2, [pc, #44]	; (80023e4 <_sbrk+0x30>)
{
 80023b6:	b508      	push	{r3, lr}
 80023b8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80023ba:	6810      	ldr	r0, [r2, #0]
 80023bc:	b128      	cbz	r0, 80023ca <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80023be:	4403      	add	r3, r0
 80023c0:	4669      	mov	r1, sp
 80023c2:	428b      	cmp	r3, r1
 80023c4:	d807      	bhi.n	80023d6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80023c6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80023c8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80023ca:	4807      	ldr	r0, [pc, #28]	; (80023e8 <_sbrk+0x34>)
 80023cc:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80023ce:	4403      	add	r3, r0
 80023d0:	4669      	mov	r1, sp
 80023d2:	428b      	cmp	r3, r1
 80023d4:	d9f7      	bls.n	80023c6 <_sbrk+0x12>
		errno = ENOMEM;
 80023d6:	f027 fd6b 	bl	8029eb0 <__errno>
 80023da:	230c      	movs	r3, #12
 80023dc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80023de:	f04f 30ff 	mov.w	r0, #4294967295
}
 80023e2:	bd08      	pop	{r3, pc}
 80023e4:	20001ec0 	.word	0x20001ec0
 80023e8:	200139e0 	.word	0x200139e0

080023ec <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80023ec:	4770      	bx	lr

080023ee <_ZN23ApplicationFontProviderD0Ev>:
 80023ee:	b510      	push	{r4, lr}
 80023f0:	2104      	movs	r1, #4
 80023f2:	4604      	mov	r4, r0
 80023f4:	f026 fc4b 	bl	8028c8e <_ZdlPvj>
 80023f8:	4620      	mov	r0, r4
 80023fa:	bd10      	pop	{r4, pc}

080023fc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80023fc:	b508      	push	{r3, lr}
    switch (typography)
 80023fe:	2903      	cmp	r1, #3
 8002400:	d813      	bhi.n	800242a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002402:	e8df f001 	tbb	[pc, r1]
 8002406:	0602      	.short	0x0602
 8002408:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800240a:	f005 fe4d 	bl	80080a8 <_ZN17TypedTextDatabase8getFontsEv>
 800240e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002410:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002412:	f005 fe49 	bl	80080a8 <_ZN17TypedTextDatabase8getFontsEv>
 8002416:	6840      	ldr	r0, [r0, #4]
 8002418:	e7fa      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800241a:	f005 fe45 	bl	80080a8 <_ZN17TypedTextDatabase8getFontsEv>
 800241e:	6880      	ldr	r0, [r0, #8]
 8002420:	e7f6      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002422:	f005 fe41 	bl	80080a8 <_ZN17TypedTextDatabase8getFontsEv>
 8002426:	68c0      	ldr	r0, [r0, #12]
 8002428:	e7f2      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800242a:	2000      	movs	r0, #0
 800242c:	e7f0      	b.n	8002410 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002430 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002430:	4800      	ldr	r0, [pc, #0]	; (8002434 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002432:	4770      	bx	lr
 8002434:	0802b1a4 	.word	0x0802b1a4

08002438 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002438:	200d      	movs	r0, #13
 800243a:	4770      	bx	lr

0800243c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800243c:	b513      	push	{r0, r1, r4, lr}
 800243e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002440:	b151      	cbz	r1, 8002458 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002442:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002444:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002446:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800244a:	aa01      	add	r2, sp, #4
 800244c:	689c      	ldr	r4, [r3, #8]
 800244e:	f10d 0303 	add.w	r3, sp, #3
 8002452:	47a0      	blx	r4
        return glyph;
    }
 8002454:	b002      	add	sp, #8
 8002456:	bd10      	pop	{r4, pc}
            return 0;
 8002458:	4608      	mov	r0, r1
 800245a:	e7fb      	b.n	8002454 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800245c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800245c:	89c0      	ldrh	r0, [r0, #14]
 800245e:	4770      	bx	lr

08002460 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002460:	8a00      	ldrh	r0, [r0, #16]
 8002462:	4770      	bx	lr

08002464 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002464:	88c0      	ldrh	r0, [r0, #6]
 8002466:	4770      	bx	lr

08002468 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002468:	8880      	ldrh	r0, [r0, #4]
 800246a:	4770      	bx	lr

0800246c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800246c:	7a80      	ldrb	r0, [r0, #10]
    }
 800246e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002472:	4770      	bx	lr

08002474 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002474:	7a80      	ldrb	r0, [r0, #10]
    }
 8002476:	09c0      	lsrs	r0, r0, #7
 8002478:	4770      	bx	lr

0800247a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800247c:	4770      	bx	lr

0800247e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800247e:	4770      	bx	lr

08002480 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002480:	4770      	bx	lr

08002482 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002482:	4770      	bx	lr

08002484 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002484:	4770      	bx	lr

08002486 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002486:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002488:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800248a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800248c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800248e:	466d      	mov	r5, sp
 8002490:	4601      	mov	r1, r0
 8002492:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002496:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002498:	4628      	mov	r0, r5
 800249a:	4798      	blx	r3
 800249c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024a0:	343c      	adds	r4, #60	; 0x3c
 80024a2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024a6:	b005      	add	sp, #20
 80024a8:	bd30      	pop	{r4, r5, pc}

080024aa <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80024aa:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80024ac:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80024ae:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80024b0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80024b2:	466d      	mov	r5, sp
 80024b4:	4601      	mov	r1, r0
 80024b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80024ba:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80024bc:	4628      	mov	r0, r5
 80024be:	4798      	blx	r3
 80024c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024c4:	343c      	adds	r4, #60	; 0x3c
 80024c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024ca:	b005      	add	sp, #20
 80024cc:	bd30      	pop	{r4, r5, pc}

080024ce <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80024ce:	2200      	movs	r2, #0
 80024d0:	8002      	strh	r2, [r0, #0]
 80024d2:	8042      	strh	r2, [r0, #2]
 80024d4:	8082      	strh	r2, [r0, #4]
 80024d6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024d8:	4770      	bx	lr

080024da <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024da:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80024de:	4770      	bx	lr

080024e0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024e0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80024e2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024e4:	4604      	mov	r4, r0
        setX(x);
 80024e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024e8:	4615      	mov	r5, r2
        setX(x);
 80024ea:	4798      	blx	r3
        setBaselineY(baselineY);
 80024ec:	6823      	ldr	r3, [r4, #0]
 80024ee:	4629      	mov	r1, r5
 80024f0:	4620      	mov	r0, r4
 80024f2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80024f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80024f8:	4718      	bx	r3

080024fa <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80024fa:	2000      	movs	r0, #0
 80024fc:	4770      	bx	lr

080024fe <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80024fe:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002500:	4770      	bx	lr

08002502 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002502:	4770      	bx	lr

08002504 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002504:	4770      	bx	lr

08002506 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002506:	4770      	bx	lr

08002508 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002508:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800250a:	68c2      	ldr	r2, [r0, #12]
 800250c:	6844      	ldr	r4, [r0, #4]
 800250e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002510:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002512:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002516:	07d2      	lsls	r2, r2, #31
 8002518:	bf48      	it	mi
 800251a:	5962      	ldrmi	r2, [r4, r5]
 800251c:	689b      	ldr	r3, [r3, #8]
    }
 800251e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002520:	bf48      	it	mi
 8002522:	58d3      	ldrmi	r3, [r2, r3]
 8002524:	4718      	bx	r3

08002526 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002526:	6843      	ldr	r3, [r0, #4]
 8002528:	b12b      	cbz	r3, 8002536 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800252a:	6883      	ldr	r3, [r0, #8]
 800252c:	b92b      	cbnz	r3, 800253a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800252e:	68c0      	ldr	r0, [r0, #12]
 8002530:	f000 0001 	and.w	r0, r0, #1
 8002534:	4770      	bx	lr
 8002536:	4618      	mov	r0, r3
 8002538:	4770      	bx	lr
 800253a:	2001      	movs	r0, #1
    }
 800253c:	4770      	bx	lr

0800253e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800253e:	b510      	push	{r4, lr}
    }
 8002540:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002542:	4604      	mov	r4, r0
    }
 8002544:	f026 fba3 	bl	8028c8e <_ZdlPvj>
 8002548:	4620      	mov	r0, r4
 800254a:	bd10      	pop	{r4, pc}

0800254c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800254c:	b510      	push	{r4, lr}
 800254e:	214c      	movs	r1, #76	; 0x4c
 8002550:	4604      	mov	r4, r0
 8002552:	f026 fb9c 	bl	8028c8e <_ZdlPvj>
 8002556:	4620      	mov	r0, r4
 8002558:	bd10      	pop	{r4, pc}

0800255a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800255a:	b510      	push	{r4, lr}
 800255c:	2110      	movs	r1, #16
 800255e:	4604      	mov	r4, r0
 8002560:	f026 fb95 	bl	8028c8e <_ZdlPvj>
 8002564:	4620      	mov	r0, r4
 8002566:	bd10      	pop	{r4, pc}

08002568 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002568:	b510      	push	{r4, lr}
 800256a:	4b03      	ldr	r3, [pc, #12]	; (8002578 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 800256c:	6003      	str	r3, [r0, #0]
 800256e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002570:	f010 fe14 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002574:	4620      	mov	r0, r4
 8002576:	bd10      	pop	{r4, pc}
 8002578:	0802b510 	.word	0x0802b510

0800257c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800257c:	b507      	push	{r0, r1, r2, lr}
 800257e:	4b07      	ldr	r3, [pc, #28]	; (800259c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002580:	6003      	str	r3, [r0, #0]
 8002582:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002584:	f010 fe0a 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002588:	9801      	ldr	r0, [sp, #4]
 800258a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800258e:	f026 fb7e 	bl	8028c8e <_ZdlPvj>
 8002592:	9801      	ldr	r0, [sp, #4]
 8002594:	b003      	add	sp, #12
 8002596:	f85d fb04 	ldr.w	pc, [sp], #4
 800259a:	bf00      	nop
 800259c:	0802b510 	.word	0x0802b510

080025a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80025a0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80025a2:	f7fe fd3b 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80025a6:	bd08      	pop	{r3, pc}

080025a8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025a8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025aa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025ac:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025ae:	4b12      	ldr	r3, [pc, #72]	; (80025f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80025b0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025b2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025b4:	b28d      	uxth	r5, r1
 80025b6:	b92b      	cbnz	r3, 80025c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80025b8:	4b10      	ldr	r3, [pc, #64]	; (80025fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80025ba:	4a11      	ldr	r2, [pc, #68]	; (8002600 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025bc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025be:	4811      	ldr	r0, [pc, #68]	; (8002604 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80025c0:	f027 f978 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80025c4:	4910      	ldr	r1, [pc, #64]	; (8002608 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80025c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025c8:	8809      	ldrh	r1, [r1, #0]
 80025ca:	4291      	cmp	r1, r2
 80025cc:	d803      	bhi.n	80025d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80025ce:	4b0f      	ldr	r3, [pc, #60]	; (800260c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80025d0:	4a0b      	ldr	r2, [pc, #44]	; (8002600 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025d2:	216d      	movs	r1, #109	; 0x6d
 80025d4:	e7f3      	b.n	80025be <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80025d6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80025da:	4b0d      	ldr	r3, [pc, #52]	; (8002610 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025e6:	4798      	blx	r3
 80025e8:	1a28      	subs	r0, r5, r0
 80025ea:	b201      	sxth	r1, r0
 80025ec:	4633      	mov	r3, r6
 80025ee:	4620      	mov	r0, r4
    }
 80025f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025f4:	4718      	bx	r3
 80025f6:	bf00      	nop
 80025f8:	20012dfc 	.word	0x20012dfc
 80025fc:	0802b2a8 	.word	0x0802b2a8
 8002600:	0802b2ea 	.word	0x0802b2ea
 8002604:	0802b325 	.word	0x0802b325
 8002608:	20012e00 	.word	0x20012e00
 800260c:	0802b36c 	.word	0x0802b36c
 8002610:	20012e04 	.word	0x20012e04

08002614 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002614:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002616:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800261a:	4299      	cmp	r1, r3
{
 800261c:	4604      	mov	r4, r0
 800261e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002620:	d103      	bne.n	800262a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002622:	f012 fabd 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002626:	f001 f911 	bl	800384c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800262a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800262e:	429d      	cmp	r5, r3
 8002630:	d103      	bne.n	800263a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002632:	f012 fab5 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002636:	f001 f9d9 	bl	80039ec <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800263a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800263e:	42a5      	cmp	r5, r4
 8002640:	d105      	bne.n	800264e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002642:	f012 faad 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002646:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800264a:	f001 b9df 	b.w	8003a0c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800264e:	bd38      	pop	{r3, r4, r5, pc}

08002650 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002650:	2200      	movs	r2, #0
 8002652:	f04f 31ff 	mov.w	r1, #4294967295
 8002656:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800265a:	6082      	str	r2, [r0, #8]
    }
 800265c:	4770      	bx	lr

0800265e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800265e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002660:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002662:	4604      	mov	r4, r0
        setX(x);
 8002664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002666:	4615      	mov	r5, r2
        setX(x);
 8002668:	4798      	blx	r3
        setY(y);
 800266a:	6823      	ldr	r3, [r4, #0]
 800266c:	4629      	mov	r1, r5
 800266e:	4620      	mov	r0, r4
 8002670:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002672:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002676:	4718      	bx	r3

08002678 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002678:	b570      	push	{r4, r5, r6, lr}
 800267a:	4604      	mov	r4, r0
 800267c:	461d      	mov	r5, r3
 800267e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002682:	f7ff ffec 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002686:	6823      	ldr	r3, [r4, #0]
 8002688:	4629      	mov	r1, r5
 800268a:	4620      	mov	r0, r4
 800268c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800268e:	4798      	blx	r3
        setHeight(height);
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	4631      	mov	r1, r6
 8002694:	4620      	mov	r0, r4
 8002696:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800269c:	4718      	bx	r3
	...

080026a0 <_ZN8touchgfx6WidgetC1Ev>:
 80026a0:	2200      	movs	r2, #0
 80026a2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80026a6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80026aa:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80026ae:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80026b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026b6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80026b8:	4a01      	ldr	r2, [pc, #4]	; (80026c0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80026ba:	6002      	str	r2, [r0, #0]
 80026bc:	4770      	bx	lr
 80026be:	bf00      	nop
 80026c0:	0802b3f0 	.word	0x0802b3f0

080026c4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80026c4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026c6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80026c8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026ca:	2100      	movs	r1, #0
 80026cc:	f027 faf7 	bl	8029cbe <memset>
 80026d0:	4620      	mov	r0, r4
 80026d2:	f7ff ffe5 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80026d6:	4b0a      	ldr	r3, [pc, #40]	; (8002700 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80026d8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80026da:	4b0a      	ldr	r3, [pc, #40]	; (8002704 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80026dc:	62a3      	str	r3, [r4, #40]	; 0x28
 80026de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026e2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80026e4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80026e8:	2300      	movs	r3, #0
 80026ea:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80026ee:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80026f2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026f6:	8723      	strh	r3, [r4, #56]	; 0x38
 80026f8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80026fa:	4620      	mov	r0, r4
 80026fc:	bd10      	pop	{r4, pc}
 80026fe:	bf00      	nop
 8002700:	0802dd40 	.word	0x0802dd40
 8002704:	0802b458 	.word	0x0802b458

08002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002708:	4b1a      	ldr	r3, [pc, #104]	; (8002774 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800270a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800270c:	881b      	ldrh	r3, [r3, #0]
 800270e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002710:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002712:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002714:	d92b      	bls.n	800276e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002716:	4b18      	ldr	r3, [pc, #96]	; (8002778 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	b92b      	cbnz	r3, 8002728 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800271c:	4b17      	ldr	r3, [pc, #92]	; (800277c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800271e:	4a18      	ldr	r2, [pc, #96]	; (8002780 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002720:	4818      	ldr	r0, [pc, #96]	; (8002784 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002722:	216c      	movs	r1, #108	; 0x6c
 8002724:	f027 f8c6 	bl	80298b4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002728:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800272c:	4b16      	ldr	r3, [pc, #88]	; (8002788 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002734:	4b15      	ldr	r3, [pc, #84]	; (800278c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002736:	6818      	ldr	r0, [r3, #0]
 8002738:	f005 fca6 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800273c:	682b      	ldr	r3, [r5, #0]
 800273e:	9001      	str	r0, [sp, #4]
 8002740:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002742:	4628      	mov	r0, r5
 8002744:	4798      	blx	r3
 8002746:	682b      	ldr	r3, [r5, #0]
 8002748:	9901      	ldr	r1, [sp, #4]
 800274a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800274c:	4604      	mov	r4, r0
 800274e:	4628      	mov	r0, r5
 8002750:	4798      	blx	r3
 8002752:	682b      	ldr	r3, [r5, #0]
 8002754:	9901      	ldr	r1, [sp, #4]
 8002756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002758:	fb14 f400 	smulbb	r4, r4, r0
 800275c:	4628      	mov	r0, r5
 800275e:	4798      	blx	r3
 8002760:	b2a4      	uxth	r4, r4
 8002762:	1823      	adds	r3, r4, r0
 8002764:	b21b      	sxth	r3, r3
 8002766:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800276a:	b002      	add	sp, #8
 800276c:	bd70      	pop	{r4, r5, r6, pc}
 800276e:	2300      	movs	r3, #0
 8002770:	e7f9      	b.n	8002766 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002772:	bf00      	nop
 8002774:	20012e00 	.word	0x20012e00
 8002778:	20012dfc 	.word	0x20012dfc
 800277c:	0802b2a8 	.word	0x0802b2a8
 8002780:	0802b2ea 	.word	0x0802b2ea
 8002784:	0802b325 	.word	0x0802b325
 8002788:	20012e04 	.word	0x20012e04
 800278c:	20012e08 	.word	0x20012e08

08002790 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002794:	ed2d 8b06 	vpush	{d8-d10}
 8002798:	4604      	mov	r4, r0
 800279a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800279c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800279e:	2500      	movs	r5, #0
 80027a0:	f013 fe7e 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 80027a4:	4b66      	ldr	r3, [pc, #408]	; (8002940 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80027a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80027a8:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80027ac:	2226      	movs	r2, #38	; 0x26
 80027ae:	4629      	mov	r1, r5
 80027b0:	4658      	mov	r0, fp
 80027b2:	f027 fa84 	bl	8029cbe <memset>
 80027b6:	4658      	mov	r0, fp
 80027b8:	f7ff ff72 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80027bc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80027c0:	26ff      	movs	r6, #255	; 0xff
 80027c2:	4b60      	ldr	r3, [pc, #384]	; (8002944 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80027c4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80027c6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80027c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027cc:	4629      	mov	r1, r5
 80027ce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80027d2:	4650      	mov	r0, sl
        : color(col)
 80027d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80027d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80027da:	f027 fa70 	bl	8029cbe <memset>
 80027de:	4650      	mov	r0, sl
 80027e0:	f7ff ff5e 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80027e4:	4b58      	ldr	r3, [pc, #352]	; (8002948 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80027e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80027e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80027ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80027f0:	a90a      	add	r1, sp, #40	; 0x28
 80027f2:	4650      	mov	r0, sl
 80027f4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80027f8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80027fc:	f00f fcc7 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002800:	4648      	mov	r0, r9
 8002802:	f7ff ff5f 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002806:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800280a:	4b50      	ldr	r3, [pc, #320]	; (800294c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800280c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002810:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002814:	4638      	mov	r0, r7
 8002816:	f00e fb83 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 800281a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800281e:	4618      	mov	r0, r3
 8002820:	9303      	str	r3, [sp, #12]
 8002822:	f7fe fc0f 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002826:	4b4a      	ldr	r3, [pc, #296]	; (8002950 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002828:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800282c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002830:	3324      	adds	r3, #36	; 0x24
 8002832:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002836:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800283a:	4640      	mov	r0, r8
 800283c:	f7ff ff42 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002840:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002844:	4618      	mov	r0, r3
 8002846:	ee08 3a10 	vmov	s16, r3
 800284a:	f7ff ff3b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800284e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002852:	4618      	mov	r0, r3
 8002854:	ee08 3a90 	vmov	s17, r3
 8002858:	f7ff ff34 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800285c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002860:	4618      	mov	r0, r3
 8002862:	ee09 3a10 	vmov	s18, r3
 8002866:	f00f fdd3 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800286a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800286e:	4618      	mov	r0, r3
 8002870:	ee09 3a90 	vmov	s19, r3
 8002874:	f00f fdcc 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002878:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800287c:	4618      	mov	r0, r3
 800287e:	ee0a 3a10 	vmov	s20, r3
 8002882:	f00f fdc5 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002886:	4a33      	ldr	r2, [pc, #204]	; (8002954 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002888:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800288c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002890:	4a31      	ldr	r2, [pc, #196]	; (8002958 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002892:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002896:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800289a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800289e:	f010 fc73 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80028a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80028a6:	462a      	mov	r2, r5
 80028a8:	4658      	mov	r0, fp
 80028aa:	9300      	str	r3, [sp, #0]
 80028ac:	4629      	mov	r1, r5
 80028ae:	23f0      	movs	r3, #240	; 0xf0
 80028b0:	f7ff fee2 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80028b4:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80028b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80028ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80028bc:	4659      	mov	r1, fp
 80028be:	4630      	mov	r0, r6
 80028c0:	f00c fed6 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80028c4:	462a      	mov	r2, r5
 80028c6:	4650      	mov	r0, sl
 80028c8:	4629      	mov	r1, r5
 80028ca:	f7ff fec8 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80028ce:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80028d0:	4650      	mov	r0, sl
 80028d2:	a90a      	add	r1, sp, #40	; 0x28
 80028d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80028d8:	f00f fc59 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80028dc:	4651      	mov	r1, sl
 80028de:	4630      	mov	r0, r6
 80028e0:	f00c fec6 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80028e4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80028e8:	2159      	movs	r1, #89	; 0x59
 80028ea:	4648      	mov	r0, r9
 80028ec:	f7ff feb7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80028f0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80028f4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80028f8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80028fc:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002900:	4650      	mov	r0, sl
 8002902:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002906:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800290a:	4649      	mov	r1, r9
 800290c:	4798      	blx	r3
 800290e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002912:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800291a:	4b10      	ldr	r3, [pc, #64]	; (800295c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800291c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800291e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002922:	b92b      	cbnz	r3, 8002930 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002924:	4b0e      	ldr	r3, [pc, #56]	; (8002960 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002926:	4a0f      	ldr	r2, [pc, #60]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002928:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800292a:	480f      	ldr	r0, [pc, #60]	; (8002968 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800292c:	f026 ffc2 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002930:	4b0e      	ldr	r3, [pc, #56]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002932:	881b      	ldrh	r3, [r3, #0]
 8002934:	2b14      	cmp	r3, #20
 8002936:	d81d      	bhi.n	8002974 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002938:	4b0d      	ldr	r3, [pc, #52]	; (8002970 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800293a:	4a0a      	ldr	r2, [pc, #40]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800293c:	2161      	movs	r1, #97	; 0x61
 800293e:	e7f4      	b.n	800292a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002940:	0802b510 	.word	0x0802b510
 8002944:	0802ddd0 	.word	0x0802ddd0
 8002948:	0802df98 	.word	0x0802df98
 800294c:	0802b468 	.word	0x0802b468
 8002950:	0802db04 	.word	0x0802db04
 8002954:	0802b4f8 	.word	0x0802b4f8
 8002958:	08002615 	.word	0x08002615
 800295c:	20012dfc 	.word	0x20012dfc
 8002960:	0802b2a8 	.word	0x0802b2a8
 8002964:	0802b3aa 	.word	0x0802b3aa
 8002968:	0802b325 	.word	0x0802b325
 800296c:	20012e00 	.word	0x20012e00
 8002970:	0802b36c 	.word	0x0802b36c
        return texts->getText(typedTextId);
 8002974:	4b93      	ldr	r3, [pc, #588]	; (8002bc4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002976:	2114      	movs	r1, #20
 8002978:	6818      	ldr	r0, [r3, #0]
 800297a:	f005 fb85 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 800297e:	4a92      	ldr	r2, [pc, #584]	; (8002bc8 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002980:	4603      	mov	r3, r0
 8002982:	2104      	movs	r1, #4
 8002984:	4650      	mov	r0, sl
 8002986:	f015 fa7b 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800298a:	4648      	mov	r0, r9
        wc1 = value;
 800298c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002990:	f00f f802 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002994:	4b8d      	ldr	r3, [pc, #564]	; (8002bcc <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002996:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002998:	a90a      	add	r1, sp, #40	; 0x28
 800299a:	2315      	movs	r3, #21
 800299c:	4648      	mov	r0, r9
 800299e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80029a2:	f00f f819 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80029a6:	4649      	mov	r1, r9
 80029a8:	4630      	mov	r0, r6
 80029aa:	f00c fe61 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80029ae:	230a      	movs	r3, #10
 80029b0:	9300      	str	r3, [sp, #0]
 80029b2:	2232      	movs	r2, #50	; 0x32
 80029b4:	23f0      	movs	r3, #240	; 0xf0
 80029b6:	4629      	mov	r1, r5
 80029b8:	4638      	mov	r0, r7
 80029ba:	f7ff fe5d 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80029be:	9b03      	ldr	r3, [sp, #12]
 80029c0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80029c4:	22a0      	movs	r2, #160	; 0xa0
 80029c6:	4611      	mov	r1, r2
 80029c8:	4638      	mov	r0, r7
 80029ca:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80029ce:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80029d2:	f00e fbbb 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80029d6:	22a0      	movs	r2, #160	; 0xa0
 80029d8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80029dc:	4638      	mov	r0, r7
 80029de:	f00e fbc0 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80029e2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80029e6:	2b20      	cmp	r3, #32
 80029e8:	d005      	beq.n	80029f6 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80029ea:	2320      	movs	r3, #32
 80029ec:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80029f0:	4638      	mov	r0, r7
 80029f2:	f00e fab5 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80029f6:	4638      	mov	r0, r7
 80029f8:	2101      	movs	r1, #1
 80029fa:	f00e fbbd 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80029fe:	4639      	mov	r1, r7
 8002a00:	4630      	mov	r0, r6
 8002a02:	ad04      	add	r5, sp, #16
        color = newColor;
 8002a04:	f04f 37ff 	mov.w	r7, #4294967295
 8002a08:	f00c fe32 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002a0c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002a10:	223c      	movs	r2, #60	; 0x3c
 8002a12:	4640      	mov	r0, r8
 8002a14:	2146      	movs	r1, #70	; 0x46
 8002a16:	f7ff fe22 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002a1a:	4641      	mov	r1, r8
 8002a1c:	4628      	mov	r0, r5
        color = newColor;
 8002a1e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002a22:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002a26:	f00e fd3d 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a2e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002a32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002a36:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002bcc <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002a3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002a3e:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002a40:	a90a      	add	r1, sp, #40	; 0x28
 8002a42:	4640      	mov	r0, r8
 8002a44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a48:	f00e ffc6 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002a4c:	4641      	mov	r1, r8
 8002a4e:	4630      	mov	r0, r6
 8002a50:	f00c fe0e 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002a54:	ee18 0a10 	vmov	r0, s16
 8002a58:	2223      	movs	r2, #35	; 0x23
 8002a5a:	2145      	movs	r1, #69	; 0x45
 8002a5c:	f7ff fdff 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002a60:	ee18 1a10 	vmov	r1, s16
 8002a64:	4628      	mov	r0, r5
        color = newColor;
 8002a66:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002a6a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002a6e:	f00e fd19 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a76:	ee18 3a10 	vmov	r3, s16
 8002a7a:	333c      	adds	r3, #60	; 0x3c
 8002a7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002a80:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002a82:	ee18 0a10 	vmov	r0, s16
 8002a86:	a90a      	add	r1, sp, #40	; 0x28
 8002a88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002a90:	f00e ffa2 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002a94:	ee18 1a10 	vmov	r1, s16
 8002a98:	4630      	mov	r0, r6
 8002a9a:	f00c fde9 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002a9e:	ee18 0a90 	vmov	r0, s17
 8002aa2:	220c      	movs	r2, #12
 8002aa4:	2136      	movs	r1, #54	; 0x36
 8002aa6:	f7ff fdda 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002aaa:	ee18 1a90 	vmov	r1, s17
 8002aae:	4628      	mov	r0, r5
        color = newColor;
 8002ab0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002ab4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002ab8:	f00e fcf4 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002abc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ac0:	ee18 3a90 	vmov	r3, s17
 8002ac4:	333c      	adds	r3, #60	; 0x3c
 8002ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002aca:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002acc:	ee18 0a90 	vmov	r0, s17
 8002ad0:	a90a      	add	r1, sp, #40	; 0x28
 8002ad2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ad6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002ada:	f00e ff7d 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ade:	ee18 1a90 	vmov	r1, s17
 8002ae2:	4630      	mov	r0, r6
 8002ae4:	f00c fdc4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002ae8:	ee19 0a10 	vmov	r0, s18
 8002aec:	22f0      	movs	r2, #240	; 0xf0
 8002aee:	2121      	movs	r1, #33	; 0x21
 8002af0:	f7ff fdb5 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002af4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002af8:	aa0a      	add	r2, sp, #40	; 0x28
 8002afa:	f04f 0802 	mov.w	r8, #2
 8002afe:	a909      	add	r1, sp, #36	; 0x24
 8002b00:	ee19 0a10 	vmov	r0, s18
 8002b04:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b08:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002b0c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b10:	f00f f947 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002b14:	2348      	movs	r3, #72	; 0x48
 8002b16:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002b1a:	3510      	adds	r5, #16
        updateTextPosition();
 8002b1c:	ee19 0a10 	vmov	r0, s18
 8002b20:	f7ff fdf2 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002b24:	ee19 1a10 	vmov	r1, s18
 8002b28:	4630      	mov	r0, r6
        colorPressed = col;
 8002b2a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002b2e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002b32:	f00c fd9d 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002b36:	ee19 0a90 	vmov	r0, s19
 8002b3a:	22aa      	movs	r2, #170	; 0xaa
 8002b3c:	2121      	movs	r1, #33	; 0x21
 8002b3e:	f7ff fd8e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b42:	aa0a      	add	r2, sp, #40	; 0x28
 8002b44:	a909      	add	r1, sp, #36	; 0x24
 8002b46:	ee19 0a90 	vmov	r0, s19
 8002b4a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b4e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002b52:	f00f f926 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002b56:	2347      	movs	r3, #71	; 0x47
 8002b58:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002b5c:	ee19 0a90 	vmov	r0, s19
 8002b60:	f7ff fdd2 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002b64:	ee19 1a90 	vmov	r1, s19
 8002b68:	4630      	mov	r0, r6
        colorPressed = col;
 8002b6a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002b6e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002b72:	f00c fd7d 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002b76:	ee1a 0a10 	vmov	r0, s20
 8002b7a:	2264      	movs	r2, #100	; 0x64
 8002b7c:	2121      	movs	r1, #33	; 0x21
 8002b7e:	f7ff fd6e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b82:	aa0a      	add	r2, sp, #40	; 0x28
 8002b84:	a909      	add	r1, sp, #36	; 0x24
 8002b86:	ee1a 0a10 	vmov	r0, s20
 8002b8a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b8e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002b92:	f00f f906 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002b96:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002b98:	ee1a 0a10 	vmov	r0, s20
 8002b9c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002ba0:	f7ff fdb2 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002ba4:	4630      	mov	r0, r6
        colorPressed = col;
 8002ba6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002baa:	ee1a 1a10 	vmov	r1, s20
 8002bae:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002bb2:	f00c fd5d 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002bb6:	4620      	mov	r0, r4
 8002bb8:	b00d      	add	sp, #52	; 0x34
 8002bba:	ecbd 8b06 	vpop	{d8-d10}
 8002bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bc2:	bf00      	nop
 8002bc4:	20012e08 	.word	0x20012e08
 8002bc8:	0802b3e2 	.word	0x0802b3e2
 8002bcc:	0802b458 	.word	0x0802b458

08002bd0 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002bd0:	4770      	bx	lr

08002bd2 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bd2:	4770      	bx	lr

08002bd4 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002bd4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bd6:	68c2      	ldr	r2, [r0, #12]
 8002bd8:	6844      	ldr	r4, [r0, #4]
 8002bda:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002bdc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002bde:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002be2:	07d2      	lsls	r2, r2, #31
 8002be4:	bf48      	it	mi
 8002be6:	5962      	ldrmi	r2, [r4, r5]
 8002be8:	689b      	ldr	r3, [r3, #8]
    }
 8002bea:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bec:	bf48      	it	mi
 8002bee:	58d3      	ldrmi	r3, [r2, r3]
 8002bf0:	4718      	bx	r3

08002bf2 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002bf2:	6843      	ldr	r3, [r0, #4]
 8002bf4:	b12b      	cbz	r3, 8002c02 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002bf6:	6883      	ldr	r3, [r0, #8]
 8002bf8:	b92b      	cbnz	r3, 8002c06 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002bfa:	68c0      	ldr	r0, [r0, #12]
 8002bfc:	f000 0001 	and.w	r0, r0, #1
 8002c00:	4770      	bx	lr
 8002c02:	4618      	mov	r0, r3
 8002c04:	4770      	bx	lr
 8002c06:	2001      	movs	r0, #1
    }
 8002c08:	4770      	bx	lr

08002c0a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c0a:	b510      	push	{r4, lr}
 8002c0c:	2110      	movs	r1, #16
 8002c0e:	4604      	mov	r4, r0
 8002c10:	f026 f83d 	bl	8028c8e <_ZdlPvj>
 8002c14:	4620      	mov	r0, r4
 8002c16:	bd10      	pop	{r4, pc}

08002c18 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002c18:	b510      	push	{r4, lr}
 8002c1a:	4b03      	ldr	r3, [pc, #12]	; (8002c28 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002c1c:	6003      	str	r3, [r0, #0]
 8002c1e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c20:	f010 fabc 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c24:	4620      	mov	r0, r4
 8002c26:	bd10      	pop	{r4, pc}
 8002c28:	0802b55c 	.word	0x0802b55c

08002c2c <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002c2c:	b507      	push	{r0, r1, r2, lr}
 8002c2e:	4b07      	ldr	r3, [pc, #28]	; (8002c4c <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002c30:	6003      	str	r3, [r0, #0]
 8002c32:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c34:	f010 fab2 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c38:	9801      	ldr	r0, [sp, #4]
 8002c3a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002c3e:	f026 f826 	bl	8028c8e <_ZdlPvj>
 8002c42:	9801      	ldr	r0, [sp, #4]
 8002c44:	b003      	add	sp, #12
 8002c46:	f85d fb04 	ldr.w	pc, [sp], #4
 8002c4a:	bf00      	nop
 8002c4c:	0802b55c 	.word	0x0802b55c

08002c50 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002c50:	3098      	adds	r0, #152	; 0x98
 8002c52:	4288      	cmp	r0, r1
{
 8002c54:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002c56:	d105      	bne.n	8002c64 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c58:	f011 ffa2 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002c5c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002c60:	f000 beb4 	b.w	80039cc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002c64:	bd08      	pop	{r3, pc}
	...

08002c68 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c6c:	ed2d 8b02 	vpush	{d8}
 8002c70:	4604      	mov	r4, r0
 8002c72:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002c74:	46a1      	mov	r9, r4
 8002c76:	2500      	movs	r5, #0
 8002c78:	f013 fc12 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8002c7c:	4ba5      	ldr	r3, [pc, #660]	; (8002f14 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002c7e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002c80:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002c84:	2226      	movs	r2, #38	; 0x26
 8002c86:	4629      	mov	r1, r5
 8002c88:	4648      	mov	r0, r9
 8002c8a:	f027 f818 	bl	8029cbe <memset>
 8002c8e:	4648      	mov	r0, r9
 8002c90:	f7ff fd06 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8002c94:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002c98:	26ff      	movs	r6, #255	; 0xff
 8002c9a:	4b9f      	ldr	r3, [pc, #636]	; (8002f18 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002c9c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002c9e:	2226      	movs	r2, #38	; 0x26
 8002ca0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ca4:	4629      	mov	r1, r5
 8002ca6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002caa:	4640      	mov	r0, r8
 8002cac:	66a5      	str	r5, [r4, #104]	; 0x68
 8002cae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002cb2:	f027 f804 	bl	8029cbe <memset>
 8002cb6:	4640      	mov	r0, r8
 8002cb8:	f7ff fcf2 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8002cbc:	4b97      	ldr	r3, [pc, #604]	; (8002f1c <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002cbe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002cc0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002cc4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002cc8:	a90a      	add	r1, sp, #40	; 0x28
 8002cca:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002cce:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002cd0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002cd4:	f00f fa5b 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002cd8:	4658      	mov	r0, fp
 8002cda:	f00f fb99 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002cde:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002ce2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	ee08 3a90 	vmov	s17, r3
 8002cec:	f7ff fcea 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002cf0:	4638      	mov	r0, r7
 8002cf2:	f00e f915 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8002cf6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	9303      	str	r3, [sp, #12]
 8002cfe:	f7fe f9a1 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002d02:	4b87      	ldr	r3, [pc, #540]	; (8002f20 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002d04:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002d08:	3324      	adds	r3, #36	; 0x24
 8002d0a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002d0e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002d12:	4618      	mov	r0, r3
 8002d14:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002d18:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002d1c:	ee08 3a10 	vmov	s16, r3
 8002d20:	f7ff fcd0 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002d24:	4650      	mov	r0, sl
 8002d26:	f7ff fccd 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002d2a:	4a7e      	ldr	r2, [pc, #504]	; (8002f24 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002d2c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002d30:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002d34:	4a7c      	ldr	r2, [pc, #496]	; (8002f28 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002d36:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002d3a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002d3e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002d42:	f010 fa21 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002d46:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002d4a:	462a      	mov	r2, r5
 8002d4c:	4648      	mov	r0, r9
 8002d4e:	9300      	str	r3, [sp, #0]
 8002d50:	4629      	mov	r1, r5
 8002d52:	23f0      	movs	r3, #240	; 0xf0
 8002d54:	f7ff fc90 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d58:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002d5a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002d5e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002d60:	4649      	mov	r1, r9
 8002d62:	4630      	mov	r0, r6
 8002d64:	f00c fc84 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002d68:	462a      	mov	r2, r5
 8002d6a:	4640      	mov	r0, r8
 8002d6c:	4629      	mov	r1, r5
 8002d6e:	f7ff fc76 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002d72:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002d76:	4640      	mov	r0, r8
 8002d78:	a90a      	add	r1, sp, #40	; 0x28
 8002d7a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002d7e:	f00f fa06 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d82:	4641      	mov	r1, r8
 8002d84:	4630      	mov	r0, r6
 8002d86:	f00c fc73 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002d8a:	4658      	mov	r0, fp
 8002d8c:	f240 1201 	movw	r2, #257	; 0x101
 8002d90:	2121      	movs	r1, #33	; 0x21
 8002d92:	f7ff fc64 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002d96:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d98:	aa0a      	add	r2, sp, #40	; 0x28
 8002d9a:	a909      	add	r1, sp, #36	; 0x24
 8002d9c:	4658      	mov	r0, fp
 8002d9e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002da2:	2302      	movs	r3, #2
 8002da4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002da8:	f00e fffb 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002dac:	4658      	mov	r0, fp
 8002dae:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002db2:	f7ff fca9 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002db6:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002dba:	330c      	adds	r3, #12
        color = col;
 8002dbc:	f04f 39ff 	mov.w	r9, #4294967295
 8002dc0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002dc4:	4659      	mov	r1, fp
 8002dc6:	4630      	mov	r0, r6
        colorPressed = col;
 8002dc8:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002dcc:	f00c fc50 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002dd0:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002dd4:	223c      	movs	r2, #60	; 0x3c
 8002dd6:	ee18 0a90 	vmov	r0, s17
 8002dda:	2120      	movs	r1, #32
 8002ddc:	f7ff fc3f 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002de0:	ee18 1a90 	vmov	r1, s17
 8002de4:	4640      	mov	r0, r8
        color = newColor;
 8002de6:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002dea:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002dee:	f00e fb59 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002df2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002df6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002dfa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002dfe:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002f2c <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002e02:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002e06:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002e08:	ee18 0a90 	vmov	r0, s17
 8002e0c:	a90a      	add	r1, sp, #40	; 0x28
 8002e0e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002e12:	f00e fde1 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e16:	ee18 1a90 	vmov	r1, s17
 8002e1a:	4630      	mov	r0, r6
 8002e1c:	f00c fc28 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002e20:	230a      	movs	r3, #10
 8002e22:	9300      	str	r3, [sp, #0]
 8002e24:	2232      	movs	r2, #50	; 0x32
 8002e26:	23f0      	movs	r3, #240	; 0xf0
 8002e28:	4629      	mov	r1, r5
 8002e2a:	4638      	mov	r0, r7
 8002e2c:	f7ff fc24 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e30:	9b03      	ldr	r3, [sp, #12]
 8002e32:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e36:	22a0      	movs	r2, #160	; 0xa0
 8002e38:	4611      	mov	r1, r2
 8002e3a:	4638      	mov	r0, r7
 8002e3c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002e40:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002e44:	f00e f982 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e48:	22a0      	movs	r2, #160	; 0xa0
 8002e4a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002e4e:	4638      	mov	r0, r7
 8002e50:	f00e f987 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002e54:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002e58:	2b20      	cmp	r3, #32
 8002e5a:	d005      	beq.n	8002e68 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002e5c:	2320      	movs	r3, #32
 8002e5e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002e62:	4638      	mov	r0, r7
 8002e64:	f00e f87c 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002e68:	4638      	mov	r0, r7
 8002e6a:	2101      	movs	r1, #1
 8002e6c:	f00e f984 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002e70:	4639      	mov	r1, r7
 8002e72:	4630      	mov	r0, r6
 8002e74:	f00c fbfc 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002e78:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002e7c:	ee18 0a10 	vmov	r0, s16
 8002e80:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002e82:	2500      	movs	r5, #0
 8002e84:	2145      	movs	r1, #69	; 0x45
 8002e86:	f7ff fbea 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002e8a:	ee18 1a10 	vmov	r1, s16
 8002e8e:	4640      	mov	r0, r8
        color = newColor;
 8002e90:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002e94:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002e98:	f00e fb04 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e9c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002ea0:	ee18 3a10 	vmov	r3, s16
 8002ea4:	333c      	adds	r3, #60	; 0x3c
 8002ea6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002eaa:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002eac:	ee18 0a10 	vmov	r0, s16
 8002eb0:	a90a      	add	r1, sp, #40	; 0x28
 8002eb2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002eb6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002eba:	f00e fd8d 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ebe:	ee18 1a10 	vmov	r1, s16
 8002ec2:	4630      	mov	r0, r6
 8002ec4:	f00c fbd4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002ec8:	220c      	movs	r2, #12
 8002eca:	4650      	mov	r0, sl
 8002ecc:	2136      	movs	r1, #54	; 0x36
 8002ece:	f7ff fbc6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8002ed2:	4651      	mov	r1, sl
 8002ed4:	4640      	mov	r0, r8
        color = newColor;
 8002ed6:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002eda:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002ede:	f00e fae1 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ee2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002ee6:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002eea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002eee:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002ef0:	a90a      	add	r1, sp, #40	; 0x28
 8002ef2:	4650      	mov	r0, sl
 8002ef4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ef8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002efc:	f00e fd6c 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f00:	4630      	mov	r0, r6
 8002f02:	4651      	mov	r1, sl
 8002f04:	f00c fbb4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f08:	4620      	mov	r0, r4
 8002f0a:	b00d      	add	sp, #52	; 0x34
 8002f0c:	ecbd 8b02 	vpop	{d8}
 8002f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f14:	0802b55c 	.word	0x0802b55c
 8002f18:	0802ddd0 	.word	0x0802ddd0
 8002f1c:	0802df98 	.word	0x0802df98
 8002f20:	0802db04 	.word	0x0802db04
 8002f24:	0802b544 	.word	0x0802b544
 8002f28:	08002c51 	.word	0x08002c51
 8002f2c:	0802b458 	.word	0x0802b458

08002f30 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002f30:	4770      	bx	lr

08002f32 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f32:	4770      	bx	lr

08002f34 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f34:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f36:	68c2      	ldr	r2, [r0, #12]
 8002f38:	6844      	ldr	r4, [r0, #4]
 8002f3a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f3c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f3e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f42:	07d2      	lsls	r2, r2, #31
 8002f44:	bf48      	it	mi
 8002f46:	5962      	ldrmi	r2, [r4, r5]
 8002f48:	689b      	ldr	r3, [r3, #8]
    }
 8002f4a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f4c:	bf48      	it	mi
 8002f4e:	58d3      	ldrmi	r3, [r2, r3]
 8002f50:	4718      	bx	r3

08002f52 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002f52:	6843      	ldr	r3, [r0, #4]
 8002f54:	b12b      	cbz	r3, 8002f62 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f56:	6883      	ldr	r3, [r0, #8]
 8002f58:	b92b      	cbnz	r3, 8002f66 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f5a:	68c0      	ldr	r0, [r0, #12]
 8002f5c:	f000 0001 	and.w	r0, r0, #1
 8002f60:	4770      	bx	lr
 8002f62:	4618      	mov	r0, r3
 8002f64:	4770      	bx	lr
 8002f66:	2001      	movs	r0, #1
    }
 8002f68:	4770      	bx	lr

08002f6a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f6a:	b510      	push	{r4, lr}
 8002f6c:	2110      	movs	r1, #16
 8002f6e:	4604      	mov	r4, r0
 8002f70:	f025 fe8d 	bl	8028c8e <_ZdlPvj>
 8002f74:	4620      	mov	r0, r4
 8002f76:	bd10      	pop	{r4, pc}

08002f78 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002f78:	b510      	push	{r4, lr}
 8002f7a:	4b03      	ldr	r3, [pc, #12]	; (8002f88 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002f7c:	6003      	str	r3, [r0, #0]
 8002f7e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f80:	f010 f90c 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f84:	4620      	mov	r0, r4
 8002f86:	bd10      	pop	{r4, pc}
 8002f88:	0802b5a8 	.word	0x0802b5a8

08002f8c <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002f8c:	b507      	push	{r0, r1, r2, lr}
 8002f8e:	4b07      	ldr	r3, [pc, #28]	; (8002fac <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002f90:	6003      	str	r3, [r0, #0]
 8002f92:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f94:	f010 f902 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f98:	9801      	ldr	r0, [sp, #4]
 8002f9a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002f9e:	f025 fe76 	bl	8028c8e <_ZdlPvj>
 8002fa2:	9801      	ldr	r0, [sp, #4]
 8002fa4:	b003      	add	sp, #12
 8002fa6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002faa:	bf00      	nop
 8002fac:	0802b5a8 	.word	0x0802b5a8

08002fb0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002fb0:	3098      	adds	r0, #152	; 0x98
 8002fb2:	4288      	cmp	r0, r1
{
 8002fb4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002fb6:	d105      	bne.n	8002fc4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002fb8:	f011 fdf2 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002fbc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002fc0:	f000 bd04 	b.w	80039cc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002fc4:	bd08      	pop	{r3, pc}
	...

08002fc8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fcc:	ed2d 8b02 	vpush	{d8}
 8002fd0:	4604      	mov	r4, r0
 8002fd2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002fd4:	46a1      	mov	r9, r4
 8002fd6:	2500      	movs	r5, #0
 8002fd8:	f013 fa62 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8002fdc:	4ba5      	ldr	r3, [pc, #660]	; (8003274 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002fde:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002fe0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002fe4:	2226      	movs	r2, #38	; 0x26
 8002fe6:	4629      	mov	r1, r5
 8002fe8:	4648      	mov	r0, r9
 8002fea:	f026 fe68 	bl	8029cbe <memset>
 8002fee:	4648      	mov	r0, r9
 8002ff0:	f7ff fb56 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8002ff4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ff8:	26ff      	movs	r6, #255	; 0xff
 8002ffa:	4b9f      	ldr	r3, [pc, #636]	; (8003278 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8002ffc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002ffe:	2226      	movs	r2, #38	; 0x26
 8003000:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003004:	4629      	mov	r1, r5
 8003006:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800300a:	4640      	mov	r0, r8
 800300c:	66a5      	str	r5, [r4, #104]	; 0x68
 800300e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003012:	f026 fe54 	bl	8029cbe <memset>
 8003016:	4640      	mov	r0, r8
 8003018:	f7ff fb42 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 800301c:	4b97      	ldr	r3, [pc, #604]	; (800327c <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 800301e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003020:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003024:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003028:	a90a      	add	r1, sp, #40	; 0x28
 800302a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800302e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8003030:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003034:	f00f f8ab 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003038:	4658      	mov	r0, fp
 800303a:	f00f f9e9 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800303e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003042:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003046:	4618      	mov	r0, r3
 8003048:	ee08 3a90 	vmov	s17, r3
 800304c:	f7ff fb3a 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8003050:	4638      	mov	r0, r7
 8003052:	f00d ff65 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8003056:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800305a:	4618      	mov	r0, r3
 800305c:	9303      	str	r3, [sp, #12]
 800305e:	f7fd fff1 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003062:	4b87      	ldr	r3, [pc, #540]	; (8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8003064:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003068:	3324      	adds	r3, #36	; 0x24
 800306a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800306e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8003072:	4618      	mov	r0, r3
 8003074:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003078:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800307c:	ee08 3a10 	vmov	s16, r3
 8003080:	f7ff fb20 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8003084:	4650      	mov	r0, sl
 8003086:	f7ff fb1d 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800308a:	4a7e      	ldr	r2, [pc, #504]	; (8003284 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 800308c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003090:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8003094:	4a7c      	ldr	r2, [pc, #496]	; (8003288 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003096:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800309a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 800309e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80030a2:	f010 f871 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80030a6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80030aa:	462a      	mov	r2, r5
 80030ac:	4648      	mov	r0, r9
 80030ae:	9300      	str	r3, [sp, #0]
 80030b0:	4629      	mov	r1, r5
 80030b2:	23f0      	movs	r3, #240	; 0xf0
 80030b4:	f7ff fae0 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030b8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80030ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80030be:	66a3      	str	r3, [r4, #104]	; 0x68
 80030c0:	4649      	mov	r1, r9
 80030c2:	4630      	mov	r0, r6
 80030c4:	f00c fad4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80030c8:	462a      	mov	r2, r5
 80030ca:	4640      	mov	r0, r8
 80030cc:	4629      	mov	r1, r5
 80030ce:	f7ff fac6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80030d2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80030d4:	4640      	mov	r0, r8
 80030d6:	a90a      	add	r1, sp, #40	; 0x28
 80030d8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80030dc:	f00f f857 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030e0:	4641      	mov	r1, r8
 80030e2:	4630      	mov	r0, r6
 80030e4:	f00c fac4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80030e8:	4658      	mov	r0, fp
 80030ea:	f240 1201 	movw	r2, #257	; 0x101
 80030ee:	2121      	movs	r1, #33	; 0x21
 80030f0:	f7ff fab5 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80030f4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80030f6:	aa0a      	add	r2, sp, #40	; 0x28
 80030f8:	a909      	add	r1, sp, #36	; 0x24
 80030fa:	4658      	mov	r0, fp
 80030fc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003100:	2302      	movs	r3, #2
 8003102:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003106:	f00e fe4c 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800310a:	230f      	movs	r3, #15
        updateTextPosition();
 800310c:	4658      	mov	r0, fp
 800310e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003112:	f7ff faf9 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003116:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800311a:	330c      	adds	r3, #12
        color = col;
 800311c:	f04f 39ff 	mov.w	r9, #4294967295
 8003120:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003124:	4659      	mov	r1, fp
 8003126:	4630      	mov	r0, r6
        colorPressed = col;
 8003128:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800312c:	f00c faa0 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003130:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8003134:	223c      	movs	r2, #60	; 0x3c
 8003136:	ee18 0a90 	vmov	r0, s17
 800313a:	213a      	movs	r1, #58	; 0x3a
 800313c:	f7ff fa8f 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8003140:	ee18 1a90 	vmov	r1, s17
 8003144:	4640      	mov	r0, r8
        color = newColor;
 8003146:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800314a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800314e:	f00e f9a9 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003152:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003156:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800315a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800315e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800328c <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 8003162:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003166:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003168:	ee18 0a90 	vmov	r0, s17
 800316c:	a90a      	add	r1, sp, #40	; 0x28
 800316e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003172:	f00e fc31 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003176:	ee18 1a90 	vmov	r1, s17
 800317a:	4630      	mov	r0, r6
 800317c:	f00c fa78 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003180:	230a      	movs	r3, #10
 8003182:	9300      	str	r3, [sp, #0]
 8003184:	2232      	movs	r2, #50	; 0x32
 8003186:	23f0      	movs	r3, #240	; 0xf0
 8003188:	4629      	mov	r1, r5
 800318a:	4638      	mov	r0, r7
 800318c:	f7ff fa74 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003190:	9b03      	ldr	r3, [sp, #12]
 8003192:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003196:	22a0      	movs	r2, #160	; 0xa0
 8003198:	4611      	mov	r1, r2
 800319a:	4638      	mov	r0, r7
 800319c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80031a0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80031a4:	f00d ffd2 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80031a8:	22a0      	movs	r2, #160	; 0xa0
 80031aa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80031ae:	4638      	mov	r0, r7
 80031b0:	f00d ffd7 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80031b4:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80031b8:	2b20      	cmp	r3, #32
 80031ba:	d005      	beq.n	80031c8 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80031bc:	2320      	movs	r3, #32
 80031be:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80031c2:	4638      	mov	r0, r7
 80031c4:	f00d fecc 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80031c8:	4638      	mov	r0, r7
 80031ca:	2101      	movs	r1, #1
 80031cc:	f00d ffd4 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80031d0:	4639      	mov	r1, r7
 80031d2:	4630      	mov	r0, r6
 80031d4:	f00c fa4c 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80031d8:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80031dc:	ee18 0a10 	vmov	r0, s16
 80031e0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80031e2:	2500      	movs	r5, #0
 80031e4:	2145      	movs	r1, #69	; 0x45
 80031e6:	f7ff fa3a 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80031ea:	ee18 1a10 	vmov	r1, s16
 80031ee:	4640      	mov	r0, r8
        color = newColor;
 80031f0:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80031f4:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80031f8:	f00e f954 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031fc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003200:	ee18 3a10 	vmov	r3, s16
 8003204:	333c      	adds	r3, #60	; 0x3c
 8003206:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800320a:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800320c:	ee18 0a10 	vmov	r0, s16
 8003210:	a90a      	add	r1, sp, #40	; 0x28
 8003212:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003216:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800321a:	f00e fbdd 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800321e:	ee18 1a10 	vmov	r1, s16
 8003222:	4630      	mov	r0, r6
 8003224:	f00c fa24 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003228:	220c      	movs	r2, #12
 800322a:	4650      	mov	r0, sl
 800322c:	2136      	movs	r1, #54	; 0x36
 800322e:	f7ff fa16 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8003232:	4651      	mov	r1, sl
 8003234:	4640      	mov	r0, r8
        color = newColor;
 8003236:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800323a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800323e:	f00e f931 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003242:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003246:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800324a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800324e:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003250:	a90a      	add	r1, sp, #40	; 0x28
 8003252:	4650      	mov	r0, sl
 8003254:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003258:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800325c:	f00e fbbc 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003260:	4630      	mov	r0, r6
 8003262:	4651      	mov	r1, sl
 8003264:	f00c fa04 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003268:	4620      	mov	r0, r4
 800326a:	b00d      	add	sp, #52	; 0x34
 800326c:	ecbd 8b02 	vpop	{d8}
 8003270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003274:	0802b5a8 	.word	0x0802b5a8
 8003278:	0802ddd0 	.word	0x0802ddd0
 800327c:	0802df98 	.word	0x0802df98
 8003280:	0802db04 	.word	0x0802db04
 8003284:	0802b590 	.word	0x0802b590
 8003288:	08002fb1 	.word	0x08002fb1
 800328c:	0802b458 	.word	0x0802b458

08003290 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003290:	4770      	bx	lr

08003292 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003292:	4770      	bx	lr

08003294 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003294:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003298:	6808      	ldr	r0, [r1, #0]
 800329a:	6849      	ldr	r1, [r1, #4]
 800329c:	c303      	stmia	r3!, {r0, r1}
    }
 800329e:	4770      	bx	lr

080032a0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80032a0:	4770      	bx	lr

080032a2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80032a2:	4770      	bx	lr

080032a4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80032a4:	6041      	str	r1, [r0, #4]
    }
 80032a6:	4770      	bx	lr

080032a8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80032a8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80032aa:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80032ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80032b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80032b4:	8002      	strh	r2, [r0, #0]
 80032b6:	8042      	strh	r2, [r0, #2]
 80032b8:	8084      	strh	r4, [r0, #4]
 80032ba:	80c1      	strh	r1, [r0, #6]
        }
 80032bc:	bd10      	pop	{r4, pc}

080032be <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80032be:	4770      	bx	lr

080032c0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80032c0:	4770      	bx	lr
	...

080032c4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80032c4:	4b06      	ldr	r3, [pc, #24]	; (80032e0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80032c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80032ca:	2300      	movs	r3, #0
 80032cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Measurement_Single_Display_1P

void FrontendApplicationBase::gotoMeasurement_Single_Display_1PScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMeasurement_Single_Display_1PScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80032d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80032d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80032d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMeasurement_Single_Display_1PScreenNoTransition();
    }
 80032dc:	4770      	bx	lr
 80032de:	bf00      	nop
 80032e0:	08003681 	.word	0x08003681

080032e4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80032e4:	2301      	movs	r3, #1
 80032e6:	7203      	strb	r3, [r0, #8]
    }
 80032e8:	4770      	bx	lr

080032ea <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80032ea:	4770      	bx	lr

080032ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80032ec:	4770      	bx	lr

080032ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80032ee:	4770      	bx	lr

080032f0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80032f0:	4770      	bx	lr

080032f2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80032f2:	4770      	bx	lr

080032f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80032f4:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80032f6:	6840      	ldr	r0, [r0, #4]
 80032f8:	6803      	ldr	r3, [r0, #0]
 80032fa:	3110      	adds	r1, #16
 80032fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80032fe:	4718      	bx	r3

08003300 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003300:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003302:	6840      	ldr	r0, [r0, #4]
 8003304:	6803      	ldr	r3, [r0, #0]
 8003306:	3110      	adds	r1, #16
 8003308:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800330a:	4718      	bx	r3

0800330c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800330c:	4770      	bx	lr

0800330e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800330e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003310:	6840      	ldr	r0, [r0, #4]
 8003312:	6803      	ldr	r3, [r0, #0]
 8003314:	3110      	adds	r1, #16
 8003316:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003318:	4718      	bx	r3

0800331a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800331a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800331c:	6840      	ldr	r0, [r0, #4]
 800331e:	6803      	ldr	r3, [r0, #0]
 8003320:	3110      	adds	r1, #16
 8003322:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003324:	4718      	bx	r3

08003326 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003326:	4770      	bx	lr

08003328 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003328:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800332a:	68c2      	ldr	r2, [r0, #12]
 800332c:	6841      	ldr	r1, [r0, #4]
 800332e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003330:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003332:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003336:	07d2      	lsls	r2, r2, #31
 8003338:	bf48      	it	mi
 800333a:	590a      	ldrmi	r2, [r1, r4]
 800333c:	689b      	ldr	r3, [r3, #8]
    }
 800333e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003342:	bf48      	it	mi
 8003344:	58d3      	ldrmi	r3, [r2, r3]
 8003346:	4718      	bx	r3

08003348 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003348:	6843      	ldr	r3, [r0, #4]
 800334a:	b12b      	cbz	r3, 8003358 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800334c:	6883      	ldr	r3, [r0, #8]
 800334e:	b92b      	cbnz	r3, 800335c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003350:	68c0      	ldr	r0, [r0, #12]
 8003352:	f000 0001 	and.w	r0, r0, #1
 8003356:	4770      	bx	lr
 8003358:	4618      	mov	r0, r3
 800335a:	4770      	bx	lr
 800335c:	2001      	movs	r0, #1
    }
 800335e:	4770      	bx	lr

08003360 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003360:	b510      	push	{r4, lr}
 8003362:	210c      	movs	r1, #12
 8003364:	4604      	mov	r4, r0
 8003366:	f025 fc92 	bl	8028c8e <_ZdlPvj>
 800336a:	4620      	mov	r0, r4
 800336c:	bd10      	pop	{r4, pc}

0800336e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800336e:	b510      	push	{r4, lr}
 8003370:	2110      	movs	r1, #16
 8003372:	4604      	mov	r4, r0
 8003374:	f025 fc8b 	bl	8028c8e <_ZdlPvj>
 8003378:	4620      	mov	r0, r4
 800337a:	bd10      	pop	{r4, pc}

0800337c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800337c:	b510      	push	{r4, lr}
 800337e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003382:	4604      	mov	r4, r0
 8003384:	f025 fc83 	bl	8028c8e <_ZdlPvj>
 8003388:	4620      	mov	r0, r4
 800338a:	bd10      	pop	{r4, pc}

0800338c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800338c:	b510      	push	{r4, lr}
 800338e:	2138      	movs	r1, #56	; 0x38
 8003390:	4604      	mov	r4, r0
 8003392:	f025 fc7c 	bl	8028c8e <_ZdlPvj>
 8003396:	4620      	mov	r0, r4
 8003398:	bd10      	pop	{r4, pc}

0800339a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800339a:	b510      	push	{r4, lr}
 800339c:	2128      	movs	r1, #40	; 0x28
 800339e:	4604      	mov	r4, r0
 80033a0:	f025 fc75 	bl	8028c8e <_ZdlPvj>
 80033a4:	4620      	mov	r0, r4
 80033a6:	bd10      	pop	{r4, pc}

080033a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80033a8:	b510      	push	{r4, lr}
 80033aa:	2138      	movs	r1, #56	; 0x38
 80033ac:	4604      	mov	r4, r0
 80033ae:	f025 fc6e 	bl	8028c8e <_ZdlPvj>
 80033b2:	4620      	mov	r0, r4
 80033b4:	bd10      	pop	{r4, pc}

080033b6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80033b6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80033b8:	f011 fbf2 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 80033bc:	6803      	ldr	r3, [r0, #0]
    }
 80033be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80033c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033c4:	4718      	bx	r3
	...

080033c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80033c8:	b513      	push	{r0, r1, r4, lr}
 80033ca:	4604      	mov	r4, r0
        animationCounter++;
 80033cc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80033ce:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80033d0:	3001      	adds	r0, #1
 80033d2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80033d4:	4298      	cmp	r0, r3
        animationCounter++;
 80033d6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80033d8:	d905      	bls.n	80033e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80033da:	2301      	movs	r3, #1
 80033dc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80033de:	2300      	movs	r3, #0
 80033e0:	72a3      	strb	r3, [r4, #10]
    }
 80033e2:	b002      	add	sp, #8
 80033e4:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80033e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80033ea:	2100      	movs	r1, #0
 80033ec:	f013 fa0a 	bl	8016804 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80033f0:	f010 0201 	ands.w	r2, r0, #1
 80033f4:	b283      	uxth	r3, r0
 80033f6:	d12a      	bne.n	800344e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80033f8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80033fa:	4a19      	ldr	r2, [pc, #100]	; (8003460 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80033fc:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003400:	89e3      	ldrh	r3, [r4, #14]
 8003402:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003404:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003408:	82a0      	strh	r0, [r4, #20]
 800340a:	2000      	movs	r0, #0
 800340c:	1ad2      	subs	r2, r2, r3
 800340e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8003412:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003414:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003416:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003418:	4a12      	ldr	r2, [pc, #72]	; (8003464 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800341a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800341e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003420:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003424:	691b      	ldr	r3, [r3, #16]
 8003426:	f8ad 1000 	strh.w	r1, [sp]
 800342a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800342e:	4669      	mov	r1, sp
 8003430:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003432:	7aa3      	ldrb	r3, [r4, #10]
 8003434:	2b01      	cmp	r3, #1
 8003436:	d1d4      	bne.n	80033e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003438:	4b0b      	ldr	r3, [pc, #44]	; (8003468 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800343a:	781b      	ldrb	r3, [r3, #0]
 800343c:	2b00      	cmp	r3, #0
 800343e:	d0d0      	beq.n	80033e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003440:	f011 fbae 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003444:	b002      	add	sp, #8
 8003446:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800344a:	f011 bbaf 	b.w	8014bac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800344e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003452:	2800      	cmp	r0, #0
 8003454:	bfd8      	it	le
 8003456:	460a      	movle	r2, r1
 8003458:	4413      	add	r3, r2
 800345a:	81e3      	strh	r3, [r4, #14]
 800345c:	e7cd      	b.n	80033fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800345e:	bf00      	nop
 8003460:	20012d98 	.word	0x20012d98
 8003464:	20012d9a 	.word	0x20012d9a
 8003468:	20012da2 	.word	0x20012da2

0800346c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800346c:	b510      	push	{r4, lr}
 800346e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003470:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003474:	b158      	cbz	r0, 800348e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003476:	6803      	ldr	r3, [r0, #0]
 8003478:	68db      	ldr	r3, [r3, #12]
 800347a:	4798      	blx	r3
 800347c:	b138      	cbz	r0, 800348e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800347e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8003482:	6803      	ldr	r3, [r0, #0]
 8003484:	689b      	ldr	r3, [r3, #8]
 8003486:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003488:	2300      	movs	r3, #0
 800348a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800348e:	bd10      	pop	{r4, pc}

08003490 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003490:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003494:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003498:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800349a:	68a8      	ldr	r0, [r5, #8]
 800349c:	6803      	ldr	r3, [r0, #0]
 800349e:	6a1b      	ldr	r3, [r3, #32]
 80034a0:	4798      	blx	r3
 80034a2:	2897      	cmp	r0, #151	; 0x97
 80034a4:	d805      	bhi.n	80034b2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80034a6:	4b46      	ldr	r3, [pc, #280]	; (80035c0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80034a8:	4a46      	ldr	r2, [pc, #280]	; (80035c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80034aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034ac:	4846      	ldr	r0, [pc, #280]	; (80035c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80034ae:	f026 fa01 	bl	80298b4 <__assert_func>
 80034b2:	6868      	ldr	r0, [r5, #4]
 80034b4:	6803      	ldr	r3, [r0, #0]
 80034b6:	6a1b      	ldr	r3, [r3, #32]
 80034b8:	4798      	blx	r3
 80034ba:	280f      	cmp	r0, #15
 80034bc:	d803      	bhi.n	80034c6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80034be:	4b43      	ldr	r3, [pc, #268]	; (80035cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80034c0:	4a40      	ldr	r2, [pc, #256]	; (80035c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80034c2:	21a4      	movs	r1, #164	; 0xa4
 80034c4:	e7f2      	b.n	80034ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80034c6:	68e8      	ldr	r0, [r5, #12]
 80034c8:	6803      	ldr	r3, [r0, #0]
 80034ca:	6a1b      	ldr	r3, [r3, #32]
 80034cc:	4798      	blx	r3
 80034ce:	280b      	cmp	r0, #11
 80034d0:	d803      	bhi.n	80034da <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80034d2:	4b3f      	ldr	r3, [pc, #252]	; (80035d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80034d4:	4a3b      	ldr	r2, [pc, #236]	; (80035c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80034d6:	21a5      	movs	r1, #165	; 0xa5
 80034d8:	e7e8      	b.n	80034ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80034da:	f011 fb61 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80034de:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80035d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80034e2:	3004      	adds	r0, #4
 80034e4:	f011 fbc2 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80034e8:	f8d9 0000 	ldr.w	r0, [r9]
 80034ec:	b110      	cbz	r0, 80034f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80034ee:	6803      	ldr	r3, [r0, #0]
 80034f0:	68db      	ldr	r3, [r3, #12]
 80034f2:	4798      	blx	r3
    if (*currentTrans)
 80034f4:	f8d9 0000 	ldr.w	r0, [r9]
 80034f8:	b110      	cbz	r0, 8003500 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80034fa:	6803      	ldr	r3, [r0, #0]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	4798      	blx	r3
    if (*currentScreen)
 8003500:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80035dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003504:	f8d8 0000 	ldr.w	r0, [r8]
 8003508:	b110      	cbz	r0, 8003510 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800350a:	6803      	ldr	r3, [r0, #0]
 800350c:	695b      	ldr	r3, [r3, #20]
 800350e:	4798      	blx	r3
    if (*currentPresenter)
 8003510:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003514:	b110      	cbz	r0, 800351c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003516:	6803      	ldr	r3, [r0, #0]
 8003518:	685b      	ldr	r3, [r3, #4]
 800351a:	4798      	blx	r3
    if (*currentScreen)
 800351c:	f8d8 0000 	ldr.w	r0, [r8]
 8003520:	b110      	cbz	r0, 8003528 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003522:	6803      	ldr	r3, [r0, #0]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	4798      	blx	r3
    if (*currentPresenter)
 8003528:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800352c:	b110      	cbz	r0, 8003534 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800352e:	6803      	ldr	r3, [r0, #0]
 8003530:	689b      	ldr	r3, [r3, #8]
 8003532:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003534:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003536:	6803      	ldr	r3, [r0, #0]
 8003538:	2100      	movs	r1, #0
 800353a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800353c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800353e:	f04f 0b00 	mov.w	fp, #0
 8003542:	4b24      	ldr	r3, [pc, #144]	; (80035d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003544:	6003      	str	r3, [r0, #0]
 8003546:	4604      	mov	r4, r0
 8003548:	f8c0 b004 	str.w	fp, [r0, #4]
 800354c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003550:	68a8      	ldr	r0, [r5, #8]
 8003552:	6803      	ldr	r3, [r0, #0]
 8003554:	4659      	mov	r1, fp
 8003556:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003558:	4798      	blx	r3
 800355a:	4606      	mov	r6, r0
 800355c:	f005 fa76 	bl	8008a4c <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003560:	6868      	ldr	r0, [r5, #4]
 8003562:	6803      	ldr	r3, [r0, #0]
 8003564:	4659      	mov	r1, fp
 8003566:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003568:	4798      	blx	r3
 800356a:	4631      	mov	r1, r6
 800356c:	4605      	mov	r5, r0
 800356e:	f005 fa49 	bl	8008a04 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8003572:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003576:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800357a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800357e:	b1e5      	cbz	r5, 80035ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003580:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003582:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003586:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003588:	f8c5 a008 	str.w	sl, [r5, #8]
 800358c:	4630      	mov	r0, r6
 800358e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003590:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003592:	4798      	blx	r3
    newPresenter->activate();
 8003594:	682b      	ldr	r3, [r5, #0]
 8003596:	4628      	mov	r0, r5
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800359c:	4621      	mov	r1, r4
 800359e:	4630      	mov	r0, r6
 80035a0:	f013 f92a 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035a4:	6823      	ldr	r3, [r4, #0]
 80035a6:	4620      	mov	r0, r4
 80035a8:	691b      	ldr	r3, [r3, #16]
 80035aa:	4798      	blx	r3
    newTransition->invalidate();
 80035ac:	6823      	ldr	r3, [r4, #0]
 80035ae:	695b      	ldr	r3, [r3, #20]
 80035b0:	4620      	mov	r0, r4
}
 80035b2:	b001      	add	sp, #4
 80035b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035b8:	4718      	bx	r3
    model->bind(newPresenter);
 80035ba:	462b      	mov	r3, r5
 80035bc:	e7e1      	b.n	8003582 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80035be:	bf00      	nop
 80035c0:	0802b5d4 	.word	0x0802b5d4
 80035c4:	0802b662 	.word	0x0802b662
 80035c8:	0802b770 	.word	0x0802b770
 80035cc:	0802b7b7 	.word	0x0802b7b7
 80035d0:	0802b85a 	.word	0x0802b85a
 80035d4:	0802cca0 	.word	0x0802cca0
 80035d8:	20012dec 	.word	0x20012dec
 80035dc:	20012de8 	.word	0x20012de8

080035e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80035e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80035e2:	4604      	mov	r4, r0
        animationCounter++;
 80035e4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80035e6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80035e8:	3001      	adds	r0, #1
 80035ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80035ec:	4298      	cmp	r0, r3
        animationCounter++;
 80035ee:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80035f0:	d905      	bls.n	80035fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80035f2:	2301      	movs	r3, #1
 80035f4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80035f6:	2300      	movs	r3, #0
 80035f8:	72a3      	strb	r3, [r4, #10]
    }
 80035fa:	b003      	add	sp, #12
 80035fc:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80035fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003602:	2100      	movs	r1, #0
 8003604:	f013 f8fe 	bl	8016804 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003608:	f010 0201 	ands.w	r2, r0, #1
 800360c:	b283      	uxth	r3, r0
 800360e:	d128      	bne.n	8003662 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003610:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003612:	4b18      	ldr	r3, [pc, #96]	; (8003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003614:	4818      	ldr	r0, [pc, #96]	; (8003678 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003616:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003618:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800361a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800361c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003620:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003624:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003626:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003628:	442b      	add	r3, r5
 800362a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800362c:	b212      	sxth	r2, r2
 800362e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003632:	6803      	ldr	r3, [r0, #0]
 8003634:	8322      	strh	r2, [r4, #24]
 8003636:	f8ad 2000 	strh.w	r2, [sp]
 800363a:	2200      	movs	r2, #0
 800363c:	691b      	ldr	r3, [r3, #16]
 800363e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003642:	4669      	mov	r1, sp
 8003644:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003646:	7aa3      	ldrb	r3, [r4, #10]
 8003648:	2b01      	cmp	r3, #1
 800364a:	d1d6      	bne.n	80035fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800364c:	4b0b      	ldr	r3, [pc, #44]	; (800367c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800364e:	781b      	ldrb	r3, [r3, #0]
 8003650:	2b00      	cmp	r3, #0
 8003652:	d0d2      	beq.n	80035fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003654:	f011 faa4 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003658:	b003      	add	sp, #12
 800365a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800365e:	f011 baa5 	b.w	8014bac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003662:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003666:	2800      	cmp	r0, #0
 8003668:	bfd8      	it	le
 800366a:	460a      	movle	r2, r1
 800366c:	4413      	add	r3, r2
 800366e:	81e3      	strh	r3, [r4, #14]
 8003670:	e7cf      	b.n	8003612 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8003672:	bf00      	nop
 8003674:	20012d98 	.word	0x20012d98
 8003678:	20012d9a 	.word	0x20012d9a
 800367c:	20012da2 	.word	0x20012da2

08003680 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv>:
{
 8003680:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003684:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003688:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800368a:	68a8      	ldr	r0, [r5, #8]
 800368c:	6803      	ldr	r3, [r0, #0]
 800368e:	6a1b      	ldr	r3, [r3, #32]
 8003690:	4798      	blx	r3
 8003692:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8003696:	4298      	cmp	r0, r3
 8003698:	d805      	bhi.n	80036a6 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x26>
 800369a:	4b46      	ldr	r3, [pc, #280]	; (80037b4 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x134>)
 800369c:	4a46      	ldr	r2, [pc, #280]	; (80037b8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 800369e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80036a0:	4846      	ldr	r0, [pc, #280]	; (80037bc <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x13c>)
 80036a2:	f026 f907 	bl	80298b4 <__assert_func>
 80036a6:	6868      	ldr	r0, [r5, #4]
 80036a8:	6803      	ldr	r3, [r0, #0]
 80036aa:	6a1b      	ldr	r3, [r3, #32]
 80036ac:	4798      	blx	r3
 80036ae:	280f      	cmp	r0, #15
 80036b0:	d803      	bhi.n	80036ba <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x3a>
 80036b2:	4b43      	ldr	r3, [pc, #268]	; (80037c0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x140>)
 80036b4:	4a40      	ldr	r2, [pc, #256]	; (80037b8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 80036b6:	21a4      	movs	r1, #164	; 0xa4
 80036b8:	e7f2      	b.n	80036a0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80036ba:	68e8      	ldr	r0, [r5, #12]
 80036bc:	6803      	ldr	r3, [r0, #0]
 80036be:	6a1b      	ldr	r3, [r3, #32]
 80036c0:	4798      	blx	r3
 80036c2:	280b      	cmp	r0, #11
 80036c4:	d803      	bhi.n	80036ce <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x4e>
 80036c6:	4b3f      	ldr	r3, [pc, #252]	; (80037c4 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x144>)
 80036c8:	4a3b      	ldr	r2, [pc, #236]	; (80037b8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 80036ca:	21a5      	movs	r1, #165	; 0xa5
 80036cc:	e7e8      	b.n	80036a0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80036ce:	f011 fa67 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80036d2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80037cc <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x14c>
 80036d6:	3004      	adds	r0, #4
 80036d8:	f011 fac8 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80036dc:	f8d9 0000 	ldr.w	r0, [r9]
 80036e0:	b110      	cbz	r0, 80036e8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80036e2:	6803      	ldr	r3, [r0, #0]
 80036e4:	68db      	ldr	r3, [r3, #12]
 80036e6:	4798      	blx	r3
    if (*currentTrans)
 80036e8:	f8d9 0000 	ldr.w	r0, [r9]
 80036ec:	b110      	cbz	r0, 80036f4 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80036ee:	6803      	ldr	r3, [r0, #0]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	4798      	blx	r3
    if (*currentScreen)
 80036f4:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80037d0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x150>
 80036f8:	f8d8 0000 	ldr.w	r0, [r8]
 80036fc:	b110      	cbz	r0, 8003704 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80036fe:	6803      	ldr	r3, [r0, #0]
 8003700:	695b      	ldr	r3, [r3, #20]
 8003702:	4798      	blx	r3
    if (*currentPresenter)
 8003704:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003708:	b110      	cbz	r0, 8003710 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800370a:	6803      	ldr	r3, [r0, #0]
 800370c:	685b      	ldr	r3, [r3, #4]
 800370e:	4798      	blx	r3
    if (*currentScreen)
 8003710:	f8d8 0000 	ldr.w	r0, [r8]
 8003714:	b110      	cbz	r0, 800371c <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003716:	6803      	ldr	r3, [r0, #0]
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	4798      	blx	r3
    if (*currentPresenter)
 800371c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003720:	b110      	cbz	r0, 8003728 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003722:	6803      	ldr	r3, [r0, #0]
 8003724:	689b      	ldr	r3, [r3, #8]
 8003726:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003728:	68e8      	ldr	r0, [r5, #12]
 800372a:	6803      	ldr	r3, [r0, #0]
 800372c:	2100      	movs	r1, #0
 800372e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003730:	4798      	blx	r3
 8003732:	f04f 0b00 	mov.w	fp, #0
 8003736:	4b24      	ldr	r3, [pc, #144]	; (80037c8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x148>)
 8003738:	6003      	str	r3, [r0, #0]
 800373a:	4604      	mov	r4, r0
 800373c:	f8c0 b004 	str.w	fp, [r0, #4]
 8003740:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003744:	68a8      	ldr	r0, [r5, #8]
 8003746:	6803      	ldr	r3, [r0, #0]
 8003748:	4659      	mov	r1, fp
 800374a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800374c:	4798      	blx	r3
 800374e:	4606      	mov	r6, r0
 8003750:	f005 f81e 	bl	8008790 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003754:	6868      	ldr	r0, [r5, #4]
 8003756:	6803      	ldr	r3, [r0, #0]
 8003758:	4659      	mov	r1, fp
 800375a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800375c:	4798      	blx	r3
 800375e:	4631      	mov	r1, r6
 8003760:	4605      	mov	r5, r0
 8003762:	f004 ffef 	bl	8008744 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8003766:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800376a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800376e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003772:	b1e5      	cbz	r5, 80037ae <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x12e>
 8003774:	1d2b      	adds	r3, r5, #4
 8003776:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800377a:	6833      	ldr	r3, [r6, #0]
 800377c:	f8c5 a008 	str.w	sl, [r5, #8]
 8003780:	4630      	mov	r0, r6
 8003782:	68db      	ldr	r3, [r3, #12]
 8003784:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003786:	4798      	blx	r3
    newPresenter->activate();
 8003788:	682b      	ldr	r3, [r5, #0]
 800378a:	4628      	mov	r0, r5
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003790:	4621      	mov	r1, r4
 8003792:	4630      	mov	r0, r6
 8003794:	f013 f830 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003798:	6823      	ldr	r3, [r4, #0]
 800379a:	4620      	mov	r0, r4
 800379c:	691b      	ldr	r3, [r3, #16]
 800379e:	4798      	blx	r3
    newTransition->invalidate();
 80037a0:	6823      	ldr	r3, [r4, #0]
 80037a2:	695b      	ldr	r3, [r3, #20]
 80037a4:	4620      	mov	r0, r4
}
 80037a6:	b001      	add	sp, #4
 80037a8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037ac:	4718      	bx	r3
    model->bind(newPresenter);
 80037ae:	462b      	mov	r3, r5
 80037b0:	e7e1      	b.n	8003776 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0xf6>
 80037b2:	bf00      	nop
 80037b4:	0802b5d4 	.word	0x0802b5d4
 80037b8:	0802b8fd 	.word	0x0802b8fd
 80037bc:	0802b770 	.word	0x0802b770
 80037c0:	0802b7b7 	.word	0x0802b7b7
 80037c4:	0802b85a 	.word	0x0802b85a
 80037c8:	0802cca0 	.word	0x0802cca0
 80037cc:	20012dec 	.word	0x20012dec
 80037d0:	20012de8 	.word	0x20012de8

080037d4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80037d4:	4b04      	ldr	r3, [pc, #16]	; (80037e8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80037dc:	b10a      	cbz	r2, 80037e2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80037de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80037e0:	b900      	cbnz	r0, 80037e4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80037e2:	6898      	ldr	r0, [r3, #8]
    }
 80037e4:	4770      	bx	lr
 80037e6:	bf00      	nop
 80037e8:	20012da4 	.word	0x20012da4

080037ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80037ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037ee:	4604      	mov	r4, r0
 80037f0:	4617      	mov	r7, r2
 80037f2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80037f4:	f011 fb08 	bl	8014e08 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80037f8:	4b10      	ldr	r3, [pc, #64]	; (800383c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80037fa:	601c      	str	r4, [r3, #0]
      model(m)
 80037fc:	4b10      	ldr	r3, [pc, #64]	; (8003840 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80037fe:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003800:	4b10      	ldr	r3, [pc, #64]	; (8003844 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003802:	2500      	movs	r5, #0
 8003804:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003808:	4b0f      	ldr	r3, [pc, #60]	; (8003848 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800380a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800380e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003810:	6803      	ldr	r3, [r0, #0]
 8003812:	2101      	movs	r1, #1
 8003814:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003816:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800381a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800381e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003820:	4628      	mov	r0, r5
 8003822:	f004 fbf5 	bl	8008010 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003826:	f7ff ffd5 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 800382a:	f01a feb2 	bl	801e592 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800382e:	f7ff ffd1 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8003832:	f01a ff29 	bl	801e688 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003836:	4620      	mov	r0, r4
 8003838:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800383a:	bf00      	nop
 800383c:	20012df8 	.word	0x20012df8
 8003840:	0802cc4c 	.word	0x0802cc4c
 8003844:	0802cc34 	.word	0x0802cc34
 8003848:	20012da4 	.word	0x20012da4

0800384c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800384c:	4b06      	ldr	r3, [pc, #24]	; (8003868 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800384e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003852:	2300      	movs	r3, #0
 8003854:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003858:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800385c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003860:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	08003e91 	.word	0x08003e91

0800386c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 800386c:	4b06      	ldr	r3, [pc, #24]	; (8003888 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800386e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003872:	2300      	movs	r3, #0
 8003874:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003878:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800387c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003880:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003884:	4770      	bx	lr
 8003886:	bf00      	nop
 8003888:	08004cb5 	.word	0x08004cb5

0800388c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 800388c:	4b06      	ldr	r3, [pc, #24]	; (80038a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800388e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003892:	2300      	movs	r3, #0
 8003894:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003898:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800389c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038a4:	4770      	bx	lr
 80038a6:	bf00      	nop
 80038a8:	08003d51 	.word	0x08003d51

080038ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80038ac:	4b06      	ldr	r3, [pc, #24]	; (80038c8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80038ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038b2:	2300      	movs	r3, #0
 80038b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038c4:	4770      	bx	lr
 80038c6:	bf00      	nop
 80038c8:	08004b75 	.word	0x08004b75

080038cc <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>:
 80038cc:	4b06      	ldr	r3, [pc, #24]	; (80038e8 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv+0x1c>)
 80038ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038d2:	2300      	movs	r3, #0
 80038d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038e4:	4770      	bx	lr
 80038e6:	bf00      	nop
 80038e8:	08003681 	.word	0x08003681

080038ec <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80038ec:	4b06      	ldr	r3, [pc, #24]	; (8003908 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80038ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038f2:	2300      	movs	r3, #0
 80038f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003900:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003904:	4770      	bx	lr
 8003906:	bf00      	nop
 8003908:	08004a35 	.word	0x08004a35

0800390c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800390c:	4b06      	ldr	r3, [pc, #24]	; (8003928 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800390e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003912:	2300      	movs	r3, #0
 8003914:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003918:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800391c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003920:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003924:	4770      	bx	lr
 8003926:	bf00      	nop
 8003928:	080048f5 	.word	0x080048f5

0800392c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 800392c:	4b06      	ldr	r3, [pc, #24]	; (8003948 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800392e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003932:	2300      	movs	r3, #0
 8003934:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003938:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800393c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003940:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003944:	4770      	bx	lr
 8003946:	bf00      	nop
 8003948:	080047b5 	.word	0x080047b5

0800394c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 800394c:	4b06      	ldr	r3, [pc, #24]	; (8003968 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800394e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003952:	2300      	movs	r3, #0
 8003954:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003958:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800395c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003960:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003964:	4770      	bx	lr
 8003966:	bf00      	nop
 8003968:	08003c11 	.word	0x08003c11

0800396c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 800396c:	4b06      	ldr	r3, [pc, #24]	; (8003988 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 800396e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003972:	2300      	movs	r3, #0
 8003974:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003978:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800397c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003980:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003984:	4770      	bx	lr
 8003986:	bf00      	nop
 8003988:	08004675 	.word	0x08004675

0800398c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 800398c:	4b06      	ldr	r3, [pc, #24]	; (80039a8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800398e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003992:	2300      	movs	r3, #0
 8003994:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003998:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800399c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039a4:	4770      	bx	lr
 80039a6:	bf00      	nop
 80039a8:	08004535 	.word	0x08004535

080039ac <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80039ac:	4b06      	ldr	r3, [pc, #24]	; (80039c8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80039ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039b2:	2300      	movs	r3, #0
 80039b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039c4:	4770      	bx	lr
 80039c6:	bf00      	nop
 80039c8:	080043f5 	.word	0x080043f5

080039cc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80039cc:	4b06      	ldr	r3, [pc, #24]	; (80039e8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80039ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039d2:	2300      	movs	r3, #0
 80039d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039e4:	4770      	bx	lr
 80039e6:	bf00      	nop
 80039e8:	08003ad1 	.word	0x08003ad1

080039ec <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80039ec:	4b06      	ldr	r3, [pc, #24]	; (8003a08 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80039ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039f2:	2300      	movs	r3, #0
 80039f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a00:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a04:	4770      	bx	lr
 8003a06:	bf00      	nop
 8003a08:	080042b5 	.word	0x080042b5

08003a0c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003a0c:	4b06      	ldr	r3, [pc, #24]	; (8003a28 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003a0e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a12:	2300      	movs	r3, #0
 8003a14:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a18:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a1c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a20:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a24:	4770      	bx	lr
 8003a26:	bf00      	nop
 8003a28:	08004175 	.word	0x08004175

08003a2c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003a2c:	4b06      	ldr	r3, [pc, #24]	; (8003a48 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003a2e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a32:	2300      	movs	r3, #0
 8003a34:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a38:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a3c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a40:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a44:	4770      	bx	lr
 8003a46:	bf00      	nop
 8003a48:	08004035 	.word	0x08004035

08003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003a4c:	4b06      	ldr	r3, [pc, #24]	; (8003a68 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003a4e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a52:	2300      	movs	r3, #0
 8003a54:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a58:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a5c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a60:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a64:	4770      	bx	lr
 8003a66:	bf00      	nop
 8003a68:	08003491 	.word	0x08003491

08003a6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003a6c:	6803      	ldr	r3, [r0, #0]
 8003a6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a70:	4718      	bx	r3
	...

08003a74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003a74:	4b12      	ldr	r3, [pc, #72]	; (8003ac0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003a76:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003a78:	6003      	str	r3, [r0, #0]
 8003a7a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003a7e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003a80:	4b10      	ldr	r3, [pc, #64]	; (8003ac4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003a82:	7241      	strb	r1, [r0, #9]
 8003a84:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a86:	4910      	ldr	r1, [pc, #64]	; (8003ac8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003a88:	4b10      	ldr	r3, [pc, #64]	; (8003acc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a8a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003a8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003a92:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003a94:	2200      	movs	r2, #0
 8003a96:	6042      	str	r2, [r0, #4]
 8003a98:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003a9a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003a9c:	81c2      	strh	r2, [r0, #14]
          solid()
 8003a9e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003aa2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003aa6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003aaa:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003aae:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003ab0:	9100      	str	r1, [sp, #0]
 8003ab2:	3010      	adds	r0, #16
 8003ab4:	4611      	mov	r1, r2
 8003ab6:	f7fe fddf 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003aba:	4620      	mov	r0, r4
 8003abc:	b002      	add	sp, #8
 8003abe:	bd10      	pop	{r4, pc}
 8003ac0:	0802cce8 	.word	0x0802cce8
 8003ac4:	0802cbcc 	.word	0x0802cbcc
 8003ac8:	20012d9a 	.word	0x20012d9a
 8003acc:	20012d98 	.word	0x20012d98

08003ad0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ad4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ad8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ada:	68a0      	ldr	r0, [r4, #8]
 8003adc:	6803      	ldr	r3, [r0, #0]
 8003ade:	6a1b      	ldr	r3, [r3, #32]
 8003ae0:	4798      	blx	r3
 8003ae2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003ae6:	d205      	bcs.n	8003af4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003ae8:	4b42      	ldr	r3, [pc, #264]	; (8003bf4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003aea:	4a43      	ldr	r2, [pc, #268]	; (8003bf8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003aec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003aee:	4843      	ldr	r0, [pc, #268]	; (8003bfc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003af0:	f025 fee0 	bl	80298b4 <__assert_func>
 8003af4:	6860      	ldr	r0, [r4, #4]
 8003af6:	6803      	ldr	r3, [r0, #0]
 8003af8:	6a1b      	ldr	r3, [r3, #32]
 8003afa:	4798      	blx	r3
 8003afc:	280f      	cmp	r0, #15
 8003afe:	d803      	bhi.n	8003b08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003b00:	4b3f      	ldr	r3, [pc, #252]	; (8003c00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003b02:	4a3d      	ldr	r2, [pc, #244]	; (8003bf8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003b04:	21a4      	movs	r1, #164	; 0xa4
 8003b06:	e7f2      	b.n	8003aee <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b08:	68e0      	ldr	r0, [r4, #12]
 8003b0a:	6803      	ldr	r3, [r0, #0]
 8003b0c:	6a1b      	ldr	r3, [r3, #32]
 8003b0e:	4798      	blx	r3
 8003b10:	2837      	cmp	r0, #55	; 0x37
 8003b12:	d803      	bhi.n	8003b1c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003b14:	4b3b      	ldr	r3, [pc, #236]	; (8003c04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003b16:	4a38      	ldr	r2, [pc, #224]	; (8003bf8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003b18:	21a5      	movs	r1, #165	; 0xa5
 8003b1a:	e7e8      	b.n	8003aee <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003b1c:	f011 f840 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b20:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003c08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003b24:	3004      	adds	r0, #4
 8003b26:	f011 f8a1 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b2a:	f8d9 0000 	ldr.w	r0, [r9]
 8003b2e:	b110      	cbz	r0, 8003b36 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003b30:	6803      	ldr	r3, [r0, #0]
 8003b32:	68db      	ldr	r3, [r3, #12]
 8003b34:	4798      	blx	r3
    if (*currentTrans)
 8003b36:	f8d9 0000 	ldr.w	r0, [r9]
 8003b3a:	b110      	cbz	r0, 8003b42 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003b3c:	6803      	ldr	r3, [r0, #0]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	4798      	blx	r3
    if (*currentScreen)
 8003b42:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003c0c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003b46:	f8d8 0000 	ldr.w	r0, [r8]
 8003b4a:	b110      	cbz	r0, 8003b52 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003b4c:	6803      	ldr	r3, [r0, #0]
 8003b4e:	695b      	ldr	r3, [r3, #20]
 8003b50:	4798      	blx	r3
    if (*currentPresenter)
 8003b52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b56:	b110      	cbz	r0, 8003b5e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003b58:	6803      	ldr	r3, [r0, #0]
 8003b5a:	685b      	ldr	r3, [r3, #4]
 8003b5c:	4798      	blx	r3
    if (*currentScreen)
 8003b5e:	f8d8 0000 	ldr.w	r0, [r8]
 8003b62:	b110      	cbz	r0, 8003b6a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003b64:	6803      	ldr	r3, [r0, #0]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	4798      	blx	r3
    if (*currentPresenter)
 8003b6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b6e:	b110      	cbz	r0, 8003b76 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b70:	6803      	ldr	r3, [r0, #0]
 8003b72:	689b      	ldr	r3, [r3, #8]
 8003b74:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b76:	68e0      	ldr	r0, [r4, #12]
 8003b78:	2100      	movs	r1, #0
 8003b7a:	f7ff ff77 	bl	8003a6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003b7e:	2114      	movs	r1, #20
 8003b80:	4605      	mov	r5, r0
 8003b82:	f7ff ff77 	bl	8003a74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b86:	68a0      	ldr	r0, [r4, #8]
 8003b88:	6803      	ldr	r3, [r0, #0]
 8003b8a:	2100      	movs	r1, #0
 8003b8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b8e:	4798      	blx	r3
 8003b90:	4606      	mov	r6, r0
 8003b92:	f004 fadb 	bl	800814c <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b96:	6860      	ldr	r0, [r4, #4]
 8003b98:	6803      	ldr	r3, [r0, #0]
 8003b9a:	2100      	movs	r1, #0
 8003b9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b9e:	4798      	blx	r3
 8003ba0:	4631      	mov	r1, r6
 8003ba2:	4604      	mov	r4, r0
 8003ba4:	f004 faac 	bl	8008100 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003ba8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003bac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003bb0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003bb4:	b1dc      	cbz	r4, 8003bee <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003bb6:	1d23      	adds	r3, r4, #4
 8003bb8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003bbc:	6833      	ldr	r3, [r6, #0]
 8003bbe:	f8c4 a008 	str.w	sl, [r4, #8]
 8003bc2:	4630      	mov	r0, r6
 8003bc4:	68db      	ldr	r3, [r3, #12]
 8003bc6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003bc8:	4798      	blx	r3
    newPresenter->activate();
 8003bca:	6823      	ldr	r3, [r4, #0]
 8003bcc:	4620      	mov	r0, r4
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003bd2:	4629      	mov	r1, r5
 8003bd4:	4630      	mov	r0, r6
 8003bd6:	f012 fe0f 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003bda:	682b      	ldr	r3, [r5, #0]
 8003bdc:	4628      	mov	r0, r5
 8003bde:	691b      	ldr	r3, [r3, #16]
 8003be0:	4798      	blx	r3
    newTransition->invalidate();
 8003be2:	682b      	ldr	r3, [r5, #0]
 8003be4:	4628      	mov	r0, r5
 8003be6:	695b      	ldr	r3, [r3, #20]
}
 8003be8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bec:	4718      	bx	r3
    model->bind(newPresenter);
 8003bee:	4623      	mov	r3, r4
 8003bf0:	e7e2      	b.n	8003bb8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003bf2:	bf00      	nop
 8003bf4:	0802b5d4 	.word	0x0802b5d4
 8003bf8:	0802ba2d 	.word	0x0802ba2d
 8003bfc:	0802b770 	.word	0x0802b770
 8003c00:	0802b7b7 	.word	0x0802b7b7
 8003c04:	0802b85a 	.word	0x0802b85a
 8003c08:	20012dec 	.word	0x20012dec
 8003c0c:	20012de8 	.word	0x20012de8

08003c10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003c10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c14:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c18:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c1a:	68a0      	ldr	r0, [r4, #8]
 8003c1c:	6803      	ldr	r3, [r0, #0]
 8003c1e:	6a1b      	ldr	r3, [r3, #32]
 8003c20:	4798      	blx	r3
 8003c22:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003c26:	d205      	bcs.n	8003c34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003c28:	4b42      	ldr	r3, [pc, #264]	; (8003d34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003c2a:	4a43      	ldr	r2, [pc, #268]	; (8003d38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003c2c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c2e:	4843      	ldr	r0, [pc, #268]	; (8003d3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003c30:	f025 fe40 	bl	80298b4 <__assert_func>
 8003c34:	6860      	ldr	r0, [r4, #4]
 8003c36:	6803      	ldr	r3, [r0, #0]
 8003c38:	6a1b      	ldr	r3, [r3, #32]
 8003c3a:	4798      	blx	r3
 8003c3c:	280f      	cmp	r0, #15
 8003c3e:	d803      	bhi.n	8003c48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003c40:	4b3f      	ldr	r3, [pc, #252]	; (8003d40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003c42:	4a3d      	ldr	r2, [pc, #244]	; (8003d38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003c44:	21a4      	movs	r1, #164	; 0xa4
 8003c46:	e7f2      	b.n	8003c2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c48:	68e0      	ldr	r0, [r4, #12]
 8003c4a:	6803      	ldr	r3, [r0, #0]
 8003c4c:	6a1b      	ldr	r3, [r3, #32]
 8003c4e:	4798      	blx	r3
 8003c50:	2837      	cmp	r0, #55	; 0x37
 8003c52:	d803      	bhi.n	8003c5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003c54:	4b3b      	ldr	r3, [pc, #236]	; (8003d44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003c56:	4a38      	ldr	r2, [pc, #224]	; (8003d38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003c58:	21a5      	movs	r1, #165	; 0xa5
 8003c5a:	e7e8      	b.n	8003c2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003c5c:	f010 ffa0 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c60:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003c64:	3004      	adds	r0, #4
 8003c66:	f011 f801 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c6a:	f8d9 0000 	ldr.w	r0, [r9]
 8003c6e:	b110      	cbz	r0, 8003c76 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c70:	6803      	ldr	r3, [r0, #0]
 8003c72:	68db      	ldr	r3, [r3, #12]
 8003c74:	4798      	blx	r3
    if (*currentTrans)
 8003c76:	f8d9 0000 	ldr.w	r0, [r9]
 8003c7a:	b110      	cbz	r0, 8003c82 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c7c:	6803      	ldr	r3, [r0, #0]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	4798      	blx	r3
    if (*currentScreen)
 8003c82:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d4c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003c86:	f8d8 0000 	ldr.w	r0, [r8]
 8003c8a:	b110      	cbz	r0, 8003c92 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c8c:	6803      	ldr	r3, [r0, #0]
 8003c8e:	695b      	ldr	r3, [r3, #20]
 8003c90:	4798      	blx	r3
    if (*currentPresenter)
 8003c92:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c96:	b110      	cbz	r0, 8003c9e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c98:	6803      	ldr	r3, [r0, #0]
 8003c9a:	685b      	ldr	r3, [r3, #4]
 8003c9c:	4798      	blx	r3
    if (*currentScreen)
 8003c9e:	f8d8 0000 	ldr.w	r0, [r8]
 8003ca2:	b110      	cbz	r0, 8003caa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003ca4:	6803      	ldr	r3, [r0, #0]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	4798      	blx	r3
    if (*currentPresenter)
 8003caa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cae:	b110      	cbz	r0, 8003cb6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003cb0:	6803      	ldr	r3, [r0, #0]
 8003cb2:	689b      	ldr	r3, [r3, #8]
 8003cb4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003cb6:	68e0      	ldr	r0, [r4, #12]
 8003cb8:	2100      	movs	r1, #0
 8003cba:	f7ff fed7 	bl	8003a6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003cbe:	2114      	movs	r1, #20
 8003cc0:	4605      	mov	r5, r0
 8003cc2:	f7ff fed7 	bl	8003a74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003cc6:	68a0      	ldr	r0, [r4, #8]
 8003cc8:	6803      	ldr	r3, [r0, #0]
 8003cca:	2100      	movs	r1, #0
 8003ccc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cce:	4798      	blx	r3
 8003cd0:	4606      	mov	r6, r0
 8003cd2:	f004 fc1f 	bl	8008514 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003cd6:	6860      	ldr	r0, [r4, #4]
 8003cd8:	6803      	ldr	r3, [r0, #0]
 8003cda:	2100      	movs	r1, #0
 8003cdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cde:	4798      	blx	r3
 8003ce0:	4631      	mov	r1, r6
 8003ce2:	4604      	mov	r4, r0
 8003ce4:	f004 fbf0 	bl	80084c8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003ce8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003cec:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cf0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cf4:	b1dc      	cbz	r4, 8003d2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003cf6:	1d23      	adds	r3, r4, #4
 8003cf8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cfc:	6833      	ldr	r3, [r6, #0]
 8003cfe:	f8c4 a008 	str.w	sl, [r4, #8]
 8003d02:	4630      	mov	r0, r6
 8003d04:	68db      	ldr	r3, [r3, #12]
 8003d06:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003d08:	4798      	blx	r3
    newPresenter->activate();
 8003d0a:	6823      	ldr	r3, [r4, #0]
 8003d0c:	4620      	mov	r0, r4
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d12:	4629      	mov	r1, r5
 8003d14:	4630      	mov	r0, r6
 8003d16:	f012 fd6f 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d1a:	682b      	ldr	r3, [r5, #0]
 8003d1c:	4628      	mov	r0, r5
 8003d1e:	691b      	ldr	r3, [r3, #16]
 8003d20:	4798      	blx	r3
    newTransition->invalidate();
 8003d22:	682b      	ldr	r3, [r5, #0]
 8003d24:	4628      	mov	r0, r5
 8003d26:	695b      	ldr	r3, [r3, #20]
}
 8003d28:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d2c:	4718      	bx	r3
    model->bind(newPresenter);
 8003d2e:	4623      	mov	r3, r4
 8003d30:	e7e2      	b.n	8003cf8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003d32:	bf00      	nop
 8003d34:	0802b5d4 	.word	0x0802b5d4
 8003d38:	0802bb4b 	.word	0x0802bb4b
 8003d3c:	0802b770 	.word	0x0802b770
 8003d40:	0802b7b7 	.word	0x0802b7b7
 8003d44:	0802b85a 	.word	0x0802b85a
 8003d48:	20012dec 	.word	0x20012dec
 8003d4c:	20012de8 	.word	0x20012de8

08003d50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d54:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d5a:	68a0      	ldr	r0, [r4, #8]
 8003d5c:	6803      	ldr	r3, [r0, #0]
 8003d5e:	6a1b      	ldr	r3, [r3, #32]
 8003d60:	4798      	blx	r3
 8003d62:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003d66:	d205      	bcs.n	8003d74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003d68:	4b42      	ldr	r3, [pc, #264]	; (8003e74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003d6a:	4a43      	ldr	r2, [pc, #268]	; (8003e78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003d6c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d6e:	4843      	ldr	r0, [pc, #268]	; (8003e7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003d70:	f025 fda0 	bl	80298b4 <__assert_func>
 8003d74:	6860      	ldr	r0, [r4, #4]
 8003d76:	6803      	ldr	r3, [r0, #0]
 8003d78:	6a1b      	ldr	r3, [r3, #32]
 8003d7a:	4798      	blx	r3
 8003d7c:	280f      	cmp	r0, #15
 8003d7e:	d803      	bhi.n	8003d88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003d80:	4b3f      	ldr	r3, [pc, #252]	; (8003e80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003d82:	4a3d      	ldr	r2, [pc, #244]	; (8003e78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003d84:	21a4      	movs	r1, #164	; 0xa4
 8003d86:	e7f2      	b.n	8003d6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d88:	68e0      	ldr	r0, [r4, #12]
 8003d8a:	6803      	ldr	r3, [r0, #0]
 8003d8c:	6a1b      	ldr	r3, [r3, #32]
 8003d8e:	4798      	blx	r3
 8003d90:	2837      	cmp	r0, #55	; 0x37
 8003d92:	d803      	bhi.n	8003d9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003d94:	4b3b      	ldr	r3, [pc, #236]	; (8003e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003d96:	4a38      	ldr	r2, [pc, #224]	; (8003e78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003d98:	21a5      	movs	r1, #165	; 0xa5
 8003d9a:	e7e8      	b.n	8003d6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003d9c:	f010 ff00 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003da0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003da4:	3004      	adds	r0, #4
 8003da6:	f010 ff61 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003daa:	f8d9 0000 	ldr.w	r0, [r9]
 8003dae:	b110      	cbz	r0, 8003db6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003db0:	6803      	ldr	r3, [r0, #0]
 8003db2:	68db      	ldr	r3, [r3, #12]
 8003db4:	4798      	blx	r3
    if (*currentTrans)
 8003db6:	f8d9 0000 	ldr.w	r0, [r9]
 8003dba:	b110      	cbz	r0, 8003dc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003dbc:	6803      	ldr	r3, [r0, #0]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	4798      	blx	r3
    if (*currentScreen)
 8003dc2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003dc6:	f8d8 0000 	ldr.w	r0, [r8]
 8003dca:	b110      	cbz	r0, 8003dd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003dcc:	6803      	ldr	r3, [r0, #0]
 8003dce:	695b      	ldr	r3, [r3, #20]
 8003dd0:	4798      	blx	r3
    if (*currentPresenter)
 8003dd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dd6:	b110      	cbz	r0, 8003dde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003dd8:	6803      	ldr	r3, [r0, #0]
 8003dda:	685b      	ldr	r3, [r3, #4]
 8003ddc:	4798      	blx	r3
    if (*currentScreen)
 8003dde:	f8d8 0000 	ldr.w	r0, [r8]
 8003de2:	b110      	cbz	r0, 8003dea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003de4:	6803      	ldr	r3, [r0, #0]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	4798      	blx	r3
    if (*currentPresenter)
 8003dea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dee:	b110      	cbz	r0, 8003df6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003df0:	6803      	ldr	r3, [r0, #0]
 8003df2:	689b      	ldr	r3, [r3, #8]
 8003df4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003df6:	68e0      	ldr	r0, [r4, #12]
 8003df8:	2100      	movs	r1, #0
 8003dfa:	f7ff fe37 	bl	8003a6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003dfe:	2114      	movs	r1, #20
 8003e00:	4605      	mov	r5, r0
 8003e02:	f7ff fe37 	bl	8003a74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003e06:	68a0      	ldr	r0, [r4, #8]
 8003e08:	6803      	ldr	r3, [r0, #0]
 8003e0a:	2100      	movs	r1, #0
 8003e0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e0e:	4798      	blx	r3
 8003e10:	4606      	mov	r6, r0
 8003e12:	f004 fb1f 	bl	8008454 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003e16:	6860      	ldr	r0, [r4, #4]
 8003e18:	6803      	ldr	r3, [r0, #0]
 8003e1a:	2100      	movs	r1, #0
 8003e1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e1e:	4798      	blx	r3
 8003e20:	4631      	mov	r1, r6
 8003e22:	4604      	mov	r4, r0
 8003e24:	f004 faf0 	bl	8008408 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003e28:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e2c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e30:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e34:	b1dc      	cbz	r4, 8003e6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003e36:	1d23      	adds	r3, r4, #4
 8003e38:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e3c:	6833      	ldr	r3, [r6, #0]
 8003e3e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e42:	4630      	mov	r0, r6
 8003e44:	68db      	ldr	r3, [r3, #12]
 8003e46:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e48:	4798      	blx	r3
    newPresenter->activate();
 8003e4a:	6823      	ldr	r3, [r4, #0]
 8003e4c:	4620      	mov	r0, r4
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e52:	4629      	mov	r1, r5
 8003e54:	4630      	mov	r0, r6
 8003e56:	f012 fccf 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e5a:	682b      	ldr	r3, [r5, #0]
 8003e5c:	4628      	mov	r0, r5
 8003e5e:	691b      	ldr	r3, [r3, #16]
 8003e60:	4798      	blx	r3
    newTransition->invalidate();
 8003e62:	682b      	ldr	r3, [r5, #0]
 8003e64:	4628      	mov	r0, r5
 8003e66:	695b      	ldr	r3, [r3, #20]
}
 8003e68:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e6c:	4718      	bx	r3
    model->bind(newPresenter);
 8003e6e:	4623      	mov	r3, r4
 8003e70:	e7e2      	b.n	8003e38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003e72:	bf00      	nop
 8003e74:	0802b5d4 	.word	0x0802b5d4
 8003e78:	0802bc7b 	.word	0x0802bc7b
 8003e7c:	0802b770 	.word	0x0802b770
 8003e80:	0802b7b7 	.word	0x0802b7b7
 8003e84:	0802b85a 	.word	0x0802b85a
 8003e88:	20012dec 	.word	0x20012dec
 8003e8c:	20012de8 	.word	0x20012de8

08003e90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003e90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e94:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e9a:	68a0      	ldr	r0, [r4, #8]
 8003e9c:	6803      	ldr	r3, [r0, #0]
 8003e9e:	6a1b      	ldr	r3, [r3, #32]
 8003ea0:	4798      	blx	r3
 8003ea2:	f241 137b 	movw	r3, #4475	; 0x117b
 8003ea6:	4298      	cmp	r0, r3
 8003ea8:	d805      	bhi.n	8003eb6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003eaa:	4b42      	ldr	r3, [pc, #264]	; (8003fb4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003eac:	4a42      	ldr	r2, [pc, #264]	; (8003fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003eae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003eb0:	4842      	ldr	r0, [pc, #264]	; (8003fbc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003eb2:	f025 fcff 	bl	80298b4 <__assert_func>
 8003eb6:	6860      	ldr	r0, [r4, #4]
 8003eb8:	6803      	ldr	r3, [r0, #0]
 8003eba:	6a1b      	ldr	r3, [r3, #32]
 8003ebc:	4798      	blx	r3
 8003ebe:	280f      	cmp	r0, #15
 8003ec0:	d803      	bhi.n	8003eca <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003ec2:	4b3f      	ldr	r3, [pc, #252]	; (8003fc0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003ec4:	4a3c      	ldr	r2, [pc, #240]	; (8003fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003ec6:	21a4      	movs	r1, #164	; 0xa4
 8003ec8:	e7f2      	b.n	8003eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003eca:	68e0      	ldr	r0, [r4, #12]
 8003ecc:	6803      	ldr	r3, [r0, #0]
 8003ece:	6a1b      	ldr	r3, [r3, #32]
 8003ed0:	4798      	blx	r3
 8003ed2:	2837      	cmp	r0, #55	; 0x37
 8003ed4:	d803      	bhi.n	8003ede <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003ed6:	4b3b      	ldr	r3, [pc, #236]	; (8003fc4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003ed8:	4a37      	ldr	r2, [pc, #220]	; (8003fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003eda:	21a5      	movs	r1, #165	; 0xa5
 8003edc:	e7e8      	b.n	8003eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003ede:	f010 fe5f 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ee2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fc8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003ee6:	3004      	adds	r0, #4
 8003ee8:	f010 fec0 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003eec:	f8d9 0000 	ldr.w	r0, [r9]
 8003ef0:	b110      	cbz	r0, 8003ef8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003ef2:	6803      	ldr	r3, [r0, #0]
 8003ef4:	68db      	ldr	r3, [r3, #12]
 8003ef6:	4798      	blx	r3
    if (*currentTrans)
 8003ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8003efc:	b110      	cbz	r0, 8003f04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003efe:	6803      	ldr	r3, [r0, #0]
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	4798      	blx	r3
    if (*currentScreen)
 8003f04:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003fcc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003f08:	f8d8 0000 	ldr.w	r0, [r8]
 8003f0c:	b110      	cbz	r0, 8003f14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003f0e:	6803      	ldr	r3, [r0, #0]
 8003f10:	695b      	ldr	r3, [r3, #20]
 8003f12:	4798      	blx	r3
    if (*currentPresenter)
 8003f14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f18:	b110      	cbz	r0, 8003f20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003f1a:	6803      	ldr	r3, [r0, #0]
 8003f1c:	685b      	ldr	r3, [r3, #4]
 8003f1e:	4798      	blx	r3
    if (*currentScreen)
 8003f20:	f8d8 0000 	ldr.w	r0, [r8]
 8003f24:	b110      	cbz	r0, 8003f2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	4798      	blx	r3
    if (*currentPresenter)
 8003f2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f30:	b110      	cbz	r0, 8003f38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003f32:	6803      	ldr	r3, [r0, #0]
 8003f34:	689b      	ldr	r3, [r3, #8]
 8003f36:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f38:	68e0      	ldr	r0, [r4, #12]
 8003f3a:	2100      	movs	r1, #0
 8003f3c:	f7ff fd96 	bl	8003a6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003f40:	2114      	movs	r1, #20
 8003f42:	4605      	mov	r5, r0
 8003f44:	f7ff fd96 	bl	8003a74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f48:	68a0      	ldr	r0, [r4, #8]
 8003f4a:	6803      	ldr	r3, [r0, #0]
 8003f4c:	2100      	movs	r1, #0
 8003f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f50:	4798      	blx	r3
 8003f52:	4606      	mov	r6, r0
 8003f54:	f004 fa1e 	bl	8008394 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f58:	6860      	ldr	r0, [r4, #4]
 8003f5a:	6803      	ldr	r3, [r0, #0]
 8003f5c:	2100      	movs	r1, #0
 8003f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f60:	4798      	blx	r3
 8003f62:	4631      	mov	r1, r6
 8003f64:	4604      	mov	r4, r0
 8003f66:	f004 f9ef 	bl	8008348 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003f6a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f6e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f72:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f76:	b1dc      	cbz	r4, 8003fb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003f78:	1d23      	adds	r3, r4, #4
 8003f7a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f7e:	6833      	ldr	r3, [r6, #0]
 8003f80:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f84:	4630      	mov	r0, r6
 8003f86:	68db      	ldr	r3, [r3, #12]
 8003f88:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f8a:	4798      	blx	r3
    newPresenter->activate();
 8003f8c:	6823      	ldr	r3, [r4, #0]
 8003f8e:	4620      	mov	r0, r4
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f94:	4629      	mov	r1, r5
 8003f96:	4630      	mov	r0, r6
 8003f98:	f012 fc2e 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f9c:	682b      	ldr	r3, [r5, #0]
 8003f9e:	4628      	mov	r0, r5
 8003fa0:	691b      	ldr	r3, [r3, #16]
 8003fa2:	4798      	blx	r3
    newTransition->invalidate();
 8003fa4:	682b      	ldr	r3, [r5, #0]
 8003fa6:	4628      	mov	r0, r5
 8003fa8:	695b      	ldr	r3, [r3, #20]
}
 8003faa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fae:	4718      	bx	r3
    model->bind(newPresenter);
 8003fb0:	4623      	mov	r3, r4
 8003fb2:	e7e2      	b.n	8003f7a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003fb4:	0802b5d4 	.word	0x0802b5d4
 8003fb8:	0802bd99 	.word	0x0802bd99
 8003fbc:	0802b770 	.word	0x0802b770
 8003fc0:	0802b7b7 	.word	0x0802b7b7
 8003fc4:	0802b85a 	.word	0x0802b85a
 8003fc8:	20012dec 	.word	0x20012dec
 8003fcc:	20012de8 	.word	0x20012de8

08003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003fd0:	6803      	ldr	r3, [r0, #0]
 8003fd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fd4:	4718      	bx	r3
	...

08003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003fd8:	4b12      	ldr	r3, [pc, #72]	; (8004024 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003fda:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003fdc:	6003      	str	r3, [r0, #0]
 8003fde:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003fe2:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003fe4:	4b10      	ldr	r3, [pc, #64]	; (8004028 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003fe6:	7241      	strb	r1, [r0, #9]
 8003fe8:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fea:	4910      	ldr	r1, [pc, #64]	; (800402c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003fec:	4b10      	ldr	r3, [pc, #64]	; (8004030 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fee:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003ff2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003ff6:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003ff8:	2200      	movs	r2, #0
 8003ffa:	6042      	str	r2, [r0, #4]
 8003ffc:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003ffe:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004000:	81c2      	strh	r2, [r0, #14]
          solid()
 8004002:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004006:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800400a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800400e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004012:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004014:	9100      	str	r1, [sp, #0]
 8004016:	3010      	adds	r0, #16
 8004018:	4611      	mov	r1, r2
 800401a:	f7fe fb2d 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800401e:	4620      	mov	r0, r4
 8004020:	b002      	add	sp, #8
 8004022:	bd10      	pop	{r4, pc}
 8004024:	0802ccc4 	.word	0x0802ccc4
 8004028:	0802cbcc 	.word	0x0802cbcc
 800402c:	20012d9a 	.word	0x20012d9a
 8004030:	20012d98 	.word	0x20012d98

08004034 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004038:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800403c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800403e:	68a0      	ldr	r0, [r4, #8]
 8004040:	6803      	ldr	r3, [r0, #0]
 8004042:	6a1b      	ldr	r3, [r3, #32]
 8004044:	4798      	blx	r3
 8004046:	f241 03af 	movw	r3, #4271	; 0x10af
 800404a:	4298      	cmp	r0, r3
 800404c:	d805      	bhi.n	800405a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 800404e:	4b42      	ldr	r3, [pc, #264]	; (8004158 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004050:	4a42      	ldr	r2, [pc, #264]	; (800415c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004052:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004054:	4842      	ldr	r0, [pc, #264]	; (8004160 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004056:	f025 fc2d 	bl	80298b4 <__assert_func>
 800405a:	6860      	ldr	r0, [r4, #4]
 800405c:	6803      	ldr	r3, [r0, #0]
 800405e:	6a1b      	ldr	r3, [r3, #32]
 8004060:	4798      	blx	r3
 8004062:	280f      	cmp	r0, #15
 8004064:	d803      	bhi.n	800406e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004066:	4b3f      	ldr	r3, [pc, #252]	; (8004164 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004068:	4a3c      	ldr	r2, [pc, #240]	; (800415c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800406a:	21a4      	movs	r1, #164	; 0xa4
 800406c:	e7f2      	b.n	8004054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800406e:	68e0      	ldr	r0, [r4, #12]
 8004070:	6803      	ldr	r3, [r0, #0]
 8004072:	6a1b      	ldr	r3, [r3, #32]
 8004074:	4798      	blx	r3
 8004076:	2837      	cmp	r0, #55	; 0x37
 8004078:	d803      	bhi.n	8004082 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 800407a:	4b3b      	ldr	r3, [pc, #236]	; (8004168 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 800407c:	4a37      	ldr	r2, [pc, #220]	; (800415c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800407e:	21a5      	movs	r1, #165	; 0xa5
 8004080:	e7e8      	b.n	8004054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004082:	f010 fd8d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004086:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800416c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 800408a:	3004      	adds	r0, #4
 800408c:	f010 fdee 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004090:	f8d9 0000 	ldr.w	r0, [r9]
 8004094:	b110      	cbz	r0, 800409c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004096:	6803      	ldr	r3, [r0, #0]
 8004098:	68db      	ldr	r3, [r3, #12]
 800409a:	4798      	blx	r3
    if (*currentTrans)
 800409c:	f8d9 0000 	ldr.w	r0, [r9]
 80040a0:	b110      	cbz	r0, 80040a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80040a2:	6803      	ldr	r3, [r0, #0]
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	4798      	blx	r3
    if (*currentScreen)
 80040a8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004170 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80040ac:	f8d8 0000 	ldr.w	r0, [r8]
 80040b0:	b110      	cbz	r0, 80040b8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80040b2:	6803      	ldr	r3, [r0, #0]
 80040b4:	695b      	ldr	r3, [r3, #20]
 80040b6:	4798      	blx	r3
    if (*currentPresenter)
 80040b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040bc:	b110      	cbz	r0, 80040c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80040be:	6803      	ldr	r3, [r0, #0]
 80040c0:	685b      	ldr	r3, [r3, #4]
 80040c2:	4798      	blx	r3
    if (*currentScreen)
 80040c4:	f8d8 0000 	ldr.w	r0, [r8]
 80040c8:	b110      	cbz	r0, 80040d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80040ca:	6803      	ldr	r3, [r0, #0]
 80040cc:	681b      	ldr	r3, [r3, #0]
 80040ce:	4798      	blx	r3
    if (*currentPresenter)
 80040d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040d4:	b110      	cbz	r0, 80040dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80040d6:	6803      	ldr	r3, [r0, #0]
 80040d8:	689b      	ldr	r3, [r3, #8]
 80040da:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80040dc:	68e0      	ldr	r0, [r4, #12]
 80040de:	2100      	movs	r1, #0
 80040e0:	f7ff ff76 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80040e4:	2114      	movs	r1, #20
 80040e6:	4605      	mov	r5, r0
 80040e8:	f7ff ff76 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80040ec:	68a0      	ldr	r0, [r4, #8]
 80040ee:	6803      	ldr	r3, [r0, #0]
 80040f0:	2100      	movs	r1, #0
 80040f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040f4:	4798      	blx	r3
 80040f6:	4606      	mov	r6, r0
 80040f8:	f004 fc50 	bl	800899c <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040fc:	6860      	ldr	r0, [r4, #4]
 80040fe:	6803      	ldr	r3, [r0, #0]
 8004100:	2100      	movs	r1, #0
 8004102:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004104:	4798      	blx	r3
 8004106:	4631      	mov	r1, r6
 8004108:	4604      	mov	r4, r0
 800410a:	f004 fc21 	bl	8008950 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800410e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004112:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004116:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800411a:	b1dc      	cbz	r4, 8004154 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 800411c:	1d23      	adds	r3, r4, #4
 800411e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004122:	6833      	ldr	r3, [r6, #0]
 8004124:	f8c4 a008 	str.w	sl, [r4, #8]
 8004128:	4630      	mov	r0, r6
 800412a:	68db      	ldr	r3, [r3, #12]
 800412c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800412e:	4798      	blx	r3
    newPresenter->activate();
 8004130:	6823      	ldr	r3, [r4, #0]
 8004132:	4620      	mov	r0, r4
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004138:	4629      	mov	r1, r5
 800413a:	4630      	mov	r0, r6
 800413c:	f012 fb5c 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004140:	682b      	ldr	r3, [r5, #0]
 8004142:	4628      	mov	r0, r5
 8004144:	691b      	ldr	r3, [r3, #16]
 8004146:	4798      	blx	r3
    newTransition->invalidate();
 8004148:	682b      	ldr	r3, [r5, #0]
 800414a:	4628      	mov	r0, r5
 800414c:	695b      	ldr	r3, [r3, #20]
}
 800414e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004152:	4718      	bx	r3
    model->bind(newPresenter);
 8004154:	4623      	mov	r3, r4
 8004156:	e7e2      	b.n	800411e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004158:	0802b5d4 	.word	0x0802b5d4
 800415c:	0802beb3 	.word	0x0802beb3
 8004160:	0802b770 	.word	0x0802b770
 8004164:	0802b7b7 	.word	0x0802b7b7
 8004168:	0802b85a 	.word	0x0802b85a
 800416c:	20012dec 	.word	0x20012dec
 8004170:	20012de8 	.word	0x20012de8

08004174 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004174:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004178:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800417c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800417e:	68a0      	ldr	r0, [r4, #8]
 8004180:	6803      	ldr	r3, [r0, #0]
 8004182:	6a1b      	ldr	r3, [r3, #32]
 8004184:	4798      	blx	r3
 8004186:	f241 035b 	movw	r3, #4187	; 0x105b
 800418a:	4298      	cmp	r0, r3
 800418c:	d805      	bhi.n	800419a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 800418e:	4b42      	ldr	r3, [pc, #264]	; (8004298 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004190:	4a42      	ldr	r2, [pc, #264]	; (800429c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004192:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004194:	4842      	ldr	r0, [pc, #264]	; (80042a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8004196:	f025 fb8d 	bl	80298b4 <__assert_func>
 800419a:	6860      	ldr	r0, [r4, #4]
 800419c:	6803      	ldr	r3, [r0, #0]
 800419e:	6a1b      	ldr	r3, [r3, #32]
 80041a0:	4798      	blx	r3
 80041a2:	280f      	cmp	r0, #15
 80041a4:	d803      	bhi.n	80041ae <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 80041a6:	4b3f      	ldr	r3, [pc, #252]	; (80042a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80041a8:	4a3c      	ldr	r2, [pc, #240]	; (800429c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80041aa:	21a4      	movs	r1, #164	; 0xa4
 80041ac:	e7f2      	b.n	8004194 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041ae:	68e0      	ldr	r0, [r4, #12]
 80041b0:	6803      	ldr	r3, [r0, #0]
 80041b2:	6a1b      	ldr	r3, [r3, #32]
 80041b4:	4798      	blx	r3
 80041b6:	2837      	cmp	r0, #55	; 0x37
 80041b8:	d803      	bhi.n	80041c2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 80041ba:	4b3b      	ldr	r3, [pc, #236]	; (80042a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80041bc:	4a37      	ldr	r2, [pc, #220]	; (800429c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80041be:	21a5      	movs	r1, #165	; 0xa5
 80041c0:	e7e8      	b.n	8004194 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80041c2:	f010 fced 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80042ac <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80041ca:	3004      	adds	r0, #4
 80041cc:	f010 fd4e 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041d0:	f8d9 0000 	ldr.w	r0, [r9]
 80041d4:	b110      	cbz	r0, 80041dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80041d6:	6803      	ldr	r3, [r0, #0]
 80041d8:	68db      	ldr	r3, [r3, #12]
 80041da:	4798      	blx	r3
    if (*currentTrans)
 80041dc:	f8d9 0000 	ldr.w	r0, [r9]
 80041e0:	b110      	cbz	r0, 80041e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80041e2:	6803      	ldr	r3, [r0, #0]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	4798      	blx	r3
    if (*currentScreen)
 80041e8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80042b0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 80041ec:	f8d8 0000 	ldr.w	r0, [r8]
 80041f0:	b110      	cbz	r0, 80041f8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80041f2:	6803      	ldr	r3, [r0, #0]
 80041f4:	695b      	ldr	r3, [r3, #20]
 80041f6:	4798      	blx	r3
    if (*currentPresenter)
 80041f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041fc:	b110      	cbz	r0, 8004204 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80041fe:	6803      	ldr	r3, [r0, #0]
 8004200:	685b      	ldr	r3, [r3, #4]
 8004202:	4798      	blx	r3
    if (*currentScreen)
 8004204:	f8d8 0000 	ldr.w	r0, [r8]
 8004208:	b110      	cbz	r0, 8004210 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800420a:	6803      	ldr	r3, [r0, #0]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	4798      	blx	r3
    if (*currentPresenter)
 8004210:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004214:	b110      	cbz	r0, 800421c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	689b      	ldr	r3, [r3, #8]
 800421a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800421c:	68e0      	ldr	r0, [r4, #12]
 800421e:	2100      	movs	r1, #0
 8004220:	f7ff fed6 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004224:	2114      	movs	r1, #20
 8004226:	4605      	mov	r5, r0
 8004228:	f7ff fed6 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800422c:	68a0      	ldr	r0, [r4, #8]
 800422e:	6803      	ldr	r3, [r0, #0]
 8004230:	2100      	movs	r1, #0
 8004232:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004234:	4798      	blx	r3
 8004236:	4606      	mov	r6, r0
 8004238:	f003 ffe2 	bl	8008200 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800423c:	6860      	ldr	r0, [r4, #4]
 800423e:	6803      	ldr	r3, [r0, #0]
 8004240:	2100      	movs	r1, #0
 8004242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004244:	4798      	blx	r3
 8004246:	4631      	mov	r1, r6
 8004248:	4604      	mov	r4, r0
 800424a:	f003 ffb3 	bl	80081b4 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800424e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004252:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004256:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800425a:	b1dc      	cbz	r4, 8004294 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 800425c:	1d23      	adds	r3, r4, #4
 800425e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004262:	6833      	ldr	r3, [r6, #0]
 8004264:	f8c4 a008 	str.w	sl, [r4, #8]
 8004268:	4630      	mov	r0, r6
 800426a:	68db      	ldr	r3, [r3, #12]
 800426c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800426e:	4798      	blx	r3
    newPresenter->activate();
 8004270:	6823      	ldr	r3, [r4, #0]
 8004272:	4620      	mov	r0, r4
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004278:	4629      	mov	r1, r5
 800427a:	4630      	mov	r0, r6
 800427c:	f012 fabc 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004280:	682b      	ldr	r3, [r5, #0]
 8004282:	4628      	mov	r0, r5
 8004284:	691b      	ldr	r3, [r3, #16]
 8004286:	4798      	blx	r3
    newTransition->invalidate();
 8004288:	682b      	ldr	r3, [r5, #0]
 800428a:	4628      	mov	r0, r5
 800428c:	695b      	ldr	r3, [r3, #20]
}
 800428e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004292:	4718      	bx	r3
    model->bind(newPresenter);
 8004294:	4623      	mov	r3, r4
 8004296:	e7e2      	b.n	800425e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004298:	0802b5d4 	.word	0x0802b5d4
 800429c:	0802bfd3 	.word	0x0802bfd3
 80042a0:	0802b770 	.word	0x0802b770
 80042a4:	0802b7b7 	.word	0x0802b7b7
 80042a8:	0802b85a 	.word	0x0802b85a
 80042ac:	20012dec 	.word	0x20012dec
 80042b0:	20012de8 	.word	0x20012de8

080042b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80042b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80042b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80042bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80042be:	68a0      	ldr	r0, [r4, #8]
 80042c0:	6803      	ldr	r3, [r0, #0]
 80042c2:	6a1b      	ldr	r3, [r3, #32]
 80042c4:	4798      	blx	r3
 80042c6:	f241 035b 	movw	r3, #4187	; 0x105b
 80042ca:	4298      	cmp	r0, r3
 80042cc:	d805      	bhi.n	80042da <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 80042ce:	4b42      	ldr	r3, [pc, #264]	; (80043d8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80042d0:	4a42      	ldr	r2, [pc, #264]	; (80043dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80042d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042d4:	4842      	ldr	r0, [pc, #264]	; (80043e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80042d6:	f025 faed 	bl	80298b4 <__assert_func>
 80042da:	6860      	ldr	r0, [r4, #4]
 80042dc:	6803      	ldr	r3, [r0, #0]
 80042de:	6a1b      	ldr	r3, [r3, #32]
 80042e0:	4798      	blx	r3
 80042e2:	280f      	cmp	r0, #15
 80042e4:	d803      	bhi.n	80042ee <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 80042e6:	4b3f      	ldr	r3, [pc, #252]	; (80043e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 80042e8:	4a3c      	ldr	r2, [pc, #240]	; (80043dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80042ea:	21a4      	movs	r1, #164	; 0xa4
 80042ec:	e7f2      	b.n	80042d4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042ee:	68e0      	ldr	r0, [r4, #12]
 80042f0:	6803      	ldr	r3, [r0, #0]
 80042f2:	6a1b      	ldr	r3, [r3, #32]
 80042f4:	4798      	blx	r3
 80042f6:	2837      	cmp	r0, #55	; 0x37
 80042f8:	d803      	bhi.n	8004302 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 80042fa:	4b3b      	ldr	r3, [pc, #236]	; (80043e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 80042fc:	4a37      	ldr	r2, [pc, #220]	; (80043dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80042fe:	21a5      	movs	r1, #165	; 0xa5
 8004300:	e7e8      	b.n	80042d4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004302:	f010 fc4d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004306:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80043ec <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 800430a:	3004      	adds	r0, #4
 800430c:	f010 fcae 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004310:	f8d9 0000 	ldr.w	r0, [r9]
 8004314:	b110      	cbz	r0, 800431c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004316:	6803      	ldr	r3, [r0, #0]
 8004318:	68db      	ldr	r3, [r3, #12]
 800431a:	4798      	blx	r3
    if (*currentTrans)
 800431c:	f8d9 0000 	ldr.w	r0, [r9]
 8004320:	b110      	cbz	r0, 8004328 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004322:	6803      	ldr	r3, [r0, #0]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	4798      	blx	r3
    if (*currentScreen)
 8004328:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80043f0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 800432c:	f8d8 0000 	ldr.w	r0, [r8]
 8004330:	b110      	cbz	r0, 8004338 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004332:	6803      	ldr	r3, [r0, #0]
 8004334:	695b      	ldr	r3, [r3, #20]
 8004336:	4798      	blx	r3
    if (*currentPresenter)
 8004338:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800433c:	b110      	cbz	r0, 8004344 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800433e:	6803      	ldr	r3, [r0, #0]
 8004340:	685b      	ldr	r3, [r3, #4]
 8004342:	4798      	blx	r3
    if (*currentScreen)
 8004344:	f8d8 0000 	ldr.w	r0, [r8]
 8004348:	b110      	cbz	r0, 8004350 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800434a:	6803      	ldr	r3, [r0, #0]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	4798      	blx	r3
    if (*currentPresenter)
 8004350:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004354:	b110      	cbz	r0, 800435c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004356:	6803      	ldr	r3, [r0, #0]
 8004358:	689b      	ldr	r3, [r3, #8]
 800435a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800435c:	68e0      	ldr	r0, [r4, #12]
 800435e:	2100      	movs	r1, #0
 8004360:	f7ff fe36 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004364:	2114      	movs	r1, #20
 8004366:	4605      	mov	r5, r0
 8004368:	f7ff fe36 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800436c:	68a0      	ldr	r0, [r4, #8]
 800436e:	6803      	ldr	r3, [r0, #0]
 8004370:	2100      	movs	r1, #0
 8004372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004374:	4798      	blx	r3
 8004376:	4606      	mov	r6, r0
 8004378:	f003 ff84 	bl	8008284 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800437c:	6860      	ldr	r0, [r4, #4]
 800437e:	6803      	ldr	r3, [r0, #0]
 8004380:	2100      	movs	r1, #0
 8004382:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004384:	4798      	blx	r3
 8004386:	4631      	mov	r1, r6
 8004388:	4604      	mov	r4, r0
 800438a:	f003 ff55 	bl	8008238 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800438e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004392:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004396:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800439a:	b1dc      	cbz	r4, 80043d4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 800439c:	1d23      	adds	r3, r4, #4
 800439e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043a2:	6833      	ldr	r3, [r6, #0]
 80043a4:	f8c4 a008 	str.w	sl, [r4, #8]
 80043a8:	4630      	mov	r0, r6
 80043aa:	68db      	ldr	r3, [r3, #12]
 80043ac:	63f4      	str	r4, [r6, #60]	; 0x3c
 80043ae:	4798      	blx	r3
    newPresenter->activate();
 80043b0:	6823      	ldr	r3, [r4, #0]
 80043b2:	4620      	mov	r0, r4
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80043b8:	4629      	mov	r1, r5
 80043ba:	4630      	mov	r0, r6
 80043bc:	f012 fa1c 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043c0:	682b      	ldr	r3, [r5, #0]
 80043c2:	4628      	mov	r0, r5
 80043c4:	691b      	ldr	r3, [r3, #16]
 80043c6:	4798      	blx	r3
    newTransition->invalidate();
 80043c8:	682b      	ldr	r3, [r5, #0]
 80043ca:	4628      	mov	r0, r5
 80043cc:	695b      	ldr	r3, [r3, #20]
}
 80043ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043d2:	4718      	bx	r3
    model->bind(newPresenter);
 80043d4:	4623      	mov	r3, r4
 80043d6:	e7e2      	b.n	800439e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 80043d8:	0802b5d4 	.word	0x0802b5d4
 80043dc:	0802c0fb 	.word	0x0802c0fb
 80043e0:	0802b770 	.word	0x0802b770
 80043e4:	0802b7b7 	.word	0x0802b7b7
 80043e8:	0802b85a 	.word	0x0802b85a
 80043ec:	20012dec 	.word	0x20012dec
 80043f0:	20012de8 	.word	0x20012de8

080043f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80043f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80043fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043fe:	68a0      	ldr	r0, [r4, #8]
 8004400:	6803      	ldr	r3, [r0, #0]
 8004402:	6a1b      	ldr	r3, [r3, #32]
 8004404:	4798      	blx	r3
 8004406:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800440a:	d205      	bcs.n	8004418 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800440c:	4b42      	ldr	r3, [pc, #264]	; (8004518 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800440e:	4a43      	ldr	r2, [pc, #268]	; (800451c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004410:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004412:	4843      	ldr	r0, [pc, #268]	; (8004520 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004414:	f025 fa4e 	bl	80298b4 <__assert_func>
 8004418:	6860      	ldr	r0, [r4, #4]
 800441a:	6803      	ldr	r3, [r0, #0]
 800441c:	6a1b      	ldr	r3, [r3, #32]
 800441e:	4798      	blx	r3
 8004420:	280f      	cmp	r0, #15
 8004422:	d803      	bhi.n	800442c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004424:	4b3f      	ldr	r3, [pc, #252]	; (8004524 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004426:	4a3d      	ldr	r2, [pc, #244]	; (800451c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004428:	21a4      	movs	r1, #164	; 0xa4
 800442a:	e7f2      	b.n	8004412 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800442c:	68e0      	ldr	r0, [r4, #12]
 800442e:	6803      	ldr	r3, [r0, #0]
 8004430:	6a1b      	ldr	r3, [r3, #32]
 8004432:	4798      	blx	r3
 8004434:	2837      	cmp	r0, #55	; 0x37
 8004436:	d803      	bhi.n	8004440 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004438:	4b3b      	ldr	r3, [pc, #236]	; (8004528 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800443a:	4a38      	ldr	r2, [pc, #224]	; (800451c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800443c:	21a5      	movs	r1, #165	; 0xa5
 800443e:	e7e8      	b.n	8004412 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004440:	f010 fbae 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004444:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800452c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004448:	3004      	adds	r0, #4
 800444a:	f010 fc0f 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800444e:	f8d9 0000 	ldr.w	r0, [r9]
 8004452:	b110      	cbz	r0, 800445a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004454:	6803      	ldr	r3, [r0, #0]
 8004456:	68db      	ldr	r3, [r3, #12]
 8004458:	4798      	blx	r3
    if (*currentTrans)
 800445a:	f8d9 0000 	ldr.w	r0, [r9]
 800445e:	b110      	cbz	r0, 8004466 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004460:	6803      	ldr	r3, [r0, #0]
 8004462:	681b      	ldr	r3, [r3, #0]
 8004464:	4798      	blx	r3
    if (*currentScreen)
 8004466:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004530 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 800446a:	f8d8 0000 	ldr.w	r0, [r8]
 800446e:	b110      	cbz	r0, 8004476 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004470:	6803      	ldr	r3, [r0, #0]
 8004472:	695b      	ldr	r3, [r3, #20]
 8004474:	4798      	blx	r3
    if (*currentPresenter)
 8004476:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800447a:	b110      	cbz	r0, 8004482 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800447c:	6803      	ldr	r3, [r0, #0]
 800447e:	685b      	ldr	r3, [r3, #4]
 8004480:	4798      	blx	r3
    if (*currentScreen)
 8004482:	f8d8 0000 	ldr.w	r0, [r8]
 8004486:	b110      	cbz	r0, 800448e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004488:	6803      	ldr	r3, [r0, #0]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	4798      	blx	r3
    if (*currentPresenter)
 800448e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004492:	b110      	cbz	r0, 800449a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004494:	6803      	ldr	r3, [r0, #0]
 8004496:	689b      	ldr	r3, [r3, #8]
 8004498:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800449a:	68e0      	ldr	r0, [r4, #12]
 800449c:	2100      	movs	r1, #0
 800449e:	f7ff fd97 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80044a2:	2114      	movs	r1, #20
 80044a4:	4605      	mov	r5, r0
 80044a6:	f7ff fd97 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044aa:	68a0      	ldr	r0, [r4, #8]
 80044ac:	6803      	ldr	r3, [r0, #0]
 80044ae:	2100      	movs	r1, #0
 80044b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044b2:	4798      	blx	r3
 80044b4:	4606      	mov	r6, r0
 80044b6:	f003 fe49 	bl	800814c <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044ba:	6860      	ldr	r0, [r4, #4]
 80044bc:	6803      	ldr	r3, [r0, #0]
 80044be:	2100      	movs	r1, #0
 80044c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044c2:	4798      	blx	r3
 80044c4:	4631      	mov	r1, r6
 80044c6:	4604      	mov	r4, r0
 80044c8:	f003 fe1a 	bl	8008100 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80044cc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80044d0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044d4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044d8:	b1dc      	cbz	r4, 8004512 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80044da:	1d23      	adds	r3, r4, #4
 80044dc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044e0:	6833      	ldr	r3, [r6, #0]
 80044e2:	f8c4 a008 	str.w	sl, [r4, #8]
 80044e6:	4630      	mov	r0, r6
 80044e8:	68db      	ldr	r3, [r3, #12]
 80044ea:	63f4      	str	r4, [r6, #60]	; 0x3c
 80044ec:	4798      	blx	r3
    newPresenter->activate();
 80044ee:	6823      	ldr	r3, [r4, #0]
 80044f0:	4620      	mov	r0, r4
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044f6:	4629      	mov	r1, r5
 80044f8:	4630      	mov	r0, r6
 80044fa:	f012 f97d 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044fe:	682b      	ldr	r3, [r5, #0]
 8004500:	4628      	mov	r0, r5
 8004502:	691b      	ldr	r3, [r3, #16]
 8004504:	4798      	blx	r3
    newTransition->invalidate();
 8004506:	682b      	ldr	r3, [r5, #0]
 8004508:	4628      	mov	r0, r5
 800450a:	695b      	ldr	r3, [r3, #20]
}
 800450c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004510:	4718      	bx	r3
    model->bind(newPresenter);
 8004512:	4623      	mov	r3, r4
 8004514:	e7e2      	b.n	80044dc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004516:	bf00      	nop
 8004518:	0802b5d4 	.word	0x0802b5d4
 800451c:	0802c221 	.word	0x0802c221
 8004520:	0802b770 	.word	0x0802b770
 8004524:	0802b7b7 	.word	0x0802b7b7
 8004528:	0802b85a 	.word	0x0802b85a
 800452c:	20012dec 	.word	0x20012dec
 8004530:	20012de8 	.word	0x20012de8

08004534 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004534:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004538:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800453c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800453e:	68a0      	ldr	r0, [r4, #8]
 8004540:	6803      	ldr	r3, [r0, #0]
 8004542:	6a1b      	ldr	r3, [r3, #32]
 8004544:	4798      	blx	r3
 8004546:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800454a:	4298      	cmp	r0, r3
 800454c:	d805      	bhi.n	800455a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800454e:	4b42      	ldr	r3, [pc, #264]	; (8004658 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004550:	4a42      	ldr	r2, [pc, #264]	; (800465c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004552:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004554:	4842      	ldr	r0, [pc, #264]	; (8004660 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004556:	f025 f9ad 	bl	80298b4 <__assert_func>
 800455a:	6860      	ldr	r0, [r4, #4]
 800455c:	6803      	ldr	r3, [r0, #0]
 800455e:	6a1b      	ldr	r3, [r3, #32]
 8004560:	4798      	blx	r3
 8004562:	280f      	cmp	r0, #15
 8004564:	d803      	bhi.n	800456e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004566:	4b3f      	ldr	r3, [pc, #252]	; (8004664 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004568:	4a3c      	ldr	r2, [pc, #240]	; (800465c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800456a:	21a4      	movs	r1, #164	; 0xa4
 800456c:	e7f2      	b.n	8004554 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800456e:	68e0      	ldr	r0, [r4, #12]
 8004570:	6803      	ldr	r3, [r0, #0]
 8004572:	6a1b      	ldr	r3, [r3, #32]
 8004574:	4798      	blx	r3
 8004576:	2837      	cmp	r0, #55	; 0x37
 8004578:	d803      	bhi.n	8004582 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800457a:	4b3b      	ldr	r3, [pc, #236]	; (8004668 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 800457c:	4a37      	ldr	r2, [pc, #220]	; (800465c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800457e:	21a5      	movs	r1, #165	; 0xa5
 8004580:	e7e8      	b.n	8004554 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004582:	f010 fb0d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004586:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800466c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800458a:	3004      	adds	r0, #4
 800458c:	f010 fb6e 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004590:	f8d9 0000 	ldr.w	r0, [r9]
 8004594:	b110      	cbz	r0, 800459c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004596:	6803      	ldr	r3, [r0, #0]
 8004598:	68db      	ldr	r3, [r3, #12]
 800459a:	4798      	blx	r3
    if (*currentTrans)
 800459c:	f8d9 0000 	ldr.w	r0, [r9]
 80045a0:	b110      	cbz	r0, 80045a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80045a2:	6803      	ldr	r3, [r0, #0]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4798      	blx	r3
    if (*currentScreen)
 80045a8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004670 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80045ac:	f8d8 0000 	ldr.w	r0, [r8]
 80045b0:	b110      	cbz	r0, 80045b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	695b      	ldr	r3, [r3, #20]
 80045b6:	4798      	blx	r3
    if (*currentPresenter)
 80045b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045bc:	b110      	cbz	r0, 80045c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045be:	6803      	ldr	r3, [r0, #0]
 80045c0:	685b      	ldr	r3, [r3, #4]
 80045c2:	4798      	blx	r3
    if (*currentScreen)
 80045c4:	f8d8 0000 	ldr.w	r0, [r8]
 80045c8:	b110      	cbz	r0, 80045d0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045ca:	6803      	ldr	r3, [r0, #0]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	4798      	blx	r3
    if (*currentPresenter)
 80045d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045d4:	b110      	cbz	r0, 80045dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80045d6:	6803      	ldr	r3, [r0, #0]
 80045d8:	689b      	ldr	r3, [r3, #8]
 80045da:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045dc:	68e0      	ldr	r0, [r4, #12]
 80045de:	2100      	movs	r1, #0
 80045e0:	f7ff fcf6 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80045e4:	2114      	movs	r1, #20
 80045e6:	4605      	mov	r5, r0
 80045e8:	f7ff fcf6 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045ec:	68a0      	ldr	r0, [r4, #8]
 80045ee:	6803      	ldr	r3, [r0, #0]
 80045f0:	2100      	movs	r1, #0
 80045f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045f4:	4798      	blx	r3
 80045f6:	4606      	mov	r6, r0
 80045f8:	f004 f828 	bl	800864c <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045fc:	6860      	ldr	r0, [r4, #4]
 80045fe:	6803      	ldr	r3, [r0, #0]
 8004600:	2100      	movs	r1, #0
 8004602:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004604:	4798      	blx	r3
 8004606:	4631      	mov	r1, r6
 8004608:	4604      	mov	r4, r0
 800460a:	f003 fff9 	bl	8008600 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800460e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004612:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004616:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800461a:	b1dc      	cbz	r4, 8004654 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800461c:	1d23      	adds	r3, r4, #4
 800461e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004622:	6833      	ldr	r3, [r6, #0]
 8004624:	f8c4 a008 	str.w	sl, [r4, #8]
 8004628:	4630      	mov	r0, r6
 800462a:	68db      	ldr	r3, [r3, #12]
 800462c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800462e:	4798      	blx	r3
    newPresenter->activate();
 8004630:	6823      	ldr	r3, [r4, #0]
 8004632:	4620      	mov	r0, r4
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004638:	4629      	mov	r1, r5
 800463a:	4630      	mov	r0, r6
 800463c:	f012 f8dc 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004640:	682b      	ldr	r3, [r5, #0]
 8004642:	4628      	mov	r0, r5
 8004644:	691b      	ldr	r3, [r3, #16]
 8004646:	4798      	blx	r3
    newTransition->invalidate();
 8004648:	682b      	ldr	r3, [r5, #0]
 800464a:	4628      	mov	r0, r5
 800464c:	695b      	ldr	r3, [r3, #20]
}
 800464e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004652:	4718      	bx	r3
    model->bind(newPresenter);
 8004654:	4623      	mov	r3, r4
 8004656:	e7e2      	b.n	800461e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004658:	0802b5d4 	.word	0x0802b5d4
 800465c:	0802c33f 	.word	0x0802c33f
 8004660:	0802b770 	.word	0x0802b770
 8004664:	0802b7b7 	.word	0x0802b7b7
 8004668:	0802b85a 	.word	0x0802b85a
 800466c:	20012dec 	.word	0x20012dec
 8004670:	20012de8 	.word	0x20012de8

08004674 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004674:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004678:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800467c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800467e:	68a0      	ldr	r0, [r4, #8]
 8004680:	6803      	ldr	r3, [r0, #0]
 8004682:	6a1b      	ldr	r3, [r3, #32]
 8004684:	4798      	blx	r3
 8004686:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800468a:	4298      	cmp	r0, r3
 800468c:	d805      	bhi.n	800469a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800468e:	4b42      	ldr	r3, [pc, #264]	; (8004798 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004690:	4a42      	ldr	r2, [pc, #264]	; (800479c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004692:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004694:	4842      	ldr	r0, [pc, #264]	; (80047a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8004696:	f025 f90d 	bl	80298b4 <__assert_func>
 800469a:	6860      	ldr	r0, [r4, #4]
 800469c:	6803      	ldr	r3, [r0, #0]
 800469e:	6a1b      	ldr	r3, [r3, #32]
 80046a0:	4798      	blx	r3
 80046a2:	280f      	cmp	r0, #15
 80046a4:	d803      	bhi.n	80046ae <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80046a6:	4b3f      	ldr	r3, [pc, #252]	; (80047a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80046a8:	4a3c      	ldr	r2, [pc, #240]	; (800479c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80046aa:	21a4      	movs	r1, #164	; 0xa4
 80046ac:	e7f2      	b.n	8004694 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046ae:	68e0      	ldr	r0, [r4, #12]
 80046b0:	6803      	ldr	r3, [r0, #0]
 80046b2:	6a1b      	ldr	r3, [r3, #32]
 80046b4:	4798      	blx	r3
 80046b6:	2837      	cmp	r0, #55	; 0x37
 80046b8:	d803      	bhi.n	80046c2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80046ba:	4b3b      	ldr	r3, [pc, #236]	; (80047a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80046bc:	4a37      	ldr	r2, [pc, #220]	; (800479c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80046be:	21a5      	movs	r1, #165	; 0xa5
 80046c0:	e7e8      	b.n	8004694 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80046c2:	f010 fa6d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80047ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80046ca:	3004      	adds	r0, #4
 80046cc:	f010 face 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80046d0:	f8d9 0000 	ldr.w	r0, [r9]
 80046d4:	b110      	cbz	r0, 80046dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80046d6:	6803      	ldr	r3, [r0, #0]
 80046d8:	68db      	ldr	r3, [r3, #12]
 80046da:	4798      	blx	r3
    if (*currentTrans)
 80046dc:	f8d9 0000 	ldr.w	r0, [r9]
 80046e0:	b110      	cbz	r0, 80046e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80046e2:	6803      	ldr	r3, [r0, #0]
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	4798      	blx	r3
    if (*currentScreen)
 80046e8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80047b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80046ec:	f8d8 0000 	ldr.w	r0, [r8]
 80046f0:	b110      	cbz	r0, 80046f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80046f2:	6803      	ldr	r3, [r0, #0]
 80046f4:	695b      	ldr	r3, [r3, #20]
 80046f6:	4798      	blx	r3
    if (*currentPresenter)
 80046f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046fc:	b110      	cbz	r0, 8004704 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80046fe:	6803      	ldr	r3, [r0, #0]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	4798      	blx	r3
    if (*currentScreen)
 8004704:	f8d8 0000 	ldr.w	r0, [r8]
 8004708:	b110      	cbz	r0, 8004710 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	4798      	blx	r3
    if (*currentPresenter)
 8004710:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004714:	b110      	cbz	r0, 800471c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	689b      	ldr	r3, [r3, #8]
 800471a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800471c:	68e0      	ldr	r0, [r4, #12]
 800471e:	2100      	movs	r1, #0
 8004720:	f7ff fc56 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004724:	2114      	movs	r1, #20
 8004726:	4605      	mov	r5, r0
 8004728:	f7ff fc56 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800472c:	68a0      	ldr	r0, [r4, #8]
 800472e:	6803      	ldr	r3, [r0, #0]
 8004730:	2100      	movs	r1, #0
 8004732:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004734:	4798      	blx	r3
 8004736:	4606      	mov	r6, r0
 8004738:	f003 ff46 	bl	80085c8 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800473c:	6860      	ldr	r0, [r4, #4]
 800473e:	6803      	ldr	r3, [r0, #0]
 8004740:	2100      	movs	r1, #0
 8004742:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004744:	4798      	blx	r3
 8004746:	4631      	mov	r1, r6
 8004748:	4604      	mov	r4, r0
 800474a:	f003 ff17 	bl	800857c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800474e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004752:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004756:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800475a:	b1dc      	cbz	r4, 8004794 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 800475c:	1d23      	adds	r3, r4, #4
 800475e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004762:	6833      	ldr	r3, [r6, #0]
 8004764:	f8c4 a008 	str.w	sl, [r4, #8]
 8004768:	4630      	mov	r0, r6
 800476a:	68db      	ldr	r3, [r3, #12]
 800476c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800476e:	4798      	blx	r3
    newPresenter->activate();
 8004770:	6823      	ldr	r3, [r4, #0]
 8004772:	4620      	mov	r0, r4
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004778:	4629      	mov	r1, r5
 800477a:	4630      	mov	r0, r6
 800477c:	f012 f83c 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004780:	682b      	ldr	r3, [r5, #0]
 8004782:	4628      	mov	r0, r5
 8004784:	691b      	ldr	r3, [r3, #16]
 8004786:	4798      	blx	r3
    newTransition->invalidate();
 8004788:	682b      	ldr	r3, [r5, #0]
 800478a:	4628      	mov	r0, r5
 800478c:	695b      	ldr	r3, [r3, #20]
}
 800478e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004792:	4718      	bx	r3
    model->bind(newPresenter);
 8004794:	4623      	mov	r3, r4
 8004796:	e7e2      	b.n	800475e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004798:	0802b5d4 	.word	0x0802b5d4
 800479c:	0802c483 	.word	0x0802c483
 80047a0:	0802b770 	.word	0x0802b770
 80047a4:	0802b7b7 	.word	0x0802b7b7
 80047a8:	0802b85a 	.word	0x0802b85a
 80047ac:	20012dec 	.word	0x20012dec
 80047b0:	20012de8 	.word	0x20012de8

080047b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80047b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047be:	68a0      	ldr	r0, [r4, #8]
 80047c0:	6803      	ldr	r3, [r0, #0]
 80047c2:	6a1b      	ldr	r3, [r3, #32]
 80047c4:	4798      	blx	r3
 80047c6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80047ca:	d205      	bcs.n	80047d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80047cc:	4b42      	ldr	r3, [pc, #264]	; (80048d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80047ce:	4a43      	ldr	r2, [pc, #268]	; (80048dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80047d0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047d2:	4843      	ldr	r0, [pc, #268]	; (80048e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80047d4:	f025 f86e 	bl	80298b4 <__assert_func>
 80047d8:	6860      	ldr	r0, [r4, #4]
 80047da:	6803      	ldr	r3, [r0, #0]
 80047dc:	6a1b      	ldr	r3, [r3, #32]
 80047de:	4798      	blx	r3
 80047e0:	280f      	cmp	r0, #15
 80047e2:	d803      	bhi.n	80047ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80047e4:	4b3f      	ldr	r3, [pc, #252]	; (80048e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80047e6:	4a3d      	ldr	r2, [pc, #244]	; (80048dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80047e8:	21a4      	movs	r1, #164	; 0xa4
 80047ea:	e7f2      	b.n	80047d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047ec:	68e0      	ldr	r0, [r4, #12]
 80047ee:	6803      	ldr	r3, [r0, #0]
 80047f0:	6a1b      	ldr	r3, [r3, #32]
 80047f2:	4798      	blx	r3
 80047f4:	2837      	cmp	r0, #55	; 0x37
 80047f6:	d803      	bhi.n	8004800 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80047f8:	4b3b      	ldr	r3, [pc, #236]	; (80048e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80047fa:	4a38      	ldr	r2, [pc, #224]	; (80048dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80047fc:	21a5      	movs	r1, #165	; 0xa5
 80047fe:	e7e8      	b.n	80047d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004800:	f010 f9ce 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004804:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80048ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004808:	3004      	adds	r0, #4
 800480a:	f010 fa2f 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800480e:	f8d9 0000 	ldr.w	r0, [r9]
 8004812:	b110      	cbz	r0, 800481a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004814:	6803      	ldr	r3, [r0, #0]
 8004816:	68db      	ldr	r3, [r3, #12]
 8004818:	4798      	blx	r3
    if (*currentTrans)
 800481a:	f8d9 0000 	ldr.w	r0, [r9]
 800481e:	b110      	cbz	r0, 8004826 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004820:	6803      	ldr	r3, [r0, #0]
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	4798      	blx	r3
    if (*currentScreen)
 8004826:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80048f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800482a:	f8d8 0000 	ldr.w	r0, [r8]
 800482e:	b110      	cbz	r0, 8004836 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004830:	6803      	ldr	r3, [r0, #0]
 8004832:	695b      	ldr	r3, [r3, #20]
 8004834:	4798      	blx	r3
    if (*currentPresenter)
 8004836:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800483a:	b110      	cbz	r0, 8004842 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800483c:	6803      	ldr	r3, [r0, #0]
 800483e:	685b      	ldr	r3, [r3, #4]
 8004840:	4798      	blx	r3
    if (*currentScreen)
 8004842:	f8d8 0000 	ldr.w	r0, [r8]
 8004846:	b110      	cbz	r0, 800484e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004848:	6803      	ldr	r3, [r0, #0]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	4798      	blx	r3
    if (*currentPresenter)
 800484e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004852:	b110      	cbz	r0, 800485a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004854:	6803      	ldr	r3, [r0, #0]
 8004856:	689b      	ldr	r3, [r3, #8]
 8004858:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800485a:	68e0      	ldr	r0, [r4, #12]
 800485c:	2100      	movs	r1, #0
 800485e:	f7ff fbb7 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004862:	2114      	movs	r1, #20
 8004864:	4605      	mov	r5, r0
 8004866:	f7ff fbb7 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800486a:	68a0      	ldr	r0, [r4, #8]
 800486c:	6803      	ldr	r3, [r0, #0]
 800486e:	2100      	movs	r1, #0
 8004870:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004872:	4798      	blx	r3
 8004874:	4606      	mov	r6, r0
 8004876:	f003 fe4d 	bl	8008514 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800487a:	6860      	ldr	r0, [r4, #4]
 800487c:	6803      	ldr	r3, [r0, #0]
 800487e:	2100      	movs	r1, #0
 8004880:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004882:	4798      	blx	r3
 8004884:	4631      	mov	r1, r6
 8004886:	4604      	mov	r4, r0
 8004888:	f003 fe1e 	bl	80084c8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800488c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004890:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004894:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004898:	b1dc      	cbz	r4, 80048d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800489a:	1d23      	adds	r3, r4, #4
 800489c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048a0:	6833      	ldr	r3, [r6, #0]
 80048a2:	f8c4 a008 	str.w	sl, [r4, #8]
 80048a6:	4630      	mov	r0, r6
 80048a8:	68db      	ldr	r3, [r3, #12]
 80048aa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048ac:	4798      	blx	r3
    newPresenter->activate();
 80048ae:	6823      	ldr	r3, [r4, #0]
 80048b0:	4620      	mov	r0, r4
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048b6:	4629      	mov	r1, r5
 80048b8:	4630      	mov	r0, r6
 80048ba:	f011 ff9d 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048be:	682b      	ldr	r3, [r5, #0]
 80048c0:	4628      	mov	r0, r5
 80048c2:	691b      	ldr	r3, [r3, #16]
 80048c4:	4798      	blx	r3
    newTransition->invalidate();
 80048c6:	682b      	ldr	r3, [r5, #0]
 80048c8:	4628      	mov	r0, r5
 80048ca:	695b      	ldr	r3, [r3, #20]
}
 80048cc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048d0:	4718      	bx	r3
    model->bind(newPresenter);
 80048d2:	4623      	mov	r3, r4
 80048d4:	e7e2      	b.n	800489c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80048d6:	bf00      	nop
 80048d8:	0802b5d4 	.word	0x0802b5d4
 80048dc:	0802c5c3 	.word	0x0802c5c3
 80048e0:	0802b770 	.word	0x0802b770
 80048e4:	0802b7b7 	.word	0x0802b7b7
 80048e8:	0802b85a 	.word	0x0802b85a
 80048ec:	20012dec 	.word	0x20012dec
 80048f0:	20012de8 	.word	0x20012de8

080048f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80048f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80048fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048fe:	68a0      	ldr	r0, [r4, #8]
 8004900:	6803      	ldr	r3, [r0, #0]
 8004902:	6a1b      	ldr	r3, [r3, #32]
 8004904:	4798      	blx	r3
 8004906:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800490a:	4298      	cmp	r0, r3
 800490c:	d805      	bhi.n	800491a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800490e:	4b42      	ldr	r3, [pc, #264]	; (8004a18 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004910:	4a42      	ldr	r2, [pc, #264]	; (8004a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004912:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004914:	4842      	ldr	r0, [pc, #264]	; (8004a20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004916:	f024 ffcd 	bl	80298b4 <__assert_func>
 800491a:	6860      	ldr	r0, [r4, #4]
 800491c:	6803      	ldr	r3, [r0, #0]
 800491e:	6a1b      	ldr	r3, [r3, #32]
 8004920:	4798      	blx	r3
 8004922:	280f      	cmp	r0, #15
 8004924:	d803      	bhi.n	800492e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004926:	4b3f      	ldr	r3, [pc, #252]	; (8004a24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004928:	4a3c      	ldr	r2, [pc, #240]	; (8004a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800492a:	21a4      	movs	r1, #164	; 0xa4
 800492c:	e7f2      	b.n	8004914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800492e:	68e0      	ldr	r0, [r4, #12]
 8004930:	6803      	ldr	r3, [r0, #0]
 8004932:	6a1b      	ldr	r3, [r3, #32]
 8004934:	4798      	blx	r3
 8004936:	2837      	cmp	r0, #55	; 0x37
 8004938:	d803      	bhi.n	8004942 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800493a:	4b3b      	ldr	r3, [pc, #236]	; (8004a28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 800493c:	4a37      	ldr	r2, [pc, #220]	; (8004a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800493e:	21a5      	movs	r1, #165	; 0xa5
 8004940:	e7e8      	b.n	8004914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004942:	f010 f92d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004946:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800494a:	3004      	adds	r0, #4
 800494c:	f010 f98e 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004950:	f8d9 0000 	ldr.w	r0, [r9]
 8004954:	b110      	cbz	r0, 800495c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004956:	6803      	ldr	r3, [r0, #0]
 8004958:	68db      	ldr	r3, [r3, #12]
 800495a:	4798      	blx	r3
    if (*currentTrans)
 800495c:	f8d9 0000 	ldr.w	r0, [r9]
 8004960:	b110      	cbz	r0, 8004968 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004962:	6803      	ldr	r3, [r0, #0]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	4798      	blx	r3
    if (*currentScreen)
 8004968:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004a30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 800496c:	f8d8 0000 	ldr.w	r0, [r8]
 8004970:	b110      	cbz	r0, 8004978 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004972:	6803      	ldr	r3, [r0, #0]
 8004974:	695b      	ldr	r3, [r3, #20]
 8004976:	4798      	blx	r3
    if (*currentPresenter)
 8004978:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800497c:	b110      	cbz	r0, 8004984 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800497e:	6803      	ldr	r3, [r0, #0]
 8004980:	685b      	ldr	r3, [r3, #4]
 8004982:	4798      	blx	r3
    if (*currentScreen)
 8004984:	f8d8 0000 	ldr.w	r0, [r8]
 8004988:	b110      	cbz	r0, 8004990 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800498a:	6803      	ldr	r3, [r0, #0]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	4798      	blx	r3
    if (*currentPresenter)
 8004990:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004994:	b110      	cbz	r0, 800499c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004996:	6803      	ldr	r3, [r0, #0]
 8004998:	689b      	ldr	r3, [r3, #8]
 800499a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800499c:	68e0      	ldr	r0, [r4, #12]
 800499e:	2100      	movs	r1, #0
 80049a0:	f7ff fb16 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049a4:	2114      	movs	r1, #20
 80049a6:	4605      	mov	r5, r0
 80049a8:	f7ff fb16 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049ac:	68a0      	ldr	r0, [r4, #8]
 80049ae:	6803      	ldr	r3, [r0, #0]
 80049b0:	2100      	movs	r1, #0
 80049b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049b4:	4798      	blx	r3
 80049b6:	4606      	mov	r6, r0
 80049b8:	f003 ff8a 	bl	80088d0 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049bc:	6860      	ldr	r0, [r4, #4]
 80049be:	6803      	ldr	r3, [r0, #0]
 80049c0:	2100      	movs	r1, #0
 80049c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049c4:	4798      	blx	r3
 80049c6:	4631      	mov	r1, r6
 80049c8:	4604      	mov	r4, r0
 80049ca:	f003 ff5b 	bl	8008884 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80049ce:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049d2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049d6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049da:	b1dc      	cbz	r4, 8004a14 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80049dc:	1d23      	adds	r3, r4, #4
 80049de:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049e2:	6833      	ldr	r3, [r6, #0]
 80049e4:	f8c4 a008 	str.w	sl, [r4, #8]
 80049e8:	4630      	mov	r0, r6
 80049ea:	68db      	ldr	r3, [r3, #12]
 80049ec:	63f4      	str	r4, [r6, #60]	; 0x3c
 80049ee:	4798      	blx	r3
    newPresenter->activate();
 80049f0:	6823      	ldr	r3, [r4, #0]
 80049f2:	4620      	mov	r0, r4
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049f8:	4629      	mov	r1, r5
 80049fa:	4630      	mov	r0, r6
 80049fc:	f011 fefc 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a00:	682b      	ldr	r3, [r5, #0]
 8004a02:	4628      	mov	r0, r5
 8004a04:	691b      	ldr	r3, [r3, #16]
 8004a06:	4798      	blx	r3
    newTransition->invalidate();
 8004a08:	682b      	ldr	r3, [r5, #0]
 8004a0a:	4628      	mov	r0, r5
 8004a0c:	695b      	ldr	r3, [r3, #20]
}
 8004a0e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a12:	4718      	bx	r3
    model->bind(newPresenter);
 8004a14:	4623      	mov	r3, r4
 8004a16:	e7e2      	b.n	80049de <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004a18:	0802b5d4 	.word	0x0802b5d4
 8004a1c:	0802c6f3 	.word	0x0802c6f3
 8004a20:	0802b770 	.word	0x0802b770
 8004a24:	0802b7b7 	.word	0x0802b7b7
 8004a28:	0802b85a 	.word	0x0802b85a
 8004a2c:	20012dec 	.word	0x20012dec
 8004a30:	20012de8 	.word	0x20012de8

08004a34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004a34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a38:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a3c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a3e:	68a0      	ldr	r0, [r4, #8]
 8004a40:	6803      	ldr	r3, [r0, #0]
 8004a42:	6a1b      	ldr	r3, [r3, #32]
 8004a44:	4798      	blx	r3
 8004a46:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004a4a:	4298      	cmp	r0, r3
 8004a4c:	d805      	bhi.n	8004a5a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004a4e:	4b42      	ldr	r3, [pc, #264]	; (8004b58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004a50:	4a42      	ldr	r2, [pc, #264]	; (8004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004a52:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a54:	4842      	ldr	r0, [pc, #264]	; (8004b60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004a56:	f024 ff2d 	bl	80298b4 <__assert_func>
 8004a5a:	6860      	ldr	r0, [r4, #4]
 8004a5c:	6803      	ldr	r3, [r0, #0]
 8004a5e:	6a1b      	ldr	r3, [r3, #32]
 8004a60:	4798      	blx	r3
 8004a62:	280f      	cmp	r0, #15
 8004a64:	d803      	bhi.n	8004a6e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004a66:	4b3f      	ldr	r3, [pc, #252]	; (8004b64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004a68:	4a3c      	ldr	r2, [pc, #240]	; (8004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004a6a:	21a4      	movs	r1, #164	; 0xa4
 8004a6c:	e7f2      	b.n	8004a54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a6e:	68e0      	ldr	r0, [r4, #12]
 8004a70:	6803      	ldr	r3, [r0, #0]
 8004a72:	6a1b      	ldr	r3, [r3, #32]
 8004a74:	4798      	blx	r3
 8004a76:	2837      	cmp	r0, #55	; 0x37
 8004a78:	d803      	bhi.n	8004a82 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004a7a:	4b3b      	ldr	r3, [pc, #236]	; (8004b68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004a7c:	4a37      	ldr	r2, [pc, #220]	; (8004b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004a7e:	21a5      	movs	r1, #165	; 0xa5
 8004a80:	e7e8      	b.n	8004a54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a82:	f010 f88d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a86:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004a8a:	3004      	adds	r0, #4
 8004a8c:	f010 f8ee 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a90:	f8d9 0000 	ldr.w	r0, [r9]
 8004a94:	b110      	cbz	r0, 8004a9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004a96:	6803      	ldr	r3, [r0, #0]
 8004a98:	68db      	ldr	r3, [r3, #12]
 8004a9a:	4798      	blx	r3
    if (*currentTrans)
 8004a9c:	f8d9 0000 	ldr.w	r0, [r9]
 8004aa0:	b110      	cbz	r0, 8004aa8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004aa2:	6803      	ldr	r3, [r0, #0]
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	4798      	blx	r3
    if (*currentScreen)
 8004aa8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004b70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004aac:	f8d8 0000 	ldr.w	r0, [r8]
 8004ab0:	b110      	cbz	r0, 8004ab8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004ab2:	6803      	ldr	r3, [r0, #0]
 8004ab4:	695b      	ldr	r3, [r3, #20]
 8004ab6:	4798      	blx	r3
    if (*currentPresenter)
 8004ab8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004abc:	b110      	cbz	r0, 8004ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004abe:	6803      	ldr	r3, [r0, #0]
 8004ac0:	685b      	ldr	r3, [r3, #4]
 8004ac2:	4798      	blx	r3
    if (*currentScreen)
 8004ac4:	f8d8 0000 	ldr.w	r0, [r8]
 8004ac8:	b110      	cbz	r0, 8004ad0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004aca:	6803      	ldr	r3, [r0, #0]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	4798      	blx	r3
    if (*currentPresenter)
 8004ad0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ad4:	b110      	cbz	r0, 8004adc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ad6:	6803      	ldr	r3, [r0, #0]
 8004ad8:	689b      	ldr	r3, [r3, #8]
 8004ada:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004adc:	68e0      	ldr	r0, [r4, #12]
 8004ade:	2100      	movs	r1, #0
 8004ae0:	f7ff fa76 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ae4:	2114      	movs	r1, #20
 8004ae6:	4605      	mov	r5, r0
 8004ae8:	f7ff fa76 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004aec:	68a0      	ldr	r0, [r4, #8]
 8004aee:	6803      	ldr	r3, [r0, #0]
 8004af0:	2100      	movs	r1, #0
 8004af2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004af4:	4798      	blx	r3
 8004af6:	4606      	mov	r6, r0
 8004af8:	f003 fe4a 	bl	8008790 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004afc:	6860      	ldr	r0, [r4, #4]
 8004afe:	6803      	ldr	r3, [r0, #0]
 8004b00:	2100      	movs	r1, #0
 8004b02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b04:	4798      	blx	r3
 8004b06:	4631      	mov	r1, r6
 8004b08:	4604      	mov	r4, r0
 8004b0a:	f003 fe1b 	bl	8008744 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004b0e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b12:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b16:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b1a:	b1dc      	cbz	r4, 8004b54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004b1c:	1d23      	adds	r3, r4, #4
 8004b1e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b22:	6833      	ldr	r3, [r6, #0]
 8004b24:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b28:	4630      	mov	r0, r6
 8004b2a:	68db      	ldr	r3, [r3, #12]
 8004b2c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b2e:	4798      	blx	r3
    newPresenter->activate();
 8004b30:	6823      	ldr	r3, [r4, #0]
 8004b32:	4620      	mov	r0, r4
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b38:	4629      	mov	r1, r5
 8004b3a:	4630      	mov	r0, r6
 8004b3c:	f011 fe5c 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b40:	682b      	ldr	r3, [r5, #0]
 8004b42:	4628      	mov	r0, r5
 8004b44:	691b      	ldr	r3, [r3, #16]
 8004b46:	4798      	blx	r3
    newTransition->invalidate();
 8004b48:	682b      	ldr	r3, [r5, #0]
 8004b4a:	4628      	mov	r0, r5
 8004b4c:	695b      	ldr	r3, [r3, #20]
}
 8004b4e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b52:	4718      	bx	r3
    model->bind(newPresenter);
 8004b54:	4623      	mov	r3, r4
 8004b56:	e7e2      	b.n	8004b1e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004b58:	0802b5d4 	.word	0x0802b5d4
 8004b5c:	0802c835 	.word	0x0802c835
 8004b60:	0802b770 	.word	0x0802b770
 8004b64:	0802b7b7 	.word	0x0802b7b7
 8004b68:	0802b85a 	.word	0x0802b85a
 8004b6c:	20012dec 	.word	0x20012dec
 8004b70:	20012de8 	.word	0x20012de8

08004b74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b78:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b7c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b7e:	68a0      	ldr	r0, [r4, #8]
 8004b80:	6803      	ldr	r3, [r0, #0]
 8004b82:	6a1b      	ldr	r3, [r3, #32]
 8004b84:	4798      	blx	r3
 8004b86:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b8a:	d205      	bcs.n	8004b98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004b8c:	4b42      	ldr	r3, [pc, #264]	; (8004c98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004b8e:	4a43      	ldr	r2, [pc, #268]	; (8004c9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004b90:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b92:	4843      	ldr	r0, [pc, #268]	; (8004ca0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004b94:	f024 fe8e 	bl	80298b4 <__assert_func>
 8004b98:	6860      	ldr	r0, [r4, #4]
 8004b9a:	6803      	ldr	r3, [r0, #0]
 8004b9c:	6a1b      	ldr	r3, [r3, #32]
 8004b9e:	4798      	blx	r3
 8004ba0:	280f      	cmp	r0, #15
 8004ba2:	d803      	bhi.n	8004bac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004ba4:	4b3f      	ldr	r3, [pc, #252]	; (8004ca4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004ba6:	4a3d      	ldr	r2, [pc, #244]	; (8004c9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004ba8:	21a4      	movs	r1, #164	; 0xa4
 8004baa:	e7f2      	b.n	8004b92 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bac:	68e0      	ldr	r0, [r4, #12]
 8004bae:	6803      	ldr	r3, [r0, #0]
 8004bb0:	6a1b      	ldr	r3, [r3, #32]
 8004bb2:	4798      	blx	r3
 8004bb4:	2837      	cmp	r0, #55	; 0x37
 8004bb6:	d803      	bhi.n	8004bc0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004bb8:	4b3b      	ldr	r3, [pc, #236]	; (8004ca8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004bba:	4a38      	ldr	r2, [pc, #224]	; (8004c9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004bbc:	21a5      	movs	r1, #165	; 0xa5
 8004bbe:	e7e8      	b.n	8004b92 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004bc0:	f00f ffee 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bc4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004cac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004bc8:	3004      	adds	r0, #4
 8004bca:	f010 f84f 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bce:	f8d9 0000 	ldr.w	r0, [r9]
 8004bd2:	b110      	cbz	r0, 8004bda <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004bd4:	6803      	ldr	r3, [r0, #0]
 8004bd6:	68db      	ldr	r3, [r3, #12]
 8004bd8:	4798      	blx	r3
    if (*currentTrans)
 8004bda:	f8d9 0000 	ldr.w	r0, [r9]
 8004bde:	b110      	cbz	r0, 8004be6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004be0:	6803      	ldr	r3, [r0, #0]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	4798      	blx	r3
    if (*currentScreen)
 8004be6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cb0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004bea:	f8d8 0000 	ldr.w	r0, [r8]
 8004bee:	b110      	cbz	r0, 8004bf6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004bf0:	6803      	ldr	r3, [r0, #0]
 8004bf2:	695b      	ldr	r3, [r3, #20]
 8004bf4:	4798      	blx	r3
    if (*currentPresenter)
 8004bf6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bfa:	b110      	cbz	r0, 8004c02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004bfc:	6803      	ldr	r3, [r0, #0]
 8004bfe:	685b      	ldr	r3, [r3, #4]
 8004c00:	4798      	blx	r3
    if (*currentScreen)
 8004c02:	f8d8 0000 	ldr.w	r0, [r8]
 8004c06:	b110      	cbz	r0, 8004c0e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c08:	6803      	ldr	r3, [r0, #0]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	4798      	blx	r3
    if (*currentPresenter)
 8004c0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c12:	b110      	cbz	r0, 8004c1a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c14:	6803      	ldr	r3, [r0, #0]
 8004c16:	689b      	ldr	r3, [r3, #8]
 8004c18:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c1a:	68e0      	ldr	r0, [r4, #12]
 8004c1c:	2100      	movs	r1, #0
 8004c1e:	f7ff f9d7 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c22:	2114      	movs	r1, #20
 8004c24:	4605      	mov	r5, r0
 8004c26:	f7ff f9d7 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c2a:	68a0      	ldr	r0, [r4, #8]
 8004c2c:	6803      	ldr	r3, [r0, #0]
 8004c2e:	2100      	movs	r1, #0
 8004c30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c32:	4798      	blx	r3
 8004c34:	4606      	mov	r6, r0
 8004c36:	f003 fd51 	bl	80086dc <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c3a:	6860      	ldr	r0, [r4, #4]
 8004c3c:	6803      	ldr	r3, [r0, #0]
 8004c3e:	2100      	movs	r1, #0
 8004c40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c42:	4798      	blx	r3
 8004c44:	4631      	mov	r1, r6
 8004c46:	4604      	mov	r4, r0
 8004c48:	f003 fd22 	bl	8008690 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004c4c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c50:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c54:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c58:	b1dc      	cbz	r4, 8004c92 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004c5a:	1d23      	adds	r3, r4, #4
 8004c5c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c60:	6833      	ldr	r3, [r6, #0]
 8004c62:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c66:	4630      	mov	r0, r6
 8004c68:	68db      	ldr	r3, [r3, #12]
 8004c6a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c6c:	4798      	blx	r3
    newPresenter->activate();
 8004c6e:	6823      	ldr	r3, [r4, #0]
 8004c70:	4620      	mov	r0, r4
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c76:	4629      	mov	r1, r5
 8004c78:	4630      	mov	r0, r6
 8004c7a:	f011 fdbd 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c7e:	682b      	ldr	r3, [r5, #0]
 8004c80:	4628      	mov	r0, r5
 8004c82:	691b      	ldr	r3, [r3, #16]
 8004c84:	4798      	blx	r3
    newTransition->invalidate();
 8004c86:	682b      	ldr	r3, [r5, #0]
 8004c88:	4628      	mov	r0, r5
 8004c8a:	695b      	ldr	r3, [r3, #20]
}
 8004c8c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c90:	4718      	bx	r3
    model->bind(newPresenter);
 8004c92:	4623      	mov	r3, r4
 8004c94:	e7e2      	b.n	8004c5c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004c96:	bf00      	nop
 8004c98:	0802b5d4 	.word	0x0802b5d4
 8004c9c:	0802c977 	.word	0x0802c977
 8004ca0:	0802b770 	.word	0x0802b770
 8004ca4:	0802b7b7 	.word	0x0802b7b7
 8004ca8:	0802b85a 	.word	0x0802b85a
 8004cac:	20012dec 	.word	0x20012dec
 8004cb0:	20012de8 	.word	0x20012de8

08004cb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004cb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cb8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cbc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cbe:	68a0      	ldr	r0, [r4, #8]
 8004cc0:	6803      	ldr	r3, [r0, #0]
 8004cc2:	6a1b      	ldr	r3, [r3, #32]
 8004cc4:	4798      	blx	r3
 8004cc6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004cca:	d205      	bcs.n	8004cd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004ccc:	4b42      	ldr	r3, [pc, #264]	; (8004dd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004cce:	4a43      	ldr	r2, [pc, #268]	; (8004ddc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004cd0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cd2:	4843      	ldr	r0, [pc, #268]	; (8004de0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004cd4:	f024 fdee 	bl	80298b4 <__assert_func>
 8004cd8:	6860      	ldr	r0, [r4, #4]
 8004cda:	6803      	ldr	r3, [r0, #0]
 8004cdc:	6a1b      	ldr	r3, [r3, #32]
 8004cde:	4798      	blx	r3
 8004ce0:	280f      	cmp	r0, #15
 8004ce2:	d803      	bhi.n	8004cec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004ce4:	4b3f      	ldr	r3, [pc, #252]	; (8004de4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004ce6:	4a3d      	ldr	r2, [pc, #244]	; (8004ddc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004ce8:	21a4      	movs	r1, #164	; 0xa4
 8004cea:	e7f2      	b.n	8004cd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cec:	68e0      	ldr	r0, [r4, #12]
 8004cee:	6803      	ldr	r3, [r0, #0]
 8004cf0:	6a1b      	ldr	r3, [r3, #32]
 8004cf2:	4798      	blx	r3
 8004cf4:	2837      	cmp	r0, #55	; 0x37
 8004cf6:	d803      	bhi.n	8004d00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004cf8:	4b3b      	ldr	r3, [pc, #236]	; (8004de8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004cfa:	4a38      	ldr	r2, [pc, #224]	; (8004ddc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004cfc:	21a5      	movs	r1, #165	; 0xa5
 8004cfe:	e7e8      	b.n	8004cd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d00:	f00f ff4e 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d04:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004dec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004d08:	3004      	adds	r0, #4
 8004d0a:	f00f ffaf 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d0e:	f8d9 0000 	ldr.w	r0, [r9]
 8004d12:	b110      	cbz	r0, 8004d1a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d14:	6803      	ldr	r3, [r0, #0]
 8004d16:	68db      	ldr	r3, [r3, #12]
 8004d18:	4798      	blx	r3
    if (*currentTrans)
 8004d1a:	f8d9 0000 	ldr.w	r0, [r9]
 8004d1e:	b110      	cbz	r0, 8004d26 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d20:	6803      	ldr	r3, [r0, #0]
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	4798      	blx	r3
    if (*currentScreen)
 8004d26:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004df0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004d2a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d2e:	b110      	cbz	r0, 8004d36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d30:	6803      	ldr	r3, [r0, #0]
 8004d32:	695b      	ldr	r3, [r3, #20]
 8004d34:	4798      	blx	r3
    if (*currentPresenter)
 8004d36:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d3a:	b110      	cbz	r0, 8004d42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d3c:	6803      	ldr	r3, [r0, #0]
 8004d3e:	685b      	ldr	r3, [r3, #4]
 8004d40:	4798      	blx	r3
    if (*currentScreen)
 8004d42:	f8d8 0000 	ldr.w	r0, [r8]
 8004d46:	b110      	cbz	r0, 8004d4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	4798      	blx	r3
    if (*currentPresenter)
 8004d4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d52:	b110      	cbz	r0, 8004d5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d54:	6803      	ldr	r3, [r0, #0]
 8004d56:	689b      	ldr	r3, [r3, #8]
 8004d58:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d5a:	68e0      	ldr	r0, [r4, #12]
 8004d5c:	2100      	movs	r1, #0
 8004d5e:	f7ff f937 	bl	8003fd0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d62:	2114      	movs	r1, #20
 8004d64:	4605      	mov	r5, r0
 8004d66:	f7ff f937 	bl	8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d6a:	68a0      	ldr	r0, [r4, #8]
 8004d6c:	6803      	ldr	r3, [r0, #0]
 8004d6e:	2100      	movs	r1, #0
 8004d70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d72:	4798      	blx	r3
 8004d74:	4606      	mov	r6, r0
 8004d76:	f003 fb6d 	bl	8008454 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d7a:	6860      	ldr	r0, [r4, #4]
 8004d7c:	6803      	ldr	r3, [r0, #0]
 8004d7e:	2100      	movs	r1, #0
 8004d80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d82:	4798      	blx	r3
 8004d84:	4631      	mov	r1, r6
 8004d86:	4604      	mov	r4, r0
 8004d88:	f003 fb3e 	bl	8008408 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004d8c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d90:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d94:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d98:	b1dc      	cbz	r4, 8004dd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004d9a:	1d23      	adds	r3, r4, #4
 8004d9c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004da0:	6833      	ldr	r3, [r6, #0]
 8004da2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004da6:	4630      	mov	r0, r6
 8004da8:	68db      	ldr	r3, [r3, #12]
 8004daa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dac:	4798      	blx	r3
    newPresenter->activate();
 8004dae:	6823      	ldr	r3, [r4, #0]
 8004db0:	4620      	mov	r0, r4
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004db6:	4629      	mov	r1, r5
 8004db8:	4630      	mov	r0, r6
 8004dba:	f011 fd1d 	bl	80167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004dbe:	682b      	ldr	r3, [r5, #0]
 8004dc0:	4628      	mov	r0, r5
 8004dc2:	691b      	ldr	r3, [r3, #16]
 8004dc4:	4798      	blx	r3
    newTransition->invalidate();
 8004dc6:	682b      	ldr	r3, [r5, #0]
 8004dc8:	4628      	mov	r0, r5
 8004dca:	695b      	ldr	r3, [r3, #20]
}
 8004dcc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004dd0:	4718      	bx	r3
    model->bind(newPresenter);
 8004dd2:	4623      	mov	r3, r4
 8004dd4:	e7e2      	b.n	8004d9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004dd6:	bf00      	nop
 8004dd8:	0802b5d4 	.word	0x0802b5d4
 8004ddc:	0802caa3 	.word	0x0802caa3
 8004de0:	0802b770 	.word	0x0802b770
 8004de4:	0802b7b7 	.word	0x0802b7b7
 8004de8:	0802b85a 	.word	0x0802b85a
 8004dec:	20012dec 	.word	0x20012dec
 8004df0:	20012de8 	.word	0x20012de8

08004df4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004df4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004df6:	4770      	bx	lr

08004df8 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004df8:	4770      	bx	lr

08004dfa <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004dfa:	4770      	bx	lr

08004dfc <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004dfc:	b510      	push	{r4, lr}
}
 8004dfe:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004e02:	4604      	mov	r4, r0
}
 8004e04:	f023 ff43 	bl	8028c8e <_ZdlPvj>
 8004e08:	4620      	mov	r0, r4
 8004e0a:	bd10      	pop	{r4, pc}

08004e0c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004e10:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004e14:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004e16:	2600      	movs	r6, #0
 8004e18:	ed2d 8b02 	vpush	{d8}
 8004e1c:	8483      	strh	r3, [r0, #36]	; 0x24
 8004e1e:	4bb2      	ldr	r3, [pc, #712]	; (80050e8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004e20:	6286      	str	r6, [r0, #40]	; 0x28
 8004e22:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004e26:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004e2a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004e2e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004e32:	f848 3b2c 	str.w	r3, [r8], #44
 8004e36:	b08b      	sub	sp, #44	; 0x2c
 8004e38:	4604      	mov	r4, r0
 8004e3a:	4640      	mov	r0, r8
 8004e3c:	f7fd fc42 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004e40:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004e44:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004e48:	4618      	mov	r0, r3
 8004e4a:	9303      	str	r3, [sp, #12]
 8004e4c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004e50:	f7fd fc38 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004e54:	4658      	mov	r0, fp
 8004e56:	f7fd fc35 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004e5a:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004e5e:	4da3      	ldr	r5, [pc, #652]	; (80050ec <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004e60:	4650      	mov	r0, sl
 8004e62:	f7fd fc2f 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004e66:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004e6a:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004e6e:	4648      	mov	r0, r9
 8004e70:	f7fd fc28 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004e74:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004e78:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004e7c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004e7e:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004e82:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004e86:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004e8a:	f7fd fc1b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004e8e:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004e92:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004e96:	4638      	mov	r0, r7
 8004e98:	f00c fe3c 	bl	8011b14 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004e9c:	4a94      	ldr	r2, [pc, #592]	; (80050f0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004e9e:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004ea0:	4640      	mov	r0, r8
 8004ea2:	226d      	movs	r2, #109	; 0x6d
 8004ea4:	21d9      	movs	r1, #217	; 0xd9
 8004ea6:	ad04      	add	r5, sp, #16
 8004ea8:	f7fd fbd9 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004eac:	f04f 33ff 	mov.w	r3, #4294967295
 8004eb0:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004eb2:	4641      	mov	r1, r8
 8004eb4:	4628      	mov	r0, r5
        linespace = space;
 8004eb6:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004eba:	f00c faf3 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ebe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ec2:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004ec6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004eca:	4b8a      	ldr	r3, [pc, #552]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004ecc:	9308      	str	r3, [sp, #32]
 8004ece:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004ed0:	a908      	add	r1, sp, #32
 8004ed2:	4640      	mov	r0, r8
 8004ed4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004ed8:	f00c fd7e 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004edc:	4641      	mov	r1, r8
 8004ede:	4620      	mov	r0, r4
 8004ee0:	f00a fbc6 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004ee4:	9b03      	ldr	r3, [sp, #12]
 8004ee6:	4631      	mov	r1, r6
 8004ee8:	4618      	mov	r0, r3
 8004eea:	226d      	movs	r2, #109	; 0x6d
 8004eec:	f7fd fbb7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8004ef0:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004ef2:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004ef6:	f04f 32ff 	mov.w	r2, #4294967295
 8004efa:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004efe:	4619      	mov	r1, r3
 8004f00:	4628      	mov	r0, r5
 8004f02:	f00c facf 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f06:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f0a:	4b7a      	ldr	r3, [pc, #488]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004f0c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004f0e:	9b03      	ldr	r3, [sp, #12]
 8004f10:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004f14:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004f18:	2230      	movs	r2, #48	; 0x30
 8004f1a:	a908      	add	r1, sp, #32
 8004f1c:	4618      	mov	r0, r3
 8004f1e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004f22:	f00c fd59 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004f26:	9b03      	ldr	r3, [sp, #12]
 8004f28:	4620      	mov	r0, r4
 8004f2a:	4619      	mov	r1, r3
 8004f2c:	f00a fba0 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004f30:	4632      	mov	r2, r6
 8004f32:	4658      	mov	r0, fp
 8004f34:	2171      	movs	r1, #113	; 0x71
 8004f36:	f7fd fb92 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004f3a:	f04f 32ff 	mov.w	r2, #4294967295
 8004f3e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004f42:	4659      	mov	r1, fp
 8004f44:	4628      	mov	r0, r5
        linespace = space;
 8004f46:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004f4a:	f00c faab 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f4e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f52:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004f56:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f5a:	4b66      	ldr	r3, [pc, #408]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004f5c:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004f5e:	a908      	add	r1, sp, #32
 8004f60:	2331      	movs	r3, #49	; 0x31
 8004f62:	4658      	mov	r0, fp
 8004f64:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004f68:	f00c fd36 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004f6c:	4659      	mov	r1, fp
 8004f6e:	4620      	mov	r0, r4
 8004f70:	f00a fb7e 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004f74:	4650      	mov	r0, sl
 8004f76:	227c      	movs	r2, #124	; 0x7c
 8004f78:	214c      	movs	r1, #76	; 0x4c
 8004f7a:	f7fd fb70 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8004f7e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004f82:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004f86:	f04f 32ff 	mov.w	r2, #4294967295
 8004f8a:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004f8e:	4651      	mov	r1, sl
 8004f90:	4628      	mov	r0, r5
 8004f92:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004f96:	4798      	blx	r3
 8004f98:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f9c:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004fa0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004fa4:	4b53      	ldr	r3, [pc, #332]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004fa6:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004fa8:	a908      	add	r1, sp, #32
 8004faa:	232e      	movs	r3, #46	; 0x2e
 8004fac:	4650      	mov	r0, sl
 8004fae:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004fb2:	f00c fd11 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004fb6:	4651      	mov	r1, sl
 8004fb8:	4620      	mov	r0, r4
 8004fba:	f00a fb59 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004fbe:	4648      	mov	r0, r9
 8004fc0:	228b      	movs	r2, #139	; 0x8b
 8004fc2:	2156      	movs	r1, #86	; 0x56
 8004fc4:	f7fd fb4b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8004fc8:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004fcc:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004fd0:	f04f 32ff 	mov.w	r2, #4294967295
 8004fd4:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004fd8:	4649      	mov	r1, r9
 8004fda:	4628      	mov	r0, r5
 8004fdc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004fe0:	4798      	blx	r3
 8004fe2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004fe6:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004fea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004fee:	4b41      	ldr	r3, [pc, #260]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004ff0:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8004ff2:	a908      	add	r1, sp, #32
 8004ff4:	232d      	movs	r3, #45	; 0x2d
 8004ff6:	4648      	mov	r0, r9
 8004ff8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004ffc:	f00c fcec 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005000:	4649      	mov	r1, r9
 8005002:	4620      	mov	r0, r4
 8005004:	f00a fb34 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005008:	ee18 0a10 	vmov	r0, s16
 800500c:	229a      	movs	r2, #154	; 0x9a
 800500e:	2156      	movs	r1, #86	; 0x56
 8005010:	f7fd fb25 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005014:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005018:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 800501c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005020:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005024:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005028:	4628      	mov	r0, r5
 800502a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800502e:	4798      	blx	r3
 8005030:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005034:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005038:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800503c:	4b2d      	ldr	r3, [pc, #180]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800503e:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8005040:	ee18 0a10 	vmov	r0, s16
 8005044:	232c      	movs	r3, #44	; 0x2c
 8005046:	a908      	add	r1, sp, #32
 8005048:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800504c:	f00c fcc4 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8005050:	ee18 1a10 	vmov	r1, s16
 8005054:	4620      	mov	r0, r4
 8005056:	f00a fb0b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800505a:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800505c:	a908      	add	r1, sp, #32
 800505e:	4638      	mov	r0, r7
 8005060:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005064:	f00a fa96 	bl	800f594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005068:	2212      	movs	r2, #18
 800506a:	4638      	mov	r0, r7
 800506c:	211c      	movs	r1, #28
 800506e:	f7fd faf6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8005072:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005076:	4638      	mov	r0, r7
 8005078:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800507a:	21b8      	movs	r1, #184	; 0xb8
 800507c:	4798      	blx	r3
        setHeight(height);
 800507e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005082:	4638      	mov	r0, r7
 8005084:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005086:	216a      	movs	r1, #106	; 0x6a
 8005088:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 800508a:	225c      	movs	r2, #92	; 0x5c
 800508c:	4611      	mov	r1, r2
 800508e:	4638      	mov	r0, r7
 8005090:	f00c fdeb 	bl	8011c6a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8005094:	4638      	mov	r0, r7
 8005096:	225a      	movs	r2, #90	; 0x5a
 8005098:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800509c:	f00c fe6a 	bl	8011d74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80050a0:	4633      	mov	r3, r6
 80050a2:	225a      	movs	r2, #90	; 0x5a
 80050a4:	4638      	mov	r0, r7
 80050a6:	9600      	str	r6, [sp, #0]
 80050a8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80050ac:	f00a f91f 	bl	800f2ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80050b0:	4631      	mov	r1, r6
 80050b2:	4638      	mov	r0, r7
 80050b4:	f00c fe08 	bl	8011cc8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80050b8:	2335      	movs	r3, #53	; 0x35
 80050ba:	2208      	movs	r2, #8
 80050bc:	4638      	mov	r0, r7
 80050be:	2105      	movs	r1, #5
 80050c0:	f00c fdbe 	bl	8011c40 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80050c4:	4638      	mov	r0, r7
 80050c6:	2101      	movs	r1, #1
 80050c8:	f00c fd5c 	bl	8011b84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80050cc:	4638      	mov	r0, r7
 80050ce:	2101      	movs	r1, #1
 80050d0:	f00c fd5b 	bl	8011b8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80050d4:	4620      	mov	r0, r4
 80050d6:	4639      	mov	r1, r7
 80050d8:	f00a faca 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80050dc:	4620      	mov	r0, r4
 80050de:	b00b      	add	sp, #44	; 0x2c
 80050e0:	ecbd 8b02 	vpop	{d8}
 80050e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050e8:	0802cd0c 	.word	0x0802cd0c
 80050ec:	0802b468 	.word	0x0802b468
 80050f0:	00a900f0 	.word	0x00a900f0
 80050f4:	0802b458 	.word	0x0802b458

080050f8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80050f8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80050fa:	4770      	bx	lr

080050fc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80050fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80050fe:	4770      	bx	lr

08005100 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005100:	4770      	bx	lr

08005102 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005102:	888b      	ldrh	r3, [r1, #4]
 8005104:	69c0      	ldr	r0, [r0, #28]
 8005106:	680a      	ldr	r2, [r1, #0]
 8005108:	0adb      	lsrs	r3, r3, #11
 800510a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800510e:	4410      	add	r0, r2
 8005110:	4770      	bx	lr

08005112 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005112:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005114:	b1c2      	cbz	r2, 8005148 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005116:	7b13      	ldrb	r3, [r2, #12]
 8005118:	b1b3      	cbz	r3, 8005148 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800511a:	7b54      	ldrb	r4, [r2, #13]
 800511c:	7ad2      	ldrb	r2, [r2, #11]
 800511e:	0224      	lsls	r4, r4, #8
 8005120:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005124:	4314      	orrs	r4, r2
 8005126:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005128:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800512a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800512e:	8813      	ldrh	r3, [r2, #0]
 8005130:	428b      	cmp	r3, r1
 8005132:	d102      	bne.n	800513a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005134:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005138:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800513a:	d805      	bhi.n	8005148 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800513c:	3801      	subs	r0, #1
 800513e:	b280      	uxth	r0, r0
 8005140:	3204      	adds	r2, #4
 8005142:	2800      	cmp	r0, #0
 8005144:	d1f3      	bne.n	800512e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005146:	e7f7      	b.n	8005138 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005148:	2000      	movs	r0, #0
 800514a:	e7f5      	b.n	8005138 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800514c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800514c:	b510      	push	{r4, lr}
 800514e:	212c      	movs	r1, #44	; 0x2c
 8005150:	4604      	mov	r4, r0
 8005152:	f023 fd9c 	bl	8028c8e <_ZdlPvj>
 8005156:	4620      	mov	r0, r4
 8005158:	bd10      	pop	{r4, pc}
	...

0800515c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800515c:	b530      	push	{r4, r5, lr}
 800515e:	b08b      	sub	sp, #44	; 0x2c
 8005160:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005162:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005166:	9508      	str	r5, [sp, #32]
 8005168:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800516c:	9507      	str	r5, [sp, #28]
 800516e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005172:	9506      	str	r5, [sp, #24]
 8005174:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005178:	9505      	str	r5, [sp, #20]
 800517a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800517e:	9504      	str	r5, [sp, #16]
 8005180:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005184:	9503      	str	r5, [sp, #12]
 8005186:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800518a:	9502      	str	r5, [sp, #8]
 800518c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005190:	9501      	str	r5, [sp, #4]
 8005192:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005196:	9500      	str	r5, [sp, #0]
 8005198:	f010 fe98 	bl	8015ecc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800519c:	4b06      	ldr	r3, [pc, #24]	; (80051b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800519e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80051a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80051a2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80051a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80051a6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80051a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80051aa:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80051ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80051ae:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80051b0:	4620      	mov	r0, r4
 80051b2:	b00b      	add	sp, #44	; 0x2c
 80051b4:	bd30      	pop	{r4, r5, pc}
 80051b6:	bf00      	nop
 80051b8:	0802cda0 	.word	0x0802cda0

080051bc <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80051bc:	4770      	bx	lr

080051be <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80051be:	4770      	bx	lr

080051c0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80051c0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80051c2:	68c2      	ldr	r2, [r0, #12]
 80051c4:	6844      	ldr	r4, [r0, #4]
 80051c6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80051c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80051ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80051ce:	07d2      	lsls	r2, r2, #31
 80051d0:	bf48      	it	mi
 80051d2:	5962      	ldrmi	r2, [r4, r5]
 80051d4:	689b      	ldr	r3, [r3, #8]
    }
 80051d6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80051d8:	bf48      	it	mi
 80051da:	58d3      	ldrmi	r3, [r2, r3]
 80051dc:	4718      	bx	r3

080051de <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80051de:	6843      	ldr	r3, [r0, #4]
 80051e0:	b12b      	cbz	r3, 80051ee <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80051e2:	6883      	ldr	r3, [r0, #8]
 80051e4:	b92b      	cbnz	r3, 80051f2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80051e6:	68c0      	ldr	r0, [r0, #12]
 80051e8:	f000 0001 	and.w	r0, r0, #1
 80051ec:	4770      	bx	lr
 80051ee:	4618      	mov	r0, r3
 80051f0:	4770      	bx	lr
 80051f2:	2001      	movs	r0, #1
    }
 80051f4:	4770      	bx	lr

080051f6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80051f6:	b510      	push	{r4, lr}
 80051f8:	2110      	movs	r1, #16
 80051fa:	4604      	mov	r4, r0
 80051fc:	f023 fd47 	bl	8028c8e <_ZdlPvj>
 8005200:	4620      	mov	r0, r4
 8005202:	bd10      	pop	{r4, pc}

08005204 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005204:	b510      	push	{r4, lr}
 8005206:	4b03      	ldr	r3, [pc, #12]	; (8005214 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005208:	6003      	str	r3, [r0, #0]
 800520a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800520c:	f00d ffc6 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005210:	4620      	mov	r0, r4
 8005212:	bd10      	pop	{r4, pc}
 8005214:	0802ce18 	.word	0x0802ce18

08005218 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005218:	b507      	push	{r0, r1, r2, lr}
 800521a:	4b07      	ldr	r3, [pc, #28]	; (8005238 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800521c:	6003      	str	r3, [r0, #0]
 800521e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005220:	f00d ffbc 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005224:	9801      	ldr	r0, [sp, #4]
 8005226:	f241 117c 	movw	r1, #4476	; 0x117c
 800522a:	f023 fd30 	bl	8028c8e <_ZdlPvj>
 800522e:	9801      	ldr	r0, [sp, #4]
 8005230:	b003      	add	sp, #12
 8005232:	f85d fb04 	ldr.w	pc, [sp], #4
 8005236:	bf00      	nop
 8005238:	0802ce18 	.word	0x0802ce18

0800523c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800523c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800523e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005242:	4299      	cmp	r1, r3
{
 8005244:	4604      	mov	r4, r0
 8005246:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005248:	d103      	bne.n	8005252 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800524a:	f00f fca9 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800524e:	f7fe fb0d 	bl	800386c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005252:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005256:	429d      	cmp	r5, r3
 8005258:	d103      	bne.n	8005262 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800525a:	f00f fca1 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800525e:	f7fe fba5 	bl	80039ac <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005262:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005266:	429d      	cmp	r5, r3
 8005268:	d103      	bne.n	8005272 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800526a:	f00f fc99 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800526e:	f7fe fbdd 	bl	8003a2c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005272:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005276:	42a5      	cmp	r5, r4
 8005278:	d10a      	bne.n	8005290 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800527a:	4806      	ldr	r0, [pc, #24]	; (8005294 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800527c:	2200      	movs	r2, #0
 800527e:	2120      	movs	r1, #32
 8005280:	f004 f88a 	bl	8009398 <HAL_GPIO_WritePin>
 8005284:	f00f fc8c 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005288:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800528c:	f7fe bbde 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005290:	bd38      	pop	{r3, r4, r5, pc}
 8005292:	bf00      	nop
 8005294:	40021000 	.word	0x40021000

08005298 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800529c:	ed2d 8b06 	vpush	{d8-d10}
 80052a0:	4604      	mov	r4, r0
 80052a2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80052a4:	46a3      	mov	fp, r4
        : presenter(0)
 80052a6:	2500      	movs	r5, #0
 80052a8:	f011 f8fa 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 80052ac:	4b6a      	ldr	r3, [pc, #424]	; (8005458 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80052ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80052b0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80052b4:	2226      	movs	r2, #38	; 0x26
 80052b6:	4629      	mov	r1, r5
 80052b8:	4658      	mov	r0, fp
 80052ba:	f024 fd00 	bl	8029cbe <memset>
 80052be:	4658      	mov	r0, fp
 80052c0:	f7fd f9ee 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80052c4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80052c8:	26ff      	movs	r6, #255	; 0xff
 80052ca:	4b64      	ldr	r3, [pc, #400]	; (800545c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80052cc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80052ce:	2226      	movs	r2, #38	; 0x26
 80052d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80052d4:	4629      	mov	r1, r5
 80052d6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80052da:	4650      	mov	r0, sl
        : color(col)
 80052dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80052de:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80052e2:	f024 fcec 	bl	8029cbe <memset>
 80052e6:	4650      	mov	r0, sl
 80052e8:	f7fd f9da 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80052ec:	4b5c      	ldr	r3, [pc, #368]	; (8005460 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80052ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80052f0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80052f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80052f8:	a90c      	add	r1, sp, #48	; 0x30
 80052fa:	4650      	mov	r0, sl
 80052fc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005300:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005304:	f00c ff43 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005308:	4648      	mov	r0, r9
 800530a:	f7fd f9db 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800530e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005312:	4b54      	ldr	r3, [pc, #336]	; (8005464 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005314:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005318:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800531c:	4638      	mov	r0, r7
 800531e:	f00b fdff 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8005322:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005326:	4618      	mov	r0, r3
 8005328:	9303      	str	r3, [sp, #12]
 800532a:	f7fb fe8b 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800532e:	4b4e      	ldr	r3, [pc, #312]	; (8005468 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005330:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005334:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005338:	3324      	adds	r3, #36	; 0x24
 800533a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800533e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005342:	4640      	mov	r0, r8
 8005344:	f7fd f9be 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005348:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800534c:	4618      	mov	r0, r3
 800534e:	ee08 3a10 	vmov	s16, r3
 8005352:	f7fd f9b7 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005356:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800535a:	4618      	mov	r0, r3
 800535c:	ee08 3a90 	vmov	s17, r3
 8005360:	f7fd f9b0 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005364:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005368:	4618      	mov	r0, r3
 800536a:	ee09 3a10 	vmov	s18, r3
 800536e:	f00d f84f 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005372:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005376:	4618      	mov	r0, r3
 8005378:	ee09 3a90 	vmov	s19, r3
 800537c:	f00d f848 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005380:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005384:	4618      	mov	r0, r3
 8005386:	ee0a 3a10 	vmov	s20, r3
 800538a:	f00d f841 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800538e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005392:	4618      	mov	r0, r3
 8005394:	ee0a 3a90 	vmov	s21, r3
 8005398:	f00c fed2 	bl	8012140 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800539c:	4a33      	ldr	r2, [pc, #204]	; (800546c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800539e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80053a2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80053a6:	4a32      	ldr	r2, [pc, #200]	; (8005470 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80053a8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80053ac:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80053b0:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80053b4:	f00d fee8 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80053b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80053bc:	462a      	mov	r2, r5
 80053be:	4658      	mov	r0, fp
 80053c0:	9300      	str	r3, [sp, #0]
 80053c2:	4629      	mov	r1, r5
 80053c4:	23f0      	movs	r3, #240	; 0xf0
 80053c6:	f7fd f957 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80053ca:	1d26      	adds	r6, r4, #4
        color = newColor;
 80053cc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80053d0:	66a3      	str	r3, [r4, #104]	; 0x68
 80053d2:	4659      	mov	r1, fp
 80053d4:	4630      	mov	r0, r6
 80053d6:	f00a f94b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80053da:	462a      	mov	r2, r5
 80053dc:	4650      	mov	r0, sl
 80053de:	4629      	mov	r1, r5
 80053e0:	f7fd f93d 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80053e4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80053e6:	4650      	mov	r0, sl
 80053e8:	a90c      	add	r1, sp, #48	; 0x30
 80053ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80053ee:	f00c fece 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80053f2:	4651      	mov	r1, sl
 80053f4:	4630      	mov	r0, r6
 80053f6:	f00a f93b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80053fa:	f44f 729a 	mov.w	r2, #308	; 0x134
 80053fe:	2156      	movs	r1, #86	; 0x56
 8005400:	4648      	mov	r0, r9
 8005402:	f7fd f92c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005406:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800540a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800540e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005412:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005416:	4650      	mov	r0, sl
 8005418:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800541c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005420:	4649      	mov	r1, r9
 8005422:	4798      	blx	r3
 8005424:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005428:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800542c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005430:	4b10      	ldr	r3, [pc, #64]	; (8005474 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005432:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005434:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005438:	b92b      	cbnz	r3, 8005446 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800543a:	4b0f      	ldr	r3, [pc, #60]	; (8005478 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800543c:	4a0f      	ldr	r2, [pc, #60]	; (800547c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800543e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005440:	480f      	ldr	r0, [pc, #60]	; (8005480 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005442:	f024 fa37 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005446:	4b0f      	ldr	r3, [pc, #60]	; (8005484 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005448:	881b      	ldrh	r3, [r3, #0]
 800544a:	2b2a      	cmp	r3, #42	; 0x2a
 800544c:	d81e      	bhi.n	800548c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800544e:	4b0e      	ldr	r3, [pc, #56]	; (8005488 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005450:	4a0a      	ldr	r2, [pc, #40]	; (800547c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005452:	2161      	movs	r1, #97	; 0x61
 8005454:	e7f4      	b.n	8005440 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005456:	bf00      	nop
 8005458:	0802ce18 	.word	0x0802ce18
 800545c:	0802ddd0 	.word	0x0802ddd0
 8005460:	0802df98 	.word	0x0802df98
 8005464:	0802b468 	.word	0x0802b468
 8005468:	0802db04 	.word	0x0802db04
 800546c:	0802ce00 	.word	0x0802ce00
 8005470:	0800523d 	.word	0x0800523d
 8005474:	20012dfc 	.word	0x20012dfc
 8005478:	0802b2a8 	.word	0x0802b2a8
 800547c:	0802b3aa 	.word	0x0802b3aa
 8005480:	0802b325 	.word	0x0802b325
 8005484:	20012e00 	.word	0x20012e00
 8005488:	0802b36c 	.word	0x0802b36c
        return texts->getText(typedTextId);
 800548c:	4ba5      	ldr	r3, [pc, #660]	; (8005724 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800548e:	212a      	movs	r1, #42	; 0x2a
 8005490:	6818      	ldr	r0, [r3, #0]
 8005492:	f002 fdf9 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8005496:	4aa4      	ldr	r2, [pc, #656]	; (8005728 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005498:	4603      	mov	r3, r0
 800549a:	2104      	movs	r1, #4
 800549c:	4650      	mov	r0, sl
 800549e:	f012 fcef 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80054a2:	4648      	mov	r0, r9
        wc1 = value;
 80054a4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80054a8:	f00c fa76 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80054ac:	4b9f      	ldr	r3, [pc, #636]	; (800572c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80054ae:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80054b0:	a90c      	add	r1, sp, #48	; 0x30
 80054b2:	232b      	movs	r3, #43	; 0x2b
 80054b4:	4648      	mov	r0, r9
 80054b6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80054ba:	f00c fa8d 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054be:	4649      	mov	r1, r9
 80054c0:	4630      	mov	r0, r6
 80054c2:	f00a f8d5 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80054c6:	230a      	movs	r3, #10
 80054c8:	9300      	str	r3, [sp, #0]
 80054ca:	2232      	movs	r2, #50	; 0x32
 80054cc:	23f0      	movs	r3, #240	; 0xf0
 80054ce:	4629      	mov	r1, r5
 80054d0:	4638      	mov	r0, r7
 80054d2:	f7fd f8d1 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80054d6:	9b03      	ldr	r3, [sp, #12]
 80054d8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80054dc:	22a0      	movs	r2, #160	; 0xa0
 80054de:	4611      	mov	r1, r2
 80054e0:	4638      	mov	r0, r7
 80054e2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80054e6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80054ea:	f00b fe2f 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80054ee:	22a0      	movs	r2, #160	; 0xa0
 80054f0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80054f4:	4638      	mov	r0, r7
 80054f6:	f00b fe34 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80054fa:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80054fe:	2b20      	cmp	r3, #32
 8005500:	d005      	beq.n	800550e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005502:	2320      	movs	r3, #32
 8005504:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005508:	4638      	mov	r0, r7
 800550a:	f00b fd29 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800550e:	4638      	mov	r0, r7
 8005510:	2101      	movs	r1, #1
 8005512:	f00b fe31 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005516:	4639      	mov	r1, r7
 8005518:	4630      	mov	r0, r6
 800551a:	ad04      	add	r5, sp, #16
        color = newColor;
 800551c:	f04f 37ff 	mov.w	r7, #4294967295
 8005520:	f00a f8a6 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005524:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005528:	2223      	movs	r2, #35	; 0x23
 800552a:	4640      	mov	r0, r8
 800552c:	2145      	movs	r1, #69	; 0x45
 800552e:	f7fd f896 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005532:	4641      	mov	r1, r8
 8005534:	4628      	mov	r0, r5
        color = newColor;
 8005536:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800553a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800553e:	f00b ffb1 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005542:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005546:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800554a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800554e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005552:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800572c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005556:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800555a:	2350      	movs	r3, #80	; 0x50
 800555c:	4649      	mov	r1, r9
 800555e:	4640      	mov	r0, r8
 8005560:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005564:	f00c fa38 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005568:	4641      	mov	r1, r8
 800556a:	4630      	mov	r0, r6
 800556c:	f00a f880 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005570:	ee18 0a10 	vmov	r0, s16
 8005574:	220c      	movs	r2, #12
 8005576:	2136      	movs	r1, #54	; 0x36
 8005578:	f7fd f871 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800557c:	ee18 1a10 	vmov	r1, s16
 8005580:	4628      	mov	r0, r5
        color = newColor;
 8005582:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005586:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800558a:	f00b ff8b 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800558e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005592:	ee18 3a10 	vmov	r3, s16
 8005596:	333c      	adds	r3, #60	; 0x3c
 8005598:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800559c:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800559e:	ee18 0a10 	vmov	r0, s16
 80055a2:	4649      	mov	r1, r9
 80055a4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80055a8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80055ac:	f00c fa14 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055b0:	ee18 1a10 	vmov	r1, s16
 80055b4:	4630      	mov	r0, r6
 80055b6:	f00a f85b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80055ba:	ee18 0a90 	vmov	r0, s17
 80055be:	223c      	movs	r2, #60	; 0x3c
 80055c0:	2158      	movs	r1, #88	; 0x58
 80055c2:	f7fd f84c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80055c6:	ee18 1a90 	vmov	r1, s17
 80055ca:	4628      	mov	r0, r5
        color = newColor;
 80055cc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80055d0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80055d4:	f00b ff66 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80055d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80055dc:	ee18 3a90 	vmov	r3, s17
 80055e0:	333c      	adds	r3, #60	; 0x3c
 80055e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80055e6:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80055e8:	ee18 0a90 	vmov	r0, s17
 80055ec:	4649      	mov	r1, r9
 80055ee:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80055f2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80055f6:	f00c f9ef 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055fa:	ee18 1a90 	vmov	r1, s17
 80055fe:	4630      	mov	r0, r6
 8005600:	f00a f836 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005604:	ee19 0a10 	vmov	r0, s18
 8005608:	22f0      	movs	r2, #240	; 0xf0
 800560a:	2121      	movs	r1, #33	; 0x21
 800560c:	f7fd f827 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005610:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005614:	464a      	mov	r2, r9
 8005616:	f04f 0802 	mov.w	r8, #2
 800561a:	a90b      	add	r1, sp, #44	; 0x2c
 800561c:	ee19 0a10 	vmov	r0, s18
 8005620:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005624:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005628:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800562c:	f00c fbb9 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005630:	2352      	movs	r3, #82	; 0x52
 8005632:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005636:	350c      	adds	r5, #12
        updateTextPosition();
 8005638:	ee19 0a10 	vmov	r0, s18
 800563c:	f7fd f864 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005640:	ee19 1a10 	vmov	r1, s18
 8005644:	4630      	mov	r0, r6
        colorPressed = col;
 8005646:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800564a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800564e:	f00a f80f 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005652:	ee19 0a90 	vmov	r0, s19
 8005656:	22aa      	movs	r2, #170	; 0xaa
 8005658:	2121      	movs	r1, #33	; 0x21
 800565a:	f7fd f800 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800565e:	464a      	mov	r2, r9
 8005660:	a90b      	add	r1, sp, #44	; 0x2c
 8005662:	ee19 0a90 	vmov	r0, s19
 8005666:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800566a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800566e:	f00c fb98 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005672:	2353      	movs	r3, #83	; 0x53
 8005674:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005678:	ee19 0a90 	vmov	r0, s19
 800567c:	f7fd f844 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005680:	ee19 1a90 	vmov	r1, s19
 8005684:	4630      	mov	r0, r6
        colorPressed = col;
 8005686:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800568a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800568e:	f009 ffef 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005692:	ee1a 0a10 	vmov	r0, s20
 8005696:	2264      	movs	r2, #100	; 0x64
 8005698:	2121      	movs	r1, #33	; 0x21
 800569a:	f7fc ffe0 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800569e:	464a      	mov	r2, r9
 80056a0:	a90b      	add	r1, sp, #44	; 0x2c
 80056a2:	ee1a 0a10 	vmov	r0, s20
 80056a6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80056aa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80056ae:	f00c fb78 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80056b2:	2354      	movs	r3, #84	; 0x54
 80056b4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80056b8:	ee1a 0a10 	vmov	r0, s20
 80056bc:	f7fd f824 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80056c0:	ee1a 1a10 	vmov	r1, s20
 80056c4:	4630      	mov	r0, r6
        colorPressed = col;
 80056c6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80056ca:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80056ce:	f009 ffcf 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80056d2:	ee1a 0a90 	vmov	r0, s21
 80056d6:	2205      	movs	r2, #5
 80056d8:	21c6      	movs	r1, #198	; 0xc6
 80056da:	f7fc ffc0 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80056de:	2301      	movs	r3, #1
 80056e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80056e4:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80056e6:	ee1a 0a90 	vmov	r0, s21
 80056ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80056ee:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80056f2:	aa0a      	add	r2, sp, #40	; 0x28
 80056f4:	ab0b      	add	r3, sp, #44	; 0x2c
 80056f6:	a909      	add	r1, sp, #36	; 0x24
 80056f8:	f8cd 9000 	str.w	r9, [sp]
 80056fc:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005700:	f00c fc89 	bl	8012016 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005704:	4630      	mov	r0, r6
 8005706:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800570a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800570e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005712:	f009 ffad 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005716:	4620      	mov	r0, r4
 8005718:	b00f      	add	sp, #60	; 0x3c
 800571a:	ecbd 8b06 	vpop	{d8-d10}
 800571e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005722:	bf00      	nop
 8005724:	20012e08 	.word	0x20012e08
 8005728:	0802b3e2 	.word	0x0802b3e2
 800572c:	0802b458 	.word	0x0802b458

08005730 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005730:	4770      	bx	lr

08005732 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005732:	4770      	bx	lr

08005734 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005734:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005736:	68c2      	ldr	r2, [r0, #12]
 8005738:	6844      	ldr	r4, [r0, #4]
 800573a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800573c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800573e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005742:	07d2      	lsls	r2, r2, #31
 8005744:	bf48      	it	mi
 8005746:	5962      	ldrmi	r2, [r4, r5]
 8005748:	689b      	ldr	r3, [r3, #8]
    }
 800574a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800574c:	bf48      	it	mi
 800574e:	58d3      	ldrmi	r3, [r2, r3]
 8005750:	4718      	bx	r3

08005752 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005752:	6843      	ldr	r3, [r0, #4]
 8005754:	b12b      	cbz	r3, 8005762 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005756:	6883      	ldr	r3, [r0, #8]
 8005758:	b92b      	cbnz	r3, 8005766 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800575a:	68c0      	ldr	r0, [r0, #12]
 800575c:	f000 0001 	and.w	r0, r0, #1
 8005760:	4770      	bx	lr
 8005762:	4618      	mov	r0, r3
 8005764:	4770      	bx	lr
 8005766:	2001      	movs	r0, #1
    }
 8005768:	4770      	bx	lr

0800576a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800576a:	b510      	push	{r4, lr}
 800576c:	2110      	movs	r1, #16
 800576e:	4604      	mov	r4, r0
 8005770:	f023 fa8d 	bl	8028c8e <_ZdlPvj>
 8005774:	4620      	mov	r0, r4
 8005776:	bd10      	pop	{r4, pc}

08005778 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005778:	b510      	push	{r4, lr}
 800577a:	4b03      	ldr	r3, [pc, #12]	; (8005788 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 800577c:	6003      	str	r3, [r0, #0]
 800577e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005780:	f00d fd0c 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005784:	4620      	mov	r0, r4
 8005786:	bd10      	pop	{r4, pc}
 8005788:	0802ce64 	.word	0x0802ce64

0800578c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800578c:	b507      	push	{r0, r1, r2, lr}
 800578e:	4b07      	ldr	r3, [pc, #28]	; (80057ac <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005790:	6003      	str	r3, [r0, #0]
 8005792:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005794:	f00d fd02 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005798:	9801      	ldr	r0, [sp, #4]
 800579a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800579e:	f023 fa76 	bl	8028c8e <_ZdlPvj>
 80057a2:	9801      	ldr	r0, [sp, #4]
 80057a4:	b003      	add	sp, #12
 80057a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80057aa:	bf00      	nop
 80057ac:	0802ce64 	.word	0x0802ce64

080057b0 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80057b0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80057b2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80057b6:	4299      	cmp	r1, r3
{
 80057b8:	4604      	mov	r4, r0
 80057ba:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80057bc:	d103      	bne.n	80057c6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80057be:	f00f f9ef 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80057c2:	f7fe f843 	bl	800384c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80057c6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80057ca:	429d      	cmp	r5, r3
 80057cc:	d103      	bne.n	80057d6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80057ce:	f00f f9e7 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80057d2:	f7fe f86b 	bl	80038ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80057d6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80057da:	42a5      	cmp	r5, r4
 80057dc:	d105      	bne.n	80057ea <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80057de:	f00f f9df 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80057e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80057e6:	f7fe b8a1 	b.w	800392c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80057ea:	bd38      	pop	{r3, r4, r5, pc}

080057ec <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80057ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057f0:	ed2d 8b06 	vpush	{d8-d10}
 80057f4:	4604      	mov	r4, r0
 80057f6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80057f8:	46a3      	mov	fp, r4
 80057fa:	2500      	movs	r5, #0
 80057fc:	f010 fe50 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8005800:	4b66      	ldr	r3, [pc, #408]	; (800599c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005802:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005804:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005808:	2226      	movs	r2, #38	; 0x26
 800580a:	4629      	mov	r1, r5
 800580c:	4658      	mov	r0, fp
 800580e:	f024 fa56 	bl	8029cbe <memset>
 8005812:	4658      	mov	r0, fp
 8005814:	f7fc ff44 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005818:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800581c:	26ff      	movs	r6, #255	; 0xff
 800581e:	4b60      	ldr	r3, [pc, #384]	; (80059a0 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005820:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005822:	2226      	movs	r2, #38	; 0x26
 8005824:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005828:	4629      	mov	r1, r5
 800582a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800582e:	4650      	mov	r0, sl
 8005830:	66a5      	str	r5, [r4, #104]	; 0x68
 8005832:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005836:	f024 fa42 	bl	8029cbe <memset>
 800583a:	4650      	mov	r0, sl
 800583c:	f7fc ff30 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005840:	4b58      	ldr	r3, [pc, #352]	; (80059a4 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005842:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005844:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005848:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800584c:	a90a      	add	r1, sp, #40	; 0x28
 800584e:	4650      	mov	r0, sl
 8005850:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005854:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005858:	f00c fc99 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800585c:	4648      	mov	r0, r9
 800585e:	f7fc ff31 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005862:	4b51      	ldr	r3, [pc, #324]	; (80059a8 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005864:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005868:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800586c:	4618      	mov	r0, r3
 800586e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005872:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005876:	ee08 3a90 	vmov	s17, r3
 800587a:	f7fc ff23 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800587e:	4638      	mov	r0, r7
 8005880:	f00b fb4e 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8005884:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005888:	4618      	mov	r0, r3
 800588a:	9303      	str	r3, [sp, #12]
 800588c:	f7fb fbda 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005890:	4b46      	ldr	r3, [pc, #280]	; (80059ac <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005892:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005896:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800589a:	3324      	adds	r3, #36	; 0x24
 800589c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80058a0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80058a4:	4640      	mov	r0, r8
 80058a6:	f7fc ff0d 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80058aa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80058ae:	4618      	mov	r0, r3
 80058b0:	ee08 3a10 	vmov	s16, r3
 80058b4:	f7fc ff06 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80058b8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80058bc:	4618      	mov	r0, r3
 80058be:	ee09 3a10 	vmov	s18, r3
 80058c2:	f00c fda5 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80058c6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80058ca:	4618      	mov	r0, r3
 80058cc:	ee09 3a90 	vmov	s19, r3
 80058d0:	f00c fd9e 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80058d4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80058d8:	4618      	mov	r0, r3
 80058da:	ee0a 3a10 	vmov	s20, r3
 80058de:	f00c fd97 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80058e2:	4a33      	ldr	r2, [pc, #204]	; (80059b0 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80058e4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80058e8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80058ec:	4a31      	ldr	r2, [pc, #196]	; (80059b4 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80058ee:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80058f2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80058f6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80058fa:	f00d fc45 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80058fe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005902:	462a      	mov	r2, r5
 8005904:	4658      	mov	r0, fp
 8005906:	9300      	str	r3, [sp, #0]
 8005908:	4629      	mov	r1, r5
 800590a:	23f0      	movs	r3, #240	; 0xf0
 800590c:	f7fc feb4 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005910:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005912:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005916:	66a3      	str	r3, [r4, #104]	; 0x68
 8005918:	4659      	mov	r1, fp
 800591a:	4630      	mov	r0, r6
 800591c:	f009 fea8 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005920:	462a      	mov	r2, r5
 8005922:	4650      	mov	r0, sl
 8005924:	4629      	mov	r1, r5
 8005926:	f7fc fe9a 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800592a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800592c:	4650      	mov	r0, sl
 800592e:	a90a      	add	r1, sp, #40	; 0x28
 8005930:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005934:	f00c fc2b 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005938:	4651      	mov	r1, sl
 800593a:	4630      	mov	r0, r6
 800593c:	f009 fe98 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005940:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005944:	2156      	movs	r1, #86	; 0x56
 8005946:	4648      	mov	r0, r9
 8005948:	f7fc fe89 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800594c:	f04f 33ff 	mov.w	r3, #4294967295
 8005950:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005954:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005958:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800595c:	f10d 0b10 	add.w	fp, sp, #16
 8005960:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005964:	4649      	mov	r1, r9
 8005966:	4658      	mov	r0, fp
 8005968:	4798      	blx	r3
 800596a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800596e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005972:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005976:	4b10      	ldr	r3, [pc, #64]	; (80059b8 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005978:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800597a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800597e:	b92b      	cbnz	r3, 800598c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005980:	4b0e      	ldr	r3, [pc, #56]	; (80059bc <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005982:	4a0f      	ldr	r2, [pc, #60]	; (80059c0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005984:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005986:	480f      	ldr	r0, [pc, #60]	; (80059c4 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005988:	f023 ff94 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800598c:	4b0e      	ldr	r3, [pc, #56]	; (80059c8 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800598e:	881b      	ldrh	r3, [r3, #0]
 8005990:	2b1b      	cmp	r3, #27
 8005992:	d81d      	bhi.n	80059d0 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005994:	4b0d      	ldr	r3, [pc, #52]	; (80059cc <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005996:	4a0a      	ldr	r2, [pc, #40]	; (80059c0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005998:	2161      	movs	r1, #97	; 0x61
 800599a:	e7f4      	b.n	8005986 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 800599c:	0802ce64 	.word	0x0802ce64
 80059a0:	0802ddd0 	.word	0x0802ddd0
 80059a4:	0802df98 	.word	0x0802df98
 80059a8:	0802b468 	.word	0x0802b468
 80059ac:	0802db04 	.word	0x0802db04
 80059b0:	0802ce4c 	.word	0x0802ce4c
 80059b4:	080057b1 	.word	0x080057b1
 80059b8:	20012dfc 	.word	0x20012dfc
 80059bc:	0802b2a8 	.word	0x0802b2a8
 80059c0:	0802b3aa 	.word	0x0802b3aa
 80059c4:	0802b325 	.word	0x0802b325
 80059c8:	20012e00 	.word	0x20012e00
 80059cc:	0802b36c 	.word	0x0802b36c
        return texts->getText(typedTextId);
 80059d0:	4b95      	ldr	r3, [pc, #596]	; (8005c28 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80059d2:	211b      	movs	r1, #27
 80059d4:	6818      	ldr	r0, [r3, #0]
 80059d6:	f002 fb57 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 80059da:	4a94      	ldr	r2, [pc, #592]	; (8005c2c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80059dc:	4603      	mov	r3, r0
 80059de:	2104      	movs	r1, #4
 80059e0:	4650      	mov	r0, sl
 80059e2:	f012 fa4d 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80059e6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80059ea:	4648      	mov	r0, r9
 80059ec:	f00b ffd4 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80059f0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005c30 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80059f4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80059f8:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80059fa:	a90a      	add	r1, sp, #40	; 0x28
 80059fc:	4648      	mov	r0, r9
 80059fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a02:	f00b ffe9 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a06:	4649      	mov	r1, r9
 8005a08:	4630      	mov	r0, r6
 8005a0a:	f009 fe31 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005a0e:	223c      	movs	r2, #60	; 0x3c
 8005a10:	ee18 0a90 	vmov	r0, s17
 8005a14:	213d      	movs	r1, #61	; 0x3d
 8005a16:	f7fc fe22 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005a1a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005a1e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005a22:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005a26:	4658      	mov	r0, fp
        linespace = space;
 8005a28:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005a2c:	f00b fd3a 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a30:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005a34:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005a38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005a3c:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005a3e:	ee18 0a90 	vmov	r0, s17
 8005a42:	a90a      	add	r1, sp, #40	; 0x28
 8005a44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a48:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005a4c:	f00b ffc4 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a50:	ee18 1a90 	vmov	r1, s17
 8005a54:	4630      	mov	r0, r6
 8005a56:	f009 fe0b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005a5a:	230a      	movs	r3, #10
 8005a5c:	9300      	str	r3, [sp, #0]
 8005a5e:	2232      	movs	r2, #50	; 0x32
 8005a60:	23f0      	movs	r3, #240	; 0xf0
 8005a62:	4629      	mov	r1, r5
 8005a64:	4638      	mov	r0, r7
 8005a66:	f7fc fe07 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a6a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a6e:	22a0      	movs	r2, #160	; 0xa0
 8005a70:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005a74:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005a78:	9b03      	ldr	r3, [sp, #12]
 8005a7a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005a7e:	4611      	mov	r1, r2
 8005a80:	4638      	mov	r0, r7
 8005a82:	f00b fb63 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a86:	22a0      	movs	r2, #160	; 0xa0
 8005a88:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005a8c:	4638      	mov	r0, r7
 8005a8e:	f00b fb68 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005a92:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005a96:	2b20      	cmp	r3, #32
 8005a98:	d005      	beq.n	8005aa6 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005a9a:	2320      	movs	r3, #32
 8005a9c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005aa0:	4638      	mov	r0, r7
 8005aa2:	f00b fa5d 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005aa6:	4638      	mov	r0, r7
 8005aa8:	2101      	movs	r1, #1
 8005aaa:	f00b fb65 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005aae:	4639      	mov	r1, r7
 8005ab0:	4630      	mov	r0, r6
 8005ab2:	f009 fddd 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005ab6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005aba:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005abc:	2223      	movs	r2, #35	; 0x23
 8005abe:	4640      	mov	r0, r8
        linespace = space;
 8005ac0:	f04f 0a00 	mov.w	sl, #0
 8005ac4:	2145      	movs	r1, #69	; 0x45
 8005ac6:	f7fc fdca 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005aca:	4641      	mov	r1, r8
 8005acc:	4638      	mov	r0, r7
        color = newColor;
 8005ace:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005ad2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ad6:	f00b fce5 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ada:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005ade:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005ae2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ae6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005c30 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005aea:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005aee:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005af0:	a90a      	add	r1, sp, #40	; 0x28
 8005af2:	4640      	mov	r0, r8
 8005af4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005af8:	f00b ff6e 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005afc:	4641      	mov	r1, r8
 8005afe:	4630      	mov	r0, r6
 8005b00:	f009 fdb6 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005b04:	ee18 0a10 	vmov	r0, s16
 8005b08:	220c      	movs	r2, #12
 8005b0a:	2136      	movs	r1, #54	; 0x36
 8005b0c:	f7fc fda7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005b10:	ee18 1a10 	vmov	r1, s16
 8005b14:	4638      	mov	r0, r7
        color = newColor;
 8005b16:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005b1a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005b1e:	f00b fcc1 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b22:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005b26:	ee18 3a10 	vmov	r3, s16
 8005b2a:	333c      	adds	r3, #60	; 0x3c
 8005b2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b30:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005b32:	ee18 0a10 	vmov	r0, s16
 8005b36:	a90a      	add	r1, sp, #40	; 0x28
 8005b38:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b3c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005b40:	f00b ff4a 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b44:	ee18 1a10 	vmov	r1, s16
 8005b48:	4630      	mov	r0, r6
 8005b4a:	f009 fd91 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005b4e:	ee19 0a10 	vmov	r0, s18
 8005b52:	22f0      	movs	r2, #240	; 0xf0
 8005b54:	2121      	movs	r1, #33	; 0x21
 8005b56:	f7fc fd82 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005b5a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005b5e:	aa0a      	add	r2, sp, #40	; 0x28
 8005b60:	f04f 0802 	mov.w	r8, #2
 8005b64:	a909      	add	r1, sp, #36	; 0x24
 8005b66:	ee19 0a10 	vmov	r0, s18
 8005b6a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005b6e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005b72:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005b76:	f00c f914 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005b7a:	234d      	movs	r3, #77	; 0x4d
 8005b7c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005b80:	3710      	adds	r7, #16
        updateTextPosition();
 8005b82:	ee19 0a10 	vmov	r0, s18
 8005b86:	f7fc fdbf 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005b8a:	ee19 1a10 	vmov	r1, s18
 8005b8e:	4630      	mov	r0, r6
        colorPressed = col;
 8005b90:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005b94:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005b98:	f009 fd6a 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005b9c:	ee19 0a90 	vmov	r0, s19
 8005ba0:	22aa      	movs	r2, #170	; 0xaa
 8005ba2:	2121      	movs	r1, #33	; 0x21
 8005ba4:	f7fc fd5b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ba8:	aa0a      	add	r2, sp, #40	; 0x28
 8005baa:	a909      	add	r1, sp, #36	; 0x24
 8005bac:	ee19 0a90 	vmov	r0, s19
 8005bb0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005bb4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005bb8:	f00c f8f3 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005bbc:	234c      	movs	r3, #76	; 0x4c
 8005bbe:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005bc2:	ee19 0a90 	vmov	r0, s19
 8005bc6:	f7fc fd9f 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005bca:	ee19 1a90 	vmov	r1, s19
 8005bce:	4630      	mov	r0, r6
        colorPressed = col;
 8005bd0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005bd4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005bd8:	f009 fd4a 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005bdc:	ee1a 0a10 	vmov	r0, s20
 8005be0:	2264      	movs	r2, #100	; 0x64
 8005be2:	2121      	movs	r1, #33	; 0x21
 8005be4:	f7fc fd3b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005be8:	aa0a      	add	r2, sp, #40	; 0x28
 8005bea:	a909      	add	r1, sp, #36	; 0x24
 8005bec:	ee1a 0a10 	vmov	r0, s20
 8005bf0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005bf4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005bf8:	f00c f8d3 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005bfc:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005bfe:	ee1a 0a10 	vmov	r0, s20
 8005c02:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005c06:	f7fc fd7f 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c0a:	4630      	mov	r0, r6
        colorPressed = col;
 8005c0c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005c10:	ee1a 1a10 	vmov	r1, s20
 8005c14:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005c18:	f009 fd2a 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005c1c:	4620      	mov	r0, r4
 8005c1e:	b00d      	add	sp, #52	; 0x34
 8005c20:	ecbd 8b06 	vpop	{d8-d10}
 8005c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c28:	20012e08 	.word	0x20012e08
 8005c2c:	0802b3e2 	.word	0x0802b3e2
 8005c30:	0802b458 	.word	0x0802b458

08005c34 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005c34:	4770      	bx	lr

08005c36 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c36:	4770      	bx	lr

08005c38 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005c38:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c3a:	68c2      	ldr	r2, [r0, #12]
 8005c3c:	6844      	ldr	r4, [r0, #4]
 8005c3e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005c40:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005c42:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005c46:	07d2      	lsls	r2, r2, #31
 8005c48:	bf48      	it	mi
 8005c4a:	5962      	ldrmi	r2, [r4, r5]
 8005c4c:	689b      	ldr	r3, [r3, #8]
    }
 8005c4e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c50:	bf48      	it	mi
 8005c52:	58d3      	ldrmi	r3, [r2, r3]
 8005c54:	4718      	bx	r3

08005c56 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005c56:	6843      	ldr	r3, [r0, #4]
 8005c58:	b12b      	cbz	r3, 8005c66 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005c5a:	6883      	ldr	r3, [r0, #8]
 8005c5c:	b92b      	cbnz	r3, 8005c6a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005c5e:	68c0      	ldr	r0, [r0, #12]
 8005c60:	f000 0001 	and.w	r0, r0, #1
 8005c64:	4770      	bx	lr
 8005c66:	4618      	mov	r0, r3
 8005c68:	4770      	bx	lr
 8005c6a:	2001      	movs	r0, #1
    }
 8005c6c:	4770      	bx	lr

08005c6e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c6e:	b510      	push	{r4, lr}
 8005c70:	2110      	movs	r1, #16
 8005c72:	4604      	mov	r4, r0
 8005c74:	f023 f80b 	bl	8028c8e <_ZdlPvj>
 8005c78:	4620      	mov	r0, r4
 8005c7a:	bd10      	pop	{r4, pc}

08005c7c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005c7c:	b510      	push	{r4, lr}
 8005c7e:	4b03      	ldr	r3, [pc, #12]	; (8005c8c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005c80:	6003      	str	r3, [r0, #0]
 8005c82:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c84:	f00d fa8a 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c88:	4620      	mov	r0, r4
 8005c8a:	bd10      	pop	{r4, pc}
 8005c8c:	0802ceb0 	.word	0x0802ceb0

08005c90 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005c90:	b507      	push	{r0, r1, r2, lr}
 8005c92:	4b07      	ldr	r3, [pc, #28]	; (8005cb0 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005c94:	6003      	str	r3, [r0, #0]
 8005c96:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c98:	f00d fa80 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c9c:	9801      	ldr	r0, [sp, #4]
 8005c9e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005ca2:	f022 fff4 	bl	8028c8e <_ZdlPvj>
 8005ca6:	9801      	ldr	r0, [sp, #4]
 8005ca8:	b003      	add	sp, #12
 8005caa:	f85d fb04 	ldr.w	pc, [sp], #4
 8005cae:	bf00      	nop
 8005cb0:	0802ceb0 	.word	0x0802ceb0

08005cb4 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005cb4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005cb6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005cba:	4299      	cmp	r1, r3
{
 8005cbc:	4604      	mov	r4, r0
 8005cbe:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005cc0:	d103      	bne.n	8005cca <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005cc2:	f00e ff6d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005cc6:	f7fd fde1 	bl	800388c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005cca:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cce:	429d      	cmp	r5, r3
 8005cd0:	d103      	bne.n	8005cda <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005cd2:	f00e ff65 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005cd6:	f7fd fe59 	bl	800398c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005cda:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005cde:	42a5      	cmp	r5, r4
 8005ce0:	d105      	bne.n	8005cee <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005ce2:	f00e ff5d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005ce6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005cea:	f7fd be3f 	b.w	800396c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005cee:	bd38      	pop	{r3, r4, r5, pc}

08005cf0 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cf4:	ed2d 8b06 	vpush	{d8-d10}
 8005cf8:	4604      	mov	r4, r0
 8005cfa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005cfc:	46a3      	mov	fp, r4
 8005cfe:	2500      	movs	r5, #0
 8005d00:	f010 fbce 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8005d04:	4b66      	ldr	r3, [pc, #408]	; (8005ea0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005d06:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005d08:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005d0c:	2226      	movs	r2, #38	; 0x26
 8005d0e:	4629      	mov	r1, r5
 8005d10:	4658      	mov	r0, fp
 8005d12:	f023 ffd4 	bl	8029cbe <memset>
 8005d16:	4658      	mov	r0, fp
 8005d18:	f7fc fcc2 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005d1c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005d20:	26ff      	movs	r6, #255	; 0xff
 8005d22:	4b60      	ldr	r3, [pc, #384]	; (8005ea4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005d24:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005d26:	2226      	movs	r2, #38	; 0x26
 8005d28:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005d2c:	4629      	mov	r1, r5
 8005d2e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005d32:	4650      	mov	r0, sl
 8005d34:	66a5      	str	r5, [r4, #104]	; 0x68
 8005d36:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d3a:	f023 ffc0 	bl	8029cbe <memset>
 8005d3e:	4650      	mov	r0, sl
 8005d40:	f7fc fcae 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8005d44:	4b58      	ldr	r3, [pc, #352]	; (8005ea8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005d46:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005d48:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005d4c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005d50:	a90a      	add	r1, sp, #40	; 0x28
 8005d52:	4650      	mov	r0, sl
 8005d54:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005d58:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005d5c:	f00c fa17 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005d60:	4648      	mov	r0, r9
 8005d62:	f7fc fcaf 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005d66:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005d6a:	4b50      	ldr	r3, [pc, #320]	; (8005eac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005d6c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005d70:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005d74:	4638      	mov	r0, r7
 8005d76:	f00b f8d3 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8005d7a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d7e:	4618      	mov	r0, r3
 8005d80:	9303      	str	r3, [sp, #12]
 8005d82:	f7fb f95f 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d86:	4b4a      	ldr	r3, [pc, #296]	; (8005eb0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005d88:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005d8c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005d90:	3324      	adds	r3, #36	; 0x24
 8005d92:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005d96:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005d9a:	4640      	mov	r0, r8
 8005d9c:	f7fc fc92 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005da0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005da4:	4618      	mov	r0, r3
 8005da6:	ee08 3a10 	vmov	s16, r3
 8005daa:	f7fc fc8b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005dae:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005db2:	4618      	mov	r0, r3
 8005db4:	ee08 3a90 	vmov	s17, r3
 8005db8:	f7fc fc84 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005dbc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005dc0:	4618      	mov	r0, r3
 8005dc2:	ee09 3a10 	vmov	s18, r3
 8005dc6:	f00c fb23 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005dca:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005dce:	4618      	mov	r0, r3
 8005dd0:	ee09 3a90 	vmov	s19, r3
 8005dd4:	f00c fb1c 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005dd8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005ddc:	4618      	mov	r0, r3
 8005dde:	ee0a 3a10 	vmov	s20, r3
 8005de2:	f00c fb15 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005de6:	4a33      	ldr	r2, [pc, #204]	; (8005eb4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005de8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005dec:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005df0:	4a31      	ldr	r2, [pc, #196]	; (8005eb8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005df2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005df6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005dfa:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005dfe:	f00d f9c3 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005e02:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005e06:	462a      	mov	r2, r5
 8005e08:	4658      	mov	r0, fp
 8005e0a:	9300      	str	r3, [sp, #0]
 8005e0c:	4629      	mov	r1, r5
 8005e0e:	23f0      	movs	r3, #240	; 0xf0
 8005e10:	f7fc fc32 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e14:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005e16:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005e1a:	66a3      	str	r3, [r4, #104]	; 0x68
 8005e1c:	4659      	mov	r1, fp
 8005e1e:	4630      	mov	r0, r6
 8005e20:	f009 fc26 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005e24:	462a      	mov	r2, r5
 8005e26:	4650      	mov	r0, sl
 8005e28:	4629      	mov	r1, r5
 8005e2a:	f7fc fc18 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005e2e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005e30:	4650      	mov	r0, sl
 8005e32:	a90a      	add	r1, sp, #40	; 0x28
 8005e34:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e38:	f00c f9a9 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005e3c:	4651      	mov	r1, sl
 8005e3e:	4630      	mov	r0, r6
 8005e40:	f009 fc16 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005e44:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005e48:	2156      	movs	r1, #86	; 0x56
 8005e4a:	4648      	mov	r0, r9
 8005e4c:	f7fc fc07 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005e50:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005e54:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005e58:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005e5c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005e60:	4650      	mov	r0, sl
 8005e62:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005e66:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005e6a:	4649      	mov	r1, r9
 8005e6c:	4798      	blx	r3
 8005e6e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005e72:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005e76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e7a:	4b10      	ldr	r3, [pc, #64]	; (8005ebc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005e7c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005e7e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005e82:	b92b      	cbnz	r3, 8005e90 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005e84:	4b0e      	ldr	r3, [pc, #56]	; (8005ec0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005e86:	4a0f      	ldr	r2, [pc, #60]	; (8005ec4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005e88:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e8a:	480f      	ldr	r0, [pc, #60]	; (8005ec8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005e8c:	f023 fd12 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e90:	4b0e      	ldr	r3, [pc, #56]	; (8005ecc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e92:	881b      	ldrh	r3, [r3, #0]
 8005e94:	2b16      	cmp	r3, #22
 8005e96:	d81d      	bhi.n	8005ed4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005e98:	4b0d      	ldr	r3, [pc, #52]	; (8005ed0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005e9a:	4a0a      	ldr	r2, [pc, #40]	; (8005ec4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005e9c:	2161      	movs	r1, #97	; 0x61
 8005e9e:	e7f4      	b.n	8005e8a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005ea0:	0802ceb0 	.word	0x0802ceb0
 8005ea4:	0802ddd0 	.word	0x0802ddd0
 8005ea8:	0802df98 	.word	0x0802df98
 8005eac:	0802b468 	.word	0x0802b468
 8005eb0:	0802db04 	.word	0x0802db04
 8005eb4:	0802ce98 	.word	0x0802ce98
 8005eb8:	08005cb5 	.word	0x08005cb5
 8005ebc:	20012dfc 	.word	0x20012dfc
 8005ec0:	0802b2a8 	.word	0x0802b2a8
 8005ec4:	0802b3aa 	.word	0x0802b3aa
 8005ec8:	0802b325 	.word	0x0802b325
 8005ecc:	20012e00 	.word	0x20012e00
 8005ed0:	0802b36c 	.word	0x0802b36c
        return texts->getText(typedTextId);
 8005ed4:	4b93      	ldr	r3, [pc, #588]	; (8006124 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005ed6:	2116      	movs	r1, #22
 8005ed8:	6818      	ldr	r0, [r3, #0]
 8005eda:	f002 f8d5 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8005ede:	4a92      	ldr	r2, [pc, #584]	; (8006128 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005ee0:	4603      	mov	r3, r0
 8005ee2:	2104      	movs	r1, #4
 8005ee4:	4650      	mov	r0, sl
 8005ee6:	f011 ffcb 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005eea:	4648      	mov	r0, r9
        wc1 = value;
 8005eec:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005ef0:	f00b fd52 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005ef4:	4b8d      	ldr	r3, [pc, #564]	; (800612c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005ef6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005ef8:	a90a      	add	r1, sp, #40	; 0x28
 8005efa:	2317      	movs	r3, #23
 8005efc:	4648      	mov	r0, r9
 8005efe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005f02:	f00b fd69 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f06:	4649      	mov	r1, r9
 8005f08:	4630      	mov	r0, r6
 8005f0a:	f009 fbb1 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005f0e:	230a      	movs	r3, #10
 8005f10:	9300      	str	r3, [sp, #0]
 8005f12:	2232      	movs	r2, #50	; 0x32
 8005f14:	23f0      	movs	r3, #240	; 0xf0
 8005f16:	4629      	mov	r1, r5
 8005f18:	4638      	mov	r0, r7
 8005f1a:	f7fc fbad 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f1e:	9b03      	ldr	r3, [sp, #12]
 8005f20:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f24:	22a0      	movs	r2, #160	; 0xa0
 8005f26:	4611      	mov	r1, r2
 8005f28:	4638      	mov	r0, r7
 8005f2a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005f2e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005f32:	f00b f90b 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f36:	22a0      	movs	r2, #160	; 0xa0
 8005f38:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005f3c:	4638      	mov	r0, r7
 8005f3e:	f00b f910 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005f42:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005f46:	2b20      	cmp	r3, #32
 8005f48:	d005      	beq.n	8005f56 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005f4a:	2320      	movs	r3, #32
 8005f4c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005f50:	4638      	mov	r0, r7
 8005f52:	f00b f805 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005f56:	4638      	mov	r0, r7
 8005f58:	2101      	movs	r1, #1
 8005f5a:	f00b f90d 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005f5e:	4639      	mov	r1, r7
 8005f60:	4630      	mov	r0, r6
 8005f62:	ad04      	add	r5, sp, #16
        color = newColor;
 8005f64:	f04f 37ff 	mov.w	r7, #4294967295
 8005f68:	f009 fb82 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005f6c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005f70:	2223      	movs	r2, #35	; 0x23
 8005f72:	4640      	mov	r0, r8
 8005f74:	2145      	movs	r1, #69	; 0x45
 8005f76:	f7fc fb72 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005f7a:	4641      	mov	r1, r8
 8005f7c:	4628      	mov	r0, r5
        color = newColor;
 8005f7e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005f82:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005f86:	f00b fa8d 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f8e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005f92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f96:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8005f9a:	f8df 9190 	ldr.w	r9, [pc, #400]	; 800612c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005f9e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005fa2:	a90a      	add	r1, sp, #40	; 0x28
 8005fa4:	4640      	mov	r0, r8
 8005fa6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005faa:	f00b fd15 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fae:	4641      	mov	r1, r8
 8005fb0:	4630      	mov	r0, r6
 8005fb2:	f009 fb5d 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005fb6:	ee18 0a10 	vmov	r0, s16
 8005fba:	220c      	movs	r2, #12
 8005fbc:	2136      	movs	r1, #54	; 0x36
 8005fbe:	f7fc fb4e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8005fc2:	ee18 1a10 	vmov	r1, s16
 8005fc6:	4628      	mov	r0, r5
        color = newColor;
 8005fc8:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005fcc:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005fd0:	f00b fa68 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fd4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fd8:	ee18 3a10 	vmov	r3, s16
 8005fdc:	445b      	add	r3, fp
 8005fde:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fe2:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005fe4:	ee18 0a10 	vmov	r0, s16
 8005fe8:	a90a      	add	r1, sp, #40	; 0x28
 8005fea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005fee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005ff2:	f00b fcf1 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ff6:	ee18 1a10 	vmov	r1, s16
 8005ffa:	4630      	mov	r0, r6
 8005ffc:	f009 fb38 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006000:	465a      	mov	r2, fp
 8006002:	ee18 0a90 	vmov	r0, s17
 8006006:	2121      	movs	r1, #33	; 0x21
 8006008:	f7fc fb29 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800600c:	ee18 1a90 	vmov	r1, s17
 8006010:	4628      	mov	r0, r5
        color = newColor;
 8006012:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006016:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800601a:	f00b fa43 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800601e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006022:	ee18 3a90 	vmov	r3, s17
 8006026:	445b      	add	r3, fp
 8006028:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800602c:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800602e:	ee18 0a90 	vmov	r0, s17
 8006032:	a90a      	add	r1, sp, #40	; 0x28
 8006034:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006038:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800603c:	f00b fccc 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006040:	ee18 1a90 	vmov	r1, s17
 8006044:	4630      	mov	r0, r6
 8006046:	f009 fb13 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800604a:	ee19 0a10 	vmov	r0, s18
 800604e:	22f0      	movs	r2, #240	; 0xf0
 8006050:	2121      	movs	r1, #33	; 0x21
 8006052:	f7fc fb04 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006056:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800605a:	aa0a      	add	r2, sp, #40	; 0x28
 800605c:	f04f 0802 	mov.w	r8, #2
 8006060:	a909      	add	r1, sp, #36	; 0x24
 8006062:	ee19 0a10 	vmov	r0, s18
 8006066:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800606a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800606e:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006072:	f00b fe96 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006076:	233a      	movs	r3, #58	; 0x3a
 8006078:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800607c:	3510      	adds	r5, #16
        updateTextPosition();
 800607e:	ee19 0a10 	vmov	r0, s18
 8006082:	f7fc fb41 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006086:	ee19 1a10 	vmov	r1, s18
 800608a:	4630      	mov	r0, r6
        colorPressed = col;
 800608c:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006090:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006094:	f009 faec 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006098:	ee19 0a90 	vmov	r0, s19
 800609c:	22aa      	movs	r2, #170	; 0xaa
 800609e:	2121      	movs	r1, #33	; 0x21
 80060a0:	f7fc fadd 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060a4:	aa0a      	add	r2, sp, #40	; 0x28
 80060a6:	a909      	add	r1, sp, #36	; 0x24
 80060a8:	ee19 0a90 	vmov	r0, s19
 80060ac:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80060b0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80060b4:	f00b fe75 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060b8:	2339      	movs	r3, #57	; 0x39
 80060ba:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80060be:	ee19 0a90 	vmov	r0, s19
 80060c2:	f7fc fb21 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060c6:	ee19 1a90 	vmov	r1, s19
 80060ca:	4630      	mov	r0, r6
        colorPressed = col;
 80060cc:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80060d0:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80060d4:	f009 facc 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80060d8:	ee1a 0a10 	vmov	r0, s20
 80060dc:	2264      	movs	r2, #100	; 0x64
 80060de:	2121      	movs	r1, #33	; 0x21
 80060e0:	f7fc fabd 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060e4:	aa0a      	add	r2, sp, #40	; 0x28
 80060e6:	a909      	add	r1, sp, #36	; 0x24
 80060e8:	ee1a 0a10 	vmov	r0, s20
 80060ec:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80060f0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80060f4:	f00b fe55 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060f8:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 80060fa:	ee1a 0a10 	vmov	r0, s20
 80060fe:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006102:	f7fc fb01 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006106:	4630      	mov	r0, r6
        colorPressed = col;
 8006108:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800610c:	ee1a 1a10 	vmov	r1, s20
 8006110:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006114:	f009 faac 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006118:	4620      	mov	r0, r4
 800611a:	b00d      	add	sp, #52	; 0x34
 800611c:	ecbd 8b06 	vpop	{d8-d10}
 8006120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006124:	20012e08 	.word	0x20012e08
 8006128:	0802b3e2 	.word	0x0802b3e2
 800612c:	0802b458 	.word	0x0802b458

08006130 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006130:	4770      	bx	lr

08006132 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006132:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006134:	68c2      	ldr	r2, [r0, #12]
 8006136:	6844      	ldr	r4, [r0, #4]
 8006138:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800613a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800613c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006140:	07d2      	lsls	r2, r2, #31
 8006142:	bf48      	it	mi
 8006144:	5962      	ldrmi	r2, [r4, r5]
 8006146:	689b      	ldr	r3, [r3, #8]
    }
 8006148:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800614a:	bf48      	it	mi
 800614c:	58d3      	ldrmi	r3, [r2, r3]
 800614e:	4718      	bx	r3

08006150 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006150:	6843      	ldr	r3, [r0, #4]
 8006152:	b12b      	cbz	r3, 8006160 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006154:	6883      	ldr	r3, [r0, #8]
 8006156:	b92b      	cbnz	r3, 8006164 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006158:	68c0      	ldr	r0, [r0, #12]
 800615a:	f000 0001 	and.w	r0, r0, #1
 800615e:	4770      	bx	lr
 8006160:	4618      	mov	r0, r3
 8006162:	4770      	bx	lr
 8006164:	2001      	movs	r0, #1
    }
 8006166:	4770      	bx	lr

08006168 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006168:	b510      	push	{r4, lr}
 800616a:	2110      	movs	r1, #16
 800616c:	4604      	mov	r4, r0
 800616e:	f022 fd8e 	bl	8028c8e <_ZdlPvj>
 8006172:	4620      	mov	r0, r4
 8006174:	bd10      	pop	{r4, pc}

08006176 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006176:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800617a:	f002 b8cd 	b.w	8008318 <_ZN17Gauge_with_Values10initializeEv>

0800617e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800617e:	3098      	adds	r0, #152	; 0x98
 8006180:	4288      	cmp	r0, r1
{
 8006182:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006184:	d105      	bne.n	8006192 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006186:	f00e fd0b 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800618a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800618e:	f7fd bbdd 	b.w	800394c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006192:	bd08      	pop	{r3, pc}

08006194 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006194:	b510      	push	{r4, lr}
 8006196:	4b07      	ldr	r3, [pc, #28]	; (80061b4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8006198:	6003      	str	r3, [r0, #0]
 800619a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800619c:	f00c fffe 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80061a0:	4b05      	ldr	r3, [pc, #20]	; (80061b8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80061a2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80061a6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80061aa:	f7fe fe25 	bl	8004df8 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80061ae:	4620      	mov	r0, r4
 80061b0:	bd10      	pop	{r4, pc}
 80061b2:	bf00      	nop
 80061b4:	0802cefc 	.word	0x0802cefc
 80061b8:	0802d454 	.word	0x0802d454

080061bc <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80061bc:	b510      	push	{r4, lr}
 80061be:	4604      	mov	r4, r0
}
 80061c0:	f7ff ffe8 	bl	8006194 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80061c4:	4620      	mov	r0, r4
 80061c6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80061ca:	f022 fd60 	bl	8028c8e <_ZdlPvj>
 80061ce:	4620      	mov	r0, r4
 80061d0:	bd10      	pop	{r4, pc}
	...

080061d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80061d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061d8:	ed2d 8b04 	vpush	{d8-d9}
 80061dc:	4604      	mov	r4, r0
 80061de:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80061e0:	46a1      	mov	r9, r4
 80061e2:	2500      	movs	r5, #0
 80061e4:	f010 f95c 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 80061e8:	4bac      	ldr	r3, [pc, #688]	; (800649c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80061ea:	63e5      	str	r5, [r4, #60]	; 0x3c
 80061ec:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80061f0:	2226      	movs	r2, #38	; 0x26
 80061f2:	4629      	mov	r1, r5
 80061f4:	4648      	mov	r0, r9
 80061f6:	f023 fd62 	bl	8029cbe <memset>
 80061fa:	4648      	mov	r0, r9
 80061fc:	f7fc fa50 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006200:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006204:	26ff      	movs	r6, #255	; 0xff
 8006206:	4ba6      	ldr	r3, [pc, #664]	; (80064a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006208:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800620a:	2226      	movs	r2, #38	; 0x26
 800620c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006210:	4629      	mov	r1, r5
 8006212:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006216:	4640      	mov	r0, r8
 8006218:	66a5      	str	r5, [r4, #104]	; 0x68
 800621a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800621e:	f023 fd4e 	bl	8029cbe <memset>
 8006222:	4640      	mov	r0, r8
 8006224:	f7fc fa3c 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006228:	4b9e      	ldr	r3, [pc, #632]	; (80064a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800622a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800622c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006230:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006234:	a90a      	add	r1, sp, #40	; 0x28
 8006236:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006238:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800623c:	f00b ffa7 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006240:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006244:	4618      	mov	r0, r3
 8006246:	ee08 3a10 	vmov	s16, r3
 800624a:	f00c f8e1 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800624e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006252:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006256:	4618      	mov	r0, r3
 8006258:	ee08 3a90 	vmov	s17, r3
 800625c:	f7fc fa32 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006260:	4638      	mov	r0, r7
 8006262:	f00a fe5d 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8006266:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800626a:	4618      	mov	r0, r3
 800626c:	9303      	str	r3, [sp, #12]
 800626e:	f7fa fee9 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006272:	4b8d      	ldr	r3, [pc, #564]	; (80064a8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8006274:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006278:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800627c:	3324      	adds	r3, #36	; 0x24
 800627e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006282:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006286:	4658      	mov	r0, fp
 8006288:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800628c:	f7fc fa1a 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006290:	4650      	mov	r0, sl
 8006292:	f7fc fa17 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006296:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800629a:	4618      	mov	r0, r3
 800629c:	ee09 3a10 	vmov	s18, r3
 80062a0:	f002 f830 	bl	8008304 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80062a4:	4a81      	ldr	r2, [pc, #516]	; (80064ac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80062a6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80062aa:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80062ae:	4a80      	ldr	r2, [pc, #512]	; (80064b0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80062b0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80062b4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80062b8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80062bc:	f00c ff64 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80062c0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80062c4:	462a      	mov	r2, r5
 80062c6:	4648      	mov	r0, r9
 80062c8:	9300      	str	r3, [sp, #0]
 80062ca:	4629      	mov	r1, r5
 80062cc:	23f0      	movs	r3, #240	; 0xf0
 80062ce:	f7fc f9d3 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80062d2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80062d4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80062d8:	66a3      	str	r3, [r4, #104]	; 0x68
 80062da:	4649      	mov	r1, r9
 80062dc:	4630      	mov	r0, r6
 80062de:	f009 f9c7 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80062e2:	462a      	mov	r2, r5
 80062e4:	4640      	mov	r0, r8
 80062e6:	4629      	mov	r1, r5
 80062e8:	f7fc f9b9 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80062ec:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80062ee:	4640      	mov	r0, r8
 80062f0:	a90a      	add	r1, sp, #40	; 0x28
 80062f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80062f6:	f00b ff4a 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80062fa:	4641      	mov	r1, r8
 80062fc:	4630      	mov	r0, r6
 80062fe:	f009 f9b7 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006302:	ee18 0a10 	vmov	r0, s16
 8006306:	f240 1201 	movw	r2, #257	; 0x101
 800630a:	2121      	movs	r1, #33	; 0x21
 800630c:	f7fc f9a7 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006310:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006312:	aa0a      	add	r2, sp, #40	; 0x28
 8006314:	a909      	add	r1, sp, #36	; 0x24
 8006316:	ee18 0a10 	vmov	r0, s16
 800631a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800631e:	2302      	movs	r3, #2
 8006320:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006324:	f00b fd3d 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006328:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 800632a:	ee18 0a10 	vmov	r0, s16
 800632e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006332:	f7fc f9e9 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006336:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800633a:	3314      	adds	r3, #20
        color = col;
 800633c:	f04f 39ff 	mov.w	r9, #4294967295
 8006340:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006344:	ee18 1a10 	vmov	r1, s16
 8006348:	4630      	mov	r0, r6
        colorPressed = col;
 800634a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800634e:	f009 f98f 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006352:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006356:	223c      	movs	r2, #60	; 0x3c
 8006358:	ee18 0a90 	vmov	r0, s17
 800635c:	2117      	movs	r1, #23
 800635e:	f7fc f97e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006362:	ee18 1a90 	vmov	r1, s17
 8006366:	4640      	mov	r0, r8
        color = newColor;
 8006368:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800636c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006370:	f00b f898 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006374:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006378:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800637c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006380:	4b4c      	ldr	r3, [pc, #304]	; (80064b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006382:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006384:	ee18 0a90 	vmov	r0, s17
 8006388:	2322      	movs	r3, #34	; 0x22
 800638a:	a90a      	add	r1, sp, #40	; 0x28
 800638c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006390:	f00b fb22 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006394:	ee18 1a90 	vmov	r1, s17
 8006398:	4630      	mov	r0, r6
 800639a:	f009 f969 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800639e:	230a      	movs	r3, #10
 80063a0:	9300      	str	r3, [sp, #0]
 80063a2:	2232      	movs	r2, #50	; 0x32
 80063a4:	23f0      	movs	r3, #240	; 0xf0
 80063a6:	4629      	mov	r1, r5
 80063a8:	4638      	mov	r0, r7
 80063aa:	f7fc f965 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063ae:	9b03      	ldr	r3, [sp, #12]
 80063b0:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063b4:	22a0      	movs	r2, #160	; 0xa0
 80063b6:	4611      	mov	r1, r2
 80063b8:	4638      	mov	r0, r7
 80063ba:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80063be:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80063c2:	f00a fec3 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063c6:	22a0      	movs	r2, #160	; 0xa0
 80063c8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80063cc:	4638      	mov	r0, r7
 80063ce:	f00a fec8 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80063d2:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80063d6:	2b20      	cmp	r3, #32
 80063d8:	d005      	beq.n	80063e6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80063da:	2320      	movs	r3, #32
 80063dc:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80063e0:	4638      	mov	r0, r7
 80063e2:	f00a fdbd 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80063e6:	4638      	mov	r0, r7
 80063e8:	2101      	movs	r1, #1
 80063ea:	f00a fec5 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80063ee:	4639      	mov	r1, r7
 80063f0:	4630      	mov	r0, r6
 80063f2:	f009 f93d 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80063f6:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80063f8:	2223      	movs	r2, #35	; 0x23
 80063fa:	4658      	mov	r0, fp
        color = newColor;
 80063fc:	f04f 39ff 	mov.w	r9, #4294967295
 8006400:	2145      	movs	r1, #69	; 0x45
 8006402:	f7fc f92c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006406:	4659      	mov	r1, fp
 8006408:	4640      	mov	r0, r8
        color = newColor;
 800640a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800640e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006412:	f00b f847 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006416:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800641a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800641e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006422:	4f24      	ldr	r7, [pc, #144]	; (80064b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006424:	970a      	str	r7, [sp, #40]	; 0x28
 8006426:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006428:	a90a      	add	r1, sp, #40	; 0x28
 800642a:	4658      	mov	r0, fp
 800642c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006430:	f00b fad2 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006434:	4659      	mov	r1, fp
 8006436:	4630      	mov	r0, r6
 8006438:	f009 f91a 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800643c:	220c      	movs	r2, #12
 800643e:	4650      	mov	r0, sl
 8006440:	2136      	movs	r1, #54	; 0x36
 8006442:	f7fc f90c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006446:	4651      	mov	r1, sl
 8006448:	4640      	mov	r0, r8
        color = newColor;
 800644a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800644e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006452:	f00b f827 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006456:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800645a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800645e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006462:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006464:	a90a      	add	r1, sp, #40	; 0x28
 8006466:	4650      	mov	r0, sl
 8006468:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800646c:	970a      	str	r7, [sp, #40]	; 0x28
 800646e:	f00b fab3 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006472:	4651      	mov	r1, sl
 8006474:	4630      	mov	r0, r6
 8006476:	f009 f8fb 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800647a:	ee19 0a10 	vmov	r0, s18
 800647e:	224e      	movs	r2, #78	; 0x4e
 8006480:	4629      	mov	r1, r5
 8006482:	f7fc f8ec 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006486:	4630      	mov	r0, r6
 8006488:	ee19 1a10 	vmov	r1, s18
 800648c:	f009 f8f0 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006490:	4620      	mov	r0, r4
 8006492:	b00d      	add	sp, #52	; 0x34
 8006494:	ecbd 8b04 	vpop	{d8-d9}
 8006498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800649c:	0802cefc 	.word	0x0802cefc
 80064a0:	0802ddd0 	.word	0x0802ddd0
 80064a4:	0802df98 	.word	0x0802df98
 80064a8:	0802db04 	.word	0x0802db04
 80064ac:	0802cee4 	.word	0x0802cee4
 80064b0:	0800617f 	.word	0x0800617f
 80064b4:	0802b458 	.word	0x0802b458

080064b8 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064b8:	4770      	bx	lr

080064ba <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80064ba:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80064bc:	68c2      	ldr	r2, [r0, #12]
 80064be:	6844      	ldr	r4, [r0, #4]
 80064c0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80064c2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80064c4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80064c8:	07d2      	lsls	r2, r2, #31
 80064ca:	bf48      	it	mi
 80064cc:	5962      	ldrmi	r2, [r4, r5]
 80064ce:	689b      	ldr	r3, [r3, #8]
    }
 80064d0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80064d2:	bf48      	it	mi
 80064d4:	58d3      	ldrmi	r3, [r2, r3]
 80064d6:	4718      	bx	r3

080064d8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80064d8:	6843      	ldr	r3, [r0, #4]
 80064da:	b12b      	cbz	r3, 80064e8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80064dc:	6883      	ldr	r3, [r0, #8]
 80064de:	b92b      	cbnz	r3, 80064ec <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80064e0:	68c0      	ldr	r0, [r0, #12]
 80064e2:	f000 0001 	and.w	r0, r0, #1
 80064e6:	4770      	bx	lr
 80064e8:	4618      	mov	r0, r3
 80064ea:	4770      	bx	lr
 80064ec:	2001      	movs	r0, #1
    }
 80064ee:	4770      	bx	lr

080064f0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064f0:	b510      	push	{r4, lr}
 80064f2:	2110      	movs	r1, #16
 80064f4:	4604      	mov	r4, r0
 80064f6:	f022 fbca 	bl	8028c8e <_ZdlPvj>
 80064fa:	4620      	mov	r0, r4
 80064fc:	bd10      	pop	{r4, pc}

080064fe <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80064fe:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006502:	f001 bf09 	b.w	8008318 <_ZN17Gauge_with_Values10initializeEv>

08006506 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006506:	3098      	adds	r0, #152	; 0x98
 8006508:	4288      	cmp	r0, r1
{
 800650a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800650c:	d105      	bne.n	800651a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800650e:	f00e fb47 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006512:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006516:	f7fd ba19 	b.w	800394c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800651a:	bd08      	pop	{r3, pc}

0800651c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800651c:	b510      	push	{r4, lr}
 800651e:	4b07      	ldr	r3, [pc, #28]	; (800653c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006520:	6003      	str	r3, [r0, #0]
 8006522:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006524:	f00c fe3a 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006528:	4b05      	ldr	r3, [pc, #20]	; (8006540 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800652a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800652e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006532:	f7fe fc61 	bl	8004df8 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006536:	4620      	mov	r0, r4
 8006538:	bd10      	pop	{r4, pc}
 800653a:	bf00      	nop
 800653c:	0802cf48 	.word	0x0802cf48
 8006540:	0802d454 	.word	0x0802d454

08006544 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006544:	b510      	push	{r4, lr}
 8006546:	4604      	mov	r4, r0
}
 8006548:	f7ff ffe8 	bl	800651c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800654c:	4620      	mov	r0, r4
 800654e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006552:	f022 fb9c 	bl	8028c8e <_ZdlPvj>
 8006556:	4620      	mov	r0, r4
 8006558:	bd10      	pop	{r4, pc}
	...

0800655c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800655c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006560:	ed2d 8b04 	vpush	{d8-d9}
 8006564:	4604      	mov	r4, r0
 8006566:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006568:	46a1      	mov	r9, r4
 800656a:	2500      	movs	r5, #0
 800656c:	f00f ff98 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8006570:	4bac      	ldr	r3, [pc, #688]	; (8006824 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8006572:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006574:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006578:	2226      	movs	r2, #38	; 0x26
 800657a:	4629      	mov	r1, r5
 800657c:	4648      	mov	r0, r9
 800657e:	f023 fb9e 	bl	8029cbe <memset>
 8006582:	4648      	mov	r0, r9
 8006584:	f7fc f88c 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006588:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800658c:	26ff      	movs	r6, #255	; 0xff
 800658e:	4ba6      	ldr	r3, [pc, #664]	; (8006828 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8006590:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006592:	2226      	movs	r2, #38	; 0x26
 8006594:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006598:	4629      	mov	r1, r5
 800659a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800659e:	4640      	mov	r0, r8
 80065a0:	66a5      	str	r5, [r4, #104]	; 0x68
 80065a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80065a6:	f023 fb8a 	bl	8029cbe <memset>
 80065aa:	4640      	mov	r0, r8
 80065ac:	f7fc f878 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80065b0:	4b9e      	ldr	r3, [pc, #632]	; (800682c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80065b2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80065b4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80065b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80065bc:	a90a      	add	r1, sp, #40	; 0x28
 80065be:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80065c0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80065c4:	f00b fde3 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80065c8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80065cc:	4618      	mov	r0, r3
 80065ce:	ee08 3a10 	vmov	s16, r3
 80065d2:	f00b ff1d 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80065d6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80065da:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80065de:	4618      	mov	r0, r3
 80065e0:	ee08 3a90 	vmov	s17, r3
 80065e4:	f7fc f86e 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80065e8:	4638      	mov	r0, r7
 80065ea:	f00a fc99 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 80065ee:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80065f2:	4618      	mov	r0, r3
 80065f4:	9303      	str	r3, [sp, #12]
 80065f6:	f7fa fd25 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80065fa:	4b8d      	ldr	r3, [pc, #564]	; (8006830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 80065fc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006600:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006604:	3324      	adds	r3, #36	; 0x24
 8006606:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800660a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800660e:	4658      	mov	r0, fp
 8006610:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006614:	f7fc f856 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006618:	4650      	mov	r0, sl
 800661a:	f7fc f853 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800661e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006622:	4618      	mov	r0, r3
 8006624:	ee09 3a10 	vmov	s18, r3
 8006628:	f001 fe6c 	bl	8008304 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800662c:	4a81      	ldr	r2, [pc, #516]	; (8006834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800662e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006632:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006636:	4a80      	ldr	r2, [pc, #512]	; (8006838 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006638:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800663c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006640:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006644:	f00c fda0 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006648:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800664c:	462a      	mov	r2, r5
 800664e:	4648      	mov	r0, r9
 8006650:	9300      	str	r3, [sp, #0]
 8006652:	4629      	mov	r1, r5
 8006654:	23f0      	movs	r3, #240	; 0xf0
 8006656:	f7fc f80f 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800665a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800665c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006660:	66a3      	str	r3, [r4, #104]	; 0x68
 8006662:	4649      	mov	r1, r9
 8006664:	4630      	mov	r0, r6
 8006666:	f009 f803 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800666a:	462a      	mov	r2, r5
 800666c:	4640      	mov	r0, r8
 800666e:	4629      	mov	r1, r5
 8006670:	f7fb fff5 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006674:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006676:	4640      	mov	r0, r8
 8006678:	a90a      	add	r1, sp, #40	; 0x28
 800667a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800667e:	f00b fd86 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006682:	4641      	mov	r1, r8
 8006684:	4630      	mov	r0, r6
 8006686:	f008 fff3 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800668a:	ee18 0a10 	vmov	r0, s16
 800668e:	f240 1201 	movw	r2, #257	; 0x101
 8006692:	2121      	movs	r1, #33	; 0x21
 8006694:	f7fb ffe3 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006698:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800669a:	aa0a      	add	r2, sp, #40	; 0x28
 800669c:	a909      	add	r1, sp, #36	; 0x24
 800669e:	ee18 0a10 	vmov	r0, s16
 80066a2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80066a6:	2302      	movs	r3, #2
 80066a8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066ac:	f00b fb79 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80066b0:	231d      	movs	r3, #29
        updateTextPosition();
 80066b2:	ee18 0a10 	vmov	r0, s16
 80066b6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80066ba:	f7fc f825 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80066be:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80066c2:	3314      	adds	r3, #20
        color = col;
 80066c4:	f04f 39ff 	mov.w	r9, #4294967295
 80066c8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80066cc:	ee18 1a10 	vmov	r1, s16
 80066d0:	4630      	mov	r0, r6
        colorPressed = col;
 80066d2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80066d6:	f008 ffcb 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80066da:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80066de:	223c      	movs	r2, #60	; 0x3c
 80066e0:	ee18 0a90 	vmov	r0, s17
 80066e4:	2117      	movs	r1, #23
 80066e6:	f7fb ffba 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80066ea:	ee18 1a90 	vmov	r1, s17
 80066ee:	4640      	mov	r0, r8
        color = newColor;
 80066f0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80066f4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80066f8:	f00a fed4 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066fc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006700:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006704:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006708:	4b4c      	ldr	r3, [pc, #304]	; (800683c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800670a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 800670c:	ee18 0a90 	vmov	r0, s17
 8006710:	231e      	movs	r3, #30
 8006712:	a90a      	add	r1, sp, #40	; 0x28
 8006714:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006718:	f00b f95e 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800671c:	ee18 1a90 	vmov	r1, s17
 8006720:	4630      	mov	r0, r6
 8006722:	f008 ffa5 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006726:	230a      	movs	r3, #10
 8006728:	9300      	str	r3, [sp, #0]
 800672a:	2232      	movs	r2, #50	; 0x32
 800672c:	23f0      	movs	r3, #240	; 0xf0
 800672e:	4629      	mov	r1, r5
 8006730:	4638      	mov	r0, r7
 8006732:	f7fb ffa1 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006736:	9b03      	ldr	r3, [sp, #12]
 8006738:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800673c:	22a0      	movs	r2, #160	; 0xa0
 800673e:	4611      	mov	r1, r2
 8006740:	4638      	mov	r0, r7
 8006742:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006746:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800674a:	f00a fcff 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800674e:	22a0      	movs	r2, #160	; 0xa0
 8006750:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006754:	4638      	mov	r0, r7
 8006756:	f00a fd04 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800675a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800675e:	2b20      	cmp	r3, #32
 8006760:	d005      	beq.n	800676e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006762:	2320      	movs	r3, #32
 8006764:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006768:	4638      	mov	r0, r7
 800676a:	f00a fbf9 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800676e:	4638      	mov	r0, r7
 8006770:	2101      	movs	r1, #1
 8006772:	f00a fd01 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006776:	4639      	mov	r1, r7
 8006778:	4630      	mov	r0, r6
 800677a:	f008 ff79 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800677e:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006780:	2223      	movs	r2, #35	; 0x23
 8006782:	4658      	mov	r0, fp
        color = newColor;
 8006784:	f04f 39ff 	mov.w	r9, #4294967295
 8006788:	2145      	movs	r1, #69	; 0x45
 800678a:	f7fb ff68 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800678e:	4659      	mov	r1, fp
 8006790:	4640      	mov	r0, r8
        color = newColor;
 8006792:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8006796:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800679a:	f00a fe83 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800679e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067a2:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80067a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067aa:	4f24      	ldr	r7, [pc, #144]	; (800683c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80067ac:	970a      	str	r7, [sp, #40]	; 0x28
 80067ae:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80067b0:	a90a      	add	r1, sp, #40	; 0x28
 80067b2:	4658      	mov	r0, fp
 80067b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80067b8:	f00b f90e 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067bc:	4659      	mov	r1, fp
 80067be:	4630      	mov	r0, r6
 80067c0:	f008 ff56 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80067c4:	220c      	movs	r2, #12
 80067c6:	4650      	mov	r0, sl
 80067c8:	2136      	movs	r1, #54	; 0x36
 80067ca:	f7fb ff48 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80067ce:	4651      	mov	r1, sl
 80067d0:	4640      	mov	r0, r8
        color = newColor;
 80067d2:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80067d6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80067da:	f00a fe63 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067de:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067e2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80067e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067ea:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80067ec:	a90a      	add	r1, sp, #40	; 0x28
 80067ee:	4650      	mov	r0, sl
 80067f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80067f4:	970a      	str	r7, [sp, #40]	; 0x28
 80067f6:	f00b f8ef 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067fa:	4651      	mov	r1, sl
 80067fc:	4630      	mov	r0, r6
 80067fe:	f008 ff37 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006802:	ee19 0a10 	vmov	r0, s18
 8006806:	224e      	movs	r2, #78	; 0x4e
 8006808:	4629      	mov	r1, r5
 800680a:	f7fb ff28 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800680e:	4630      	mov	r0, r6
 8006810:	ee19 1a10 	vmov	r1, s18
 8006814:	f008 ff2c 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006818:	4620      	mov	r0, r4
 800681a:	b00d      	add	sp, #52	; 0x34
 800681c:	ecbd 8b04 	vpop	{d8-d9}
 8006820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006824:	0802cf48 	.word	0x0802cf48
 8006828:	0802ddd0 	.word	0x0802ddd0
 800682c:	0802df98 	.word	0x0802df98
 8006830:	0802db04 	.word	0x0802db04
 8006834:	0802cf30 	.word	0x0802cf30
 8006838:	08006507 	.word	0x08006507
 800683c:	0802b458 	.word	0x0802b458

08006840 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006840:	4770      	bx	lr

08006842 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006842:	4770      	bx	lr

08006844 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006844:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006846:	68c2      	ldr	r2, [r0, #12]
 8006848:	6844      	ldr	r4, [r0, #4]
 800684a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800684c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800684e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006852:	07d2      	lsls	r2, r2, #31
 8006854:	bf48      	it	mi
 8006856:	5962      	ldrmi	r2, [r4, r5]
 8006858:	689b      	ldr	r3, [r3, #8]
    }
 800685a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800685c:	bf48      	it	mi
 800685e:	58d3      	ldrmi	r3, [r2, r3]
 8006860:	4718      	bx	r3

08006862 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006862:	6843      	ldr	r3, [r0, #4]
 8006864:	b12b      	cbz	r3, 8006872 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006866:	6883      	ldr	r3, [r0, #8]
 8006868:	b92b      	cbnz	r3, 8006876 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800686a:	68c0      	ldr	r0, [r0, #12]
 800686c:	f000 0001 	and.w	r0, r0, #1
 8006870:	4770      	bx	lr
 8006872:	4618      	mov	r0, r3
 8006874:	4770      	bx	lr
 8006876:	2001      	movs	r0, #1
    }
 8006878:	4770      	bx	lr

0800687a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800687a:	b510      	push	{r4, lr}
 800687c:	2110      	movs	r1, #16
 800687e:	4604      	mov	r4, r0
 8006880:	f022 fa05 	bl	8028c8e <_ZdlPvj>
 8006884:	4620      	mov	r0, r4
 8006886:	bd10      	pop	{r4, pc}

08006888 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006888:	b510      	push	{r4, lr}
 800688a:	4b03      	ldr	r3, [pc, #12]	; (8006898 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 800688c:	6003      	str	r3, [r0, #0]
 800688e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006890:	f00c fc84 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006894:	4620      	mov	r0, r4
 8006896:	bd10      	pop	{r4, pc}
 8006898:	0802cf94 	.word	0x0802cf94

0800689c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800689c:	b507      	push	{r0, r1, r2, lr}
 800689e:	4b07      	ldr	r3, [pc, #28]	; (80068bc <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80068a0:	6003      	str	r3, [r0, #0]
 80068a2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80068a4:	f00c fc7a 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068a8:	9801      	ldr	r0, [sp, #4]
 80068aa:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80068ae:	f022 f9ee 	bl	8028c8e <_ZdlPvj>
 80068b2:	9801      	ldr	r0, [sp, #4]
 80068b4:	b003      	add	sp, #12
 80068b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80068ba:	bf00      	nop
 80068bc:	0802cf94 	.word	0x0802cf94

080068c0 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80068c0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80068c2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80068c6:	4299      	cmp	r1, r3
{
 80068c8:	4604      	mov	r4, r0
 80068ca:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80068cc:	d103      	bne.n	80068d6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80068ce:	f00e f967 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80068d2:	f7fc ffdb 	bl	800388c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80068d6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80068da:	429d      	cmp	r5, r3
 80068dc:	d103      	bne.n	80068e6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80068de:	f00e f95f 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80068e2:	f7fd f803 	bl	80038ec <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80068e6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80068ea:	42a5      	cmp	r5, r4
 80068ec:	d105      	bne.n	80068fa <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80068ee:	f00e f957 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80068f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80068f6:	f7fd b809 	b.w	800390c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80068fa:	bd38      	pop	{r3, r4, r5, pc}

080068fc <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80068fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006900:	ed2d 8b06 	vpush	{d8-d10}
 8006904:	4604      	mov	r4, r0
 8006906:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006908:	46a3      	mov	fp, r4
 800690a:	2500      	movs	r5, #0
 800690c:	f00f fdc8 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8006910:	4b66      	ldr	r3, [pc, #408]	; (8006aac <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006912:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006914:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006918:	2226      	movs	r2, #38	; 0x26
 800691a:	4629      	mov	r1, r5
 800691c:	4658      	mov	r0, fp
 800691e:	f023 f9ce 	bl	8029cbe <memset>
 8006922:	4658      	mov	r0, fp
 8006924:	f7fb febc 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006928:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800692c:	26ff      	movs	r6, #255	; 0xff
 800692e:	4b60      	ldr	r3, [pc, #384]	; (8006ab0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006930:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006932:	2226      	movs	r2, #38	; 0x26
 8006934:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006938:	4629      	mov	r1, r5
 800693a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800693e:	4650      	mov	r0, sl
 8006940:	66a5      	str	r5, [r4, #104]	; 0x68
 8006942:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006946:	f023 f9ba 	bl	8029cbe <memset>
 800694a:	4650      	mov	r0, sl
 800694c:	f7fb fea8 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006950:	4b58      	ldr	r3, [pc, #352]	; (8006ab4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006952:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006954:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006958:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800695c:	a90a      	add	r1, sp, #40	; 0x28
 800695e:	4650      	mov	r0, sl
 8006960:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006964:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006968:	f00b fc11 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800696c:	4648      	mov	r0, r9
 800696e:	f7fb fea9 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006972:	4b51      	ldr	r3, [pc, #324]	; (8006ab8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006974:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006978:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800697c:	4618      	mov	r0, r3
 800697e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006982:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006986:	ee08 3a90 	vmov	s17, r3
 800698a:	f7fb fe9b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800698e:	4638      	mov	r0, r7
 8006990:	f00a fac6 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8006994:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006998:	4618      	mov	r0, r3
 800699a:	9303      	str	r3, [sp, #12]
 800699c:	f7fa fb52 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80069a0:	4b46      	ldr	r3, [pc, #280]	; (8006abc <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80069a2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80069a6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80069aa:	3324      	adds	r3, #36	; 0x24
 80069ac:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80069b0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80069b4:	4640      	mov	r0, r8
 80069b6:	f7fb fe85 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80069ba:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80069be:	4618      	mov	r0, r3
 80069c0:	ee08 3a10 	vmov	s16, r3
 80069c4:	f7fb fe7e 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80069c8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80069cc:	4618      	mov	r0, r3
 80069ce:	ee09 3a10 	vmov	s18, r3
 80069d2:	f00b fd1d 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80069d6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80069da:	4618      	mov	r0, r3
 80069dc:	ee09 3a90 	vmov	s19, r3
 80069e0:	f00b fd16 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80069e4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80069e8:	4618      	mov	r0, r3
 80069ea:	ee0a 3a10 	vmov	s20, r3
 80069ee:	f00b fd0f 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80069f2:	4a33      	ldr	r2, [pc, #204]	; (8006ac0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80069f4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80069f8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80069fc:	4a31      	ldr	r2, [pc, #196]	; (8006ac4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80069fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006a02:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006a06:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006a0a:	f00c fbbd 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006a0e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006a12:	462a      	mov	r2, r5
 8006a14:	4658      	mov	r0, fp
 8006a16:	9300      	str	r3, [sp, #0]
 8006a18:	4629      	mov	r1, r5
 8006a1a:	23f0      	movs	r3, #240	; 0xf0
 8006a1c:	f7fb fe2c 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a20:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006a22:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006a26:	66a3      	str	r3, [r4, #104]	; 0x68
 8006a28:	4659      	mov	r1, fp
 8006a2a:	4630      	mov	r0, r6
 8006a2c:	f008 fe20 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006a30:	462a      	mov	r2, r5
 8006a32:	4650      	mov	r0, sl
 8006a34:	4629      	mov	r1, r5
 8006a36:	f7fb fe12 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006a3a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006a3c:	4650      	mov	r0, sl
 8006a3e:	a90a      	add	r1, sp, #40	; 0x28
 8006a40:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a44:	f00b fba3 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a48:	4651      	mov	r1, sl
 8006a4a:	4630      	mov	r0, r6
 8006a4c:	f008 fe10 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006a50:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006a54:	2156      	movs	r1, #86	; 0x56
 8006a56:	4648      	mov	r0, r9
 8006a58:	f7fb fe01 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a5c:	f04f 33ff 	mov.w	r3, #4294967295
 8006a60:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a64:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006a68:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a6c:	f10d 0b10 	add.w	fp, sp, #16
 8006a70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006a74:	4649      	mov	r1, r9
 8006a76:	4658      	mov	r0, fp
 8006a78:	4798      	blx	r3
 8006a7a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006a7e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a86:	4b10      	ldr	r3, [pc, #64]	; (8006ac8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006a88:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006a8a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006a8e:	b92b      	cbnz	r3, 8006a9c <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006a90:	4b0e      	ldr	r3, [pc, #56]	; (8006acc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006a92:	4a0f      	ldr	r2, [pc, #60]	; (8006ad0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006a94:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a96:	480f      	ldr	r0, [pc, #60]	; (8006ad4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006a98:	f022 ff0c 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006a9c:	4b0e      	ldr	r3, [pc, #56]	; (8006ad8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a9e:	881b      	ldrh	r3, [r3, #0]
 8006aa0:	2b18      	cmp	r3, #24
 8006aa2:	d81d      	bhi.n	8006ae0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006aa4:	4b0d      	ldr	r3, [pc, #52]	; (8006adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006aa6:	4a0a      	ldr	r2, [pc, #40]	; (8006ad0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006aa8:	2161      	movs	r1, #97	; 0x61
 8006aaa:	e7f4      	b.n	8006a96 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006aac:	0802cf94 	.word	0x0802cf94
 8006ab0:	0802ddd0 	.word	0x0802ddd0
 8006ab4:	0802df98 	.word	0x0802df98
 8006ab8:	0802b468 	.word	0x0802b468
 8006abc:	0802db04 	.word	0x0802db04
 8006ac0:	0802cf7c 	.word	0x0802cf7c
 8006ac4:	080068c1 	.word	0x080068c1
 8006ac8:	20012dfc 	.word	0x20012dfc
 8006acc:	0802b2a8 	.word	0x0802b2a8
 8006ad0:	0802b3aa 	.word	0x0802b3aa
 8006ad4:	0802b325 	.word	0x0802b325
 8006ad8:	20012e00 	.word	0x20012e00
 8006adc:	0802b36c 	.word	0x0802b36c
        return texts->getText(typedTextId);
 8006ae0:	4b96      	ldr	r3, [pc, #600]	; (8006d3c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006ae2:	2118      	movs	r1, #24
 8006ae4:	6818      	ldr	r0, [r3, #0]
 8006ae6:	f001 facf 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8006aea:	4a95      	ldr	r2, [pc, #596]	; (8006d40 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006aec:	4603      	mov	r3, r0
 8006aee:	2104      	movs	r1, #4
 8006af0:	4650      	mov	r0, sl
 8006af2:	f011 f9c5 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006af6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006afa:	4648      	mov	r0, r9
 8006afc:	f00a ff4c 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006b00:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006d44 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006b04:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006b08:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006b0a:	a90a      	add	r1, sp, #40	; 0x28
 8006b0c:	4648      	mov	r0, r9
 8006b0e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b12:	f00a ff61 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b16:	4649      	mov	r1, r9
 8006b18:	4630      	mov	r0, r6
 8006b1a:	f008 fda9 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006b1e:	223c      	movs	r2, #60	; 0x3c
 8006b20:	ee18 0a90 	vmov	r0, s17
 8006b24:	2129      	movs	r1, #41	; 0x29
 8006b26:	f7fb fd9a 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b2a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006b2e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006b32:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006b36:	4658      	mov	r0, fp
        linespace = space;
 8006b38:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006b3c:	f00a fcb2 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b40:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006b44:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006b48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b4c:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006b4e:	eb0d 0103 	add.w	r1, sp, r3
 8006b52:	ee18 0a90 	vmov	r0, s17
 8006b56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b5a:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006b5e:	f00a ff3b 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b62:	ee18 1a90 	vmov	r1, s17
 8006b66:	4630      	mov	r0, r6
 8006b68:	f008 fd82 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006b6c:	230a      	movs	r3, #10
 8006b6e:	9300      	str	r3, [sp, #0]
 8006b70:	2232      	movs	r2, #50	; 0x32
 8006b72:	23f0      	movs	r3, #240	; 0xf0
 8006b74:	4629      	mov	r1, r5
 8006b76:	4638      	mov	r0, r7
 8006b78:	f7fb fd7e 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b7c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b80:	22a0      	movs	r2, #160	; 0xa0
 8006b82:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006b86:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006b8a:	9b03      	ldr	r3, [sp, #12]
 8006b8c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006b90:	4611      	mov	r1, r2
 8006b92:	4638      	mov	r0, r7
 8006b94:	f00a fada 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b98:	22a0      	movs	r2, #160	; 0xa0
 8006b9a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006b9e:	4638      	mov	r0, r7
 8006ba0:	f00a fadf 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006ba4:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006ba8:	2b20      	cmp	r3, #32
 8006baa:	d005      	beq.n	8006bb8 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006bac:	2320      	movs	r3, #32
 8006bae:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006bb2:	4638      	mov	r0, r7
 8006bb4:	f00a f9d4 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006bb8:	4638      	mov	r0, r7
 8006bba:	2101      	movs	r1, #1
 8006bbc:	f00a fadc 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006bc0:	4639      	mov	r1, r7
 8006bc2:	4630      	mov	r0, r6
 8006bc4:	f008 fd54 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006bc8:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006bcc:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006bce:	2223      	movs	r2, #35	; 0x23
 8006bd0:	4640      	mov	r0, r8
        linespace = space;
 8006bd2:	f04f 0a00 	mov.w	sl, #0
 8006bd6:	2145      	movs	r1, #69	; 0x45
 8006bd8:	f7fb fd41 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006bdc:	4641      	mov	r1, r8
 8006bde:	4638      	mov	r0, r7
        color = newColor;
 8006be0:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006be4:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006be8:	f00a fc5c 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006bec:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006bf0:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006bf4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006bf8:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006d44 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006bfc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006c00:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006c02:	a90a      	add	r1, sp, #40	; 0x28
 8006c04:	4640      	mov	r0, r8
 8006c06:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c0a:	f00a fee5 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c0e:	4641      	mov	r1, r8
 8006c10:	4630      	mov	r0, r6
 8006c12:	f008 fd2d 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006c16:	ee18 0a10 	vmov	r0, s16
 8006c1a:	220c      	movs	r2, #12
 8006c1c:	2136      	movs	r1, #54	; 0x36
 8006c1e:	f7fb fd1e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006c22:	ee18 1a10 	vmov	r1, s16
 8006c26:	4638      	mov	r0, r7
        color = newColor;
 8006c28:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006c2c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006c30:	f00a fc38 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c34:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006c38:	ee18 3a10 	vmov	r3, s16
 8006c3c:	333c      	adds	r3, #60	; 0x3c
 8006c3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c42:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006c44:	ee18 0a10 	vmov	r0, s16
 8006c48:	a90a      	add	r1, sp, #40	; 0x28
 8006c4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c4e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006c52:	f00a fec1 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c56:	ee18 1a10 	vmov	r1, s16
 8006c5a:	4630      	mov	r0, r6
 8006c5c:	f008 fd08 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006c60:	ee19 0a10 	vmov	r0, s18
 8006c64:	22f0      	movs	r2, #240	; 0xf0
 8006c66:	2121      	movs	r1, #33	; 0x21
 8006c68:	f7fb fcf9 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006c6c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c70:	aa0a      	add	r2, sp, #40	; 0x28
 8006c72:	f04f 0802 	mov.w	r8, #2
 8006c76:	a909      	add	r1, sp, #36	; 0x24
 8006c78:	ee19 0a10 	vmov	r0, s18
 8006c7c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006c80:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006c84:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c88:	f00b f88b 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006c8c:	233f      	movs	r3, #63	; 0x3f
 8006c8e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006c92:	3710      	adds	r7, #16
        updateTextPosition();
 8006c94:	ee19 0a10 	vmov	r0, s18
 8006c98:	f7fb fd36 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c9c:	ee19 1a10 	vmov	r1, s18
 8006ca0:	4630      	mov	r0, r6
        colorPressed = col;
 8006ca2:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006ca6:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006caa:	f008 fce1 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006cae:	ee19 0a90 	vmov	r0, s19
 8006cb2:	22aa      	movs	r2, #170	; 0xaa
 8006cb4:	2121      	movs	r1, #33	; 0x21
 8006cb6:	f7fb fcd2 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cba:	aa0a      	add	r2, sp, #40	; 0x28
 8006cbc:	a909      	add	r1, sp, #36	; 0x24
 8006cbe:	ee19 0a90 	vmov	r0, s19
 8006cc2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006cc6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006cca:	f00b f86a 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006cce:	233e      	movs	r3, #62	; 0x3e
 8006cd0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006cd4:	ee19 0a90 	vmov	r0, s19
 8006cd8:	f7fb fd16 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006cdc:	ee19 1a90 	vmov	r1, s19
 8006ce0:	4630      	mov	r0, r6
        colorPressed = col;
 8006ce2:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006ce6:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006cea:	f008 fcc1 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006cee:	ee1a 0a10 	vmov	r0, s20
 8006cf2:	2264      	movs	r2, #100	; 0x64
 8006cf4:	2121      	movs	r1, #33	; 0x21
 8006cf6:	f7fb fcb2 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cfa:	aa0a      	add	r2, sp, #40	; 0x28
 8006cfc:	a909      	add	r1, sp, #36	; 0x24
 8006cfe:	ee1a 0a10 	vmov	r0, s20
 8006d02:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006d06:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006d0a:	f00b f84a 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d0e:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006d10:	ee1a 0a10 	vmov	r0, s20
 8006d14:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006d18:	f7fb fcf6 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006d1c:	4630      	mov	r0, r6
        colorPressed = col;
 8006d1e:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006d22:	ee1a 1a10 	vmov	r1, s20
 8006d26:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006d2a:	f008 fca1 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006d2e:	4620      	mov	r0, r4
 8006d30:	b00d      	add	sp, #52	; 0x34
 8006d32:	ecbd 8b06 	vpop	{d8-d10}
 8006d36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d3a:	bf00      	nop
 8006d3c:	20012e08 	.word	0x20012e08
 8006d40:	0802b3e2 	.word	0x0802b3e2
 8006d44:	0802b458 	.word	0x0802b458

08006d48 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006d48:	4770      	bx	lr

08006d4a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006d4a:	4770      	bx	lr

08006d4c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d4c:	4770      	bx	lr

08006d4e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006d4e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d50:	68c2      	ldr	r2, [r0, #12]
 8006d52:	6844      	ldr	r4, [r0, #4]
 8006d54:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006d56:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006d58:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006d5c:	07d2      	lsls	r2, r2, #31
 8006d5e:	bf48      	it	mi
 8006d60:	5962      	ldrmi	r2, [r4, r5]
 8006d62:	689b      	ldr	r3, [r3, #8]
    }
 8006d64:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d66:	bf48      	it	mi
 8006d68:	58d3      	ldrmi	r3, [r2, r3]
 8006d6a:	4718      	bx	r3

08006d6c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006d6c:	6843      	ldr	r3, [r0, #4]
 8006d6e:	b12b      	cbz	r3, 8006d7c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006d70:	6883      	ldr	r3, [r0, #8]
 8006d72:	b92b      	cbnz	r3, 8006d80 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006d74:	68c0      	ldr	r0, [r0, #12]
 8006d76:	f000 0001 	and.w	r0, r0, #1
 8006d7a:	4770      	bx	lr
 8006d7c:	4618      	mov	r0, r3
 8006d7e:	4770      	bx	lr
 8006d80:	2001      	movs	r0, #1
    }
 8006d82:	4770      	bx	lr

08006d84 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d84:	b510      	push	{r4, lr}
 8006d86:	2110      	movs	r1, #16
 8006d88:	4604      	mov	r4, r0
 8006d8a:	f021 ff80 	bl	8028c8e <_ZdlPvj>
 8006d8e:	4620      	mov	r0, r4
 8006d90:	bd10      	pop	{r4, pc}
	...

08006d94 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006d94:	b510      	push	{r4, lr}
 8006d96:	4b03      	ldr	r3, [pc, #12]	; (8006da4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006d98:	6003      	str	r3, [r0, #0]
 8006d9a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006d9c:	f00c f9fe 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006da0:	4620      	mov	r0, r4
 8006da2:	bd10      	pop	{r4, pc}
 8006da4:	0802cfe0 	.word	0x0802cfe0

08006da8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006da8:	b507      	push	{r0, r1, r2, lr}
 8006daa:	4b07      	ldr	r3, [pc, #28]	; (8006dc8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006dac:	6003      	str	r3, [r0, #0]
 8006dae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006db0:	f00c f9f4 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006db4:	9801      	ldr	r0, [sp, #4]
 8006db6:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006dba:	f021 ff68 	bl	8028c8e <_ZdlPvj>
 8006dbe:	9801      	ldr	r0, [sp, #4]
 8006dc0:	b003      	add	sp, #12
 8006dc2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006dc6:	bf00      	nop
 8006dc8:	0802cfe0 	.word	0x0802cfe0

08006dcc <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006dcc:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006dce:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006dd2:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006dd6:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006dd8:	2a32      	cmp	r2, #50	; 0x32
    frameCountInteraction2Interval++;
 8006dda:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006dde:	d105      	bne.n	8006dec <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006de0:	6803      	ldr	r3, [r0, #0]
 8006de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006de4:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006de6:	2300      	movs	r3, #0
 8006de8:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006dec:	bd10      	pop	{r4, pc}

08006dee <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006dee:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006df2:	4288      	cmp	r0, r1
{
 8006df4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006df6:	d105      	bne.n	8006e04 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006df8:	f00d fed2 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006dfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006e00:	f7fc bd54 	b.w	80038ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006e04:	bd08      	pop	{r3, pc}
	...

08006e08 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e0c:	ed2d 8b0a 	vpush	{d8-d12}
 8006e10:	4604      	mov	r4, r0
 8006e12:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8006e14:	46a1      	mov	r9, r4
 8006e16:	2500      	movs	r5, #0
 8006e18:	f00f fb42 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8006e1c:	4ba9      	ldr	r3, [pc, #676]	; (80070c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006e1e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e20:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006e24:	2226      	movs	r2, #38	; 0x26
 8006e26:	4629      	mov	r1, r5
 8006e28:	4648      	mov	r0, r9
 8006e2a:	f022 ff48 	bl	8029cbe <memset>
 8006e2e:	4648      	mov	r0, r9
 8006e30:	f7fb fc36 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006e34:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006e38:	26ff      	movs	r6, #255	; 0xff
 8006e3a:	4ba3      	ldr	r3, [pc, #652]	; (80070c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006e3c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006e3e:	2226      	movs	r2, #38	; 0x26
 8006e40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006e44:	4629      	mov	r1, r5
 8006e46:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006e4a:	4640      	mov	r0, r8
 8006e4c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006e4e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e52:	f022 ff34 	bl	8029cbe <memset>
 8006e56:	4640      	mov	r0, r8
 8006e58:	f7fb fc22 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8006e5c:	4b9b      	ldr	r3, [pc, #620]	; (80070cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8006e5e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006e60:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006e64:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006e68:	a90a      	add	r1, sp, #40	; 0x28
 8006e6a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006e6e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006e70:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006e74:	f00b f98b 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e78:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006e7c:	4658      	mov	r0, fp
 8006e7e:	f7fb fc21 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006e82:	4638      	mov	r0, r7
 8006e84:	f00a fe46 	bl	8011b14 <_ZN8touchgfx5GaugeC1Ev>
 8006e88:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006e8c:	4618      	mov	r0, r3
 8006e8e:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006e92:	4e8f      	ldr	r6, [pc, #572]	; (80070d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8006e94:	f7fb fc16 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006e98:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006e9c:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006ea0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006ea2:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006ea6:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006eaa:	f7fb fc0b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006eae:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006eb2:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006eb6:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006eb8:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006ebc:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006ec0:	f7fb fc00 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006ec4:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006ec8:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006ecc:	4618      	mov	r0, r3
 8006ece:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006ed2:	ee0a 3a90 	vmov	s21, r3
 8006ed6:	f7fb fbf5 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006eda:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006ede:	4618      	mov	r0, r3
 8006ee0:	ee0b 3a10 	vmov	s22, r3
 8006ee4:	f7fb fbee 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006ee8:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006eec:	4618      	mov	r0, r3
 8006eee:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8006ef2:	ee0b 3a90 	vmov	s23, r3
 8006ef6:	f7fb fbe5 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006efa:	4650      	mov	r0, sl
 8006efc:	f00a f810 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 8006f00:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f04:	4618      	mov	r0, r3
 8006f06:	9303      	str	r3, [sp, #12]
 8006f08:	f7fa f89c 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f0c:	4b71      	ldr	r3, [pc, #452]	; (80070d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8006f0e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006f12:	3324      	adds	r3, #36	; 0x24
 8006f14:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006f18:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006f1c:	4618      	mov	r0, r3
 8006f1e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006f22:	ee08 3a10 	vmov	s16, r3
 8006f26:	f7fb fbcd 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006f2a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006f2e:	4618      	mov	r0, r3
 8006f30:	ee08 3a90 	vmov	s17, r3
 8006f34:	f7fb fbc6 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006f38:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006f3c:	4618      	mov	r0, r3
 8006f3e:	ee0c 3a10 	vmov	s24, r3
 8006f42:	f00b fa65 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f46:	4a64      	ldr	r2, [pc, #400]	; (80070d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8006f48:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f4c:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006f50:	4a62      	ldr	r2, [pc, #392]	; (80070dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006f52:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8006f56:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f5a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f5e:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8006f62:	f00c f911 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f66:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f6a:	462a      	mov	r2, r5
 8006f6c:	4648      	mov	r0, r9
 8006f6e:	9300      	str	r3, [sp, #0]
 8006f70:	4629      	mov	r1, r5
 8006f72:	23f0      	movs	r3, #240	; 0xf0
 8006f74:	f7fb fb80 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f78:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f7a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f7e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f80:	4649      	mov	r1, r9
 8006f82:	4630      	mov	r0, r6
 8006f84:	f008 fb74 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006f88:	462a      	mov	r2, r5
 8006f8a:	4640      	mov	r0, r8
 8006f8c:	4629      	mov	r1, r5
 8006f8e:	f7fb fb66 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006f92:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006f94:	4640      	mov	r0, r8
 8006f96:	a90a      	add	r1, sp, #40	; 0x28
 8006f98:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f9c:	f00b f8f7 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fa0:	4641      	mov	r1, r8
 8006fa2:	4630      	mov	r0, r6
 8006fa4:	f008 fb64 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8006fa8:	223c      	movs	r2, #60	; 0x3c
 8006faa:	211f      	movs	r1, #31
 8006fac:	4658      	mov	r0, fp
 8006fae:	f7fb fb56 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8006fb2:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8006fb6:	f04f 33ff 	mov.w	r3, #4294967295
 8006fba:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006fbe:	4659      	mov	r1, fp
 8006fc0:	4640      	mov	r0, r8
        linespace = space;
 8006fc2:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006fc6:	f00a fa6d 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006fca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006fce:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006fd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006fd6:	4b42      	ldr	r3, [pc, #264]	; (80070e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006fd8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006fda:	a90a      	add	r1, sp, #40	; 0x28
 8006fdc:	2327      	movs	r3, #39	; 0x27
 8006fde:	4658      	mov	r0, fp
 8006fe0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fe4:	f00a fcf8 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fe8:	4659      	mov	r1, fp
 8006fea:	4630      	mov	r0, r6
 8006fec:	f008 fb40 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ff0:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006ff4:	4638      	mov	r0, r7
 8006ff6:	a90a      	add	r1, sp, #40	; 0x28
 8006ff8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ffc:	f008 faca 	bl	800f594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007000:	236a      	movs	r3, #106	; 0x6a
 8007002:	4638      	mov	r0, r7
 8007004:	9300      	str	r3, [sp, #0]
 8007006:	225e      	movs	r2, #94	; 0x5e
 8007008:	23b8      	movs	r3, #184	; 0xb8
 800700a:	211c      	movs	r1, #28
 800700c:	f7fb fb34 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007010:	225c      	movs	r2, #92	; 0x5c
 8007012:	4611      	mov	r1, r2
 8007014:	4638      	mov	r0, r7
 8007016:	f00a fe28 	bl	8011c6a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 800701a:	4638      	mov	r0, r7
 800701c:	225a      	movs	r2, #90	; 0x5a
 800701e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007022:	f00a fea7 	bl	8011d74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007026:	462b      	mov	r3, r5
 8007028:	225a      	movs	r2, #90	; 0x5a
 800702a:	4638      	mov	r0, r7
 800702c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007030:	9500      	str	r5, [sp, #0]
 8007032:	f008 f95c 	bl	800f2ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007036:	4638      	mov	r0, r7
 8007038:	4629      	mov	r1, r5
 800703a:	f00a fe45 	bl	8011cc8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800703e:	2335      	movs	r3, #53	; 0x35
 8007040:	2208      	movs	r2, #8
 8007042:	4638      	mov	r0, r7
 8007044:	2105      	movs	r1, #5
 8007046:	f00a fdfb 	bl	8011c40 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800704a:	4638      	mov	r0, r7
 800704c:	2101      	movs	r1, #1
 800704e:	f00a fd99 	bl	8011b84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007052:	4638      	mov	r0, r7
 8007054:	2101      	movs	r1, #1
 8007056:	f00a fd98 	bl	8011b8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 800705a:	4639      	mov	r1, r7
 800705c:	4630      	mov	r0, r6
 800705e:	f008 fb07 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007062:	230f      	movs	r3, #15
 8007064:	22e6      	movs	r2, #230	; 0xe6
 8007066:	ee19 0a10 	vmov	r0, s18
 800706a:	9300      	str	r3, [sp, #0]
 800706c:	4629      	mov	r1, r5
 800706e:	23f0      	movs	r3, #240	; 0xf0
 8007070:	f7fb fb02 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8007074:	f04f 33ff 	mov.w	r3, #4294967295
 8007078:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 800707c:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007080:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007084:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007088:	4f16      	ldr	r7, [pc, #88]	; (80070e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 800708a:	ee19 1a10 	vmov	r1, s18
 800708e:	4640      	mov	r0, r8
 8007090:	4798      	blx	r3
 8007092:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007096:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 800709a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800709e:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80070a0:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 80070a4:	b92b      	cbnz	r3, 80070b2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 80070a6:	4b10      	ldr	r3, [pc, #64]	; (80070e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80070a8:	4a10      	ldr	r2, [pc, #64]	; (80070ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80070aa:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80070ac:	4810      	ldr	r0, [pc, #64]	; (80070f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80070ae:	f022 fc01 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80070b2:	f8df b044 	ldr.w	fp, [pc, #68]	; 80070f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80070b6:	f8bb 3000 	ldrh.w	r3, [fp]
 80070ba:	b9fb      	cbnz	r3, 80070fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 80070bc:	4b0d      	ldr	r3, [pc, #52]	; (80070f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80070be:	4a0b      	ldr	r2, [pc, #44]	; (80070ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80070c0:	2161      	movs	r1, #97	; 0x61
 80070c2:	e7f3      	b.n	80070ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
 80070c4:	0802cfe0 	.word	0x0802cfe0
 80070c8:	0802ddd0 	.word	0x0802ddd0
 80070cc:	0802df98 	.word	0x0802df98
 80070d0:	0802b468 	.word	0x0802b468
 80070d4:	0802db04 	.word	0x0802db04
 80070d8:	0802cfc8 	.word	0x0802cfc8
 80070dc:	08006def 	.word	0x08006def
 80070e0:	0802b458 	.word	0x0802b458
 80070e4:	20012dfc 	.word	0x20012dfc
 80070e8:	0802b2a8 	.word	0x0802b2a8
 80070ec:	0802b3aa 	.word	0x0802b3aa
 80070f0:	0802b325 	.word	0x0802b325
 80070f4:	0802b36c 	.word	0x0802b36c
 80070f8:	20012e00 	.word	0x20012e00
        return texts->getText(typedTextId);
 80070fc:	4bdf      	ldr	r3, [pc, #892]	; (800747c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80070fe:	4629      	mov	r1, r5
 8007100:	6818      	ldr	r0, [r3, #0]
 8007102:	f000 ffc1 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8007106:	4ade      	ldr	r2, [pc, #888]	; (8007480 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007108:	4603      	mov	r3, r0
 800710a:	210a      	movs	r1, #10
 800710c:	4648      	mov	r0, r9
 800710e:	f010 feb7 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007112:	4bdc      	ldr	r3, [pc, #880]	; (8007484 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        wc1 = value;
 8007114:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007118:	ee19 0a10 	vmov	r0, s18
 800711c:	930a      	str	r3, [sp, #40]	; 0x28
 800711e:	a90a      	add	r1, sp, #40	; 0x28
 8007120:	2303      	movs	r3, #3
 8007122:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007126:	f00a fc57 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800712a:	ee19 1a10 	vmov	r1, s18
 800712e:	4630      	mov	r0, r6
 8007130:	f008 fa9e 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007134:	210f      	movs	r1, #15
 8007136:	22d7      	movs	r2, #215	; 0xd7
 8007138:	ee19 0a90 	vmov	r0, s19
 800713c:	9100      	str	r1, [sp, #0]
 800713e:	23f0      	movs	r3, #240	; 0xf0
 8007140:	4629      	mov	r1, r5
 8007142:	f7fb fa99 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007146:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 800714a:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 800714e:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007152:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007156:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 800715a:	4640      	mov	r0, r8
 800715c:	ee19 1a90 	vmov	r1, s19
 8007160:	4798      	blx	r3
 8007162:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007166:	f504 7342 	add.w	r3, r4, #776	; 0x308
 800716a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800716e:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007170:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007174:	2b00      	cmp	r3, #0
 8007176:	d096      	beq.n	80070a6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007178:	f8bb 3000 	ldrh.w	r3, [fp]
 800717c:	2b01      	cmp	r3, #1
 800717e:	d99d      	bls.n	80070bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8007180:	4abe      	ldr	r2, [pc, #760]	; (800747c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007182:	2101      	movs	r1, #1
 8007184:	6810      	ldr	r0, [r2, #0]
 8007186:	f000 ff7f 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 800718a:	4abd      	ldr	r2, [pc, #756]	; (8007480 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 800718c:	4603      	mov	r3, r0
 800718e:	210a      	movs	r1, #10
 8007190:	4648      	mov	r0, r9
 8007192:	f010 fe75 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007196:	f04f 0104 	mov.w	r1, #4
 800719a:	4bba      	ldr	r3, [pc, #744]	; (8007484 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 800719c:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80071a0:	ee19 0a90 	vmov	r0, s19
 80071a4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80071a8:	a90a      	add	r1, sp, #40	; 0x28
 80071aa:	930a      	str	r3, [sp, #40]	; 0x28
 80071ac:	f00a fc14 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071b0:	ee19 1a90 	vmov	r1, s19
 80071b4:	4630      	mov	r0, r6
 80071b6:	f008 fa5b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80071ba:	210f      	movs	r1, #15
 80071bc:	22c8      	movs	r2, #200	; 0xc8
 80071be:	ee1a 0a10 	vmov	r0, s20
 80071c2:	9100      	str	r1, [sp, #0]
 80071c4:	23f0      	movs	r3, #240	; 0xf0
 80071c6:	4629      	mov	r1, r5
 80071c8:	f7fb fa56 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071cc:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80071d0:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80071d4:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80071d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80071dc:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80071e0:	4640      	mov	r0, r8
 80071e2:	ee1a 1a10 	vmov	r1, s20
 80071e6:	4798      	blx	r3
 80071e8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071ec:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80071f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80071f4:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80071f6:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80071fa:	2b00      	cmp	r3, #0
 80071fc:	f43f af53 	beq.w	80070a6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007200:	f8bb 3000 	ldrh.w	r3, [fp]
 8007204:	2b02      	cmp	r3, #2
 8007206:	f67f af59 	bls.w	80070bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 800720a:	4a9c      	ldr	r2, [pc, #624]	; (800747c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
        : typedTextId(id)
 800720c:	4f9d      	ldr	r7, [pc, #628]	; (8007484 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        return texts->getText(typedTextId);
 800720e:	6810      	ldr	r0, [r2, #0]
 8007210:	2102      	movs	r1, #2
 8007212:	f000 ff39 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8007216:	4a9a      	ldr	r2, [pc, #616]	; (8007480 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007218:	4603      	mov	r3, r0
 800721a:	210a      	movs	r1, #10
 800721c:	4648      	mov	r0, r9
 800721e:	f010 fe2f 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007222:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007224:	ee1a 0a10 	vmov	r0, s20
 8007228:	a90a      	add	r1, sp, #40	; 0x28
 800722a:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 800722e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007232:	970a      	str	r7, [sp, #40]	; 0x28
 8007234:	f00a fbd0 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007238:	ee1a 1a10 	vmov	r1, s20
 800723c:	4630      	mov	r0, r6
 800723e:	f008 fa17 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007242:	224c      	movs	r2, #76	; 0x4c
 8007244:	ee1a 0a90 	vmov	r0, s21
 8007248:	2171      	movs	r1, #113	; 0x71
 800724a:	f7fb fa08 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800724e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007252:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8007256:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 800725a:	4640      	mov	r0, r8
        linespace = space;
 800725c:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007260:	f00a f920 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007264:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007268:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 800726c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007270:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007272:	ee1a 0a90 	vmov	r0, s21
 8007276:	a90a      	add	r1, sp, #40	; 0x28
 8007278:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800727c:	970a      	str	r7, [sp, #40]	; 0x28
 800727e:	f00a fbab 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007282:	ee1a 1a90 	vmov	r1, s21
 8007286:	4630      	mov	r0, r6
 8007288:	f008 f9f2 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 800728c:	22b9      	movs	r2, #185	; 0xb9
 800728e:	ee1b 0a10 	vmov	r0, s22
 8007292:	4629      	mov	r1, r5
 8007294:	f7fb f9e3 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007298:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800729c:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80072a0:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80072a4:	4640      	mov	r0, r8
        linespace = space;
 80072a6:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80072aa:	f00a f8fb 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072b2:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80072b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072ba:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80072bc:	ee1b 0a10 	vmov	r0, s22
 80072c0:	a90a      	add	r1, sp, #40	; 0x28
 80072c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072c6:	970a      	str	r7, [sp, #40]	; 0x28
 80072c8:	f00a fb86 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072cc:	ee1b 1a10 	vmov	r1, s22
 80072d0:	4630      	mov	r0, r6
 80072d2:	f008 f9cd 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80072d6:	22b9      	movs	r2, #185	; 0xb9
 80072d8:	ee1b 0a90 	vmov	r0, s23
 80072dc:	21d9      	movs	r1, #217	; 0xd9
 80072de:	f7fb f9be 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80072e2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80072e6:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80072ea:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80072ee:	4640      	mov	r0, r8
        linespace = space;
 80072f0:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80072f4:	f00a f8d6 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072f8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072fc:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007300:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007304:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007306:	ee1b 0a90 	vmov	r0, s23
 800730a:	a90a      	add	r1, sp, #40	; 0x28
 800730c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007310:	970a      	str	r7, [sp, #40]	; 0x28
 8007312:	f00a fb61 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007316:	ee1b 1a90 	vmov	r1, s23
 800731a:	4630      	mov	r0, r6
 800731c:	f008 f9a8 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007320:	230a      	movs	r3, #10
 8007322:	9300      	str	r3, [sp, #0]
 8007324:	2232      	movs	r2, #50	; 0x32
 8007326:	23f0      	movs	r3, #240	; 0xf0
 8007328:	4629      	mov	r1, r5
 800732a:	4650      	mov	r0, sl
 800732c:	f7fb f9a4 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007330:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007334:	22a0      	movs	r2, #160	; 0xa0
 8007336:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800733a:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 800733e:	9b03      	ldr	r3, [sp, #12]
 8007340:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007344:	4611      	mov	r1, r2
 8007346:	4650      	mov	r0, sl
 8007348:	f009 ff00 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800734c:	22a0      	movs	r2, #160	; 0xa0
 800734e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007352:	4650      	mov	r0, sl
 8007354:	f009 ff05 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007358:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 800735c:	2b20      	cmp	r3, #32
 800735e:	d005      	beq.n	800736c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x564>
        lineWidthQ5 = widthQ5;
 8007360:	2320      	movs	r3, #32
 8007362:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007366:	4650      	mov	r0, sl
 8007368:	f009 fdfa 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800736c:	4650      	mov	r0, sl
 800736e:	2101      	movs	r1, #1
 8007370:	f009 ff02 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007374:	4651      	mov	r1, sl
 8007376:	4630      	mov	r0, r6
 8007378:	f008 f97a 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800737c:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007380:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007382:	ee18 0a10 	vmov	r0, s16
 8007386:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007388:	f04f 0900 	mov.w	r9, #0
 800738c:	2145      	movs	r1, #69	; 0x45
 800738e:	f7fb f966 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007392:	ee18 1a10 	vmov	r1, s16
 8007396:	4628      	mov	r0, r5
        color = newColor;
 8007398:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 800739c:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80073a0:	f00a f880 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80073a8:	ee18 3a10 	vmov	r3, s16
 80073ac:	333c      	adds	r3, #60	; 0x3c
 80073ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073b2:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007484 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>
 80073b6:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80073ba:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80073bc:	ee18 0a10 	vmov	r0, s16
 80073c0:	a90a      	add	r1, sp, #40	; 0x28
 80073c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073c6:	f00a fb07 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073ca:	ee18 1a10 	vmov	r1, s16
 80073ce:	4630      	mov	r0, r6
 80073d0:	f008 f94e 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80073d4:	ee18 0a90 	vmov	r0, s17
 80073d8:	220c      	movs	r2, #12
 80073da:	2136      	movs	r1, #54	; 0x36
 80073dc:	f7fb f93f 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80073e0:	ee18 1a90 	vmov	r1, s17
 80073e4:	4628      	mov	r0, r5
        color = newColor;
 80073e6:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80073ea:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80073ee:	f00a f859 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80073f6:	ee18 3a90 	vmov	r3, s17
 80073fa:	333c      	adds	r3, #60	; 0x3c
 80073fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007400:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007402:	ee18 0a90 	vmov	r0, s17
 8007406:	a90a      	add	r1, sp, #40	; 0x28
 8007408:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800740c:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007410:	f00a fae2 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007414:	ee18 1a90 	vmov	r1, s17
 8007418:	4630      	mov	r0, r6
 800741a:	f008 f929 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800741e:	ee1c 0a10 	vmov	r0, s24
 8007422:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007426:	2121      	movs	r1, #33	; 0x21
 8007428:	f7fb f919 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 800742c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800742e:	aa0a      	add	r2, sp, #40	; 0x28
 8007430:	a909      	add	r1, sp, #36	; 0x24
 8007432:	ee1c 0a10 	vmov	r0, s24
 8007436:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800743a:	2302      	movs	r3, #2
 800743c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007440:	f00a fcaf 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007444:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 8007446:	ee1c 0a10 	vmov	r0, s24
 800744a:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 800744e:	f7fb f95b 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007452:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007456:	3304      	adds	r3, #4
 8007458:	4630      	mov	r0, r6
 800745a:	ee1c 1a10 	vmov	r1, s24
        color = col;
 800745e:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007462:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8007466:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 800746a:	f008 f901 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800746e:	4620      	mov	r0, r4
 8007470:	b00d      	add	sp, #52	; 0x34
 8007472:	ecbd 8b0a 	vpop	{d8-d12}
 8007476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800747a:	bf00      	nop
 800747c:	20012e08 	.word	0x20012e08
 8007480:	0802b3e2 	.word	0x0802b3e2
 8007484:	0802b458 	.word	0x0802b458

08007488 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007488:	4770      	bx	lr

0800748a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800748a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800748c:	68c2      	ldr	r2, [r0, #12]
 800748e:	6844      	ldr	r4, [r0, #4]
 8007490:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007492:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007494:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007498:	07d2      	lsls	r2, r2, #31
 800749a:	bf48      	it	mi
 800749c:	5962      	ldrmi	r2, [r4, r5]
 800749e:	689b      	ldr	r3, [r3, #8]
    }
 80074a0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80074a2:	bf48      	it	mi
 80074a4:	58d3      	ldrmi	r3, [r2, r3]
 80074a6:	4718      	bx	r3

080074a8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80074a8:	6843      	ldr	r3, [r0, #4]
 80074aa:	b12b      	cbz	r3, 80074b8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80074ac:	6883      	ldr	r3, [r0, #8]
 80074ae:	b92b      	cbnz	r3, 80074bc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80074b0:	68c0      	ldr	r0, [r0, #12]
 80074b2:	f000 0001 	and.w	r0, r0, #1
 80074b6:	4770      	bx	lr
 80074b8:	4618      	mov	r0, r3
 80074ba:	4770      	bx	lr
 80074bc:	2001      	movs	r0, #1
    }
 80074be:	4770      	bx	lr

080074c0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80074c0:	b510      	push	{r4, lr}
 80074c2:	2110      	movs	r1, #16
 80074c4:	4604      	mov	r4, r0
 80074c6:	f021 fbe2 	bl	8028c8e <_ZdlPvj>
 80074ca:	4620      	mov	r0, r4
 80074cc:	bd10      	pop	{r4, pc}

080074ce <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80074ce:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80074d2:	f000 bf21 	b.w	8008318 <_ZN17Gauge_with_Values10initializeEv>

080074d6 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80074d6:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80074da:	4288      	cmp	r0, r1
{
 80074dc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80074de:	d105      	bne.n	80074ec <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80074e0:	f00d fb5e 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80074e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80074e8:	f7fc b9e0 	b.w	80038ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80074ec:	bd08      	pop	{r3, pc}
	...

080074f0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80074f0:	b510      	push	{r4, lr}
 80074f2:	4b07      	ldr	r3, [pc, #28]	; (8007510 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 80074f4:	6003      	str	r3, [r0, #0]
 80074f6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074f8:	f00b fe50 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80074fc:	4b05      	ldr	r3, [pc, #20]	; (8007514 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 80074fe:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8007502:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007506:	f7fd fc77 	bl	8004df8 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800750a:	4620      	mov	r0, r4
 800750c:	bd10      	pop	{r4, pc}
 800750e:	bf00      	nop
 8007510:	0802d030 	.word	0x0802d030
 8007514:	0802d454 	.word	0x0802d454

08007518 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007518:	b510      	push	{r4, lr}
 800751a:	4604      	mov	r4, r0
}
 800751c:	f7ff ffe8 	bl	80074f0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007520:	4620      	mov	r0, r4
 8007522:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007526:	f021 fbb2 	bl	8028c8e <_ZdlPvj>
 800752a:	4620      	mov	r0, r4
 800752c:	bd10      	pop	{r4, pc}
	...

08007530 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007534:	ed2d 8b04 	vpush	{d8-d9}
 8007538:	4604      	mov	r4, r0
 800753a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 800753c:	46a3      	mov	fp, r4
 800753e:	2500      	movs	r5, #0
 8007540:	f00e ffae 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8007544:	4bae      	ldr	r3, [pc, #696]	; (8007800 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8007546:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007548:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800754c:	2226      	movs	r2, #38	; 0x26
 800754e:	4629      	mov	r1, r5
 8007550:	4658      	mov	r0, fp
 8007552:	f022 fbb4 	bl	8029cbe <memset>
 8007556:	4658      	mov	r0, fp
 8007558:	f7fb f8a2 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 800755c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007560:	26ff      	movs	r6, #255	; 0xff
 8007562:	4ba8      	ldr	r3, [pc, #672]	; (8007804 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8007564:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007566:	2226      	movs	r2, #38	; 0x26
 8007568:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800756c:	4629      	mov	r1, r5
 800756e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007572:	66a5      	str	r5, [r4, #104]	; 0x68
 8007574:	4650      	mov	r0, sl
 8007576:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800757a:	f022 fba0 	bl	8029cbe <memset>
 800757e:	4650      	mov	r0, sl
 8007580:	f7fb f88e 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007584:	4ba0      	ldr	r3, [pc, #640]	; (8007808 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8007586:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007588:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800758c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007590:	a90a      	add	r1, sp, #40	; 0x28
 8007592:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007596:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800759a:	4650      	mov	r0, sl
 800759c:	f00a fdf7 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80075a0:	4638      	mov	r0, r7
 80075a2:	f009 fcbd 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 80075a6:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80075aa:	4618      	mov	r0, r3
 80075ac:	9303      	str	r3, [sp, #12]
 80075ae:	f7f9 fd49 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80075b2:	4b96      	ldr	r3, [pc, #600]	; (800780c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80075b4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80075b8:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80075bc:	3324      	adds	r3, #36	; 0x24
 80075be:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80075c2:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80075c6:	4648      	mov	r0, r9
 80075c8:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80075cc:	f7fb f87a 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80075d0:	4640      	mov	r0, r8
 80075d2:	f7fb f877 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80075d6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80075da:	4618      	mov	r0, r3
 80075dc:	ee08 3a10 	vmov	s16, r3
 80075e0:	f7fb f870 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 80075e4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80075e8:	4618      	mov	r0, r3
 80075ea:	ee08 3a90 	vmov	s17, r3
 80075ee:	f00a ff0f 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075f2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80075f6:	4618      	mov	r0, r3
 80075f8:	ee09 3a10 	vmov	s18, r3
 80075fc:	f000 fe82 	bl	8008304 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007600:	4a83      	ldr	r2, [pc, #524]	; (8007810 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8007602:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007606:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800760a:	4a82      	ldr	r2, [pc, #520]	; (8007814 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800760c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007610:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007614:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007618:	f00b fdb6 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800761c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007620:	462a      	mov	r2, r5
 8007622:	9300      	str	r3, [sp, #0]
 8007624:	4629      	mov	r1, r5
 8007626:	23f0      	movs	r3, #240	; 0xf0
 8007628:	4658      	mov	r0, fp
 800762a:	f7fb f825 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800762e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007630:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007634:	66a3      	str	r3, [r4, #104]	; 0x68
 8007636:	4659      	mov	r1, fp
 8007638:	4630      	mov	r0, r6
 800763a:	f008 f819 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800763e:	462a      	mov	r2, r5
 8007640:	4629      	mov	r1, r5
 8007642:	4650      	mov	r0, sl
 8007644:	f7fb f80b 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007648:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800764a:	a90a      	add	r1, sp, #40	; 0x28
 800764c:	4650      	mov	r0, sl
 800764e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007652:	f00a fd9c 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007656:	4651      	mov	r1, sl
 8007658:	4630      	mov	r0, r6
 800765a:	f008 f809 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800765e:	230a      	movs	r3, #10
 8007660:	9300      	str	r3, [sp, #0]
 8007662:	2232      	movs	r2, #50	; 0x32
 8007664:	23f0      	movs	r3, #240	; 0xf0
 8007666:	4629      	mov	r1, r5
 8007668:	4638      	mov	r0, r7
 800766a:	f7fb f805 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 800766e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007672:	22a0      	movs	r2, #160	; 0xa0
 8007674:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007678:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 800767c:	9b03      	ldr	r3, [sp, #12]
 800767e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007682:	4611      	mov	r1, r2
 8007684:	4638      	mov	r0, r7
 8007686:	f009 fd61 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800768a:	22a0      	movs	r2, #160	; 0xa0
 800768c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007690:	4638      	mov	r0, r7
 8007692:	f009 fd66 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007696:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800769a:	2b20      	cmp	r3, #32
 800769c:	d005      	beq.n	80076aa <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 800769e:	2320      	movs	r3, #32
 80076a0:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80076a4:	4638      	mov	r0, r7
 80076a6:	f009 fc5b 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80076aa:	4638      	mov	r0, r7
 80076ac:	2101      	movs	r1, #1
 80076ae:	f009 fd63 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80076b2:	4639      	mov	r1, r7
 80076b4:	4630      	mov	r0, r6
 80076b6:	ad04      	add	r5, sp, #16
 80076b8:	f007 ffda 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80076bc:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80076c0:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80076c4:	2223      	movs	r2, #35	; 0x23
 80076c6:	4648      	mov	r0, r9
 80076c8:	2145      	movs	r1, #69	; 0x45
 80076ca:	f7fa ffc8 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80076ce:	4649      	mov	r1, r9
 80076d0:	4628      	mov	r0, r5
        color = newColor;
 80076d2:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80076d6:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80076da:	f009 fee3 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80076e2:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80076e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80076ea:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007818 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 80076ee:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80076f2:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80076f4:	a90a      	add	r1, sp, #40	; 0x28
 80076f6:	4648      	mov	r0, r9
 80076f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076fc:	f00a f96c 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007700:	4649      	mov	r1, r9
 8007702:	4630      	mov	r0, r6
 8007704:	f007 ffb4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007708:	223c      	movs	r2, #60	; 0x3c
 800770a:	4640      	mov	r0, r8
 800770c:	211f      	movs	r1, #31
 800770e:	f7fa ffa6 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007712:	4641      	mov	r1, r8
 8007714:	4628      	mov	r0, r5
        color = newColor;
 8007716:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800771a:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 800771e:	f009 fec1 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007722:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007726:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800772a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800772e:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007730:	a90a      	add	r1, sp, #40	; 0x28
 8007732:	4640      	mov	r0, r8
 8007734:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007738:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800773c:	f00a f94c 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007740:	4641      	mov	r1, r8
 8007742:	4630      	mov	r0, r6
 8007744:	f007 ff94 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007748:	ee18 0a10 	vmov	r0, s16
 800774c:	220c      	movs	r2, #12
 800774e:	2136      	movs	r1, #54	; 0x36
 8007750:	f7fa ff85 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007754:	ee18 1a10 	vmov	r1, s16
 8007758:	4628      	mov	r0, r5
        color = newColor;
 800775a:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800775e:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007762:	f009 fe9f 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007766:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800776a:	ee18 3a10 	vmov	r3, s16
 800776e:	333c      	adds	r3, #60	; 0x3c
 8007770:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007774:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007776:	ee18 0a10 	vmov	r0, s16
 800777a:	a90a      	add	r1, sp, #40	; 0x28
 800777c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007780:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007784:	f00a f928 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007788:	ee18 1a10 	vmov	r1, s16
 800778c:	4630      	mov	r0, r6
 800778e:	f007 ff6f 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007792:	ee18 0a90 	vmov	r0, s17
 8007796:	f240 1201 	movw	r2, #257	; 0x101
 800779a:	2121      	movs	r1, #33	; 0x21
 800779c:	f7fa ff5f 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80077a0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077a2:	aa0a      	add	r2, sp, #40	; 0x28
 80077a4:	a909      	add	r1, sp, #36	; 0x24
 80077a6:	ee18 0a90 	vmov	r0, s17
 80077aa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80077ae:	2302      	movs	r3, #2
 80077b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077b4:	f00a faf5 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80077b8:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80077ba:	ee18 0a90 	vmov	r0, s17
 80077be:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80077c2:	f7fa ffa1 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80077c6:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80077ca:	3314      	adds	r3, #20
 80077cc:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80077d0:	ee18 1a90 	vmov	r1, s17
 80077d4:	4630      	mov	r0, r6
        colorPressed = col;
 80077d6:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80077da:	f007 ff49 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80077de:	ee19 0a10 	vmov	r0, s18
 80077e2:	224e      	movs	r2, #78	; 0x4e
 80077e4:	4651      	mov	r1, sl
 80077e6:	f7fa ff3a 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80077ea:	4630      	mov	r0, r6
 80077ec:	ee19 1a10 	vmov	r1, s18
 80077f0:	f007 ff3e 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80077f4:	4620      	mov	r0, r4
 80077f6:	b00d      	add	sp, #52	; 0x34
 80077f8:	ecbd 8b04 	vpop	{d8-d9}
 80077fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007800:	0802d030 	.word	0x0802d030
 8007804:	0802ddd0 	.word	0x0802ddd0
 8007808:	0802df98 	.word	0x0802df98
 800780c:	0802db04 	.word	0x0802db04
 8007810:	0802d018 	.word	0x0802d018
 8007814:	080074d7 	.word	0x080074d7
 8007818:	0802b458 	.word	0x0802b458

0800781c <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 800781c:	4770      	bx	lr

0800781e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800781e:	4770      	bx	lr

08007820 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007820:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007822:	68c2      	ldr	r2, [r0, #12]
 8007824:	6844      	ldr	r4, [r0, #4]
 8007826:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007828:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800782a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800782e:	07d2      	lsls	r2, r2, #31
 8007830:	bf48      	it	mi
 8007832:	5962      	ldrmi	r2, [r4, r5]
 8007834:	689b      	ldr	r3, [r3, #8]
    }
 8007836:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007838:	bf48      	it	mi
 800783a:	58d3      	ldrmi	r3, [r2, r3]
 800783c:	4718      	bx	r3

0800783e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800783e:	6843      	ldr	r3, [r0, #4]
 8007840:	b12b      	cbz	r3, 800784e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007842:	6883      	ldr	r3, [r0, #8]
 8007844:	b92b      	cbnz	r3, 8007852 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007846:	68c0      	ldr	r0, [r0, #12]
 8007848:	f000 0001 	and.w	r0, r0, #1
 800784c:	4770      	bx	lr
 800784e:	4618      	mov	r0, r3
 8007850:	4770      	bx	lr
 8007852:	2001      	movs	r0, #1
    }
 8007854:	4770      	bx	lr

08007856 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007856:	b510      	push	{r4, lr}
 8007858:	2110      	movs	r1, #16
 800785a:	4604      	mov	r4, r0
 800785c:	f021 fa17 	bl	8028c8e <_ZdlPvj>
 8007860:	4620      	mov	r0, r4
 8007862:	bd10      	pop	{r4, pc}

08007864 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007864:	b510      	push	{r4, lr}
 8007866:	4b03      	ldr	r3, [pc, #12]	; (8007874 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007868:	6003      	str	r3, [r0, #0]
 800786a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800786c:	f00b fc96 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007870:	4620      	mov	r0, r4
 8007872:	bd10      	pop	{r4, pc}
 8007874:	0802d07c 	.word	0x0802d07c

08007878 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007878:	b507      	push	{r0, r1, r2, lr}
 800787a:	4b07      	ldr	r3, [pc, #28]	; (8007898 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 800787c:	6003      	str	r3, [r0, #0]
 800787e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007880:	f00b fc8c 	bl	801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007884:	9801      	ldr	r0, [sp, #4]
 8007886:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800788a:	f021 fa00 	bl	8028c8e <_ZdlPvj>
 800788e:	9801      	ldr	r0, [sp, #4]
 8007890:	b003      	add	sp, #12
 8007892:	f85d fb04 	ldr.w	pc, [sp], #4
 8007896:	bf00      	nop
 8007898:	0802d07c 	.word	0x0802d07c

0800789c <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800789c:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80078a0:	4288      	cmp	r0, r1
{
 80078a2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80078a4:	d105      	bne.n	80078b2 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80078a6:	f00d f97b 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80078aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80078ae:	f7fb bfcd 	b.w	800384c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80078b2:	bd08      	pop	{r3, pc}

080078b4 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80078b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078b8:	ed2d 8b04 	vpush	{d8-d9}
 80078bc:	4604      	mov	r4, r0
 80078be:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80078c0:	46a3      	mov	fp, r4
 80078c2:	2500      	movs	r5, #0
 80078c4:	f00e fdec 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 80078c8:	4bd1      	ldr	r3, [pc, #836]	; (8007c10 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80078ca:	63e5      	str	r5, [r4, #60]	; 0x3c
 80078cc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80078d0:	2226      	movs	r2, #38	; 0x26
 80078d2:	4629      	mov	r1, r5
 80078d4:	4658      	mov	r0, fp
 80078d6:	f022 f9f2 	bl	8029cbe <memset>
 80078da:	4658      	mov	r0, fp
 80078dc:	f7fa fee0 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 80078e0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80078e4:	26ff      	movs	r6, #255	; 0xff
 80078e6:	4bcb      	ldr	r3, [pc, #812]	; (8007c14 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 80078e8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80078ea:	2226      	movs	r2, #38	; 0x26
 80078ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80078f0:	4629      	mov	r1, r5
 80078f2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80078f6:	4650      	mov	r0, sl
 80078f8:	66a5      	str	r5, [r4, #104]	; 0x68
 80078fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078fe:	f022 f9de 	bl	8029cbe <memset>
 8007902:	4650      	mov	r0, sl
 8007904:	f7fa fecc 	bl	80026a0 <_ZN8touchgfx6WidgetC1Ev>
 8007908:	4bc3      	ldr	r3, [pc, #780]	; (8007c18 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800790a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800790c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007910:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007914:	a90a      	add	r1, sp, #40	; 0x28
 8007916:	4650      	mov	r0, sl
 8007918:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800791c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007920:	f00a fc35 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007924:	4648      	mov	r0, r9
 8007926:	f7fa fecd 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 800792a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800792e:	4bbb      	ldr	r3, [pc, #748]	; (8007c1c <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007930:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007934:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007938:	4638      	mov	r0, r7
 800793a:	f009 faf1 	bl	8010f20 <_ZN8touchgfx4LineC1Ev>
 800793e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007942:	4618      	mov	r0, r3
 8007944:	9303      	str	r3, [sp, #12]
 8007946:	f7f9 fb7d 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800794a:	4bb5      	ldr	r3, [pc, #724]	; (8007c20 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 800794c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007950:	3324      	adds	r3, #36	; 0x24
 8007952:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007956:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800795a:	4618      	mov	r0, r3
 800795c:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007960:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007964:	ee09 3a10 	vmov	s18, r3
 8007968:	f00a fd52 	bl	8012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800796c:	4640      	mov	r0, r8
 800796e:	f7fa fea9 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007972:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007976:	4618      	mov	r0, r3
 8007978:	ee08 3a10 	vmov	s16, r3
 800797c:	f7fa fea2 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
 8007980:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007984:	4618      	mov	r0, r3
 8007986:	ee08 3a90 	vmov	s17, r3
 800798a:	f7fa fe9b 	bl	80026c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800798e:	4aa5      	ldr	r2, [pc, #660]	; (8007c24 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007990:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007994:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007998:	4aa3      	ldr	r2, [pc, #652]	; (8007c28 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800799a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800799e:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 80079a2:	f504 7024 	add.w	r0, r4, #656	; 0x290
 80079a6:	f00b fbef 	bl	8013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80079aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80079ae:	462a      	mov	r2, r5
 80079b0:	4658      	mov	r0, fp
 80079b2:	9300      	str	r3, [sp, #0]
 80079b4:	4629      	mov	r1, r5
 80079b6:	23f0      	movs	r3, #240	; 0xf0
 80079b8:	f7fa fe5e 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 80079bc:	1d26      	adds	r6, r4, #4
        color = newColor;
 80079be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80079c2:	66a3      	str	r3, [r4, #104]	; 0x68
 80079c4:	4659      	mov	r1, fp
 80079c6:	4630      	mov	r0, r6
 80079c8:	f007 fe52 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80079cc:	462a      	mov	r2, r5
 80079ce:	4650      	mov	r0, sl
 80079d0:	4629      	mov	r1, r5
 80079d2:	f7fa fe44 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80079d6:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80079d8:	4650      	mov	r0, sl
 80079da:	a90a      	add	r1, sp, #40	; 0x28
 80079dc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079e0:	f00a fbd5 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079e4:	4651      	mov	r1, sl
 80079e6:	4630      	mov	r0, r6
 80079e8:	f007 fe42 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80079ec:	f44f 729a 	mov.w	r2, #308	; 0x134
 80079f0:	2156      	movs	r1, #86	; 0x56
 80079f2:	4648      	mov	r0, r9
 80079f4:	f7fa fe33 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80079f8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80079fc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007a00:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007a04:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007a08:	4650      	mov	r0, sl
 8007a0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007a0e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007a12:	4649      	mov	r1, r9
 8007a14:	4798      	blx	r3
 8007a16:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007a1a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007a1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a22:	4b82      	ldr	r3, [pc, #520]	; (8007c2c <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007a24:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007a26:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007a2a:	b92b      	cbnz	r3, 8007a38 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007a2c:	4b80      	ldr	r3, [pc, #512]	; (8007c30 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007a2e:	4a81      	ldr	r2, [pc, #516]	; (8007c34 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007a30:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a32:	4881      	ldr	r0, [pc, #516]	; (8007c38 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007a34:	f021 ff3e 	bl	80298b4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007a38:	4b80      	ldr	r3, [pc, #512]	; (8007c3c <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a3a:	881b      	ldrh	r3, [r3, #0]
 8007a3c:	2b12      	cmp	r3, #18
 8007a3e:	d803      	bhi.n	8007a48 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007a40:	4b7f      	ldr	r3, [pc, #508]	; (8007c40 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007a42:	4a7c      	ldr	r2, [pc, #496]	; (8007c34 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007a44:	2161      	movs	r1, #97	; 0x61
 8007a46:	e7f4      	b.n	8007a32 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007a48:	4b7e      	ldr	r3, [pc, #504]	; (8007c44 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007a4a:	2112      	movs	r1, #18
 8007a4c:	6818      	ldr	r0, [r3, #0]
 8007a4e:	f000 fb1b 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8007a52:	4a7d      	ldr	r2, [pc, #500]	; (8007c48 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007a54:	4603      	mov	r3, r0
 8007a56:	2104      	movs	r1, #4
 8007a58:	4650      	mov	r0, sl
 8007a5a:	f010 fa11 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007a5e:	4648      	mov	r0, r9
        wc1 = value;
 8007a60:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007a64:	f009 ff98 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007a68:	4b78      	ldr	r3, [pc, #480]	; (8007c4c <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007a6a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007a6c:	a90a      	add	r1, sp, #40	; 0x28
 8007a6e:	2313      	movs	r3, #19
 8007a70:	4648      	mov	r0, r9
 8007a72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a76:	f009 ffaf 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a7a:	4649      	mov	r1, r9
 8007a7c:	4630      	mov	r0, r6
 8007a7e:	f007 fdf7 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007a82:	230a      	movs	r3, #10
 8007a84:	9300      	str	r3, [sp, #0]
 8007a86:	2232      	movs	r2, #50	; 0x32
 8007a88:	23f0      	movs	r3, #240	; 0xf0
 8007a8a:	4629      	mov	r1, r5
 8007a8c:	4638      	mov	r0, r7
 8007a8e:	f7fa fdf3 	bl	8002678 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a92:	9b03      	ldr	r3, [sp, #12]
 8007a94:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a98:	22a0      	movs	r2, #160	; 0xa0
 8007a9a:	4611      	mov	r1, r2
 8007a9c:	4638      	mov	r0, r7
 8007a9e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007aa2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007aa6:	f009 fb51 	bl	801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007aaa:	22a0      	movs	r2, #160	; 0xa0
 8007aac:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007ab0:	4638      	mov	r0, r7
 8007ab2:	f009 fb56 	bl	8011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007ab6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007aba:	2b20      	cmp	r3, #32
 8007abc:	d005      	beq.n	8007aca <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007abe:	2320      	movs	r3, #32
 8007ac0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007ac4:	4638      	mov	r0, r7
 8007ac6:	f009 fa4b 	bl	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007aca:	4638      	mov	r0, r7
 8007acc:	2101      	movs	r1, #1
 8007ace:	f009 fb53 	bl	8011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007ad2:	4639      	mov	r1, r7
 8007ad4:	4630      	mov	r0, r6
 8007ad6:	f007 fdcb 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007ada:	ee19 0a10 	vmov	r0, s18
 8007ade:	22f0      	movs	r2, #240	; 0xf0
 8007ae0:	2121      	movs	r1, #33	; 0x21
 8007ae2:	f7fa fdbc 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007ae6:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007ae8:	aa0a      	add	r2, sp, #40	; 0x28
 8007aea:	a909      	add	r1, sp, #36	; 0x24
 8007aec:	ee19 0a10 	vmov	r0, s18
 8007af0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007af4:	2302      	movs	r3, #2
 8007af6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007afa:	f00a f952 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007afe:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007b00:	ee19 0a10 	vmov	r0, s18
 8007b04:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007b08:	f7fa fdfe 	bl	8002708 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007b0c:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007b10:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007b14:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007b18:	ee19 1a10 	vmov	r1, s18
 8007b1c:	4630      	mov	r0, r6
        colorPressed = col;
 8007b1e:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007b22:	ad04      	add	r5, sp, #16
 8007b24:	f007 fda4 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007b28:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007b2c:	225b      	movs	r2, #91	; 0x5b
 8007b2e:	4640      	mov	r0, r8
 8007b30:	2105      	movs	r1, #5
 8007b32:	f7fa fd94 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007b36:	4641      	mov	r1, r8
 8007b38:	4628      	mov	r0, r5
        color = newColor;
 8007b3a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007b3e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007b42:	f009 fcaf 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007b4a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007b4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007b52:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007c4c <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007b56:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007b5a:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007b5c:	a90a      	add	r1, sp, #40	; 0x28
 8007b5e:	4640      	mov	r0, r8
 8007b60:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b64:	f009 ff38 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b68:	4641      	mov	r1, r8
 8007b6a:	4630      	mov	r0, r6
 8007b6c:	f007 fd80 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007b70:	ee18 0a10 	vmov	r0, s16
 8007b74:	2223      	movs	r2, #35	; 0x23
 8007b76:	2145      	movs	r1, #69	; 0x45
 8007b78:	f7fa fd71 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007b7c:	ee18 1a10 	vmov	r1, s16
 8007b80:	4628      	mov	r0, r5
        color = newColor;
 8007b82:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007b86:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007b8a:	f009 fc8b 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b8e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007b92:	ee18 3a10 	vmov	r3, s16
 8007b96:	333c      	adds	r3, #60	; 0x3c
 8007b98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b9c:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007b9e:	ee18 0a10 	vmov	r0, s16
 8007ba2:	a90a      	add	r1, sp, #40	; 0x28
 8007ba4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ba8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007bac:	f009 ff14 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bb0:	ee18 1a10 	vmov	r1, s16
 8007bb4:	4630      	mov	r0, r6
 8007bb6:	f007 fd5b 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007bba:	ee18 0a90 	vmov	r0, s17
 8007bbe:	220c      	movs	r2, #12
 8007bc0:	2136      	movs	r1, #54	; 0x36
 8007bc2:	f7fa fd4c 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007bc6:	ee18 1a90 	vmov	r1, s17
 8007bca:	4628      	mov	r0, r5
        color = newColor;
 8007bcc:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007bd0:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007bd4:	f009 fc66 	bl	80114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007bdc:	ee18 3a90 	vmov	r3, s17
 8007be0:	333c      	adds	r3, #60	; 0x3c
 8007be2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007be6:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007be8:	ee18 0a90 	vmov	r0, s17
 8007bec:	a90a      	add	r1, sp, #40	; 0x28
 8007bee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bf2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007bf6:	f009 feef 	bl	80119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bfa:	4630      	mov	r0, r6
 8007bfc:	ee18 1a90 	vmov	r1, s17
 8007c00:	f007 fd36 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007c04:	4620      	mov	r0, r4
 8007c06:	b00d      	add	sp, #52	; 0x34
 8007c08:	ecbd 8b04 	vpop	{d8-d9}
 8007c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c10:	0802d07c 	.word	0x0802d07c
 8007c14:	0802ddd0 	.word	0x0802ddd0
 8007c18:	0802df98 	.word	0x0802df98
 8007c1c:	0802b468 	.word	0x0802b468
 8007c20:	0802db04 	.word	0x0802db04
 8007c24:	0802d064 	.word	0x0802d064
 8007c28:	0800789d 	.word	0x0800789d
 8007c2c:	20012dfc 	.word	0x20012dfc
 8007c30:	0802b2a8 	.word	0x0802b2a8
 8007c34:	0802b3aa 	.word	0x0802b3aa
 8007c38:	0802b325 	.word	0x0802b325
 8007c3c:	20012e00 	.word	0x20012e00
 8007c40:	0802b36c 	.word	0x0802b36c
 8007c44:	20012e08 	.word	0x20012e08
 8007c48:	0802b3e2 	.word	0x0802b3e2
 8007c4c:	0802b458 	.word	0x0802b458

08007c50 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007c50:	4770      	bx	lr

08007c52 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007c52:	4770      	bx	lr

08007c54 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007c54:	b510      	push	{r4, lr}
}
 8007c56:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007c58:	4604      	mov	r4, r0
}
 8007c5a:	f021 f818 	bl	8028c8e <_ZdlPvj>
 8007c5e:	4620      	mov	r0, r4
 8007c60:	bd10      	pop	{r4, pc}
	...

08007c64 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007c64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007c68:	4604      	mov	r4, r0
 8007c6a:	4626      	mov	r6, r4
 8007c6c:	f00e fc18 	bl	80164a0 <_ZN8touchgfx6ScreenC1Ev>
 8007c70:	2500      	movs	r5, #0
 8007c72:	4b2e      	ldr	r3, [pc, #184]	; (8007d2c <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007c74:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007c76:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007c7a:	4b2d      	ldr	r3, [pc, #180]	; (8007d30 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007c7c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007c7e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007c82:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007c86:	23ff      	movs	r3, #255	; 0xff
 8007c88:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007c8c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007c90:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007c94:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007c98:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007c9c:	4a25      	ldr	r2, [pc, #148]	; (8007d34 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007c9e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007ca2:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007ca6:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007ca8:	a901      	add	r1, sp, #4
 8007caa:	4638      	mov	r0, r7
 8007cac:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007cb0:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007cb4:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007cb8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007cbc:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007cc0:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007cc4:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007cc8:	66a5      	str	r5, [r4, #104]	; 0x68
 8007cca:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007cce:	f00a fa5e 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007cd2:	462a      	mov	r2, r5
 8007cd4:	4629      	mov	r1, r5
 8007cd6:	4630      	mov	r0, r6
 8007cd8:	f7fa fcc1 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007cdc:	4630      	mov	r0, r6
 8007cde:	21f0      	movs	r1, #240	; 0xf0
 8007ce0:	f7f9 f8fc 	bl	8000edc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007ce4:	4630      	mov	r0, r6
 8007ce6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007cea:	f7f9 f8f9 	bl	8000ee0 <_ZN8touchgfx8Drawable9setHeightEs>
 8007cee:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007cf2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007cf6:	66a3      	str	r3, [r4, #104]	; 0x68
 8007cf8:	4631      	mov	r1, r6
 8007cfa:	4640      	mov	r0, r8
 8007cfc:	f007 fcb8 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007d00:	462a      	mov	r2, r5
 8007d02:	4638      	mov	r0, r7
 8007d04:	f06f 0102 	mvn.w	r1, #2
 8007d08:	f7fa fca9 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8007d0c:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007d0e:	a901      	add	r1, sp, #4
 8007d10:	4638      	mov	r0, r7
 8007d12:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007d16:	f00a fa3a 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007d1a:	4640      	mov	r0, r8
 8007d1c:	4639      	mov	r1, r7
 8007d1e:	f007 fca7 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d22:	4620      	mov	r0, r4
 8007d24:	b002      	add	sp, #8
 8007d26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007d2a:	bf00      	nop
 8007d2c:	0802d0b0 	.word	0x0802d0b0
 8007d30:	0802ddd0 	.word	0x0802ddd0
 8007d34:	0802df98 	.word	0x0802df98

08007d38 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007d38:	4770      	bx	lr
	...

08007d3c <_Z23getFont_verdana_10_4bppv>:
{
 8007d3c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007d3e:	4d17      	ldr	r5, [pc, #92]	; (8007d9c <_Z23getFont_verdana_10_4bppv+0x60>)
 8007d40:	682c      	ldr	r4, [r5, #0]
 8007d42:	f3bf 8f5b 	dmb	ish
 8007d46:	f014 0401 	ands.w	r4, r4, #1
{
 8007d4a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007d4c:	d122      	bne.n	8007d94 <_Z23getFont_verdana_10_4bppv+0x58>
 8007d4e:	4628      	mov	r0, r5
 8007d50:	f020 ff9f 	bl	8028c92 <__cxa_guard_acquire>
 8007d54:	b1f0      	cbz	r0, 8007d94 <_Z23getFont_verdana_10_4bppv+0x58>
 8007d56:	233f      	movs	r3, #63	; 0x3f
 8007d58:	9309      	str	r3, [sp, #36]	; 0x24
 8007d5a:	4b11      	ldr	r3, [pc, #68]	; (8007da0 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007d5c:	9308      	str	r3, [sp, #32]
 8007d5e:	4b11      	ldr	r3, [pc, #68]	; (8007da4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007d60:	9307      	str	r3, [sp, #28]
 8007d62:	2301      	movs	r3, #1
 8007d64:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007d68:	9304      	str	r3, [sp, #16]
 8007d6a:	2304      	movs	r3, #4
 8007d6c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007d70:	230a      	movs	r3, #10
 8007d72:	490d      	ldr	r1, [pc, #52]	; (8007da8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007d74:	9300      	str	r3, [sp, #0]
 8007d76:	225f      	movs	r2, #95	; 0x5f
 8007d78:	230c      	movs	r3, #12
 8007d7a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d7e:	480b      	ldr	r0, [pc, #44]	; (8007dac <_Z23getFont_verdana_10_4bppv+0x70>)
 8007d80:	940a      	str	r4, [sp, #40]	; 0x28
 8007d82:	9401      	str	r4, [sp, #4]
 8007d84:	f7fd f9ea 	bl	800515c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d88:	4809      	ldr	r0, [pc, #36]	; (8007db0 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007d8a:	f021 fdb1 	bl	80298f0 <atexit>
 8007d8e:	4628      	mov	r0, r5
 8007d90:	f020 ff8b 	bl	8028caa <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007d94:	4805      	ldr	r0, [pc, #20]	; (8007dac <_Z23getFont_verdana_10_4bppv+0x70>)
 8007d96:	b00f      	add	sp, #60	; 0x3c
 8007d98:	bd30      	pop	{r4, r5, pc}
 8007d9a:	bf00      	nop
 8007d9c:	20001ec4 	.word	0x20001ec4
 8007da0:	08044c64 	.word	0x08044c64
 8007da4:	08044dc4 	.word	0x08044dc4
 8007da8:	08043f4c 	.word	0x08043f4c
 8007dac:	20001ec8 	.word	0x20001ec8
 8007db0:	08007d39 	.word	0x08007d39

08007db4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007db4:	4770      	bx	lr
	...

08007db8 <_Z23getFont_verdana_12_4bppv>:
{
 8007db8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007dba:	4d17      	ldr	r5, [pc, #92]	; (8007e18 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007dbc:	682c      	ldr	r4, [r5, #0]
 8007dbe:	f3bf 8f5b 	dmb	ish
 8007dc2:	f014 0401 	ands.w	r4, r4, #1
{
 8007dc6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007dc8:	d122      	bne.n	8007e10 <_Z23getFont_verdana_12_4bppv+0x58>
 8007dca:	4628      	mov	r0, r5
 8007dcc:	f020 ff61 	bl	8028c92 <__cxa_guard_acquire>
 8007dd0:	b1f0      	cbz	r0, 8007e10 <_Z23getFont_verdana_12_4bppv+0x58>
 8007dd2:	233f      	movs	r3, #63	; 0x3f
 8007dd4:	9309      	str	r3, [sp, #36]	; 0x24
 8007dd6:	4b11      	ldr	r3, [pc, #68]	; (8007e1c <_Z23getFont_verdana_12_4bppv+0x64>)
 8007dd8:	9308      	str	r3, [sp, #32]
 8007dda:	4b11      	ldr	r3, [pc, #68]	; (8007e20 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007ddc:	9307      	str	r3, [sp, #28]
 8007dde:	2301      	movs	r3, #1
 8007de0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007de4:	9304      	str	r3, [sp, #16]
 8007de6:	2304      	movs	r3, #4
 8007de8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007dec:	230c      	movs	r3, #12
 8007dee:	490d      	ldr	r1, [pc, #52]	; (8007e24 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007df0:	9300      	str	r3, [sp, #0]
 8007df2:	2260      	movs	r2, #96	; 0x60
 8007df4:	230f      	movs	r3, #15
 8007df6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007dfa:	480b      	ldr	r0, [pc, #44]	; (8007e28 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007dfc:	940a      	str	r4, [sp, #40]	; 0x28
 8007dfe:	9401      	str	r4, [sp, #4]
 8007e00:	f7fd f9ac 	bl	800515c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e04:	4809      	ldr	r0, [pc, #36]	; (8007e2c <_Z23getFont_verdana_12_4bppv+0x74>)
 8007e06:	f021 fd73 	bl	80298f0 <atexit>
 8007e0a:	4628      	mov	r0, r5
 8007e0c:	f020 ff4d 	bl	8028caa <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007e10:	4805      	ldr	r0, [pc, #20]	; (8007e28 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007e12:	b00f      	add	sp, #60	; 0x3c
 8007e14:	bd30      	pop	{r4, r5, pc}
 8007e16:	bf00      	nop
 8007e18:	20001ef4 	.word	0x20001ef4
 8007e1c:	08044c98 	.word	0x08044c98
 8007e20:	08044dc8 	.word	0x08044dc8
 8007e24:	08044480 	.word	0x08044480
 8007e28:	20001ef8 	.word	0x20001ef8
 8007e2c:	08007db5 	.word	0x08007db5

08007e30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007e30:	4770      	bx	lr
	...

08007e34 <_Z23getFont_verdana_19_4bppv>:
{
 8007e34:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007e36:	4d17      	ldr	r5, [pc, #92]	; (8007e94 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007e38:	682c      	ldr	r4, [r5, #0]
 8007e3a:	f3bf 8f5b 	dmb	ish
 8007e3e:	f014 0401 	ands.w	r4, r4, #1
{
 8007e42:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007e44:	d122      	bne.n	8007e8c <_Z23getFont_verdana_19_4bppv+0x58>
 8007e46:	4628      	mov	r0, r5
 8007e48:	f020 ff23 	bl	8028c92 <__cxa_guard_acquire>
 8007e4c:	b1f0      	cbz	r0, 8007e8c <_Z23getFont_verdana_19_4bppv+0x58>
 8007e4e:	233f      	movs	r3, #63	; 0x3f
 8007e50:	9309      	str	r3, [sp, #36]	; 0x24
 8007e52:	4b11      	ldr	r3, [pc, #68]	; (8007e98 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007e54:	9308      	str	r3, [sp, #32]
 8007e56:	4b11      	ldr	r3, [pc, #68]	; (8007e9c <_Z23getFont_verdana_19_4bppv+0x68>)
 8007e58:	9307      	str	r3, [sp, #28]
 8007e5a:	2301      	movs	r3, #1
 8007e5c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e60:	9304      	str	r3, [sp, #16]
 8007e62:	2304      	movs	r3, #4
 8007e64:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e68:	2313      	movs	r3, #19
 8007e6a:	490d      	ldr	r1, [pc, #52]	; (8007ea0 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007e6c:	9300      	str	r3, [sp, #0]
 8007e6e:	222f      	movs	r2, #47	; 0x2f
 8007e70:	2317      	movs	r3, #23
 8007e72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007e76:	480b      	ldr	r0, [pc, #44]	; (8007ea4 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007e78:	940a      	str	r4, [sp, #40]	; 0x28
 8007e7a:	9401      	str	r4, [sp, #4]
 8007e7c:	f7fd f96e 	bl	800515c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e80:	4809      	ldr	r0, [pc, #36]	; (8007ea8 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007e82:	f021 fd35 	bl	80298f0 <atexit>
 8007e86:	4628      	mov	r0, r5
 8007e88:	f020 ff0f 	bl	8028caa <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007e8c:	4805      	ldr	r0, [pc, #20]	; (8007ea4 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007e8e:	b00f      	add	sp, #60	; 0x3c
 8007e90:	bd30      	pop	{r4, r5, pc}
 8007e92:	bf00      	nop
 8007e94:	20001f24 	.word	0x20001f24
 8007e98:	08044d1c 	.word	0x08044d1c
 8007e9c:	08044dcc 	.word	0x08044dcc
 8007ea0:	080449c0 	.word	0x080449c0
 8007ea4:	20001f28 	.word	0x20001f28
 8007ea8:	08007e31 	.word	0x08007e31

08007eac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007eac:	4770      	bx	lr
	...

08007eb0 <_Z23getFont_verdana_40_4bppv>:
{
 8007eb0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007eb2:	4d16      	ldr	r5, [pc, #88]	; (8007f0c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007eb4:	682c      	ldr	r4, [r5, #0]
 8007eb6:	f3bf 8f5b 	dmb	ish
 8007eba:	f014 0401 	ands.w	r4, r4, #1
{
 8007ebe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007ec0:	d120      	bne.n	8007f04 <_Z23getFont_verdana_40_4bppv+0x54>
 8007ec2:	4628      	mov	r0, r5
 8007ec4:	f020 fee5 	bl	8028c92 <__cxa_guard_acquire>
 8007ec8:	b1e0      	cbz	r0, 8007f04 <_Z23getFont_verdana_40_4bppv+0x54>
 8007eca:	233f      	movs	r3, #63	; 0x3f
 8007ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8007ece:	4b10      	ldr	r3, [pc, #64]	; (8007f10 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007ed0:	9308      	str	r3, [sp, #32]
 8007ed2:	4b10      	ldr	r3, [pc, #64]	; (8007f14 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007ed4:	4910      	ldr	r1, [pc, #64]	; (8007f18 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007ed6:	4811      	ldr	r0, [pc, #68]	; (8007f1c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007ed8:	940a      	str	r4, [sp, #40]	; 0x28
 8007eda:	2201      	movs	r2, #1
 8007edc:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007ee0:	2304      	movs	r3, #4
 8007ee2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007ee6:	2328      	movs	r3, #40	; 0x28
 8007ee8:	9300      	str	r3, [sp, #0]
 8007eea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007eee:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007ef2:	9405      	str	r4, [sp, #20]
 8007ef4:	f7fd f932 	bl	800515c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ef8:	4809      	ldr	r0, [pc, #36]	; (8007f20 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007efa:	f021 fcf9 	bl	80298f0 <atexit>
 8007efe:	4628      	mov	r0, r5
 8007f00:	f020 fed3 	bl	8028caa <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007f04:	4805      	ldr	r0, [pc, #20]	; (8007f1c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007f06:	b00f      	add	sp, #60	; 0x3c
 8007f08:	bd30      	pop	{r4, r5, pc}
 8007f0a:	bf00      	nop
 8007f0c:	20001f54 	.word	0x20001f54
 8007f10:	08044dc0 	.word	0x08044dc0
 8007f14:	08044dd0 	.word	0x08044dd0
 8007f18:	08044c54 	.word	0x08044c54
 8007f1c:	20001f58 	.word	0x20001f58
 8007f20:	08007ead 	.word	0x08007ead

08007f24 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007f24:	2000      	movs	r0, #0
 8007f26:	4770      	bx	lr

08007f28 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007f28:	2000      	movs	r0, #0
 8007f2a:	4770      	bx	lr

08007f2c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007f2c:	b40e      	push	{r1, r2, r3}
 8007f2e:	b503      	push	{r0, r1, lr}
 8007f30:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007f32:	2100      	movs	r1, #0
{
 8007f34:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007f38:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007f3a:	f00d fdef 	bl	8015b1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007f3e:	b002      	add	sp, #8
 8007f40:	f85d eb04 	ldr.w	lr, [sp], #4
 8007f44:	b003      	add	sp, #12
 8007f46:	4770      	bx	lr

08007f48 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007f48:	b40c      	push	{r2, r3}
 8007f4a:	b507      	push	{r0, r1, r2, lr}
 8007f4c:	ab04      	add	r3, sp, #16
 8007f4e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007f52:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007f54:	f00d fde2 	bl	8015b1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007f58:	b003      	add	sp, #12
 8007f5a:	f85d eb04 	ldr.w	lr, [sp], #4
 8007f5e:	b002      	add	sp, #8
 8007f60:	4770      	bx	lr
	...

08007f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007f64:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007f66:	b510      	push	{r4, lr}
 8007f68:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007f6a:	b373      	cbz	r3, 8007fca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007f6c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007f6e:	b92b      	cbnz	r3, 8007f7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007f70:	4b18      	ldr	r3, [pc, #96]	; (8007fd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007f72:	4a19      	ldr	r2, [pc, #100]	; (8007fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007f74:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007f76:	4819      	ldr	r0, [pc, #100]	; (8007fdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007f78:	f021 fc9c 	bl	80298b4 <__assert_func>
            return buffer[pos];
 8007f7c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007f7e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007f82:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007f84:	b30b      	cbz	r3, 8007fca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007f86:	f00f f9c6 	bl	8017316 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007f8a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007f8c:	2b01      	cmp	r3, #1
 8007f8e:	d803      	bhi.n	8007f98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007f90:	4b13      	ldr	r3, [pc, #76]	; (8007fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007f92:	4a14      	ldr	r2, [pc, #80]	; (8007fe4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007f94:	21cb      	movs	r1, #203	; 0xcb
 8007f96:	e7ee      	b.n	8007f76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007f98:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007f9a:	1c53      	adds	r3, r2, #1
 8007f9c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007f9e:	2b09      	cmp	r3, #9
 8007fa0:	4619      	mov	r1, r3
 8007fa2:	bf88      	it	hi
 8007fa4:	f1a3 010a 	subhi.w	r1, r3, #10
 8007fa8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007fac:	f640 103f 	movw	r0, #2367	; 0x93f
 8007fb0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007fb2:	4281      	cmp	r1, r0
 8007fb4:	d109      	bne.n	8007fca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007fb6:	2b0a      	cmp	r3, #10
 8007fb8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007fbc:	bf28      	it	cs
 8007fbe:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007fc0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007fc4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007fc6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007fc8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007fca:	4620      	mov	r0, r4
}
 8007fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007fd0:	f00f b8a4 	b.w	801711c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007fd4:	0802d0dc 	.word	0x0802d0dc
 8007fd8:	0802d0e5 	.word	0x0802d0e5
 8007fdc:	0802d190 	.word	0x0802d190
 8007fe0:	0802d1da 	.word	0x0802d1da
 8007fe4:	0802d1e8 	.word	0x0802d1e8

08007fe8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007fe8:	f00f b85f 	b.w	80170aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007fec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007fec:	b510      	push	{r4, lr}
 8007fee:	b086      	sub	sp, #24
 8007ff0:	ac02      	add	r4, sp, #8
 8007ff2:	e884 0006 	stmia.w	r4, {r1, r2}
 8007ff6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007ff8:	ab0a      	add	r3, sp, #40	; 0x28
 8007ffa:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007ffc:	9301      	str	r3, [sp, #4]
 8007ffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008000:	9300      	str	r3, [sp, #0]
 8008002:	4621      	mov	r1, r4
 8008004:	9b08      	ldr	r3, [sp, #32]
 8008006:	f00c f94d 	bl	80142a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800800a:	b006      	add	sp, #24
 800800c:	bd10      	pop	{r4, pc}
	...

08008010 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008010:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008012:	bb18      	cbnz	r0, 800805c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008014:	4b12      	ldr	r3, [pc, #72]	; (8008060 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008016:	4813      	ldr	r0, [pc, #76]	; (8008064 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008018:	681c      	ldr	r4, [r3, #0]
 800801a:	4913      	ldr	r1, [pc, #76]	; (8008068 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800801c:	b1b4      	cbz	r4, 800804c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800801e:	6822      	ldr	r2, [r4, #0]
 8008020:	4422      	add	r2, r4
 8008022:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008024:	6862      	ldr	r2, [r4, #4]
 8008026:	4422      	add	r2, r4
 8008028:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800802a:	68a2      	ldr	r2, [r4, #8]
 800802c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800802e:	4b0f      	ldr	r3, [pc, #60]	; (800806c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008030:	2200      	movs	r2, #0
 8008032:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008034:	f000 f838 	bl	80080a8 <_ZN17TypedTextDatabase8getFontsEv>
 8008038:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800803a:	f000 f833 	bl	80080a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800803e:	4b0c      	ldr	r3, [pc, #48]	; (8008070 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008040:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008042:	4b0c      	ldr	r3, [pc, #48]	; (8008074 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008044:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008046:	4b0c      	ldr	r3, [pc, #48]	; (8008078 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008048:	8018      	strh	r0, [r3, #0]
    }
}
 800804a:	e007      	b.n	800805c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800804c:	4b0b      	ldr	r3, [pc, #44]	; (800807c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800804e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008050:	4b0b      	ldr	r3, [pc, #44]	; (8008080 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008052:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008054:	4b0b      	ldr	r3, [pc, #44]	; (8008084 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008056:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008058:	2c00      	cmp	r4, #0
 800805a:	d1e8      	bne.n	800802e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800805c:	bd38      	pop	{r3, r4, r5, pc}
 800805e:	bf00      	nop
 8008060:	20001f84 	.word	0x20001f84
 8008064:	20001f88 	.word	0x20001f88
 8008068:	20001f8c 	.word	0x20001f8c
 800806c:	20001f90 	.word	0x20001f90
 8008070:	20012dfc 	.word	0x20012dfc
 8008074:	20012e04 	.word	0x20012e04
 8008078:	20012e00 	.word	0x20012e00
 800807c:	08044f28 	.word	0x08044f28
 8008080:	08044dd4 	.word	0x08044dd4
 8008084:	08045444 	.word	0x08045444

08008088 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008088:	4b04      	ldr	r3, [pc, #16]	; (800809c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800808a:	681b      	ldr	r3, [r3, #0]
 800808c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008090:	4b03      	ldr	r3, [pc, #12]	; (80080a0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008092:	681b      	ldr	r3, [r3, #0]
}
 8008094:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008098:	4770      	bx	lr
 800809a:	bf00      	nop
 800809c:	20001f8c 	.word	0x20001f8c
 80080a0:	20001f88 	.word	0x20001f88

080080a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80080a4:	2055      	movs	r0, #85	; 0x55
 80080a6:	4770      	bx	lr

080080a8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80080a8:	4800      	ldr	r0, [pc, #0]	; (80080ac <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80080aa:	4770      	bx	lr
 80080ac:	20001f94 	.word	0x20001f94

080080b0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80080b0:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80080b2:	f7ff febf 	bl	8007e34 <_Z23getFont_verdana_19_4bppv>
};
 80080b6:	4c06      	ldr	r4, [pc, #24]	; (80080d0 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80080b8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80080ba:	f7ff fef9 	bl	8007eb0 <_Z23getFont_verdana_40_4bppv>
};
 80080be:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80080c0:	f7ff fe3c 	bl	8007d3c <_Z23getFont_verdana_10_4bppv>
};
 80080c4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80080c6:	f7ff fe77 	bl	8007db8 <_Z23getFont_verdana_12_4bppv>
};
 80080ca:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80080cc:	bd10      	pop	{r4, pc}
 80080ce:	bf00      	nop
 80080d0:	20001f94 	.word	0x20001f94

080080d4 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80080d4:	4770      	bx	lr

080080d6 <_ZThn4_N20CalibrationPresenterD1Ev>:
 80080d6:	3804      	subs	r0, #4
 80080d8:	4770      	bx	lr

080080da <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80080da:	4770      	bx	lr

080080dc <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80080dc:	68c0      	ldr	r0, [r0, #12]
 80080de:	6803      	ldr	r3, [r0, #0]
 80080e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80080e2:	4718      	bx	r3

080080e4 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80080e4:	f1a0 0004 	sub.w	r0, r0, #4
 80080e8:	f7ff bff8 	b.w	80080dc <_ZN20CalibrationPresenter15setTimeoutValueEi>

080080ec <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80080ec:	b510      	push	{r4, lr}
 80080ee:	2110      	movs	r1, #16
 80080f0:	4604      	mov	r4, r0
 80080f2:	f020 fdcc 	bl	8028c8e <_ZdlPvj>
 80080f6:	4620      	mov	r0, r4
 80080f8:	bd10      	pop	{r4, pc}

080080fa <_ZThn4_N20CalibrationPresenterD0Ev>:
 80080fa:	f1a0 0004 	sub.w	r0, r0, #4
 80080fe:	e7f5      	b.n	80080ec <_ZN20CalibrationPresenterD0Ev>

08008100 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008100:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008102:	2200      	movs	r2, #0
 8008104:	6082      	str	r2, [r0, #8]
    : view(v)
 8008106:	4a04      	ldr	r2, [pc, #16]	; (8008118 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008108:	60c1      	str	r1, [r0, #12]
 800810a:	f102 0408 	add.w	r4, r2, #8
 800810e:	3224      	adds	r2, #36	; 0x24
 8008110:	6004      	str	r4, [r0, #0]
 8008112:	6042      	str	r2, [r0, #4]
}
 8008114:	bd10      	pop	{r4, pc}
 8008116:	bf00      	nop
 8008118:	0802d2bc 	.word	0x0802d2bc

0800811c <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 800811c:	4770      	bx	lr
	...

08008120 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008120:	b510      	push	{r4, lr}
 8008122:	4b03      	ldr	r3, [pc, #12]	; (8008130 <_ZN15CalibrationViewD1Ev+0x10>)
 8008124:	6003      	str	r3, [r0, #0]
 8008126:	4604      	mov	r4, r0
 8008128:	f7fa fa1e 	bl	8002568 <_ZN19CalibrationViewBaseD1Ev>
 800812c:	4620      	mov	r0, r4
 800812e:	bd10      	pop	{r4, pc}
 8008130:	0802d2f8 	.word	0x0802d2f8

08008134 <_ZN15CalibrationViewD0Ev>:
 8008134:	b510      	push	{r4, lr}
 8008136:	4604      	mov	r4, r0
 8008138:	f7ff fff2 	bl	8008120 <_ZN15CalibrationViewD1Ev>
 800813c:	4620      	mov	r0, r4
 800813e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008142:	f020 fda4 	bl	8028c8e <_ZdlPvj>
 8008146:	4620      	mov	r0, r4
 8008148:	bd10      	pop	{r4, pc}
	...

0800814c <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 800814c:	b510      	push	{r4, lr}
 800814e:	4604      	mov	r4, r0
 8008150:	f7fa fb1e 	bl	8002790 <_ZN19CalibrationViewBaseC1Ev>
 8008154:	4b01      	ldr	r3, [pc, #4]	; (800815c <_ZN15CalibrationViewC1Ev+0x10>)
 8008156:	6023      	str	r3, [r4, #0]
}
 8008158:	4620      	mov	r0, r4
 800815a:	bd10      	pop	{r4, pc}
 800815c:	0802d2f8 	.word	0x0802d2f8

08008160 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008160:	f7fa b9cf 	b.w	8002502 <_ZN19CalibrationViewBase11setupScreenEv>

08008164 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008164:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008166:	4a0a      	ldr	r2, [pc, #40]	; (8008190 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008168:	4605      	mov	r5, r0
 800816a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800816c:	460b      	mov	r3, r1
 800816e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008172:	2104      	movs	r1, #4
 8008174:	f00f fe84 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008178:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800817c:	f00d fdf8 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008180:	b92c      	cbnz	r4, 800818e <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8008182:	f00c fd0d 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008186:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800818a:	f7fb bc5f 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800818e:	bd38      	pop	{r3, r4, r5, pc}
 8008190:	0802d2ec 	.word	0x0802d2ec

08008194 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008194:	4770      	bx	lr

08008196 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8008196:	3804      	subs	r0, #4
 8008198:	4770      	bx	lr

0800819a <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 800819a:	4770      	bx	lr

0800819c <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 800819c:	4770      	bx	lr

0800819e <_ZN25Calibration_HallPresenterD0Ev>:
 800819e:	b510      	push	{r4, lr}
 80081a0:	2110      	movs	r1, #16
 80081a2:	4604      	mov	r4, r0
 80081a4:	f020 fd73 	bl	8028c8e <_ZdlPvj>
 80081a8:	4620      	mov	r0, r4
 80081aa:	bd10      	pop	{r4, pc}

080081ac <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80081ac:	f1a0 0004 	sub.w	r0, r0, #4
 80081b0:	e7f5      	b.n	800819e <_ZN25Calibration_HallPresenterD0Ev>

080081b2 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80081b2:	4770      	bx	lr

080081b4 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80081b4:	b510      	push	{r4, lr}
 80081b6:	2200      	movs	r2, #0
 80081b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80081ba:	4a04      	ldr	r2, [pc, #16]	; (80081cc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80081bc:	60c1      	str	r1, [r0, #12]
 80081be:	f102 0408 	add.w	r4, r2, #8
 80081c2:	3224      	adds	r2, #36	; 0x24
 80081c4:	6004      	str	r4, [r0, #0]
 80081c6:	6042      	str	r2, [r0, #4]
}
 80081c8:	bd10      	pop	{r4, pc}
 80081ca:	bf00      	nop
 80081cc:	0802d328 	.word	0x0802d328

080081d0 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80081d0:	4770      	bx	lr

080081d2 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80081d2:	4770      	bx	lr

080081d4 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80081d4:	b510      	push	{r4, lr}
 80081d6:	4b03      	ldr	r3, [pc, #12]	; (80081e4 <_ZN20Calibration_HallViewD1Ev+0x10>)
 80081d8:	6003      	str	r3, [r0, #0]
 80081da:	4604      	mov	r4, r0
 80081dc:	f7fa fd1c 	bl	8002c18 <_ZN24Calibration_HallViewBaseD1Ev>
 80081e0:	4620      	mov	r0, r4
 80081e2:	bd10      	pop	{r4, pc}
 80081e4:	0802d360 	.word	0x0802d360

080081e8 <_ZN20Calibration_HallViewD0Ev>:
 80081e8:	b510      	push	{r4, lr}
 80081ea:	4604      	mov	r4, r0
 80081ec:	f7ff fff2 	bl	80081d4 <_ZN20Calibration_HallViewD1Ev>
 80081f0:	4620      	mov	r0, r4
 80081f2:	f241 015c 	movw	r1, #4188	; 0x105c
 80081f6:	f020 fd4a 	bl	8028c8e <_ZdlPvj>
 80081fa:	4620      	mov	r0, r4
 80081fc:	bd10      	pop	{r4, pc}
	...

08008200 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008200:	b510      	push	{r4, lr}
 8008202:	4604      	mov	r4, r0
 8008204:	f7fa fd30 	bl	8002c68 <_ZN24Calibration_HallViewBaseC1Ev>
 8008208:	4b01      	ldr	r3, [pc, #4]	; (8008210 <_ZN20Calibration_HallViewC1Ev+0x10>)
 800820a:	6023      	str	r3, [r4, #0]
}
 800820c:	4620      	mov	r0, r4
 800820e:	bd10      	pop	{r4, pc}
 8008210:	0802d360 	.word	0x0802d360

08008214 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8008214:	f7fa bcdc 	b.w	8002bd0 <_ZN24Calibration_HallViewBase11setupScreenEv>

08008218 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008218:	4770      	bx	lr

0800821a <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800821a:	3804      	subs	r0, #4
 800821c:	4770      	bx	lr

0800821e <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800821e:	4770      	bx	lr

08008220 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008220:	4770      	bx	lr

08008222 <_ZN24Calibration_PadPresenterD0Ev>:
 8008222:	b510      	push	{r4, lr}
 8008224:	2110      	movs	r1, #16
 8008226:	4604      	mov	r4, r0
 8008228:	f020 fd31 	bl	8028c8e <_ZdlPvj>
 800822c:	4620      	mov	r0, r4
 800822e:	bd10      	pop	{r4, pc}

08008230 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008230:	f1a0 0004 	sub.w	r0, r0, #4
 8008234:	e7f5      	b.n	8008222 <_ZN24Calibration_PadPresenterD0Ev>

08008236 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008236:	4770      	bx	lr

08008238 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008238:	b510      	push	{r4, lr}
 800823a:	2200      	movs	r2, #0
 800823c:	6082      	str	r2, [r0, #8]
    : view(v)
 800823e:	4a04      	ldr	r2, [pc, #16]	; (8008250 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008240:	60c1      	str	r1, [r0, #12]
 8008242:	f102 0408 	add.w	r4, r2, #8
 8008246:	3224      	adds	r2, #36	; 0x24
 8008248:	6004      	str	r4, [r0, #0]
 800824a:	6042      	str	r2, [r0, #4]
}
 800824c:	bd10      	pop	{r4, pc}
 800824e:	bf00      	nop
 8008250:	0802d390 	.word	0x0802d390

08008254 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008254:	4770      	bx	lr

08008256 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008256:	4770      	bx	lr

08008258 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008258:	b510      	push	{r4, lr}
 800825a:	4b03      	ldr	r3, [pc, #12]	; (8008268 <_ZN19Calibration_PadViewD1Ev+0x10>)
 800825c:	6003      	str	r3, [r0, #0]
 800825e:	4604      	mov	r4, r0
 8008260:	f7fa fe8a 	bl	8002f78 <_ZN23Calibration_PadViewBaseD1Ev>
 8008264:	4620      	mov	r0, r4
 8008266:	bd10      	pop	{r4, pc}
 8008268:	0802d3c8 	.word	0x0802d3c8

0800826c <_ZN19Calibration_PadViewD0Ev>:
 800826c:	b510      	push	{r4, lr}
 800826e:	4604      	mov	r4, r0
 8008270:	f7ff fff2 	bl	8008258 <_ZN19Calibration_PadViewD1Ev>
 8008274:	4620      	mov	r0, r4
 8008276:	f241 015c 	movw	r1, #4188	; 0x105c
 800827a:	f020 fd08 	bl	8028c8e <_ZdlPvj>
 800827e:	4620      	mov	r0, r4
 8008280:	bd10      	pop	{r4, pc}
	...

08008284 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008284:	b510      	push	{r4, lr}
 8008286:	4604      	mov	r4, r0
 8008288:	f7fa fe9e 	bl	8002fc8 <_ZN23Calibration_PadViewBaseC1Ev>
 800828c:	4b01      	ldr	r3, [pc, #4]	; (8008294 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800828e:	6023      	str	r3, [r4, #0]
}
 8008290:	4620      	mov	r0, r4
 8008292:	bd10      	pop	{r4, pc}
 8008294:	0802d3c8 	.word	0x0802d3c8

08008298 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008298:	f7fa be4a 	b.w	8002f30 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800829c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800829c:	4770      	bx	lr

0800829e <_ZN19FrontendApplicationD0Ev>:
 800829e:	b510      	push	{r4, lr}
 80082a0:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80082a4:	4604      	mov	r4, r0
 80082a6:	f020 fcf2 	bl	8028c8e <_ZdlPvj>
 80082aa:	4620      	mov	r0, r4
 80082ac:	bd10      	pop	{r4, pc}

080082ae <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80082ae:	b510      	push	{r4, lr}
 80082b0:	4604      	mov	r4, r0
    {
        model.tick();
 80082b2:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80082b6:	f000 fb1d 	bl	80088f4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80082ba:	4620      	mov	r0, r4
    }
 80082bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80082c0:	f00c bd32 	b.w	8014d28 <_ZN8touchgfx11Application15handleTickEventEv>

080082c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80082c4:	b510      	push	{r4, lr}
 80082c6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80082c8:	f7fb fa90 	bl	80037ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80082cc:	4b01      	ldr	r3, [pc, #4]	; (80082d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80082ce:	6023      	str	r3, [r4, #0]
{

}
 80082d0:	4620      	mov	r0, r4
 80082d2:	bd10      	pop	{r4, pc}
 80082d4:	0802d400 	.word	0x0802d400

080082d8 <_ZN17Gauge_with_ValuesD1Ev>:
 80082d8:	b510      	push	{r4, lr}
 80082da:	4b03      	ldr	r3, [pc, #12]	; (80082e8 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80082dc:	6003      	str	r3, [r0, #0]
 80082de:	4604      	mov	r4, r0
 80082e0:	f7fc fd8a 	bl	8004df8 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80082e4:	4620      	mov	r0, r4
 80082e6:	bd10      	pop	{r4, pc}
 80082e8:	0802d454 	.word	0x0802d454

080082ec <_ZN17Gauge_with_ValuesD0Ev>:
 80082ec:	b510      	push	{r4, lr}
 80082ee:	4604      	mov	r4, r0
 80082f0:	f7ff fff2 	bl	80082d8 <_ZN17Gauge_with_ValuesD1Ev>
 80082f4:	4620      	mov	r0, r4
 80082f6:	f44f 7162 	mov.w	r1, #904	; 0x388
 80082fa:	f020 fcc8 	bl	8028c8e <_ZdlPvj>
 80082fe:	4620      	mov	r0, r4
 8008300:	bd10      	pop	{r4, pc}
	...

08008304 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8008304:	b510      	push	{r4, lr}
 8008306:	4604      	mov	r4, r0
 8008308:	f7fc fd80 	bl	8004e0c <_ZN21Gauge_with_ValuesBaseC1Ev>
 800830c:	4b01      	ldr	r3, [pc, #4]	; (8008314 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 800830e:	6023      	str	r3, [r4, #0]
{

}
 8008310:	4620      	mov	r0, r4
 8008312:	bd10      	pop	{r4, pc}
 8008314:	0802d454 	.word	0x0802d454

08008318 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8008318:	f7fc bd6f 	b.w	8004dfa <_ZN21Gauge_with_ValuesBase10initializeEv>

0800831c <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800831c:	4770      	bx	lr

0800831e <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800831e:	3804      	subs	r0, #4
 8008320:	4770      	bx	lr

08008322 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008322:	4770      	bx	lr

08008324 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008324:	68c0      	ldr	r0, [r0, #12]
 8008326:	6803      	ldr	r3, [r0, #0]
 8008328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800832a:	4718      	bx	r3

0800832c <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800832c:	f1a0 0004 	sub.w	r0, r0, #4
 8008330:	f7ff bff8 	b.w	8008324 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008334 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008334:	b510      	push	{r4, lr}
 8008336:	2110      	movs	r1, #16
 8008338:	4604      	mov	r4, r0
 800833a:	f020 fca8 	bl	8028c8e <_ZdlPvj>
 800833e:	4620      	mov	r0, r4
 8008340:	bd10      	pop	{r4, pc}

08008342 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008342:	f1a0 0004 	sub.w	r0, r0, #4
 8008346:	e7f5      	b.n	8008334 <_ZN18Main_MenuPresenterD0Ev>

08008348 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008348:	b510      	push	{r4, lr}
 800834a:	2200      	movs	r2, #0
 800834c:	6082      	str	r2, [r0, #8]
    : view(v)
 800834e:	4a04      	ldr	r2, [pc, #16]	; (8008360 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008350:	60c1      	str	r1, [r0, #12]
 8008352:	f102 0408 	add.w	r4, r2, #8
 8008356:	3224      	adds	r2, #36	; 0x24
 8008358:	6004      	str	r4, [r0, #0]
 800835a:	6042      	str	r2, [r0, #4]
}
 800835c:	bd10      	pop	{r4, pc}
 800835e:	bf00      	nop
 8008360:	0802d4e0 	.word	0x0802d4e0

08008364 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008364:	4770      	bx	lr
	...

08008368 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008368:	b510      	push	{r4, lr}
 800836a:	4b03      	ldr	r3, [pc, #12]	; (8008378 <_ZN13Main_MenuViewD1Ev+0x10>)
 800836c:	6003      	str	r3, [r0, #0]
 800836e:	4604      	mov	r4, r0
 8008370:	f7fc ff48 	bl	8005204 <_ZN17Main_MenuViewBaseD1Ev>
 8008374:	4620      	mov	r0, r4
 8008376:	bd10      	pop	{r4, pc}
 8008378:	0802d518 	.word	0x0802d518

0800837c <_ZN13Main_MenuViewD0Ev>:
 800837c:	b510      	push	{r4, lr}
 800837e:	4604      	mov	r4, r0
 8008380:	f7ff fff2 	bl	8008368 <_ZN13Main_MenuViewD1Ev>
 8008384:	4620      	mov	r0, r4
 8008386:	f241 117c 	movw	r1, #4476	; 0x117c
 800838a:	f020 fc80 	bl	8028c8e <_ZdlPvj>
 800838e:	4620      	mov	r0, r4
 8008390:	bd10      	pop	{r4, pc}
	...

08008394 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008394:	b510      	push	{r4, lr}
 8008396:	4604      	mov	r4, r0
 8008398:	f7fc ff7e 	bl	8005298 <_ZN17Main_MenuViewBaseC1Ev>
 800839c:	4b01      	ldr	r3, [pc, #4]	; (80083a4 <_ZN13Main_MenuViewC1Ev+0x10>)
 800839e:	6023      	str	r3, [r4, #0]
}
 80083a0:	4620      	mov	r0, r4
 80083a2:	bd10      	pop	{r4, pc}
 80083a4:	0802d518 	.word	0x0802d518

080083a8 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80083a8:	f7fc bf08 	b.w	80051bc <_ZN17Main_MenuViewBase11setupScreenEv>

080083ac <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80083ac:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80083ae:	4a0a      	ldr	r2, [pc, #40]	; (80083d8 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80083b0:	4605      	mov	r5, r0
 80083b2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80083b4:	460b      	mov	r3, r1
 80083b6:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80083ba:	2104      	movs	r1, #4
 80083bc:	f00f fd60 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80083c0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80083c4:	f00d fcd4 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80083c8:	b92c      	cbnz	r4, 80083d6 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80083ca:	f00c fbe9 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80083ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80083d2:	f7fb bb3b 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80083d6:	bd38      	pop	{r3, r4, r5, pc}
 80083d8:	0802d2ec 	.word	0x0802d2ec

080083dc <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80083dc:	4770      	bx	lr

080083de <_ZThn4_N20MeasurementPresenterD1Ev>:
 80083de:	3804      	subs	r0, #4
 80083e0:	4770      	bx	lr

080083e2 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80083e2:	4770      	bx	lr

080083e4 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80083e4:	68c0      	ldr	r0, [r0, #12]
 80083e6:	6803      	ldr	r3, [r0, #0]
 80083e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083ea:	4718      	bx	r3

080083ec <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80083ec:	f1a0 0004 	sub.w	r0, r0, #4
 80083f0:	f7ff bff8 	b.w	80083e4 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080083f4 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80083f4:	b510      	push	{r4, lr}
 80083f6:	2110      	movs	r1, #16
 80083f8:	4604      	mov	r4, r0
 80083fa:	f020 fc48 	bl	8028c8e <_ZdlPvj>
 80083fe:	4620      	mov	r0, r4
 8008400:	bd10      	pop	{r4, pc}

08008402 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008402:	f1a0 0004 	sub.w	r0, r0, #4
 8008406:	e7f5      	b.n	80083f4 <_ZN20MeasurementPresenterD0Ev>

08008408 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008408:	b510      	push	{r4, lr}
 800840a:	2200      	movs	r2, #0
 800840c:	6082      	str	r2, [r0, #8]
    : view(v)
 800840e:	4a04      	ldr	r2, [pc, #16]	; (8008420 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008410:	60c1      	str	r1, [r0, #12]
 8008412:	f102 0408 	add.w	r4, r2, #8
 8008416:	3224      	adds	r2, #36	; 0x24
 8008418:	6004      	str	r4, [r0, #0]
 800841a:	6042      	str	r2, [r0, #4]
}
 800841c:	bd10      	pop	{r4, pc}
 800841e:	bf00      	nop
 8008420:	0802d548 	.word	0x0802d548

08008424 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008424:	4770      	bx	lr
	...

08008428 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008428:	b510      	push	{r4, lr}
 800842a:	4b03      	ldr	r3, [pc, #12]	; (8008438 <_ZN15MeasurementViewD1Ev+0x10>)
 800842c:	6003      	str	r3, [r0, #0]
 800842e:	4604      	mov	r4, r0
 8008430:	f7fd f9a2 	bl	8005778 <_ZN19MeasurementViewBaseD1Ev>
 8008434:	4620      	mov	r0, r4
 8008436:	bd10      	pop	{r4, pc}
 8008438:	0802d580 	.word	0x0802d580

0800843c <_ZN15MeasurementViewD0Ev>:
 800843c:	b510      	push	{r4, lr}
 800843e:	4604      	mov	r4, r0
 8008440:	f7ff fff2 	bl	8008428 <_ZN15MeasurementViewD1Ev>
 8008444:	4620      	mov	r0, r4
 8008446:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800844a:	f020 fc20 	bl	8028c8e <_ZdlPvj>
 800844e:	4620      	mov	r0, r4
 8008450:	bd10      	pop	{r4, pc}
	...

08008454 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008454:	b510      	push	{r4, lr}
 8008456:	4604      	mov	r4, r0
 8008458:	f7fd f9c8 	bl	80057ec <_ZN19MeasurementViewBaseC1Ev>
 800845c:	4b01      	ldr	r3, [pc, #4]	; (8008464 <_ZN15MeasurementViewC1Ev+0x10>)
 800845e:	6023      	str	r3, [r4, #0]
}
 8008460:	4620      	mov	r0, r4
 8008462:	bd10      	pop	{r4, pc}
 8008464:	0802d580 	.word	0x0802d580

08008468 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008468:	f7fd b962 	b.w	8005730 <_ZN19MeasurementViewBase11setupScreenEv>

0800846c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800846c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800846e:	4a0a      	ldr	r2, [pc, #40]	; (8008498 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008470:	4605      	mov	r5, r0
 8008472:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008474:	460b      	mov	r3, r1
 8008476:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800847a:	2104      	movs	r1, #4
 800847c:	f00f fd00 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008480:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008484:	f00d fc74 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008488:	b92c      	cbnz	r4, 8008496 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800848a:	f00c fb89 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800848e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008492:	f7fb badb 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008496:	bd38      	pop	{r3, r4, r5, pc}
 8008498:	0802d2ec 	.word	0x0802d2ec

0800849c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800849c:	4770      	bx	lr

0800849e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800849e:	3804      	subs	r0, #4
 80084a0:	4770      	bx	lr

080084a2 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80084a2:	4770      	bx	lr

080084a4 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80084a4:	68c0      	ldr	r0, [r0, #12]
 80084a6:	6803      	ldr	r3, [r0, #0]
 80084a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80084aa:	4718      	bx	r3

080084ac <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80084ac:	f1a0 0004 	sub.w	r0, r0, #4
 80084b0:	f7ff bff8 	b.w	80084a4 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080084b4 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80084b4:	b510      	push	{r4, lr}
 80084b6:	2110      	movs	r1, #16
 80084b8:	4604      	mov	r4, r0
 80084ba:	f020 fbe8 	bl	8028c8e <_ZdlPvj>
 80084be:	4620      	mov	r0, r4
 80084c0:	bd10      	pop	{r4, pc}

080084c2 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80084c2:	f1a0 0004 	sub.w	r0, r0, #4
 80084c6:	e7f5      	b.n	80084b4 <_ZN29Measurement_AccuratePresenterD0Ev>

080084c8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80084c8:	b510      	push	{r4, lr}
 80084ca:	2200      	movs	r2, #0
 80084cc:	6082      	str	r2, [r0, #8]
    : view(v)
 80084ce:	4a04      	ldr	r2, [pc, #16]	; (80084e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80084d0:	60c1      	str	r1, [r0, #12]
 80084d2:	f102 0408 	add.w	r4, r2, #8
 80084d6:	3224      	adds	r2, #36	; 0x24
 80084d8:	6004      	str	r4, [r0, #0]
 80084da:	6042      	str	r2, [r0, #4]
}
 80084dc:	bd10      	pop	{r4, pc}
 80084de:	bf00      	nop
 80084e0:	0802d5b0 	.word	0x0802d5b0

080084e4 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80084e4:	4770      	bx	lr
	...

080084e8 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80084e8:	b510      	push	{r4, lr}
 80084ea:	4b03      	ldr	r3, [pc, #12]	; (80084f8 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80084ec:	6003      	str	r3, [r0, #0]
 80084ee:	4604      	mov	r4, r0
 80084f0:	f7fd fbc4 	bl	8005c7c <_ZN28Measurement_AccurateViewBaseD1Ev>
 80084f4:	4620      	mov	r0, r4
 80084f6:	bd10      	pop	{r4, pc}
 80084f8:	0802d5e8 	.word	0x0802d5e8

080084fc <_ZN24Measurement_AccurateViewD0Ev>:
 80084fc:	b510      	push	{r4, lr}
 80084fe:	4604      	mov	r4, r0
 8008500:	f7ff fff2 	bl	80084e8 <_ZN24Measurement_AccurateViewD1Ev>
 8008504:	4620      	mov	r0, r4
 8008506:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800850a:	f020 fbc0 	bl	8028c8e <_ZdlPvj>
 800850e:	4620      	mov	r0, r4
 8008510:	bd10      	pop	{r4, pc}
	...

08008514 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008514:	b510      	push	{r4, lr}
 8008516:	4604      	mov	r4, r0
 8008518:	f7fd fbea 	bl	8005cf0 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800851c:	4b01      	ldr	r3, [pc, #4]	; (8008524 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800851e:	6023      	str	r3, [r4, #0]
}
 8008520:	4620      	mov	r0, r4
 8008522:	bd10      	pop	{r4, pc}
 8008524:	0802d5e8 	.word	0x0802d5e8

08008528 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008528:	f7fd bb84 	b.w	8005c34 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800852c <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800852c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800852e:	4a0a      	ldr	r2, [pc, #40]	; (8008558 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008530:	4605      	mov	r5, r0
 8008532:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008534:	460b      	mov	r3, r1
 8008536:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800853a:	2104      	movs	r1, #4
 800853c:	f00f fca0 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008540:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008544:	f00d fc14 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008548:	b92c      	cbnz	r4, 8008556 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800854a:	f00c fb29 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800854e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008552:	f7fb ba7b 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008556:	bd38      	pop	{r3, r4, r5, pc}
 8008558:	0802d2ec 	.word	0x0802d2ec

0800855c <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800855c:	4770      	bx	lr

0800855e <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800855e:	3804      	subs	r0, #4
 8008560:	4770      	bx	lr

08008562 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008562:	4770      	bx	lr

08008564 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008564:	4770      	bx	lr

08008566 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008566:	b510      	push	{r4, lr}
 8008568:	2110      	movs	r1, #16
 800856a:	4604      	mov	r4, r0
 800856c:	f020 fb8f 	bl	8028c8e <_ZdlPvj>
 8008570:	4620      	mov	r0, r4
 8008572:	bd10      	pop	{r4, pc}

08008574 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008574:	f1a0 0004 	sub.w	r0, r0, #4
 8008578:	e7f5      	b.n	8008566 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800857a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800857a:	4770      	bx	lr

0800857c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800857c:	b510      	push	{r4, lr}
 800857e:	2200      	movs	r2, #0
 8008580:	6082      	str	r2, [r0, #8]
    : view(v)
 8008582:	4a04      	ldr	r2, [pc, #16]	; (8008594 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008584:	60c1      	str	r1, [r0, #12]
 8008586:	f102 0408 	add.w	r4, r2, #8
 800858a:	3224      	adds	r2, #36	; 0x24
 800858c:	6004      	str	r4, [r0, #0]
 800858e:	6042      	str	r2, [r0, #4]
}
 8008590:	bd10      	pop	{r4, pc}
 8008592:	bf00      	nop
 8008594:	0802d618 	.word	0x0802d618

08008598 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008598:	4770      	bx	lr
	...

0800859c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800859c:	b510      	push	{r4, lr}
 800859e:	4b03      	ldr	r3, [pc, #12]	; (80085ac <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80085a0:	6003      	str	r3, [r0, #0]
 80085a2:	4604      	mov	r4, r0
 80085a4:	f7fd fdf6 	bl	8006194 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80085a8:	4620      	mov	r0, r4
 80085aa:	bd10      	pop	{r4, pc}
 80085ac:	0802d650 	.word	0x0802d650

080085b0 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80085b0:	b510      	push	{r4, lr}
 80085b2:	4604      	mov	r4, r0
 80085b4:	f7ff fff2 	bl	800859c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80085b8:	4620      	mov	r0, r4
 80085ba:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80085be:	f020 fb66 	bl	8028c8e <_ZdlPvj>
 80085c2:	4620      	mov	r0, r4
 80085c4:	bd10      	pop	{r4, pc}
	...

080085c8 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80085c8:	b510      	push	{r4, lr}
 80085ca:	4604      	mov	r4, r0
 80085cc:	f7fd fe02 	bl	80061d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80085d0:	4b01      	ldr	r3, [pc, #4]	; (80085d8 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80085d2:	6023      	str	r3, [r4, #0]
}
 80085d4:	4620      	mov	r0, r4
 80085d6:	bd10      	pop	{r4, pc}
 80085d8:	0802d650 	.word	0x0802d650

080085dc <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80085dc:	f7fd bdcb 	b.w	8006176 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080085e0 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80085e0:	4770      	bx	lr

080085e2 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80085e2:	3804      	subs	r0, #4
 80085e4:	4770      	bx	lr

080085e6 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80085e6:	4770      	bx	lr

080085e8 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80085e8:	4770      	bx	lr

080085ea <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80085ea:	b510      	push	{r4, lr}
 80085ec:	2110      	movs	r1, #16
 80085ee:	4604      	mov	r4, r0
 80085f0:	f020 fb4d 	bl	8028c8e <_ZdlPvj>
 80085f4:	4620      	mov	r0, r4
 80085f6:	bd10      	pop	{r4, pc}

080085f8 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80085f8:	f1a0 0004 	sub.w	r0, r0, #4
 80085fc:	e7f5      	b.n	80085ea <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080085fe <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80085fe:	4770      	bx	lr

08008600 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008600:	b510      	push	{r4, lr}
 8008602:	2200      	movs	r2, #0
 8008604:	6082      	str	r2, [r0, #8]
    : view(v)
 8008606:	4a04      	ldr	r2, [pc, #16]	; (8008618 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008608:	60c1      	str	r1, [r0, #12]
 800860a:	f102 0408 	add.w	r4, r2, #8
 800860e:	3224      	adds	r2, #36	; 0x24
 8008610:	6004      	str	r4, [r0, #0]
 8008612:	6042      	str	r2, [r0, #4]
}
 8008614:	bd10      	pop	{r4, pc}
 8008616:	bf00      	nop
 8008618:	0802d67c 	.word	0x0802d67c

0800861c <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800861c:	4770      	bx	lr
	...

08008620 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008620:	b510      	push	{r4, lr}
 8008622:	4b03      	ldr	r3, [pc, #12]	; (8008630 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008624:	6003      	str	r3, [r0, #0]
 8008626:	4604      	mov	r4, r0
 8008628:	f7fd ff78 	bl	800651c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800862c:	4620      	mov	r0, r4
 800862e:	bd10      	pop	{r4, pc}
 8008630:	0802d6b4 	.word	0x0802d6b4

08008634 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008634:	b510      	push	{r4, lr}
 8008636:	4604      	mov	r4, r0
 8008638:	f7ff fff2 	bl	8008620 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800863c:	4620      	mov	r0, r4
 800863e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008642:	f020 fb24 	bl	8028c8e <_ZdlPvj>
 8008646:	4620      	mov	r0, r4
 8008648:	bd10      	pop	{r4, pc}
	...

0800864c <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800864c:	b510      	push	{r4, lr}
 800864e:	4604      	mov	r4, r0
 8008650:	f7fd ff84 	bl	800655c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008654:	4b01      	ldr	r3, [pc, #4]	; (800865c <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008656:	6023      	str	r3, [r4, #0]
}
 8008658:	4620      	mov	r0, r4
 800865a:	bd10      	pop	{r4, pc}
 800865c:	0802d6b4 	.word	0x0802d6b4

08008660 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008660:	f7fd bf4d 	b.w	80064fe <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008664 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008664:	4770      	bx	lr

08008666 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008666:	3804      	subs	r0, #4
 8008668:	4770      	bx	lr

0800866a <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800866a:	4770      	bx	lr

0800866c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800866c:	68c0      	ldr	r0, [r0, #12]
 800866e:	6803      	ldr	r3, [r0, #0]
 8008670:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008672:	4718      	bx	r3

08008674 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008674:	f1a0 0004 	sub.w	r0, r0, #4
 8008678:	f7ff bff8 	b.w	800866c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800867c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800867c:	b510      	push	{r4, lr}
 800867e:	2110      	movs	r1, #16
 8008680:	4604      	mov	r4, r0
 8008682:	f020 fb04 	bl	8028c8e <_ZdlPvj>
 8008686:	4620      	mov	r0, r4
 8008688:	bd10      	pop	{r4, pc}

0800868a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800868a:	f1a0 0004 	sub.w	r0, r0, #4
 800868e:	e7f5      	b.n	800867c <_ZN27Measurement_SinglePresenterD0Ev>

08008690 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008690:	b510      	push	{r4, lr}
 8008692:	2200      	movs	r2, #0
 8008694:	6082      	str	r2, [r0, #8]
    : view(v)
 8008696:	4a04      	ldr	r2, [pc, #16]	; (80086a8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008698:	60c1      	str	r1, [r0, #12]
 800869a:	f102 0408 	add.w	r4, r2, #8
 800869e:	3224      	adds	r2, #36	; 0x24
 80086a0:	6004      	str	r4, [r0, #0]
 80086a2:	6042      	str	r2, [r0, #4]
}
 80086a4:	bd10      	pop	{r4, pc}
 80086a6:	bf00      	nop
 80086a8:	0802d6e0 	.word	0x0802d6e0

080086ac <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80086ac:	4770      	bx	lr
	...

080086b0 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80086b0:	b510      	push	{r4, lr}
 80086b2:	4b03      	ldr	r3, [pc, #12]	; (80086c0 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80086b4:	6003      	str	r3, [r0, #0]
 80086b6:	4604      	mov	r4, r0
 80086b8:	f7fe f8e6 	bl	8006888 <_ZN26Measurement_SingleViewBaseD1Ev>
 80086bc:	4620      	mov	r0, r4
 80086be:	bd10      	pop	{r4, pc}
 80086c0:	0802d718 	.word	0x0802d718

080086c4 <_ZN22Measurement_SingleViewD0Ev>:
 80086c4:	b510      	push	{r4, lr}
 80086c6:	4604      	mov	r4, r0
 80086c8:	f7ff fff2 	bl	80086b0 <_ZN22Measurement_SingleViewD1Ev>
 80086cc:	4620      	mov	r0, r4
 80086ce:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80086d2:	f020 fadc 	bl	8028c8e <_ZdlPvj>
 80086d6:	4620      	mov	r0, r4
 80086d8:	bd10      	pop	{r4, pc}
	...

080086dc <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80086dc:	b510      	push	{r4, lr}
 80086de:	4604      	mov	r4, r0
 80086e0:	f7fe f90c 	bl	80068fc <_ZN26Measurement_SingleViewBaseC1Ev>
 80086e4:	4b01      	ldr	r3, [pc, #4]	; (80086ec <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80086e6:	6023      	str	r3, [r4, #0]
}
 80086e8:	4620      	mov	r0, r4
 80086ea:	bd10      	pop	{r4, pc}
 80086ec:	0802d718 	.word	0x0802d718

080086f0 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80086f0:	f7fe b8a6 	b.w	8006840 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080086f4 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80086f4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086f6:	4a0a      	ldr	r2, [pc, #40]	; (8008720 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80086f8:	4605      	mov	r5, r0
 80086fa:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086fc:	460b      	mov	r3, r1
 80086fe:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008702:	2104      	movs	r1, #4
 8008704:	f00f fbbc 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008708:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800870c:	f00d fb30 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008710:	b92c      	cbnz	r4, 800871e <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008712:	f00c fa45 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008716:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800871a:	f7fb b997 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800871e:	bd38      	pop	{r3, r4, r5, pc}
 8008720:	0802d2ec 	.word	0x0802d2ec

08008724 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008724:	4770      	bx	lr

08008726 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008726:	3804      	subs	r0, #4
 8008728:	4770      	bx	lr

0800872a <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800872a:	4770      	bx	lr

0800872c <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800872c:	4770      	bx	lr

0800872e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800872e:	b510      	push	{r4, lr}
 8008730:	2110      	movs	r1, #16
 8008732:	4604      	mov	r4, r0
 8008734:	f020 faab 	bl	8028c8e <_ZdlPvj>
 8008738:	4620      	mov	r0, r4
 800873a:	bd10      	pop	{r4, pc}

0800873c <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800873c:	f1a0 0004 	sub.w	r0, r0, #4
 8008740:	e7f5      	b.n	800872e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08008742 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8008742:	4770      	bx	lr

08008744 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008744:	b510      	push	{r4, lr}
 8008746:	2200      	movs	r2, #0
 8008748:	6082      	str	r2, [r0, #8]
    : view(v)
 800874a:	4a04      	ldr	r2, [pc, #16]	; (800875c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800874c:	60c1      	str	r1, [r0, #12]
 800874e:	f102 0408 	add.w	r4, r2, #8
 8008752:	3224      	adds	r2, #36	; 0x24
 8008754:	6004      	str	r4, [r0, #0]
 8008756:	6042      	str	r2, [r0, #4]
}
 8008758:	bd10      	pop	{r4, pc}
 800875a:	bf00      	nop
 800875c:	0802d748 	.word	0x0802d748

08008760 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008760:	4770      	bx	lr
	...

08008764 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008764:	b510      	push	{r4, lr}
 8008766:	4b03      	ldr	r3, [pc, #12]	; (8008774 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008768:	6003      	str	r3, [r0, #0]
 800876a:	4604      	mov	r4, r0
 800876c:	f7fe fb12 	bl	8006d94 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008770:	4620      	mov	r0, r4
 8008772:	bd10      	pop	{r4, pc}
 8008774:	0802d788 	.word	0x0802d788

08008778 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008778:	b510      	push	{r4, lr}
 800877a:	4604      	mov	r4, r0
 800877c:	f7ff fff2 	bl	8008764 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008780:	4620      	mov	r0, r4
 8008782:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008786:	f020 fa82 	bl	8028c8e <_ZdlPvj>
 800878a:	4620      	mov	r0, r4
 800878c:	bd10      	pop	{r4, pc}
	...

08008790 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008790:	b510      	push	{r4, lr}
 8008792:	4604      	mov	r4, r0
 8008794:	f7fe fb38 	bl	8006e08 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008798:	4b01      	ldr	r3, [pc, #4]	; (80087a0 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800879a:	6023      	str	r3, [r4, #0]
}
 800879c:	4620      	mov	r0, r4
 800879e:	bd10      	pop	{r4, pc}
 80087a0:	0802d788 	.word	0x0802d788

080087a4 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80087a4:	f7fe bad1 	b.w	8006d4a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080087a8 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80087a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80087aa:	4e2a      	ldr	r6, [pc, #168]	; (8008854 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80087ac:	4f2a      	ldr	r7, [pc, #168]	; (8008858 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 80087ae:	4604      	mov	r4, r0
 80087b0:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 80087b2:	6803      	ldr	r3, [r0, #0]
{
 80087b4:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 80087b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80087b8:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80087ba:	2201      	movs	r2, #1
 80087bc:	2180      	movs	r1, #128	; 0x80
 80087be:	4638      	mov	r0, r7
 80087c0:	f000 fdea 	bl	8009398 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 80087c4:	f7f8 fd98 	bl	80012f8 <updateGUI_test>
 80087c8:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 80087ca:	f7f9 fa83 	bl	8001cd4 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80087ce:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 80087d0:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80087d2:	2001      	movs	r0, #1
 80087d4:	f7f8 fcdc 	bl	8001190 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80087d8:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80087dc:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80087de:	ed8d 0a04 	vstr	s0, [sp, #16]
 80087e2:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 80087e6:	9001      	str	r0, [sp, #4]
 80087e8:	f009 fa6e 	bl	8011cc8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80087ec:	9801      	ldr	r0, [sp, #4]
 80087ee:	f00d fabf 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80087f2:	462b      	mov	r3, r5
 80087f4:	4a19      	ldr	r2, [pc, #100]	; (800885c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 80087f6:	210a      	movs	r1, #10
 80087f8:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80087fc:	f00f fb40 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008800:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008804:	f00d fab4 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008808:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800880a:	4a15      	ldr	r2, [pc, #84]	; (8008860 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 800880c:	9303      	str	r3, [sp, #12]
 800880e:	210a      	movs	r1, #10
 8008810:	ab03      	add	r3, sp, #12
 8008812:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008816:	f00f fd1f 	bl	8018258 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800881a:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800881e:	f00d faa7 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008822:	9b05      	ldr	r3, [sp, #20]
 8008824:	4a0e      	ldr	r2, [pc, #56]	; (8008860 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008826:	9303      	str	r3, [sp, #12]
 8008828:	210a      	movs	r1, #10
 800882a:	ab03      	add	r3, sp, #12
 800882c:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008830:	f00f fd12 	bl	8018258 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008834:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008838:	f00d fa9a 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 800883c:	4638      	mov	r0, r7
 800883e:	2200      	movs	r2, #0
 8008840:	2180      	movs	r1, #128	; 0x80
 8008842:	f000 fda9 	bl	8009398 <HAL_GPIO_WritePin>
 8008846:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008848:	6803      	ldr	r3, [r0, #0]
 800884a:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 800884c:	b007      	add	sp, #28
 800884e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008852:	4718      	bx	r3
 8008854:	20012da4 	.word	0x20012da4
 8008858:	40020000 	.word	0x40020000
 800885c:	0802d2ec 	.word	0x0802d2ec
 8008860:	0802d778 	.word	0x0802d778

08008864 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008864:	4770      	bx	lr

08008866 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008866:	3804      	subs	r0, #4
 8008868:	4770      	bx	lr

0800886a <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800886a:	4770      	bx	lr

0800886c <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800886c:	4770      	bx	lr

0800886e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800886e:	b510      	push	{r4, lr}
 8008870:	2110      	movs	r1, #16
 8008872:	4604      	mov	r4, r0
 8008874:	f020 fa0b 	bl	8028c8e <_ZdlPvj>
 8008878:	4620      	mov	r0, r4
 800887a:	bd10      	pop	{r4, pc}

0800887c <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800887c:	f1a0 0004 	sub.w	r0, r0, #4
 8008880:	e7f5      	b.n	800886e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008882 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008882:	4770      	bx	lr

08008884 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008884:	b510      	push	{r4, lr}
 8008886:	2200      	movs	r2, #0
 8008888:	6082      	str	r2, [r0, #8]
    : view(v)
 800888a:	4a04      	ldr	r2, [pc, #16]	; (800889c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800888c:	60c1      	str	r1, [r0, #12]
 800888e:	f102 0408 	add.w	r4, r2, #8
 8008892:	3224      	adds	r2, #36	; 0x24
 8008894:	6004      	str	r4, [r0, #0]
 8008896:	6042      	str	r2, [r0, #4]
}
 8008898:	bd10      	pop	{r4, pc}
 800889a:	bf00      	nop
 800889c:	0802d7b8 	.word	0x0802d7b8

080088a0 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80088a0:	4770      	bx	lr
	...

080088a4 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 80088a4:	b510      	push	{r4, lr}
 80088a6:	4b03      	ldr	r3, [pc, #12]	; (80088b4 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80088a8:	6003      	str	r3, [r0, #0]
 80088aa:	4604      	mov	r4, r0
 80088ac:	f7fe fe20 	bl	80074f0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80088b0:	4620      	mov	r0, r4
 80088b2:	bd10      	pop	{r4, pc}
 80088b4:	0802d7f0 	.word	0x0802d7f0

080088b8 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80088b8:	b510      	push	{r4, lr}
 80088ba:	4604      	mov	r4, r0
 80088bc:	f7ff fff2 	bl	80088a4 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80088c0:	4620      	mov	r0, r4
 80088c2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80088c6:	f020 f9e2 	bl	8028c8e <_ZdlPvj>
 80088ca:	4620      	mov	r0, r4
 80088cc:	bd10      	pop	{r4, pc}
	...

080088d0 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80088d0:	b510      	push	{r4, lr}
 80088d2:	4604      	mov	r4, r0
 80088d4:	f7fe fe2c 	bl	8007530 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80088d8:	4b01      	ldr	r3, [pc, #4]	; (80088e0 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80088da:	6023      	str	r3, [r4, #0]
}
 80088dc:	4620      	mov	r0, r4
 80088de:	bd10      	pop	{r4, pc}
 80088e0:	0802d7f0 	.word	0x0802d7f0

080088e4 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80088e4:	f7fe bdf3 	b.w	80074ce <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080088e8 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80088e8:	2100      	movs	r1, #0
 80088ea:	223c      	movs	r2, #60	; 0x3c
 80088ec:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80088f0:	4770      	bx	lr
	...

080088f4 <_ZN5Model4tickEv>:

void Model::tick()
{
 80088f4:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80088f6:	4d0a      	ldr	r5, [pc, #40]	; (8008920 <_ZN5Model4tickEv+0x2c>)
{
 80088f8:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80088fa:	6828      	ldr	r0, [r5, #0]
 80088fc:	f004 f8ac 	bl	800ca58 <osMessageQueueGetCount>
 8008900:	b168      	cbz	r0, 800891e <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008902:	2300      	movs	r3, #0
 8008904:	6828      	ldr	r0, [r5, #0]
 8008906:	461a      	mov	r2, r3
 8008908:	1d21      	adds	r1, r4, #4
 800890a:	f004 f871 	bl	800c9f0 <osMessageQueueGet>
 800890e:	b930      	cbnz	r0, 800891e <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008910:	6820      	ldr	r0, [r4, #0]
 8008912:	6861      	ldr	r1, [r4, #4]
 8008914:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008916:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800891a:	689b      	ldr	r3, [r3, #8]
 800891c:	4718      	bx	r3
}
 800891e:	bd70      	pop	{r4, r5, r6, pc}
 8008920:	200018d8 	.word	0x200018d8

08008924 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008924:	4770      	bx	lr

08008926 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008926:	3804      	subs	r0, #4
 8008928:	4770      	bx	lr

0800892a <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800892a:	4770      	bx	lr

0800892c <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800892c:	68c0      	ldr	r0, [r0, #12]
 800892e:	6803      	ldr	r3, [r0, #0]
 8008930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008932:	4718      	bx	r3

08008934 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008934:	f1a0 0004 	sub.w	r0, r0, #4
 8008938:	f7ff bff8 	b.w	800892c <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800893c <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800893c:	b510      	push	{r4, lr}
 800893e:	2110      	movs	r1, #16
 8008940:	4604      	mov	r4, r0
 8008942:	f020 f9a4 	bl	8028c8e <_ZdlPvj>
 8008946:	4620      	mov	r0, r4
 8008948:	bd10      	pop	{r4, pc}

0800894a <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800894a:	f1a0 0004 	sub.w	r0, r0, #4
 800894e:	e7f5      	b.n	800893c <_ZN21Project_InfoPresenterD0Ev>

08008950 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008950:	b510      	push	{r4, lr}
 8008952:	2200      	movs	r2, #0
 8008954:	6082      	str	r2, [r0, #8]
    : view(v)
 8008956:	4a04      	ldr	r2, [pc, #16]	; (8008968 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008958:	60c1      	str	r1, [r0, #12]
 800895a:	f102 0408 	add.w	r4, r2, #8
 800895e:	3224      	adds	r2, #36	; 0x24
 8008960:	6004      	str	r4, [r0, #0]
 8008962:	6042      	str	r2, [r0, #4]
}
 8008964:	bd10      	pop	{r4, pc}
 8008966:	bf00      	nop
 8008968:	0802d81c 	.word	0x0802d81c

0800896c <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800896c:	4770      	bx	lr
	...

08008970 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008970:	b510      	push	{r4, lr}
 8008972:	4b03      	ldr	r3, [pc, #12]	; (8008980 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008974:	6003      	str	r3, [r0, #0]
 8008976:	4604      	mov	r4, r0
 8008978:	f7fe ff74 	bl	8007864 <_ZN20Project_InfoViewBaseD1Ev>
 800897c:	4620      	mov	r0, r4
 800897e:	bd10      	pop	{r4, pc}
 8008980:	0802d854 	.word	0x0802d854

08008984 <_ZN16Project_InfoViewD0Ev>:
 8008984:	b510      	push	{r4, lr}
 8008986:	4604      	mov	r4, r0
 8008988:	f7ff fff2 	bl	8008970 <_ZN16Project_InfoViewD1Ev>
 800898c:	4620      	mov	r0, r4
 800898e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008992:	f020 f97c 	bl	8028c8e <_ZdlPvj>
 8008996:	4620      	mov	r0, r4
 8008998:	bd10      	pop	{r4, pc}
	...

0800899c <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800899c:	b510      	push	{r4, lr}
 800899e:	4604      	mov	r4, r0
 80089a0:	f7fe ff88 	bl	80078b4 <_ZN20Project_InfoViewBaseC1Ev>
 80089a4:	4b01      	ldr	r3, [pc, #4]	; (80089ac <_ZN16Project_InfoViewC1Ev+0x10>)
 80089a6:	6023      	str	r3, [r4, #0]
}
 80089a8:	4620      	mov	r0, r4
 80089aa:	bd10      	pop	{r4, pc}
 80089ac:	0802d854 	.word	0x0802d854

080089b0 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 80089b0:	f7fe bf34 	b.w	800781c <_ZN20Project_InfoViewBase11setupScreenEv>

080089b4 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 80089b4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80089b6:	4a0a      	ldr	r2, [pc, #40]	; (80089e0 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 80089b8:	4605      	mov	r5, r0
 80089ba:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80089bc:	460b      	mov	r3, r1
 80089be:	f500 7022 	add.w	r0, r0, #648	; 0x288
 80089c2:	2104      	movs	r1, #4
 80089c4:	f00f fa5c 	bl	8017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80089c8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80089cc:	f00d f9d0 	bl	8015d70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80089d0:	b92c      	cbnz	r4, 80089de <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80089d2:	f00c f8e5 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80089d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80089da:	f7fb b837 	b.w	8003a4c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80089de:	bd38      	pop	{r3, r4, r5, pc}
 80089e0:	0802d2ec 	.word	0x0802d2ec

080089e4 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80089e4:	4770      	bx	lr

080089e6 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80089e6:	3804      	subs	r0, #4
 80089e8:	4770      	bx	lr

080089ea <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80089ea:	4770      	bx	lr

080089ec <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80089ec:	4770      	bx	lr

080089ee <_ZN21Shutting_OffPresenterD0Ev>:
 80089ee:	b510      	push	{r4, lr}
 80089f0:	2110      	movs	r1, #16
 80089f2:	4604      	mov	r4, r0
 80089f4:	f020 f94b 	bl	8028c8e <_ZdlPvj>
 80089f8:	4620      	mov	r0, r4
 80089fa:	bd10      	pop	{r4, pc}

080089fc <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80089fc:	f1a0 0004 	sub.w	r0, r0, #4
 8008a00:	e7f5      	b.n	80089ee <_ZN21Shutting_OffPresenterD0Ev>

08008a02 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008a02:	4770      	bx	lr

08008a04 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008a04:	b510      	push	{r4, lr}
 8008a06:	2200      	movs	r2, #0
 8008a08:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a0a:	4a04      	ldr	r2, [pc, #16]	; (8008a1c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008a0c:	60c1      	str	r1, [r0, #12]
 8008a0e:	f102 0408 	add.w	r4, r2, #8
 8008a12:	3224      	adds	r2, #36	; 0x24
 8008a14:	6004      	str	r4, [r0, #0]
 8008a16:	6042      	str	r2, [r0, #4]
}
 8008a18:	bd10      	pop	{r4, pc}
 8008a1a:	bf00      	nop
 8008a1c:	0802d884 	.word	0x0802d884

08008a20 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008a20:	4770      	bx	lr
	...

08008a24 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008a24:	b510      	push	{r4, lr}
 8008a26:	4b03      	ldr	r3, [pc, #12]	; (8008a34 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008a28:	6003      	str	r3, [r0, #0]
 8008a2a:	4604      	mov	r4, r0
 8008a2c:	f7ff f910 	bl	8007c50 <_ZN20Shutting_OffViewBaseD1Ev>
 8008a30:	4620      	mov	r0, r4
 8008a32:	bd10      	pop	{r4, pc}
 8008a34:	0802d8bc 	.word	0x0802d8bc

08008a38 <_ZN16Shutting_OffViewD0Ev>:
 8008a38:	b510      	push	{r4, lr}
 8008a3a:	4604      	mov	r4, r0
 8008a3c:	f7ff fff2 	bl	8008a24 <_ZN16Shutting_OffViewD1Ev>
 8008a40:	4620      	mov	r0, r4
 8008a42:	2198      	movs	r1, #152	; 0x98
 8008a44:	f020 f923 	bl	8028c8e <_ZdlPvj>
 8008a48:	4620      	mov	r0, r4
 8008a4a:	bd10      	pop	{r4, pc}

08008a4c <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008a4c:	b510      	push	{r4, lr}
 8008a4e:	4604      	mov	r4, r0
 8008a50:	f7ff f908 	bl	8007c64 <_ZN20Shutting_OffViewBaseC1Ev>
 8008a54:	4b01      	ldr	r3, [pc, #4]	; (8008a5c <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008a56:	6023      	str	r3, [r4, #0]
}
 8008a58:	4620      	mov	r0, r4
 8008a5a:	bd10      	pop	{r4, pc}
 8008a5c:	0802d8bc 	.word	0x0802d8bc

08008a60 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008a60:	f7ff b8f7 	b.w	8007c52 <_ZN20Shutting_OffViewBase11setupScreenEv>

08008a64 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008a64:	20f0      	movs	r0, #240	; 0xf0
 8008a66:	4770      	bx	lr

08008a68 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008a68:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008a6c:	4770      	bx	lr
 8008a6e:	bf00      	nop

08008a70 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008a70:	2029      	movs	r0, #41	; 0x29
 8008a72:	f7f8 bfa7 	b.w	80019c4 <LCD_IO_WriteReg>
 8008a76:	bf00      	nop

08008a78 <ili9341_DisplayOff>:
 8008a78:	2028      	movs	r0, #40	; 0x28
 8008a7a:	f7f8 bfa3 	b.w	80019c4 <LCD_IO_WriteReg>
 8008a7e:	bf00      	nop

08008a80 <ili9341_Init>:
{
 8008a80:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008a82:	f7f8 ff65 	bl	8001950 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008a86:	20ca      	movs	r0, #202	; 0xca
 8008a88:	f7f8 ff9c 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a8c:	20c3      	movs	r0, #195	; 0xc3
 8008a8e:	f7f8 ff6f 	bl	8001970 <LCD_IO_WriteData>
 8008a92:	2008      	movs	r0, #8
 8008a94:	f7f8 ff6c 	bl	8001970 <LCD_IO_WriteData>
 8008a98:	2050      	movs	r0, #80	; 0x50
 8008a9a:	f7f8 ff69 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a9e:	20cf      	movs	r0, #207	; 0xcf
 8008aa0:	f7f8 ff90 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008aa4:	2000      	movs	r0, #0
 8008aa6:	f7f8 ff63 	bl	8001970 <LCD_IO_WriteData>
 8008aaa:	20c1      	movs	r0, #193	; 0xc1
 8008aac:	f7f8 ff60 	bl	8001970 <LCD_IO_WriteData>
 8008ab0:	2030      	movs	r0, #48	; 0x30
 8008ab2:	f7f8 ff5d 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ab6:	20ed      	movs	r0, #237	; 0xed
 8008ab8:	f7f8 ff84 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008abc:	2064      	movs	r0, #100	; 0x64
 8008abe:	f7f8 ff57 	bl	8001970 <LCD_IO_WriteData>
 8008ac2:	2003      	movs	r0, #3
 8008ac4:	f7f8 ff54 	bl	8001970 <LCD_IO_WriteData>
 8008ac8:	2012      	movs	r0, #18
 8008aca:	f7f8 ff51 	bl	8001970 <LCD_IO_WriteData>
 8008ace:	2081      	movs	r0, #129	; 0x81
 8008ad0:	f7f8 ff4e 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ad4:	20e8      	movs	r0, #232	; 0xe8
 8008ad6:	f7f8 ff75 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ada:	2085      	movs	r0, #133	; 0x85
 8008adc:	f7f8 ff48 	bl	8001970 <LCD_IO_WriteData>
 8008ae0:	2000      	movs	r0, #0
 8008ae2:	f7f8 ff45 	bl	8001970 <LCD_IO_WriteData>
 8008ae6:	2078      	movs	r0, #120	; 0x78
 8008ae8:	f7f8 ff42 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008aec:	20cb      	movs	r0, #203	; 0xcb
 8008aee:	f7f8 ff69 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008af2:	2039      	movs	r0, #57	; 0x39
 8008af4:	f7f8 ff3c 	bl	8001970 <LCD_IO_WriteData>
 8008af8:	202c      	movs	r0, #44	; 0x2c
 8008afa:	f7f8 ff39 	bl	8001970 <LCD_IO_WriteData>
 8008afe:	2000      	movs	r0, #0
 8008b00:	f7f8 ff36 	bl	8001970 <LCD_IO_WriteData>
 8008b04:	2034      	movs	r0, #52	; 0x34
 8008b06:	f7f8 ff33 	bl	8001970 <LCD_IO_WriteData>
 8008b0a:	2002      	movs	r0, #2
 8008b0c:	f7f8 ff30 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b10:	20f7      	movs	r0, #247	; 0xf7
 8008b12:	f7f8 ff57 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b16:	2020      	movs	r0, #32
 8008b18:	f7f8 ff2a 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b1c:	20ea      	movs	r0, #234	; 0xea
 8008b1e:	f7f8 ff51 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b22:	2000      	movs	r0, #0
 8008b24:	f7f8 ff24 	bl	8001970 <LCD_IO_WriteData>
 8008b28:	2000      	movs	r0, #0
 8008b2a:	f7f8 ff21 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b2e:	20b1      	movs	r0, #177	; 0xb1
 8008b30:	f7f8 ff48 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b34:	2000      	movs	r0, #0
 8008b36:	f7f8 ff1b 	bl	8001970 <LCD_IO_WriteData>
 8008b3a:	201b      	movs	r0, #27
 8008b3c:	f7f8 ff18 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b40:	20b6      	movs	r0, #182	; 0xb6
 8008b42:	f7f8 ff3f 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b46:	200a      	movs	r0, #10
 8008b48:	f7f8 ff12 	bl	8001970 <LCD_IO_WriteData>
 8008b4c:	20a2      	movs	r0, #162	; 0xa2
 8008b4e:	f7f8 ff0f 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b52:	20c0      	movs	r0, #192	; 0xc0
 8008b54:	f7f8 ff36 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b58:	2010      	movs	r0, #16
 8008b5a:	f7f8 ff09 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b5e:	20c1      	movs	r0, #193	; 0xc1
 8008b60:	f7f8 ff30 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b64:	2010      	movs	r0, #16
 8008b66:	f7f8 ff03 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b6a:	20c5      	movs	r0, #197	; 0xc5
 8008b6c:	f7f8 ff2a 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b70:	2045      	movs	r0, #69	; 0x45
 8008b72:	f7f8 fefd 	bl	8001970 <LCD_IO_WriteData>
 8008b76:	2015      	movs	r0, #21
 8008b78:	f7f8 fefa 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b7c:	20c7      	movs	r0, #199	; 0xc7
 8008b7e:	f7f8 ff21 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b82:	2090      	movs	r0, #144	; 0x90
 8008b84:	f7f8 fef4 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b88:	2036      	movs	r0, #54	; 0x36
 8008b8a:	f7f8 ff1b 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b8e:	20c8      	movs	r0, #200	; 0xc8
 8008b90:	f7f8 feee 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b94:	20f2      	movs	r0, #242	; 0xf2
 8008b96:	f7f8 ff15 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b9a:	2000      	movs	r0, #0
 8008b9c:	f7f8 fee8 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ba0:	20b0      	movs	r0, #176	; 0xb0
 8008ba2:	f7f8 ff0f 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ba6:	20c2      	movs	r0, #194	; 0xc2
 8008ba8:	f7f8 fee2 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bac:	20b6      	movs	r0, #182	; 0xb6
 8008bae:	f7f8 ff09 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bb2:	200a      	movs	r0, #10
 8008bb4:	f7f8 fedc 	bl	8001970 <LCD_IO_WriteData>
 8008bb8:	20a7      	movs	r0, #167	; 0xa7
 8008bba:	f7f8 fed9 	bl	8001970 <LCD_IO_WriteData>
 8008bbe:	2027      	movs	r0, #39	; 0x27
 8008bc0:	f7f8 fed6 	bl	8001970 <LCD_IO_WriteData>
 8008bc4:	2004      	movs	r0, #4
 8008bc6:	f7f8 fed3 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bca:	202a      	movs	r0, #42	; 0x2a
 8008bcc:	f7f8 fefa 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bd0:	2000      	movs	r0, #0
 8008bd2:	f7f8 fecd 	bl	8001970 <LCD_IO_WriteData>
 8008bd6:	2000      	movs	r0, #0
 8008bd8:	f7f8 feca 	bl	8001970 <LCD_IO_WriteData>
 8008bdc:	2000      	movs	r0, #0
 8008bde:	f7f8 fec7 	bl	8001970 <LCD_IO_WriteData>
 8008be2:	20ef      	movs	r0, #239	; 0xef
 8008be4:	f7f8 fec4 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008be8:	202b      	movs	r0, #43	; 0x2b
 8008bea:	f7f8 feeb 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bee:	2000      	movs	r0, #0
 8008bf0:	f7f8 febe 	bl	8001970 <LCD_IO_WriteData>
 8008bf4:	2000      	movs	r0, #0
 8008bf6:	f7f8 febb 	bl	8001970 <LCD_IO_WriteData>
 8008bfa:	2001      	movs	r0, #1
 8008bfc:	f7f8 feb8 	bl	8001970 <LCD_IO_WriteData>
 8008c00:	203f      	movs	r0, #63	; 0x3f
 8008c02:	f7f8 feb5 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c06:	20f6      	movs	r0, #246	; 0xf6
 8008c08:	f7f8 fedc 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c0c:	2001      	movs	r0, #1
 8008c0e:	f7f8 feaf 	bl	8001970 <LCD_IO_WriteData>
 8008c12:	2000      	movs	r0, #0
 8008c14:	f7f8 feac 	bl	8001970 <LCD_IO_WriteData>
 8008c18:	2006      	movs	r0, #6
 8008c1a:	f7f8 fea9 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c1e:	202c      	movs	r0, #44	; 0x2c
 8008c20:	f7f8 fed0 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008c24:	20c8      	movs	r0, #200	; 0xc8
 8008c26:	f7f8 ff35 	bl	8001a94 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008c2a:	2026      	movs	r0, #38	; 0x26
 8008c2c:	f7f8 feca 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c30:	2001      	movs	r0, #1
 8008c32:	f7f8 fe9d 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c36:	20e0      	movs	r0, #224	; 0xe0
 8008c38:	f7f8 fec4 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c3c:	200f      	movs	r0, #15
 8008c3e:	f7f8 fe97 	bl	8001970 <LCD_IO_WriteData>
 8008c42:	2029      	movs	r0, #41	; 0x29
 8008c44:	f7f8 fe94 	bl	8001970 <LCD_IO_WriteData>
 8008c48:	2024      	movs	r0, #36	; 0x24
 8008c4a:	f7f8 fe91 	bl	8001970 <LCD_IO_WriteData>
 8008c4e:	200c      	movs	r0, #12
 8008c50:	f7f8 fe8e 	bl	8001970 <LCD_IO_WriteData>
 8008c54:	200e      	movs	r0, #14
 8008c56:	f7f8 fe8b 	bl	8001970 <LCD_IO_WriteData>
 8008c5a:	2009      	movs	r0, #9
 8008c5c:	f7f8 fe88 	bl	8001970 <LCD_IO_WriteData>
 8008c60:	204e      	movs	r0, #78	; 0x4e
 8008c62:	f7f8 fe85 	bl	8001970 <LCD_IO_WriteData>
 8008c66:	2078      	movs	r0, #120	; 0x78
 8008c68:	f7f8 fe82 	bl	8001970 <LCD_IO_WriteData>
 8008c6c:	203c      	movs	r0, #60	; 0x3c
 8008c6e:	f7f8 fe7f 	bl	8001970 <LCD_IO_WriteData>
 8008c72:	2009      	movs	r0, #9
 8008c74:	f7f8 fe7c 	bl	8001970 <LCD_IO_WriteData>
 8008c78:	2013      	movs	r0, #19
 8008c7a:	f7f8 fe79 	bl	8001970 <LCD_IO_WriteData>
 8008c7e:	2005      	movs	r0, #5
 8008c80:	f7f8 fe76 	bl	8001970 <LCD_IO_WriteData>
 8008c84:	2017      	movs	r0, #23
 8008c86:	f7f8 fe73 	bl	8001970 <LCD_IO_WriteData>
 8008c8a:	2011      	movs	r0, #17
 8008c8c:	f7f8 fe70 	bl	8001970 <LCD_IO_WriteData>
 8008c90:	2000      	movs	r0, #0
 8008c92:	f7f8 fe6d 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c96:	20e1      	movs	r0, #225	; 0xe1
 8008c98:	f7f8 fe94 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c9c:	2000      	movs	r0, #0
 8008c9e:	f7f8 fe67 	bl	8001970 <LCD_IO_WriteData>
 8008ca2:	2016      	movs	r0, #22
 8008ca4:	f7f8 fe64 	bl	8001970 <LCD_IO_WriteData>
 8008ca8:	201b      	movs	r0, #27
 8008caa:	f7f8 fe61 	bl	8001970 <LCD_IO_WriteData>
 8008cae:	2004      	movs	r0, #4
 8008cb0:	f7f8 fe5e 	bl	8001970 <LCD_IO_WriteData>
 8008cb4:	2011      	movs	r0, #17
 8008cb6:	f7f8 fe5b 	bl	8001970 <LCD_IO_WriteData>
 8008cba:	2007      	movs	r0, #7
 8008cbc:	f7f8 fe58 	bl	8001970 <LCD_IO_WriteData>
 8008cc0:	2031      	movs	r0, #49	; 0x31
 8008cc2:	f7f8 fe55 	bl	8001970 <LCD_IO_WriteData>
 8008cc6:	2033      	movs	r0, #51	; 0x33
 8008cc8:	f7f8 fe52 	bl	8001970 <LCD_IO_WriteData>
 8008ccc:	2042      	movs	r0, #66	; 0x42
 8008cce:	f7f8 fe4f 	bl	8001970 <LCD_IO_WriteData>
 8008cd2:	2005      	movs	r0, #5
 8008cd4:	f7f8 fe4c 	bl	8001970 <LCD_IO_WriteData>
 8008cd8:	200c      	movs	r0, #12
 8008cda:	f7f8 fe49 	bl	8001970 <LCD_IO_WriteData>
 8008cde:	200a      	movs	r0, #10
 8008ce0:	f7f8 fe46 	bl	8001970 <LCD_IO_WriteData>
 8008ce4:	2028      	movs	r0, #40	; 0x28
 8008ce6:	f7f8 fe43 	bl	8001970 <LCD_IO_WriteData>
 8008cea:	202f      	movs	r0, #47	; 0x2f
 8008cec:	f7f8 fe40 	bl	8001970 <LCD_IO_WriteData>
 8008cf0:	200f      	movs	r0, #15
 8008cf2:	f7f8 fe3d 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cf6:	2011      	movs	r0, #17
 8008cf8:	f7f8 fe64 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008cfc:	20c8      	movs	r0, #200	; 0xc8
 8008cfe:	f7f8 fec9 	bl	8001a94 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008d02:	2029      	movs	r0, #41	; 0x29
 8008d04:	f7f8 fe5e 	bl	80019c4 <LCD_IO_WriteReg>
}
 8008d08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008d0c:	202c      	movs	r0, #44	; 0x2c
 8008d0e:	f7f8 be59 	b.w	80019c4 <LCD_IO_WriteReg>
 8008d12:	bf00      	nop

08008d14 <ili9341_ReadID>:
{
 8008d14:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008d16:	f7f8 fe1b 	bl	8001950 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008d1a:	2103      	movs	r1, #3
 8008d1c:	20d3      	movs	r0, #211	; 0xd3
 8008d1e:	f7f8 fe7b 	bl	8001a18 <LCD_IO_ReadData>
}
 8008d22:	b280      	uxth	r0, r0
 8008d24:	bd08      	pop	{r3, pc}
 8008d26:	bf00      	nop

08008d28 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008d28:	221f      	movs	r2, #31
 8008d2a:	210b      	movs	r1, #11
 8008d2c:	b2c0      	uxtb	r0, r0
 8008d2e:	f7f8 bdc1 	b.w	80018b4 <IOE_Write>
 8008d32:	bf00      	nop

08008d34 <stmpe811_Reset>:
{
 8008d34:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008d36:	b2c4      	uxtb	r4, r0
 8008d38:	2202      	movs	r2, #2
 8008d3a:	2103      	movs	r1, #3
 8008d3c:	4620      	mov	r0, r4
 8008d3e:	f7f8 fdb9 	bl	80018b4 <IOE_Write>
  IOE_Delay(10); 
 8008d42:	200a      	movs	r0, #10
 8008d44:	f7f8 fe02 	bl	800194c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008d48:	4620      	mov	r0, r4
 8008d4a:	2200      	movs	r2, #0
 8008d4c:	2103      	movs	r1, #3
 8008d4e:	f7f8 fdb1 	bl	80018b4 <IOE_Write>
}
 8008d52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008d56:	2002      	movs	r0, #2
 8008d58:	f7f8 bdf8 	b.w	800194c <IOE_Delay>

08008d5c <stmpe811_ReadID>:
{
 8008d5c:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d5e:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008d60:	f7f8 fda4 	bl	80018ac <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d64:	2100      	movs	r1, #0
 8008d66:	4620      	mov	r0, r4
 8008d68:	f7f8 fdbc 	bl	80018e4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008d6c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d6e:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008d70:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d72:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008d74:	f7f8 fdb6 	bl	80018e4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d78:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008d7c:	b280      	uxth	r0, r0
 8008d7e:	bd10      	pop	{r4, pc}

08008d80 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008d80:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008d82:	b2c4      	uxtb	r4, r0
 8008d84:	2140      	movs	r1, #64	; 0x40
 8008d86:	4620      	mov	r0, r4
 8008d88:	f7f8 fdac 	bl	80018e4 <IOE_Read>
  
  if(state > 0)
 8008d8c:	0603      	lsls	r3, r0, #24
 8008d8e:	d40b      	bmi.n	8008da8 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008d90:	4620      	mov	r0, r4
 8008d92:	2201      	movs	r2, #1
 8008d94:	214b      	movs	r1, #75	; 0x4b
 8008d96:	f7f8 fd8d 	bl	80018b4 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008d9a:	4620      	mov	r0, r4
 8008d9c:	2200      	movs	r2, #0
 8008d9e:	214b      	movs	r1, #75	; 0x4b
 8008da0:	f7f8 fd88 	bl	80018b4 <IOE_Write>
  uint8_t ret = 0;
 8008da4:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008da6:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008da8:	214c      	movs	r1, #76	; 0x4c
 8008daa:	4620      	mov	r0, r4
 8008dac:	f7f8 fd9a 	bl	80018e4 <IOE_Read>
      ret = 1;
 8008db0:	3800      	subs	r0, #0
 8008db2:	bf18      	it	ne
 8008db4:	2001      	movne	r0, #1
}
 8008db6:	bd10      	pop	{r4, pc}

08008db8 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008db8:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008dba:	210b      	movs	r1, #11
 8008dbc:	b2c0      	uxtb	r0, r0
 8008dbe:	f7f8 fd91 	bl	80018e4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008dc2:	f000 001f 	and.w	r0, r0, #31
 8008dc6:	bd08      	pop	{r3, pc}

08008dc8 <stmpe811_TS_GetXY>:
{
 8008dc8:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008dca:	2304      	movs	r3, #4
{
 8008dcc:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008dce:	b2c4      	uxtb	r4, r0
{
 8008dd0:	4615      	mov	r5, r2
 8008dd2:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008dd4:	eb0d 0203 	add.w	r2, sp, r3
 8008dd8:	21d7      	movs	r1, #215	; 0xd7
 8008dda:	4620      	mov	r0, r4
 8008ddc:	f7f8 fd9e 	bl	800191c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008de0:	9b01      	ldr	r3, [sp, #4]
 8008de2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008de4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008de6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008dea:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008dec:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008dee:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008df0:	2201      	movs	r2, #1
 8008df2:	214b      	movs	r1, #75	; 0x4b
 8008df4:	f7f8 fd5e 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008df8:	2200      	movs	r2, #0
 8008dfa:	214b      	movs	r1, #75	; 0x4b
 8008dfc:	4620      	mov	r0, r4
 8008dfe:	f7f8 fd59 	bl	80018b4 <IOE_Write>
}
 8008e02:	b002      	add	sp, #8
 8008e04:	bd70      	pop	{r4, r5, r6, pc}
 8008e06:	bf00      	nop

08008e08 <stmpe811_TS_Start>:
{
 8008e08:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008e0a:	b2c4      	uxtb	r4, r0
 8008e0c:	2104      	movs	r1, #4
 8008e0e:	4620      	mov	r0, r4
 8008e10:	f7f8 fd68 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008e14:	2104      	movs	r1, #4
 8008e16:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008e1a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008e1c:	4620      	mov	r0, r4
 8008e1e:	f7f8 fd49 	bl	80018b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008e22:	2117      	movs	r1, #23
 8008e24:	4620      	mov	r0, r4
 8008e26:	f7f8 fd5d 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008e2a:	2117      	movs	r1, #23
 8008e2c:	f000 020f 	and.w	r2, r0, #15
 8008e30:	4620      	mov	r0, r4
 8008e32:	f7f8 fd3f 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008e36:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008e3a:	4620      	mov	r0, r4
 8008e3c:	2104      	movs	r1, #4
 8008e3e:	f7f8 fd39 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008e42:	2249      	movs	r2, #73	; 0x49
 8008e44:	2120      	movs	r1, #32
 8008e46:	4620      	mov	r0, r4
 8008e48:	f7f8 fd34 	bl	80018b4 <IOE_Write>
  IOE_Delay(2); 
 8008e4c:	2002      	movs	r0, #2
 8008e4e:	f7f8 fd7d 	bl	800194c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008e52:	4620      	mov	r0, r4
 8008e54:	2201      	movs	r2, #1
 8008e56:	2121      	movs	r1, #33	; 0x21
 8008e58:	f7f8 fd2c 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008e5c:	4620      	mov	r0, r4
 8008e5e:	229a      	movs	r2, #154	; 0x9a
 8008e60:	2141      	movs	r1, #65	; 0x41
 8008e62:	f7f8 fd27 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008e66:	4620      	mov	r0, r4
 8008e68:	2201      	movs	r2, #1
 8008e6a:	214a      	movs	r1, #74	; 0x4a
 8008e6c:	f7f8 fd22 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008e70:	4620      	mov	r0, r4
 8008e72:	2201      	movs	r2, #1
 8008e74:	214b      	movs	r1, #75	; 0x4b
 8008e76:	f7f8 fd1d 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008e7a:	4620      	mov	r0, r4
 8008e7c:	2200      	movs	r2, #0
 8008e7e:	214b      	movs	r1, #75	; 0x4b
 8008e80:	f7f8 fd18 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008e84:	4620      	mov	r0, r4
 8008e86:	2201      	movs	r2, #1
 8008e88:	2156      	movs	r1, #86	; 0x56
 8008e8a:	f7f8 fd13 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008e8e:	4620      	mov	r0, r4
 8008e90:	2201      	movs	r2, #1
 8008e92:	2158      	movs	r1, #88	; 0x58
 8008e94:	f7f8 fd0e 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008e98:	4620      	mov	r0, r4
 8008e9a:	2201      	movs	r2, #1
 8008e9c:	2140      	movs	r1, #64	; 0x40
 8008e9e:	f7f8 fd09 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008ea2:	4620      	mov	r0, r4
 8008ea4:	22ff      	movs	r2, #255	; 0xff
 8008ea6:	210b      	movs	r1, #11
 8008ea8:	f7f8 fd04 	bl	80018b4 <IOE_Write>
}
 8008eac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008eb0:	2002      	movs	r0, #2
 8008eb2:	f7f8 bd4b 	b.w	800194c <IOE_Delay>
 8008eb6:	bf00      	nop

08008eb8 <stmpe811_TS_DisableIT>:
{
 8008eb8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008eba:	b2c4      	uxtb	r4, r0
 8008ebc:	2109      	movs	r1, #9
 8008ebe:	4620      	mov	r0, r4
 8008ec0:	f7f8 fd10 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008ec4:	2109      	movs	r1, #9
 8008ec6:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008eca:	4620      	mov	r0, r4
 8008ecc:	f7f8 fcf2 	bl	80018b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008ed0:	210a      	movs	r1, #10
 8008ed2:	4620      	mov	r0, r4
 8008ed4:	f7f8 fd06 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008ed8:	210a      	movs	r1, #10
 8008eda:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008ede:	4620      	mov	r0, r4
}
 8008ee0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008ee4:	f7f8 bce6 	b.w	80018b4 <IOE_Write>

08008ee8 <stmpe811_TS_EnableIT>:
{
 8008ee8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008eea:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008eec:	f7f8 fce0 	bl	80018b0 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008ef0:	210a      	movs	r1, #10
 8008ef2:	4620      	mov	r0, r4
 8008ef4:	f7f8 fcf6 	bl	80018e4 <IOE_Read>
  tmp |= Source; 
 8008ef8:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008efc:	b2c2      	uxtb	r2, r0
 8008efe:	210a      	movs	r1, #10
 8008f00:	4620      	mov	r0, r4
 8008f02:	f7f8 fcd7 	bl	80018b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008f06:	2109      	movs	r1, #9
 8008f08:	4620      	mov	r0, r4
 8008f0a:	f7f8 fceb 	bl	80018e4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008f0e:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008f12:	b2c2      	uxtb	r2, r0
 8008f14:	2109      	movs	r1, #9
 8008f16:	4620      	mov	r0, r4
}
 8008f18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008f1c:	f7f8 bcca 	b.w	80018b4 <IOE_Write>

08008f20 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008f20:	4a10      	ldr	r2, [pc, #64]	; (8008f64 <stmpe811_Init+0x44>)
 8008f22:	7813      	ldrb	r3, [r2, #0]
 8008f24:	4298      	cmp	r0, r3
 8008f26:	d004      	beq.n	8008f32 <stmpe811_Init+0x12>
 8008f28:	7851      	ldrb	r1, [r2, #1]
 8008f2a:	4288      	cmp	r0, r1
 8008f2c:	d001      	beq.n	8008f32 <stmpe811_Init+0x12>
 8008f2e:	b113      	cbz	r3, 8008f36 <stmpe811_Init+0x16>
 8008f30:	b101      	cbz	r1, 8008f34 <stmpe811_Init+0x14>
 8008f32:	4770      	bx	lr
 8008f34:	2301      	movs	r3, #1
{
 8008f36:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008f38:	b2c4      	uxtb	r4, r0
 8008f3a:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008f3c:	f7f8 fcb6 	bl	80018ac <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008f40:	2202      	movs	r2, #2
 8008f42:	2103      	movs	r1, #3
 8008f44:	4620      	mov	r0, r4
 8008f46:	f7f8 fcb5 	bl	80018b4 <IOE_Write>
  IOE_Delay(10); 
 8008f4a:	200a      	movs	r0, #10
 8008f4c:	f7f8 fcfe 	bl	800194c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008f50:	4620      	mov	r0, r4
 8008f52:	2200      	movs	r2, #0
 8008f54:	2103      	movs	r1, #3
 8008f56:	f7f8 fcad 	bl	80018b4 <IOE_Write>
}
 8008f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008f5e:	2002      	movs	r0, #2
 8008f60:	f7f8 bcf4 	b.w	800194c <IOE_Delay>
 8008f64:	20001fa4 	.word	0x20001fa4

08008f68 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008f68:	4b05      	ldr	r3, [pc, #20]	; (8008f80 <SystemInit+0x18>)
 8008f6a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008f6e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008f72:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008f76:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008f7a:	6099      	str	r1, [r3, #8]
#endif
}
 8008f7c:	4770      	bx	lr
 8008f7e:	bf00      	nop
 8008f80:	e000ed00 	.word	0xe000ed00

08008f84 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008f84:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008f86:	4b0b      	ldr	r3, [pc, #44]	; (8008fb4 <HAL_Init+0x30>)
 8008f88:	681a      	ldr	r2, [r3, #0]
 8008f8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008f8e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008f90:	681a      	ldr	r2, [r3, #0]
 8008f92:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008f96:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008f98:	681a      	ldr	r2, [r3, #0]
 8008f9a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008f9e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008fa0:	2003      	movs	r0, #3
 8008fa2:	f000 f82d 	bl	8009000 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008fa6:	2000      	movs	r0, #0
 8008fa8:	f7f9 f948 	bl	800223c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008fac:	f7f8 fec6 	bl	8001d3c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008fb0:	2000      	movs	r0, #0
 8008fb2:	bd08      	pop	{r3, pc}
 8008fb4:	40023c00 	.word	0x40023c00

08008fb8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008fb8:	4a03      	ldr	r2, [pc, #12]	; (8008fc8 <HAL_IncTick+0x10>)
 8008fba:	4b04      	ldr	r3, [pc, #16]	; (8008fcc <HAL_IncTick+0x14>)
 8008fbc:	6811      	ldr	r1, [r2, #0]
 8008fbe:	781b      	ldrb	r3, [r3, #0]
 8008fc0:	440b      	add	r3, r1
 8008fc2:	6013      	str	r3, [r2, #0]
}
 8008fc4:	4770      	bx	lr
 8008fc6:	bf00      	nop
 8008fc8:	20001fa8 	.word	0x20001fa8
 8008fcc:	2000007c 	.word	0x2000007c

08008fd0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008fd0:	4b01      	ldr	r3, [pc, #4]	; (8008fd8 <HAL_GetTick+0x8>)
 8008fd2:	6818      	ldr	r0, [r3, #0]
}
 8008fd4:	4770      	bx	lr
 8008fd6:	bf00      	nop
 8008fd8:	20001fa8 	.word	0x20001fa8

08008fdc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008fdc:	b538      	push	{r3, r4, r5, lr}
 8008fde:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008fe0:	f7ff fff6 	bl	8008fd0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008fe4:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008fe6:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008fe8:	d002      	beq.n	8008ff0 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008fea:	4b04      	ldr	r3, [pc, #16]	; (8008ffc <HAL_Delay+0x20>)
 8008fec:	781b      	ldrb	r3, [r3, #0]
 8008fee:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008ff0:	f7ff ffee 	bl	8008fd0 <HAL_GetTick>
 8008ff4:	1b43      	subs	r3, r0, r5
 8008ff6:	42a3      	cmp	r3, r4
 8008ff8:	d3fa      	bcc.n	8008ff0 <HAL_Delay+0x14>
  {
  }
}
 8008ffa:	bd38      	pop	{r3, r4, r5, pc}
 8008ffc:	2000007c 	.word	0x2000007c

08009000 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009000:	4907      	ldr	r1, [pc, #28]	; (8009020 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009002:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009004:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009006:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800900a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800900e:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009010:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009012:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009016:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800901a:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800901c:	4770      	bx	lr
 800901e:	bf00      	nop
 8009020:	e000ed00 	.word	0xe000ed00

08009024 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009024:	4b1c      	ldr	r3, [pc, #112]	; (8009098 <HAL_NVIC_SetPriority+0x74>)
 8009026:	68db      	ldr	r3, [r3, #12]
 8009028:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800902c:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800902e:	f1c3 0e07 	rsb	lr, r3, #7
 8009032:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009036:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800903a:	bf28      	it	cs
 800903c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009040:	f1bc 0f06 	cmp.w	ip, #6
 8009044:	d91b      	bls.n	800907e <HAL_NVIC_SetPriority+0x5a>
 8009046:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009048:	f04f 3cff 	mov.w	ip, #4294967295
 800904c:	fa0c fc03 	lsl.w	ip, ip, r3
 8009050:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009054:	f04f 3cff 	mov.w	ip, #4294967295
 8009058:	fa0c fc0e 	lsl.w	ip, ip, lr
 800905c:	ea21 010c 	bic.w	r1, r1, ip
 8009060:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009062:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009064:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009068:	db0c      	blt.n	8009084 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800906a:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800906e:	0109      	lsls	r1, r1, #4
 8009070:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009074:	b2c9      	uxtb	r1, r1
 8009076:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800907a:	f85d fb04 	ldr.w	pc, [sp], #4
 800907e:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009080:	4613      	mov	r3, r2
 8009082:	e7e7      	b.n	8009054 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009084:	4b05      	ldr	r3, [pc, #20]	; (800909c <HAL_NVIC_SetPriority+0x78>)
 8009086:	f000 000f 	and.w	r0, r0, #15
 800908a:	0109      	lsls	r1, r1, #4
 800908c:	4403      	add	r3, r0
 800908e:	b2c9      	uxtb	r1, r1
 8009090:	7619      	strb	r1, [r3, #24]
 8009092:	f85d fb04 	ldr.w	pc, [sp], #4
 8009096:	bf00      	nop
 8009098:	e000ed00 	.word	0xe000ed00
 800909c:	e000ecfc 	.word	0xe000ecfc

080090a0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80090a0:	2800      	cmp	r0, #0
 80090a2:	db07      	blt.n	80090b4 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80090a4:	0941      	lsrs	r1, r0, #5
 80090a6:	4a04      	ldr	r2, [pc, #16]	; (80090b8 <HAL_NVIC_EnableIRQ+0x18>)
 80090a8:	f000 001f 	and.w	r0, r0, #31
 80090ac:	2301      	movs	r3, #1
 80090ae:	4083      	lsls	r3, r0
 80090b0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80090b4:	4770      	bx	lr
 80090b6:	bf00      	nop
 80090b8:	e000e100 	.word	0xe000e100

080090bc <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80090bc:	b180      	cbz	r0, 80090e0 <HAL_CRC_Init+0x24>
{
 80090be:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80090c0:	7943      	ldrb	r3, [r0, #5]
 80090c2:	4604      	mov	r4, r0
 80090c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80090c8:	b11b      	cbz	r3, 80090d2 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80090ca:	2301      	movs	r3, #1
 80090cc:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80090ce:	2000      	movs	r0, #0
}
 80090d0:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80090d2:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80090d4:	f7f8 fe52 	bl	8001d7c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80090d8:	2301      	movs	r3, #1
 80090da:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80090dc:	2000      	movs	r0, #0
}
 80090de:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80090e0:	2001      	movs	r0, #1
}
 80090e2:	4770      	bx	lr

080090e4 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80090e4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80090e8:	2b02      	cmp	r3, #2
 80090ea:	d003      	beq.n	80090f4 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80090ec:	2380      	movs	r3, #128	; 0x80
 80090ee:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80090f0:	2001      	movs	r0, #1
 80090f2:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80090f4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80090f6:	2305      	movs	r3, #5
 80090f8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80090fc:	6813      	ldr	r3, [r2, #0]
 80090fe:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009102:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009104:	6013      	str	r3, [r2, #0]
}
 8009106:	4770      	bx	lr

08009108 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009108:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800910c:	4770      	bx	lr
 800910e:	bf00      	nop

08009110 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009114:	2200      	movs	r2, #0
 8009116:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009118:	f8df a260 	ldr.w	sl, [pc, #608]	; 800937c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800911c:	4e90      	ldr	r6, [pc, #576]	; (8009360 <HAL_GPIO_Init+0x250>)
{
 800911e:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009120:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009122:	4689      	mov	r9, r1
 8009124:	e005      	b.n	8009132 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009126:	3301      	adds	r3, #1
 8009128:	2b10      	cmp	r3, #16
 800912a:	f102 0202 	add.w	r2, r2, #2
 800912e:	f000 8095 	beq.w	800925c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009132:	2101      	movs	r1, #1
 8009134:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009136:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800913a:	43a1      	bics	r1, r4
 800913c:	d1f3      	bne.n	8009126 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800913e:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009142:	f00c 0103 	and.w	r1, ip, #3
 8009146:	1e4d      	subs	r5, r1, #1
 8009148:	2d01      	cmp	r5, #1
 800914a:	f240 808a 	bls.w	8009262 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800914e:	2903      	cmp	r1, #3
 8009150:	f040 80ca 	bne.w	80092e8 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009154:	4091      	lsls	r1, r2
 8009156:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009158:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800915a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800915c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800915e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009162:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009164:	d0df      	beq.n	8009126 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009166:	2100      	movs	r1, #0
 8009168:	9103      	str	r1, [sp, #12]
 800916a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800916e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009172:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009176:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800917a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800917e:	9103      	str	r1, [sp, #12]
 8009180:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009182:	f023 0103 	bic.w	r1, r3, #3
 8009186:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800918a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800918e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009192:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009194:	00bf      	lsls	r7, r7, #2
 8009196:	f04f 0e0f 	mov.w	lr, #15
 800919a:	fa0e fe07 	lsl.w	lr, lr, r7
 800919e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80091a2:	4d70      	ldr	r5, [pc, #448]	; (8009364 <HAL_GPIO_Init+0x254>)
 80091a4:	42a8      	cmp	r0, r5
 80091a6:	d02e      	beq.n	8009206 <HAL_GPIO_Init+0xf6>
 80091a8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80091ac:	42a8      	cmp	r0, r5
 80091ae:	f000 809f 	beq.w	80092f0 <HAL_GPIO_Init+0x1e0>
 80091b2:	4d6d      	ldr	r5, [pc, #436]	; (8009368 <HAL_GPIO_Init+0x258>)
 80091b4:	42a8      	cmp	r0, r5
 80091b6:	f000 80a2 	beq.w	80092fe <HAL_GPIO_Init+0x1ee>
 80091ba:	4d6c      	ldr	r5, [pc, #432]	; (800936c <HAL_GPIO_Init+0x25c>)
 80091bc:	42a8      	cmp	r0, r5
 80091be:	f000 80a5 	beq.w	800930c <HAL_GPIO_Init+0x1fc>
 80091c2:	4d6b      	ldr	r5, [pc, #428]	; (8009370 <HAL_GPIO_Init+0x260>)
 80091c4:	42a8      	cmp	r0, r5
 80091c6:	f000 80a8 	beq.w	800931a <HAL_GPIO_Init+0x20a>
 80091ca:	4d6a      	ldr	r5, [pc, #424]	; (8009374 <HAL_GPIO_Init+0x264>)
 80091cc:	42a8      	cmp	r0, r5
 80091ce:	f000 80b2 	beq.w	8009336 <HAL_GPIO_Init+0x226>
 80091d2:	4d69      	ldr	r5, [pc, #420]	; (8009378 <HAL_GPIO_Init+0x268>)
 80091d4:	42a8      	cmp	r0, r5
 80091d6:	f000 80b5 	beq.w	8009344 <HAL_GPIO_Init+0x234>
 80091da:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009380 <HAL_GPIO_Init+0x270>
 80091de:	4570      	cmp	r0, lr
 80091e0:	f000 80a2 	beq.w	8009328 <HAL_GPIO_Init+0x218>
 80091e4:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009384 <HAL_GPIO_Init+0x274>
 80091e8:	4570      	cmp	r0, lr
 80091ea:	f000 80b2 	beq.w	8009352 <HAL_GPIO_Init+0x242>
 80091ee:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009388 <HAL_GPIO_Init+0x278>
 80091f2:	4570      	cmp	r0, lr
 80091f4:	bf0c      	ite	eq
 80091f6:	f04f 0e09 	moveq.w	lr, #9
 80091fa:	f04f 0e0a 	movne.w	lr, #10
 80091fe:	fa0e f707 	lsl.w	r7, lr, r7
 8009202:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009206:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800920a:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800920c:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009210:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009214:	bf0c      	ite	eq
 8009216:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009218:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800921c:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800921e:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009220:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009224:	bf0c      	ite	eq
 8009226:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009228:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800922c:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800922e:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009230:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009234:	bf0c      	ite	eq
 8009236:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009238:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800923c:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800923e:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009240:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009244:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009248:	bf0c      	ite	eq
 800924a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800924c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009250:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009252:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009254:	f102 0202 	add.w	r2, r2, #2
 8009258:	f47f af6b 	bne.w	8009132 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800925c:	b005      	add	sp, #20
 800925e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009262:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009266:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800926a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800926e:	2503      	movs	r5, #3
 8009270:	fa05 f802 	lsl.w	r8, r5, r2
 8009274:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009278:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800927c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800927e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009280:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009284:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009288:	409f      	lsls	r7, r3
 800928a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800928e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009292:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009294:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009296:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800929a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800929e:	4097      	lsls	r7, r2
 80092a0:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80092a4:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 80092a6:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80092a8:	fa01 f102 	lsl.w	r1, r1, r2
 80092ac:	f47f af54 	bne.w	8009158 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80092b0:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80092b4:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80092b8:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80092bc:	f8de 7020 	ldr.w	r7, [lr, #32]
 80092c0:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80092c2:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80092c6:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80092ca:	fa07 f708 	lsl.w	r7, r7, r8
 80092ce:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80092d0:	270f      	movs	r7, #15
 80092d2:	fa07 f808 	lsl.w	r8, r7, r8
 80092d6:	9f00      	ldr	r7, [sp, #0]
 80092d8:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80092dc:	9f01      	ldr	r7, [sp, #4]
 80092de:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80092e2:	f8ce 7020 	str.w	r7, [lr, #32]
 80092e6:	e737      	b.n	8009158 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092e8:	2503      	movs	r5, #3
 80092ea:	4095      	lsls	r5, r2
 80092ec:	43ed      	mvns	r5, r5
 80092ee:	e7d1      	b.n	8009294 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80092f0:	f04f 0e01 	mov.w	lr, #1
 80092f4:	fa0e f707 	lsl.w	r7, lr, r7
 80092f8:	ea48 0807 	orr.w	r8, r8, r7
 80092fc:	e783      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 80092fe:	f04f 0e02 	mov.w	lr, #2
 8009302:	fa0e f707 	lsl.w	r7, lr, r7
 8009306:	ea48 0807 	orr.w	r8, r8, r7
 800930a:	e77c      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 800930c:	f04f 0e03 	mov.w	lr, #3
 8009310:	fa0e f707 	lsl.w	r7, lr, r7
 8009314:	ea48 0807 	orr.w	r8, r8, r7
 8009318:	e775      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 800931a:	f04f 0e04 	mov.w	lr, #4
 800931e:	fa0e f707 	lsl.w	r7, lr, r7
 8009322:	ea48 0807 	orr.w	r8, r8, r7
 8009326:	e76e      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 8009328:	f04f 0e07 	mov.w	lr, #7
 800932c:	fa0e f707 	lsl.w	r7, lr, r7
 8009330:	ea48 0807 	orr.w	r8, r8, r7
 8009334:	e767      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 8009336:	f04f 0e05 	mov.w	lr, #5
 800933a:	fa0e f707 	lsl.w	r7, lr, r7
 800933e:	ea48 0807 	orr.w	r8, r8, r7
 8009342:	e760      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 8009344:	f04f 0e06 	mov.w	lr, #6
 8009348:	fa0e f707 	lsl.w	r7, lr, r7
 800934c:	ea48 0807 	orr.w	r8, r8, r7
 8009350:	e759      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 8009352:	f04f 0e08 	mov.w	lr, #8
 8009356:	fa0e f707 	lsl.w	r7, lr, r7
 800935a:	ea48 0807 	orr.w	r8, r8, r7
 800935e:	e752      	b.n	8009206 <HAL_GPIO_Init+0xf6>
 8009360:	40013c00 	.word	0x40013c00
 8009364:	40020000 	.word	0x40020000
 8009368:	40020800 	.word	0x40020800
 800936c:	40020c00 	.word	0x40020c00
 8009370:	40021000 	.word	0x40021000
 8009374:	40021400 	.word	0x40021400
 8009378:	40021800 	.word	0x40021800
 800937c:	40023800 	.word	0x40023800
 8009380:	40021c00 	.word	0x40021c00
 8009384:	40022000 	.word	0x40022000
 8009388:	40022400 	.word	0x40022400

0800938c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800938c:	6903      	ldr	r3, [r0, #16]
 800938e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009390:	bf14      	ite	ne
 8009392:	2001      	movne	r0, #1
 8009394:	2000      	moveq	r0, #0
 8009396:	4770      	bx	lr

08009398 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009398:	b902      	cbnz	r2, 800939c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800939a:	0409      	lsls	r1, r1, #16
 800939c:	6181      	str	r1, [r0, #24]
  }
}
 800939e:	4770      	bx	lr

080093a0 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80093a0:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80093a2:	ea01 0203 	and.w	r2, r1, r3
 80093a6:	ea21 0103 	bic.w	r1, r1, r3
 80093aa:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80093ae:	6181      	str	r1, [r0, #24]
}
 80093b0:	4770      	bx	lr
 80093b2:	bf00      	nop

080093b4 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80093b4:	4770      	bx	lr
 80093b6:	bf00      	nop

080093b8 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80093b8:	4a04      	ldr	r2, [pc, #16]	; (80093cc <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80093ba:	6951      	ldr	r1, [r2, #20]
 80093bc:	4201      	tst	r1, r0
 80093be:	d100      	bne.n	80093c2 <HAL_GPIO_EXTI_IRQHandler+0xa>
 80093c0:	4770      	bx	lr
{
 80093c2:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80093c4:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80093c6:	f7ff fff5 	bl	80093b4 <HAL_GPIO_EXTI_Callback>
}
 80093ca:	bd08      	pop	{r3, pc}
 80093cc:	40013c00 	.word	0x40013c00

080093d0 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80093d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093d4:	6804      	ldr	r4, [r0, #0]
{
 80093d6:	b083      	sub	sp, #12
 80093d8:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093da:	6823      	ldr	r3, [r4, #0]
{
 80093dc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80093e0:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80093e8:	4606      	mov	r6, r0
 80093ea:	468a      	mov	sl, r1
 80093ec:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093ee:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80093f0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80093f4:	d136      	bne.n	8009464 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80093f6:	6965      	ldr	r5, [r4, #20]
 80093f8:	07e8      	lsls	r0, r5, #31
 80093fa:	d5fc      	bpl.n	80093f6 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80093fc:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009400:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009402:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009406:	d003      	beq.n	8009410 <I2C_RequestMemoryWrite+0x40>
 8009408:	e04f      	b.n	80094aa <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800940a:	6961      	ldr	r1, [r4, #20]
 800940c:	054d      	lsls	r5, r1, #21
 800940e:	d45d      	bmi.n	80094cc <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009410:	6961      	ldr	r1, [r4, #20]
 8009412:	078b      	lsls	r3, r1, #30
 8009414:	d5f9      	bpl.n	800940a <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009416:	2300      	movs	r3, #0
 8009418:	9301      	str	r3, [sp, #4]
 800941a:	6963      	ldr	r3, [r4, #20]
 800941c:	9301      	str	r3, [sp, #4]
 800941e:	69a3      	ldr	r3, [r4, #24]
 8009420:	9301      	str	r3, [sp, #4]
 8009422:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009424:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009428:	f040 8088 	bne.w	800953c <I2C_RequestMemoryWrite+0x16c>
 800942c:	6963      	ldr	r3, [r4, #20]
 800942e:	061a      	lsls	r2, r3, #24
 8009430:	d464      	bmi.n	80094fc <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009432:	6963      	ldr	r3, [r4, #20]
 8009434:	055b      	lsls	r3, r3, #21
 8009436:	d5f9      	bpl.n	800942c <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009438:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800943a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800943e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009440:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009442:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009444:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009448:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800944c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800944e:	f043 0304 	orr.w	r3, r3, #4
 8009452:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009454:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009456:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009458:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800945a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800945e:	d066      	beq.n	800952e <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009460:	2001      	movs	r0, #1
 8009462:	e01f      	b.n	80094a4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009464:	6963      	ldr	r3, [r4, #20]
 8009466:	07d9      	lsls	r1, r3, #31
 8009468:	d4c8      	bmi.n	80093fc <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800946a:	f7ff fdb1 	bl	8008fd0 <HAL_GetTick>
 800946e:	eba0 000b 	sub.w	r0, r0, fp
 8009472:	4581      	cmp	r9, r0
 8009474:	d304      	bcc.n	8009480 <I2C_RequestMemoryWrite+0xb0>
 8009476:	f1b9 0f00 	cmp.w	r9, #0
 800947a:	d001      	beq.n	8009480 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800947c:	6834      	ldr	r4, [r6, #0]
 800947e:	e7b7      	b.n	80093f0 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009480:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009482:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009484:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009486:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800948a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800948e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009490:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009492:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009496:	f042 0220 	orr.w	r2, r2, #32
 800949a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800949c:	680b      	ldr	r3, [r1, #0]
 800949e:	05dc      	lsls	r4, r3, #23
 80094a0:	d435      	bmi.n	800950e <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 80094a2:	2003      	movs	r0, #3
}
 80094a4:	b003      	add	sp, #12
 80094a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094aa:	6963      	ldr	r3, [r4, #20]
 80094ac:	0798      	lsls	r0, r3, #30
 80094ae:	d4b2      	bmi.n	8009416 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094b0:	6963      	ldr	r3, [r4, #20]
 80094b2:	055a      	lsls	r2, r3, #21
 80094b4:	d40a      	bmi.n	80094cc <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80094b6:	f7ff fd8b 	bl	8008fd0 <HAL_GetTick>
 80094ba:	eba0 000b 	sub.w	r0, r0, fp
 80094be:	4581      	cmp	r9, r0
 80094c0:	d34e      	bcc.n	8009560 <I2C_RequestMemoryWrite+0x190>
 80094c2:	f1b9 0f00 	cmp.w	r9, #0
 80094c6:	d04b      	beq.n	8009560 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094c8:	6834      	ldr	r4, [r6, #0]
 80094ca:	e79a      	b.n	8009402 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80094cc:	6823      	ldr	r3, [r4, #0]
 80094ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80094d2:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80094d4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094d6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80094da:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094dc:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80094de:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80094e0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80094e4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094e8:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80094ea:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094ee:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80094f2:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094f4:	6433      	str	r3, [r6, #64]	; 0x40
}
 80094f6:	b003      	add	sp, #12
 80094f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80094fc:	f1b8 0f01 	cmp.w	r8, #1
 8009500:	d109      	bne.n	8009516 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009502:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009504:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009506:	6127      	str	r7, [r4, #16]
}
 8009508:	b003      	add	sp, #12
 800950a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800950e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009512:	6433      	str	r3, [r6, #64]	; 0x40
 8009514:	e7c5      	b.n	80094a2 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009516:	0a3b      	lsrs	r3, r7, #8
 8009518:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800951a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800951e:	d12e      	bne.n	800957e <I2C_RequestMemoryWrite+0x1ae>
 8009520:	6963      	ldr	r3, [r4, #20]
 8009522:	0619      	lsls	r1, r3, #24
 8009524:	d4ed      	bmi.n	8009502 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009526:	6963      	ldr	r3, [r4, #20]
 8009528:	055a      	lsls	r2, r3, #21
 800952a:	d5f9      	bpl.n	8009520 <I2C_RequestMemoryWrite+0x150>
 800952c:	e784      	b.n	8009438 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800952e:	6832      	ldr	r2, [r6, #0]
 8009530:	6813      	ldr	r3, [r2, #0]
 8009532:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009536:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009538:	6013      	str	r3, [r2, #0]
 800953a:	e7b3      	b.n	80094a4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800953c:	6963      	ldr	r3, [r4, #20]
 800953e:	061d      	lsls	r5, r3, #24
 8009540:	d4dc      	bmi.n	80094fc <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009542:	6963      	ldr	r3, [r4, #20]
 8009544:	0559      	lsls	r1, r3, #21
 8009546:	f53f af77 	bmi.w	8009438 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800954a:	f7ff fd41 	bl	8008fd0 <HAL_GetTick>
 800954e:	eba0 000b 	sub.w	r0, r0, fp
 8009552:	4581      	cmp	r9, r0
 8009554:	d325      	bcc.n	80095a2 <I2C_RequestMemoryWrite+0x1d2>
 8009556:	f1b9 0f00 	cmp.w	r9, #0
 800955a:	d022      	beq.n	80095a2 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800955c:	6834      	ldr	r4, [r6, #0]
 800955e:	e761      	b.n	8009424 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009560:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009562:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009564:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009566:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800956a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800956e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009570:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009574:	f043 0320 	orr.w	r3, r3, #32
 8009578:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800957a:	2001      	movs	r0, #1
 800957c:	e792      	b.n	80094a4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800957e:	6963      	ldr	r3, [r4, #20]
 8009580:	061b      	lsls	r3, r3, #24
 8009582:	d4be      	bmi.n	8009502 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009584:	6963      	ldr	r3, [r4, #20]
 8009586:	0558      	lsls	r0, r3, #21
 8009588:	f53f af56 	bmi.w	8009438 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800958c:	f7ff fd20 	bl	8008fd0 <HAL_GetTick>
 8009590:	eba0 000b 	sub.w	r0, r0, fp
 8009594:	4581      	cmp	r9, r0
 8009596:	d304      	bcc.n	80095a2 <I2C_RequestMemoryWrite+0x1d2>
 8009598:	f1b9 0f00 	cmp.w	r9, #0
 800959c:	d001      	beq.n	80095a2 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800959e:	6834      	ldr	r4, [r6, #0]
 80095a0:	e7bb      	b.n	800951a <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80095a2:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80095a4:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80095a6:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80095a8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80095ac:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80095b0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80095b2:	4313      	orrs	r3, r2
 80095b4:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80095b6:	e74d      	b.n	8009454 <I2C_RequestMemoryWrite+0x84>

080095b8 <I2C_RequestMemoryRead>:
{
 80095b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80095bc:	6804      	ldr	r4, [r0, #0]
{
 80095be:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80095c0:	6823      	ldr	r3, [r4, #0]
 80095c2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80095c6:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095c8:	6823      	ldr	r3, [r4, #0]
{
 80095ca:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80095d0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80095d4:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095d8:	6023      	str	r3, [r4, #0]
{
 80095da:	4606      	mov	r6, r0
 80095dc:	468b      	mov	fp, r1
 80095de:	4617      	mov	r7, r2
 80095e0:	f1ba 3fff 	cmp.w	sl, #4294967295
 80095e4:	d13a      	bne.n	800965c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80095e6:	6965      	ldr	r5, [r4, #20]
 80095e8:	07eb      	lsls	r3, r5, #31
 80095ea:	d5fc      	bpl.n	80095e6 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80095ec:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80095f0:	6123      	str	r3, [r4, #16]
 80095f2:	fa5f fb8b 	uxtb.w	fp, fp
 80095f6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80095fa:	d003      	beq.n	8009604 <I2C_RequestMemoryRead+0x4c>
 80095fc:	e069      	b.n	80096d2 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095fe:	6965      	ldr	r5, [r4, #20]
 8009600:	056a      	lsls	r2, r5, #21
 8009602:	d44e      	bmi.n	80096a2 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009604:	6965      	ldr	r5, [r4, #20]
 8009606:	07a9      	lsls	r1, r5, #30
 8009608:	d5f9      	bpl.n	80095fe <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800960a:	2300      	movs	r3, #0
 800960c:	9301      	str	r3, [sp, #4]
 800960e:	6963      	ldr	r3, [r4, #20]
 8009610:	9301      	str	r3, [sp, #4]
 8009612:	69a3      	ldr	r3, [r4, #24]
 8009614:	9301      	str	r3, [sp, #4]
 8009616:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009618:	f1ba 3fff 	cmp.w	sl, #4294967295
 800961c:	f040 80bd 	bne.w	800979a <I2C_RequestMemoryRead+0x1e2>
 8009620:	6963      	ldr	r3, [r4, #20]
 8009622:	0618      	lsls	r0, r3, #24
 8009624:	d468      	bmi.n	80096f8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009626:	6963      	ldr	r3, [r4, #20]
 8009628:	0559      	lsls	r1, r3, #21
 800962a:	d5f9      	bpl.n	8009620 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800962c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800962e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009632:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009634:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009636:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009638:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800963c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009640:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009642:	f043 0304 	orr.w	r3, r3, #4
 8009646:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009648:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800964a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800964c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800964e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009652:	d070      	beq.n	8009736 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009654:	2001      	movs	r0, #1
}
 8009656:	b003      	add	sp, #12
 8009658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800965c:	6963      	ldr	r3, [r4, #20]
 800965e:	07dd      	lsls	r5, r3, #31
 8009660:	d4c4      	bmi.n	80095ec <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009662:	f7ff fcb5 	bl	8008fd0 <HAL_GetTick>
 8009666:	eba0 0009 	sub.w	r0, r0, r9
 800966a:	4582      	cmp	sl, r0
 800966c:	d304      	bcc.n	8009678 <I2C_RequestMemoryRead+0xc0>
 800966e:	f1ba 0f00 	cmp.w	sl, #0
 8009672:	d001      	beq.n	8009678 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009674:	6834      	ldr	r4, [r6, #0]
 8009676:	e7b3      	b.n	80095e0 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009678:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800967a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800967c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800967e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009682:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009686:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009688:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800968a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800968e:	f042 0220 	orr.w	r2, r2, #32
 8009692:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009694:	680b      	ldr	r3, [r1, #0]
 8009696:	05dc      	lsls	r4, r3, #23
 8009698:	d43d      	bmi.n	8009716 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800969a:	2003      	movs	r0, #3
}
 800969c:	b003      	add	sp, #12
 800969e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096a2:	6823      	ldr	r3, [r4, #0]
 80096a4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80096a8:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80096aa:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096ac:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80096b0:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096b2:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80096b4:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80096b6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096ba:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096be:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80096c0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096c4:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80096c8:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096ca:	6433      	str	r3, [r6, #64]	; 0x40
}
 80096cc:	b003      	add	sp, #12
 80096ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096d2:	6963      	ldr	r3, [r4, #20]
 80096d4:	079b      	lsls	r3, r3, #30
 80096d6:	d498      	bmi.n	800960a <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096d8:	6963      	ldr	r3, [r4, #20]
 80096da:	0558      	lsls	r0, r3, #21
 80096dc:	d4e1      	bmi.n	80096a2 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096de:	f7ff fc77 	bl	8008fd0 <HAL_GetTick>
 80096e2:	eba0 0009 	sub.w	r0, r0, r9
 80096e6:	4582      	cmp	sl, r0
 80096e8:	f0c0 808f 	bcc.w	800980a <I2C_RequestMemoryRead+0x252>
 80096ec:	f1ba 0f00 	cmp.w	sl, #0
 80096f0:	f000 808b 	beq.w	800980a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096f4:	6834      	ldr	r4, [r6, #0]
 80096f6:	e77e      	b.n	80095f6 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80096f8:	f1b8 0f01 	cmp.w	r8, #1
 80096fc:	d10f      	bne.n	800971e <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80096fe:	b2ff      	uxtb	r7, r7
 8009700:	6127      	str	r7, [r4, #16]
 8009702:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009706:	d16e      	bne.n	80097e6 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009708:	6963      	ldr	r3, [r4, #20]
 800970a:	061b      	lsls	r3, r3, #24
 800970c:	d41a      	bmi.n	8009744 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800970e:	6963      	ldr	r3, [r4, #20]
 8009710:	055f      	lsls	r7, r3, #21
 8009712:	d5f9      	bpl.n	8009708 <I2C_RequestMemoryRead+0x150>
 8009714:	e78a      	b.n	800962c <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009716:	f44f 7300 	mov.w	r3, #512	; 0x200
 800971a:	6433      	str	r3, [r6, #64]	; 0x40
 800971c:	e7bd      	b.n	800969a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800971e:	0a3b      	lsrs	r3, r7, #8
 8009720:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009722:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009726:	d17e      	bne.n	8009826 <I2C_RequestMemoryRead+0x26e>
 8009728:	6963      	ldr	r3, [r4, #20]
 800972a:	061d      	lsls	r5, r3, #24
 800972c:	d4e7      	bmi.n	80096fe <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800972e:	6963      	ldr	r3, [r4, #20]
 8009730:	0558      	lsls	r0, r3, #21
 8009732:	d5f9      	bpl.n	8009728 <I2C_RequestMemoryRead+0x170>
 8009734:	e77a      	b.n	800962c <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009736:	6832      	ldr	r2, [r6, #0]
 8009738:	6813      	ldr	r3, [r2, #0]
 800973a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800973e:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009740:	6013      	str	r3, [r2, #0]
 8009742:	e7ab      	b.n	800969c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009744:	6823      	ldr	r3, [r4, #0]
 8009746:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800974a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800974c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009750:	d113      	bne.n	800977a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009752:	6963      	ldr	r3, [r4, #20]
 8009754:	07d8      	lsls	r0, r3, #31
 8009756:	d5fc      	bpl.n	8009752 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009758:	f04b 0301 	orr.w	r3, fp, #1
 800975c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800975e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009762:	d003      	beq.n	800976c <I2C_RequestMemoryRead+0x1b4>
 8009764:	e02b      	b.n	80097be <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009766:	6963      	ldr	r3, [r4, #20]
 8009768:	055b      	lsls	r3, r3, #21
 800976a:	d49a      	bmi.n	80096a2 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800976c:	6963      	ldr	r3, [r4, #20]
 800976e:	43db      	mvns	r3, r3
 8009770:	f013 0302 	ands.w	r3, r3, #2
 8009774:	d1f7      	bne.n	8009766 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009776:	4618      	mov	r0, r3
 8009778:	e790      	b.n	800969c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800977a:	6963      	ldr	r3, [r4, #20]
 800977c:	07d9      	lsls	r1, r3, #31
 800977e:	d4eb      	bmi.n	8009758 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009780:	f7ff fc26 	bl	8008fd0 <HAL_GetTick>
 8009784:	eba0 0009 	sub.w	r0, r0, r9
 8009788:	4582      	cmp	sl, r0
 800978a:	f4ff af75 	bcc.w	8009678 <I2C_RequestMemoryRead+0xc0>
 800978e:	f1ba 0f00 	cmp.w	sl, #0
 8009792:	f43f af71 	beq.w	8009678 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009796:	6834      	ldr	r4, [r6, #0]
 8009798:	e7d8      	b.n	800974c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800979a:	6963      	ldr	r3, [r4, #20]
 800979c:	061a      	lsls	r2, r3, #24
 800979e:	d4ab      	bmi.n	80096f8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097a0:	6963      	ldr	r3, [r4, #20]
 80097a2:	055d      	lsls	r5, r3, #21
 80097a4:	f53f af42 	bmi.w	800962c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097a8:	f7ff fc12 	bl	8008fd0 <HAL_GetTick>
 80097ac:	eba0 0009 	sub.w	r0, r0, r9
 80097b0:	4582      	cmp	sl, r0
 80097b2:	d34b      	bcc.n	800984c <I2C_RequestMemoryRead+0x294>
 80097b4:	f1ba 0f00 	cmp.w	sl, #0
 80097b8:	d048      	beq.n	800984c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097ba:	6834      	ldr	r4, [r6, #0]
 80097bc:	e72c      	b.n	8009618 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097be:	6963      	ldr	r3, [r4, #20]
 80097c0:	43db      	mvns	r3, r3
 80097c2:	f013 0302 	ands.w	r3, r3, #2
 80097c6:	d0d6      	beq.n	8009776 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097c8:	6963      	ldr	r3, [r4, #20]
 80097ca:	055a      	lsls	r2, r3, #21
 80097cc:	f53f af69 	bmi.w	80096a2 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097d0:	f7ff fbfe 	bl	8008fd0 <HAL_GetTick>
 80097d4:	eba0 0009 	sub.w	r0, r0, r9
 80097d8:	4582      	cmp	sl, r0
 80097da:	d316      	bcc.n	800980a <I2C_RequestMemoryRead+0x252>
 80097dc:	f1ba 0f00 	cmp.w	sl, #0
 80097e0:	d013      	beq.n	800980a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097e2:	6834      	ldr	r4, [r6, #0]
 80097e4:	e7bb      	b.n	800975e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097e6:	6963      	ldr	r3, [r4, #20]
 80097e8:	061d      	lsls	r5, r3, #24
 80097ea:	d4ab      	bmi.n	8009744 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097ec:	6963      	ldr	r3, [r4, #20]
 80097ee:	055a      	lsls	r2, r3, #21
 80097f0:	f53f af1c 	bmi.w	800962c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097f4:	f7ff fbec 	bl	8008fd0 <HAL_GetTick>
 80097f8:	eba0 0009 	sub.w	r0, r0, r9
 80097fc:	4582      	cmp	sl, r0
 80097fe:	d325      	bcc.n	800984c <I2C_RequestMemoryRead+0x294>
 8009800:	f1ba 0f00 	cmp.w	sl, #0
 8009804:	d022      	beq.n	800984c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009806:	6834      	ldr	r4, [r6, #0]
 8009808:	e77b      	b.n	8009702 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800980a:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800980c:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800980e:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009810:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009814:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009818:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800981a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800981e:	f043 0320 	orr.w	r3, r3, #32
 8009822:	6433      	str	r3, [r6, #64]	; 0x40
 8009824:	e716      	b.n	8009654 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009826:	6963      	ldr	r3, [r4, #20]
 8009828:	0619      	lsls	r1, r3, #24
 800982a:	f53f af68 	bmi.w	80096fe <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800982e:	6963      	ldr	r3, [r4, #20]
 8009830:	055b      	lsls	r3, r3, #21
 8009832:	f53f aefb 	bmi.w	800962c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009836:	f7ff fbcb 	bl	8008fd0 <HAL_GetTick>
 800983a:	eba0 0009 	sub.w	r0, r0, r9
 800983e:	4582      	cmp	sl, r0
 8009840:	d304      	bcc.n	800984c <I2C_RequestMemoryRead+0x294>
 8009842:	f1ba 0f00 	cmp.w	sl, #0
 8009846:	d001      	beq.n	800984c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009848:	6834      	ldr	r4, [r6, #0]
 800984a:	e76a      	b.n	8009722 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800984c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800984e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009850:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009852:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009856:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800985a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800985c:	4313      	orrs	r3, r2
 800985e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009860:	e6f2      	b.n	8009648 <I2C_RequestMemoryRead+0x90>
 8009862:	bf00      	nop

08009864 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009864:	2800      	cmp	r0, #0
 8009866:	f000 80b9 	beq.w	80099dc <HAL_I2C_Init+0x178>
{
 800986a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800986c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009870:	4604      	mov	r4, r0
 8009872:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009876:	2b00      	cmp	r3, #0
 8009878:	f000 8098 	beq.w	80099ac <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800987c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800987e:	2224      	movs	r2, #36	; 0x24
 8009880:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009884:	681a      	ldr	r2, [r3, #0]
 8009886:	f022 0201 	bic.w	r2, r2, #1
 800988a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800988c:	681a      	ldr	r2, [r3, #0]
 800988e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009892:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009894:	681a      	ldr	r2, [r3, #0]
 8009896:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800989a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800989c:	f001 fe70 	bl	800b580 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80098a0:	6865      	ldr	r5, [r4, #4]
 80098a2:	4b4f      	ldr	r3, [pc, #316]	; (80099e0 <HAL_I2C_Init+0x17c>)
 80098a4:	429d      	cmp	r5, r3
 80098a6:	d84f      	bhi.n	8009948 <HAL_I2C_Init+0xe4>
 80098a8:	4b4e      	ldr	r3, [pc, #312]	; (80099e4 <HAL_I2C_Init+0x180>)
 80098aa:	4298      	cmp	r0, r3
 80098ac:	d97c      	bls.n	80099a8 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 80098ae:	4b4e      	ldr	r3, [pc, #312]	; (80099e8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80098b0:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 80098b2:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80098b6:	1e43      	subs	r3, r0, #1
 80098b8:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80098bc:	6822      	ldr	r2, [r4, #0]
 80098be:	6851      	ldr	r1, [r2, #4]
 80098c0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80098c4:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 80098c8:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80098ca:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 80098cc:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80098d0:	f10c 0c01 	add.w	ip, ip, #1
 80098d4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80098d8:	ea41 010c 	orr.w	r1, r1, ip
 80098dc:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80098de:	69d1      	ldr	r1, [r2, #28]
 80098e0:	f640 70fc 	movw	r0, #4092	; 0xffc
 80098e4:	3301      	adds	r3, #1
 80098e6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80098ea:	4203      	tst	r3, r0
 80098ec:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80098f0:	d161      	bne.n	80099b6 <HAL_I2C_Init+0x152>
 80098f2:	2304      	movs	r3, #4
 80098f4:	430b      	orrs	r3, r1
 80098f6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80098f8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80098fc:	6811      	ldr	r1, [r2, #0]
 80098fe:	4303      	orrs	r3, r0
 8009900:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009904:	430b      	orrs	r3, r1
 8009906:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009908:	6891      	ldr	r1, [r2, #8]
 800990a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800990e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009912:	4303      	orrs	r3, r0
 8009914:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009918:	430b      	orrs	r3, r1
 800991a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800991c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009920:	68d1      	ldr	r1, [r2, #12]
 8009922:	4303      	orrs	r3, r0
 8009924:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009928:	430b      	orrs	r3, r1
 800992a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800992c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800992e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009930:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009934:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009936:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009938:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800993a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800993e:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009940:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009944:	4618      	mov	r0, r3
}
 8009946:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009948:	4b28      	ldr	r3, [pc, #160]	; (80099ec <HAL_I2C_Init+0x188>)
 800994a:	4298      	cmp	r0, r3
 800994c:	d92c      	bls.n	80099a8 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800994e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009950:	4b25      	ldr	r3, [pc, #148]	; (80099e8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009952:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009954:	4e26      	ldr	r6, [pc, #152]	; (80099f0 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009956:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800995a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800995e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009962:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009964:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009968:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800996c:	fb01 f303 	mul.w	r3, r1, r3
 8009970:	fba6 6303 	umull	r6, r3, r6, r3
 8009974:	6a11      	ldr	r1, [r2, #32]
 8009976:	099b      	lsrs	r3, r3, #6
 8009978:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800997c:	3301      	adds	r3, #1
 800997e:	430b      	orrs	r3, r1
 8009980:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009982:	69d1      	ldr	r1, [r2, #28]
 8009984:	68a3      	ldr	r3, [r4, #8]
 8009986:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800998a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800998e:	b9ab      	cbnz	r3, 80099bc <HAL_I2C_Init+0x158>
 8009990:	1e43      	subs	r3, r0, #1
 8009992:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009996:	fbb3 f3f5 	udiv	r3, r3, r5
 800999a:	3301      	adds	r3, #1
 800999c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099a0:	b1d3      	cbz	r3, 80099d8 <HAL_I2C_Init+0x174>
 80099a2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80099a6:	e7a5      	b.n	80098f4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80099a8:	2001      	movs	r0, #1
}
 80099aa:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 80099ac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80099b0:	f7f8 f9fe 	bl	8001db0 <HAL_I2C_MspInit>
 80099b4:	e762      	b.n	800987c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80099b6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099ba:	e79b      	b.n	80098f4 <HAL_I2C_Init+0x90>
 80099bc:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80099c0:	1e43      	subs	r3, r0, #1
 80099c2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80099c6:	fbb3 f3f5 	udiv	r3, r3, r5
 80099ca:	3301      	adds	r3, #1
 80099cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099d0:	b113      	cbz	r3, 80099d8 <HAL_I2C_Init+0x174>
 80099d2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80099d6:	e78d      	b.n	80098f4 <HAL_I2C_Init+0x90>
 80099d8:	2301      	movs	r3, #1
 80099da:	e78b      	b.n	80098f4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80099dc:	2001      	movs	r0, #1
}
 80099de:	4770      	bx	lr
 80099e0:	000186a0 	.word	0x000186a0
 80099e4:	001e847f 	.word	0x001e847f
 80099e8:	431bde83 	.word	0x431bde83
 80099ec:	003d08ff 	.word	0x003d08ff
 80099f0:	10624dd3 	.word	0x10624dd3

080099f4 <HAL_I2C_Mem_Write>:
{
 80099f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099f8:	4604      	mov	r4, r0
 80099fa:	b083      	sub	sp, #12
 80099fc:	4699      	mov	r9, r3
 80099fe:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009a02:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009a04:	460f      	mov	r7, r1
 8009a06:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009a08:	f7ff fae2 	bl	8008fd0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009a0c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009a10:	2b20      	cmp	r3, #32
 8009a12:	d004      	beq.n	8009a1e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009a14:	2702      	movs	r7, #2
}
 8009a16:	4638      	mov	r0, r7
 8009a18:	b003      	add	sp, #12
 8009a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a1e:	4605      	mov	r5, r0
 8009a20:	e005      	b.n	8009a2e <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a22:	f7ff fad5 	bl	8008fd0 <HAL_GetTick>
 8009a26:	1b40      	subs	r0, r0, r5
 8009a28:	2819      	cmp	r0, #25
 8009a2a:	f200 80a8 	bhi.w	8009b7e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a2e:	6820      	ldr	r0, [r4, #0]
 8009a30:	6983      	ldr	r3, [r0, #24]
 8009a32:	ea6f 0c03 	mvn.w	ip, r3
 8009a36:	f01c 0b02 	ands.w	fp, ip, #2
 8009a3a:	d0f2      	beq.n	8009a22 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009a3c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009a40:	2b01      	cmp	r3, #1
 8009a42:	d0e7      	beq.n	8009a14 <HAL_I2C_Mem_Write+0x20>
 8009a44:	2301      	movs	r3, #1
 8009a46:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009a4a:	6803      	ldr	r3, [r0, #0]
 8009a4c:	07db      	lsls	r3, r3, #31
 8009a4e:	d572      	bpl.n	8009b36 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a50:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009a52:	6807      	ldr	r7, [r0, #0]
 8009a54:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009a58:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009a5a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009a5c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009a5e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a60:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009a64:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009a68:	2040      	movs	r0, #64	; 0x40
 8009a6a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009a6e:	2000      	movs	r0, #0
 8009a70:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009a72:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009a76:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009a78:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009a7a:	4856      	ldr	r0, [pc, #344]	; (8009bd4 <HAL_I2C_Mem_Write+0x1e0>)
 8009a7c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a7e:	464b      	mov	r3, r9
 8009a80:	4642      	mov	r2, r8
 8009a82:	4620      	mov	r0, r4
 8009a84:	f7ff fca4 	bl	80093d0 <I2C_RequestMemoryWrite>
 8009a88:	4607      	mov	r7, r0
 8009a8a:	bb00      	cbnz	r0, 8009ace <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009a8c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009a8e:	2b00      	cmp	r3, #0
 8009a90:	f000 809e 	beq.w	8009bd0 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009a94:	6823      	ldr	r3, [r4, #0]
 8009a96:	1c72      	adds	r2, r6, #1
 8009a98:	d159      	bne.n	8009b4e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a9a:	695a      	ldr	r2, [r3, #20]
 8009a9c:	0610      	lsls	r0, r2, #24
 8009a9e:	d41b      	bmi.n	8009ad8 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009aa0:	695a      	ldr	r2, [r3, #20]
 8009aa2:	0551      	lsls	r1, r2, #21
 8009aa4:	d5f9      	bpl.n	8009a9a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009aa6:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009aa8:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009aac:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009aae:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009ab0:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009ab2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009ab6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009aba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009abc:	f043 0304 	orr.w	r3, r3, #4
 8009ac0:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ac2:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009ac4:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ac6:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009ac8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009acc:	d038      	beq.n	8009b40 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009ace:	2701      	movs	r7, #1
}
 8009ad0:	4638      	mov	r0, r7
 8009ad2:	b003      	add	sp, #12
 8009ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ad8:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009adc:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ae0:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009ae2:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ae6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009aea:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009aec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009aee:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009af0:	3a01      	subs	r2, #1
 8009af2:	b292      	uxth	r2, r2
 8009af4:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009af6:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009af8:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009afa:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009afc:	0740      	lsls	r0, r0, #29
 8009afe:	d517      	bpl.n	8009b30 <HAL_I2C_Mem_Write+0x13c>
 8009b00:	b942      	cbnz	r2, 8009b14 <HAL_I2C_Mem_Write+0x120>
 8009b02:	1c72      	adds	r2, r6, #1
 8009b04:	d156      	bne.n	8009bb4 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009b06:	695a      	ldr	r2, [r3, #20]
 8009b08:	0750      	lsls	r0, r2, #29
 8009b0a:	d446      	bmi.n	8009b9a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b0c:	695a      	ldr	r2, [r3, #20]
 8009b0e:	0551      	lsls	r1, r2, #21
 8009b10:	d5f9      	bpl.n	8009b06 <HAL_I2C_Mem_Write+0x112>
 8009b12:	e7c8      	b.n	8009aa6 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b14:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009b18:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009b1a:	f10c 0102 	add.w	r1, ip, #2
 8009b1e:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009b20:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009b22:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009b26:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009b28:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009b2a:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009b2c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009b2e:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009b30:	2a00      	cmp	r2, #0
 8009b32:	d1b0      	bne.n	8009a96 <HAL_I2C_Mem_Write+0xa2>
 8009b34:	e7e5      	b.n	8009b02 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009b36:	6803      	ldr	r3, [r0, #0]
 8009b38:	f043 0301 	orr.w	r3, r3, #1
 8009b3c:	6003      	str	r3, [r0, #0]
 8009b3e:	e787      	b.n	8009a50 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b40:	6822      	ldr	r2, [r4, #0]
 8009b42:	6813      	ldr	r3, [r2, #0]
 8009b44:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009b48:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b4a:	6013      	str	r3, [r2, #0]
 8009b4c:	e763      	b.n	8009a16 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b4e:	695a      	ldr	r2, [r3, #20]
 8009b50:	0612      	lsls	r2, r2, #24
 8009b52:	d4c1      	bmi.n	8009ad8 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b54:	695a      	ldr	r2, [r3, #20]
 8009b56:	0551      	lsls	r1, r2, #21
 8009b58:	d4a5      	bmi.n	8009aa6 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b5a:	f7ff fa39 	bl	8008fd0 <HAL_GetTick>
 8009b5e:	1b40      	subs	r0, r0, r5
 8009b60:	4286      	cmp	r6, r0
 8009b62:	d301      	bcc.n	8009b68 <HAL_I2C_Mem_Write+0x174>
 8009b64:	2e00      	cmp	r6, #0
 8009b66:	d195      	bne.n	8009a94 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b68:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b6a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b6c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b6e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009b72:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b76:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b78:	4313      	orrs	r3, r2
 8009b7a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009b7c:	e7a1      	b.n	8009ac2 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b7e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b80:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b84:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009b88:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b8c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009b8e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b92:	f043 0320 	orr.w	r3, r3, #32
 8009b96:	6423      	str	r3, [r4, #64]	; 0x40
 8009b98:	e73c      	b.n	8009a14 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b9a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009b9c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009ba2:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ba4:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009ba6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009baa:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009bae:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009bb2:	e730      	b.n	8009a16 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009bb4:	695a      	ldr	r2, [r3, #20]
 8009bb6:	0752      	lsls	r2, r2, #29
 8009bb8:	d4ef      	bmi.n	8009b9a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bba:	695a      	ldr	r2, [r3, #20]
 8009bbc:	0551      	lsls	r1, r2, #21
 8009bbe:	f53f af72 	bmi.w	8009aa6 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009bc2:	f7ff fa05 	bl	8008fd0 <HAL_GetTick>
 8009bc6:	1b40      	subs	r0, r0, r5
 8009bc8:	4286      	cmp	r6, r0
 8009bca:	d3cd      	bcc.n	8009b68 <HAL_I2C_Mem_Write+0x174>
 8009bcc:	2e00      	cmp	r6, #0
 8009bce:	d0cb      	beq.n	8009b68 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009bd0:	6823      	ldr	r3, [r4, #0]
 8009bd2:	e796      	b.n	8009b02 <HAL_I2C_Mem_Write+0x10e>
 8009bd4:	ffff0000 	.word	0xffff0000

08009bd8 <HAL_I2C_Mem_Read>:
{
 8009bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bdc:	4604      	mov	r4, r0
 8009bde:	b087      	sub	sp, #28
 8009be0:	4699      	mov	r9, r3
 8009be2:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009be6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009be8:	460f      	mov	r7, r1
 8009bea:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009bec:	f7ff f9f0 	bl	8008fd0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009bf0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009bf4:	2b20      	cmp	r3, #32
 8009bf6:	d004      	beq.n	8009c02 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009bf8:	2702      	movs	r7, #2
}
 8009bfa:	4638      	mov	r0, r7
 8009bfc:	b007      	add	sp, #28
 8009bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c02:	4606      	mov	r6, r0
 8009c04:	e005      	b.n	8009c12 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c06:	f7ff f9e3 	bl	8008fd0 <HAL_GetTick>
 8009c0a:	1b80      	subs	r0, r0, r6
 8009c0c:	2819      	cmp	r0, #25
 8009c0e:	f200 80d2 	bhi.w	8009db6 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c12:	f8d4 c000 	ldr.w	ip, [r4]
 8009c16:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009c1a:	43c0      	mvns	r0, r0
 8009c1c:	f010 0b02 	ands.w	fp, r0, #2
 8009c20:	d0f1      	beq.n	8009c06 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009c22:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009c26:	2b01      	cmp	r3, #1
 8009c28:	d0e6      	beq.n	8009bf8 <HAL_I2C_Mem_Read+0x20>
 8009c2a:	2301      	movs	r3, #1
 8009c2c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009c30:	f8dc 3000 	ldr.w	r3, [ip]
 8009c34:	07d9      	lsls	r1, r3, #31
 8009c36:	d537      	bpl.n	8009ca8 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009c38:	f8dc 0000 	ldr.w	r0, [ip]
 8009c3c:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009c40:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009c44:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009c46:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009c48:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c4a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009c4e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009c52:	2040      	movs	r0, #64	; 0x40
 8009c54:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009c58:	2000      	movs	r0, #0
 8009c5a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009c5c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009c60:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009c62:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009c64:	4893      	ldr	r0, [pc, #588]	; (8009eb4 <HAL_I2C_Mem_Read+0x2dc>)
 8009c66:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c68:	4639      	mov	r1, r7
 8009c6a:	464b      	mov	r3, r9
 8009c6c:	4642      	mov	r2, r8
 8009c6e:	4620      	mov	r0, r4
 8009c70:	f7ff fca2 	bl	80095b8 <I2C_RequestMemoryRead>
 8009c74:	4607      	mov	r7, r0
 8009c76:	2800      	cmp	r0, #0
 8009c78:	f040 80ab 	bne.w	8009dd2 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009c7c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009c7e:	b9d2      	cbnz	r2, 8009cb6 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009c80:	6823      	ldr	r3, [r4, #0]
 8009c82:	9002      	str	r0, [sp, #8]
 8009c84:	695a      	ldr	r2, [r3, #20]
 8009c86:	9202      	str	r2, [sp, #8]
 8009c88:	699a      	ldr	r2, [r3, #24]
 8009c8a:	9202      	str	r2, [sp, #8]
 8009c8c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c8e:	681a      	ldr	r2, [r3, #0]
 8009c90:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c94:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c96:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009c98:	2220      	movs	r2, #32
 8009c9a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009c9e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ca2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009ca6:	e7a8      	b.n	8009bfa <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009ca8:	f8dc 3000 	ldr.w	r3, [ip]
 8009cac:	f043 0301 	orr.w	r3, r3, #1
 8009cb0:	f8cc 3000 	str.w	r3, [ip]
 8009cb4:	e7c0      	b.n	8009c38 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009cb6:	2a01      	cmp	r2, #1
 8009cb8:	f000 812c 	beq.w	8009f14 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009cbc:	2a02      	cmp	r2, #2
 8009cbe:	f000 80bd 	beq.w	8009e3c <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009cc2:	6823      	ldr	r3, [r4, #0]
 8009cc4:	9005      	str	r0, [sp, #20]
 8009cc6:	6959      	ldr	r1, [r3, #20]
 8009cc8:	9105      	str	r1, [sp, #20]
 8009cca:	6999      	ldr	r1, [r3, #24]
 8009ccc:	9105      	str	r1, [sp, #20]
 8009cce:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009cd0:	2a03      	cmp	r2, #3
 8009cd2:	d849      	bhi.n	8009d68 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009cd4:	2a01      	cmp	r2, #1
 8009cd6:	f000 80eb 	beq.w	8009eb0 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009cda:	2a02      	cmp	r2, #2
 8009cdc:	f000 8089 	beq.w	8009df2 <HAL_I2C_Mem_Read+0x21a>
 8009ce0:	1c69      	adds	r1, r5, #1
 8009ce2:	f040 80bb 	bne.w	8009e5c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ce6:	695a      	ldr	r2, [r3, #20]
 8009ce8:	0752      	lsls	r2, r2, #29
 8009cea:	d5fc      	bpl.n	8009ce6 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cec:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cee:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cf0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009cf4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cf6:	691b      	ldr	r3, [r3, #16]
 8009cf8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009cfa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009cfc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009cfe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d00:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009d02:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009d04:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009d06:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009d08:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d0a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d0c:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009d0e:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d10:	6822      	ldr	r2, [r4, #0]
 8009d12:	f040 80af 	bne.w	8009e74 <HAL_I2C_Mem_Read+0x29c>
 8009d16:	6953      	ldr	r3, [r2, #20]
 8009d18:	075b      	lsls	r3, r3, #29
 8009d1a:	d5fc      	bpl.n	8009d16 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d1c:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d1e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d20:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009d24:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d26:	6913      	ldr	r3, [r2, #16]
 8009d28:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009d2a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009d2c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009d2e:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d30:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009d32:	3b01      	subs	r3, #1
 8009d34:	b29b      	uxth	r3, r3
 8009d36:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d38:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009d3a:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009d3c:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009d40:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009d42:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d46:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009d48:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009d4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d4e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009d50:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009d52:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009d54:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009d56:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009d58:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d5a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d5c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009d5e:	2a00      	cmp	r2, #0
 8009d60:	d099      	beq.n	8009c96 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009d62:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009d64:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009d66:	d9b5      	bls.n	8009cd4 <HAL_I2C_Mem_Read+0xfc>
 8009d68:	b95d      	cbnz	r5, 8009d82 <HAL_I2C_Mem_Read+0x1aa>
 8009d6a:	e0c5      	b.n	8009ef8 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009d6c:	695a      	ldr	r2, [r3, #20]
 8009d6e:	06d0      	lsls	r0, r2, #27
 8009d70:	f100 80b2 	bmi.w	8009ed8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d74:	f7ff f92c 	bl	8008fd0 <HAL_GetTick>
 8009d78:	1b80      	subs	r0, r0, r6
 8009d7a:	4285      	cmp	r5, r0
 8009d7c:	f0c0 8086 	bcc.w	8009e8c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009d80:	6823      	ldr	r3, [r4, #0]
 8009d82:	695a      	ldr	r2, [r3, #20]
 8009d84:	0652      	lsls	r2, r2, #25
 8009d86:	d5f1      	bpl.n	8009d6c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d88:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d8a:	691b      	ldr	r3, [r3, #16]
 8009d8c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009d8e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d90:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009d92:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009d94:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009d96:	3b01      	subs	r3, #1
 8009d98:	b29b      	uxth	r3, r3
 8009d9a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d9c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009d9e:	3a01      	subs	r2, #1
 8009da0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009da2:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009da6:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009da8:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009daa:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009dae:	d5d6      	bpl.n	8009d5e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009db0:	6903      	ldr	r3, [r0, #16]
 8009db2:	704b      	strb	r3, [r1, #1]
 8009db4:	e036      	b.n	8009e24 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009db6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009db8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009dbc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009dc0:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009dc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009dc6:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009dca:	f043 0320 	orr.w	r3, r3, #32
 8009dce:	6423      	str	r3, [r4, #64]	; 0x40
 8009dd0:	e712      	b.n	8009bf8 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009dd2:	2701      	movs	r7, #1
}
 8009dd4:	4638      	mov	r0, r7
 8009dd6:	b007      	add	sp, #28
 8009dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ddc:	695a      	ldr	r2, [r3, #20]
 8009dde:	0750      	lsls	r0, r2, #29
 8009de0:	d40c      	bmi.n	8009dfc <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009de2:	f7ff f8f5 	bl	8008fd0 <HAL_GetTick>
 8009de6:	1b80      	subs	r0, r0, r6
 8009de8:	4285      	cmp	r5, r0
 8009dea:	d34f      	bcc.n	8009e8c <HAL_I2C_Mem_Read+0x2b4>
 8009dec:	2d00      	cmp	r5, #0
 8009dee:	d04d      	beq.n	8009e8c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009df0:	6823      	ldr	r3, [r4, #0]
 8009df2:	1c69      	adds	r1, r5, #1
 8009df4:	d1f2      	bne.n	8009ddc <HAL_I2C_Mem_Read+0x204>
 8009df6:	695a      	ldr	r2, [r3, #20]
 8009df8:	0752      	lsls	r2, r2, #29
 8009dfa:	d5fc      	bpl.n	8009df6 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009dfc:	681a      	ldr	r2, [r3, #0]
 8009dfe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e02:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e04:	691a      	ldr	r2, [r3, #16]
 8009e06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009e08:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009e0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009e0c:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009e0e:	3b01      	subs	r3, #1
 8009e10:	b29b      	uxth	r3, r3
 8009e12:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009e14:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009e16:	3b01      	subs	r3, #1
 8009e18:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e1a:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009e1c:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e1e:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009e20:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e22:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009e24:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e26:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009e28:	3301      	adds	r3, #1
 8009e2a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009e2c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009e2e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009e30:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009e32:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009e34:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009e36:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e38:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009e3a:	e790      	b.n	8009d5e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009e3c:	6823      	ldr	r3, [r4, #0]
 8009e3e:	6819      	ldr	r1, [r3, #0]
 8009e40:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009e44:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009e46:	6819      	ldr	r1, [r3, #0]
 8009e48:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009e4c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e4e:	9004      	str	r0, [sp, #16]
 8009e50:	6959      	ldr	r1, [r3, #20]
 8009e52:	9104      	str	r1, [sp, #16]
 8009e54:	6999      	ldr	r1, [r3, #24]
 8009e56:	9104      	str	r1, [sp, #16]
 8009e58:	9904      	ldr	r1, [sp, #16]
 8009e5a:	e739      	b.n	8009cd0 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e5c:	695a      	ldr	r2, [r3, #20]
 8009e5e:	0750      	lsls	r0, r2, #29
 8009e60:	f53f af44 	bmi.w	8009cec <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e64:	f7ff f8b4 	bl	8008fd0 <HAL_GetTick>
 8009e68:	1b80      	subs	r0, r0, r6
 8009e6a:	4285      	cmp	r5, r0
 8009e6c:	d30e      	bcc.n	8009e8c <HAL_I2C_Mem_Read+0x2b4>
 8009e6e:	b16d      	cbz	r5, 8009e8c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e70:	6823      	ldr	r3, [r4, #0]
 8009e72:	e735      	b.n	8009ce0 <HAL_I2C_Mem_Read+0x108>
 8009e74:	6953      	ldr	r3, [r2, #20]
 8009e76:	0758      	lsls	r0, r3, #29
 8009e78:	f53f af50 	bmi.w	8009d1c <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e7c:	f7ff f8a8 	bl	8008fd0 <HAL_GetTick>
 8009e80:	1b80      	subs	r0, r0, r6
 8009e82:	4285      	cmp	r5, r0
 8009e84:	d302      	bcc.n	8009e8c <HAL_I2C_Mem_Read+0x2b4>
 8009e86:	2d00      	cmp	r5, #0
 8009e88:	f47f af41 	bne.w	8009d0e <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e8c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e8e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e90:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e92:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e96:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e9a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009e9c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009ea0:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ea2:	f043 0320 	orr.w	r3, r3, #32
}
 8009ea6:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ea8:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009eaa:	b007      	add	sp, #28
 8009eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009eb0:	b95d      	cbnz	r5, 8009eca <HAL_I2C_Mem_Read+0x2f2>
 8009eb2:	e02b      	b.n	8009f0c <HAL_I2C_Mem_Read+0x334>
 8009eb4:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009eb8:	695a      	ldr	r2, [r3, #20]
 8009eba:	06d2      	lsls	r2, r2, #27
 8009ebc:	d40c      	bmi.n	8009ed8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ebe:	f7ff f887 	bl	8008fd0 <HAL_GetTick>
 8009ec2:	1b80      	subs	r0, r0, r6
 8009ec4:	4285      	cmp	r5, r0
 8009ec6:	d3e1      	bcc.n	8009e8c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009ec8:	6823      	ldr	r3, [r4, #0]
 8009eca:	695a      	ldr	r2, [r3, #20]
 8009ecc:	0651      	lsls	r1, r2, #25
 8009ece:	d5f3      	bpl.n	8009eb8 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ed0:	691a      	ldr	r2, [r3, #16]
 8009ed2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ed4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009ed6:	e7a5      	b.n	8009e24 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ed8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009eda:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ede:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009ee0:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ee2:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ee4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009ee8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009eec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009eee:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009ef0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009ef4:	2701      	movs	r7, #1
 8009ef6:	e680      	b.n	8009bfa <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009ef8:	695a      	ldr	r2, [r3, #20]
 8009efa:	0652      	lsls	r2, r2, #25
 8009efc:	f53f af44 	bmi.w	8009d88 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f00:	695a      	ldr	r2, [r3, #20]
 8009f02:	06d1      	lsls	r1, r2, #27
 8009f04:	d4e8      	bmi.n	8009ed8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f06:	f7ff f863 	bl	8008fd0 <HAL_GetTick>
 8009f0a:	e7bf      	b.n	8009e8c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f0c:	695a      	ldr	r2, [r3, #20]
 8009f0e:	0650      	lsls	r0, r2, #25
 8009f10:	d5f6      	bpl.n	8009f00 <HAL_I2C_Mem_Read+0x328>
 8009f12:	e7dd      	b.n	8009ed0 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f14:	6823      	ldr	r3, [r4, #0]
 8009f16:	6819      	ldr	r1, [r3, #0]
 8009f18:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009f1c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009f1e:	9003      	str	r0, [sp, #12]
 8009f20:	6959      	ldr	r1, [r3, #20]
 8009f22:	9103      	str	r1, [sp, #12]
 8009f24:	6999      	ldr	r1, [r3, #24]
 8009f26:	9103      	str	r1, [sp, #12]
 8009f28:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f2a:	6819      	ldr	r1, [r3, #0]
 8009f2c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009f30:	6019      	str	r1, [r3, #0]
 8009f32:	e6cd      	b.n	8009cd0 <HAL_I2C_Mem_Read+0xf8>

08009f34 <HAL_I2C_MasterTxCpltCallback>:
 8009f34:	4770      	bx	lr
 8009f36:	bf00      	nop

08009f38 <HAL_I2C_MasterRxCpltCallback>:
 8009f38:	4770      	bx	lr
 8009f3a:	bf00      	nop

08009f3c <HAL_I2C_SlaveTxCpltCallback>:
 8009f3c:	4770      	bx	lr
 8009f3e:	bf00      	nop

08009f40 <HAL_I2C_SlaveRxCpltCallback>:
 8009f40:	4770      	bx	lr
 8009f42:	bf00      	nop

08009f44 <HAL_I2C_AddrCallback>:
}
 8009f44:	4770      	bx	lr
 8009f46:	bf00      	nop

08009f48 <HAL_I2C_ListenCpltCallback>:
 8009f48:	4770      	bx	lr
 8009f4a:	bf00      	nop

08009f4c <HAL_I2C_MemTxCpltCallback>:
 8009f4c:	4770      	bx	lr
 8009f4e:	bf00      	nop

08009f50 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009f50:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009f54:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009f56:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8009f58:	b959      	cbnz	r1, 8009f72 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009f5a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f5c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009f5e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f60:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009f62:	d00d      	beq.n	8009f80 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8009f64:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8009f68:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8009f6a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009f6c:	3201      	adds	r2, #1
 8009f6e:	6502      	str	r2, [r0, #80]	; 0x50
 8009f70:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8009f72:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009f74:	2901      	cmp	r1, #1
 8009f76:	d009      	beq.n	8009f8c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8009f78:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009f7a:	2902      	cmp	r1, #2
 8009f7c:	d00e      	beq.n	8009f9c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8009f7e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f80:	b2d2      	uxtb	r2, r2
 8009f82:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8009f84:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009f86:	3202      	adds	r2, #2
 8009f88:	6502      	str	r2, [r0, #80]	; 0x50
 8009f8a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f8c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8009f8e:	6801      	ldr	r1, [r0, #0]
 8009f90:	b2d2      	uxtb	r2, r2
 8009f92:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8009f94:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009f96:	3201      	adds	r2, #1
 8009f98:	6502      	str	r2, [r0, #80]	; 0x50
 8009f9a:	4770      	bx	lr
 8009f9c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8009f9e:	2a22      	cmp	r2, #34	; 0x22
 8009fa0:	d01f      	beq.n	8009fe2 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fa2:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009fa4:	b289      	uxth	r1, r1
 8009fa6:	b9c1      	cbnz	r1, 8009fda <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fa8:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009faa:	b289      	uxth	r1, r1
 8009fac:	2900      	cmp	r1, #0
 8009fae:	d1e6      	bne.n	8009f7e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8009fb0:	2a21      	cmp	r2, #33	; 0x21
 8009fb2:	d1e4      	bne.n	8009f7e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009fb4:	6802      	ldr	r2, [r0, #0]
{
 8009fb6:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009fb8:	6854      	ldr	r4, [r2, #4]
 8009fba:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8009fbe:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fc0:	6814      	ldr	r4, [r2, #0]
 8009fc2:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8009fc6:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8009fc8:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009fca:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8009fcc:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009fd0:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8009fd4:	f7ff ffba 	bl	8009f4c <HAL_I2C_MemTxCpltCallback>
}
 8009fd8:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fda:	2a21      	cmp	r2, #33	; 0x21
 8009fdc:	d00a      	beq.n	8009ff4 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fde:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009fe0:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8009fe2:	6801      	ldr	r1, [r0, #0]
 8009fe4:	680a      	ldr	r2, [r1, #0]
 8009fe6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009fea:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8009fec:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009fee:	3201      	adds	r2, #1
 8009ff0:	6502      	str	r2, [r0, #80]	; 0x50
 8009ff2:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ff4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8009ff6:	6802      	ldr	r2, [r0, #0]
 8009ff8:	f811 0b01 	ldrb.w	r0, [r1], #1
 8009ffc:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 8009ffe:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a000:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a002:	3a01      	subs	r2, #1
 800a004:	b292      	uxth	r2, r2
 800a006:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a008:	4770      	bx	lr
 800a00a:	bf00      	nop

0800a00c <HAL_I2C_MemRxCpltCallback>:
 800a00c:	4770      	bx	lr
 800a00e:	bf00      	nop

0800a010 <HAL_I2C_ErrorCallback>:
 800a010:	4770      	bx	lr
 800a012:	bf00      	nop

0800a014 <HAL_I2C_AbortCpltCallback>:
 800a014:	4770      	bx	lr
 800a016:	bf00      	nop

0800a018 <I2C_DMAAbort>:
{
 800a018:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a01a:	4b3a      	ldr	r3, [pc, #232]	; (800a104 <I2C_DMAAbort+0xec>)
 800a01c:	4a3a      	ldr	r2, [pc, #232]	; (800a108 <I2C_DMAAbort+0xf0>)
 800a01e:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a020:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a022:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a024:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a026:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a028:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a02c:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a02e:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a030:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a034:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a036:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a03a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a03e:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a040:	9301      	str	r3, [sp, #4]
 800a042:	e005      	b.n	800a050 <I2C_DMAAbort+0x38>
    count--;
 800a044:	9b01      	ldr	r3, [sp, #4]
 800a046:	3b01      	subs	r3, #1
 800a048:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a04a:	6813      	ldr	r3, [r2, #0]
 800a04c:	059b      	lsls	r3, r3, #22
 800a04e:	d506      	bpl.n	800a05e <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a050:	9b01      	ldr	r3, [sp, #4]
 800a052:	2b00      	cmp	r3, #0
 800a054:	d1f6      	bne.n	800a044 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a056:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a058:	f043 0320 	orr.w	r3, r3, #32
 800a05c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a05e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a060:	b34c      	cbz	r4, 800a0b6 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a062:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a064:	2500      	movs	r5, #0
 800a066:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a068:	b1f3      	cbz	r3, 800a0a8 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a06a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a06c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a06e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a072:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a074:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a076:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a078:	2400      	movs	r4, #0
 800a07a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a07c:	6813      	ldr	r3, [r2, #0]
 800a07e:	f023 0301 	bic.w	r3, r3, #1
 800a082:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a084:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a088:	2b60      	cmp	r3, #96	; 0x60
 800a08a:	d02a      	beq.n	800a0e2 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a08c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a090:	2928      	cmp	r1, #40	; 0x28
 800a092:	d019      	beq.n	800a0c8 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a094:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a096:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a098:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a09c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a0a0:	f7ff ffb6 	bl	800a010 <HAL_I2C_ErrorCallback>
}
 800a0a4:	b002      	add	sp, #8
 800a0a6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0a8:	6815      	ldr	r5, [r2, #0]
 800a0aa:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a0ae:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a0b0:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a0b2:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a0b4:	e7e2      	b.n	800a07c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a0b6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a0b8:	b1f3      	cbz	r3, 800a0f8 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0ba:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a0bc:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0be:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a0c2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a0c4:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a0c6:	e7d7      	b.n	800a078 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a0c8:	6813      	ldr	r3, [r2, #0]
 800a0ca:	f043 0301 	orr.w	r3, r3, #1
 800a0ce:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0d0:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a0d2:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0d4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a0d8:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a0da:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a0dc:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a0e0:	e7de      	b.n	800a0a0 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a0e2:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a0e4:	2220      	movs	r2, #32
 800a0e6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a0ea:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a0ee:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a0f0:	f7ff ff90 	bl	800a014 <HAL_I2C_AbortCpltCallback>
}
 800a0f4:	b002      	add	sp, #8
 800a0f6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0f8:	6814      	ldr	r4, [r2, #0]
 800a0fa:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a0fe:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a100:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a102:	e7bb      	b.n	800a07c <I2C_DMAAbort+0x64>
 800a104:	20000078 	.word	0x20000078
 800a108:	14f8b589 	.word	0x14f8b589

0800a10c <I2C_ITError>:
{
 800a10c:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a10e:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a112:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a116:	2b10      	cmp	r3, #16
{
 800a118:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a11a:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a11c:	d039      	beq.n	800a192 <I2C_ITError+0x86>
 800a11e:	b2d9      	uxtb	r1, r3
 800a120:	2940      	cmp	r1, #64	; 0x40
 800a122:	d036      	beq.n	800a192 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a124:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a128:	2928      	cmp	r1, #40	; 0x28
 800a12a:	d03d      	beq.n	800a1a8 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a12c:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a12e:	6859      	ldr	r1, [r3, #4]
 800a130:	0508      	lsls	r0, r1, #20
 800a132:	d407      	bmi.n	800a144 <I2C_ITError+0x38>
 800a134:	2a60      	cmp	r2, #96	; 0x60
 800a136:	d005      	beq.n	800a144 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a138:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a13a:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a13c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a140:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a144:	2200      	movs	r2, #0
 800a146:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a148:	685a      	ldr	r2, [r3, #4]
 800a14a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a14e:	d134      	bne.n	800a1ba <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a150:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a154:	2960      	cmp	r1, #96	; 0x60
 800a156:	d075      	beq.n	800a244 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a158:	695a      	ldr	r2, [r3, #20]
 800a15a:	0650      	lsls	r0, r2, #25
 800a15c:	d505      	bpl.n	800a16a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a15e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a160:	691b      	ldr	r3, [r3, #16]
 800a162:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a164:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a166:	3301      	adds	r3, #1
 800a168:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a16a:	4620      	mov	r0, r4
 800a16c:	f7ff ff50 	bl	800a010 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a170:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a172:	0719      	lsls	r1, r3, #28
 800a174:	d004      	beq.n	800a180 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a176:	6822      	ldr	r2, [r4, #0]
 800a178:	6853      	ldr	r3, [r2, #4]
 800a17a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a17e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a180:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a184:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a186:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a188:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a18a:	d501      	bpl.n	800a190 <I2C_ITError+0x84>
 800a18c:	2b28      	cmp	r3, #40	; 0x28
 800a18e:	d02f      	beq.n	800a1f0 <I2C_ITError+0xe4>
}
 800a190:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a192:	2a22      	cmp	r2, #34	; 0x22
 800a194:	d1c6      	bne.n	800a124 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a196:	6823      	ldr	r3, [r4, #0]
 800a198:	681a      	ldr	r2, [r3, #0]
 800a19a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a19e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a1a0:	685a      	ldr	r2, [r3, #4]
 800a1a2:	0512      	lsls	r2, r2, #20
 800a1a4:	d5c8      	bpl.n	800a138 <I2C_ITError+0x2c>
 800a1a6:	e7cd      	b.n	800a144 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1a8:	2300      	movs	r3, #0
 800a1aa:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a1ac:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a1ae:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a1b2:	685a      	ldr	r2, [r3, #4]
 800a1b4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a1b8:	d0ca      	beq.n	800a150 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a1ba:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a1bc:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a1be:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a1c2:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a1c4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a1c8:	2b01      	cmp	r3, #1
 800a1ca:	d01e      	beq.n	800a20a <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a1cc:	4b28      	ldr	r3, [pc, #160]	; (800a270 <I2C_ITError+0x164>)
 800a1ce:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a1d0:	f7fe ff88 	bl	80090e4 <HAL_DMA_Abort_IT>
 800a1d4:	2800      	cmp	r0, #0
 800a1d6:	d0cb      	beq.n	800a170 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a1d8:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a1da:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a1dc:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a1de:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a1e0:	f023 0301 	bic.w	r3, r3, #1
 800a1e4:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a1e6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a1ea:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a1ec:	4798      	blx	r3
 800a1ee:	e7bf      	b.n	800a170 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1f0:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a1f2:	4920      	ldr	r1, [pc, #128]	; (800a274 <I2C_ITError+0x168>)
 800a1f4:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a1f6:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1f8:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a1fa:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a1fc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a200:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a204:	f7ff fea0 	bl	8009f48 <HAL_I2C_ListenCpltCallback>
}
 800a208:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a20a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a20c:	4b18      	ldr	r3, [pc, #96]	; (800a270 <I2C_ITError+0x164>)
 800a20e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a210:	f7fe ff68 	bl	80090e4 <HAL_DMA_Abort_IT>
 800a214:	2800      	cmp	r0, #0
 800a216:	d0ab      	beq.n	800a170 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a218:	6823      	ldr	r3, [r4, #0]
 800a21a:	695a      	ldr	r2, [r3, #20]
 800a21c:	0651      	lsls	r1, r2, #25
 800a21e:	d506      	bpl.n	800a22e <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a220:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a222:	691b      	ldr	r3, [r3, #16]
 800a224:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a226:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a228:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a22a:	3201      	adds	r2, #1
 800a22c:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a22e:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a230:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a232:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a236:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a238:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a23a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a23e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a240:	4798      	blx	r3
 800a242:	e795      	b.n	800a170 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a244:	2120      	movs	r1, #32
 800a246:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a24a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a24c:	695a      	ldr	r2, [r3, #20]
 800a24e:	0652      	lsls	r2, r2, #25
 800a250:	d506      	bpl.n	800a260 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a252:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a254:	691b      	ldr	r3, [r3, #16]
 800a256:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a258:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a25a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a25c:	3201      	adds	r2, #1
 800a25e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a260:	681a      	ldr	r2, [r3, #0]
 800a262:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a266:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a268:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a26a:	f7ff fed3 	bl	800a014 <HAL_I2C_AbortCpltCallback>
 800a26e:	e77f      	b.n	800a170 <I2C_ITError+0x64>
 800a270:	0800a019 	.word	0x0800a019
 800a274:	ffff0000 	.word	0xffff0000

0800a278 <HAL_I2C_EV_IRQHandler>:
{
 800a278:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a27a:	6803      	ldr	r3, [r0, #0]
{
 800a27c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a27e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a280:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a282:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a286:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a28a:	2910      	cmp	r1, #16
{
 800a28c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a28e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a290:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a294:	d022      	beq.n	800a2dc <HAL_I2C_EV_IRQHandler+0x64>
 800a296:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a29a:	d01f      	beq.n	800a2dc <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a29c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a29e:	2900      	cmp	r1, #0
 800a2a0:	f000 8094 	beq.w	800a3cc <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a2a4:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a2a6:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a2a8:	f011 0602 	ands.w	r6, r1, #2
 800a2ac:	d059      	beq.n	800a362 <HAL_I2C_EV_IRQHandler+0xea>
 800a2ae:	0586      	lsls	r6, r0, #22
 800a2b0:	d559      	bpl.n	800a366 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a2b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a2b4:	b102      	cbz	r2, 800a2b8 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a2b6:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a2b8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a2bc:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a2c0:	2a28      	cmp	r2, #40	; 0x28
 800a2c2:	f000 821e 	beq.w	800a702 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a2c6:	2200      	movs	r2, #0
 800a2c8:	920c      	str	r2, [sp, #48]	; 0x30
 800a2ca:	6959      	ldr	r1, [r3, #20]
 800a2cc:	910c      	str	r1, [sp, #48]	; 0x30
 800a2ce:	699b      	ldr	r3, [r3, #24]
 800a2d0:	930c      	str	r3, [sp, #48]	; 0x30
 800a2d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a2d4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a2d8:	b00e      	add	sp, #56	; 0x38
 800a2da:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a2dc:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a2de:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a2e0:	f011 0f01 	tst.w	r1, #1
 800a2e4:	d11a      	bne.n	800a31c <HAL_I2C_EV_IRQHandler+0xa4>
 800a2e6:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a2ea:	d0f5      	beq.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a2ec:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a2f0:	d0f2      	beq.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a2f2:	070d      	lsls	r5, r1, #28
 800a2f4:	d56d      	bpl.n	800a3d2 <HAL_I2C_EV_IRQHandler+0x15a>
 800a2f6:	0585      	lsls	r5, r0, #22
 800a2f8:	f140 8083 	bpl.w	800a402 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a2fc:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a2fe:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a300:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a302:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a304:	2900      	cmp	r1, #0
 800a306:	f000 81e3 	beq.w	800a6d0 <HAL_I2C_EV_IRQHandler+0x458>
 800a30a:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a30c:	2a00      	cmp	r2, #0
 800a30e:	f000 81df 	beq.w	800a6d0 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a312:	685a      	ldr	r2, [r3, #4]
 800a314:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a318:	605a      	str	r2, [r3, #4]
 800a31a:	e7dd      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a31c:	0585      	lsls	r5, r0, #22
 800a31e:	d56e      	bpl.n	800a3fe <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a320:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a322:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a326:	f000 81e9 	beq.w	800a6fc <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a32a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a32c:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a330:	bf04      	itt	eq
 800a332:	2208      	moveq	r2, #8
 800a334:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a336:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a33a:	2a40      	cmp	r2, #64	; 0x40
 800a33c:	f000 81d7 	beq.w	800a6ee <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a340:	6922      	ldr	r2, [r4, #16]
 800a342:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a346:	f000 81b2 	beq.w	800a6ae <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a34a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a34c:	2a00      	cmp	r2, #0
 800a34e:	f040 81ef 	bne.w	800a730 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a352:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a354:	11d2      	asrs	r2, r2, #7
 800a356:	f002 0206 	and.w	r2, r2, #6
 800a35a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a35e:	611a      	str	r2, [r3, #16]
 800a360:	e7ba      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a362:	06cd      	lsls	r5, r1, #27
 800a364:	d47c      	bmi.n	800a460 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a366:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a36a:	2a21      	cmp	r2, #33	; 0x21
 800a36c:	f000 80f5 	beq.w	800a55a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a370:	064e      	lsls	r6, r1, #25
 800a372:	f140 8132 	bpl.w	800a5da <HAL_I2C_EV_IRQHandler+0x362>
 800a376:	0545      	lsls	r5, r0, #21
 800a378:	f140 812f 	bpl.w	800a5da <HAL_I2C_EV_IRQHandler+0x362>
 800a37c:	0749      	lsls	r1, r1, #29
 800a37e:	f100 812f 	bmi.w	800a5e0 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a382:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a386:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a388:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a38a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a38c:	2a00      	cmp	r2, #0
 800a38e:	d0a3      	beq.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a390:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a392:	691b      	ldr	r3, [r3, #16]
 800a394:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a396:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a398:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a39a:	3b01      	subs	r3, #1
 800a39c:	b29b      	uxth	r3, r3
 800a39e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a3a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a3a2:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a3a4:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a3a6:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a3a8:	2b00      	cmp	r3, #0
 800a3aa:	d195      	bne.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a3ac:	292a      	cmp	r1, #42	; 0x2a
 800a3ae:	d193      	bne.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a3b0:	6822      	ldr	r2, [r4, #0]
 800a3b2:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a3b4:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3b6:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a3b8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a3bc:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a3be:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a3c0:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3c2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a3c6:	f7ff fdbb 	bl	8009f40 <HAL_I2C_SlaveRxCpltCallback>
 800a3ca:	e785      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a3cc:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a3ce:	6959      	ldr	r1, [r3, #20]
 800a3d0:	e76a      	b.n	800a2a8 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3d2:	078d      	lsls	r5, r1, #30
 800a3d4:	d515      	bpl.n	800a402 <HAL_I2C_EV_IRQHandler+0x18a>
 800a3d6:	0585      	lsls	r5, r0, #22
 800a3d8:	d513      	bpl.n	800a402 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a3da:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a3de:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a3e0:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a3e2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a3e6:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a3e8:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a3ea:	f000 81b3 	beq.w	800a754 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3ee:	2200      	movs	r2, #0
 800a3f0:	920a      	str	r2, [sp, #40]	; 0x28
 800a3f2:	695a      	ldr	r2, [r3, #20]
 800a3f4:	920a      	str	r2, [sp, #40]	; 0x28
 800a3f6:	699b      	ldr	r3, [r3, #24]
 800a3f8:	930a      	str	r3, [sp, #40]	; 0x28
 800a3fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a3fc:	e76c      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3fe:	070d      	lsls	r5, r1, #28
 800a400:	d5e7      	bpl.n	800a3d2 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a402:	0776      	lsls	r6, r6, #29
 800a404:	f140 80f5 	bpl.w	800a5f2 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a408:	685d      	ldr	r5, [r3, #4]
 800a40a:	052d      	lsls	r5, r5, #20
 800a40c:	f53f af64 	bmi.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a410:	060e      	lsls	r6, r1, #24
 800a412:	f140 8115 	bpl.w	800a640 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a416:	0545      	lsls	r5, r0, #21
 800a418:	f140 8112 	bpl.w	800a640 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a41c:	074e      	lsls	r6, r1, #29
 800a41e:	f100 8112 	bmi.w	800a646 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a422:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a426:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a428:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a42c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a42e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a430:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a432:	2800      	cmp	r0, #0
 800a434:	f040 8235 	bne.w	800a8a2 <HAL_I2C_EV_IRQHandler+0x62a>
 800a438:	2a21      	cmp	r2, #33	; 0x21
 800a43a:	f000 8347 	beq.w	800aacc <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a43e:	2940      	cmp	r1, #64	; 0x40
 800a440:	f47f af4a 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a444:	2a22      	cmp	r2, #34	; 0x22
 800a446:	f47f af47 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a44a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a44c:	b292      	uxth	r2, r2
 800a44e:	2a00      	cmp	r2, #0
 800a450:	f000 8268 	beq.w	800a924 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a454:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a458:	2a40      	cmp	r2, #64	; 0x40
 800a45a:	f040 80b4 	bne.w	800a5c6 <HAL_I2C_EV_IRQHandler+0x34e>
 800a45e:	e0fc      	b.n	800a65a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a460:	0585      	lsls	r5, r0, #22
 800a462:	d580      	bpl.n	800a366 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a464:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a468:	685a      	ldr	r2, [r3, #4]
 800a46a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a46e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a470:	960d      	str	r6, [sp, #52]	; 0x34
 800a472:	695a      	ldr	r2, [r3, #20]
 800a474:	920d      	str	r2, [sp, #52]	; 0x34
 800a476:	681a      	ldr	r2, [r3, #0]
 800a478:	f042 0201 	orr.w	r2, r2, #1
 800a47c:	601a      	str	r2, [r3, #0]
 800a47e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a480:	681a      	ldr	r2, [r3, #0]
 800a482:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a486:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a488:	685a      	ldr	r2, [r3, #4]
 800a48a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a48c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a48e:	d521      	bpl.n	800a4d4 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a490:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a494:	2a22      	cmp	r2, #34	; 0x22
 800a496:	f000 817a 	beq.w	800a78e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a49a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a49c:	6802      	ldr	r2, [r0, #0]
 800a49e:	6852      	ldr	r2, [r2, #4]
 800a4a0:	b292      	uxth	r2, r2
 800a4a2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a4a4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a4a6:	b292      	uxth	r2, r2
 800a4a8:	b11a      	cbz	r2, 800a4b2 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a4aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a4ac:	f042 0204 	orr.w	r2, r2, #4
 800a4b0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a4b2:	685a      	ldr	r2, [r3, #4]
 800a4b4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a4b8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a4ba:	f7fe fe25 	bl	8009108 <HAL_DMA_GetState>
 800a4be:	2801      	cmp	r0, #1
 800a4c0:	d008      	beq.n	800a4d4 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a4c2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a4c4:	4b99      	ldr	r3, [pc, #612]	; (800a72c <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a4c6:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a4c8:	f7fe fe0c 	bl	80090e4 <HAL_DMA_Abort_IT>
 800a4cc:	b110      	cbz	r0, 800a4d4 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a4ce:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a4d0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a4d2:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a4d4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a4d6:	b29b      	uxth	r3, r3
 800a4d8:	b313      	cbz	r3, 800a520 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a4da:	6823      	ldr	r3, [r4, #0]
 800a4dc:	695a      	ldr	r2, [r3, #20]
 800a4de:	0752      	lsls	r2, r2, #29
 800a4e0:	d50a      	bpl.n	800a4f8 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a4e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a4e4:	691b      	ldr	r3, [r3, #16]
 800a4e6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a4e8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a4ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a4ec:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a4ee:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a4f0:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a4f2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a4f4:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a4f6:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a4f8:	695a      	ldr	r2, [r3, #20]
 800a4fa:	0656      	lsls	r6, r2, #25
 800a4fc:	d509      	bpl.n	800a512 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a4fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a500:	691b      	ldr	r3, [r3, #16]
 800a502:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a504:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a506:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a508:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a50a:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a50c:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a50e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a510:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a512:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a514:	b29b      	uxth	r3, r3
 800a516:	b11b      	cbz	r3, 800a520 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a518:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a51a:	f043 0304 	orr.w	r3, r3, #4
 800a51e:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a520:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a522:	2b00      	cmp	r3, #0
 800a524:	f040 80dd 	bne.w	800a6e2 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a528:	2d2a      	cmp	r5, #42	; 0x2a
 800a52a:	f000 8151 	beq.w	800a7d0 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a52e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a532:	2b28      	cmp	r3, #40	; 0x28
 800a534:	f000 8154 	beq.w	800a7e0 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a538:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a53a:	2b22      	cmp	r3, #34	; 0x22
 800a53c:	d002      	beq.n	800a544 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a53e:	2d22      	cmp	r5, #34	; 0x22
 800a540:	f47f aeca 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a544:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a546:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a548:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a54a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a54c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a550:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a554:	f7ff fcf4 	bl	8009f40 <HAL_I2C_SlaveRxCpltCallback>
 800a558:	e6be      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a55a:	060d      	lsls	r5, r1, #24
 800a55c:	d528      	bpl.n	800a5b0 <HAL_I2C_EV_IRQHandler+0x338>
 800a55e:	0546      	lsls	r6, r0, #21
 800a560:	d526      	bpl.n	800a5b0 <HAL_I2C_EV_IRQHandler+0x338>
 800a562:	074d      	lsls	r5, r1, #29
 800a564:	d427      	bmi.n	800a5b6 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a566:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a56a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a56c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a56e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a570:	2900      	cmp	r1, #0
 800a572:	f43f aeb1 	beq.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a576:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a578:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a57c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a57e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a580:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a582:	3901      	subs	r1, #1
 800a584:	b289      	uxth	r1, r1
 800a586:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a588:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a58a:	b289      	uxth	r1, r1
 800a58c:	2900      	cmp	r1, #0
 800a58e:	f47f aea3 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a592:	2829      	cmp	r0, #41	; 0x29
 800a594:	f47f aea0 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a598:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a59a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a59c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a5a0:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a5a2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a5a4:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a5a6:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a5aa:	f7ff fcc7 	bl	8009f3c <HAL_I2C_SlaveTxCpltCallback>
 800a5ae:	e693      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5b0:	0749      	lsls	r1, r1, #29
 800a5b2:	f57f ae91 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a5b6:	0582      	lsls	r2, r0, #22
 800a5b8:	f57f ae8e 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a5bc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5be:	b292      	uxth	r2, r2
 800a5c0:	2a00      	cmp	r2, #0
 800a5c2:	f43f ae89 	beq.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5c8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a5cc:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a5ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a5d0:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a5d2:	3b01      	subs	r3, #1
 800a5d4:	b29b      	uxth	r3, r3
 800a5d6:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a5d8:	e67e      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5da:	074a      	lsls	r2, r1, #29
 800a5dc:	f57f ae7c 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a5e0:	0586      	lsls	r6, r0, #22
 800a5e2:	f57f ae79 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a5e6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5e8:	b292      	uxth	r2, r2
 800a5ea:	2a00      	cmp	r2, #0
 800a5ec:	f43f ae74 	beq.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a5f0:	e01b      	b.n	800a62a <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a5f2:	685a      	ldr	r2, [r3, #4]
 800a5f4:	0512      	lsls	r2, r2, #20
 800a5f6:	f53f ae6f 	bmi.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a5fa:	064e      	lsls	r6, r1, #25
 800a5fc:	d433      	bmi.n	800a666 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5fe:	0749      	lsls	r1, r1, #29
 800a600:	f57f ae6a 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a604:	0582      	lsls	r2, r0, #22
 800a606:	f57f ae67 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a60a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a60c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a60e:	b292      	uxth	r2, r2
 800a610:	2a04      	cmp	r2, #4
 800a612:	f000 8113 	beq.w	800a83c <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a616:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a618:	b292      	uxth	r2, r2
 800a61a:	2a03      	cmp	r2, #3
 800a61c:	f000 8153 	beq.w	800a8c6 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a620:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a622:	b292      	uxth	r2, r2
 800a624:	2a02      	cmp	r2, #2
 800a626:	f000 8182 	beq.w	800a92e <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a62a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a62c:	691b      	ldr	r3, [r3, #16]
 800a62e:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a630:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a632:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a634:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a636:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a638:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a63a:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a63c:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a63e:	e64b      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a640:	074d      	lsls	r5, r1, #29
 800a642:	f57f ae49 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a646:	0581      	lsls	r1, r0, #22
 800a648:	f57f ae46 	bpl.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a64c:	2a21      	cmp	r2, #33	; 0x21
 800a64e:	f000 80fd 	beq.w	800a84c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a652:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a656:	f47f ae3f 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a65a:	4620      	mov	r0, r4
}
 800a65c:	b00e      	add	sp, #56	; 0x38
 800a65e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a662:	f7ff bc75 	b.w	8009f50 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a666:	0545      	lsls	r5, r0, #21
 800a668:	d5c9      	bpl.n	800a5fe <HAL_I2C_EV_IRQHandler+0x386>
 800a66a:	f011 0104 	ands.w	r1, r1, #4
 800a66e:	d1c9      	bne.n	800a604 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a670:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a674:	2a22      	cmp	r2, #34	; 0x22
 800a676:	f47f ae2f 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a67a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a67c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a67e:	2a03      	cmp	r2, #3
 800a680:	f240 81ec 	bls.w	800aa5c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a684:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a686:	691b      	ldr	r3, [r3, #16]
 800a688:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a68a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a68c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a68e:	3b01      	subs	r3, #1
 800a690:	b29b      	uxth	r3, r3
 800a692:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a694:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a696:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a698:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a69a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a69c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a69e:	f47f ae1b 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a6a2:	6822      	ldr	r2, [r4, #0]
 800a6a4:	6853      	ldr	r3, [r2, #4]
 800a6a6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a6aa:	6053      	str	r3, [r2, #4]
 800a6ac:	e614      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a6ae:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a6b2:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a6b4:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a6b6:	bf16      	itet	ne
 800a6b8:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a6bc:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a6c0:	b2d2      	uxtbne	r2, r2
 800a6c2:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a6c4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a6c6:	b11a      	cbz	r2, 800a6d0 <HAL_I2C_EV_IRQHandler+0x458>
 800a6c8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a6ca:	2a00      	cmp	r2, #0
 800a6cc:	f47f ae21 	bne.w	800a312 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a6d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a6d2:	2a00      	cmp	r2, #0
 800a6d4:	f43f ae00 	beq.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a6d8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a6da:	2a00      	cmp	r2, #0
 800a6dc:	f47f ae19 	bne.w	800a312 <HAL_I2C_EV_IRQHandler+0x9a>
 800a6e0:	e5fa      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a6e2:	4620      	mov	r0, r4
}
 800a6e4:	b00e      	add	sp, #56	; 0x38
 800a6e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a6ea:	f7ff bd0f 	b.w	800a10c <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a6ee:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a6f0:	bb52      	cbnz	r2, 800a748 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a6f2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a6f4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a6f8:	611a      	str	r2, [r3, #16]
 800a6fa:	e5ed      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a6fc:	2201      	movs	r2, #1
 800a6fe:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a700:	e619      	b.n	800a336 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a702:	685a      	ldr	r2, [r3, #4]
 800a704:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a708:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a70a:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a70c:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a710:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a714:	bf54      	ite	pl
 800a716:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a718:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a71a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a71e:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a722:	4620      	mov	r0, r4
 800a724:	f7ff fc0e 	bl	8009f44 <HAL_I2C_AddrCallback>
 800a728:	e5d6      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800a72a:	bf00      	nop
 800a72c:	0800a019 	.word	0x0800a019
      else if (hi2c->EventCount == 1U)
 800a730:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a732:	2a01      	cmp	r2, #1
 800a734:	f47f add0 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a738:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a73a:	11d2      	asrs	r2, r2, #7
 800a73c:	f002 0206 	and.w	r2, r2, #6
 800a740:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a744:	611a      	str	r2, [r3, #16]
 800a746:	e5c7      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a748:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a74a:	f042 0201 	orr.w	r2, r2, #1
 800a74e:	b2d2      	uxtb	r2, r2
 800a750:	611a      	str	r2, [r3, #16]
 800a752:	e5c1      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a754:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a756:	b911      	cbnz	r1, 800a75e <HAL_I2C_EV_IRQHandler+0x4e6>
 800a758:	2a40      	cmp	r2, #64	; 0x40
 800a75a:	f000 809b 	beq.w	800a894 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a75e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a760:	b922      	cbnz	r2, 800a76c <HAL_I2C_EV_IRQHandler+0x4f4>
 800a762:	6921      	ldr	r1, [r4, #16]
 800a764:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a768:	f000 809f 	beq.w	800a8aa <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a76c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a76e:	b292      	uxth	r2, r2
 800a770:	2a00      	cmp	r2, #0
 800a772:	d142      	bne.n	800a7fa <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a774:	9203      	str	r2, [sp, #12]
 800a776:	695a      	ldr	r2, [r3, #20]
 800a778:	9203      	str	r2, [sp, #12]
 800a77a:	699a      	ldr	r2, [r3, #24]
 800a77c:	9203      	str	r2, [sp, #12]
 800a77e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a780:	681a      	ldr	r2, [r3, #0]
 800a782:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a786:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a788:	2300      	movs	r3, #0
 800a78a:	6523      	str	r3, [r4, #80]	; 0x50
 800a78c:	e5a4      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a78e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a790:	6802      	ldr	r2, [r0, #0]
 800a792:	6852      	ldr	r2, [r2, #4]
 800a794:	b292      	uxth	r2, r2
 800a796:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a798:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a79a:	b292      	uxth	r2, r2
 800a79c:	b11a      	cbz	r2, 800a7a6 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a79e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a7a0:	f042 0204 	orr.w	r2, r2, #4
 800a7a4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a7a6:	685a      	ldr	r2, [r3, #4]
 800a7a8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a7ac:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a7ae:	f7fe fcab 	bl	8009108 <HAL_DMA_GetState>
 800a7b2:	2801      	cmp	r0, #1
 800a7b4:	f43f ae8e 	beq.w	800a4d4 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a7b8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a7ba:	4b98      	ldr	r3, [pc, #608]	; (800aa1c <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a7bc:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a7be:	f7fe fc91 	bl	80090e4 <HAL_DMA_Abort_IT>
 800a7c2:	2800      	cmp	r0, #0
 800a7c4:	f43f ae86 	beq.w	800a4d4 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a7c8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a7ca:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a7cc:	4798      	blx	r3
 800a7ce:	e681      	b.n	800a4d4 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7d0:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7d2:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7d4:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7d6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7da:	f7ff fbb1 	bl	8009f40 <HAL_I2C_SlaveRxCpltCallback>
 800a7de:	e6a6      	b.n	800a52e <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7e0:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a7e2:	498f      	ldr	r1, [pc, #572]	; (800aa20 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a7e4:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a7e6:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7e8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a7ea:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a7ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a7f0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a7f4:	f7ff fba8 	bl	8009f48 <HAL_I2C_ListenCpltCallback>
 800a7f8:	e56e      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a7fa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7fc:	b292      	uxth	r2, r2
 800a7fe:	2a01      	cmp	r2, #1
 800a800:	d070      	beq.n	800a8e4 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a802:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a804:	b292      	uxth	r2, r2
 800a806:	2a02      	cmp	r2, #2
 800a808:	f000 80d6 	beq.w	800a9b8 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a80c:	681a      	ldr	r2, [r3, #0]
 800a80e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a812:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a814:	685a      	ldr	r2, [r3, #4]
 800a816:	0511      	lsls	r1, r2, #20
 800a818:	d508      	bpl.n	800a82c <HAL_I2C_EV_IRQHandler+0x5b4>
 800a81a:	2820      	cmp	r0, #32
 800a81c:	f200 80f8 	bhi.w	800aa10 <HAL_I2C_EV_IRQHandler+0x798>
 800a820:	2807      	cmp	r0, #7
 800a822:	f200 80ea 	bhi.w	800a9fa <HAL_I2C_EV_IRQHandler+0x782>
 800a826:	2801      	cmp	r0, #1
 800a828:	f000 80ed 	beq.w	800aa06 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a82c:	2200      	movs	r2, #0
 800a82e:	9209      	str	r2, [sp, #36]	; 0x24
 800a830:	695a      	ldr	r2, [r3, #20]
 800a832:	9209      	str	r2, [sp, #36]	; 0x24
 800a834:	699b      	ldr	r3, [r3, #24]
 800a836:	9309      	str	r3, [sp, #36]	; 0x24
 800a838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a83a:	e7a5      	b.n	800a788 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a83c:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a83e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a840:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a844:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a846:	691b      	ldr	r3, [r3, #16]
 800a848:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a84a:	e6f1      	b.n	800a630 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a84c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a84e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a852:	2a21      	cmp	r2, #33	; 0x21
 800a854:	f47f ad40 	bne.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a858:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a85a:	b292      	uxth	r2, r2
 800a85c:	2a00      	cmp	r2, #0
 800a85e:	f47f aeb2 	bne.w	800a5c6 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a862:	2908      	cmp	r1, #8
 800a864:	f000 80e2 	beq.w	800aa2c <HAL_I2C_EV_IRQHandler+0x7b4>
 800a868:	2920      	cmp	r1, #32
 800a86a:	f000 80df 	beq.w	800aa2c <HAL_I2C_EV_IRQHandler+0x7b4>
 800a86e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a872:	f000 80db 	beq.w	800aa2c <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a876:	6859      	ldr	r1, [r3, #4]
 800a878:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a87c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a87e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a880:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a882:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a884:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a888:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a88a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a88e:	f7ff fb51 	bl	8009f34 <HAL_I2C_MasterTxCpltCallback>
 800a892:	e521      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a894:	9101      	str	r1, [sp, #4]
 800a896:	695a      	ldr	r2, [r3, #20]
 800a898:	9201      	str	r2, [sp, #4]
 800a89a:	699b      	ldr	r3, [r3, #24]
 800a89c:	9301      	str	r3, [sp, #4]
 800a89e:	9b01      	ldr	r3, [sp, #4]
 800a8a0:	e51a      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a8a2:	2a21      	cmp	r2, #33	; 0x21
 800a8a4:	f43f add1 	beq.w	800a44a <HAL_I2C_EV_IRQHandler+0x1d2>
 800a8a8:	e5c9      	b.n	800a43e <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8aa:	9202      	str	r2, [sp, #8]
 800a8ac:	695a      	ldr	r2, [r3, #20]
 800a8ae:	9202      	str	r2, [sp, #8]
 800a8b0:	699a      	ldr	r2, [r3, #24]
 800a8b2:	9202      	str	r2, [sp, #8]
 800a8b4:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a8b6:	681a      	ldr	r2, [r3, #0]
 800a8b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a8bc:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a8be:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a8c0:	3301      	adds	r3, #1
 800a8c2:	6523      	str	r3, [r4, #80]	; 0x50
 800a8c4:	e508      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8c6:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a8c8:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8ce:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a8d0:	f43f aeab 	beq.w	800a62a <HAL_I2C_EV_IRQHandler+0x3b2>
 800a8d4:	2902      	cmp	r1, #2
 800a8d6:	f43f aea8 	beq.w	800a62a <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a8da:	681a      	ldr	r2, [r3, #0]
 800a8dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8e0:	601a      	str	r2, [r3, #0]
 800a8e2:	e6a2      	b.n	800a62a <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a8e4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a8e8:	f000 811b 	beq.w	800ab22 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a8ec:	2808      	cmp	r0, #8
 800a8ee:	f000 8108 	beq.w	800ab02 <HAL_I2C_EV_IRQHandler+0x88a>
 800a8f2:	2820      	cmp	r0, #32
 800a8f4:	f000 8105 	beq.w	800ab02 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a8f8:	2d12      	cmp	r5, #18
 800a8fa:	f000 80ff 	beq.w	800aafc <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a8fe:	2810      	cmp	r0, #16
 800a900:	d804      	bhi.n	800a90c <HAL_I2C_EV_IRQHandler+0x694>
 800a902:	4a48      	ldr	r2, [pc, #288]	; (800aa24 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a904:	40c2      	lsrs	r2, r0
 800a906:	07d1      	lsls	r1, r2, #31
 800a908:	f100 814c 	bmi.w	800aba4 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a90c:	681a      	ldr	r2, [r3, #0]
 800a90e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a912:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a914:	2200      	movs	r2, #0
 800a916:	9206      	str	r2, [sp, #24]
 800a918:	695a      	ldr	r2, [r3, #20]
 800a91a:	9206      	str	r2, [sp, #24]
 800a91c:	699b      	ldr	r3, [r3, #24]
 800a91e:	9306      	str	r3, [sp, #24]
 800a920:	9b06      	ldr	r3, [sp, #24]
 800a922:	e731      	b.n	800a788 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a924:	685a      	ldr	r2, [r3, #4]
 800a926:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a92a:	605a      	str	r2, [r3, #4]
 800a92c:	e4d4      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a92e:	3901      	subs	r1, #1
 800a930:	290f      	cmp	r1, #15
 800a932:	d809      	bhi.n	800a948 <HAL_I2C_EV_IRQHandler+0x6d0>
 800a934:	e8df f001 	tbb	[pc, r1]
 800a938:	3608363b 	.word	0x3608363b
 800a93c:	08080808 	.word	0x08080808
 800a940:	08080808 	.word	0x08080808
 800a944:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a948:	681a      	ldr	r2, [r3, #0]
 800a94a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a94e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a950:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a952:	691b      	ldr	r3, [r3, #16]
 800a954:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a956:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a958:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a95a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800a95c:	3b01      	subs	r3, #1
 800a95e:	b29b      	uxth	r3, r3
 800a960:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a962:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800a964:	1c51      	adds	r1, r2, #1
 800a966:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a968:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800a96a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a96c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800a96e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a970:	3b01      	subs	r3, #1
 800a972:	b29b      	uxth	r3, r3
 800a974:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a976:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800a978:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a97a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800a97e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800a980:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a982:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800a984:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a988:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800a98c:	2b40      	cmp	r3, #64	; 0x40
 800a98e:	f000 80f5 	beq.w	800ab7c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a992:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a994:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a996:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a99a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a99c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a99e:	f7ff facb 	bl	8009f38 <HAL_I2C_MasterRxCpltCallback>
 800a9a2:	e499      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9a4:	681a      	ldr	r2, [r3, #0]
 800a9a6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a9aa:	601a      	str	r2, [r3, #0]
 800a9ac:	e7d0      	b.n	800a950 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9ae:	681a      	ldr	r2, [r3, #0]
 800a9b0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9b4:	601a      	str	r2, [r3, #0]
 800a9b6:	e7cb      	b.n	800a950 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a9b8:	2810      	cmp	r0, #16
 800a9ba:	d804      	bhi.n	800a9c6 <HAL_I2C_EV_IRQHandler+0x74e>
 800a9bc:	4a19      	ldr	r2, [pc, #100]	; (800aa24 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a9be:	40c2      	lsrs	r2, r0
 800a9c0:	07d2      	lsls	r2, r2, #31
 800a9c2:	f100 80c2 	bmi.w	800ab4a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9c6:	681a      	ldr	r2, [r3, #0]
 800a9c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9cc:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9ce:	681a      	ldr	r2, [r3, #0]
 800a9d0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a9d4:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a9d6:	685a      	ldr	r2, [r3, #4]
 800a9d8:	0516      	lsls	r6, r2, #20
 800a9da:	d506      	bpl.n	800a9ea <HAL_I2C_EV_IRQHandler+0x772>
 800a9dc:	2820      	cmp	r0, #32
 800a9de:	f240 80bc 	bls.w	800ab5a <HAL_I2C_EV_IRQHandler+0x8e2>
 800a9e2:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a9e6:	f000 80bd 	beq.w	800ab64 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9ea:	2200      	movs	r2, #0
 800a9ec:	9208      	str	r2, [sp, #32]
 800a9ee:	695a      	ldr	r2, [r3, #20]
 800a9f0:	9208      	str	r2, [sp, #32]
 800a9f2:	699b      	ldr	r3, [r3, #24]
 800a9f4:	9308      	str	r3, [sp, #32]
 800a9f6:	9b08      	ldr	r3, [sp, #32]
 800a9f8:	e6c6      	b.n	800a788 <HAL_I2C_EV_IRQHandler+0x510>
 800a9fa:	4a0b      	ldr	r2, [pc, #44]	; (800aa28 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800a9fc:	3808      	subs	r0, #8
 800a9fe:	40c2      	lsrs	r2, r0
 800aa00:	07d2      	lsls	r2, r2, #31
 800aa02:	f57f af13 	bpl.w	800a82c <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800aa06:	685a      	ldr	r2, [r3, #4]
 800aa08:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aa0c:	605a      	str	r2, [r3, #4]
 800aa0e:	e70d      	b.n	800a82c <HAL_I2C_EV_IRQHandler+0x5b4>
 800aa10:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aa14:	f47f af0a 	bne.w	800a82c <HAL_I2C_EV_IRQHandler+0x5b4>
 800aa18:	e7f5      	b.n	800aa06 <HAL_I2C_EV_IRQHandler+0x78e>
 800aa1a:	bf00      	nop
 800aa1c:	0800a019 	.word	0x0800a019
 800aa20:	ffff0000 	.word	0xffff0000
 800aa24:	00010014 	.word	0x00010014
 800aa28:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa2c:	6859      	ldr	r1, [r3, #4]
 800aa2e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aa32:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa34:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aa36:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aa38:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa3a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aa3e:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aa40:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800aa42:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa46:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa4a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa4e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aa50:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa52:	f47f af1c 	bne.w	800a88e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aa56:	f7ff fa79 	bl	8009f4c <HAL_I2C_MemTxCpltCallback>
 800aa5a:	e43d      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800aa5c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800aa5e:	2802      	cmp	r0, #2
 800aa60:	f43f af60 	beq.w	800a924 <HAL_I2C_EV_IRQHandler+0x6ac>
 800aa64:	2a01      	cmp	r2, #1
 800aa66:	f63f af5d 	bhi.w	800a924 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800aa6a:	4a62      	ldr	r2, [pc, #392]	; (800abf4 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800aa6c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800aa6e:	6812      	ldr	r2, [r2, #0]
 800aa70:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800aa74:	fbb2 f2f0 	udiv	r2, r2, r0
 800aa78:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800aa7c:	920b      	str	r2, [sp, #44]	; 0x2c
 800aa7e:	e004      	b.n	800aa8a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800aa80:	681a      	ldr	r2, [r3, #0]
 800aa82:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800aa86:	f000 8092 	beq.w	800abae <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800aa8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa8c:	3a01      	subs	r2, #1
 800aa8e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800aa90:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aa92:	2900      	cmp	r1, #0
 800aa94:	d1f4      	bne.n	800aa80 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aa96:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa98:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aa9a:	f042 0220 	orr.w	r2, r2, #32
 800aa9e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aaa0:	685a      	ldr	r2, [r3, #4]
 800aaa2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aaa6:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaa8:	691b      	ldr	r3, [r3, #16]
 800aaaa:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800aaac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800aaae:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800aab0:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800aab2:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800aab4:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800aab6:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800aab8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800aaba:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800aabc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800aac0:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aac2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800aac6:	f7ff faa3 	bl	800a010 <HAL_I2C_ErrorCallback>
 800aaca:	e405      	b.n	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aacc:	2d08      	cmp	r5, #8
 800aace:	d0ad      	beq.n	800aa2c <HAL_I2C_EV_IRQHandler+0x7b4>
 800aad0:	2d20      	cmp	r5, #32
 800aad2:	d0ab      	beq.n	800aa2c <HAL_I2C_EV_IRQHandler+0x7b4>
 800aad4:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800aad8:	d0a8      	beq.n	800aa2c <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aada:	685a      	ldr	r2, [r3, #4]
 800aadc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aae0:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aae2:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aae4:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aae6:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aae8:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aaea:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aaee:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800aaf0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aaf4:	f7ff fa1e 	bl	8009f34 <HAL_I2C_MasterTxCpltCallback>
 800aaf8:	f7ff bbee 	b.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aafc:	2801      	cmp	r0, #1
 800aafe:	f43f af05 	beq.w	800a90c <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab02:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab04:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab06:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab0a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab0c:	9107      	str	r1, [sp, #28]
 800ab0e:	695a      	ldr	r2, [r3, #20]
 800ab10:	9207      	str	r2, [sp, #28]
 800ab12:	699a      	ldr	r2, [r3, #24]
 800ab14:	9207      	str	r2, [sp, #28]
 800ab16:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab18:	681a      	ldr	r2, [r3, #0]
 800ab1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab1e:	601a      	str	r2, [r3, #0]
 800ab20:	e632      	b.n	800a788 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab22:	681a      	ldr	r2, [r3, #0]
 800ab24:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab28:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ab2a:	685a      	ldr	r2, [r3, #4]
 800ab2c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ab30:	d02d      	beq.n	800ab8e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab32:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab34:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab36:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab3a:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab3c:	9104      	str	r1, [sp, #16]
 800ab3e:	695a      	ldr	r2, [r3, #20]
 800ab40:	9204      	str	r2, [sp, #16]
 800ab42:	699b      	ldr	r3, [r3, #24]
 800ab44:	9304      	str	r3, [sp, #16]
 800ab46:	9b04      	ldr	r3, [sp, #16]
 800ab48:	e61e      	b.n	800a788 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab4a:	681a      	ldr	r2, [r3, #0]
 800ab4c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ab50:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ab52:	685a      	ldr	r2, [r3, #4]
 800ab54:	0515      	lsls	r5, r2, #20
 800ab56:	f57f af48 	bpl.w	800a9ea <HAL_I2C_EV_IRQHandler+0x772>
 800ab5a:	2807      	cmp	r0, #7
 800ab5c:	d807      	bhi.n	800ab6e <HAL_I2C_EV_IRQHandler+0x8f6>
 800ab5e:	2801      	cmp	r0, #1
 800ab60:	f47f af43 	bne.w	800a9ea <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ab64:	685a      	ldr	r2, [r3, #4]
 800ab66:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ab6a:	605a      	str	r2, [r3, #4]
 800ab6c:	e73d      	b.n	800a9ea <HAL_I2C_EV_IRQHandler+0x772>
 800ab6e:	4a22      	ldr	r2, [pc, #136]	; (800abf8 <HAL_I2C_EV_IRQHandler+0x980>)
 800ab70:	3808      	subs	r0, #8
 800ab72:	40c2      	lsrs	r2, r0
 800ab74:	07d0      	lsls	r0, r2, #31
 800ab76:	f57f af38 	bpl.w	800a9ea <HAL_I2C_EV_IRQHandler+0x772>
 800ab7a:	e7f3      	b.n	800ab64 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab7c:	2300      	movs	r3, #0
 800ab7e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ab82:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ab84:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ab86:	f7ff fa41 	bl	800a00c <HAL_I2C_MemRxCpltCallback>
 800ab8a:	f7ff bba5 	b.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab8e:	9205      	str	r2, [sp, #20]
 800ab90:	695a      	ldr	r2, [r3, #20]
 800ab92:	9205      	str	r2, [sp, #20]
 800ab94:	699a      	ldr	r2, [r3, #24]
 800ab96:	9205      	str	r2, [sp, #20]
 800ab98:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab9a:	681a      	ldr	r2, [r3, #0]
 800ab9c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aba0:	601a      	str	r2, [r3, #0]
 800aba2:	e5f1      	b.n	800a788 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aba4:	681a      	ldr	r2, [r3, #0]
 800aba6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800abaa:	601a      	str	r2, [r3, #0]
 800abac:	e6b2      	b.n	800a914 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abae:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abb0:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abb2:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abb6:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800abb8:	6859      	ldr	r1, [r3, #4]
 800abba:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800abbe:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abc0:	691b      	ldr	r3, [r3, #16]
 800abc2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800abc4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800abc6:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800abc8:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800abca:	b29b      	uxth	r3, r3
 800abcc:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800abce:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800abd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abd4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800abd8:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abda:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800abdc:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abde:	f47f aed9 	bne.w	800a994 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800abe2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800abe6:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800abe8:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800abea:	f7ff fa0f 	bl	800a00c <HAL_I2C_MemRxCpltCallback>
 800abee:	f7ff bb73 	b.w	800a2d8 <HAL_I2C_EV_IRQHandler+0x60>
 800abf2:	bf00      	nop
 800abf4:	20000078 	.word	0x20000078
 800abf8:	01000101 	.word	0x01000101

0800abfc <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800abfc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ac00:	2a20      	cmp	r2, #32
{
 800ac02:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac04:	fa5f fc82 	uxtb.w	ip, r2
 800ac08:	d001      	beq.n	800ac0e <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ac0a:	2002      	movs	r0, #2
  }
}
 800ac0c:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800ac0e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ac10:	2024      	movs	r0, #36	; 0x24
 800ac12:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ac16:	6810      	ldr	r0, [r2, #0]
 800ac18:	f020 0001 	bic.w	r0, r0, #1
 800ac1c:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800ac1e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ac20:	f020 0010 	bic.w	r0, r0, #16
 800ac24:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800ac26:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ac28:	4301      	orrs	r1, r0
 800ac2a:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ac2c:	6811      	ldr	r1, [r2, #0]
 800ac2e:	f041 0101 	orr.w	r1, r1, #1
 800ac32:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800ac34:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ac36:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ac3a:	4770      	bx	lr

0800ac3c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac3c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ac40:	2a20      	cmp	r2, #32
 800ac42:	d001      	beq.n	800ac48 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ac44:	2002      	movs	r0, #2
  }
}
 800ac46:	4770      	bx	lr
{
 800ac48:	b410      	push	{r4}
 800ac4a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800ac4e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ac50:	2224      	movs	r2, #36	; 0x24
 800ac52:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ac56:	6822      	ldr	r2, [r4, #0]
 800ac58:	f022 0201 	bic.w	r2, r2, #1
 800ac5c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800ac5e:	4603      	mov	r3, r0
 800ac60:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ac62:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ac66:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ac68:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ac6a:	b289      	uxth	r1, r1
 800ac6c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ac6e:	6822      	ldr	r2, [r4, #0]
 800ac70:	f042 0201 	orr.w	r2, r2, #1
 800ac74:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ac76:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ac7a:	2000      	movs	r0, #0
}
 800ac7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ac80:	4770      	bx	lr
 800ac82:	bf00      	nop

0800ac84 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ac84:	2800      	cmp	r0, #0
 800ac86:	d069      	beq.n	800ad5c <HAL_LTDC_Init+0xd8>
{
 800ac88:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ac8a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ac8e:	4604      	mov	r4, r0
 800ac90:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ac94:	2b00      	cmp	r3, #0
 800ac96:	d05c      	beq.n	800ad52 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ac98:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ac9a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ac9c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aca0:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800aca4:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aca6:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800aca8:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800acac:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800acb0:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800acb2:	6999      	ldr	r1, [r3, #24]
 800acb4:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800acb6:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800acb8:	430a      	orrs	r2, r1
 800acba:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800acbc:	689a      	ldr	r2, [r3, #8]
 800acbe:	4928      	ldr	r1, [pc, #160]	; (800ad60 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800acc0:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800acc2:	400a      	ands	r2, r1
 800acc4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800acc6:	689a      	ldr	r2, [r3, #8]
 800acc8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800accc:	69a0      	ldr	r0, [r4, #24]
 800acce:	4302      	orrs	r2, r0
 800acd0:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800acd2:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800acd4:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800acd6:	400a      	ands	r2, r1
 800acd8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800acda:	68da      	ldr	r2, [r3, #12]
 800acdc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ace0:	6a20      	ldr	r0, [r4, #32]
 800ace2:	4302      	orrs	r2, r0
 800ace4:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ace6:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ace8:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800acea:	400a      	ands	r2, r1
 800acec:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800acee:	691a      	ldr	r2, [r3, #16]
 800acf0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800acf4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800acf6:	4302      	orrs	r2, r0
 800acf8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800acfa:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800acfc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800acfe:	400a      	ands	r2, r1
 800ad00:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ad02:	695a      	ldr	r2, [r3, #20]
 800ad04:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad06:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad0a:	430a      	orrs	r2, r1
 800ad0c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ad0e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800ad10:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800ad14:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ad18:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800ad1c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800ad1e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800ad20:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800ad24:	432a      	orrs	r2, r5
 800ad26:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800ad2a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800ad2e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800ad30:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ad32:	f042 0206 	orr.w	r2, r2, #6
 800ad36:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800ad38:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800ad3a:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ad3e:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800ad40:	ea42 020c 	orr.w	r2, r2, ip
 800ad44:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ad46:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800ad4a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800ad4e:	4608      	mov	r0, r1
}
 800ad50:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800ad52:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800ad56:	f7f7 f893 	bl	8001e80 <HAL_LTDC_MspInit>
 800ad5a:	e79d      	b.n	800ac98 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800ad5c:	2001      	movs	r0, #1
}
 800ad5e:	4770      	bx	lr
 800ad60:	f000f800 	.word	0xf000f800

0800ad64 <HAL_LTDC_ErrorCallback>:
 800ad64:	4770      	bx	lr
 800ad66:	bf00      	nop

0800ad68 <HAL_LTDC_ReloadEventCallback>:
 800ad68:	4770      	bx	lr
 800ad6a:	bf00      	nop

0800ad6c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ad6c:	6803      	ldr	r3, [r0, #0]
{
 800ad6e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ad70:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800ad72:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ad74:	076a      	lsls	r2, r5, #29
{
 800ad76:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ad78:	d501      	bpl.n	800ad7e <HAL_LTDC_IRQHandler+0x12>
 800ad7a:	0771      	lsls	r1, r6, #29
 800ad7c:	d41d      	bmi.n	800adba <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ad7e:	07aa      	lsls	r2, r5, #30
 800ad80:	d501      	bpl.n	800ad86 <HAL_LTDC_IRQHandler+0x1a>
 800ad82:	07b3      	lsls	r3, r6, #30
 800ad84:	d42d      	bmi.n	800ade2 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ad86:	07e8      	lsls	r0, r5, #31
 800ad88:	d501      	bpl.n	800ad8e <HAL_LTDC_IRQHandler+0x22>
 800ad8a:	07f1      	lsls	r1, r6, #31
 800ad8c:	d440      	bmi.n	800ae10 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ad8e:	072a      	lsls	r2, r5, #28
 800ad90:	d501      	bpl.n	800ad96 <HAL_LTDC_IRQHandler+0x2a>
 800ad92:	0733      	lsls	r3, r6, #28
 800ad94:	d400      	bmi.n	800ad98 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800ad96:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ad98:	6823      	ldr	r3, [r4, #0]
 800ad9a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ad9c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ad9e:	f022 0208 	bic.w	r2, r2, #8
 800ada2:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800ada4:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ada6:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ada8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800adaa:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800adae:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800adb2:	4620      	mov	r0, r4
 800adb4:	f7ff ffd8 	bl	800ad68 <HAL_LTDC_ReloadEventCallback>
}
 800adb8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800adba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800adbc:	f022 0204 	bic.w	r2, r2, #4
 800adc0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800adc2:	2204      	movs	r2, #4
 800adc4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800adc6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800adca:	f043 0301 	orr.w	r3, r3, #1
 800adce:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800add2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800add4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800add8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800addc:	f7ff ffc2 	bl	800ad64 <HAL_LTDC_ErrorCallback>
 800ade0:	e7cd      	b.n	800ad7e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800ade2:	6823      	ldr	r3, [r4, #0]
 800ade4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ade6:	f022 0202 	bic.w	r2, r2, #2
 800adea:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800adec:	2202      	movs	r2, #2
 800adee:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800adf0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800adf4:	f043 0302 	orr.w	r3, r3, #2
 800adf8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800adfc:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800adfe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae00:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae04:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ae08:	4620      	mov	r0, r4
 800ae0a:	f7ff ffab 	bl	800ad64 <HAL_LTDC_ErrorCallback>
 800ae0e:	e7ba      	b.n	800ad86 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ae10:	6823      	ldr	r3, [r4, #0]
 800ae12:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae14:	f022 0201 	bic.w	r2, r2, #1
 800ae18:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800ae1a:	2201      	movs	r2, #1
 800ae1c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ae1e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae20:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae24:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800ae28:	4620      	mov	r0, r4
 800ae2a:	f7f6 f97f 	bl	800112c <HAL_LTDC_LineEventCallback>
 800ae2e:	e7ae      	b.n	800ad8e <HAL_LTDC_IRQHandler+0x22>

0800ae30 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800ae30:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ae34:	2b01      	cmp	r3, #1
 800ae36:	f000 80c2 	beq.w	800afbe <HAL_LTDC_ConfigLayer+0x18e>
{
 800ae3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae3e:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ae42:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae46:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae4a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae4c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae4e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae52:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800ae56:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ae5a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800ae5e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae62:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800ae66:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae68:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae6c:	460c      	mov	r4, r1
 800ae6e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae70:	9301      	str	r3, [sp, #4]
 800ae72:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae74:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ae76:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800ae7a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ae7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ae80:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae82:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ae86:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ae88:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ae8c:	6823      	ldr	r3, [r4, #0]
 800ae8e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae92:	9b01      	ldr	r3, [sp, #4]
 800ae94:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ae98:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800ae9c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800ae9e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800aea0:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aea4:	1c51      	adds	r1, r2, #1
 800aea6:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800aeaa:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aeac:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aeae:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aeb2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aeb6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800aeba:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800aebe:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800aec2:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aec6:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aeca:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aecc:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aece:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800aed2:	3301      	adds	r3, #1
 800aed4:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800aed8:	4403      	add	r3, r0
 800aeda:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800aede:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800aee2:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800aee6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800aee8:	f023 0307 	bic.w	r3, r3, #7
 800aeec:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800aef0:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800aef4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800aef8:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800aefc:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800af00:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800af04:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800af08:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800af0c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800af10:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800af14:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800af18:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800af1c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800af20:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800af24:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800af28:	696b      	ldr	r3, [r5, #20]
 800af2a:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800af2e:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800af32:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800af36:	f023 0307 	bic.w	r3, r3, #7
 800af3a:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800af3e:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800af42:	4303      	orrs	r3, r0
 800af44:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800af48:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800af4c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800af4e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800af52:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800af56:	bb69      	cbnz	r1, 800afb4 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800af58:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800af5a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800af5c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800af5e:	fb03 f707 	mul.w	r7, r3, r7
 800af62:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800af64:	fb02 f303 	mul.w	r3, r2, r3
 800af68:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800af6c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800af70:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800af72:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800af76:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800af7a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800af7e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800af82:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800af86:	f023 0307 	bic.w	r3, r3, #7
 800af8a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800af8e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800af92:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800af96:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800af98:	4313      	orrs	r3, r2
 800af9a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800af9e:	2300      	movs	r3, #0
  return HAL_OK;
 800afa0:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800afa2:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800afa6:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800afaa:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800afae:	b003      	add	sp, #12
 800afb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800afb4:	3901      	subs	r1, #1
 800afb6:	2906      	cmp	r1, #6
 800afb8:	d903      	bls.n	800afc2 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800afba:	2301      	movs	r3, #1
 800afbc:	e7cd      	b.n	800af5a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800afbe:	2002      	movs	r0, #2
}
 800afc0:	4770      	bx	lr
 800afc2:	4b02      	ldr	r3, [pc, #8]	; (800afcc <HAL_LTDC_ConfigLayer+0x19c>)
 800afc4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800afc8:	e7c7      	b.n	800af5a <HAL_LTDC_ConfigLayer+0x12a>
 800afca:	bf00      	nop
 800afcc:	0802d900 	.word	0x0802d900

0800afd0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800afd0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800afd4:	2b01      	cmp	r3, #1
 800afd6:	d019      	beq.n	800b00c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afd8:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800afda:	2302      	movs	r3, #2
{
 800afdc:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800afde:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afe2:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800afe4:	4c0a      	ldr	r4, [pc, #40]	; (800b010 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afe6:	f023 0301 	bic.w	r3, r3, #1
 800afea:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800afec:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800afee:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800aff0:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800aff2:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800aff6:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800affa:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800affc:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b000:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b004:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b008:	4618      	mov	r0, r3
}
 800b00a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b00c:	2002      	movs	r0, #2
}
 800b00e:	4770      	bx	lr
 800b010:	40016800 	.word	0x40016800

0800b014 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b014:	2800      	cmp	r0, #0
 800b016:	f000 81a2 	beq.w	800b35e <HAL_RCC_OscConfig+0x34a>
{
 800b01a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b01e:	6803      	ldr	r3, [r0, #0]
 800b020:	07dd      	lsls	r5, r3, #31
{
 800b022:	b082      	sub	sp, #8
 800b024:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b026:	d52f      	bpl.n	800b088 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b028:	499e      	ldr	r1, [pc, #632]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b02a:	688a      	ldr	r2, [r1, #8]
 800b02c:	f002 020c 	and.w	r2, r2, #12
 800b030:	2a04      	cmp	r2, #4
 800b032:	f000 80ed 	beq.w	800b210 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b036:	688a      	ldr	r2, [r1, #8]
 800b038:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b03c:	2a08      	cmp	r2, #8
 800b03e:	f000 80e3 	beq.w	800b208 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b042:	6863      	ldr	r3, [r4, #4]
 800b044:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b048:	f000 80ec 	beq.w	800b224 <HAL_RCC_OscConfig+0x210>
 800b04c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b050:	f000 8175 	beq.w	800b33e <HAL_RCC_OscConfig+0x32a>
 800b054:	4d93      	ldr	r5, [pc, #588]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b056:	682a      	ldr	r2, [r5, #0]
 800b058:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b05c:	602a      	str	r2, [r5, #0]
 800b05e:	682a      	ldr	r2, [r5, #0]
 800b060:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b064:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b066:	2b00      	cmp	r3, #0
 800b068:	f040 80e1 	bne.w	800b22e <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b06c:	f7fd ffb0 	bl	8008fd0 <HAL_GetTick>
 800b070:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b072:	e005      	b.n	800b080 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b074:	f7fd ffac 	bl	8008fd0 <HAL_GetTick>
 800b078:	1b80      	subs	r0, r0, r6
 800b07a:	2864      	cmp	r0, #100	; 0x64
 800b07c:	f200 8101 	bhi.w	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b080:	682b      	ldr	r3, [r5, #0]
 800b082:	039b      	lsls	r3, r3, #14
 800b084:	d4f6      	bmi.n	800b074 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b086:	6823      	ldr	r3, [r4, #0]
 800b088:	079f      	lsls	r7, r3, #30
 800b08a:	d528      	bpl.n	800b0de <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b08c:	4a85      	ldr	r2, [pc, #532]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b08e:	6891      	ldr	r1, [r2, #8]
 800b090:	f011 0f0c 	tst.w	r1, #12
 800b094:	f000 8090 	beq.w	800b1b8 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b098:	6891      	ldr	r1, [r2, #8]
 800b09a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b09e:	2908      	cmp	r1, #8
 800b0a0:	f000 8086 	beq.w	800b1b0 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b0a4:	68e3      	ldr	r3, [r4, #12]
 800b0a6:	2b00      	cmp	r3, #0
 800b0a8:	f000 810e 	beq.w	800b2c8 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b0ac:	4b7e      	ldr	r3, [pc, #504]	; (800b2a8 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0ae:	4e7d      	ldr	r6, [pc, #500]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b0b0:	2201      	movs	r2, #1
 800b0b2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b0b4:	f7fd ff8c 	bl	8008fd0 <HAL_GetTick>
 800b0b8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0ba:	e005      	b.n	800b0c8 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b0bc:	f7fd ff88 	bl	8008fd0 <HAL_GetTick>
 800b0c0:	1b40      	subs	r0, r0, r5
 800b0c2:	2802      	cmp	r0, #2
 800b0c4:	f200 80dd 	bhi.w	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0c8:	6833      	ldr	r3, [r6, #0]
 800b0ca:	0798      	lsls	r0, r3, #30
 800b0cc:	d5f6      	bpl.n	800b0bc <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b0ce:	6833      	ldr	r3, [r6, #0]
 800b0d0:	6922      	ldr	r2, [r4, #16]
 800b0d2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b0d6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b0da:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b0dc:	6823      	ldr	r3, [r4, #0]
 800b0de:	071a      	lsls	r2, r3, #28
 800b0e0:	d451      	bmi.n	800b186 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b0e2:	0758      	lsls	r0, r3, #29
 800b0e4:	d52f      	bpl.n	800b146 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b0e6:	4a6f      	ldr	r2, [pc, #444]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b0e8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b0ea:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b0ee:	d07f      	beq.n	800b1f0 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b0f0:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b0f2:	4e6e      	ldr	r6, [pc, #440]	; (800b2ac <HAL_RCC_OscConfig+0x298>)
 800b0f4:	6833      	ldr	r3, [r6, #0]
 800b0f6:	05d9      	lsls	r1, r3, #23
 800b0f8:	f140 80b3 	bpl.w	800b262 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b0fc:	68a3      	ldr	r3, [r4, #8]
 800b0fe:	2b01      	cmp	r3, #1
 800b100:	f000 80c3 	beq.w	800b28a <HAL_RCC_OscConfig+0x276>
 800b104:	2b05      	cmp	r3, #5
 800b106:	f000 812c 	beq.w	800b362 <HAL_RCC_OscConfig+0x34e>
 800b10a:	4e66      	ldr	r6, [pc, #408]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b10c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b10e:	f022 0201 	bic.w	r2, r2, #1
 800b112:	6732      	str	r2, [r6, #112]	; 0x70
 800b114:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b116:	f022 0204 	bic.w	r2, r2, #4
 800b11a:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b11c:	2b00      	cmp	r3, #0
 800b11e:	f040 80b9 	bne.w	800b294 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b122:	f7fd ff55 	bl	8008fd0 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b126:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b12a:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b12c:	e005      	b.n	800b13a <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b12e:	f7fd ff4f 	bl	8008fd0 <HAL_GetTick>
 800b132:	1bc0      	subs	r0, r0, r7
 800b134:	4540      	cmp	r0, r8
 800b136:	f200 80a4 	bhi.w	800b282 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b13a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b13c:	0798      	lsls	r0, r3, #30
 800b13e:	d4f6      	bmi.n	800b12e <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b140:	2d00      	cmp	r5, #0
 800b142:	f040 8106 	bne.w	800b352 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b146:	69a0      	ldr	r0, [r4, #24]
 800b148:	b1c8      	cbz	r0, 800b17e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b14a:	4d56      	ldr	r5, [pc, #344]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b14c:	68ab      	ldr	r3, [r5, #8]
 800b14e:	f003 030c 	and.w	r3, r3, #12
 800b152:	2b08      	cmp	r3, #8
 800b154:	f000 80c9 	beq.w	800b2ea <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b158:	4b53      	ldr	r3, [pc, #332]	; (800b2a8 <HAL_RCC_OscConfig+0x294>)
 800b15a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b15c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b15e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b160:	f000 8109 	beq.w	800b376 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b164:	f7fd ff34 	bl	8008fd0 <HAL_GetTick>
 800b168:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b16a:	e005      	b.n	800b178 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b16c:	f7fd ff30 	bl	8008fd0 <HAL_GetTick>
 800b170:	1b00      	subs	r0, r0, r4
 800b172:	2802      	cmp	r0, #2
 800b174:	f200 8085 	bhi.w	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b178:	682b      	ldr	r3, [r5, #0]
 800b17a:	019b      	lsls	r3, r3, #6
 800b17c:	d4f6      	bmi.n	800b16c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b17e:	2000      	movs	r0, #0
}
 800b180:	b002      	add	sp, #8
 800b182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b186:	6963      	ldr	r3, [r4, #20]
 800b188:	b30b      	cbz	r3, 800b1ce <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b18a:	4b47      	ldr	r3, [pc, #284]	; (800b2a8 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b18c:	4e45      	ldr	r6, [pc, #276]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b18e:	2201      	movs	r2, #1
 800b190:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b194:	f7fd ff1c 	bl	8008fd0 <HAL_GetTick>
 800b198:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b19a:	e004      	b.n	800b1a6 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b19c:	f7fd ff18 	bl	8008fd0 <HAL_GetTick>
 800b1a0:	1b40      	subs	r0, r0, r5
 800b1a2:	2802      	cmp	r0, #2
 800b1a4:	d86d      	bhi.n	800b282 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b1a6:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b1a8:	079b      	lsls	r3, r3, #30
 800b1aa:	d5f7      	bpl.n	800b19c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b1ac:	6823      	ldr	r3, [r4, #0]
 800b1ae:	e798      	b.n	800b0e2 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b1b0:	6852      	ldr	r2, [r2, #4]
 800b1b2:	0256      	lsls	r6, r2, #9
 800b1b4:	f53f af76 	bmi.w	800b0a4 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b1b8:	4a3a      	ldr	r2, [pc, #232]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b1ba:	6812      	ldr	r2, [r2, #0]
 800b1bc:	0795      	lsls	r5, r2, #30
 800b1be:	d544      	bpl.n	800b24a <HAL_RCC_OscConfig+0x236>
 800b1c0:	68e2      	ldr	r2, [r4, #12]
 800b1c2:	2a01      	cmp	r2, #1
 800b1c4:	d041      	beq.n	800b24a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b1c6:	2001      	movs	r0, #1
}
 800b1c8:	b002      	add	sp, #8
 800b1ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b1ce:	4a36      	ldr	r2, [pc, #216]	; (800b2a8 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b1d0:	4e34      	ldr	r6, [pc, #208]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b1d2:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b1d6:	f7fd fefb 	bl	8008fd0 <HAL_GetTick>
 800b1da:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b1dc:	e004      	b.n	800b1e8 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b1de:	f7fd fef7 	bl	8008fd0 <HAL_GetTick>
 800b1e2:	1b40      	subs	r0, r0, r5
 800b1e4:	2802      	cmp	r0, #2
 800b1e6:	d84c      	bhi.n	800b282 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b1e8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b1ea:	079f      	lsls	r7, r3, #30
 800b1ec:	d4f7      	bmi.n	800b1de <HAL_RCC_OscConfig+0x1ca>
 800b1ee:	e7dd      	b.n	800b1ac <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b1f0:	9301      	str	r3, [sp, #4]
 800b1f2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b1f4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b1f8:	6413      	str	r3, [r2, #64]	; 0x40
 800b1fa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b1fc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b200:	9301      	str	r3, [sp, #4]
 800b202:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b204:	2501      	movs	r5, #1
 800b206:	e774      	b.n	800b0f2 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b208:	684a      	ldr	r2, [r1, #4]
 800b20a:	0250      	lsls	r0, r2, #9
 800b20c:	f57f af19 	bpl.w	800b042 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b210:	4a24      	ldr	r2, [pc, #144]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b212:	6812      	ldr	r2, [r2, #0]
 800b214:	0391      	lsls	r1, r2, #14
 800b216:	f57f af37 	bpl.w	800b088 <HAL_RCC_OscConfig+0x74>
 800b21a:	6862      	ldr	r2, [r4, #4]
 800b21c:	2a00      	cmp	r2, #0
 800b21e:	f47f af33 	bne.w	800b088 <HAL_RCC_OscConfig+0x74>
 800b222:	e7d0      	b.n	800b1c6 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b224:	4a1f      	ldr	r2, [pc, #124]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b226:	6813      	ldr	r3, [r2, #0]
 800b228:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b22c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b22e:	f7fd fecf 	bl	8008fd0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b232:	4e1c      	ldr	r6, [pc, #112]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b234:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b236:	e004      	b.n	800b242 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b238:	f7fd feca 	bl	8008fd0 <HAL_GetTick>
 800b23c:	1b40      	subs	r0, r0, r5
 800b23e:	2864      	cmp	r0, #100	; 0x64
 800b240:	d81f      	bhi.n	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b242:	6833      	ldr	r3, [r6, #0]
 800b244:	039a      	lsls	r2, r3, #14
 800b246:	d5f7      	bpl.n	800b238 <HAL_RCC_OscConfig+0x224>
 800b248:	e71d      	b.n	800b086 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b24a:	4916      	ldr	r1, [pc, #88]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b24c:	6920      	ldr	r0, [r4, #16]
 800b24e:	680a      	ldr	r2, [r1, #0]
 800b250:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b254:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b258:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b25a:	071a      	lsls	r2, r3, #28
 800b25c:	f57f af41 	bpl.w	800b0e2 <HAL_RCC_OscConfig+0xce>
 800b260:	e791      	b.n	800b186 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b262:	6833      	ldr	r3, [r6, #0]
 800b264:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b268:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b26a:	f7fd feb1 	bl	8008fd0 <HAL_GetTick>
 800b26e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b270:	6833      	ldr	r3, [r6, #0]
 800b272:	05da      	lsls	r2, r3, #23
 800b274:	f53f af42 	bmi.w	800b0fc <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b278:	f7fd feaa 	bl	8008fd0 <HAL_GetTick>
 800b27c:	1bc0      	subs	r0, r0, r7
 800b27e:	2802      	cmp	r0, #2
 800b280:	d9f6      	bls.n	800b270 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b282:	2003      	movs	r0, #3
}
 800b284:	b002      	add	sp, #8
 800b286:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b28a:	4a06      	ldr	r2, [pc, #24]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
 800b28c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b28e:	f043 0301 	orr.w	r3, r3, #1
 800b292:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b294:	f7fd fe9c 	bl	8008fd0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b298:	4f02      	ldr	r7, [pc, #8]	; (800b2a4 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b29a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b29c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b2a0:	e00b      	b.n	800b2ba <HAL_RCC_OscConfig+0x2a6>
 800b2a2:	bf00      	nop
 800b2a4:	40023800 	.word	0x40023800
 800b2a8:	42470000 	.word	0x42470000
 800b2ac:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2b0:	f7fd fe8e 	bl	8008fd0 <HAL_GetTick>
 800b2b4:	1b80      	subs	r0, r0, r6
 800b2b6:	4540      	cmp	r0, r8
 800b2b8:	d8e3      	bhi.n	800b282 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b2ba:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b2bc:	079b      	lsls	r3, r3, #30
 800b2be:	d5f7      	bpl.n	800b2b0 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b2c0:	2d00      	cmp	r5, #0
 800b2c2:	f43f af40 	beq.w	800b146 <HAL_RCC_OscConfig+0x132>
 800b2c6:	e044      	b.n	800b352 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b2c8:	4a42      	ldr	r2, [pc, #264]	; (800b3d4 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b2ca:	4e43      	ldr	r6, [pc, #268]	; (800b3d8 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b2cc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b2ce:	f7fd fe7f 	bl	8008fd0 <HAL_GetTick>
 800b2d2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b2d4:	e004      	b.n	800b2e0 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b2d6:	f7fd fe7b 	bl	8008fd0 <HAL_GetTick>
 800b2da:	1b40      	subs	r0, r0, r5
 800b2dc:	2802      	cmp	r0, #2
 800b2de:	d8d0      	bhi.n	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b2e0:	6833      	ldr	r3, [r6, #0]
 800b2e2:	0799      	lsls	r1, r3, #30
 800b2e4:	d4f7      	bmi.n	800b2d6 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b2e6:	6823      	ldr	r3, [r4, #0]
 800b2e8:	e6f9      	b.n	800b0de <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b2ea:	2801      	cmp	r0, #1
 800b2ec:	f43f af48 	beq.w	800b180 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b2f0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b2f2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b2f4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b2f8:	4291      	cmp	r1, r2
 800b2fa:	f47f af64 	bne.w	800b1c6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b2fe:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b300:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b304:	4291      	cmp	r1, r2
 800b306:	f47f af5e 	bne.w	800b1c6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b30a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b30c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b310:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b312:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b316:	f47f af56 	bne.w	800b1c6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b31a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b31c:	0852      	lsrs	r2, r2, #1
 800b31e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b322:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b324:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b328:	f47f af4d 	bne.w	800b1c6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b32c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b32e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b332:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b336:	bf14      	ite	ne
 800b338:	2001      	movne	r0, #1
 800b33a:	2000      	moveq	r0, #0
 800b33c:	e720      	b.n	800b180 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b33e:	4b26      	ldr	r3, [pc, #152]	; (800b3d8 <HAL_RCC_OscConfig+0x3c4>)
 800b340:	681a      	ldr	r2, [r3, #0]
 800b342:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b346:	601a      	str	r2, [r3, #0]
 800b348:	681a      	ldr	r2, [r3, #0]
 800b34a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b34e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b350:	e76d      	b.n	800b22e <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b352:	4a21      	ldr	r2, [pc, #132]	; (800b3d8 <HAL_RCC_OscConfig+0x3c4>)
 800b354:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b356:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b35a:	6413      	str	r3, [r2, #64]	; 0x40
 800b35c:	e6f3      	b.n	800b146 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b35e:	2001      	movs	r0, #1
}
 800b360:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b362:	4b1d      	ldr	r3, [pc, #116]	; (800b3d8 <HAL_RCC_OscConfig+0x3c4>)
 800b364:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b366:	f042 0204 	orr.w	r2, r2, #4
 800b36a:	671a      	str	r2, [r3, #112]	; 0x70
 800b36c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b36e:	f042 0201 	orr.w	r2, r2, #1
 800b372:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b374:	e78e      	b.n	800b294 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b376:	f7fd fe2b 	bl	8008fd0 <HAL_GetTick>
 800b37a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b37c:	e005      	b.n	800b38a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b37e:	f7fd fe27 	bl	8008fd0 <HAL_GetTick>
 800b382:	1b80      	subs	r0, r0, r6
 800b384:	2802      	cmp	r0, #2
 800b386:	f63f af7c 	bhi.w	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b38a:	682b      	ldr	r3, [r5, #0]
 800b38c:	0199      	lsls	r1, r3, #6
 800b38e:	d4f6      	bmi.n	800b37e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b390:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b394:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b396:	430b      	orrs	r3, r1
 800b398:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b39c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b3a0:	0852      	lsrs	r2, r2, #1
 800b3a2:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b3a6:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b3a8:	490a      	ldr	r1, [pc, #40]	; (800b3d4 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b3aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b3ae:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b3b0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b3b2:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b3b4:	f7fd fe0c 	bl	8008fd0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b3b8:	4d07      	ldr	r5, [pc, #28]	; (800b3d8 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b3ba:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b3bc:	e005      	b.n	800b3ca <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b3be:	f7fd fe07 	bl	8008fd0 <HAL_GetTick>
 800b3c2:	1b00      	subs	r0, r0, r4
 800b3c4:	2802      	cmp	r0, #2
 800b3c6:	f63f af5c 	bhi.w	800b282 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b3ca:	682b      	ldr	r3, [r5, #0]
 800b3cc:	019a      	lsls	r2, r3, #6
 800b3ce:	d5f6      	bpl.n	800b3be <HAL_RCC_OscConfig+0x3aa>
 800b3d0:	e6d5      	b.n	800b17e <HAL_RCC_OscConfig+0x16a>
 800b3d2:	bf00      	nop
 800b3d4:	42470000 	.word	0x42470000
 800b3d8:	40023800 	.word	0x40023800

0800b3dc <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b3dc:	4916      	ldr	r1, [pc, #88]	; (800b438 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b3de:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b3e0:	688b      	ldr	r3, [r1, #8]
 800b3e2:	f003 030c 	and.w	r3, r3, #12
 800b3e6:	2b04      	cmp	r3, #4
 800b3e8:	d01b      	beq.n	800b422 <HAL_RCC_GetSysClockFreq+0x46>
 800b3ea:	2b08      	cmp	r3, #8
 800b3ec:	d117      	bne.n	800b41e <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b3ee:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b3f0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b3f2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b3f4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b3f8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b3fc:	d113      	bne.n	800b426 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b3fe:	480f      	ldr	r0, [pc, #60]	; (800b43c <HAL_RCC_GetSysClockFreq+0x60>)
 800b400:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b404:	fba1 0100 	umull	r0, r1, r1, r0
 800b408:	f7f4 ffa2 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b40c:	4b0a      	ldr	r3, [pc, #40]	; (800b438 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b40e:	685b      	ldr	r3, [r3, #4]
 800b410:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b414:	3301      	adds	r3, #1
 800b416:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b418:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b41c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b41e:	4807      	ldr	r0, [pc, #28]	; (800b43c <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b420:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b422:	4807      	ldr	r0, [pc, #28]	; (800b440 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b424:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b426:	4806      	ldr	r0, [pc, #24]	; (800b440 <HAL_RCC_GetSysClockFreq+0x64>)
 800b428:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b42c:	2300      	movs	r3, #0
 800b42e:	fba1 0100 	umull	r0, r1, r1, r0
 800b432:	f7f4 ff8d 	bl	8000350 <__aeabi_uldivmod>
 800b436:	e7e9      	b.n	800b40c <HAL_RCC_GetSysClockFreq+0x30>
 800b438:	40023800 	.word	0x40023800
 800b43c:	00f42400 	.word	0x00f42400
 800b440:	007a1200 	.word	0x007a1200

0800b444 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b444:	2800      	cmp	r0, #0
 800b446:	f000 8087 	beq.w	800b558 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b44a:	4a48      	ldr	r2, [pc, #288]	; (800b56c <HAL_RCC_ClockConfig+0x128>)
 800b44c:	6813      	ldr	r3, [r2, #0]
 800b44e:	f003 030f 	and.w	r3, r3, #15
 800b452:	428b      	cmp	r3, r1
{
 800b454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b458:	460d      	mov	r5, r1
 800b45a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b45c:	d209      	bcs.n	800b472 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b45e:	b2cb      	uxtb	r3, r1
 800b460:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b462:	6813      	ldr	r3, [r2, #0]
 800b464:	f003 030f 	and.w	r3, r3, #15
 800b468:	428b      	cmp	r3, r1
 800b46a:	d002      	beq.n	800b472 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b46c:	2001      	movs	r0, #1
}
 800b46e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b472:	6823      	ldr	r3, [r4, #0]
 800b474:	0798      	lsls	r0, r3, #30
 800b476:	d514      	bpl.n	800b4a2 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b478:	0759      	lsls	r1, r3, #29
 800b47a:	d504      	bpl.n	800b486 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b47c:	493c      	ldr	r1, [pc, #240]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b47e:	688a      	ldr	r2, [r1, #8]
 800b480:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b484:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b486:	071a      	lsls	r2, r3, #28
 800b488:	d504      	bpl.n	800b494 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b48a:	4939      	ldr	r1, [pc, #228]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b48c:	688a      	ldr	r2, [r1, #8]
 800b48e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b492:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b494:	4936      	ldr	r1, [pc, #216]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b496:	68a0      	ldr	r0, [r4, #8]
 800b498:	688a      	ldr	r2, [r1, #8]
 800b49a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b49e:	4302      	orrs	r2, r0
 800b4a0:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b4a2:	07df      	lsls	r7, r3, #31
 800b4a4:	d521      	bpl.n	800b4ea <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b4a6:	6862      	ldr	r2, [r4, #4]
 800b4a8:	2a01      	cmp	r2, #1
 800b4aa:	d057      	beq.n	800b55c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b4ac:	1e93      	subs	r3, r2, #2
 800b4ae:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b4b0:	4b2f      	ldr	r3, [pc, #188]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b4b2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b4b4:	d94d      	bls.n	800b552 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b4b6:	0799      	lsls	r1, r3, #30
 800b4b8:	d5d8      	bpl.n	800b46c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b4ba:	4e2d      	ldr	r6, [pc, #180]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b4bc:	68b3      	ldr	r3, [r6, #8]
 800b4be:	f023 0303 	bic.w	r3, r3, #3
 800b4c2:	4313      	orrs	r3, r2
 800b4c4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b4c6:	f7fd fd83 	bl	8008fd0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b4ca:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b4ce:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b4d0:	e004      	b.n	800b4dc <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b4d2:	f7fd fd7d 	bl	8008fd0 <HAL_GetTick>
 800b4d6:	1bc0      	subs	r0, r0, r7
 800b4d8:	4540      	cmp	r0, r8
 800b4da:	d844      	bhi.n	800b566 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b4dc:	68b3      	ldr	r3, [r6, #8]
 800b4de:	6862      	ldr	r2, [r4, #4]
 800b4e0:	f003 030c 	and.w	r3, r3, #12
 800b4e4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b4e8:	d1f3      	bne.n	800b4d2 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b4ea:	4a20      	ldr	r2, [pc, #128]	; (800b56c <HAL_RCC_ClockConfig+0x128>)
 800b4ec:	6813      	ldr	r3, [r2, #0]
 800b4ee:	f003 030f 	and.w	r3, r3, #15
 800b4f2:	42ab      	cmp	r3, r5
 800b4f4:	d906      	bls.n	800b504 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b4f6:	b2eb      	uxtb	r3, r5
 800b4f8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b4fa:	6813      	ldr	r3, [r2, #0]
 800b4fc:	f003 030f 	and.w	r3, r3, #15
 800b500:	42ab      	cmp	r3, r5
 800b502:	d1b3      	bne.n	800b46c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b504:	6823      	ldr	r3, [r4, #0]
 800b506:	075a      	lsls	r2, r3, #29
 800b508:	d506      	bpl.n	800b518 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b50a:	4919      	ldr	r1, [pc, #100]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b50c:	68e0      	ldr	r0, [r4, #12]
 800b50e:	688a      	ldr	r2, [r1, #8]
 800b510:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b514:	4302      	orrs	r2, r0
 800b516:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b518:	071b      	lsls	r3, r3, #28
 800b51a:	d507      	bpl.n	800b52c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b51c:	4a14      	ldr	r2, [pc, #80]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b51e:	6921      	ldr	r1, [r4, #16]
 800b520:	6893      	ldr	r3, [r2, #8]
 800b522:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b526:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b52a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b52c:	f7ff ff56 	bl	800b3dc <HAL_RCC_GetSysClockFreq>
 800b530:	4a0f      	ldr	r2, [pc, #60]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b532:	4c10      	ldr	r4, [pc, #64]	; (800b574 <HAL_RCC_ClockConfig+0x130>)
 800b534:	6892      	ldr	r2, [r2, #8]
 800b536:	4910      	ldr	r1, [pc, #64]	; (800b578 <HAL_RCC_ClockConfig+0x134>)
 800b538:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b53c:	4603      	mov	r3, r0
 800b53e:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b540:	480e      	ldr	r0, [pc, #56]	; (800b57c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b542:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b544:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b546:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b548:	f7f6 fe78 	bl	800223c <HAL_InitTick>
  return HAL_OK;
 800b54c:	2000      	movs	r0, #0
}
 800b54e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b552:	0198      	lsls	r0, r3, #6
 800b554:	d4b1      	bmi.n	800b4ba <HAL_RCC_ClockConfig+0x76>
 800b556:	e789      	b.n	800b46c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b558:	2001      	movs	r0, #1
}
 800b55a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b55c:	4b04      	ldr	r3, [pc, #16]	; (800b570 <HAL_RCC_ClockConfig+0x12c>)
 800b55e:	681b      	ldr	r3, [r3, #0]
 800b560:	039e      	lsls	r6, r3, #14
 800b562:	d4aa      	bmi.n	800b4ba <HAL_RCC_ClockConfig+0x76>
 800b564:	e782      	b.n	800b46c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b566:	2003      	movs	r0, #3
 800b568:	e781      	b.n	800b46e <HAL_RCC_ClockConfig+0x2a>
 800b56a:	bf00      	nop
 800b56c:	40023c00 	.word	0x40023c00
 800b570:	40023800 	.word	0x40023800
 800b574:	0802d8e8 	.word	0x0802d8e8
 800b578:	20000078 	.word	0x20000078
 800b57c:	20000080 	.word	0x20000080

0800b580 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b580:	4b04      	ldr	r3, [pc, #16]	; (800b594 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b582:	4905      	ldr	r1, [pc, #20]	; (800b598 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b584:	689b      	ldr	r3, [r3, #8]
 800b586:	4a05      	ldr	r2, [pc, #20]	; (800b59c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b588:	6808      	ldr	r0, [r1, #0]
 800b58a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b58e:	5cd3      	ldrb	r3, [r2, r3]
}
 800b590:	40d8      	lsrs	r0, r3
 800b592:	4770      	bx	lr
 800b594:	40023800 	.word	0x40023800
 800b598:	20000078 	.word	0x20000078
 800b59c:	0802d8f8 	.word	0x0802d8f8

0800b5a0 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b5a0:	4b0e      	ldr	r3, [pc, #56]	; (800b5dc <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b5a2:	220f      	movs	r2, #15
 800b5a4:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b5a6:	689a      	ldr	r2, [r3, #8]
 800b5a8:	f002 0203 	and.w	r2, r2, #3
 800b5ac:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b5ae:	689a      	ldr	r2, [r3, #8]
 800b5b0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b5b4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b5b6:	689a      	ldr	r2, [r3, #8]
 800b5b8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b5bc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b5be:	689b      	ldr	r3, [r3, #8]
 800b5c0:	08db      	lsrs	r3, r3, #3
{
 800b5c2:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b5c4:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b5c8:	4c05      	ldr	r4, [pc, #20]	; (800b5e0 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b5ca:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b5cc:	6823      	ldr	r3, [r4, #0]
}
 800b5ce:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b5d2:	f003 030f 	and.w	r3, r3, #15
 800b5d6:	600b      	str	r3, [r1, #0]
}
 800b5d8:	4770      	bx	lr
 800b5da:	bf00      	nop
 800b5dc:	40023800 	.word	0x40023800
 800b5e0:	40023c00 	.word	0x40023c00

0800b5e4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b5e4:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b5e6:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b5e8:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b5ec:	b083      	sub	sp, #12
 800b5ee:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b5f0:	d111      	bne.n	800b616 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b5f2:	f013 0f0c 	tst.w	r3, #12
 800b5f6:	d16f      	bne.n	800b6d8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b5f8:	0698      	lsls	r0, r3, #26
 800b5fa:	f100 80c2 	bmi.w	800b782 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b5fe:	f013 0310 	ands.w	r3, r3, #16
 800b602:	f000 80bb 	beq.w	800b77c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b606:	4b89      	ldr	r3, [pc, #548]	; (800b82c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b608:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b60c:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b610:	2000      	movs	r0, #0
}
 800b612:	b003      	add	sp, #12
 800b614:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b616:	4b86      	ldr	r3, [pc, #536]	; (800b830 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b618:	4e86      	ldr	r6, [pc, #536]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b61a:	2200      	movs	r2, #0
 800b61c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b61e:	f7fd fcd7 	bl	8008fd0 <HAL_GetTick>
 800b622:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b624:	e004      	b.n	800b630 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b626:	f7fd fcd3 	bl	8008fd0 <HAL_GetTick>
 800b62a:	1b43      	subs	r3, r0, r5
 800b62c:	2b02      	cmp	r3, #2
 800b62e:	d850      	bhi.n	800b6d2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b630:	6833      	ldr	r3, [r6, #0]
 800b632:	0118      	lsls	r0, r3, #4
 800b634:	d4f7      	bmi.n	800b626 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b636:	6823      	ldr	r3, [r4, #0]
 800b638:	07d9      	lsls	r1, r3, #31
 800b63a:	d506      	bpl.n	800b64a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b63c:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b640:	0712      	lsls	r2, r2, #28
 800b642:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b646:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b64a:	079a      	lsls	r2, r3, #30
 800b64c:	d515      	bpl.n	800b67a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b64e:	4979      	ldr	r1, [pc, #484]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b650:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b652:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b656:	6865      	ldr	r5, [r4, #4]
 800b658:	0612      	lsls	r2, r2, #24
 800b65a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b65e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b662:	4302      	orrs	r2, r0
 800b664:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b668:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b66c:	69e2      	ldr	r2, [r4, #28]
 800b66e:	f020 001f 	bic.w	r0, r0, #31
 800b672:	3a01      	subs	r2, #1
 800b674:	4302      	orrs	r2, r0
 800b676:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b67a:	065b      	lsls	r3, r3, #25
 800b67c:	d509      	bpl.n	800b692 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b67e:	1d20      	adds	r0, r4, #4
 800b680:	c80b      	ldmia	r0, {r0, r1, r3}
 800b682:	061b      	lsls	r3, r3, #24
 800b684:	4a6b      	ldr	r2, [pc, #428]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b686:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b68a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b68e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b692:	4b67      	ldr	r3, [pc, #412]	; (800b830 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b694:	4e67      	ldr	r6, [pc, #412]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b696:	2201      	movs	r2, #1
 800b698:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b69a:	f7fd fc99 	bl	8008fd0 <HAL_GetTick>
 800b69e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b6a0:	e004      	b.n	800b6ac <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b6a2:	f7fd fc95 	bl	8008fd0 <HAL_GetTick>
 800b6a6:	1b40      	subs	r0, r0, r5
 800b6a8:	2802      	cmp	r0, #2
 800b6aa:	d812      	bhi.n	800b6d2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b6ac:	6833      	ldr	r3, [r6, #0]
 800b6ae:	011f      	lsls	r7, r3, #4
 800b6b0:	d5f7      	bpl.n	800b6a2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b6b2:	6823      	ldr	r3, [r4, #0]
 800b6b4:	e79d      	b.n	800b5f2 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b6b6:	f7fd fc8b 	bl	8008fd0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b6ba:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b6be:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b6c0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b6c2:	079b      	lsls	r3, r3, #30
 800b6c4:	f100 80a5 	bmi.w	800b812 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b6c8:	f7fd fc82 	bl	8008fd0 <HAL_GetTick>
 800b6cc:	1b80      	subs	r0, r0, r6
 800b6ce:	42b8      	cmp	r0, r7
 800b6d0:	d9f6      	bls.n	800b6c0 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b6d2:	2003      	movs	r0, #3
}
 800b6d4:	b003      	add	sp, #12
 800b6d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b6d8:	4b55      	ldr	r3, [pc, #340]	; (800b830 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b6da:	4e56      	ldr	r6, [pc, #344]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b6dc:	2200      	movs	r2, #0
 800b6de:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b6e0:	f7fd fc76 	bl	8008fd0 <HAL_GetTick>
 800b6e4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b6e6:	e004      	b.n	800b6f2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b6e8:	f7fd fc72 	bl	8008fd0 <HAL_GetTick>
 800b6ec:	1b43      	subs	r3, r0, r5
 800b6ee:	2b02      	cmp	r3, #2
 800b6f0:	d8ef      	bhi.n	800b6d2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b6f2:	6833      	ldr	r3, [r6, #0]
 800b6f4:	0098      	lsls	r0, r3, #2
 800b6f6:	d4f7      	bmi.n	800b6e8 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b6f8:	6822      	ldr	r2, [r4, #0]
 800b6fa:	0751      	lsls	r1, r2, #29
 800b6fc:	d515      	bpl.n	800b72a <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b6fe:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b700:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b704:	6920      	ldr	r0, [r4, #16]
 800b706:	061b      	lsls	r3, r3, #24
 800b708:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b70c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b710:	430b      	orrs	r3, r1
 800b712:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b716:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b71a:	6a21      	ldr	r1, [r4, #32]
 800b71c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b720:	3901      	subs	r1, #1
 800b722:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b726:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b72a:	0713      	lsls	r3, r2, #28
 800b72c:	d514      	bpl.n	800b758 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b72e:	4a41      	ldr	r2, [pc, #260]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b730:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b732:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b736:	6920      	ldr	r0, [r4, #16]
 800b738:	071b      	lsls	r3, r3, #28
 800b73a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b73e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b742:	430b      	orrs	r3, r1
 800b744:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b748:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b74c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b74e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b752:	430b      	orrs	r3, r1
 800b754:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b758:	4b35      	ldr	r3, [pc, #212]	; (800b830 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b75a:	4e36      	ldr	r6, [pc, #216]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b75c:	2201      	movs	r2, #1
 800b75e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b760:	f7fd fc36 	bl	8008fd0 <HAL_GetTick>
 800b764:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b766:	e004      	b.n	800b772 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b768:	f7fd fc32 	bl	8008fd0 <HAL_GetTick>
 800b76c:	1b40      	subs	r0, r0, r5
 800b76e:	2802      	cmp	r0, #2
 800b770:	d8af      	bhi.n	800b6d2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b772:	6833      	ldr	r3, [r6, #0]
 800b774:	009f      	lsls	r7, r3, #2
 800b776:	d5f7      	bpl.n	800b768 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b778:	6823      	ldr	r3, [r4, #0]
 800b77a:	e73d      	b.n	800b5f8 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b77c:	4618      	mov	r0, r3
}
 800b77e:	b003      	add	sp, #12
 800b780:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b782:	4b2c      	ldr	r3, [pc, #176]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b784:	4d2c      	ldr	r5, [pc, #176]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b786:	2200      	movs	r2, #0
 800b788:	9201      	str	r2, [sp, #4]
 800b78a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b78c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b790:	641a      	str	r2, [r3, #64]	; 0x40
 800b792:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b794:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b798:	9301      	str	r3, [sp, #4]
 800b79a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b79c:	682b      	ldr	r3, [r5, #0]
 800b79e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b7a2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b7a4:	f7fd fc14 	bl	8008fd0 <HAL_GetTick>
 800b7a8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b7aa:	e004      	b.n	800b7b6 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b7ac:	f7fd fc10 	bl	8008fd0 <HAL_GetTick>
 800b7b0:	1b83      	subs	r3, r0, r6
 800b7b2:	2b02      	cmp	r3, #2
 800b7b4:	d88d      	bhi.n	800b6d2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b7b6:	682b      	ldr	r3, [r5, #0]
 800b7b8:	05d9      	lsls	r1, r3, #23
 800b7ba:	d5f7      	bpl.n	800b7ac <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b7bc:	4d1d      	ldr	r5, [pc, #116]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b7be:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b7c0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b7c2:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b7c6:	d111      	bne.n	800b7ec <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b7c8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b7cc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b7d0:	d021      	beq.n	800b816 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b7d2:	4918      	ldr	r1, [pc, #96]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b7d4:	688a      	ldr	r2, [r1, #8]
 800b7d6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b7da:	608a      	str	r2, [r1, #8]
 800b7dc:	4a15      	ldr	r2, [pc, #84]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b7de:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b7e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b7e4:	430b      	orrs	r3, r1
 800b7e6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b7e8:	6823      	ldr	r3, [r4, #0]
 800b7ea:	e708      	b.n	800b5fe <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b7ec:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b7f0:	4291      	cmp	r1, r2
 800b7f2:	d0eb      	beq.n	800b7cc <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b7f4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b7f6:	4a0e      	ldr	r2, [pc, #56]	; (800b830 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b7f8:	2101      	movs	r1, #1
 800b7fa:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b7fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b802:	2100      	movs	r1, #0
 800b804:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b808:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b80a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b80c:	07da      	lsls	r2, r3, #31
 800b80e:	f53f af52 	bmi.w	800b6b6 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b812:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b814:	e7d8      	b.n	800b7c8 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b816:	4807      	ldr	r0, [pc, #28]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b818:	6882      	ldr	r2, [r0, #8]
 800b81a:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b81e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b822:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b826:	430a      	orrs	r2, r1
 800b828:	6082      	str	r2, [r0, #8]
 800b82a:	e7d7      	b.n	800b7dc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b82c:	42471000 	.word	0x42471000
 800b830:	42470000 	.word	0x42470000
 800b834:	40023800 	.word	0x40023800
 800b838:	40007000 	.word	0x40007000

0800b83c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b83c:	b1f0      	cbz	r0, 800b87c <HAL_SDRAM_Init+0x40>
{
 800b83e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b840:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b844:	460d      	mov	r5, r1
 800b846:	4604      	mov	r4, r0
 800b848:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b84c:	b18b      	cbz	r3, 800b872 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b84e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b850:	2302      	movs	r3, #2
 800b852:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b856:	f851 0b04 	ldr.w	r0, [r1], #4
 800b85a:	f000 fe51 	bl	800c500 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b85e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b862:	4629      	mov	r1, r5
 800b864:	f000 fe8a 	bl	800c57c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b868:	2301      	movs	r3, #1
 800b86a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b86e:	2000      	movs	r0, #0
}
 800b870:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b872:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b876:	f7f6 fc79 	bl	800216c <HAL_SDRAM_MspInit>
 800b87a:	e7e8      	b.n	800b84e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b87c:	2001      	movs	r0, #1
}
 800b87e:	4770      	bx	lr

0800b880 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b880:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b882:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b886:	2b02      	cmp	r3, #2
{
 800b888:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b88a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b88c:	d004      	beq.n	800b898 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b88e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b892:	2c01      	cmp	r4, #1
 800b894:	d001      	beq.n	800b89a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b896:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b898:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b89a:	460e      	mov	r6, r1
 800b89c:	2302      	movs	r3, #2
 800b89e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b8a2:	6828      	ldr	r0, [r5, #0]
 800b8a4:	f000 feb6 	bl	800c614 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b8a8:	6833      	ldr	r3, [r6, #0]
 800b8aa:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b8ac:	bf06      	itte	eq
 800b8ae:	2305      	moveq	r3, #5
 800b8b0:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b8b4:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b8b8:	2000      	movs	r0, #0
}
 800b8ba:	bd70      	pop	{r4, r5, r6, pc}

0800b8bc <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b8bc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b8be:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b8c2:	2b02      	cmp	r3, #2
{
 800b8c4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b8c6:	b2d8      	uxtb	r0, r3
 800b8c8:	d005      	beq.n	800b8d6 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b8ca:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b8ce:	2b01      	cmp	r3, #1
 800b8d0:	b2dd      	uxtb	r5, r3
 800b8d2:	d001      	beq.n	800b8d8 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b8d4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b8d6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b8d8:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b8da:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b8dc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b8e0:	f000 fec2 	bl	800c668 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b8e4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b8e8:	2000      	movs	r0, #0
}
 800b8ea:	bd38      	pop	{r3, r4, r5, pc}

0800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b8ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8f0:	b082      	sub	sp, #8
 800b8f2:	461d      	mov	r5, r3
 800b8f4:	4616      	mov	r6, r2
 800b8f6:	460c      	mov	r4, r1
 800b8f8:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b8fa:	f7fd fb69 	bl	8008fd0 <HAL_GetTick>
 800b8fe:	4435      	add	r5, r6
 800b900:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b902:	f7fd fb65 	bl	8008fd0 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b906:	4b27      	ldr	r3, [pc, #156]	; (800b9a4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b908:	681b      	ldr	r3, [r3, #0]
 800b90a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b90e:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b912:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b914:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b916:	1c73      	adds	r3, r6, #1
 800b918:	6839      	ldr	r1, [r7, #0]
 800b91a:	d107      	bne.n	800b92c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b91c:	688b      	ldr	r3, [r1, #8]
 800b91e:	ea34 0303 	bics.w	r3, r4, r3
 800b922:	d0fb      	beq.n	800b91c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b924:	2000      	movs	r0, #0
}
 800b926:	b002      	add	sp, #8
 800b928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b92c:	688b      	ldr	r3, [r1, #8]
 800b92e:	ea34 0303 	bics.w	r3, r4, r3
 800b932:	d1f7      	bne.n	800b924 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b934:	f7fd fb4c 	bl	8008fd0 <HAL_GetTick>
 800b938:	eba0 0008 	sub.w	r0, r0, r8
 800b93c:	42a8      	cmp	r0, r5
 800b93e:	d208      	bcs.n	800b952 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b940:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b942:	2b00      	cmp	r3, #0
      count--;
 800b944:	9b01      	ldr	r3, [sp, #4]
 800b946:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b94a:	bf08      	it	eq
 800b94c:	2500      	moveq	r5, #0
      count--;
 800b94e:	9301      	str	r3, [sp, #4]
 800b950:	e7e1      	b.n	800b916 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b952:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b956:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b958:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b95c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b960:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b962:	d013      	beq.n	800b98c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800b964:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b966:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b96a:	d107      	bne.n	800b97c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800b96c:	681a      	ldr	r2, [r3, #0]
 800b96e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b972:	601a      	str	r2, [r3, #0]
 800b974:	681a      	ldr	r2, [r3, #0]
 800b976:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b97a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800b97c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800b97e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800b980:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800b984:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800b988:	2003      	movs	r0, #3
 800b98a:	e7cc      	b.n	800b926 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b98c:	68ba      	ldr	r2, [r7, #8]
 800b98e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b992:	d002      	beq.n	800b99a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b994:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b998:	d1e4      	bne.n	800b964 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800b99a:	681a      	ldr	r2, [r3, #0]
 800b99c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b9a0:	601a      	str	r2, [r3, #0]
 800b9a2:	e7df      	b.n	800b964 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800b9a4:	20000078 	.word	0x20000078

0800b9a8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800b9a8:	b538      	push	{r3, r4, r5, lr}
 800b9aa:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9ac:	6842      	ldr	r2, [r0, #4]
 800b9ae:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800b9b2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9b4:	d006      	beq.n	800b9c4 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b9b6:	460a      	mov	r2, r1
 800b9b8:	2101      	movs	r1, #1
 800b9ba:	f7ff ff97 	bl	800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b9be:	b978      	cbnz	r0, 800b9e0 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800b9c0:	2000      	movs	r0, #0
}
 800b9c2:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9c4:	6882      	ldr	r2, [r0, #8]
 800b9c6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b9ca:	d01c      	beq.n	800ba06 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b9cc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b9d0:	d00c      	beq.n	800b9ec <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b9d2:	460a      	mov	r2, r1
 800b9d4:	4620      	mov	r0, r4
 800b9d6:	2180      	movs	r1, #128	; 0x80
 800b9d8:	f7ff ff88 	bl	800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b9dc:	2800      	cmp	r0, #0
 800b9de:	d0ef      	beq.n	800b9c0 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b9e0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800b9e2:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800b9e6:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b9e8:	6563      	str	r3, [r4, #84]	; 0x54
}
 800b9ea:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800b9ec:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b9ee:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800b9f0:	6829      	ldr	r1, [r5, #0]
 800b9f2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b9f6:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b9f8:	2101      	movs	r1, #1
 800b9fa:	f7ff ff77 	bl	800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b9fe:	2800      	cmp	r0, #0
 800ba00:	d1ee      	bne.n	800b9e0 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800ba02:	2000      	movs	r0, #0
 800ba04:	e7dd      	b.n	800b9c2 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800ba06:	6800      	ldr	r0, [r0, #0]
 800ba08:	6802      	ldr	r2, [r0, #0]
 800ba0a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ba0e:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ba10:	460a      	mov	r2, r1
 800ba12:	4620      	mov	r0, r4
 800ba14:	2180      	movs	r1, #128	; 0x80
 800ba16:	f7ff ff69 	bl	800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba1a:	2800      	cmp	r0, #0
 800ba1c:	d0d0      	beq.n	800b9c0 <SPI_EndRxTransaction+0x18>
 800ba1e:	e7df      	b.n	800b9e0 <SPI_EndRxTransaction+0x38>

0800ba20 <HAL_SPI_Init>:
  if (hspi == NULL)
 800ba20:	2800      	cmp	r0, #0
 800ba22:	d05c      	beq.n	800bade <HAL_SPI_Init+0xbe>
{
 800ba24:	b570      	push	{r4, r5, r6, lr}
 800ba26:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ba28:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ba2a:	2800      	cmp	r0, #0
 800ba2c:	d047      	beq.n	800babe <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800ba2e:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800ba30:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ba34:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ba38:	2200      	movs	r2, #0
 800ba3a:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ba3c:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800ba40:	2b00      	cmp	r3, #0
 800ba42:	d042      	beq.n	800baca <HAL_SPI_Init+0xaa>
 800ba44:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800ba46:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ba48:	68a5      	ldr	r5, [r4, #8]
 800ba4a:	69a2      	ldr	r2, [r4, #24]
 800ba4c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ba4e:	2302      	movs	r3, #2
 800ba50:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800ba54:	680b      	ldr	r3, [r1, #0]
 800ba56:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ba5a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ba5c:	6863      	ldr	r3, [r4, #4]
 800ba5e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800ba62:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800ba66:	432b      	orrs	r3, r5
 800ba68:	68e5      	ldr	r5, [r4, #12]
 800ba6a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800ba6e:	432b      	orrs	r3, r5
 800ba70:	6925      	ldr	r5, [r4, #16]
 800ba72:	f005 0502 	and.w	r5, r5, #2
 800ba76:	432b      	orrs	r3, r5
 800ba78:	6965      	ldr	r5, [r4, #20]
 800ba7a:	f005 0501 	and.w	r5, r5, #1
 800ba7e:	432b      	orrs	r3, r5
 800ba80:	69e5      	ldr	r5, [r4, #28]
 800ba82:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800ba86:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800ba8a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800ba8e:	4333      	orrs	r3, r6
 800ba90:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ba92:	0c12      	lsrs	r2, r2, #16
 800ba94:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ba98:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ba9c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800baa0:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800baa4:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800baa6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800baa8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800baaa:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800baac:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800baae:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bab2:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bab4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bab6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bab8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800babc:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800babe:	6863      	ldr	r3, [r4, #4]
 800bac0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bac4:	d0b6      	beq.n	800ba34 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bac6:	61e0      	str	r0, [r4, #28]
 800bac8:	e7b4      	b.n	800ba34 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800baca:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bacc:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bad0:	f7f6 fac6 	bl	8002060 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bad4:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bad8:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800badc:	e7b3      	b.n	800ba46 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bade:	2001      	movs	r0, #1
}
 800bae0:	4770      	bx	lr
 800bae2:	bf00      	nop

0800bae4 <HAL_SPI_Transmit>:
{
 800bae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bae8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800baea:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800baee:	2801      	cmp	r0, #1
{
 800baf0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800baf2:	f000 8085 	beq.w	800bc00 <HAL_SPI_Transmit+0x11c>
 800baf6:	461d      	mov	r5, r3
 800baf8:	2301      	movs	r3, #1
 800bafa:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bafe:	4688      	mov	r8, r1
 800bb00:	4617      	mov	r7, r2
 800bb02:	f7fd fa65 	bl	8008fd0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bb06:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bb0a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bb0c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bb0e:	b2d8      	uxtb	r0, r3
 800bb10:	d009      	beq.n	800bb26 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bb12:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bb14:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bb16:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bb18:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bb1c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bb20:	b002      	add	sp, #8
 800bb22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bb26:	f1b8 0f00 	cmp.w	r8, #0
 800bb2a:	d0f3      	beq.n	800bb14 <HAL_SPI_Transmit+0x30>
 800bb2c:	2f00      	cmp	r7, #0
 800bb2e:	d0f1      	beq.n	800bb14 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb30:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bb32:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bb34:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bb38:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bb3a:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb3c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bb40:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bb44:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bb48:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bb4a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bb4c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bb4e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bb50:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bb52:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb54:	f000 8085 	beq.w	800bc62 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bb58:	6803      	ldr	r3, [r0, #0]
 800bb5a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bb5c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bb5e:	d403      	bmi.n	800bb68 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bb60:	6803      	ldr	r3, [r0, #0]
 800bb62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bb66:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bb68:	68e3      	ldr	r3, [r4, #12]
 800bb6a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bb6e:	d04b      	beq.n	800bc08 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bb70:	6863      	ldr	r3, [r4, #4]
 800bb72:	2b00      	cmp	r3, #0
 800bb74:	f000 8097 	beq.w	800bca6 <HAL_SPI_Transmit+0x1c2>
 800bb78:	2f01      	cmp	r7, #1
 800bb7a:	f000 8094 	beq.w	800bca6 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bb7e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bb80:	b29b      	uxth	r3, r3
 800bb82:	b1ab      	cbz	r3, 800bbb0 <HAL_SPI_Transmit+0xcc>
 800bb84:	1c68      	adds	r0, r5, #1
 800bb86:	f040 8083 	bne.w	800bc90 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bb8a:	6823      	ldr	r3, [r4, #0]
 800bb8c:	689a      	ldr	r2, [r3, #8]
 800bb8e:	0791      	lsls	r1, r2, #30
 800bb90:	f140 8094 	bpl.w	800bcbc <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bb94:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bb96:	7812      	ldrb	r2, [r2, #0]
 800bb98:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bb9a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb9c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bb9e:	3901      	subs	r1, #1
 800bba0:	b289      	uxth	r1, r1
 800bba2:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bba4:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bba6:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bba8:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bbaa:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bbac:	2900      	cmp	r1, #0
 800bbae:	d1ec      	bne.n	800bb8a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bbb0:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bbb2:	4b5b      	ldr	r3, [pc, #364]	; (800bd20 <HAL_SPI_Transmit+0x23c>)
 800bbb4:	4a5b      	ldr	r2, [pc, #364]	; (800bd24 <HAL_SPI_Transmit+0x240>)
 800bbb6:	681b      	ldr	r3, [r3, #0]
 800bbb8:	fba2 2303 	umull	r2, r3, r2, r3
 800bbbc:	0d5b      	lsrs	r3, r3, #21
 800bbbe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bbc2:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bbc6:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bbca:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bbcc:	d107      	bne.n	800bbde <HAL_SPI_Transmit+0xfa>
 800bbce:	e098      	b.n	800bd02 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bbd0:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bbd2:	6822      	ldr	r2, [r4, #0]
      count--;
 800bbd4:	3b01      	subs	r3, #1
 800bbd6:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bbd8:	6893      	ldr	r3, [r2, #8]
 800bbda:	061b      	lsls	r3, r3, #24
 800bbdc:	d502      	bpl.n	800bbe4 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bbde:	9b01      	ldr	r3, [sp, #4]
 800bbe0:	2b00      	cmp	r3, #0
 800bbe2:	d1f5      	bne.n	800bbd0 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bbe4:	68a3      	ldr	r3, [r4, #8]
 800bbe6:	b933      	cbnz	r3, 800bbf6 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bbe8:	6822      	ldr	r2, [r4, #0]
 800bbea:	9300      	str	r3, [sp, #0]
 800bbec:	68d3      	ldr	r3, [r2, #12]
 800bbee:	9300      	str	r3, [sp, #0]
 800bbf0:	6893      	ldr	r3, [r2, #8]
 800bbf2:	9300      	str	r3, [sp, #0]
 800bbf4:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bbf6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bbf8:	3800      	subs	r0, #0
 800bbfa:	bf18      	it	ne
 800bbfc:	2001      	movne	r0, #1
error:
 800bbfe:	e789      	b.n	800bb14 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bc00:	2002      	movs	r0, #2
}
 800bc02:	b002      	add	sp, #8
 800bc04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bc08:	6861      	ldr	r1, [r4, #4]
 800bc0a:	2900      	cmp	r1, #0
 800bc0c:	d176      	bne.n	800bcfc <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bc0e:	4643      	mov	r3, r8
 800bc10:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bc14:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bc16:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bc18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc1a:	3b01      	subs	r3, #1
 800bc1c:	b29b      	uxth	r3, r3
 800bc1e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc22:	b29b      	uxth	r3, r3
 800bc24:	2b00      	cmp	r3, #0
 800bc26:	d0c4      	beq.n	800bbb2 <HAL_SPI_Transmit+0xce>
 800bc28:	1c6b      	adds	r3, r5, #1
 800bc2a:	d15e      	bne.n	800bcea <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc2c:	6883      	ldr	r3, [r0, #8]
 800bc2e:	079f      	lsls	r7, r3, #30
 800bc30:	d50f      	bpl.n	800bc52 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bc32:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc34:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bc38:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bc3a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bc3c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc3e:	3b01      	subs	r3, #1
 800bc40:	b29b      	uxth	r3, r3
 800bc42:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc46:	b29b      	uxth	r3, r3
 800bc48:	2b00      	cmp	r3, #0
 800bc4a:	d0b1      	beq.n	800bbb0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc4c:	6883      	ldr	r3, [r0, #8]
 800bc4e:	079f      	lsls	r7, r3, #30
 800bc50:	d4ef      	bmi.n	800bc32 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bc52:	f7fd f9bd 	bl	8008fd0 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bc56:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc58:	b29b      	uxth	r3, r3
 800bc5a:	2b00      	cmp	r3, #0
 800bc5c:	d0a8      	beq.n	800bbb0 <HAL_SPI_Transmit+0xcc>
 800bc5e:	6820      	ldr	r0, [r4, #0]
 800bc60:	e7e4      	b.n	800bc2c <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800bc62:	6803      	ldr	r3, [r0, #0]
 800bc64:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bc68:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800bc6a:	6803      	ldr	r3, [r0, #0]
 800bc6c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bc70:	6003      	str	r3, [r0, #0]
 800bc72:	e771      	b.n	800bb58 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bc74:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc76:	7812      	ldrb	r2, [r2, #0]
 800bc78:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bc7a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc7c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc7e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc80:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bc82:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc84:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc86:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc8a:	b29b      	uxth	r3, r3
 800bc8c:	2b00      	cmp	r3, #0
 800bc8e:	d08f      	beq.n	800bbb0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc90:	6823      	ldr	r3, [r4, #0]
 800bc92:	689a      	ldr	r2, [r3, #8]
 800bc94:	0792      	lsls	r2, r2, #30
 800bc96:	d4ed      	bmi.n	800bc74 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bc98:	f7fd f99a 	bl	8008fd0 <HAL_GetTick>
 800bc9c:	1b80      	subs	r0, r0, r6
 800bc9e:	42a8      	cmp	r0, r5
 800bca0:	d3f2      	bcc.n	800bc88 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800bca2:	2003      	movs	r0, #3
 800bca4:	e736      	b.n	800bb14 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bca6:	f898 3000 	ldrb.w	r3, [r8]
 800bcaa:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800bcac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bcae:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcb0:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bcb2:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bcb4:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bcb6:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcb8:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bcba:	e760      	b.n	800bb7e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bcbc:	f7fd f988 	bl	8008fd0 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bcc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcc2:	b29b      	uxth	r3, r3
 800bcc4:	2b00      	cmp	r3, #0
 800bcc6:	f47f af60 	bne.w	800bb8a <HAL_SPI_Transmit+0xa6>
 800bcca:	e771      	b.n	800bbb0 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bccc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bcce:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bcd2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bcd4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcd6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bcd8:	3b01      	subs	r3, #1
 800bcda:	b29b      	uxth	r3, r3
 800bcdc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bcde:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bce0:	b29b      	uxth	r3, r3
 800bce2:	2b00      	cmp	r3, #0
 800bce4:	f43f af64 	beq.w	800bbb0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bce8:	6822      	ldr	r2, [r4, #0]
 800bcea:	6893      	ldr	r3, [r2, #8]
 800bcec:	0799      	lsls	r1, r3, #30
 800bcee:	d4ed      	bmi.n	800bccc <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bcf0:	f7fd f96e 	bl	8008fd0 <HAL_GetTick>
 800bcf4:	1b80      	subs	r0, r0, r6
 800bcf6:	42a8      	cmp	r0, r5
 800bcf8:	d3f1      	bcc.n	800bcde <HAL_SPI_Transmit+0x1fa>
 800bcfa:	e7d2      	b.n	800bca2 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bcfc:	2f01      	cmp	r7, #1
 800bcfe:	d18f      	bne.n	800bc20 <HAL_SPI_Transmit+0x13c>
 800bd00:	e785      	b.n	800bc0e <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bd02:	4633      	mov	r3, r6
 800bd04:	462a      	mov	r2, r5
 800bd06:	2180      	movs	r1, #128	; 0x80
 800bd08:	4620      	mov	r0, r4
 800bd0a:	f7ff fdef 	bl	800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bd0e:	2800      	cmp	r0, #0
 800bd10:	f43f af68 	beq.w	800bbe4 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bd14:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bd16:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bd18:	4313      	orrs	r3, r2
 800bd1a:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bd1c:	6562      	str	r2, [r4, #84]	; 0x54
 800bd1e:	e761      	b.n	800bbe4 <HAL_SPI_Transmit+0x100>
 800bd20:	20000078 	.word	0x20000078
 800bd24:	165e9f81 	.word	0x165e9f81

0800bd28 <HAL_SPI_TransmitReceive>:
{
 800bd28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd2c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bd2e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bd32:	2801      	cmp	r0, #1
{
 800bd34:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bd36:	f000 80ac 	beq.w	800be92 <HAL_SPI_TransmitReceive+0x16a>
 800bd3a:	461e      	mov	r6, r3
 800bd3c:	2301      	movs	r3, #1
 800bd3e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bd42:	4690      	mov	r8, r2
 800bd44:	460f      	mov	r7, r1
 800bd46:	f7fd f943 	bl	8008fd0 <HAL_GetTick>
 800bd4a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800bd4c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bd50:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bd52:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bd54:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bd56:	d011      	beq.n	800bd7c <HAL_SPI_TransmitReceive+0x54>
 800bd58:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bd5c:	d009      	beq.n	800bd72 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800bd5e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bd60:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bd62:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bd64:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bd68:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bd6c:	b002      	add	sp, #8
 800bd6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800bd72:	68a1      	ldr	r1, [r4, #8]
 800bd74:	2900      	cmp	r1, #0
 800bd76:	d1f2      	bne.n	800bd5e <HAL_SPI_TransmitReceive+0x36>
 800bd78:	2a04      	cmp	r2, #4
 800bd7a:	d1f0      	bne.n	800bd5e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800bd7c:	2f00      	cmp	r7, #0
 800bd7e:	f000 808c 	beq.w	800be9a <HAL_SPI_TransmitReceive+0x172>
 800bd82:	f1b8 0f00 	cmp.w	r8, #0
 800bd86:	f000 8088 	beq.w	800be9a <HAL_SPI_TransmitReceive+0x172>
 800bd8a:	2e00      	cmp	r6, #0
 800bd8c:	f000 8085 	beq.w	800be9a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bd90:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800bd94:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bd98:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800bd9a:	bf1c      	itt	ne
 800bd9c:	2205      	movne	r2, #5
 800bd9e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bda2:	2200      	movs	r2, #0
 800bda4:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800bda6:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdaa:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800bdac:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800bdae:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdb0:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800bdb2:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdb4:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800bdb6:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800bdb8:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdba:	d403      	bmi.n	800bdc4 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800bdbc:	6811      	ldr	r1, [r2, #0]
 800bdbe:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bdc2:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bdc4:	68e1      	ldr	r1, [r4, #12]
 800bdc6:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800bdca:	f000 809e 	beq.w	800bf0a <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bdce:	2b00      	cmp	r3, #0
 800bdd0:	f000 8091 	beq.w	800bef6 <HAL_SPI_TransmitReceive+0x1ce>
 800bdd4:	2e01      	cmp	r6, #1
 800bdd6:	f000 808e 	beq.w	800bef6 <HAL_SPI_TransmitReceive+0x1ce>
 800bdda:	9b08      	ldr	r3, [sp, #32]
 800bddc:	3301      	adds	r3, #1
        txallowed = 1U;
 800bdde:	f04f 0601 	mov.w	r6, #1
 800bde2:	d028      	beq.n	800be36 <HAL_SPI_TransmitReceive+0x10e>
 800bde4:	e05b      	b.n	800be9e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bde6:	6821      	ldr	r1, [r4, #0]
 800bde8:	688b      	ldr	r3, [r1, #8]
 800bdea:	0798      	lsls	r0, r3, #30
 800bdec:	d50f      	bpl.n	800be0e <HAL_SPI_TransmitReceive+0xe6>
 800bdee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdf0:	b29b      	uxth	r3, r3
 800bdf2:	b163      	cbz	r3, 800be0e <HAL_SPI_TransmitReceive+0xe6>
 800bdf4:	b15e      	cbz	r6, 800be0e <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bdf6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bdf8:	781b      	ldrb	r3, [r3, #0]
 800bdfa:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800bdfc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bdfe:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800be00:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800be02:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800be04:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800be06:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800be08:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800be0a:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800be0c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800be0e:	688a      	ldr	r2, [r1, #8]
 800be10:	f012 0201 	ands.w	r2, r2, #1
 800be14:	d00d      	beq.n	800be32 <HAL_SPI_TransmitReceive+0x10a>
 800be16:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800be18:	b29b      	uxth	r3, r3
 800be1a:	b153      	cbz	r3, 800be32 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800be1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800be1e:	68c9      	ldr	r1, [r1, #12]
 800be20:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800be22:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800be24:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800be26:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800be28:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800be2a:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800be2c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800be2e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800be30:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800be32:	f7fd f8cd 	bl	8008fd0 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800be36:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800be38:	b292      	uxth	r2, r2
 800be3a:	2a00      	cmp	r2, #0
 800be3c:	d1d3      	bne.n	800bde6 <HAL_SPI_TransmitReceive+0xbe>
 800be3e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800be40:	b29b      	uxth	r3, r3
 800be42:	2b00      	cmp	r3, #0
 800be44:	d1cf      	bne.n	800bde6 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800be46:	4b79      	ldr	r3, [pc, #484]	; (800c02c <HAL_SPI_TransmitReceive+0x304>)
 800be48:	4a79      	ldr	r2, [pc, #484]	; (800c030 <HAL_SPI_TransmitReceive+0x308>)
 800be4a:	681b      	ldr	r3, [r3, #0]
 800be4c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800be50:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800be52:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800be56:	0d5b      	lsrs	r3, r3, #21
 800be58:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800be5c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800be60:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800be62:	d107      	bne.n	800be74 <HAL_SPI_TransmitReceive+0x14c>
 800be64:	e0d2      	b.n	800c00c <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800be66:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800be68:	6822      	ldr	r2, [r4, #0]
      count--;
 800be6a:	3b01      	subs	r3, #1
 800be6c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800be6e:	6893      	ldr	r3, [r2, #8]
 800be70:	061b      	lsls	r3, r3, #24
 800be72:	d502      	bpl.n	800be7a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800be74:	9b01      	ldr	r3, [sp, #4]
 800be76:	2b00      	cmp	r3, #0
 800be78:	d1f5      	bne.n	800be66 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800be7a:	68a0      	ldr	r0, [r4, #8]
 800be7c:	2800      	cmp	r0, #0
 800be7e:	f040 8082 	bne.w	800bf86 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800be82:	6823      	ldr	r3, [r4, #0]
 800be84:	9000      	str	r0, [sp, #0]
 800be86:	68da      	ldr	r2, [r3, #12]
 800be88:	9200      	str	r2, [sp, #0]
 800be8a:	689b      	ldr	r3, [r3, #8]
 800be8c:	9300      	str	r3, [sp, #0]
 800be8e:	9b00      	ldr	r3, [sp, #0]
 800be90:	e766      	b.n	800bd60 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800be92:	2002      	movs	r0, #2
}
 800be94:	b002      	add	sp, #8
 800be96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800be9a:	2001      	movs	r0, #1
 800be9c:	e760      	b.n	800bd60 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800be9e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bea0:	b29b      	uxth	r3, r3
 800bea2:	b91b      	cbnz	r3, 800beac <HAL_SPI_TransmitReceive+0x184>
 800bea4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bea6:	b29b      	uxth	r3, r3
 800bea8:	2b00      	cmp	r3, #0
 800beaa:	d0cc      	beq.n	800be46 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800beac:	6822      	ldr	r2, [r4, #0]
 800beae:	6893      	ldr	r3, [r2, #8]
 800beb0:	0799      	lsls	r1, r3, #30
 800beb2:	d50f      	bpl.n	800bed4 <HAL_SPI_TransmitReceive+0x1ac>
 800beb4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800beb6:	b29b      	uxth	r3, r3
 800beb8:	b163      	cbz	r3, 800bed4 <HAL_SPI_TransmitReceive+0x1ac>
 800beba:	b15e      	cbz	r6, 800bed4 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bebc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bebe:	781b      	ldrb	r3, [r3, #0]
 800bec0:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800bec2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bec4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bec6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bec8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800beca:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800becc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bece:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bed0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bed2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bed4:	6893      	ldr	r3, [r2, #8]
 800bed6:	f013 0301 	ands.w	r3, r3, #1
 800beda:	d004      	beq.n	800bee6 <HAL_SPI_TransmitReceive+0x1be>
 800bedc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bede:	b289      	uxth	r1, r1
 800bee0:	2900      	cmp	r1, #0
 800bee2:	f040 8087 	bne.w	800bff4 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bee6:	f7fd f873 	bl	8008fd0 <HAL_GetTick>
 800beea:	9b08      	ldr	r3, [sp, #32]
 800beec:	1b40      	subs	r0, r0, r5
 800beee:	4298      	cmp	r0, r3
 800bef0:	d3d5      	bcc.n	800be9e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bef2:	2003      	movs	r0, #3
 800bef4:	e734      	b.n	800bd60 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bef6:	783b      	ldrb	r3, [r7, #0]
 800bef8:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800befa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800befc:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800befe:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf00:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bf02:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf04:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf06:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bf08:	e767      	b.n	800bdda <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf0a:	2b00      	cmp	r3, #0
 800bf0c:	d13d      	bne.n	800bf8a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bf0e:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bf12:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bf14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bf16:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf18:	3b01      	subs	r3, #1
 800bf1a:	b29b      	uxth	r3, r3
 800bf1c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bf1e:	9b08      	ldr	r3, [sp, #32]
 800bf20:	3301      	adds	r3, #1
{
 800bf22:	f04f 0601 	mov.w	r6, #1
 800bf26:	d025      	beq.n	800bf74 <HAL_SPI_TransmitReceive+0x24c>
 800bf28:	e032      	b.n	800bf90 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf2a:	6823      	ldr	r3, [r4, #0]
 800bf2c:	689a      	ldr	r2, [r3, #8]
 800bf2e:	0792      	lsls	r2, r2, #30
 800bf30:	d50d      	bpl.n	800bf4e <HAL_SPI_TransmitReceive+0x226>
 800bf32:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bf34:	b292      	uxth	r2, r2
 800bf36:	b152      	cbz	r2, 800bf4e <HAL_SPI_TransmitReceive+0x226>
 800bf38:	b14e      	cbz	r6, 800bf4e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bf3a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bf3c:	f831 2b02 	ldrh.w	r2, [r1], #2
 800bf40:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800bf42:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bf44:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf46:	3a01      	subs	r2, #1
 800bf48:	b292      	uxth	r2, r2
        txallowed = 0U;
 800bf4a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bf4c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf4e:	689a      	ldr	r2, [r3, #8]
 800bf50:	f012 0201 	ands.w	r2, r2, #1
 800bf54:	d00c      	beq.n	800bf70 <HAL_SPI_TransmitReceive+0x248>
 800bf56:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bf58:	b289      	uxth	r1, r1
 800bf5a:	b149      	cbz	r1, 800bf70 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bf5c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bf5e:	68db      	ldr	r3, [r3, #12]
 800bf60:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800bf64:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bf66:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bf68:	3b01      	subs	r3, #1
 800bf6a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800bf6c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800bf6e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bf70:	f7fd f82e 	bl	8008fd0 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf76:	b29b      	uxth	r3, r3
 800bf78:	2b00      	cmp	r3, #0
 800bf7a:	d1d6      	bne.n	800bf2a <HAL_SPI_TransmitReceive+0x202>
 800bf7c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf7e:	b29b      	uxth	r3, r3
 800bf80:	2b00      	cmp	r3, #0
 800bf82:	d1d2      	bne.n	800bf2a <HAL_SPI_TransmitReceive+0x202>
 800bf84:	e75f      	b.n	800be46 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800bf86:	2000      	movs	r0, #0
 800bf88:	e6ea      	b.n	800bd60 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf8a:	2e01      	cmp	r6, #1
 800bf8c:	d1c7      	bne.n	800bf1e <HAL_SPI_TransmitReceive+0x1f6>
 800bf8e:	e7be      	b.n	800bf0e <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf92:	b29b      	uxth	r3, r3
 800bf94:	b923      	cbnz	r3, 800bfa0 <HAL_SPI_TransmitReceive+0x278>
 800bf96:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf98:	b29b      	uxth	r3, r3
 800bf9a:	2b00      	cmp	r3, #0
 800bf9c:	f43f af53 	beq.w	800be46 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bfa0:	6822      	ldr	r2, [r4, #0]
 800bfa2:	6893      	ldr	r3, [r2, #8]
 800bfa4:	079f      	lsls	r7, r3, #30
 800bfa6:	d50d      	bpl.n	800bfc4 <HAL_SPI_TransmitReceive+0x29c>
 800bfa8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bfaa:	b29b      	uxth	r3, r3
 800bfac:	b153      	cbz	r3, 800bfc4 <HAL_SPI_TransmitReceive+0x29c>
 800bfae:	b14e      	cbz	r6, 800bfc4 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfb0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bfb2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bfb6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bfb8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfba:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bfbc:	3b01      	subs	r3, #1
 800bfbe:	b29b      	uxth	r3, r3
 800bfc0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bfc2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bfc4:	6893      	ldr	r3, [r2, #8]
 800bfc6:	f013 0301 	ands.w	r3, r3, #1
 800bfca:	d00c      	beq.n	800bfe6 <HAL_SPI_TransmitReceive+0x2be>
 800bfcc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bfce:	b289      	uxth	r1, r1
 800bfd0:	b149      	cbz	r1, 800bfe6 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bfd2:	68d1      	ldr	r1, [r2, #12]
 800bfd4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bfd6:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800bfda:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800bfdc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bfde:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bfe0:	3b01      	subs	r3, #1
 800bfe2:	b29b      	uxth	r3, r3
 800bfe4:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bfe6:	f7fc fff3 	bl	8008fd0 <HAL_GetTick>
 800bfea:	9b08      	ldr	r3, [sp, #32]
 800bfec:	1b40      	subs	r0, r0, r5
 800bfee:	4298      	cmp	r0, r3
 800bff0:	d3ce      	bcc.n	800bf90 <HAL_SPI_TransmitReceive+0x268>
 800bff2:	e77e      	b.n	800bef2 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bff4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bff6:	68d2      	ldr	r2, [r2, #12]
 800bff8:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800bffa:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800bffc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bffe:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c000:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c002:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c004:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c006:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c008:	461e      	mov	r6, r3
 800c00a:	e76c      	b.n	800bee6 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c00c:	9a08      	ldr	r2, [sp, #32]
 800c00e:	462b      	mov	r3, r5
 800c010:	2180      	movs	r1, #128	; 0x80
 800c012:	4620      	mov	r0, r4
 800c014:	f7ff fc6a 	bl	800b8ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c018:	2800      	cmp	r0, #0
 800c01a:	f43f af2e 	beq.w	800be7a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c01e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c020:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c022:	4313      	orrs	r3, r2
 800c024:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c026:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c028:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c02a:	e699      	b.n	800bd60 <HAL_SPI_TransmitReceive+0x38>
 800c02c:	20000078 	.word	0x20000078
 800c030:	165e9f81 	.word	0x165e9f81

0800c034 <HAL_SPI_Receive>:
{
 800c034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c038:	6846      	ldr	r6, [r0, #4]
 800c03a:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c03e:	b082      	sub	sp, #8
 800c040:	4604      	mov	r4, r0
 800c042:	4690      	mov	r8, r2
 800c044:	461d      	mov	r5, r3
 800c046:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c048:	d06e      	beq.n	800c128 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c04a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c04e:	2b01      	cmp	r3, #1
 800c050:	d076      	beq.n	800c140 <HAL_SPI_Receive+0x10c>
 800c052:	2301      	movs	r3, #1
 800c054:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c058:	f7fc ffba 	bl	8008fd0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c05c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c060:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c064:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c066:	fa5f f08c 	uxtb.w	r0, ip
 800c06a:	d009      	beq.n	800c080 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c06c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c06e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c070:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c072:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c076:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c07a:	b002      	add	sp, #8
 800c07c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c080:	2f00      	cmp	r7, #0
 800c082:	d0f4      	beq.n	800c06e <HAL_SPI_Receive+0x3a>
 800c084:	f1b8 0f00 	cmp.w	r8, #0
 800c088:	d0f1      	beq.n	800c06e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c08a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c08c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c08e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c092:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c094:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c098:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c09c:	f04f 0104 	mov.w	r1, #4
 800c0a0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c0a4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c0a8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c0aa:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c0ac:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c0ae:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c0b2:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c0b4:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c0b6:	d107      	bne.n	800c0c8 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c0b8:	6811      	ldr	r1, [r2, #0]
 800c0ba:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c0be:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c0c0:	6811      	ldr	r1, [r2, #0]
 800c0c2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c0c6:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c0c8:	6811      	ldr	r1, [r2, #0]
 800c0ca:	0648      	lsls	r0, r1, #25
 800c0cc:	d403      	bmi.n	800c0d6 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c0ce:	6811      	ldr	r1, [r2, #0]
 800c0d0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c0d4:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c0d6:	68e1      	ldr	r1, [r4, #12]
 800c0d8:	2900      	cmp	r1, #0
 800c0da:	d054      	beq.n	800c186 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c0dc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c0de:	b289      	uxth	r1, r1
 800c0e0:	b1a9      	cbz	r1, 800c10e <HAL_SPI_Receive+0xda>
 800c0e2:	1c69      	adds	r1, r5, #1
 800c0e4:	d13e      	bne.n	800c164 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c0e6:	6893      	ldr	r3, [r2, #8]
 800c0e8:	07db      	lsls	r3, r3, #31
 800c0ea:	d544      	bpl.n	800c176 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c0ec:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c0ee:	68d1      	ldr	r1, [r2, #12]
 800c0f0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c0f4:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c0f8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0fa:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c0fe:	fa1f fc8c 	uxth.w	ip, ip
 800c102:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c106:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c108:	b29b      	uxth	r3, r3
 800c10a:	2b00      	cmp	r3, #0
 800c10c:	d1eb      	bne.n	800c0e6 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c10e:	4632      	mov	r2, r6
 800c110:	4629      	mov	r1, r5
 800c112:	4620      	mov	r0, r4
 800c114:	f7ff fc48 	bl	800b9a8 <SPI_EndRxTransaction>
 800c118:	b108      	cbz	r0, 800c11e <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c11a:	2320      	movs	r3, #32
 800c11c:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c11e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c120:	3800      	subs	r0, #0
 800c122:	bf18      	it	ne
 800c124:	2001      	movne	r0, #1
error :
 800c126:	e7a2      	b.n	800c06e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c128:	6883      	ldr	r3, [r0, #8]
 800c12a:	2b00      	cmp	r3, #0
 800c12c:	d18d      	bne.n	800c04a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c12e:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c130:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c132:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c134:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c138:	460a      	mov	r2, r1
 800c13a:	f7ff fdf5 	bl	800bd28 <HAL_SPI_TransmitReceive>
 800c13e:	e79c      	b.n	800c07a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c140:	2002      	movs	r0, #2
}
 800c142:	b002      	add	sp, #8
 800c144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c148:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c14a:	68db      	ldr	r3, [r3, #12]
 800c14c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c150:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c152:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c154:	3b01      	subs	r3, #1
 800c156:	b29b      	uxth	r3, r3
 800c158:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c15a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c15c:	b29b      	uxth	r3, r3
 800c15e:	2b00      	cmp	r3, #0
 800c160:	d0d5      	beq.n	800c10e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c162:	6823      	ldr	r3, [r4, #0]
 800c164:	689a      	ldr	r2, [r3, #8]
 800c166:	07d2      	lsls	r2, r2, #31
 800c168:	d4ee      	bmi.n	800c148 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c16a:	f7fc ff31 	bl	8008fd0 <HAL_GetTick>
 800c16e:	1b80      	subs	r0, r0, r6
 800c170:	42a8      	cmp	r0, r5
 800c172:	d243      	bcs.n	800c1fc <HAL_SPI_Receive+0x1c8>
 800c174:	e7f1      	b.n	800c15a <HAL_SPI_Receive+0x126>
 800c176:	f7fc ff2b 	bl	8008fd0 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c17a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c17c:	b29b      	uxth	r3, r3
 800c17e:	2b00      	cmp	r3, #0
 800c180:	d0c5      	beq.n	800c10e <HAL_SPI_Receive+0xda>
 800c182:	6822      	ldr	r2, [r4, #0]
 800c184:	e7af      	b.n	800c0e6 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c186:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c188:	b292      	uxth	r2, r2
 800c18a:	2a00      	cmp	r2, #0
 800c18c:	d0bf      	beq.n	800c10e <HAL_SPI_Receive+0xda>
 800c18e:	1c6f      	adds	r7, r5, #1
 800c190:	d013      	beq.n	800c1ba <HAL_SPI_Receive+0x186>
 800c192:	e02b      	b.n	800c1ec <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c194:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c196:	7b1b      	ldrb	r3, [r3, #12]
 800c198:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c19a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c19e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1a0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c1a4:	fa1f fc8c 	uxth.w	ip, ip
 800c1a8:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1ac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1ae:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c1b0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1b2:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d0aa      	beq.n	800c10e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c1b8:	6823      	ldr	r3, [r4, #0]
 800c1ba:	689a      	ldr	r2, [r3, #8]
 800c1bc:	07d0      	lsls	r0, r2, #31
 800c1be:	d4e9      	bmi.n	800c194 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1c0:	f7fc ff06 	bl	8008fd0 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c1c4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1c6:	b29b      	uxth	r3, r3
 800c1c8:	2b00      	cmp	r3, #0
 800c1ca:	d1f5      	bne.n	800c1b8 <HAL_SPI_Receive+0x184>
 800c1cc:	e79f      	b.n	800c10e <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c1ce:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c1d0:	7b1b      	ldrb	r3, [r3, #12]
 800c1d2:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c1d4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1d6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1d8:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1da:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c1dc:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1de:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1e0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1e2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1e4:	b29b      	uxth	r3, r3
 800c1e6:	2b00      	cmp	r3, #0
 800c1e8:	d091      	beq.n	800c10e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c1ea:	6823      	ldr	r3, [r4, #0]
 800c1ec:	689a      	ldr	r2, [r3, #8]
 800c1ee:	07d1      	lsls	r1, r2, #31
 800c1f0:	d4ed      	bmi.n	800c1ce <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1f2:	f7fc feed 	bl	8008fd0 <HAL_GetTick>
 800c1f6:	1b80      	subs	r0, r0, r6
 800c1f8:	42a8      	cmp	r0, r5
 800c1fa:	d3f2      	bcc.n	800c1e2 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c1fc:	2003      	movs	r0, #3
 800c1fe:	e736      	b.n	800c06e <HAL_SPI_Receive+0x3a>

0800c200 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c200:	2800      	cmp	r0, #0
 800c202:	f000 8087 	beq.w	800c314 <HAL_TIM_Base_Init+0x114>
{
 800c206:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c208:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c20c:	4604      	mov	r4, r0
 800c20e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c212:	2b00      	cmp	r3, #0
 800c214:	d079      	beq.n	800c30a <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c216:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c218:	493f      	ldr	r1, [pc, #252]	; (800c318 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c21a:	2302      	movs	r3, #2
 800c21c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c220:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c222:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c224:	d05d      	beq.n	800c2e2 <HAL_TIM_Base_Init+0xe2>
 800c226:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c22a:	d031      	beq.n	800c290 <HAL_TIM_Base_Init+0x90>
 800c22c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c230:	428a      	cmp	r2, r1
 800c232:	d02d      	beq.n	800c290 <HAL_TIM_Base_Init+0x90>
 800c234:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c238:	428a      	cmp	r2, r1
 800c23a:	d029      	beq.n	800c290 <HAL_TIM_Base_Init+0x90>
 800c23c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c240:	428a      	cmp	r2, r1
 800c242:	d025      	beq.n	800c290 <HAL_TIM_Base_Init+0x90>
 800c244:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c248:	428a      	cmp	r2, r1
 800c24a:	d04a      	beq.n	800c2e2 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c24c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c250:	428a      	cmp	r2, r1
 800c252:	d021      	beq.n	800c298 <HAL_TIM_Base_Init+0x98>
 800c254:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c258:	428a      	cmp	r2, r1
 800c25a:	d01d      	beq.n	800c298 <HAL_TIM_Base_Init+0x98>
 800c25c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c260:	428a      	cmp	r2, r1
 800c262:	d019      	beq.n	800c298 <HAL_TIM_Base_Init+0x98>
 800c264:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c268:	428a      	cmp	r2, r1
 800c26a:	d015      	beq.n	800c298 <HAL_TIM_Base_Init+0x98>
 800c26c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c270:	428a      	cmp	r2, r1
 800c272:	d011      	beq.n	800c298 <HAL_TIM_Base_Init+0x98>
 800c274:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c278:	428a      	cmp	r2, r1
 800c27a:	d00d      	beq.n	800c298 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c27c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c27e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c280:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c284:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c286:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c288:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c28a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c28c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c28e:	e010      	b.n	800c2b2 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c290:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c292:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c296:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c298:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c29a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c29c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c2a0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c2a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c2a6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c2a8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c2aa:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c2ac:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c2ae:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c2b0:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c2b2:	2301      	movs	r3, #1
 800c2b4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c2b6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c2ba:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c2be:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c2c2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c2c6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c2ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c2ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c2d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c2d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c2da:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c2de:	2000      	movs	r0, #0
}
 800c2e0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c2e2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c2e4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c2e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c2ea:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c2ec:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c2f0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c2f2:	69a1      	ldr	r1, [r4, #24]
 800c2f4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c2f8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c2fa:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c2fc:	68e3      	ldr	r3, [r4, #12]
 800c2fe:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c300:	6863      	ldr	r3, [r4, #4]
 800c302:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c304:	6963      	ldr	r3, [r4, #20]
 800c306:	6313      	str	r3, [r2, #48]	; 0x30
 800c308:	e7d3      	b.n	800c2b2 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c30a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c30e:	f7f5 fee3 	bl	80020d8 <HAL_TIM_Base_MspInit>
 800c312:	e780      	b.n	800c216 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c314:	2001      	movs	r0, #1
}
 800c316:	4770      	bx	lr
 800c318:	40010000 	.word	0x40010000

0800c31c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c31c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c320:	2b01      	cmp	r3, #1
 800c322:	d12f      	bne.n	800c384 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c324:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c326:	4919      	ldr	r1, [pc, #100]	; (800c38c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c328:	2202      	movs	r2, #2
 800c32a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c32e:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c330:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c332:	f042 0201 	orr.w	r2, r2, #1
 800c336:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c338:	d019      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c33a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c33e:	d016      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c340:	4a13      	ldr	r2, [pc, #76]	; (800c390 <HAL_TIM_Base_Start_IT+0x74>)
 800c342:	4293      	cmp	r3, r2
 800c344:	d013      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c346:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c34a:	4293      	cmp	r3, r2
 800c34c:	d00f      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c34e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c352:	4293      	cmp	r3, r2
 800c354:	d00b      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c356:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c35a:	4293      	cmp	r3, r2
 800c35c:	d007      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c35e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c362:	4293      	cmp	r3, r2
 800c364:	d003      	beq.n	800c36e <HAL_TIM_Base_Start_IT+0x52>
 800c366:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c36a:	4293      	cmp	r3, r2
 800c36c:	d104      	bne.n	800c378 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c36e:	689a      	ldr	r2, [r3, #8]
 800c370:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c374:	2a06      	cmp	r2, #6
 800c376:	d007      	beq.n	800c388 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c378:	681a      	ldr	r2, [r3, #0]
 800c37a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c37e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c380:	601a      	str	r2, [r3, #0]
 800c382:	4770      	bx	lr
    return HAL_ERROR;
 800c384:	2001      	movs	r0, #1
 800c386:	4770      	bx	lr
  return HAL_OK;
 800c388:	2000      	movs	r0, #0
}
 800c38a:	4770      	bx	lr
 800c38c:	40010000 	.word	0x40010000
 800c390:	40000400 	.word	0x40000400

0800c394 <HAL_TIM_OC_DelayElapsedCallback>:
 800c394:	4770      	bx	lr
 800c396:	bf00      	nop

0800c398 <HAL_TIM_IC_CaptureCallback>:
 800c398:	4770      	bx	lr
 800c39a:	bf00      	nop

0800c39c <HAL_TIM_PWM_PulseFinishedCallback>:
 800c39c:	4770      	bx	lr
 800c39e:	bf00      	nop

0800c3a0 <HAL_TIM_TriggerCallback>:
 800c3a0:	4770      	bx	lr
 800c3a2:	bf00      	nop

0800c3a4 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c3a4:	6803      	ldr	r3, [r0, #0]
 800c3a6:	691a      	ldr	r2, [r3, #16]
 800c3a8:	0791      	lsls	r1, r2, #30
{
 800c3aa:	b510      	push	{r4, lr}
 800c3ac:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c3ae:	d502      	bpl.n	800c3b6 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c3b0:	68da      	ldr	r2, [r3, #12]
 800c3b2:	0792      	lsls	r2, r2, #30
 800c3b4:	d45f      	bmi.n	800c476 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c3b6:	691a      	ldr	r2, [r3, #16]
 800c3b8:	0750      	lsls	r0, r2, #29
 800c3ba:	d502      	bpl.n	800c3c2 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c3bc:	68da      	ldr	r2, [r3, #12]
 800c3be:	0751      	lsls	r1, r2, #29
 800c3c0:	d446      	bmi.n	800c450 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c3c2:	691a      	ldr	r2, [r3, #16]
 800c3c4:	0712      	lsls	r2, r2, #28
 800c3c6:	d502      	bpl.n	800c3ce <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c3c8:	68da      	ldr	r2, [r3, #12]
 800c3ca:	0710      	lsls	r0, r2, #28
 800c3cc:	d42e      	bmi.n	800c42c <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c3ce:	691a      	ldr	r2, [r3, #16]
 800c3d0:	06d2      	lsls	r2, r2, #27
 800c3d2:	d502      	bpl.n	800c3da <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c3d4:	68da      	ldr	r2, [r3, #12]
 800c3d6:	06d0      	lsls	r0, r2, #27
 800c3d8:	d418      	bmi.n	800c40c <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c3da:	691a      	ldr	r2, [r3, #16]
 800c3dc:	07d1      	lsls	r1, r2, #31
 800c3de:	d502      	bpl.n	800c3e6 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c3e0:	68da      	ldr	r2, [r3, #12]
 800c3e2:	07d2      	lsls	r2, r2, #31
 800c3e4:	d45d      	bmi.n	800c4a2 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c3e6:	691a      	ldr	r2, [r3, #16]
 800c3e8:	0610      	lsls	r0, r2, #24
 800c3ea:	d502      	bpl.n	800c3f2 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c3ec:	68da      	ldr	r2, [r3, #12]
 800c3ee:	0611      	lsls	r1, r2, #24
 800c3f0:	d45f      	bmi.n	800c4b2 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c3f2:	691a      	ldr	r2, [r3, #16]
 800c3f4:	0652      	lsls	r2, r2, #25
 800c3f6:	d502      	bpl.n	800c3fe <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c3f8:	68da      	ldr	r2, [r3, #12]
 800c3fa:	0650      	lsls	r0, r2, #25
 800c3fc:	d461      	bmi.n	800c4c2 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c3fe:	691a      	ldr	r2, [r3, #16]
 800c400:	0691      	lsls	r1, r2, #26
 800c402:	d502      	bpl.n	800c40a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c404:	68da      	ldr	r2, [r3, #12]
 800c406:	0692      	lsls	r2, r2, #26
 800c408:	d443      	bmi.n	800c492 <HAL_TIM_IRQHandler+0xee>
}
 800c40a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c40c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c410:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c412:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c414:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c416:	69db      	ldr	r3, [r3, #28]
 800c418:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c41c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c41e:	d064      	beq.n	800c4ea <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c420:	f7ff ffba 	bl	800c398 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c424:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c426:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c428:	7722      	strb	r2, [r4, #28]
 800c42a:	e7d6      	b.n	800c3da <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c42c:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c430:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c432:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c434:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c436:	69db      	ldr	r3, [r3, #28]
 800c438:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c43a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c43c:	d152      	bne.n	800c4e4 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c43e:	f7ff ffa9 	bl	800c394 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c442:	4620      	mov	r0, r4
 800c444:	f7ff ffaa 	bl	800c39c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c448:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c44a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c44c:	7722      	strb	r2, [r4, #28]
 800c44e:	e7be      	b.n	800c3ce <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c450:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c454:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c456:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c458:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c45a:	699b      	ldr	r3, [r3, #24]
 800c45c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c460:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c462:	d13c      	bne.n	800c4de <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c464:	f7ff ff96 	bl	800c394 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c468:	4620      	mov	r0, r4
 800c46a:	f7ff ff97 	bl	800c39c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c46e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c470:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c472:	7722      	strb	r2, [r4, #28]
 800c474:	e7a5      	b.n	800c3c2 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c476:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c47a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c47c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c47e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c480:	699b      	ldr	r3, [r3, #24]
 800c482:	079b      	lsls	r3, r3, #30
 800c484:	d025      	beq.n	800c4d2 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c486:	f7ff ff87 	bl	800c398 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c48a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c48c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c48e:	7722      	strb	r2, [r4, #28]
 800c490:	e791      	b.n	800c3b6 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c492:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c496:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c498:	611a      	str	r2, [r3, #16]
}
 800c49a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c49e:	f000 b82b 	b.w	800c4f8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c4a2:	f06f 0201 	mvn.w	r2, #1
 800c4a6:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c4a8:	4620      	mov	r0, r4
 800c4aa:	f7f5 faf5 	bl	8001a98 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c4ae:	6823      	ldr	r3, [r4, #0]
 800c4b0:	e799      	b.n	800c3e6 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c4b2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c4b6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c4b8:	4620      	mov	r0, r4
 800c4ba:	f000 f81f 	bl	800c4fc <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c4be:	6823      	ldr	r3, [r4, #0]
 800c4c0:	e797      	b.n	800c3f2 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c4c2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c4c6:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c4c8:	4620      	mov	r0, r4
 800c4ca:	f7ff ff69 	bl	800c3a0 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c4ce:	6823      	ldr	r3, [r4, #0]
 800c4d0:	e795      	b.n	800c3fe <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c4d2:	f7ff ff5f 	bl	800c394 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c4d6:	4620      	mov	r0, r4
 800c4d8:	f7ff ff60 	bl	800c39c <HAL_TIM_PWM_PulseFinishedCallback>
 800c4dc:	e7d5      	b.n	800c48a <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c4de:	f7ff ff5b 	bl	800c398 <HAL_TIM_IC_CaptureCallback>
 800c4e2:	e7c4      	b.n	800c46e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c4e4:	f7ff ff58 	bl	800c398 <HAL_TIM_IC_CaptureCallback>
 800c4e8:	e7ae      	b.n	800c448 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c4ea:	f7ff ff53 	bl	800c394 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c4ee:	4620      	mov	r0, r4
 800c4f0:	f7ff ff54 	bl	800c39c <HAL_TIM_PWM_PulseFinishedCallback>
 800c4f4:	e796      	b.n	800c424 <HAL_TIM_IRQHandler+0x80>
 800c4f6:	bf00      	nop

0800c4f8 <HAL_TIMEx_CommutCallback>:
 800c4f8:	4770      	bx	lr
 800c4fa:	bf00      	nop

0800c4fc <HAL_TIMEx_BreakCallback>:
 800c4fc:	4770      	bx	lr
 800c4fe:	bf00      	nop

0800c500 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c500:	680b      	ldr	r3, [r1, #0]
{
 800c502:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c504:	b9d3      	cbnz	r3, 800c53c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c506:	6803      	ldr	r3, [r0, #0]
 800c508:	684c      	ldr	r4, [r1, #4]
 800c50a:	688a      	ldr	r2, [r1, #8]
 800c50c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c510:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c514:	4323      	orrs	r3, r4
 800c516:	4313      	orrs	r3, r2
 800c518:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c51c:	4323      	orrs	r3, r4
 800c51e:	4313      	orrs	r3, r2
 800c520:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c524:	4323      	orrs	r3, r4
 800c526:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c52a:	4313      	orrs	r3, r2
 800c52c:	432b      	orrs	r3, r5
 800c52e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c530:	4323      	orrs	r3, r4
 800c532:	4313      	orrs	r3, r2
 800c534:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c536:	bc30      	pop	{r4, r5}
 800c538:	2000      	movs	r0, #0
 800c53a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c53c:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c540:	6803      	ldr	r3, [r0, #0]
 800c542:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c546:	4323      	orrs	r3, r4
 800c548:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c54a:	4313      	orrs	r3, r2
 800c54c:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c54e:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c550:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c552:	6843      	ldr	r3, [r0, #4]
 800c554:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c558:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c55c:	4313      	orrs	r3, r2
 800c55e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c562:	4323      	orrs	r3, r4
 800c564:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c568:	4313      	orrs	r3, r2
 800c56a:	432b      	orrs	r3, r5
 800c56c:	698a      	ldr	r2, [r1, #24]
 800c56e:	4323      	orrs	r3, r4
 800c570:	4313      	orrs	r3, r2
 800c572:	6043      	str	r3, [r0, #4]
}
 800c574:	bc30      	pop	{r4, r5}
 800c576:	2000      	movs	r0, #0
 800c578:	4770      	bx	lr
 800c57a:	bf00      	nop

0800c57c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c57c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c57e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c580:	bb02      	cbnz	r2, 800c5c4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c582:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c586:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c58a:	3c01      	subs	r4, #1
 800c58c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c590:	3a01      	subs	r2, #1
 800c592:	4313      	orrs	r3, r2
 800c594:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c598:	3c01      	subs	r4, #1
 800c59a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c59e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c5a2:	3a01      	subs	r2, #1
 800c5a4:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c5a8:	698a      	ldr	r2, [r1, #24]
 800c5aa:	1e69      	subs	r1, r5, #1
 800c5ac:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c5b0:	1e61      	subs	r1, r4, #1
 800c5b2:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c5b6:	3a01      	subs	r2, #1
 800c5b8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c5bc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c5be:	bc30      	pop	{r4, r5}
 800c5c0:	2000      	movs	r0, #0
 800c5c2:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c5c4:	68cc      	ldr	r4, [r1, #12]
 800c5c6:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c5c8:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c5ca:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c5ce:	3c01      	subs	r4, #1
 800c5d0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c5d4:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c5d8:	3a01      	subs	r2, #1
 800c5da:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c5de:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c5e0:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c5e4:	68c3      	ldr	r3, [r0, #12]
 800c5e6:	3c01      	subs	r4, #1
 800c5e8:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c5ec:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c5f0:	3a01      	subs	r2, #1
 800c5f2:	690c      	ldr	r4, [r1, #16]
 800c5f4:	4313      	orrs	r3, r2
 800c5f6:	698a      	ldr	r2, [r1, #24]
 800c5f8:	1e69      	subs	r1, r5, #1
 800c5fa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c5fe:	1e61      	subs	r1, r4, #1
 800c600:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c604:	3a01      	subs	r2, #1
 800c606:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c60a:	60c3      	str	r3, [r0, #12]
}
 800c60c:	bc30      	pop	{r4, r5}
 800c60e:	2000      	movs	r0, #0
 800c610:	4770      	bx	lr
 800c612:	bf00      	nop

0800c614 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c614:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c616:	680b      	ldr	r3, [r1, #0]
{
 800c618:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c61a:	684a      	ldr	r2, [r1, #4]
{
 800c61c:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c61e:	4313      	orrs	r3, r2
 800c620:	6900      	ldr	r0, [r0, #16]
 800c622:	68ca      	ldr	r2, [r1, #12]
 800c624:	0d80      	lsrs	r0, r0, #22
 800c626:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c62a:	688a      	ldr	r2, [r1, #8]
 800c62c:	0580      	lsls	r0, r0, #22
 800c62e:	4303      	orrs	r3, r0
 800c630:	3a01      	subs	r2, #1
 800c632:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c636:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c638:	f7fc fcca 	bl	8008fd0 <HAL_GetTick>
 800c63c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c63e:	1c6b      	adds	r3, r5, #1
 800c640:	d105      	bne.n	800c64e <FMC_SDRAM_SendCommand+0x3a>
 800c642:	69a3      	ldr	r3, [r4, #24]
 800c644:	f013 0320 	ands.w	r3, r3, #32
 800c648:	d1fb      	bne.n	800c642 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c64a:	4618      	mov	r0, r3
}
 800c64c:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c64e:	69a3      	ldr	r3, [r4, #24]
 800c650:	f013 0320 	ands.w	r3, r3, #32
 800c654:	d0f9      	beq.n	800c64a <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c656:	b125      	cbz	r5, 800c662 <FMC_SDRAM_SendCommand+0x4e>
 800c658:	f7fc fcba 	bl	8008fd0 <HAL_GetTick>
 800c65c:	1b80      	subs	r0, r0, r6
 800c65e:	42a8      	cmp	r0, r5
 800c660:	d9ed      	bls.n	800c63e <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c662:	2003      	movs	r0, #3
}
 800c664:	bd70      	pop	{r4, r5, r6, pc}
 800c666:	bf00      	nop

0800c668 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c668:	6943      	ldr	r3, [r0, #20]
 800c66a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c66e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c670:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800c674:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800c678:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c67a:	6151      	str	r1, [r2, #20]
}
 800c67c:	4770      	bx	lr
 800c67e:	bf00      	nop

0800c680 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800c680:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800c682:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c686:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800c688:	f002 fb04 	bl	800ec94 <xTaskGetSchedulerState>
 800c68c:	2801      	cmp	r0, #1
 800c68e:	d100      	bne.n	800c692 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800c690:	bd08      	pop	{r3, pc}
 800c692:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800c696:	f000 bc45 	b.w	800cf24 <xPortSysTickHandler>
 800c69a:	bf00      	nop

0800c69c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800c69c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800c6a0:	b92b      	cbnz	r3, 800c6ae <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800c6a2:	4b06      	ldr	r3, [pc, #24]	; (800c6bc <osKernelInitialize+0x20>)
 800c6a4:	6818      	ldr	r0, [r3, #0]
 800c6a6:	b928      	cbnz	r0, 800c6b4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800c6a8:	2201      	movs	r2, #1
 800c6aa:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800c6ac:	4770      	bx	lr
    stat = osErrorISR;
 800c6ae:	f06f 0005 	mvn.w	r0, #5
 800c6b2:	4770      	bx	lr
    } else {
      stat = osError;
 800c6b4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800c6b8:	4770      	bx	lr
 800c6ba:	bf00      	nop
 800c6bc:	20002258 	.word	0x20002258

0800c6c0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800c6c0:	b510      	push	{r4, lr}
 800c6c2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c6c6:	b974      	cbnz	r4, 800c6e6 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800c6c8:	4b08      	ldr	r3, [pc, #32]	; (800c6ec <osKernelStart+0x2c>)
 800c6ca:	681a      	ldr	r2, [r3, #0]
 800c6cc:	2a01      	cmp	r2, #1
 800c6ce:	d107      	bne.n	800c6e0 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c6d0:	4907      	ldr	r1, [pc, #28]	; (800c6f0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800c6d2:	2202      	movs	r2, #2
 800c6d4:	77cc      	strb	r4, [r1, #31]
 800c6d6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800c6d8:	f002 f8b6 	bl	800e848 <vTaskStartScheduler>
      stat = osOK;
 800c6dc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800c6de:	bd10      	pop	{r4, pc}
      stat = osError;
 800c6e0:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c6e4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c6e6:	f06f 0005 	mvn.w	r0, #5
}
 800c6ea:	bd10      	pop	{r4, pc}
 800c6ec:	20002258 	.word	0x20002258
 800c6f0:	e000ed00 	.word	0xe000ed00

0800c6f4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c6f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6f6:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800c6f8:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c6fa:	4615      	mov	r5, r2
  hTask = NULL;
 800c6fc:	9405      	str	r4, [sp, #20]
 800c6fe:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800c702:	b9ea      	cbnz	r2, 800c740 <osThreadNew+0x4c>
 800c704:	b350      	cbz	r0, 800c75c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800c706:	b1f5      	cbz	r5, 800c746 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800c708:	69ab      	ldr	r3, [r5, #24]
 800c70a:	bb5b      	cbnz	r3, 800c764 <osThreadNew+0x70>
 800c70c:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c70e:	686a      	ldr	r2, [r5, #4]
 800c710:	07d2      	lsls	r2, r2, #31
 800c712:	d423      	bmi.n	800c75c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800c714:	696e      	ldr	r6, [r5, #20]
 800c716:	b34e      	cbz	r6, 800c76c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800c718:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c71c:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800c71e:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c720:	b34c      	cbz	r4, 800c776 <osThreadNew+0x82>
 800c722:	68ea      	ldr	r2, [r5, #12]
 800c724:	2aab      	cmp	r2, #171	; 0xab
 800c726:	d919      	bls.n	800c75c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c728:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c72a:	b1bd      	cbz	r5, 800c75c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c72c:	b1b6      	cbz	r6, 800c75c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800c72e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c732:	9300      	str	r3, [sp, #0]
 800c734:	4662      	mov	r2, ip
 800c736:	460b      	mov	r3, r1
 800c738:	4639      	mov	r1, r7
 800c73a:	f001 ffc3 	bl	800e6c4 <xTaskCreateStatic>
 800c73e:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800c740:	4620      	mov	r0, r4
 800c742:	b007      	add	sp, #28
 800c744:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c746:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800c748:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c74a:	ac05      	add	r4, sp, #20
 800c74c:	9300      	str	r3, [sp, #0]
 800c74e:	9401      	str	r4, [sp, #4]
 800c750:	460b      	mov	r3, r1
 800c752:	4629      	mov	r1, r5
 800c754:	f001 fff0 	bl	800e738 <xTaskCreate>
 800c758:	2801      	cmp	r0, #1
 800c75a:	d00a      	beq.n	800c772 <osThreadNew+0x7e>
        return (NULL);
 800c75c:	2400      	movs	r4, #0
}
 800c75e:	4620      	mov	r0, r4
 800c760:	b007      	add	sp, #28
 800c762:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c764:	1e5c      	subs	r4, r3, #1
 800c766:	2c37      	cmp	r4, #55	; 0x37
 800c768:	d9d1      	bls.n	800c70e <osThreadNew+0x1a>
 800c76a:	e7f7      	b.n	800c75c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800c76c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800c770:	e7d4      	b.n	800c71c <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800c772:	9c05      	ldr	r4, [sp, #20]
 800c774:	e7e4      	b.n	800c740 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800c776:	68ee      	ldr	r6, [r5, #12]
 800c778:	2e00      	cmp	r6, #0
 800c77a:	d1e1      	bne.n	800c740 <osThreadNew+0x4c>
 800c77c:	692d      	ldr	r5, [r5, #16]
 800c77e:	2d00      	cmp	r5, #0
 800c780:	d1de      	bne.n	800c740 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c782:	fa1f f28c 	uxth.w	r2, ip
 800c786:	463d      	mov	r5, r7
 800c788:	e7df      	b.n	800c74a <osThreadNew+0x56>
 800c78a:	bf00      	nop

0800c78c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800c78c:	b510      	push	{r4, lr}
 800c78e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c792:	b92c      	cbnz	r4, 800c7a0 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800c794:	b900      	cbnz	r0, 800c798 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800c796:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800c798:	f002 f800 	bl	800e79c <vTaskDelay>
    stat = osOK;
 800c79c:	4620      	mov	r0, r4
}
 800c79e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c7a0:	f06f 0005 	mvn.w	r0, #5
}
 800c7a4:	bd10      	pop	{r4, pc}
 800c7a6:	bf00      	nop

0800c7a8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800c7a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7aa:	b083      	sub	sp, #12
 800c7ac:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800c7b0:	b9fe      	cbnz	r6, 800c7f2 <osSemaphoreNew+0x4a>
 800c7b2:	b1f0      	cbz	r0, 800c7f2 <osSemaphoreNew+0x4a>
 800c7b4:	4288      	cmp	r0, r1
 800c7b6:	460f      	mov	r7, r1
 800c7b8:	d31b      	bcc.n	800c7f2 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800c7ba:	4615      	mov	r5, r2
 800c7bc:	b192      	cbz	r2, 800c7e4 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800c7be:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800c7c2:	b1d2      	cbz	r2, 800c7fa <osSemaphoreNew+0x52>
 800c7c4:	2b4f      	cmp	r3, #79	; 0x4f
 800c7c6:	d914      	bls.n	800c7f2 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800c7c8:	2801      	cmp	r0, #1
 800c7ca:	d038      	beq.n	800c83e <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800c7cc:	f000 fd90 	bl	800d2f0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800c7d0:	4604      	mov	r4, r0
 800c7d2:	b170      	cbz	r0, 800c7f2 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800c7d4:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800c7d6:	4620      	mov	r0, r4
 800c7d8:	4629      	mov	r1, r5
 800c7da:	f001 fc3b 	bl	800e054 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800c7de:	4620      	mov	r0, r4
 800c7e0:	b003      	add	sp, #12
 800c7e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800c7e4:	2801      	cmp	r0, #1
 800c7e6:	d012      	beq.n	800c80e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c7e8:	f000 fde2 	bl	800d3b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c7ec:	4604      	mov	r4, r0
 800c7ee:	2800      	cmp	r0, #0
 800c7f0:	d1f1      	bne.n	800c7d6 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800c7f2:	2400      	movs	r4, #0
}
 800c7f4:	4620      	mov	r0, r4
 800c7f6:	b003      	add	sp, #12
 800c7f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800c7fa:	2b00      	cmp	r3, #0
 800c7fc:	d1f9      	bne.n	800c7f2 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800c7fe:	2801      	cmp	r0, #1
 800c800:	d005      	beq.n	800c80e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c802:	f000 fdd5 	bl	800d3b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c806:	4604      	mov	r4, r0
 800c808:	2800      	cmp	r0, #0
 800c80a:	d1e3      	bne.n	800c7d4 <osSemaphoreNew+0x2c>
 800c80c:	e7f1      	b.n	800c7f2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800c80e:	2203      	movs	r2, #3
 800c810:	2100      	movs	r1, #0
 800c812:	2001      	movs	r0, #1
 800c814:	f000 fd2a 	bl	800d26c <xQueueGenericCreate>
 800c818:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800c81a:	2c00      	cmp	r4, #0
 800c81c:	d0e9      	beq.n	800c7f2 <osSemaphoreNew+0x4a>
 800c81e:	b917      	cbnz	r7, 800c826 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800c820:	2d00      	cmp	r5, #0
 800c822:	d1d7      	bne.n	800c7d4 <osSemaphoreNew+0x2c>
 800c824:	e7d7      	b.n	800c7d6 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c826:	2300      	movs	r3, #0
 800c828:	461a      	mov	r2, r3
 800c82a:	4619      	mov	r1, r3
 800c82c:	4620      	mov	r0, r4
 800c82e:	f000 fe05 	bl	800d43c <xQueueGenericSend>
 800c832:	2801      	cmp	r0, #1
 800c834:	d0f4      	beq.n	800c820 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800c836:	4620      	mov	r0, r4
 800c838:	f001 fbc6 	bl	800dfc8 <vQueueDelete>
 800c83c:	e7d9      	b.n	800c7f2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800c83e:	4613      	mov	r3, r2
 800c840:	2203      	movs	r2, #3
 800c842:	9200      	str	r2, [sp, #0]
 800c844:	4631      	mov	r1, r6
 800c846:	4632      	mov	r2, r6
 800c848:	f000 fca2 	bl	800d190 <xQueueGenericCreateStatic>
 800c84c:	4604      	mov	r4, r0
 800c84e:	e7e4      	b.n	800c81a <osSemaphoreNew+0x72>

0800c850 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c850:	b370      	cbz	r0, 800c8b0 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800c852:	b510      	push	{r4, lr}
 800c854:	460c      	mov	r4, r1
 800c856:	b082      	sub	sp, #8
 800c858:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c85c:	b1c3      	cbz	r3, 800c890 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800c85e:	bb21      	cbnz	r1, 800c8aa <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c860:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c862:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c864:	f001 fb2e 	bl	800dec4 <xQueueReceiveFromISR>
 800c868:	2801      	cmp	r0, #1
 800c86a:	d11a      	bne.n	800c8a2 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c86c:	9b01      	ldr	r3, [sp, #4]
 800c86e:	b913      	cbnz	r3, 800c876 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800c870:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800c872:	b002      	add	sp, #8
 800c874:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800c876:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c87a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c87e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c882:	f3bf 8f4f 	dsb	sy
 800c886:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c88a:	4620      	mov	r0, r4
}
 800c88c:	b002      	add	sp, #8
 800c88e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800c890:	f001 f98e 	bl	800dbb0 <xQueueSemaphoreTake>
 800c894:	2801      	cmp	r0, #1
 800c896:	d0eb      	beq.n	800c870 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800c898:	b11c      	cbz	r4, 800c8a2 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800c89a:	f06f 0001 	mvn.w	r0, #1
}
 800c89e:	b002      	add	sp, #8
 800c8a0:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800c8a2:	f06f 0002 	mvn.w	r0, #2
}
 800c8a6:	b002      	add	sp, #8
 800c8a8:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800c8aa:	f06f 0003 	mvn.w	r0, #3
 800c8ae:	e7e0      	b.n	800c872 <osSemaphoreAcquire+0x22>
 800c8b0:	f06f 0003 	mvn.w	r0, #3
}
 800c8b4:	4770      	bx	lr
 800c8b6:	bf00      	nop

0800c8b8 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c8b8:	b330      	cbz	r0, 800c908 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800c8ba:	b510      	push	{r4, lr}
 800c8bc:	b082      	sub	sp, #8
 800c8be:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c8c2:	b1ab      	cbz	r3, 800c8f0 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800c8c4:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c8c6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800c8c8:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c8ca:	f000 ff9b 	bl	800d804 <xQueueGiveFromISR>
 800c8ce:	2801      	cmp	r0, #1
 800c8d0:	d117      	bne.n	800c902 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800c8d2:	9b01      	ldr	r3, [sp, #4]
 800c8d4:	b193      	cbz	r3, 800c8fc <osSemaphoreRelease+0x44>
 800c8d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c8da:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c8de:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c8e2:	f3bf 8f4f 	dsb	sy
 800c8e6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c8ea:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800c8ec:	b002      	add	sp, #8
 800c8ee:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c8f0:	461a      	mov	r2, r3
 800c8f2:	4619      	mov	r1, r3
 800c8f4:	f000 fda2 	bl	800d43c <xQueueGenericSend>
 800c8f8:	2801      	cmp	r0, #1
 800c8fa:	d102      	bne.n	800c902 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800c8fc:	2000      	movs	r0, #0
}
 800c8fe:	b002      	add	sp, #8
 800c900:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800c902:	f06f 0002 	mvn.w	r0, #2
 800c906:	e7fa      	b.n	800c8fe <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800c908:	f06f 0003 	mvn.w	r0, #3
}
 800c90c:	4770      	bx	lr
 800c90e:	bf00      	nop

0800c910 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800c910:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c912:	b085      	sub	sp, #20
 800c914:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800c918:	b987      	cbnz	r7, 800c93c <osMessageQueueNew+0x2c>
 800c91a:	4605      	mov	r5, r0
 800c91c:	b170      	cbz	r0, 800c93c <osMessageQueueNew+0x2c>
 800c91e:	b169      	cbz	r1, 800c93c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800c920:	4614      	mov	r4, r2
 800c922:	b1ea      	cbz	r2, 800c960 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c924:	6893      	ldr	r3, [r2, #8]
 800c926:	b163      	cbz	r3, 800c942 <osMessageQueueNew+0x32>
 800c928:	68d2      	ldr	r2, [r2, #12]
 800c92a:	2a4f      	cmp	r2, #79	; 0x4f
 800c92c:	d906      	bls.n	800c93c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c92e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c930:	b122      	cbz	r2, 800c93c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c932:	6966      	ldr	r6, [r4, #20]
 800c934:	fb01 f505 	mul.w	r5, r1, r5
 800c938:	42ae      	cmp	r6, r5
 800c93a:	d21c      	bcs.n	800c976 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800c93c:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800c93e:	b005      	add	sp, #20
 800c940:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800c942:	68d3      	ldr	r3, [r2, #12]
 800c944:	2b00      	cmp	r3, #0
 800c946:	d1f9      	bne.n	800c93c <osMessageQueueNew+0x2c>
 800c948:	6913      	ldr	r3, [r2, #16]
 800c94a:	2b00      	cmp	r3, #0
 800c94c:	d1f6      	bne.n	800c93c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800c94e:	6952      	ldr	r2, [r2, #20]
 800c950:	2a00      	cmp	r2, #0
 800c952:	d1f3      	bne.n	800c93c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c954:	f000 fc8a 	bl	800d26c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c958:	2800      	cmp	r0, #0
 800c95a:	d0ef      	beq.n	800c93c <osMessageQueueNew+0x2c>
        name = attr->name;
 800c95c:	6824      	ldr	r4, [r4, #0]
 800c95e:	e003      	b.n	800c968 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c960:	f000 fc84 	bl	800d26c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c964:	2800      	cmp	r0, #0
 800c966:	d0e9      	beq.n	800c93c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800c968:	4621      	mov	r1, r4
 800c96a:	9003      	str	r0, [sp, #12]
 800c96c:	f001 fb72 	bl	800e054 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800c970:	9803      	ldr	r0, [sp, #12]
}
 800c972:	b005      	add	sp, #20
 800c974:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800c976:	9700      	str	r7, [sp, #0]
 800c978:	f000 fc0a 	bl	800d190 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800c97c:	2800      	cmp	r0, #0
 800c97e:	d1ed      	bne.n	800c95c <osMessageQueueNew+0x4c>
 800c980:	e7dc      	b.n	800c93c <osMessageQueueNew+0x2c>
 800c982:	bf00      	nop

0800c984 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800c984:	b570      	push	{r4, r5, r6, lr}
 800c986:	461c      	mov	r4, r3
 800c988:	b082      	sub	sp, #8
 800c98a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c98e:	b1be      	cbz	r6, 800c9c0 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c990:	b350      	cbz	r0, 800c9e8 <osMessageQueuePut+0x64>
 800c992:	b349      	cbz	r1, 800c9e8 <osMessageQueuePut+0x64>
 800c994:	bb43      	cbnz	r3, 800c9e8 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c996:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c998:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c99a:	f000 fecd 	bl	800d738 <xQueueGenericSendFromISR>
 800c99e:	2801      	cmp	r0, #1
 800c9a0:	d11e      	bne.n	800c9e0 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c9a2:	9b01      	ldr	r3, [sp, #4]
 800c9a4:	b1cb      	cbz	r3, 800c9da <osMessageQueuePut+0x56>
 800c9a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c9aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c9ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c9b2:	f3bf 8f4f 	dsb	sy
 800c9b6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c9ba:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c9bc:	b002      	add	sp, #8
 800c9be:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c9c0:	b190      	cbz	r0, 800c9e8 <osMessageQueuePut+0x64>
 800c9c2:	b189      	cbz	r1, 800c9e8 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c9c4:	4633      	mov	r3, r6
 800c9c6:	4622      	mov	r2, r4
 800c9c8:	f000 fd38 	bl	800d43c <xQueueGenericSend>
 800c9cc:	2801      	cmp	r0, #1
 800c9ce:	d004      	beq.n	800c9da <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800c9d0:	b134      	cbz	r4, 800c9e0 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800c9d2:	f06f 0001 	mvn.w	r0, #1
}
 800c9d6:	b002      	add	sp, #8
 800c9d8:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800c9da:	2000      	movs	r0, #0
}
 800c9dc:	b002      	add	sp, #8
 800c9de:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800c9e0:	f06f 0002 	mvn.w	r0, #2
}
 800c9e4:	b002      	add	sp, #8
 800c9e6:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800c9e8:	f06f 0003 	mvn.w	r0, #3
 800c9ec:	e7e6      	b.n	800c9bc <osMessageQueuePut+0x38>
 800c9ee:	bf00      	nop

0800c9f0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800c9f0:	b530      	push	{r4, r5, lr}
 800c9f2:	461c      	mov	r4, r3
 800c9f4:	b083      	sub	sp, #12
 800c9f6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c9fa:	b1bb      	cbz	r3, 800ca2c <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c9fc:	b348      	cbz	r0, 800ca52 <osMessageQueueGet+0x62>
 800c9fe:	b341      	cbz	r1, 800ca52 <osMessageQueueGet+0x62>
 800ca00:	bb3c      	cbnz	r4, 800ca52 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ca02:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ca04:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ca06:	f001 fa5d 	bl	800dec4 <xQueueReceiveFromISR>
 800ca0a:	2801      	cmp	r0, #1
 800ca0c:	d11d      	bne.n	800ca4a <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ca0e:	9b01      	ldr	r3, [sp, #4]
 800ca10:	b1c3      	cbz	r3, 800ca44 <osMessageQueueGet+0x54>
 800ca12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ca16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ca1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ca1e:	f3bf 8f4f 	dsb	sy
 800ca22:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ca26:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ca28:	b003      	add	sp, #12
 800ca2a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ca2c:	b188      	cbz	r0, 800ca52 <osMessageQueueGet+0x62>
 800ca2e:	b181      	cbz	r1, 800ca52 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ca30:	4622      	mov	r2, r4
 800ca32:	f000 ff3f 	bl	800d8b4 <xQueueReceive>
 800ca36:	2801      	cmp	r0, #1
 800ca38:	d004      	beq.n	800ca44 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800ca3a:	b134      	cbz	r4, 800ca4a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800ca3c:	f06f 0001 	mvn.w	r0, #1
}
 800ca40:	b003      	add	sp, #12
 800ca42:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800ca44:	2000      	movs	r0, #0
}
 800ca46:	b003      	add	sp, #12
 800ca48:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800ca4a:	f06f 0002 	mvn.w	r0, #2
}
 800ca4e:	b003      	add	sp, #12
 800ca50:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800ca52:	f06f 0003 	mvn.w	r0, #3
 800ca56:	e7e7      	b.n	800ca28 <osMessageQueueGet+0x38>

0800ca58 <osMessageQueueGetCount>:
 800ca58:	b130      	cbz	r0, 800ca68 <osMessageQueueGetCount+0x10>
 800ca5a:	f3ef 8305 	mrs	r3, IPSR
 800ca5e:	b10b      	cbz	r3, 800ca64 <osMessageQueueGetCount+0xc>
 800ca60:	f001 baa4 	b.w	800dfac <uxQueueMessagesWaitingFromISR>
 800ca64:	f001 ba8c 	b.w	800df80 <uxQueueMessagesWaiting>
 800ca68:	4770      	bx	lr
 800ca6a:	bf00      	nop

0800ca6c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800ca6c:	4b04      	ldr	r3, [pc, #16]	; (800ca80 <vApplicationGetIdleTaskMemory+0x14>)
 800ca6e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800ca70:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ca72:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800ca74:	4c03      	ldr	r4, [pc, #12]	; (800ca84 <vApplicationGetIdleTaskMemory+0x18>)
 800ca76:	600c      	str	r4, [r1, #0]
}
 800ca78:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ca7c:	6013      	str	r3, [r2, #0]
}
 800ca7e:	4770      	bx	lr
 800ca80:	200021ac 	.word	0x200021ac
 800ca84:	20001fac 	.word	0x20001fac

0800ca88 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800ca88:	4b05      	ldr	r3, [pc, #20]	; (800caa0 <vApplicationGetTimerTaskMemory+0x18>)
 800ca8a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800ca8c:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ca8e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800ca92:	4c04      	ldr	r4, [pc, #16]	; (800caa4 <vApplicationGetTimerTaskMemory+0x1c>)
 800ca94:	600c      	str	r4, [r1, #0]
}
 800ca96:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ca9a:	6013      	str	r3, [r2, #0]
}
 800ca9c:	4770      	bx	lr
 800ca9e:	bf00      	nop
 800caa0:	2000265c 	.word	0x2000265c
 800caa4:	2000225c 	.word	0x2000225c

0800caa8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800caa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800caac:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800caae:	f001 ff47 	bl	800e940 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800cab2:	4a54      	ldr	r2, [pc, #336]	; (800cc04 <pvPortMalloc+0x15c>)
 800cab4:	6816      	ldr	r6, [r2, #0]
 800cab6:	2e00      	cmp	r6, #0
 800cab8:	d06e      	beq.n	800cb98 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800caba:	4b53      	ldr	r3, [pc, #332]	; (800cc08 <pvPortMalloc+0x160>)
 800cabc:	681f      	ldr	r7, [r3, #0]
 800cabe:	423d      	tst	r5, r7
 800cac0:	d12e      	bne.n	800cb20 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800cac2:	b36d      	cbz	r5, 800cb20 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800cac4:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cac8:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800caca:	bf1c      	itt	ne
 800cacc:	f024 0407 	bicne.w	r4, r4, #7
 800cad0:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cad2:	b32c      	cbz	r4, 800cb20 <pvPortMalloc+0x78>
 800cad4:	f8df c144 	ldr.w	ip, [pc, #324]	; 800cc1c <pvPortMalloc+0x174>
 800cad8:	f8dc 5000 	ldr.w	r5, [ip]
 800cadc:	42a5      	cmp	r5, r4
 800cade:	d31f      	bcc.n	800cb20 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800cae0:	484a      	ldr	r0, [pc, #296]	; (800cc0c <pvPortMalloc+0x164>)
 800cae2:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cae4:	e003      	b.n	800caee <pvPortMalloc+0x46>
 800cae6:	681a      	ldr	r2, [r3, #0]
 800cae8:	b122      	cbz	r2, 800caf4 <pvPortMalloc+0x4c>
 800caea:	4618      	mov	r0, r3
 800caec:	4613      	mov	r3, r2
 800caee:	6859      	ldr	r1, [r3, #4]
 800caf0:	42a1      	cmp	r1, r4
 800caf2:	d3f8      	bcc.n	800cae6 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800caf4:	42b3      	cmp	r3, r6
 800caf6:	d013      	beq.n	800cb20 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800caf8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cafa:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cafc:	f858 eb08 	ldr.w	lr, [r8], #8
 800cb00:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cb04:	2a10      	cmp	r2, #16
 800cb06:	d929      	bls.n	800cb5c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cb08:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cb0a:	0748      	lsls	r0, r1, #29
 800cb0c:	d00f      	beq.n	800cb2e <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cb0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb12:	f383 8811 	msr	BASEPRI, r3
 800cb16:	f3bf 8f6f 	isb	sy
 800cb1a:	f3bf 8f4f 	dsb	sy
 800cb1e:	e7fe      	b.n	800cb1e <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800cb20:	f001 ff16 	bl	800e950 <xTaskResumeAll>
 800cb24:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800cb28:	4640      	mov	r0, r8
 800cb2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cb2e:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cb30:	4a36      	ldr	r2, [pc, #216]	; (800cc0c <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800cb32:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cb34:	4614      	mov	r4, r2
 800cb36:	6812      	ldr	r2, [r2, #0]
 800cb38:	4291      	cmp	r1, r2
 800cb3a:	d8fb      	bhi.n	800cb34 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cb3c:	6860      	ldr	r0, [r4, #4]
 800cb3e:	eb04 0e00 	add.w	lr, r4, r0
 800cb42:	4571      	cmp	r1, lr
 800cb44:	d04b      	beq.n	800cbde <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cb46:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cb4a:	eb01 000e 	add.w	r0, r1, lr
 800cb4e:	4282      	cmp	r2, r0
 800cb50:	d051      	beq.n	800cbf6 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cb52:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cb54:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cb56:	bf18      	it	ne
 800cb58:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cb5a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cb5c:	4a2c      	ldr	r2, [pc, #176]	; (800cc10 <pvPortMalloc+0x168>)
 800cb5e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cb60:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cb62:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800cb64:	bf38      	it	cc
 800cb66:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800cb68:	4a2a      	ldr	r2, [pc, #168]	; (800cc14 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cb6a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cb6e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800cb70:	2000      	movs	r0, #0
 800cb72:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800cb76:	6813      	ldr	r3, [r2, #0]
 800cb78:	3301      	adds	r3, #1
 800cb7a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800cb7c:	f001 fee8 	bl	800e950 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800cb80:	f018 0f07 	tst.w	r8, #7
 800cb84:	d0d0      	beq.n	800cb28 <pvPortMalloc+0x80>
 800cb86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb8a:	f383 8811 	msr	BASEPRI, r3
 800cb8e:	f3bf 8f6f 	isb	sy
 800cb92:	f3bf 8f4f 	dsb	sy
 800cb96:	e7fe      	b.n	800cb96 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800cb98:	4b1f      	ldr	r3, [pc, #124]	; (800cc18 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cb9a:	075e      	lsls	r6, r3, #29
 800cb9c:	d118      	bne.n	800cbd0 <pvPortMalloc+0x128>
 800cb9e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800cba2:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cba4:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cba6:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cbaa:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cbac:	4a18      	ldr	r2, [pc, #96]	; (800cc10 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cbae:	4817      	ldr	r0, [pc, #92]	; (800cc0c <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cbb0:	4c15      	ldr	r4, [pc, #84]	; (800cc08 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cbb2:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cbb4:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cbb6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cbb8:	4a18      	ldr	r2, [pc, #96]	; (800cc1c <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cbba:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cbbe:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cbc0:	2200      	movs	r2, #0
 800cbc2:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cbc4:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cbc6:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cbca:	e9c1 6300 	strd	r6, r3, [r1]
}
 800cbce:	e776      	b.n	800cabe <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cbd0:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cbd2:	f021 0107 	bic.w	r1, r1, #7
 800cbd6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cbda:	460b      	mov	r3, r1
 800cbdc:	e7e2      	b.n	800cba4 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbde:	6849      	ldr	r1, [r1, #4]
 800cbe0:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbe4:	eb04 010e 	add.w	r1, r4, lr
 800cbe8:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbea:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbee:	d001      	beq.n	800cbf4 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbf0:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800cbf2:	e7b2      	b.n	800cb5a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbf4:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cbf6:	42b2      	cmp	r2, r6
 800cbf8:	d0ab      	beq.n	800cb52 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cbfa:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbfc:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cbfe:	4470      	add	r0, lr
 800cc00:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cc02:	e7a6      	b.n	800cb52 <pvPortMalloc+0xaa>
 800cc04:	20002708 	.word	0x20002708
 800cc08:	2001270c 	.word	0x2001270c
 800cc0c:	20012720 	.word	0x20012720
 800cc10:	20012714 	.word	0x20012714
 800cc14:	20012718 	.word	0x20012718
 800cc18:	2000270c 	.word	0x2000270c
 800cc1c:	20012710 	.word	0x20012710

0800cc20 <vPortFree>:
	if( pv != NULL )
 800cc20:	b1d0      	cbz	r0, 800cc58 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cc22:	4a2c      	ldr	r2, [pc, #176]	; (800ccd4 <vPortFree+0xb4>)
 800cc24:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cc28:	6812      	ldr	r2, [r2, #0]
 800cc2a:	4213      	tst	r3, r2
 800cc2c:	d00b      	beq.n	800cc46 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cc2e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cc32:	b191      	cbz	r1, 800cc5a <vPortFree+0x3a>
 800cc34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc38:	f383 8811 	msr	BASEPRI, r3
 800cc3c:	f3bf 8f6f 	isb	sy
 800cc40:	f3bf 8f4f 	dsb	sy
 800cc44:	e7fe      	b.n	800cc44 <vPortFree+0x24>
 800cc46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc4a:	f383 8811 	msr	BASEPRI, r3
 800cc4e:	f3bf 8f6f 	isb	sy
 800cc52:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cc56:	e7fe      	b.n	800cc56 <vPortFree+0x36>
 800cc58:	4770      	bx	lr
{
 800cc5a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cc5c:	ea23 0302 	bic.w	r3, r3, r2
{
 800cc60:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cc62:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cc66:	4c1c      	ldr	r4, [pc, #112]	; (800ccd8 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cc68:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800cc6a:	f001 fe69 	bl	800e940 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cc6e:	9801      	ldr	r0, [sp, #4]
 800cc70:	6822      	ldr	r2, [r4, #0]
 800cc72:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cc76:	4b19      	ldr	r3, [pc, #100]	; (800ccdc <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cc78:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800cc7a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cc7c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cc7e:	461a      	mov	r2, r3
 800cc80:	681b      	ldr	r3, [r3, #0]
 800cc82:	4298      	cmp	r0, r3
 800cc84:	d8fb      	bhi.n	800cc7e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cc86:	6854      	ldr	r4, [r2, #4]
 800cc88:	eb02 0e04 	add.w	lr, r2, r4
 800cc8c:	4570      	cmp	r0, lr
 800cc8e:	d010      	beq.n	800ccb2 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cc90:	eb00 0c01 	add.w	ip, r0, r1
 800cc94:	4563      	cmp	r3, ip
 800cc96:	d014      	beq.n	800ccc2 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800cc98:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cc9a:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cc9c:	bf18      	it	ne
 800cc9e:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800cca0:	4a0f      	ldr	r2, [pc, #60]	; (800cce0 <vPortFree+0xc0>)
 800cca2:	6813      	ldr	r3, [r2, #0]
 800cca4:	3301      	adds	r3, #1
 800cca6:	6013      	str	r3, [r2, #0]
}
 800cca8:	b002      	add	sp, #8
 800ccaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800ccae:	f001 be4f 	b.w	800e950 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ccb2:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ccb4:	1850      	adds	r0, r2, r1
 800ccb6:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ccb8:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ccba:	d001      	beq.n	800ccc0 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ccbc:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800ccbe:	e7ef      	b.n	800cca0 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ccc0:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ccc2:	4c08      	ldr	r4, [pc, #32]	; (800cce4 <vPortFree+0xc4>)
 800ccc4:	6824      	ldr	r4, [r4, #0]
 800ccc6:	42a3      	cmp	r3, r4
 800ccc8:	d0e6      	beq.n	800cc98 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ccca:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ccce:	4421      	add	r1, r4
 800ccd0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ccd2:	e7e1      	b.n	800cc98 <vPortFree+0x78>
 800ccd4:	2001270c 	.word	0x2001270c
 800ccd8:	20012710 	.word	0x20012710
 800ccdc:	20012720 	.word	0x20012720
 800cce0:	2001271c 	.word	0x2001271c
 800cce4:	20002708 	.word	0x20002708

0800cce8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cce8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ccec:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ccf0:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ccf2:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ccf6:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ccfa:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800ccfc:	4770      	bx	lr
 800ccfe:	bf00      	nop

0800cd00 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800cd00:	2300      	movs	r3, #0
 800cd02:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800cd04:	4770      	bx	lr
 800cd06:	bf00      	nop

0800cd08 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800cd08:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800cd0a:	689a      	ldr	r2, [r3, #8]
 800cd0c:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cd0e:	6802      	ldr	r2, [r0, #0]
{
 800cd10:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cd12:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800cd14:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cd16:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cd18:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800cd1a:	6099      	str	r1, [r3, #8]
}
 800cd1c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800cd20:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800cd22:	6002      	str	r2, [r0, #0]
}
 800cd24:	4770      	bx	lr
 800cd26:	bf00      	nop

0800cd28 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800cd28:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800cd2a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800cd2c:	1c6b      	adds	r3, r5, #1
 800cd2e:	d010      	beq.n	800cd52 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800cd30:	f100 0308 	add.w	r3, r0, #8
 800cd34:	461c      	mov	r4, r3
 800cd36:	685b      	ldr	r3, [r3, #4]
 800cd38:	681a      	ldr	r2, [r3, #0]
 800cd3a:	42aa      	cmp	r2, r5
 800cd3c:	d9fa      	bls.n	800cd34 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cd3e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cd40:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cd42:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800cd44:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800cd46:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800cd48:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800cd4a:	6108      	str	r0, [r1, #16]
}
 800cd4c:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800cd4e:	6002      	str	r2, [r0, #0]
}
 800cd50:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800cd52:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cd54:	6863      	ldr	r3, [r4, #4]
 800cd56:	e7f2      	b.n	800cd3e <vListInsert+0x16>

0800cd58 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800cd58:	6903      	ldr	r3, [r0, #16]
{
 800cd5a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800cd5c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800cd60:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800cd62:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800cd64:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800cd66:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800cd68:	bf08      	it	eq
 800cd6a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800cd6c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800cd6e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800cd72:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800cd74:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800cd76:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800cd78:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800cd7a:	6818      	ldr	r0, [r3, #0]
}
 800cd7c:	4770      	bx	lr
 800cd7e:	bf00      	nop

0800cd80 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800cd80:	4808      	ldr	r0, [pc, #32]	; (800cda4 <prvPortStartFirstTask+0x24>)
 800cd82:	6800      	ldr	r0, [r0, #0]
 800cd84:	6800      	ldr	r0, [r0, #0]
 800cd86:	f380 8808 	msr	MSP, r0
 800cd8a:	f04f 0000 	mov.w	r0, #0
 800cd8e:	f380 8814 	msr	CONTROL, r0
 800cd92:	b662      	cpsie	i
 800cd94:	b661      	cpsie	f
 800cd96:	f3bf 8f4f 	dsb	sy
 800cd9a:	f3bf 8f6f 	isb	sy
 800cd9e:	df00      	svc	0
 800cda0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800cda2:	0000      	.short	0x0000
 800cda4:	e000ed08 	.word	0xe000ed08

0800cda8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800cda8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800cdb8 <vPortEnableVFP+0x10>
 800cdac:	6801      	ldr	r1, [r0, #0]
 800cdae:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800cdb2:	6001      	str	r1, [r0, #0]
 800cdb4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800cdb6:	0000      	.short	0x0000
 800cdb8:	e000ed88 	.word	0xe000ed88

0800cdbc <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800cdbc:	4b0e      	ldr	r3, [pc, #56]	; (800cdf8 <prvTaskExitError+0x3c>)
 800cdbe:	681b      	ldr	r3, [r3, #0]
{
 800cdc0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800cdc2:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800cdc4:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800cdc6:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800cdc8:	d008      	beq.n	800cddc <prvTaskExitError+0x20>
 800cdca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cdce:	f383 8811 	msr	BASEPRI, r3
 800cdd2:	f3bf 8f6f 	isb	sy
 800cdd6:	f3bf 8f4f 	dsb	sy
 800cdda:	e7fe      	b.n	800cdda <prvTaskExitError+0x1e>
 800cddc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cde0:	f383 8811 	msr	BASEPRI, r3
 800cde4:	f3bf 8f6f 	isb	sy
 800cde8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800cdec:	9b01      	ldr	r3, [sp, #4]
 800cdee:	2b00      	cmp	r3, #0
 800cdf0:	d0fc      	beq.n	800cdec <prvTaskExitError+0x30>
}
 800cdf2:	b002      	add	sp, #8
 800cdf4:	4770      	bx	lr
 800cdf6:	bf00      	nop
 800cdf8:	20000084 	.word	0x20000084

0800cdfc <pxPortInitialiseStack>:
{
 800cdfc:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800cdfe:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ce02:	4c07      	ldr	r4, [pc, #28]	; (800ce20 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ce04:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ce08:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ce0c:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ce10:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ce14:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ce18:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ce1c:	3844      	subs	r0, #68	; 0x44
 800ce1e:	4770      	bx	lr
 800ce20:	0800cdbd 	.word	0x0800cdbd
	...

0800ce30 <SVC_Handler>:
	__asm volatile (
 800ce30:	4b07      	ldr	r3, [pc, #28]	; (800ce50 <pxCurrentTCBConst2>)
 800ce32:	6819      	ldr	r1, [r3, #0]
 800ce34:	6808      	ldr	r0, [r1, #0]
 800ce36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce3a:	f380 8809 	msr	PSP, r0
 800ce3e:	f3bf 8f6f 	isb	sy
 800ce42:	f04f 0000 	mov.w	r0, #0
 800ce46:	f380 8811 	msr	BASEPRI, r0
 800ce4a:	4770      	bx	lr
 800ce4c:	f3af 8000 	nop.w

0800ce50 <pxCurrentTCBConst2>:
 800ce50:	20012770 	.word	0x20012770

0800ce54 <vPortEnterCritical>:
 800ce54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce58:	f383 8811 	msr	BASEPRI, r3
 800ce5c:	f3bf 8f6f 	isb	sy
 800ce60:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800ce64:	4a0b      	ldr	r2, [pc, #44]	; (800ce94 <vPortEnterCritical+0x40>)
 800ce66:	6813      	ldr	r3, [r2, #0]
 800ce68:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800ce6a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800ce6c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800ce6e:	d000      	beq.n	800ce72 <vPortEnterCritical+0x1e>
}
 800ce70:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800ce72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce76:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800ce7a:	b2db      	uxtb	r3, r3
 800ce7c:	2b00      	cmp	r3, #0
 800ce7e:	d0f7      	beq.n	800ce70 <vPortEnterCritical+0x1c>
 800ce80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce84:	f383 8811 	msr	BASEPRI, r3
 800ce88:	f3bf 8f6f 	isb	sy
 800ce8c:	f3bf 8f4f 	dsb	sy
 800ce90:	e7fe      	b.n	800ce90 <vPortEnterCritical+0x3c>
 800ce92:	bf00      	nop
 800ce94:	20000084 	.word	0x20000084

0800ce98 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800ce98:	4a08      	ldr	r2, [pc, #32]	; (800cebc <vPortExitCritical+0x24>)
 800ce9a:	6813      	ldr	r3, [r2, #0]
 800ce9c:	b943      	cbnz	r3, 800ceb0 <vPortExitCritical+0x18>
 800ce9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cea2:	f383 8811 	msr	BASEPRI, r3
 800cea6:	f3bf 8f6f 	isb	sy
 800ceaa:	f3bf 8f4f 	dsb	sy
 800ceae:	e7fe      	b.n	800ceae <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800ceb0:	3b01      	subs	r3, #1
 800ceb2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800ceb4:	b90b      	cbnz	r3, 800ceba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800ceb6:	f383 8811 	msr	BASEPRI, r3
}
 800ceba:	4770      	bx	lr
 800cebc:	20000084 	.word	0x20000084

0800cec0 <PendSV_Handler>:
	__asm volatile
 800cec0:	f3ef 8009 	mrs	r0, PSP
 800cec4:	f3bf 8f6f 	isb	sy
 800cec8:	4b15      	ldr	r3, [pc, #84]	; (800cf20 <pxCurrentTCBConst>)
 800ceca:	681a      	ldr	r2, [r3, #0]
 800cecc:	f01e 0f10 	tst.w	lr, #16
 800ced0:	bf08      	it	eq
 800ced2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800ced6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceda:	6010      	str	r0, [r2, #0]
 800cedc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800cee0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800cee4:	f380 8811 	msr	BASEPRI, r0
 800cee8:	f3bf 8f4f 	dsb	sy
 800ceec:	f3bf 8f6f 	isb	sy
 800cef0:	f001 fd54 	bl	800e99c <vTaskSwitchContext>
 800cef4:	f04f 0000 	mov.w	r0, #0
 800cef8:	f380 8811 	msr	BASEPRI, r0
 800cefc:	bc09      	pop	{r0, r3}
 800cefe:	6819      	ldr	r1, [r3, #0]
 800cf00:	6808      	ldr	r0, [r1, #0]
 800cf02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf06:	f01e 0f10 	tst.w	lr, #16
 800cf0a:	bf08      	it	eq
 800cf0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800cf10:	f380 8809 	msr	PSP, r0
 800cf14:	f3bf 8f6f 	isb	sy
 800cf18:	4770      	bx	lr
 800cf1a:	bf00      	nop
 800cf1c:	f3af 8000 	nop.w

0800cf20 <pxCurrentTCBConst>:
 800cf20:	20012770 	.word	0x20012770

0800cf24 <xPortSysTickHandler>:
{
 800cf24:	b508      	push	{r3, lr}
	__asm volatile
 800cf26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf2a:	f383 8811 	msr	BASEPRI, r3
 800cf2e:	f3bf 8f6f 	isb	sy
 800cf32:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800cf36:	f001 fd21 	bl	800e97c <xTaskIncrementTick>
 800cf3a:	b128      	cbz	r0, 800cf48 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800cf3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cf44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800cf48:	2300      	movs	r3, #0
 800cf4a:	f383 8811 	msr	BASEPRI, r3
}
 800cf4e:	bd08      	pop	{r3, pc}

0800cf50 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800cf50:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800cf54:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800cf56:	4906      	ldr	r1, [pc, #24]	; (800cf70 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800cf58:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800cf5a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800cf5c:	680b      	ldr	r3, [r1, #0]
 800cf5e:	4905      	ldr	r1, [pc, #20]	; (800cf74 <vPortSetupTimerInterrupt+0x24>)
 800cf60:	fba1 1303 	umull	r1, r3, r1, r3
 800cf64:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800cf66:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800cf68:	3b01      	subs	r3, #1
 800cf6a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800cf6c:	6110      	str	r0, [r2, #16]
}
 800cf6e:	4770      	bx	lr
 800cf70:	20000078 	.word	0x20000078
 800cf74:	10624dd3 	.word	0x10624dd3

0800cf78 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800cf78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf7c:	4a49      	ldr	r2, [pc, #292]	; (800d0a4 <xPortStartScheduler+0x12c>)
 800cf7e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800cf82:	4291      	cmp	r1, r2
 800cf84:	d043      	beq.n	800d00e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800cf86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800cf8a:	4b47      	ldr	r3, [pc, #284]	; (800d0a8 <xPortStartScheduler+0x130>)
 800cf8c:	429a      	cmp	r2, r3
 800cf8e:	d035      	beq.n	800cffc <xPortStartScheduler+0x84>
{
 800cf90:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800cf92:	4b46      	ldr	r3, [pc, #280]	; (800d0ac <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800cf94:	4846      	ldr	r0, [pc, #280]	; (800d0b0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800cf96:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800cf98:	4c46      	ldr	r4, [pc, #280]	; (800d0b4 <xPortStartScheduler+0x13c>)
{
 800cf9a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800cf9c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800cf9e:	b2d2      	uxtb	r2, r2
 800cfa0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800cfa2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800cfa4:	781b      	ldrb	r3, [r3, #0]
 800cfa6:	b2db      	uxtb	r3, r3
 800cfa8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800cfac:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cfb0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800cfb4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800cfb8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800cfba:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cfbc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800cfbe:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cfc0:	bf48      	it	mi
 800cfc2:	2206      	movmi	r2, #6
 800cfc4:	d511      	bpl.n	800cfea <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800cfc6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800cfca:	005b      	lsls	r3, r3, #1
 800cfcc:	b2db      	uxtb	r3, r3
 800cfce:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cfd2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800cfd6:	0609      	lsls	r1, r1, #24
 800cfd8:	4610      	mov	r0, r2
 800cfda:	f102 32ff 	add.w	r2, r2, #4294967295
 800cfde:	d4f2      	bmi.n	800cfc6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800cfe0:	2803      	cmp	r0, #3
 800cfe2:	6020      	str	r0, [r4, #0]
 800cfe4:	f88d 3007 	strb.w	r3, [sp, #7]
 800cfe8:	d01a      	beq.n	800d020 <xPortStartScheduler+0xa8>
	__asm volatile
 800cfea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfee:	f383 8811 	msr	BASEPRI, r3
 800cff2:	f3bf 8f6f 	isb	sy
 800cff6:	f3bf 8f4f 	dsb	sy
 800cffa:	e7fe      	b.n	800cffa <xPortStartScheduler+0x82>
 800cffc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d000:	f383 8811 	msr	BASEPRI, r3
 800d004:	f3bf 8f6f 	isb	sy
 800d008:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d00c:	e7fe      	b.n	800d00c <xPortStartScheduler+0x94>
 800d00e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d012:	f383 8811 	msr	BASEPRI, r3
 800d016:	f3bf 8f6f 	isb	sy
 800d01a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d01e:	e7fe      	b.n	800d01e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d020:	9b02      	ldr	r3, [sp, #8]
 800d022:	4a22      	ldr	r2, [pc, #136]	; (800d0ac <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d024:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d028:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d02c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d02e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d030:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d032:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d036:	4c20      	ldr	r4, [pc, #128]	; (800d0b8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d038:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d03c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d040:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d044:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d048:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d04c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d04e:	f7ff ff7f 	bl	800cf50 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d052:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d054:	f7ff fea8 	bl	800cda8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d058:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d05c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d060:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d064:	f7ff fe8c 	bl	800cd80 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d068:	f001 fc98 	bl	800e99c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d06c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d06e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d070:	3301      	adds	r3, #1
 800d072:	d008      	beq.n	800d086 <xPortStartScheduler+0x10e>
 800d074:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d078:	f383 8811 	msr	BASEPRI, r3
 800d07c:	f3bf 8f6f 	isb	sy
 800d080:	f3bf 8f4f 	dsb	sy
 800d084:	e7fe      	b.n	800d084 <xPortStartScheduler+0x10c>
 800d086:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d08a:	f383 8811 	msr	BASEPRI, r3
 800d08e:	f3bf 8f6f 	isb	sy
 800d092:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d096:	9b03      	ldr	r3, [sp, #12]
 800d098:	2b00      	cmp	r3, #0
 800d09a:	d0fc      	beq.n	800d096 <xPortStartScheduler+0x11e>
}
 800d09c:	2000      	movs	r0, #0
 800d09e:	b004      	add	sp, #16
 800d0a0:	bd70      	pop	{r4, r5, r6, pc}
 800d0a2:	bf00      	nop
 800d0a4:	410fc271 	.word	0x410fc271
 800d0a8:	410fc270 	.word	0x410fc270
 800d0ac:	e000e400 	.word	0xe000e400
 800d0b0:	20012728 	.word	0x20012728
 800d0b4:	2001272c 	.word	0x2001272c
 800d0b8:	20000084 	.word	0x20000084

0800d0bc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d0bc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d0c0:	2b0f      	cmp	r3, #15
 800d0c2:	d90e      	bls.n	800d0e2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d0c4:	4911      	ldr	r1, [pc, #68]	; (800d10c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d0c6:	4a12      	ldr	r2, [pc, #72]	; (800d110 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d0c8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d0ca:	7812      	ldrb	r2, [r2, #0]
 800d0cc:	429a      	cmp	r2, r3
 800d0ce:	d908      	bls.n	800d0e2 <vPortValidateInterruptPriority+0x26>
 800d0d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0d4:	f383 8811 	msr	BASEPRI, r3
 800d0d8:	f3bf 8f6f 	isb	sy
 800d0dc:	f3bf 8f4f 	dsb	sy
 800d0e0:	e7fe      	b.n	800d0e0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d0e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d0e6:	4a0b      	ldr	r2, [pc, #44]	; (800d114 <vPortValidateInterruptPriority+0x58>)
 800d0e8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d0ec:	6812      	ldr	r2, [r2, #0]
 800d0ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d0f2:	4293      	cmp	r3, r2
 800d0f4:	d908      	bls.n	800d108 <vPortValidateInterruptPriority+0x4c>
 800d0f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0fa:	f383 8811 	msr	BASEPRI, r3
 800d0fe:	f3bf 8f6f 	isb	sy
 800d102:	f3bf 8f4f 	dsb	sy
 800d106:	e7fe      	b.n	800d106 <vPortValidateInterruptPriority+0x4a>
	}
 800d108:	4770      	bx	lr
 800d10a:	bf00      	nop
 800d10c:	e000e3f0 	.word	0xe000e3f0
 800d110:	20012728 	.word	0x20012728
 800d114:	2001272c 	.word	0x2001272c

0800d118 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d118:	b570      	push	{r4, r5, r6, lr}
 800d11a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d11c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d11e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d120:	b920      	cbnz	r0, 800d12c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d122:	6825      	ldr	r5, [r4, #0]
 800d124:	b34d      	cbz	r5, 800d17a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d126:	3601      	adds	r6, #1
 800d128:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d12a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d12c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d12e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d130:	b97d      	cbnz	r5, 800d152 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d132:	6860      	ldr	r0, [r4, #4]
 800d134:	f01c fee9 	bl	8029f0a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d138:	6863      	ldr	r3, [r4, #4]
 800d13a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d13c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d13e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d140:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d142:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d144:	bf24      	itt	cs
 800d146:	6823      	ldrcs	r3, [r4, #0]
 800d148:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d14a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d14c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d14e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d150:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d152:	68e0      	ldr	r0, [r4, #12]
 800d154:	f01c fed9 	bl	8029f0a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d158:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d15a:	68e3      	ldr	r3, [r4, #12]
 800d15c:	4251      	negs	r1, r2
 800d15e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d160:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d162:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d164:	4293      	cmp	r3, r2
 800d166:	d202      	bcs.n	800d16e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d168:	68a3      	ldr	r3, [r4, #8]
 800d16a:	440b      	add	r3, r1
 800d16c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d16e:	2d02      	cmp	r5, #2
 800d170:	d008      	beq.n	800d184 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d172:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d174:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d176:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d178:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d17a:	68a0      	ldr	r0, [r4, #8]
 800d17c:	f001 fde0 	bl	800ed40 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d180:	60a5      	str	r5, [r4, #8]
 800d182:	e7d0      	b.n	800d126 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d184:	2e01      	cmp	r6, #1
 800d186:	bf38      	it	cc
 800d188:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d18a:	2000      	movs	r0, #0
 800d18c:	e7cc      	b.n	800d128 <prvCopyDataToQueue+0x10>
 800d18e:	bf00      	nop

0800d190 <xQueueGenericCreateStatic>:
	{
 800d190:	b530      	push	{r4, r5, lr}
 800d192:	b083      	sub	sp, #12
 800d194:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d198:	b940      	cbnz	r0, 800d1ac <xQueueGenericCreateStatic+0x1c>
 800d19a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d19e:	f383 8811 	msr	BASEPRI, r3
 800d1a2:	f3bf 8f6f 	isb	sy
 800d1a6:	f3bf 8f4f 	dsb	sy
 800d1aa:	e7fe      	b.n	800d1aa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d1ac:	461d      	mov	r5, r3
 800d1ae:	b17b      	cbz	r3, 800d1d0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d1b0:	b302      	cbz	r2, 800d1f4 <xQueueGenericCreateStatic+0x64>
 800d1b2:	b1b1      	cbz	r1, 800d1e2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d1b4:	2350      	movs	r3, #80	; 0x50
 800d1b6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d1b8:	9b01      	ldr	r3, [sp, #4]
 800d1ba:	2b50      	cmp	r3, #80	; 0x50
 800d1bc:	d023      	beq.n	800d206 <xQueueGenericCreateStatic+0x76>
 800d1be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1c2:	f383 8811 	msr	BASEPRI, r3
 800d1c6:	f3bf 8f6f 	isb	sy
 800d1ca:	f3bf 8f4f 	dsb	sy
 800d1ce:	e7fe      	b.n	800d1ce <xQueueGenericCreateStatic+0x3e>
 800d1d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1d4:	f383 8811 	msr	BASEPRI, r3
 800d1d8:	f3bf 8f6f 	isb	sy
 800d1dc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d1e0:	e7fe      	b.n	800d1e0 <xQueueGenericCreateStatic+0x50>
 800d1e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1e6:	f383 8811 	msr	BASEPRI, r3
 800d1ea:	f3bf 8f6f 	isb	sy
 800d1ee:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d1f2:	e7fe      	b.n	800d1f2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d1f4:	bb89      	cbnz	r1, 800d25a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d1f6:	2250      	movs	r2, #80	; 0x50
 800d1f8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d1fa:	9a01      	ldr	r2, [sp, #4]
 800d1fc:	2a50      	cmp	r2, #80	; 0x50
 800d1fe:	d1de      	bne.n	800d1be <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d200:	9a01      	ldr	r2, [sp, #4]
 800d202:	462a      	mov	r2, r5
 800d204:	e000      	b.n	800d208 <xQueueGenericCreateStatic+0x78>
 800d206:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d208:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d20a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d20c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d210:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d214:	f7ff fe1e 	bl	800ce54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d218:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d21c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d21e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d220:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d224:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d226:	4401      	add	r1, r0
 800d228:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d22a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d22c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d22e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d230:	21ff      	movs	r1, #255	; 0xff
 800d232:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d236:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d238:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d23c:	f105 0010 	add.w	r0, r5, #16
 800d240:	f7ff fd52 	bl	800cce8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d244:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d248:	f7ff fd4e 	bl	800cce8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d24c:	f7ff fe24 	bl	800ce98 <vPortExitCritical>
	}
 800d250:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d252:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d256:	b003      	add	sp, #12
 800d258:	bd30      	pop	{r4, r5, pc}
 800d25a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d25e:	f383 8811 	msr	BASEPRI, r3
 800d262:	f3bf 8f6f 	isb	sy
 800d266:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d26a:	e7fe      	b.n	800d26a <xQueueGenericCreateStatic+0xda>

0800d26c <xQueueGenericCreate>:
	{
 800d26c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d26e:	b940      	cbnz	r0, 800d282 <xQueueGenericCreate+0x16>
 800d270:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d274:	f383 8811 	msr	BASEPRI, r3
 800d278:	f3bf 8f6f 	isb	sy
 800d27c:	f3bf 8f4f 	dsb	sy
 800d280:	e7fe      	b.n	800d280 <xQueueGenericCreate+0x14>
 800d282:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d284:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d288:	3050      	adds	r0, #80	; 0x50
 800d28a:	460e      	mov	r6, r1
 800d28c:	4617      	mov	r7, r2
 800d28e:	f7ff fc0b 	bl	800caa8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d292:	4604      	mov	r4, r0
 800d294:	b340      	cbz	r0, 800d2e8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d296:	2300      	movs	r3, #0
 800d298:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d29c:	b336      	cbz	r6, 800d2ec <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d29e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d2a2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d2a4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d2a8:	f7ff fdd4 	bl	800ce54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2ac:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d2b0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d2b2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2b4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2b8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2ba:	440a      	add	r2, r1
 800d2bc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d2be:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2c0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d2c2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d2c4:	22ff      	movs	r2, #255	; 0xff
 800d2c6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2ca:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d2cc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d2d0:	f104 0010 	add.w	r0, r4, #16
 800d2d4:	f7ff fd08 	bl	800cce8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d2d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d2dc:	f7ff fd04 	bl	800cce8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d2e0:	f7ff fdda 	bl	800ce98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d2e4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d2e8:	4620      	mov	r0, r4
 800d2ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d2ec:	4603      	mov	r3, r0
 800d2ee:	e7d8      	b.n	800d2a2 <xQueueGenericCreate+0x36>

0800d2f0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d2f0:	b940      	cbnz	r0, 800d304 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d2f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f6:	f383 8811 	msr	BASEPRI, r3
 800d2fa:	f3bf 8f6f 	isb	sy
 800d2fe:	f3bf 8f4f 	dsb	sy
 800d302:	e7fe      	b.n	800d302 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d304:	4288      	cmp	r0, r1
 800d306:	d208      	bcs.n	800d31a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d308:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d30c:	f383 8811 	msr	BASEPRI, r3
 800d310:	f3bf 8f6f 	isb	sy
 800d314:	f3bf 8f4f 	dsb	sy
 800d318:	e7fe      	b.n	800d318 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d31a:	b530      	push	{r4, r5, lr}
 800d31c:	4615      	mov	r5, r2
 800d31e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d320:	2a00      	cmp	r2, #0
 800d322:	d03c      	beq.n	800d39e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d324:	2350      	movs	r3, #80	; 0x50
 800d326:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d328:	9b03      	ldr	r3, [sp, #12]
 800d32a:	2b50      	cmp	r3, #80	; 0x50
 800d32c:	d008      	beq.n	800d340 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d32e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d332:	f383 8811 	msr	BASEPRI, r3
 800d336:	f3bf 8f6f 	isb	sy
 800d33a:	f3bf 8f4f 	dsb	sy
 800d33e:	e7fe      	b.n	800d33e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d340:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d342:	2301      	movs	r3, #1
 800d344:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d348:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d34a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d34e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d350:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d352:	f7ff fd7f 	bl	800ce54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d356:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d35a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d35c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d35e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d362:	1ac3      	subs	r3, r0, r3
 800d364:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d366:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d368:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d36c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d370:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d372:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d374:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d378:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d37a:	f105 0010 	add.w	r0, r5, #16
 800d37e:	f7ff fcb3 	bl	800cce8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d382:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d386:	f7ff fcaf 	bl	800cce8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d38a:	f7ff fd85 	bl	800ce98 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d38e:	9901      	ldr	r1, [sp, #4]
 800d390:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d392:	2302      	movs	r3, #2
	}
 800d394:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d396:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d39a:	b005      	add	sp, #20
 800d39c:	bd30      	pop	{r4, r5, pc}
 800d39e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3a2:	f383 8811 	msr	BASEPRI, r3
 800d3a6:	f3bf 8f6f 	isb	sy
 800d3aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d3ae:	e7fe      	b.n	800d3ae <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d3b0 <xQueueCreateCountingSemaphore>:
	{
 800d3b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d3b2:	b940      	cbnz	r0, 800d3c6 <xQueueCreateCountingSemaphore+0x16>
 800d3b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3b8:	f383 8811 	msr	BASEPRI, r3
 800d3bc:	f3bf 8f6f 	isb	sy
 800d3c0:	f3bf 8f4f 	dsb	sy
 800d3c4:	e7fe      	b.n	800d3c4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d3c6:	4288      	cmp	r0, r1
 800d3c8:	460e      	mov	r6, r1
 800d3ca:	4604      	mov	r4, r0
 800d3cc:	d208      	bcs.n	800d3e0 <xQueueCreateCountingSemaphore+0x30>
 800d3ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3d2:	f383 8811 	msr	BASEPRI, r3
 800d3d6:	f3bf 8f6f 	isb	sy
 800d3da:	f3bf 8f4f 	dsb	sy
 800d3de:	e7fe      	b.n	800d3de <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d3e0:	2050      	movs	r0, #80	; 0x50
 800d3e2:	f7ff fb61 	bl	800caa8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d3e6:	4605      	mov	r5, r0
 800d3e8:	b330      	cbz	r0, 800d438 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d3ea:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d3ec:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d3f0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d3f4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d3f6:	f7ff fd2d 	bl	800ce54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d3fa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d3fe:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d400:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d402:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d406:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d408:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d40a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d40c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d40e:	22ff      	movs	r2, #255	; 0xff
 800d410:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d414:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d416:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d418:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d41c:	f105 0010 	add.w	r0, r5, #16
 800d420:	f7ff fc62 	bl	800cce8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d424:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d428:	f7ff fc5e 	bl	800cce8 <vListInitialise>
	taskEXIT_CRITICAL();
 800d42c:	f7ff fd34 	bl	800ce98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d430:	2302      	movs	r3, #2
 800d432:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d436:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d438:	4628      	mov	r0, r5
 800d43a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d43c <xQueueGenericSend>:
{
 800d43c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d440:	b085      	sub	sp, #20
 800d442:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d444:	2800      	cmp	r0, #0
 800d446:	f000 80a4 	beq.w	800d592 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d44a:	4688      	mov	r8, r1
 800d44c:	461f      	mov	r7, r3
 800d44e:	4604      	mov	r4, r0
 800d450:	2900      	cmp	r1, #0
 800d452:	f000 8091 	beq.w	800d578 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d456:	2f02      	cmp	r7, #2
 800d458:	d10b      	bne.n	800d472 <xQueueGenericSend+0x36>
 800d45a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d45c:	2b01      	cmp	r3, #1
 800d45e:	d008      	beq.n	800d472 <xQueueGenericSend+0x36>
 800d460:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d464:	f383 8811 	msr	BASEPRI, r3
 800d468:	f3bf 8f6f 	isb	sy
 800d46c:	f3bf 8f4f 	dsb	sy
 800d470:	e7fe      	b.n	800d470 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d472:	f001 fc0f 	bl	800ec94 <xTaskGetSchedulerState>
 800d476:	4605      	mov	r5, r0
 800d478:	2800      	cmp	r0, #0
 800d47a:	f000 8093 	beq.w	800d5a4 <xQueueGenericSend+0x168>
 800d47e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d480:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d484:	f7ff fce6 	bl	800ce54 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d488:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d48a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d48c:	429a      	cmp	r2, r3
 800d48e:	f0c0 80ef 	bcc.w	800d670 <xQueueGenericSend+0x234>
 800d492:	2f02      	cmp	r7, #2
 800d494:	f000 80ec 	beq.w	800d670 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d498:	9801      	ldr	r0, [sp, #4]
 800d49a:	2800      	cmp	r0, #0
 800d49c:	f000 8101 	beq.w	800d6a2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d4a0:	2d00      	cmp	r5, #0
 800d4a2:	f000 80e1 	beq.w	800d668 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d4a6:	f7ff fcf7 	bl	800ce98 <vPortExitCritical>
		vTaskSuspendAll();
 800d4aa:	f001 fa49 	bl	800e940 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d4ae:	f7ff fcd1 	bl	800ce54 <vPortEnterCritical>
 800d4b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d4b6:	2bff      	cmp	r3, #255	; 0xff
 800d4b8:	bf04      	itt	eq
 800d4ba:	2300      	moveq	r3, #0
 800d4bc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d4c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d4c4:	2bff      	cmp	r3, #255	; 0xff
 800d4c6:	bf04      	itt	eq
 800d4c8:	2300      	moveq	r3, #0
 800d4ca:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d4ce:	f7ff fce3 	bl	800ce98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d4d2:	a901      	add	r1, sp, #4
 800d4d4:	a802      	add	r0, sp, #8
 800d4d6:	f001 fb8f 	bl	800ebf8 <xTaskCheckForTimeOut>
 800d4da:	2800      	cmp	r0, #0
 800d4dc:	f040 80e6 	bne.w	800d6ac <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d4e0:	f7ff fcb8 	bl	800ce54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d4e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d4e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d4e8:	429a      	cmp	r2, r3
 800d4ea:	d068      	beq.n	800d5be <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d4ec:	f7ff fcd4 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d4f0:	f7ff fcb0 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d4f4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d4f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d4fa:	2d00      	cmp	r5, #0
 800d4fc:	dc04      	bgt.n	800d508 <xQueueGenericSend+0xcc>
 800d4fe:	e011      	b.n	800d524 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d500:	1e6a      	subs	r2, r5, #1
 800d502:	b2d3      	uxtb	r3, r2
 800d504:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d506:	b16b      	cbz	r3, 800d524 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d508:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d50a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d50c:	b153      	cbz	r3, 800d524 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d50e:	f001 fb1f 	bl	800eb50 <xTaskRemoveFromEventList>
 800d512:	2800      	cmp	r0, #0
 800d514:	d0f4      	beq.n	800d500 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d516:	f001 fbb7 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800d51a:	1e6a      	subs	r2, r5, #1
 800d51c:	b2d3      	uxtb	r3, r2
 800d51e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d520:	2b00      	cmp	r3, #0
 800d522:	d1f1      	bne.n	800d508 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d524:	23ff      	movs	r3, #255	; 0xff
 800d526:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d52a:	f7ff fcb5 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d52e:	f7ff fc91 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d532:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d536:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d538:	2d00      	cmp	r5, #0
 800d53a:	dd14      	ble.n	800d566 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d53c:	f104 0910 	add.w	r9, r4, #16
 800d540:	e003      	b.n	800d54a <xQueueGenericSend+0x10e>
				--cRxLock;
 800d542:	1e6a      	subs	r2, r5, #1
 800d544:	b2d3      	uxtb	r3, r2
 800d546:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d548:	b16b      	cbz	r3, 800d566 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d54a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d54c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d54e:	b153      	cbz	r3, 800d566 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d550:	f001 fafe 	bl	800eb50 <xTaskRemoveFromEventList>
 800d554:	2800      	cmp	r0, #0
 800d556:	d0f4      	beq.n	800d542 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d558:	f001 fb96 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800d55c:	1e6a      	subs	r2, r5, #1
 800d55e:	b2d3      	uxtb	r3, r2
 800d560:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d562:	2b00      	cmp	r3, #0
 800d564:	d1f1      	bne.n	800d54a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d566:	23ff      	movs	r3, #255	; 0xff
 800d568:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d56c:	f7ff fc94 	bl	800ce98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d570:	f001 f9ee 	bl	800e950 <xTaskResumeAll>
 800d574:	2501      	movs	r5, #1
 800d576:	e785      	b.n	800d484 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d578:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d57a:	2b00      	cmp	r3, #0
 800d57c:	f43f af6b 	beq.w	800d456 <xQueueGenericSend+0x1a>
 800d580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d584:	f383 8811 	msr	BASEPRI, r3
 800d588:	f3bf 8f6f 	isb	sy
 800d58c:	f3bf 8f4f 	dsb	sy
 800d590:	e7fe      	b.n	800d590 <xQueueGenericSend+0x154>
 800d592:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d596:	f383 8811 	msr	BASEPRI, r3
 800d59a:	f3bf 8f6f 	isb	sy
 800d59e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d5a2:	e7fe      	b.n	800d5a2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d5a4:	9b01      	ldr	r3, [sp, #4]
 800d5a6:	2b00      	cmp	r3, #0
 800d5a8:	f43f af6a 	beq.w	800d480 <xQueueGenericSend+0x44>
 800d5ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5b0:	f383 8811 	msr	BASEPRI, r3
 800d5b4:	f3bf 8f6f 	isb	sy
 800d5b8:	f3bf 8f4f 	dsb	sy
 800d5bc:	e7fe      	b.n	800d5bc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d5be:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d5c2:	f7ff fc69 	bl	800ce98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d5c6:	9901      	ldr	r1, [sp, #4]
 800d5c8:	4648      	mov	r0, r9
 800d5ca:	f001 fa33 	bl	800ea34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d5ce:	f7ff fc41 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d5d2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d5d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5d8:	2d00      	cmp	r5, #0
 800d5da:	dc04      	bgt.n	800d5e6 <xQueueGenericSend+0x1aa>
 800d5dc:	e011      	b.n	800d602 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d5de:	1e6b      	subs	r3, r5, #1
 800d5e0:	b2da      	uxtb	r2, r3
 800d5e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5e4:	b16a      	cbz	r2, 800d602 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5e8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5ea:	b153      	cbz	r3, 800d602 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ec:	f001 fab0 	bl	800eb50 <xTaskRemoveFromEventList>
 800d5f0:	2800      	cmp	r0, #0
 800d5f2:	d0f4      	beq.n	800d5de <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d5f4:	f001 fb48 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800d5f8:	1e6b      	subs	r3, r5, #1
 800d5fa:	b2da      	uxtb	r2, r3
 800d5fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5fe:	2a00      	cmp	r2, #0
 800d600:	d1f1      	bne.n	800d5e6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d602:	23ff      	movs	r3, #255	; 0xff
 800d604:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d608:	f7ff fc46 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d60c:	f7ff fc22 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d610:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d614:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d616:	2d00      	cmp	r5, #0
 800d618:	dc04      	bgt.n	800d624 <xQueueGenericSend+0x1e8>
 800d61a:	e011      	b.n	800d640 <xQueueGenericSend+0x204>
				--cRxLock;
 800d61c:	1e6b      	subs	r3, r5, #1
 800d61e:	b2da      	uxtb	r2, r3
 800d620:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d622:	b16a      	cbz	r2, 800d640 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d624:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d626:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d628:	b153      	cbz	r3, 800d640 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d62a:	f001 fa91 	bl	800eb50 <xTaskRemoveFromEventList>
 800d62e:	2800      	cmp	r0, #0
 800d630:	d0f4      	beq.n	800d61c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d632:	f001 fb29 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800d636:	1e6b      	subs	r3, r5, #1
 800d638:	b2da      	uxtb	r2, r3
 800d63a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d63c:	2a00      	cmp	r2, #0
 800d63e:	d1f1      	bne.n	800d624 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d640:	23ff      	movs	r3, #255	; 0xff
 800d642:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d646:	f7ff fc27 	bl	800ce98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d64a:	f001 f981 	bl	800e950 <xTaskResumeAll>
 800d64e:	2800      	cmp	r0, #0
 800d650:	d190      	bne.n	800d574 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d652:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d656:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d65a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d65e:	f3bf 8f4f 	dsb	sy
 800d662:	f3bf 8f6f 	isb	sy
 800d666:	e785      	b.n	800d574 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d668:	a802      	add	r0, sp, #8
 800d66a:	f001 fab9 	bl	800ebe0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d66e:	e71a      	b.n	800d4a6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d670:	463a      	mov	r2, r7
 800d672:	4641      	mov	r1, r8
 800d674:	4620      	mov	r0, r4
 800d676:	f7ff fd4f 	bl	800d118 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d67a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d67c:	2b00      	cmp	r3, #0
 800d67e:	d153      	bne.n	800d728 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800d680:	b148      	cbz	r0, 800d696 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800d682:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d686:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d68a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d68e:	f3bf 8f4f 	dsb	sy
 800d692:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d696:	f7ff fbff 	bl	800ce98 <vPortExitCritical>
				return pdPASS;
 800d69a:	2001      	movs	r0, #1
}
 800d69c:	b005      	add	sp, #20
 800d69e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d6a2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800d6a4:	f7ff fbf8 	bl	800ce98 <vPortExitCritical>
					return errQUEUE_FULL;
 800d6a8:	9800      	ldr	r0, [sp, #0]
 800d6aa:	e7f7      	b.n	800d69c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800d6ac:	f7ff fbd2 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d6b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d6b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d6b6:	2d00      	cmp	r5, #0
 800d6b8:	dd10      	ble.n	800d6dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d6ba:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800d6be:	e003      	b.n	800d6c8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800d6c0:	1e6b      	subs	r3, r5, #1
 800d6c2:	b2da      	uxtb	r2, r3
 800d6c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d6c6:	b14a      	cbz	r2, 800d6dc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d6c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d6ca:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d6cc:	b133      	cbz	r3, 800d6dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d6ce:	f001 fa3f 	bl	800eb50 <xTaskRemoveFromEventList>
 800d6d2:	2800      	cmp	r0, #0
 800d6d4:	d0f4      	beq.n	800d6c0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800d6d6:	f001 fad7 	bl	800ec88 <vTaskMissedYield>
 800d6da:	e7f1      	b.n	800d6c0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800d6dc:	23ff      	movs	r3, #255	; 0xff
 800d6de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d6e2:	f7ff fbd9 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d6e6:	f7ff fbb5 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d6ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d6ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6f0:	2d00      	cmp	r5, #0
 800d6f2:	dd10      	ble.n	800d716 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d6f4:	f104 0610 	add.w	r6, r4, #16
 800d6f8:	e003      	b.n	800d702 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800d6fa:	1e6b      	subs	r3, r5, #1
 800d6fc:	b2da      	uxtb	r2, r3
 800d6fe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d700:	b14a      	cbz	r2, 800d716 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d702:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d704:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d706:	b133      	cbz	r3, 800d716 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d708:	f001 fa22 	bl	800eb50 <xTaskRemoveFromEventList>
 800d70c:	2800      	cmp	r0, #0
 800d70e:	d0f4      	beq.n	800d6fa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800d710:	f001 faba 	bl	800ec88 <vTaskMissedYield>
 800d714:	e7f1      	b.n	800d6fa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800d716:	23ff      	movs	r3, #255	; 0xff
 800d718:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d71c:	f7ff fbbc 	bl	800ce98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d720:	f001 f916 	bl	800e950 <xTaskResumeAll>
			return errQUEUE_FULL;
 800d724:	2000      	movs	r0, #0
 800d726:	e7b9      	b.n	800d69c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d728:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d72c:	f001 fa10 	bl	800eb50 <xTaskRemoveFromEventList>
 800d730:	2800      	cmp	r0, #0
 800d732:	d0b0      	beq.n	800d696 <xQueueGenericSend+0x25a>
 800d734:	e7a5      	b.n	800d682 <xQueueGenericSend+0x246>
 800d736:	bf00      	nop

0800d738 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800d738:	2800      	cmp	r0, #0
 800d73a:	d04b      	beq.n	800d7d4 <xQueueGenericSendFromISR+0x9c>
{
 800d73c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d740:	460e      	mov	r6, r1
 800d742:	4617      	mov	r7, r2
 800d744:	461d      	mov	r5, r3
 800d746:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d748:	b321      	cbz	r1, 800d794 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d74a:	2d02      	cmp	r5, #2
 800d74c:	d10b      	bne.n	800d766 <xQueueGenericSendFromISR+0x2e>
 800d74e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d750:	2b01      	cmp	r3, #1
 800d752:	d008      	beq.n	800d766 <xQueueGenericSendFromISR+0x2e>
 800d754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d758:	f383 8811 	msr	BASEPRI, r3
 800d75c:	f3bf 8f6f 	isb	sy
 800d760:	f3bf 8f4f 	dsb	sy
 800d764:	e7fe      	b.n	800d764 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d766:	f7ff fca9 	bl	800d0bc <vPortValidateInterruptPriority>
	__asm volatile
 800d76a:	f3ef 8811 	mrs	r8, BASEPRI
 800d76e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d772:	f383 8811 	msr	BASEPRI, r3
 800d776:	f3bf 8f6f 	isb	sy
 800d77a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d77e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d780:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d782:	429a      	cmp	r2, r3
 800d784:	d312      	bcc.n	800d7ac <xQueueGenericSendFromISR+0x74>
 800d786:	2d02      	cmp	r5, #2
 800d788:	d010      	beq.n	800d7ac <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800d78a:	2000      	movs	r0, #0
	__asm volatile
 800d78c:	f388 8811 	msr	BASEPRI, r8
}
 800d790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d794:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d796:	2b00      	cmp	r3, #0
 800d798:	d0d7      	beq.n	800d74a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800d79a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d79e:	f383 8811 	msr	BASEPRI, r3
 800d7a2:	f3bf 8f6f 	isb	sy
 800d7a6:	f3bf 8f4f 	dsb	sy
 800d7aa:	e7fe      	b.n	800d7aa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d7ac:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800d7ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d7b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d7b4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800d7b6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d7b8:	4620      	mov	r0, r4
 800d7ba:	f7ff fcad 	bl	800d118 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d7be:	1c6b      	adds	r3, r5, #1
 800d7c0:	d011      	beq.n	800d7e6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d7c2:	1c6b      	adds	r3, r5, #1
 800d7c4:	b25b      	sxtb	r3, r3
 800d7c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800d7ca:	2001      	movs	r0, #1
	__asm volatile
 800d7cc:	f388 8811 	msr	BASEPRI, r8
}
 800d7d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800d7d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7d8:	f383 8811 	msr	BASEPRI, r3
 800d7dc:	f3bf 8f6f 	isb	sy
 800d7e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d7e4:	e7fe      	b.n	800d7e4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d7e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d7e8:	2b00      	cmp	r3, #0
 800d7ea:	d0ee      	beq.n	800d7ca <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d7ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d7f0:	f001 f9ae 	bl	800eb50 <xTaskRemoveFromEventList>
 800d7f4:	2800      	cmp	r0, #0
 800d7f6:	d0e8      	beq.n	800d7ca <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d7f8:	2f00      	cmp	r7, #0
 800d7fa:	d0e6      	beq.n	800d7ca <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d7fc:	2001      	movs	r0, #1
 800d7fe:	6038      	str	r0, [r7, #0]
 800d800:	e7c4      	b.n	800d78c <xQueueGenericSendFromISR+0x54>
 800d802:	bf00      	nop

0800d804 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800d804:	b370      	cbz	r0, 800d864 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d806:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800d808:	b570      	push	{r4, r5, r6, lr}
 800d80a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800d80c:	b143      	cbz	r3, 800d820 <xQueueGiveFromISR+0x1c>
 800d80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d812:	f383 8811 	msr	BASEPRI, r3
 800d816:	f3bf 8f6f 	isb	sy
 800d81a:	f3bf 8f4f 	dsb	sy
 800d81e:	e7fe      	b.n	800d81e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d820:	6803      	ldr	r3, [r0, #0]
 800d822:	460c      	mov	r4, r1
 800d824:	b33b      	cbz	r3, 800d876 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d826:	f7ff fc49 	bl	800d0bc <vPortValidateInterruptPriority>
	__asm volatile
 800d82a:	f3ef 8511 	mrs	r5, BASEPRI
 800d82e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d832:	f383 8811 	msr	BASEPRI, r3
 800d836:	f3bf 8f6f 	isb	sy
 800d83a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d83e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800d840:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800d842:	429a      	cmp	r2, r3
 800d844:	d923      	bls.n	800d88e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d846:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d84a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800d84c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d84e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d850:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800d852:	d020      	beq.n	800d896 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d854:	3301      	adds	r3, #1
 800d856:	b25b      	sxtb	r3, r3
 800d858:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800d85c:	2001      	movs	r0, #1
	__asm volatile
 800d85e:	f385 8811 	msr	BASEPRI, r5
}
 800d862:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800d864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d868:	f383 8811 	msr	BASEPRI, r3
 800d86c:	f3bf 8f6f 	isb	sy
 800d870:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d874:	e7fe      	b.n	800d874 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d876:	6883      	ldr	r3, [r0, #8]
 800d878:	2b00      	cmp	r3, #0
 800d87a:	d0d4      	beq.n	800d826 <xQueueGiveFromISR+0x22>
 800d87c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d880:	f383 8811 	msr	BASEPRI, r3
 800d884:	f3bf 8f6f 	isb	sy
 800d888:	f3bf 8f4f 	dsb	sy
 800d88c:	e7fe      	b.n	800d88c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800d88e:	2000      	movs	r0, #0
	__asm volatile
 800d890:	f385 8811 	msr	BASEPRI, r5
}
 800d894:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d896:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800d898:	2b00      	cmp	r3, #0
 800d89a:	d0df      	beq.n	800d85c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d89c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800d8a0:	f001 f956 	bl	800eb50 <xTaskRemoveFromEventList>
 800d8a4:	2800      	cmp	r0, #0
 800d8a6:	d0d9      	beq.n	800d85c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800d8a8:	2c00      	cmp	r4, #0
 800d8aa:	d0d7      	beq.n	800d85c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d8ac:	2001      	movs	r0, #1
 800d8ae:	6020      	str	r0, [r4, #0]
 800d8b0:	e7ee      	b.n	800d890 <xQueueGiveFromISR+0x8c>
 800d8b2:	bf00      	nop

0800d8b4 <xQueueReceive>:
{
 800d8b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8b8:	b085      	sub	sp, #20
 800d8ba:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d8bc:	2800      	cmp	r0, #0
 800d8be:	f000 815c 	beq.w	800db7a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8c2:	460f      	mov	r7, r1
 800d8c4:	4604      	mov	r4, r0
 800d8c6:	2900      	cmp	r1, #0
 800d8c8:	d079      	beq.n	800d9be <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d8ca:	f001 f9e3 	bl	800ec94 <xTaskGetSchedulerState>
 800d8ce:	2800      	cmp	r0, #0
 800d8d0:	f000 8081 	beq.w	800d9d6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800d8d4:	f7ff fabe 	bl	800ce54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d8d8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d8da:	2d00      	cmp	r5, #0
 800d8dc:	f040 8138 	bne.w	800db50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d8e0:	9b01      	ldr	r3, [sp, #4]
 800d8e2:	2b00      	cmp	r3, #0
 800d8e4:	f000 80d5 	beq.w	800da92 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d8e8:	a802      	add	r0, sp, #8
 800d8ea:	f001 f979 	bl	800ebe0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800d8ee:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8f0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800d8f4:	f7ff fad0 	bl	800ce98 <vPortExitCritical>
		vTaskSuspendAll();
 800d8f8:	f001 f822 	bl	800e940 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d8fc:	f7ff faaa 	bl	800ce54 <vPortEnterCritical>
 800d900:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d904:	2bff      	cmp	r3, #255	; 0xff
 800d906:	bf08      	it	eq
 800d908:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800d90c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d910:	2bff      	cmp	r3, #255	; 0xff
 800d912:	bf08      	it	eq
 800d914:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800d918:	f7ff fabe 	bl	800ce98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d91c:	a901      	add	r1, sp, #4
 800d91e:	a802      	add	r0, sp, #8
 800d920:	f001 f96a 	bl	800ebf8 <xTaskCheckForTimeOut>
 800d924:	2800      	cmp	r0, #0
 800d926:	d163      	bne.n	800d9f0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800d928:	f7ff fa94 	bl	800ce54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d92c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d92e:	2b00      	cmp	r3, #0
 800d930:	f000 80b5 	beq.w	800da9e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800d934:	f7ff fab0 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d938:	f7ff fa8c 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d93c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d940:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d942:	2d00      	cmp	r5, #0
 800d944:	dc04      	bgt.n	800d950 <xQueueReceive+0x9c>
 800d946:	e011      	b.n	800d96c <xQueueReceive+0xb8>
			--cTxLock;
 800d948:	1e6b      	subs	r3, r5, #1
 800d94a:	b2da      	uxtb	r2, r3
 800d94c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d94e:	b16a      	cbz	r2, 800d96c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d950:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d952:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d954:	b153      	cbz	r3, 800d96c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d956:	f001 f8fb 	bl	800eb50 <xTaskRemoveFromEventList>
 800d95a:	2800      	cmp	r0, #0
 800d95c:	d0f4      	beq.n	800d948 <xQueueReceive+0x94>
						vTaskMissedYield();
 800d95e:	f001 f993 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800d962:	1e6b      	subs	r3, r5, #1
 800d964:	b2da      	uxtb	r2, r3
 800d966:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d968:	2a00      	cmp	r2, #0
 800d96a:	d1f1      	bne.n	800d950 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800d96c:	23ff      	movs	r3, #255	; 0xff
 800d96e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d972:	f7ff fa91 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d976:	f7ff fa6d 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d97a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d97e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d980:	2d00      	cmp	r5, #0
 800d982:	dd14      	ble.n	800d9ae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d984:	f104 0910 	add.w	r9, r4, #16
 800d988:	e003      	b.n	800d992 <xQueueReceive+0xde>
				--cRxLock;
 800d98a:	1e6b      	subs	r3, r5, #1
 800d98c:	b2da      	uxtb	r2, r3
 800d98e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d990:	b16a      	cbz	r2, 800d9ae <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d992:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d994:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d996:	b153      	cbz	r3, 800d9ae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d998:	f001 f8da 	bl	800eb50 <xTaskRemoveFromEventList>
 800d99c:	2800      	cmp	r0, #0
 800d99e:	d0f4      	beq.n	800d98a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800d9a0:	f001 f972 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800d9a4:	1e6b      	subs	r3, r5, #1
 800d9a6:	b2da      	uxtb	r2, r3
 800d9a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9aa:	2a00      	cmp	r2, #0
 800d9ac:	d1f1      	bne.n	800d992 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800d9ae:	23ff      	movs	r3, #255	; 0xff
 800d9b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d9b4:	f7ff fa70 	bl	800ce98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d9b8:	f000 ffca 	bl	800e950 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800d9bc:	e060      	b.n	800da80 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d9be:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d9c0:	2b00      	cmp	r3, #0
 800d9c2:	d082      	beq.n	800d8ca <xQueueReceive+0x16>
	__asm volatile
 800d9c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9c8:	f383 8811 	msr	BASEPRI, r3
 800d9cc:	f3bf 8f6f 	isb	sy
 800d9d0:	f3bf 8f4f 	dsb	sy
 800d9d4:	e7fe      	b.n	800d9d4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d9d6:	9b01      	ldr	r3, [sp, #4]
 800d9d8:	2b00      	cmp	r3, #0
 800d9da:	f43f af7b 	beq.w	800d8d4 <xQueueReceive+0x20>
 800d9de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9e2:	f383 8811 	msr	BASEPRI, r3
 800d9e6:	f3bf 8f6f 	isb	sy
 800d9ea:	f3bf 8f4f 	dsb	sy
 800d9ee:	e7fe      	b.n	800d9ee <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800d9f0:	f7ff fa30 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d9f4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9fa:	2d00      	cmp	r5, #0
 800d9fc:	dc04      	bgt.n	800da08 <xQueueReceive+0x154>
 800d9fe:	e011      	b.n	800da24 <xQueueReceive+0x170>
			--cTxLock;
 800da00:	1e6b      	subs	r3, r5, #1
 800da02:	b2da      	uxtb	r2, r3
 800da04:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da06:	b16a      	cbz	r2, 800da24 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da08:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da0a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da0c:	b153      	cbz	r3, 800da24 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da0e:	f001 f89f 	bl	800eb50 <xTaskRemoveFromEventList>
 800da12:	2800      	cmp	r0, #0
 800da14:	d0f4      	beq.n	800da00 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800da16:	f001 f937 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800da1a:	1e6b      	subs	r3, r5, #1
 800da1c:	b2da      	uxtb	r2, r3
 800da1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da20:	2a00      	cmp	r2, #0
 800da22:	d1f1      	bne.n	800da08 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800da24:	23ff      	movs	r3, #255	; 0xff
 800da26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da2a:	f7ff fa35 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da2e:	f7ff fa11 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da32:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da36:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da38:	2d00      	cmp	r5, #0
 800da3a:	dd14      	ble.n	800da66 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da3c:	f104 0910 	add.w	r9, r4, #16
 800da40:	e003      	b.n	800da4a <xQueueReceive+0x196>
				--cRxLock;
 800da42:	1e6b      	subs	r3, r5, #1
 800da44:	b2da      	uxtb	r2, r3
 800da46:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da48:	b16a      	cbz	r2, 800da66 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da4a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da4c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da4e:	b153      	cbz	r3, 800da66 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da50:	f001 f87e 	bl	800eb50 <xTaskRemoveFromEventList>
 800da54:	2800      	cmp	r0, #0
 800da56:	d0f4      	beq.n	800da42 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800da58:	f001 f916 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800da5c:	1e6b      	subs	r3, r5, #1
 800da5e:	b2da      	uxtb	r2, r3
 800da60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da62:	2a00      	cmp	r2, #0
 800da64:	d1f1      	bne.n	800da4a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800da66:	23ff      	movs	r3, #255	; 0xff
 800da68:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da6c:	f7ff fa14 	bl	800ce98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800da70:	f000 ff6e 	bl	800e950 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800da74:	f7ff f9ee 	bl	800ce54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800da78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800da7a:	b153      	cbz	r3, 800da92 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800da7c:	f7ff fa0c 	bl	800ce98 <vPortExitCritical>
		taskENTER_CRITICAL();
 800da80:	f7ff f9e8 	bl	800ce54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800da84:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800da86:	2d00      	cmp	r5, #0
 800da88:	d162      	bne.n	800db50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800da8a:	9b01      	ldr	r3, [sp, #4]
 800da8c:	2b00      	cmp	r3, #0
 800da8e:	f47f af31 	bne.w	800d8f4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800da92:	f7ff fa01 	bl	800ce98 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800da96:	2000      	movs	r0, #0
}
 800da98:	b005      	add	sp, #20
 800da9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800da9e:	f7ff f9fb 	bl	800ce98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800daa2:	9901      	ldr	r1, [sp, #4]
 800daa4:	4630      	mov	r0, r6
 800daa6:	f000 ffc5 	bl	800ea34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800daaa:	f7ff f9d3 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800daae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dab2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dab4:	2d00      	cmp	r5, #0
 800dab6:	dc04      	bgt.n	800dac2 <xQueueReceive+0x20e>
 800dab8:	e011      	b.n	800dade <xQueueReceive+0x22a>
			--cTxLock;
 800daba:	1e6b      	subs	r3, r5, #1
 800dabc:	b2da      	uxtb	r2, r3
 800dabe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dac0:	b16a      	cbz	r2, 800dade <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dac2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dac4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dac6:	b153      	cbz	r3, 800dade <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dac8:	f001 f842 	bl	800eb50 <xTaskRemoveFromEventList>
 800dacc:	2800      	cmp	r0, #0
 800dace:	d0f4      	beq.n	800daba <xQueueReceive+0x206>
						vTaskMissedYield();
 800dad0:	f001 f8da 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800dad4:	1e6b      	subs	r3, r5, #1
 800dad6:	b2da      	uxtb	r2, r3
 800dad8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dada:	2a00      	cmp	r2, #0
 800dadc:	d1f1      	bne.n	800dac2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dade:	23ff      	movs	r3, #255	; 0xff
 800dae0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dae4:	f7ff f9d8 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dae8:	f7ff f9b4 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800daec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800daf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800daf2:	2d00      	cmp	r5, #0
 800daf4:	dd14      	ble.n	800db20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daf6:	f104 0910 	add.w	r9, r4, #16
 800dafa:	e003      	b.n	800db04 <xQueueReceive+0x250>
				--cRxLock;
 800dafc:	1e6b      	subs	r3, r5, #1
 800dafe:	b2da      	uxtb	r2, r3
 800db00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db02:	b16a      	cbz	r2, 800db20 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db06:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db08:	b153      	cbz	r3, 800db20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db0a:	f001 f821 	bl	800eb50 <xTaskRemoveFromEventList>
 800db0e:	2800      	cmp	r0, #0
 800db10:	d0f4      	beq.n	800dafc <xQueueReceive+0x248>
					vTaskMissedYield();
 800db12:	f001 f8b9 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800db16:	1e6b      	subs	r3, r5, #1
 800db18:	b2da      	uxtb	r2, r3
 800db1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db1c:	2a00      	cmp	r2, #0
 800db1e:	d1f1      	bne.n	800db04 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800db20:	23ff      	movs	r3, #255	; 0xff
 800db22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800db26:	f7ff f9b7 	bl	800ce98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800db2a:	f000 ff11 	bl	800e950 <xTaskResumeAll>
 800db2e:	2800      	cmp	r0, #0
 800db30:	d1a6      	bne.n	800da80 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800db32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db3e:	f3bf 8f4f 	dsb	sy
 800db42:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800db46:	f7ff f985 	bl	800ce54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db4a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800db4c:	2d00      	cmp	r5, #0
 800db4e:	d09c      	beq.n	800da8a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800db50:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800db52:	b152      	cbz	r2, 800db6a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db54:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800db56:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db58:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800db5a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db5c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800db5e:	bf24      	itt	cs
 800db60:	6821      	ldrcs	r1, [r4, #0]
 800db62:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800db64:	4638      	mov	r0, r7
 800db66:	f01c f9d0 	bl	8029f0a <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800db6a:	3d01      	subs	r5, #1
 800db6c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db6e:	6923      	ldr	r3, [r4, #16]
 800db70:	b963      	cbnz	r3, 800db8c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800db72:	f7ff f991 	bl	800ce98 <vPortExitCritical>
				return pdPASS;
 800db76:	2001      	movs	r0, #1
 800db78:	e78e      	b.n	800da98 <xQueueReceive+0x1e4>
 800db7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db7e:	f383 8811 	msr	BASEPRI, r3
 800db82:	f3bf 8f6f 	isb	sy
 800db86:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800db8a:	e7fe      	b.n	800db8a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db8c:	f104 0010 	add.w	r0, r4, #16
 800db90:	f000 ffde 	bl	800eb50 <xTaskRemoveFromEventList>
 800db94:	2800      	cmp	r0, #0
 800db96:	d0ec      	beq.n	800db72 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800db98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dba0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dba4:	f3bf 8f4f 	dsb	sy
 800dba8:	f3bf 8f6f 	isb	sy
 800dbac:	e7e1      	b.n	800db72 <xQueueReceive+0x2be>
 800dbae:	bf00      	nop

0800dbb0 <xQueueSemaphoreTake>:
{
 800dbb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbb4:	b084      	sub	sp, #16
 800dbb6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dbb8:	2800      	cmp	r0, #0
 800dbba:	d05c      	beq.n	800dc76 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dbbc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800dbbe:	4604      	mov	r4, r0
 800dbc0:	b147      	cbz	r7, 800dbd4 <xQueueSemaphoreTake+0x24>
 800dbc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbc6:	f383 8811 	msr	BASEPRI, r3
 800dbca:	f3bf 8f6f 	isb	sy
 800dbce:	f3bf 8f4f 	dsb	sy
 800dbd2:	e7fe      	b.n	800dbd2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dbd4:	f001 f85e 	bl	800ec94 <xTaskGetSchedulerState>
 800dbd8:	4605      	mov	r5, r0
 800dbda:	2800      	cmp	r0, #0
 800dbdc:	d054      	beq.n	800dc88 <xQueueSemaphoreTake+0xd8>
 800dbde:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbe0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800dbe4:	f7ff f936 	bl	800ce54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800dbe8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800dbea:	2b00      	cmp	r3, #0
 800dbec:	f040 8148 	bne.w	800de80 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dbf0:	9b01      	ldr	r3, [sp, #4]
 800dbf2:	2b00      	cmp	r3, #0
 800dbf4:	f000 813a 	beq.w	800de6c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800dbf8:	2d00      	cmp	r5, #0
 800dbfa:	f000 809d 	beq.w	800dd38 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800dbfe:	f7ff f94b 	bl	800ce98 <vPortExitCritical>
		vTaskSuspendAll();
 800dc02:	f000 fe9d 	bl	800e940 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc06:	f7ff f925 	bl	800ce54 <vPortEnterCritical>
 800dc0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc0e:	2bff      	cmp	r3, #255	; 0xff
 800dc10:	bf04      	itt	eq
 800dc12:	2300      	moveq	r3, #0
 800dc14:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dc18:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc1c:	2bff      	cmp	r3, #255	; 0xff
 800dc1e:	bf04      	itt	eq
 800dc20:	2300      	moveq	r3, #0
 800dc22:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dc26:	f7ff f937 	bl	800ce98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc2a:	a901      	add	r1, sp, #4
 800dc2c:	a802      	add	r0, sp, #8
 800dc2e:	f000 ffe3 	bl	800ebf8 <xTaskCheckForTimeOut>
 800dc32:	2800      	cmp	r0, #0
 800dc34:	d135      	bne.n	800dca2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800dc36:	f7ff f90d 	bl	800ce54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dc3a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dc3c:	2b00      	cmp	r3, #0
 800dc3e:	f000 80a4 	beq.w	800dd8a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800dc42:	f7ff f929 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc46:	f7ff f905 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dc4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc50:	2d00      	cmp	r5, #0
 800dc52:	dc05      	bgt.n	800dc60 <xQueueSemaphoreTake+0xb0>
 800dc54:	e074      	b.n	800dd40 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800dc56:	1e6b      	subs	r3, r5, #1
 800dc58:	b2da      	uxtb	r2, r3
 800dc5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc5c:	2a00      	cmp	r2, #0
 800dc5e:	d06f      	beq.n	800dd40 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc60:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc62:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc64:	2b00      	cmp	r3, #0
 800dc66:	d06b      	beq.n	800dd40 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc68:	f000 ff72 	bl	800eb50 <xTaskRemoveFromEventList>
 800dc6c:	2800      	cmp	r0, #0
 800dc6e:	d0f2      	beq.n	800dc56 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800dc70:	f001 f80a 	bl	800ec88 <vTaskMissedYield>
 800dc74:	e7ef      	b.n	800dc56 <xQueueSemaphoreTake+0xa6>
 800dc76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc7a:	f383 8811 	msr	BASEPRI, r3
 800dc7e:	f3bf 8f6f 	isb	sy
 800dc82:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800dc86:	e7fe      	b.n	800dc86 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc88:	9b01      	ldr	r3, [sp, #4]
 800dc8a:	2b00      	cmp	r3, #0
 800dc8c:	f000 80d4 	beq.w	800de38 <xQueueSemaphoreTake+0x288>
 800dc90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc94:	f383 8811 	msr	BASEPRI, r3
 800dc98:	f3bf 8f6f 	isb	sy
 800dc9c:	f3bf 8f4f 	dsb	sy
 800dca0:	e7fe      	b.n	800dca0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800dca2:	f7ff f8d7 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dca6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcaa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcac:	2d00      	cmp	r5, #0
 800dcae:	dc04      	bgt.n	800dcba <xQueueSemaphoreTake+0x10a>
 800dcb0:	e011      	b.n	800dcd6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800dcb2:	1e6b      	subs	r3, r5, #1
 800dcb4:	b2da      	uxtb	r2, r3
 800dcb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcb8:	b16a      	cbz	r2, 800dcd6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcbc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcbe:	b153      	cbz	r3, 800dcd6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcc0:	f000 ff46 	bl	800eb50 <xTaskRemoveFromEventList>
 800dcc4:	2800      	cmp	r0, #0
 800dcc6:	d0f4      	beq.n	800dcb2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800dcc8:	f000 ffde 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800dccc:	1e6b      	subs	r3, r5, #1
 800dcce:	b2da      	uxtb	r2, r3
 800dcd0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcd2:	2a00      	cmp	r2, #0
 800dcd4:	d1f1      	bne.n	800dcba <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800dcd6:	23ff      	movs	r3, #255	; 0xff
 800dcd8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dcdc:	f7ff f8dc 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dce0:	f7ff f8b8 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dce4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dce8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcea:	2d00      	cmp	r5, #0
 800dcec:	dd14      	ble.n	800dd18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcee:	f104 0810 	add.w	r8, r4, #16
 800dcf2:	e003      	b.n	800dcfc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800dcf4:	1e6b      	subs	r3, r5, #1
 800dcf6:	b2da      	uxtb	r2, r3
 800dcf8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcfa:	b16a      	cbz	r2, 800dd18 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcfc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcfe:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd00:	b153      	cbz	r3, 800dd18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd02:	f000 ff25 	bl	800eb50 <xTaskRemoveFromEventList>
 800dd06:	2800      	cmp	r0, #0
 800dd08:	d0f4      	beq.n	800dcf4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800dd0a:	f000 ffbd 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800dd0e:	1e6b      	subs	r3, r5, #1
 800dd10:	b2da      	uxtb	r2, r3
 800dd12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd14:	2a00      	cmp	r2, #0
 800dd16:	d1f1      	bne.n	800dcfc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd18:	23ff      	movs	r3, #255	; 0xff
 800dd1a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd1e:	f7ff f8bb 	bl	800ce98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dd22:	f000 fe15 	bl	800e950 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800dd26:	f7ff f895 	bl	800ce54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dd2a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dd2c:	2b00      	cmp	r3, #0
 800dd2e:	d07c      	beq.n	800de2a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800dd30:	f7ff f8b2 	bl	800ce98 <vPortExitCritical>
	return xReturn;
 800dd34:	2501      	movs	r5, #1
 800dd36:	e755      	b.n	800dbe4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dd38:	a802      	add	r0, sp, #8
 800dd3a:	f000 ff51 	bl	800ebe0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dd3e:	e75e      	b.n	800dbfe <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dd40:	23ff      	movs	r3, #255	; 0xff
 800dd42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dd46:	f7ff f8a7 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd4a:	f7ff f883 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dd4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dd52:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd54:	2d00      	cmp	r5, #0
 800dd56:	dd10      	ble.n	800dd7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd58:	f104 0810 	add.w	r8, r4, #16
 800dd5c:	e003      	b.n	800dd66 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800dd5e:	1e6b      	subs	r3, r5, #1
 800dd60:	b2da      	uxtb	r2, r3
 800dd62:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd64:	b14a      	cbz	r2, 800dd7a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd66:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd68:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd6a:	b133      	cbz	r3, 800dd7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd6c:	f000 fef0 	bl	800eb50 <xTaskRemoveFromEventList>
 800dd70:	2800      	cmp	r0, #0
 800dd72:	d0f4      	beq.n	800dd5e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800dd74:	f000 ff88 	bl	800ec88 <vTaskMissedYield>
 800dd78:	e7f1      	b.n	800dd5e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd7a:	23ff      	movs	r3, #255	; 0xff
 800dd7c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd80:	f7ff f88a 	bl	800ce98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dd84:	f000 fde4 	bl	800e950 <xTaskResumeAll>
 800dd88:	e7d4      	b.n	800dd34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800dd8a:	f7ff f885 	bl	800ce98 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dd8e:	6823      	ldr	r3, [r4, #0]
 800dd90:	2b00      	cmp	r3, #0
 800dd92:	d062      	beq.n	800de5a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dd94:	9901      	ldr	r1, [sp, #4]
 800dd96:	4630      	mov	r0, r6
 800dd98:	f000 fe4c 	bl	800ea34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dd9c:	f7ff f85a 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dda0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dda4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dda6:	2d00      	cmp	r5, #0
 800dda8:	dc04      	bgt.n	800ddb4 <xQueueSemaphoreTake+0x204>
 800ddaa:	e00d      	b.n	800ddc8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ddac:	1e6b      	subs	r3, r5, #1
 800ddae:	b2da      	uxtb	r2, r3
 800ddb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddb2:	b14a      	cbz	r2, 800ddc8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddb6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddb8:	b133      	cbz	r3, 800ddc8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddba:	f000 fec9 	bl	800eb50 <xTaskRemoveFromEventList>
 800ddbe:	2800      	cmp	r0, #0
 800ddc0:	d0f4      	beq.n	800ddac <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ddc2:	f000 ff61 	bl	800ec88 <vTaskMissedYield>
 800ddc6:	e7f1      	b.n	800ddac <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ddc8:	23ff      	movs	r3, #255	; 0xff
 800ddca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ddce:	f7ff f863 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddd2:	f7ff f83f 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ddd6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ddda:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dddc:	2d00      	cmp	r5, #0
 800ddde:	dd10      	ble.n	800de02 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dde0:	f104 0810 	add.w	r8, r4, #16
 800dde4:	e003      	b.n	800ddee <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800dde6:	1e6b      	subs	r3, r5, #1
 800dde8:	b2da      	uxtb	r2, r3
 800ddea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddec:	b14a      	cbz	r2, 800de02 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddf0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddf2:	b133      	cbz	r3, 800de02 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddf4:	f000 feac 	bl	800eb50 <xTaskRemoveFromEventList>
 800ddf8:	2800      	cmp	r0, #0
 800ddfa:	d0f4      	beq.n	800dde6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ddfc:	f000 ff44 	bl	800ec88 <vTaskMissedYield>
 800de00:	e7f1      	b.n	800dde6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800de02:	23ff      	movs	r3, #255	; 0xff
 800de04:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de08:	f7ff f846 	bl	800ce98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800de0c:	f000 fda0 	bl	800e950 <xTaskResumeAll>
 800de10:	2800      	cmp	r0, #0
 800de12:	d18f      	bne.n	800dd34 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800de14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de20:	f3bf 8f4f 	dsb	sy
 800de24:	f3bf 8f6f 	isb	sy
 800de28:	e784      	b.n	800dd34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800de2a:	f7ff f835 	bl	800ce98 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800de2e:	b92f      	cbnz	r7, 800de3c <xQueueSemaphoreTake+0x28c>
}
 800de30:	4638      	mov	r0, r7
 800de32:	b004      	add	sp, #16
 800de34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de38:	4607      	mov	r7, r0
 800de3a:	e6d1      	b.n	800dbe0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800de3c:	f7ff f80a 	bl	800ce54 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800de40:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800de42:	b119      	cbz	r1, 800de4c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800de44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800de46:	6819      	ldr	r1, [r3, #0]
 800de48:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800de4c:	68a0      	ldr	r0, [r4, #8]
 800de4e:	f000 ffbd 	bl	800edcc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800de52:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800de54:	f7ff f820 	bl	800ce98 <vPortExitCritical>
 800de58:	e7ea      	b.n	800de30 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800de5a:	f7fe fffb 	bl	800ce54 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800de5e:	68a0      	ldr	r0, [r4, #8]
 800de60:	f000 ff28 	bl	800ecb4 <xTaskPriorityInherit>
 800de64:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800de66:	f7ff f817 	bl	800ce98 <vPortExitCritical>
 800de6a:	e793      	b.n	800dd94 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800de6c:	b197      	cbz	r7, 800de94 <xQueueSemaphoreTake+0x2e4>
 800de6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de72:	f383 8811 	msr	BASEPRI, r3
 800de76:	f3bf 8f6f 	isb	sy
 800de7a:	f3bf 8f4f 	dsb	sy
 800de7e:	e7fe      	b.n	800de7e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800de80:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800de82:	3b01      	subs	r3, #1
 800de84:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800de86:	b1ca      	cbz	r2, 800debc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de88:	6923      	ldr	r3, [r4, #16]
 800de8a:	b933      	cbnz	r3, 800de9a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800de8c:	f7ff f804 	bl	800ce98 <vPortExitCritical>
				return pdPASS;
 800de90:	2701      	movs	r7, #1
 800de92:	e7cd      	b.n	800de30 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800de94:	f7ff f800 	bl	800ce98 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800de98:	e7ca      	b.n	800de30 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de9a:	f104 0010 	add.w	r0, r4, #16
 800de9e:	f000 fe57 	bl	800eb50 <xTaskRemoveFromEventList>
 800dea2:	2800      	cmp	r0, #0
 800dea4:	d0f2      	beq.n	800de8c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800dea6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800deaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800deb2:	f3bf 8f4f 	dsb	sy
 800deb6:	f3bf 8f6f 	isb	sy
 800deba:	e7e7      	b.n	800de8c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800debc:	f000 ffda 	bl	800ee74 <pvTaskIncrementMutexHeldCount>
 800dec0:	60a0      	str	r0, [r4, #8]
 800dec2:	e7e1      	b.n	800de88 <xQueueSemaphoreTake+0x2d8>

0800dec4 <xQueueReceiveFromISR>:
{
 800dec4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800dec8:	b310      	cbz	r0, 800df10 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800deca:	460e      	mov	r6, r1
 800decc:	4617      	mov	r7, r2
 800dece:	4604      	mov	r4, r0
 800ded0:	b191      	cbz	r1, 800def8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ded2:	f7ff f8f3 	bl	800d0bc <vPortValidateInterruptPriority>
	__asm volatile
 800ded6:	f3ef 8911 	mrs	r9, BASEPRI
 800deda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dede:	f383 8811 	msr	BASEPRI, r3
 800dee2:	f3bf 8f6f 	isb	sy
 800dee6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800deea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800deec:	b9cd      	cbnz	r5, 800df22 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800deee:	4628      	mov	r0, r5
	__asm volatile
 800def0:	f389 8811 	msr	BASEPRI, r9
}
 800def4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800def8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800defa:	2b00      	cmp	r3, #0
 800defc:	d0e9      	beq.n	800ded2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800defe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df02:	f383 8811 	msr	BASEPRI, r3
 800df06:	f3bf 8f6f 	isb	sy
 800df0a:	f3bf 8f4f 	dsb	sy
 800df0e:	e7fe      	b.n	800df0e <xQueueReceiveFromISR+0x4a>
 800df10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df14:	f383 8811 	msr	BASEPRI, r3
 800df18:	f3bf 8f6f 	isb	sy
 800df1c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800df20:	e7fe      	b.n	800df20 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800df22:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800df26:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800df28:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800df2c:	b152      	cbz	r2, 800df44 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800df2e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800df30:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800df32:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800df34:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800df36:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800df38:	bf24      	itt	cs
 800df3a:	6821      	ldrcs	r1, [r4, #0]
 800df3c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800df3e:	4630      	mov	r0, r6
 800df40:	f01b ffe3 	bl	8029f0a <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df44:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800df46:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df4a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800df4c:	d009      	beq.n	800df62 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800df4e:	f108 0301 	add.w	r3, r8, #1
 800df52:	b25b      	sxtb	r3, r3
 800df54:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800df58:	2001      	movs	r0, #1
	__asm volatile
 800df5a:	f389 8811 	msr	BASEPRI, r9
}
 800df5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df62:	6923      	ldr	r3, [r4, #16]
 800df64:	2b00      	cmp	r3, #0
 800df66:	d0f7      	beq.n	800df58 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df68:	f104 0010 	add.w	r0, r4, #16
 800df6c:	f000 fdf0 	bl	800eb50 <xTaskRemoveFromEventList>
 800df70:	2800      	cmp	r0, #0
 800df72:	d0f1      	beq.n	800df58 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800df74:	2f00      	cmp	r7, #0
 800df76:	d0ef      	beq.n	800df58 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800df78:	2001      	movs	r0, #1
 800df7a:	6038      	str	r0, [r7, #0]
 800df7c:	e7b8      	b.n	800def0 <xQueueReceiveFromISR+0x2c>
 800df7e:	bf00      	nop

0800df80 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800df80:	b158      	cbz	r0, 800df9a <uxQueueMessagesWaiting+0x1a>
{
 800df82:	b510      	push	{r4, lr}
 800df84:	4604      	mov	r4, r0
 800df86:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800df88:	f7fe ff64 	bl	800ce54 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800df8c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800df8e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800df90:	f7fe ff82 	bl	800ce98 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800df94:	9801      	ldr	r0, [sp, #4]
 800df96:	b002      	add	sp, #8
 800df98:	bd10      	pop	{r4, pc}
	__asm volatile
 800df9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df9e:	f383 8811 	msr	BASEPRI, r3
 800dfa2:	f3bf 8f6f 	isb	sy
 800dfa6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800dfaa:	e7fe      	b.n	800dfaa <uxQueueMessagesWaiting+0x2a>

0800dfac <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800dfac:	b108      	cbz	r0, 800dfb2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800dfae:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800dfb0:	4770      	bx	lr
 800dfb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb6:	f383 8811 	msr	BASEPRI, r3
 800dfba:	f3bf 8f6f 	isb	sy
 800dfbe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dfc2:	e7fe      	b.n	800dfc2 <uxQueueMessagesWaitingFromISR+0x16>
 800dfc4:	0000      	movs	r0, r0
	...

0800dfc8 <vQueueDelete>:
	configASSERT( pxQueue );
 800dfc8:	b1f0      	cbz	r0, 800e008 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800dfca:	4b21      	ldr	r3, [pc, #132]	; (800e050 <vQueueDelete+0x88>)
 800dfcc:	685a      	ldr	r2, [r3, #4]
 800dfce:	4290      	cmp	r0, r2
 800dfd0:	d025      	beq.n	800e01e <vQueueDelete+0x56>
 800dfd2:	68da      	ldr	r2, [r3, #12]
 800dfd4:	4290      	cmp	r0, r2
 800dfd6:	d02c      	beq.n	800e032 <vQueueDelete+0x6a>
 800dfd8:	695a      	ldr	r2, [r3, #20]
 800dfda:	4290      	cmp	r0, r2
 800dfdc:	d02b      	beq.n	800e036 <vQueueDelete+0x6e>
 800dfde:	69da      	ldr	r2, [r3, #28]
 800dfe0:	4290      	cmp	r0, r2
 800dfe2:	d02a      	beq.n	800e03a <vQueueDelete+0x72>
 800dfe4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800dfe6:	4290      	cmp	r0, r2
 800dfe8:	d029      	beq.n	800e03e <vQueueDelete+0x76>
 800dfea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800dfec:	4290      	cmp	r0, r2
 800dfee:	d01e      	beq.n	800e02e <vQueueDelete+0x66>
 800dff0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800dff2:	4290      	cmp	r0, r2
 800dff4:	d025      	beq.n	800e042 <vQueueDelete+0x7a>
 800dff6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800dff8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800dffa:	bf08      	it	eq
 800dffc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800dffe:	d00f      	beq.n	800e020 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e000:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e004:	b14b      	cbz	r3, 800e01a <vQueueDelete+0x52>
}
 800e006:	4770      	bx	lr
 800e008:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e00c:	f383 8811 	msr	BASEPRI, r3
 800e010:	f3bf 8f6f 	isb	sy
 800e014:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e018:	e7fe      	b.n	800e018 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e01a:	f7fe be01 	b.w	800cc20 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e01e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e020:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e048 <vQueueDelete+0x80>
 800e024:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e028:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e02c:	e7e8      	b.n	800e000 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e02e:	2205      	movs	r2, #5
 800e030:	e7f6      	b.n	800e020 <vQueueDelete+0x58>
 800e032:	2201      	movs	r2, #1
 800e034:	e7f4      	b.n	800e020 <vQueueDelete+0x58>
 800e036:	2202      	movs	r2, #2
 800e038:	e7f2      	b.n	800e020 <vQueueDelete+0x58>
 800e03a:	2203      	movs	r2, #3
 800e03c:	e7f0      	b.n	800e020 <vQueueDelete+0x58>
 800e03e:	2204      	movs	r2, #4
 800e040:	e7ee      	b.n	800e020 <vQueueDelete+0x58>
 800e042:	2206      	movs	r2, #6
 800e044:	e7ec      	b.n	800e020 <vQueueDelete+0x58>
 800e046:	bf00      	nop
	...
 800e050:	20012730 	.word	0x20012730

0800e054 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e054:	4b12      	ldr	r3, [pc, #72]	; (800e0a0 <vQueueAddToRegistry+0x4c>)
 800e056:	681a      	ldr	r2, [r3, #0]
 800e058:	b17a      	cbz	r2, 800e07a <vQueueAddToRegistry+0x26>
 800e05a:	689a      	ldr	r2, [r3, #8]
 800e05c:	b162      	cbz	r2, 800e078 <vQueueAddToRegistry+0x24>
 800e05e:	691a      	ldr	r2, [r3, #16]
 800e060:	b192      	cbz	r2, 800e088 <vQueueAddToRegistry+0x34>
 800e062:	699a      	ldr	r2, [r3, #24]
 800e064:	b192      	cbz	r2, 800e08c <vQueueAddToRegistry+0x38>
 800e066:	6a1a      	ldr	r2, [r3, #32]
 800e068:	b192      	cbz	r2, 800e090 <vQueueAddToRegistry+0x3c>
 800e06a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e06c:	b192      	cbz	r2, 800e094 <vQueueAddToRegistry+0x40>
 800e06e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e070:	b192      	cbz	r2, 800e098 <vQueueAddToRegistry+0x44>
 800e072:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e074:	b192      	cbz	r2, 800e09c <vQueueAddToRegistry+0x48>
	}
 800e076:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e078:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e07a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e07e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e082:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e086:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e088:	2202      	movs	r2, #2
 800e08a:	e7f6      	b.n	800e07a <vQueueAddToRegistry+0x26>
 800e08c:	2203      	movs	r2, #3
 800e08e:	e7f4      	b.n	800e07a <vQueueAddToRegistry+0x26>
 800e090:	2204      	movs	r2, #4
 800e092:	e7f2      	b.n	800e07a <vQueueAddToRegistry+0x26>
 800e094:	2205      	movs	r2, #5
 800e096:	e7f0      	b.n	800e07a <vQueueAddToRegistry+0x26>
 800e098:	2206      	movs	r2, #6
 800e09a:	e7ee      	b.n	800e07a <vQueueAddToRegistry+0x26>
 800e09c:	2207      	movs	r2, #7
 800e09e:	e7ec      	b.n	800e07a <vQueueAddToRegistry+0x26>
 800e0a0:	20012730 	.word	0x20012730

0800e0a4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e0a4:	b570      	push	{r4, r5, r6, lr}
 800e0a6:	4605      	mov	r5, r0
 800e0a8:	460e      	mov	r6, r1
 800e0aa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e0ac:	f7fe fed2 	bl	800ce54 <vPortEnterCritical>
 800e0b0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e0b4:	2bff      	cmp	r3, #255	; 0xff
 800e0b6:	bf04      	itt	eq
 800e0b8:	2300      	moveq	r3, #0
 800e0ba:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e0be:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e0c2:	2bff      	cmp	r3, #255	; 0xff
 800e0c4:	bf04      	itt	eq
 800e0c6:	2300      	moveq	r3, #0
 800e0c8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e0cc:	f7fe fee4 	bl	800ce98 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e0d0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e0d2:	2b00      	cmp	r3, #0
 800e0d4:	d043      	beq.n	800e15e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e0d6:	f7fe febd 	bl	800ce54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e0da:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e0de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0e0:	2c00      	cmp	r4, #0
 800e0e2:	dd14      	ble.n	800e10e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0e4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e0e8:	e003      	b.n	800e0f2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e0ea:	1e63      	subs	r3, r4, #1
 800e0ec:	b2da      	uxtb	r2, r3
 800e0ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0f0:	b16a      	cbz	r2, 800e10e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0f2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0f6:	b153      	cbz	r3, 800e10e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0f8:	f000 fd2a 	bl	800eb50 <xTaskRemoveFromEventList>
 800e0fc:	2800      	cmp	r0, #0
 800e0fe:	d0f4      	beq.n	800e0ea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e100:	f000 fdc2 	bl	800ec88 <vTaskMissedYield>
			--cTxLock;
 800e104:	1e63      	subs	r3, r4, #1
 800e106:	b2da      	uxtb	r2, r3
 800e108:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e10a:	2a00      	cmp	r2, #0
 800e10c:	d1f1      	bne.n	800e0f2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e10e:	23ff      	movs	r3, #255	; 0xff
 800e110:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e114:	f7fe fec0 	bl	800ce98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e118:	f7fe fe9c 	bl	800ce54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e11c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e120:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e122:	2c00      	cmp	r4, #0
 800e124:	dd14      	ble.n	800e150 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e126:	f105 0610 	add.w	r6, r5, #16
 800e12a:	e003      	b.n	800e134 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e12c:	1e63      	subs	r3, r4, #1
 800e12e:	b2da      	uxtb	r2, r3
 800e130:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e132:	b16a      	cbz	r2, 800e150 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e134:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e136:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e138:	b153      	cbz	r3, 800e150 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e13a:	f000 fd09 	bl	800eb50 <xTaskRemoveFromEventList>
 800e13e:	2800      	cmp	r0, #0
 800e140:	d0f4      	beq.n	800e12c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e142:	f000 fda1 	bl	800ec88 <vTaskMissedYield>
				--cRxLock;
 800e146:	1e63      	subs	r3, r4, #1
 800e148:	b2da      	uxtb	r2, r3
 800e14a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e14c:	2a00      	cmp	r2, #0
 800e14e:	d1f1      	bne.n	800e134 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e150:	23ff      	movs	r3, #255	; 0xff
 800e152:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e156:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e15a:	f7fe be9d 	b.w	800ce98 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e15e:	4622      	mov	r2, r4
 800e160:	4631      	mov	r1, r6
 800e162:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e166:	f000 fca9 	bl	800eabc <vTaskPlaceOnEventListRestricted>
 800e16a:	e7b4      	b.n	800e0d6 <vQueueWaitForMessageRestricted+0x32>

0800e16c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e16c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e170:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e172:	f7fe fe6f 	bl	800ce54 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e176:	4a34      	ldr	r2, [pc, #208]	; (800e248 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e178:	4e34      	ldr	r6, [pc, #208]	; (800e24c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e17a:	6813      	ldr	r3, [r2, #0]
 800e17c:	3301      	adds	r3, #1
 800e17e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e180:	6833      	ldr	r3, [r6, #0]
 800e182:	2b00      	cmp	r3, #0
 800e184:	d032      	beq.n	800e1ec <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e186:	4c32      	ldr	r4, [pc, #200]	; (800e250 <prvAddNewTaskToReadyList+0xe4>)
 800e188:	6823      	ldr	r3, [r4, #0]
 800e18a:	b33b      	cbz	r3, 800e1dc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e18c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e18e:	4f31      	ldr	r7, [pc, #196]	; (800e254 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e190:	4a31      	ldr	r2, [pc, #196]	; (800e258 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e192:	4932      	ldr	r1, [pc, #200]	; (800e25c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e194:	6813      	ldr	r3, [r2, #0]
 800e196:	3301      	adds	r3, #1
 800e198:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e19a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e19c:	680b      	ldr	r3, [r1, #0]
 800e19e:	4283      	cmp	r3, r0
 800e1a0:	bf38      	it	cc
 800e1a2:	6008      	strcc	r0, [r1, #0]
 800e1a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e1a8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e1ac:	1d29      	adds	r1, r5, #4
 800e1ae:	f7fe fdab 	bl	800cd08 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e1b2:	f7fe fe71 	bl	800ce98 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e1b6:	6823      	ldr	r3, [r4, #0]
 800e1b8:	b173      	cbz	r3, 800e1d8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e1ba:	6832      	ldr	r2, [r6, #0]
 800e1bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e1be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e1c0:	429a      	cmp	r2, r3
 800e1c2:	d209      	bcs.n	800e1d8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e1c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e1c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1d0:	f3bf 8f4f 	dsb	sy
 800e1d4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e1d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e1dc:	6833      	ldr	r3, [r6, #0]
 800e1de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e1e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e1e2:	4f1c      	ldr	r7, [pc, #112]	; (800e254 <prvAddNewTaskToReadyList+0xe8>)
 800e1e4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e1e6:	bf98      	it	ls
 800e1e8:	6035      	strls	r5, [r6, #0]
 800e1ea:	e7d1      	b.n	800e190 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e1ec:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e1ee:	6813      	ldr	r3, [r2, #0]
 800e1f0:	2b01      	cmp	r3, #1
 800e1f2:	d003      	beq.n	800e1fc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e1f4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e1f6:	4f17      	ldr	r7, [pc, #92]	; (800e254 <prvAddNewTaskToReadyList+0xe8>)
 800e1f8:	4c15      	ldr	r4, [pc, #84]	; (800e250 <prvAddNewTaskToReadyList+0xe4>)
 800e1fa:	e7c9      	b.n	800e190 <prvAddNewTaskToReadyList+0x24>
 800e1fc:	4f15      	ldr	r7, [pc, #84]	; (800e254 <prvAddNewTaskToReadyList+0xe8>)
 800e1fe:	463c      	mov	r4, r7
 800e200:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e204:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e206:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e208:	f7fe fd6e 	bl	800cce8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e20c:	45a0      	cmp	r8, r4
 800e20e:	d1f9      	bne.n	800e204 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e210:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e274 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e214:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e278 <prvAddNewTaskToReadyList+0x10c>
 800e218:	4c0d      	ldr	r4, [pc, #52]	; (800e250 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e21a:	4648      	mov	r0, r9
 800e21c:	f7fe fd64 	bl	800cce8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e220:	4640      	mov	r0, r8
 800e222:	f7fe fd61 	bl	800cce8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e226:	480e      	ldr	r0, [pc, #56]	; (800e260 <prvAddNewTaskToReadyList+0xf4>)
 800e228:	f7fe fd5e 	bl	800cce8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e22c:	480d      	ldr	r0, [pc, #52]	; (800e264 <prvAddNewTaskToReadyList+0xf8>)
 800e22e:	f7fe fd5b 	bl	800cce8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e232:	480d      	ldr	r0, [pc, #52]	; (800e268 <prvAddNewTaskToReadyList+0xfc>)
 800e234:	f7fe fd58 	bl	800cce8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e238:	4b0c      	ldr	r3, [pc, #48]	; (800e26c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e23a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e23c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e240:	4b0b      	ldr	r3, [pc, #44]	; (800e270 <prvAddNewTaskToReadyList+0x104>)
 800e242:	f8c3 8000 	str.w	r8, [r3]
}
 800e246:	e7a3      	b.n	800e190 <prvAddNewTaskToReadyList+0x24>
 800e248:	20012bdc 	.word	0x20012bdc
 800e24c:	20012770 	.word	0x20012770
 800e250:	20012c38 	.word	0x20012c38
 800e254:	2001277c 	.word	0x2001277c
 800e258:	20012be8 	.word	0x20012be8
 800e25c:	20012bec 	.word	0x20012bec
 800e260:	20012c24 	.word	0x20012c24
 800e264:	20012c50 	.word	0x20012c50
 800e268:	20012c3c 	.word	0x20012c3c
 800e26c:	20012774 	.word	0x20012774
 800e270:	20012778 	.word	0x20012778
 800e274:	20012bf0 	.word	0x20012bf0
 800e278:	20012c04 	.word	0x20012c04

0800e27c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e27c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e280:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e282:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e286:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e28a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e28c:	4606      	mov	r6, r0
 800e28e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e290:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e292:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e294:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e296:	f01b fd12 	bl	8029cbe <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e29a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e29c:	f1a9 0904 	sub.w	r9, r9, #4
 800e2a0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e2a2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e2a6:	2d00      	cmp	r5, #0
 800e2a8:	d079      	beq.n	800e39e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2aa:	782b      	ldrb	r3, [r5, #0]
 800e2ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e2b0:	2b00      	cmp	r3, #0
 800e2b2:	d03b      	beq.n	800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2b4:	786b      	ldrb	r3, [r5, #1]
 800e2b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e2ba:	2b00      	cmp	r3, #0
 800e2bc:	d036      	beq.n	800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2be:	78ab      	ldrb	r3, [r5, #2]
 800e2c0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e2c4:	b393      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2c6:	78eb      	ldrb	r3, [r5, #3]
 800e2c8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e2cc:	b373      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2ce:	792b      	ldrb	r3, [r5, #4]
 800e2d0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e2d4:	b353      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2d6:	796b      	ldrb	r3, [r5, #5]
 800e2d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e2dc:	b333      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2de:	79ab      	ldrb	r3, [r5, #6]
 800e2e0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e2e4:	b313      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2e6:	79eb      	ldrb	r3, [r5, #7]
 800e2e8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e2ec:	b1f3      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2ee:	7a2b      	ldrb	r3, [r5, #8]
 800e2f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e2f4:	b1d3      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2f6:	7a6b      	ldrb	r3, [r5, #9]
 800e2f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e2fc:	b1b3      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e2fe:	7aab      	ldrb	r3, [r5, #10]
 800e300:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e304:	b193      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e306:	7aeb      	ldrb	r3, [r5, #11]
 800e308:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e30c:	b173      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e30e:	7b2b      	ldrb	r3, [r5, #12]
 800e310:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e314:	b153      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e316:	7b6b      	ldrb	r3, [r5, #13]
 800e318:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e31c:	b133      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e31e:	7bab      	ldrb	r3, [r5, #14]
 800e320:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e324:	b113      	cbz	r3, 800e32c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e326:	7beb      	ldrb	r3, [r5, #15]
 800e328:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e32c:	2300      	movs	r3, #0
 800e32e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e332:	9d08      	ldr	r5, [sp, #32]
 800e334:	2d37      	cmp	r5, #55	; 0x37
 800e336:	bf28      	it	cs
 800e338:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e33a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e33e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e340:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e342:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e344:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e348:	f7fe fcda 	bl	800cd00 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e34c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e350:	f104 0018 	add.w	r0, r4, #24
 800e354:	f7fe fcd4 	bl	800cd00 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e358:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e35a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e35e:	4651      	mov	r1, sl
 800e360:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e362:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e364:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e366:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e36a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e36e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e372:	f01b fca4 	bl	8029cbe <memset>
 800e376:	4b0b      	ldr	r3, [pc, #44]	; (800e3a4 <prvInitialiseNewTask.constprop.0+0x128>)
 800e378:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e37a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e37e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e380:	463a      	mov	r2, r7
 800e382:	4631      	mov	r1, r6
 800e384:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e386:	6625      	str	r5, [r4, #96]	; 0x60
 800e388:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e38a:	f7fe fd37 	bl	800cdfc <pxPortInitialiseStack>
 800e38e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e390:	f1b8 0f00 	cmp.w	r8, #0
 800e394:	d001      	beq.n	800e39a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e396:	f8c8 4000 	str.w	r4, [r8]
}
 800e39a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e39e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e3a2:	e7c6      	b.n	800e332 <prvInitialiseNewTask.constprop.0+0xb6>
 800e3a4:	20013700 	.word	0x20013700

0800e3a8 <prvIdleTask>:
{
 800e3a8:	b580      	push	{r7, lr}
 800e3aa:	4d23      	ldr	r5, [pc, #140]	; (800e438 <prvIdleTask+0x90>)
 800e3ac:	4f23      	ldr	r7, [pc, #140]	; (800e43c <prvIdleTask+0x94>)
 800e3ae:	4e24      	ldr	r6, [pc, #144]	; (800e440 <prvIdleTask+0x98>)
 800e3b0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e444 <prvIdleTask+0x9c>
				taskYIELD();
 800e3b4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e3b8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e3bc:	682b      	ldr	r3, [r5, #0]
 800e3be:	b35b      	cbz	r3, 800e418 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e3c0:	f7fe fd48 	bl	800ce54 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e3c4:	68fb      	ldr	r3, [r7, #12]
 800e3c6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e3c8:	1d20      	adds	r0, r4, #4
 800e3ca:	f7fe fcc5 	bl	800cd58 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e3ce:	6833      	ldr	r3, [r6, #0]
 800e3d0:	3b01      	subs	r3, #1
 800e3d2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e3d4:	682b      	ldr	r3, [r5, #0]
 800e3d6:	3b01      	subs	r3, #1
 800e3d8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e3da:	f7fe fd5d 	bl	800ce98 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e3de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e3e2:	f01b fcb5 	bl	8029d50 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e3e6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e3ea:	b163      	cbz	r3, 800e406 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e3ec:	2b01      	cmp	r3, #1
 800e3ee:	d01e      	beq.n	800e42e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e3f0:	2b02      	cmp	r3, #2
 800e3f2:	d0e3      	beq.n	800e3bc <prvIdleTask+0x14>
 800e3f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3f8:	f383 8811 	msr	BASEPRI, r3
 800e3fc:	f3bf 8f6f 	isb	sy
 800e400:	f3bf 8f4f 	dsb	sy
 800e404:	e7fe      	b.n	800e404 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e406:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e408:	f7fe fc0a 	bl	800cc20 <vPortFree>
				vPortFree( pxTCB );
 800e40c:	4620      	mov	r0, r4
 800e40e:	f7fe fc07 	bl	800cc20 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e412:	682b      	ldr	r3, [r5, #0]
 800e414:	2b00      	cmp	r3, #0
 800e416:	d1d3      	bne.n	800e3c0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e418:	f8d8 3000 	ldr.w	r3, [r8]
 800e41c:	2b01      	cmp	r3, #1
 800e41e:	d9cd      	bls.n	800e3bc <prvIdleTask+0x14>
				taskYIELD();
 800e420:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e424:	f3bf 8f4f 	dsb	sy
 800e428:	f3bf 8f6f 	isb	sy
 800e42c:	e7c6      	b.n	800e3bc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e42e:	4620      	mov	r0, r4
 800e430:	f7fe fbf6 	bl	800cc20 <vPortFree>
 800e434:	e7c2      	b.n	800e3bc <prvIdleTask+0x14>
 800e436:	bf00      	nop
 800e438:	20012be0 	.word	0x20012be0
 800e43c:	20012c50 	.word	0x20012c50
 800e440:	20012bdc 	.word	0x20012bdc
 800e444:	2001277c 	.word	0x2001277c

0800e448 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e44c:	4b47      	ldr	r3, [pc, #284]	; (800e56c <xTaskIncrementTick.part.0+0x124>)
 800e44e:	681e      	ldr	r6, [r3, #0]
 800e450:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e452:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e454:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e456:	2e00      	cmp	r6, #0
 800e458:	d040      	beq.n	800e4dc <xTaskIncrementTick.part.0+0x94>
 800e45a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e580 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e45e:	f8db 3000 	ldr.w	r3, [fp]
 800e462:	429e      	cmp	r6, r3
 800e464:	d347      	bcc.n	800e4f6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e466:	4f42      	ldr	r7, [pc, #264]	; (800e570 <xTaskIncrementTick.part.0+0x128>)
 800e468:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e584 <xTaskIncrementTick.part.0+0x13c>
 800e46c:	683b      	ldr	r3, [r7, #0]
 800e46e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e588 <xTaskIncrementTick.part.0+0x140>
 800e472:	681d      	ldr	r5, [r3, #0]
 800e474:	2d00      	cmp	r5, #0
 800e476:	d073      	beq.n	800e560 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e478:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e58c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e47c:	2500      	movs	r5, #0
 800e47e:	e022      	b.n	800e4c6 <xTaskIncrementTick.part.0+0x7e>
 800e480:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e482:	f7fe fc69 	bl	800cd58 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e486:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e488:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e48a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e48e:	b113      	cbz	r3, 800e496 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e490:	f7fe fc62 	bl	800cd58 <uxListRemove>
 800e494:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e496:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e498:	f8d8 2000 	ldr.w	r2, [r8]
 800e49c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e4a0:	4293      	cmp	r3, r2
 800e4a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e4a6:	bf88      	it	hi
 800e4a8:	f8c8 3000 	strhi.w	r3, [r8]
 800e4ac:	f7fe fc2c 	bl	800cd08 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e4b0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e4b4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e4b6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e4b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e4ba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e4bc:	4291      	cmp	r1, r2
 800e4be:	bf28      	it	cs
 800e4c0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e4c2:	2b00      	cmp	r3, #0
 800e4c4:	d04c      	beq.n	800e560 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e4c6:	683b      	ldr	r3, [r7, #0]
 800e4c8:	68db      	ldr	r3, [r3, #12]
 800e4ca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e4cc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4ce:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e4d0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4d2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e4d4:	d2d4      	bcs.n	800e480 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e4d6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e4da:	e011      	b.n	800e500 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e4dc:	4b24      	ldr	r3, [pc, #144]	; (800e570 <xTaskIncrementTick.part.0+0x128>)
 800e4de:	681a      	ldr	r2, [r3, #0]
 800e4e0:	6812      	ldr	r2, [r2, #0]
 800e4e2:	b30a      	cbz	r2, 800e528 <xTaskIncrementTick.part.0+0xe0>
 800e4e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4e8:	f383 8811 	msr	BASEPRI, r3
 800e4ec:	f3bf 8f6f 	isb	sy
 800e4f0:	f3bf 8f4f 	dsb	sy
 800e4f4:	e7fe      	b.n	800e4f4 <xTaskIncrementTick.part.0+0xac>
 800e4f6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e584 <xTaskIncrementTick.part.0+0x13c>
 800e4fa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e588 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e4fe:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e500:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e504:	491b      	ldr	r1, [pc, #108]	; (800e574 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e508:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e50c:	009b      	lsls	r3, r3, #2
 800e50e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e512:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e514:	2a02      	cmp	r2, #2
 800e516:	bf28      	it	cs
 800e518:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e51a:	2b00      	cmp	r3, #0
}
 800e51c:	bf0c      	ite	eq
 800e51e:	4628      	moveq	r0, r5
 800e520:	2001      	movne	r0, #1
 800e522:	b003      	add	sp, #12
 800e524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e528:	4a13      	ldr	r2, [pc, #76]	; (800e578 <xTaskIncrementTick.part.0+0x130>)
 800e52a:	6818      	ldr	r0, [r3, #0]
 800e52c:	6811      	ldr	r1, [r2, #0]
 800e52e:	6019      	str	r1, [r3, #0]
 800e530:	4912      	ldr	r1, [pc, #72]	; (800e57c <xTaskIncrementTick.part.0+0x134>)
 800e532:	6010      	str	r0, [r2, #0]
 800e534:	680a      	ldr	r2, [r1, #0]
 800e536:	3201      	adds	r2, #1
 800e538:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e53a:	681a      	ldr	r2, [r3, #0]
 800e53c:	6812      	ldr	r2, [r2, #0]
 800e53e:	b932      	cbnz	r2, 800e54e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e540:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e580 <xTaskIncrementTick.part.0+0x138>
 800e544:	f04f 33ff 	mov.w	r3, #4294967295
 800e548:	f8cb 3000 	str.w	r3, [fp]
 800e54c:	e787      	b.n	800e45e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e54e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e550:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e580 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e554:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e556:	68db      	ldr	r3, [r3, #12]
 800e558:	685b      	ldr	r3, [r3, #4]
 800e55a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e55e:	e77e      	b.n	800e45e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e560:	f04f 33ff 	mov.w	r3, #4294967295
 800e564:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e568:	e7ca      	b.n	800e500 <xTaskIncrementTick.part.0+0xb8>
 800e56a:	bf00      	nop
 800e56c:	20012c64 	.word	0x20012c64
 800e570:	20012774 	.word	0x20012774
 800e574:	20012c68 	.word	0x20012c68
 800e578:	20012778 	.word	0x20012778
 800e57c:	20012c1c 	.word	0x20012c1c
 800e580:	20012c18 	.word	0x20012c18
 800e584:	2001277c 	.word	0x2001277c
 800e588:	20012770 	.word	0x20012770
 800e58c:	20012bec 	.word	0x20012bec

0800e590 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e594:	4d41      	ldr	r5, [pc, #260]	; (800e69c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e596:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e598:	f7fe fc5c 	bl	800ce54 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e59c:	682b      	ldr	r3, [r5, #0]
 800e59e:	3b01      	subs	r3, #1
 800e5a0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e5a2:	682b      	ldr	r3, [r5, #0]
 800e5a4:	2b00      	cmp	r3, #0
 800e5a6:	d161      	bne.n	800e66c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e5a8:	4b3d      	ldr	r3, [pc, #244]	; (800e6a0 <xTaskResumeAll.part.0+0x110>)
 800e5aa:	681b      	ldr	r3, [r3, #0]
 800e5ac:	2b00      	cmp	r3, #0
 800e5ae:	d05d      	beq.n	800e66c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e5b0:	4e3c      	ldr	r6, [pc, #240]	; (800e6a4 <xTaskResumeAll.part.0+0x114>)
 800e5b2:	6833      	ldr	r3, [r6, #0]
 800e5b4:	2b00      	cmp	r3, #0
 800e5b6:	d06e      	beq.n	800e696 <xTaskResumeAll.part.0+0x106>
 800e5b8:	4f3b      	ldr	r7, [pc, #236]	; (800e6a8 <xTaskResumeAll.part.0+0x118>)
 800e5ba:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800e6b8 <xTaskResumeAll.part.0+0x128>
 800e5be:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800e6bc <xTaskResumeAll.part.0+0x12c>
 800e5c2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800e6c0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e5c6:	68f3      	ldr	r3, [r6, #12]
 800e5c8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e5ca:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e5ce:	f104 0018 	add.w	r0, r4, #24
 800e5d2:	f7fe fbc1 	bl	800cd58 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e5d6:	4658      	mov	r0, fp
 800e5d8:	f7fe fbbe 	bl	800cd58 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e5dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e5de:	683a      	ldr	r2, [r7, #0]
 800e5e0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e5e4:	4293      	cmp	r3, r2
 800e5e6:	4659      	mov	r1, fp
 800e5e8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e5ec:	bf88      	it	hi
 800e5ee:	603b      	strhi	r3, [r7, #0]
 800e5f0:	f7fe fb8a 	bl	800cd08 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e5f4:	f8d8 3000 	ldr.w	r3, [r8]
 800e5f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e5fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e5fc:	429a      	cmp	r2, r3
 800e5fe:	d33d      	bcc.n	800e67c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e600:	2301      	movs	r3, #1
 800e602:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e606:	6833      	ldr	r3, [r6, #0]
 800e608:	2b00      	cmp	r3, #0
 800e60a:	d1dc      	bne.n	800e5c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e60c:	4b27      	ldr	r3, [pc, #156]	; (800e6ac <xTaskResumeAll.part.0+0x11c>)
 800e60e:	681a      	ldr	r2, [r3, #0]
 800e610:	6812      	ldr	r2, [r2, #0]
 800e612:	2a00      	cmp	r2, #0
 800e614:	d03a      	beq.n	800e68c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e616:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e618:	4b25      	ldr	r3, [pc, #148]	; (800e6b0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e61a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e61c:	68d2      	ldr	r2, [r2, #12]
 800e61e:	6852      	ldr	r2, [r2, #4]
 800e620:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e622:	4e24      	ldr	r6, [pc, #144]	; (800e6b4 <xTaskResumeAll.part.0+0x124>)
 800e624:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e626:	b194      	cbz	r4, 800e64e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e628:	2701      	movs	r7, #1
 800e62a:	e006      	b.n	800e63a <xTaskResumeAll.part.0+0xaa>
 800e62c:	f7ff ff0c 	bl	800e448 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e630:	b108      	cbz	r0, 800e636 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e632:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e636:	3c01      	subs	r4, #1
 800e638:	d008      	beq.n	800e64c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e63a:	682b      	ldr	r3, [r5, #0]
 800e63c:	2b00      	cmp	r3, #0
 800e63e:	d0f5      	beq.n	800e62c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e640:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e642:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e644:	f103 0301 	add.w	r3, r3, #1
 800e648:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e64a:	d1f6      	bne.n	800e63a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e64c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e64e:	f8da 3000 	ldr.w	r3, [sl]
 800e652:	b15b      	cbz	r3, 800e66c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e654:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e658:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e65c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e660:	f3bf 8f4f 	dsb	sy
 800e664:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e668:	2001      	movs	r0, #1
 800e66a:	e000      	b.n	800e66e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e66c:	2000      	movs	r0, #0
 800e66e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e670:	f7fe fc12 	bl	800ce98 <vPortExitCritical>
}
 800e674:	9801      	ldr	r0, [sp, #4]
 800e676:	b003      	add	sp, #12
 800e678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e67c:	6833      	ldr	r3, [r6, #0]
 800e67e:	2b00      	cmp	r3, #0
 800e680:	d1a1      	bne.n	800e5c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e682:	4b0a      	ldr	r3, [pc, #40]	; (800e6ac <xTaskResumeAll.part.0+0x11c>)
 800e684:	681a      	ldr	r2, [r3, #0]
 800e686:	6812      	ldr	r2, [r2, #0]
 800e688:	2a00      	cmp	r2, #0
 800e68a:	d1c4      	bne.n	800e616 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e68c:	4b08      	ldr	r3, [pc, #32]	; (800e6b0 <xTaskResumeAll.part.0+0x120>)
 800e68e:	f04f 32ff 	mov.w	r2, #4294967295
 800e692:	601a      	str	r2, [r3, #0]
 800e694:	e7c5      	b.n	800e622 <xTaskResumeAll.part.0+0x92>
 800e696:	f8df a028 	ldr.w	sl, [pc, #40]	; 800e6c0 <xTaskResumeAll.part.0+0x130>
 800e69a:	e7c2      	b.n	800e622 <xTaskResumeAll.part.0+0x92>
 800e69c:	20012be4 	.word	0x20012be4
 800e6a0:	20012bdc 	.word	0x20012bdc
 800e6a4:	20012c24 	.word	0x20012c24
 800e6a8:	20012bec 	.word	0x20012bec
 800e6ac:	20012774 	.word	0x20012774
 800e6b0:	20012c18 	.word	0x20012c18
 800e6b4:	20012c20 	.word	0x20012c20
 800e6b8:	2001277c 	.word	0x2001277c
 800e6bc:	20012770 	.word	0x20012770
 800e6c0:	20012c68 	.word	0x20012c68

0800e6c4 <xTaskCreateStatic>:
	{
 800e6c4:	b530      	push	{r4, r5, lr}
 800e6c6:	b087      	sub	sp, #28
 800e6c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e6ca:	b1c4      	cbz	r4, 800e6fe <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800e6cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e6ce:	b16d      	cbz	r5, 800e6ec <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e6d0:	25ac      	movs	r5, #172	; 0xac
 800e6d2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e6d4:	9d05      	ldr	r5, [sp, #20]
 800e6d6:	2dac      	cmp	r5, #172	; 0xac
 800e6d8:	d01a      	beq.n	800e710 <xTaskCreateStatic+0x4c>
 800e6da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6de:	f383 8811 	msr	BASEPRI, r3
 800e6e2:	f3bf 8f6f 	isb	sy
 800e6e6:	f3bf 8f4f 	dsb	sy
 800e6ea:	e7fe      	b.n	800e6ea <xTaskCreateStatic+0x26>
 800e6ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6f0:	f383 8811 	msr	BASEPRI, r3
 800e6f4:	f3bf 8f6f 	isb	sy
 800e6f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e6fc:	e7fe      	b.n	800e6fc <xTaskCreateStatic+0x38>
 800e6fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e702:	f383 8811 	msr	BASEPRI, r3
 800e706:	f3bf 8f6f 	isb	sy
 800e70a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e70e:	e7fe      	b.n	800e70e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e710:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e712:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e714:	2402      	movs	r4, #2
 800e716:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e71a:	ac04      	add	r4, sp, #16
 800e71c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800e720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e722:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e724:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e726:	f7ff fda9 	bl	800e27c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e72a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e72c:	f7ff fd1e 	bl	800e16c <prvAddNewTaskToReadyList>
	}
 800e730:	9804      	ldr	r0, [sp, #16]
 800e732:	b007      	add	sp, #28
 800e734:	bd30      	pop	{r4, r5, pc}
 800e736:	bf00      	nop

0800e738 <xTaskCreate>:
	{
 800e738:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e73c:	4607      	mov	r7, r0
 800e73e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e740:	0090      	lsls	r0, r2, #2
	{
 800e742:	4615      	mov	r5, r2
 800e744:	4688      	mov	r8, r1
 800e746:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e748:	f7fe f9ae 	bl	800caa8 <pvPortMalloc>
			if( pxStack != NULL )
 800e74c:	b1d8      	cbz	r0, 800e786 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e74e:	4604      	mov	r4, r0
 800e750:	20ac      	movs	r0, #172	; 0xac
 800e752:	f7fe f9a9 	bl	800caa8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e756:	4606      	mov	r6, r0
 800e758:	b1d0      	cbz	r0, 800e790 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800e75a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e75c:	2400      	movs	r4, #0
 800e75e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e762:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e764:	9401      	str	r4, [sp, #4]
 800e766:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e768:	9602      	str	r6, [sp, #8]
 800e76a:	464b      	mov	r3, r9
 800e76c:	462a      	mov	r2, r5
 800e76e:	4641      	mov	r1, r8
 800e770:	4638      	mov	r0, r7
 800e772:	9400      	str	r4, [sp, #0]
 800e774:	f7ff fd82 	bl	800e27c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e778:	4630      	mov	r0, r6
 800e77a:	f7ff fcf7 	bl	800e16c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e77e:	2001      	movs	r0, #1
	}
 800e780:	b005      	add	sp, #20
 800e782:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e786:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800e78a:	b005      	add	sp, #20
 800e78c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e790:	4620      	mov	r0, r4
 800e792:	f7fe fa45 	bl	800cc20 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e796:	f04f 30ff 	mov.w	r0, #4294967295
 800e79a:	e7f1      	b.n	800e780 <xTaskCreate+0x48>

0800e79c <vTaskDelay>:
	{
 800e79c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e79e:	b950      	cbnz	r0, 800e7b6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e7a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e7a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e7a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e7ac:	f3bf 8f4f 	dsb	sy
 800e7b0:	f3bf 8f6f 	isb	sy
	}
 800e7b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e7b6:	4d1e      	ldr	r5, [pc, #120]	; (800e830 <vTaskDelay+0x94>)
 800e7b8:	682b      	ldr	r3, [r5, #0]
 800e7ba:	b143      	cbz	r3, 800e7ce <vTaskDelay+0x32>
 800e7bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7c0:	f383 8811 	msr	BASEPRI, r3
 800e7c4:	f3bf 8f6f 	isb	sy
 800e7c8:	f3bf 8f4f 	dsb	sy
 800e7cc:	e7fe      	b.n	800e7cc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800e7ce:	682b      	ldr	r3, [r5, #0]
 800e7d0:	3301      	adds	r3, #1
 800e7d2:	4604      	mov	r4, r0
 800e7d4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e7d6:	4b17      	ldr	r3, [pc, #92]	; (800e834 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e7d8:	4e17      	ldr	r6, [pc, #92]	; (800e838 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800e7da:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e7dc:	6830      	ldr	r0, [r6, #0]
 800e7de:	3004      	adds	r0, #4
 800e7e0:	f7fe faba 	bl	800cd58 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e7e4:	6833      	ldr	r3, [r6, #0]
 800e7e6:	19e4      	adds	r4, r4, r7
 800e7e8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800e7ea:	d310      	bcc.n	800e80e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e7ec:	4b13      	ldr	r3, [pc, #76]	; (800e83c <vTaskDelay+0xa0>)
 800e7ee:	6818      	ldr	r0, [r3, #0]
 800e7f0:	6831      	ldr	r1, [r6, #0]
 800e7f2:	3104      	adds	r1, #4
 800e7f4:	f7fe fa98 	bl	800cd28 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800e7f8:	682b      	ldr	r3, [r5, #0]
 800e7fa:	b9a3      	cbnz	r3, 800e826 <vTaskDelay+0x8a>
 800e7fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e800:	f383 8811 	msr	BASEPRI, r3
 800e804:	f3bf 8f6f 	isb	sy
 800e808:	f3bf 8f4f 	dsb	sy
 800e80c:	e7fe      	b.n	800e80c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e80e:	4b0c      	ldr	r3, [pc, #48]	; (800e840 <vTaskDelay+0xa4>)
 800e810:	6818      	ldr	r0, [r3, #0]
 800e812:	6831      	ldr	r1, [r6, #0]
 800e814:	3104      	adds	r1, #4
 800e816:	f7fe fa87 	bl	800cd28 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800e81a:	4b0a      	ldr	r3, [pc, #40]	; (800e844 <vTaskDelay+0xa8>)
 800e81c:	681a      	ldr	r2, [r3, #0]
 800e81e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800e820:	bf38      	it	cc
 800e822:	601c      	strcc	r4, [r3, #0]
 800e824:	e7e8      	b.n	800e7f8 <vTaskDelay+0x5c>
 800e826:	f7ff feb3 	bl	800e590 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800e82a:	2800      	cmp	r0, #0
 800e82c:	d0b8      	beq.n	800e7a0 <vTaskDelay+0x4>
	}
 800e82e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e830:	20012be4 	.word	0x20012be4
 800e834:	20012c64 	.word	0x20012c64
 800e838:	20012770 	.word	0x20012770
 800e83c:	20012778 	.word	0x20012778
 800e840:	20012774 	.word	0x20012774
 800e844:	20012c18 	.word	0x20012c18

0800e848 <vTaskStartScheduler>:
{
 800e848:	b530      	push	{r4, r5, lr}
 800e84a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e84c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e84e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e850:	a906      	add	r1, sp, #24
 800e852:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e854:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e858:	f7fe f908 	bl	800ca6c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e85c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e860:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800e862:	b1bb      	cbz	r3, 800e894 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800e864:	b16d      	cbz	r5, 800e882 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e866:	21ac      	movs	r1, #172	; 0xac
 800e868:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800e86a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e86c:	29ac      	cmp	r1, #172	; 0xac
 800e86e:	d01a      	beq.n	800e8a6 <vTaskStartScheduler+0x5e>
 800e870:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e874:	f383 8811 	msr	BASEPRI, r3
 800e878:	f3bf 8f6f 	isb	sy
 800e87c:	f3bf 8f4f 	dsb	sy
 800e880:	e7fe      	b.n	800e880 <vTaskStartScheduler+0x38>
 800e882:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e886:	f383 8811 	msr	BASEPRI, r3
 800e88a:	f3bf 8f6f 	isb	sy
 800e88e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e892:	e7fe      	b.n	800e892 <vTaskStartScheduler+0x4a>
 800e894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e898:	f383 8811 	msr	BASEPRI, r3
 800e89c:	f3bf 8f6f 	isb	sy
 800e8a0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e8a4:	e7fe      	b.n	800e8a4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e8a6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e8a8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e8aa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e8ac:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e8b0:	4623      	mov	r3, r4
 800e8b2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800e8b6:	491b      	ldr	r1, [pc, #108]	; (800e924 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e8b8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e8ba:	9400      	str	r4, [sp, #0]
 800e8bc:	481a      	ldr	r0, [pc, #104]	; (800e928 <vTaskStartScheduler+0xe0>)
 800e8be:	f7ff fcdd 	bl	800e27c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e8c2:	4628      	mov	r0, r5
 800e8c4:	f7ff fc52 	bl	800e16c <prvAddNewTaskToReadyList>
		return xReturn;
 800e8c8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800e8ca:	b1eb      	cbz	r3, 800e908 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800e8cc:	f000 fc6e 	bl	800f1ac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e8d0:	2801      	cmp	r0, #1
 800e8d2:	d11b      	bne.n	800e90c <vTaskStartScheduler+0xc4>
 800e8d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8d8:	f383 8811 	msr	BASEPRI, r3
 800e8dc:	f3bf 8f6f 	isb	sy
 800e8e0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e8e4:	4b11      	ldr	r3, [pc, #68]	; (800e92c <vTaskStartScheduler+0xe4>)
 800e8e6:	4a12      	ldr	r2, [pc, #72]	; (800e930 <vTaskStartScheduler+0xe8>)
 800e8e8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e8ea:	4912      	ldr	r1, [pc, #72]	; (800e934 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e8ec:	3358      	adds	r3, #88	; 0x58
 800e8ee:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800e8f0:	4a11      	ldr	r2, [pc, #68]	; (800e938 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e8f2:	4b12      	ldr	r3, [pc, #72]	; (800e93c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800e8f4:	f04f 35ff 	mov.w	r5, #4294967295
 800e8f8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800e8fa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e8fc:	601c      	str	r4, [r3, #0]
}
 800e8fe:	b00b      	add	sp, #44	; 0x2c
 800e900:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e904:	f7fe bb38 	b.w	800cf78 <xPortStartScheduler>
}
 800e908:	b00b      	add	sp, #44	; 0x2c
 800e90a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e90c:	3001      	adds	r0, #1
 800e90e:	d1fb      	bne.n	800e908 <vTaskStartScheduler+0xc0>
 800e910:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e914:	f383 8811 	msr	BASEPRI, r3
 800e918:	f3bf 8f6f 	isb	sy
 800e91c:	f3bf 8f4f 	dsb	sy
 800e920:	e7fe      	b.n	800e920 <vTaskStartScheduler+0xd8>
 800e922:	bf00      	nop
 800e924:	0802d91c 	.word	0x0802d91c
 800e928:	0800e3a9 	.word	0x0800e3a9
 800e92c:	20012770 	.word	0x20012770
 800e930:	20000160 	.word	0x20000160
 800e934:	20012c18 	.word	0x20012c18
 800e938:	20012c38 	.word	0x20012c38
 800e93c:	20012c64 	.word	0x20012c64

0800e940 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e940:	4a02      	ldr	r2, [pc, #8]	; (800e94c <vTaskSuspendAll+0xc>)
 800e942:	6813      	ldr	r3, [r2, #0]
 800e944:	3301      	adds	r3, #1
 800e946:	6013      	str	r3, [r2, #0]
}
 800e948:	4770      	bx	lr
 800e94a:	bf00      	nop
 800e94c:	20012be4 	.word	0x20012be4

0800e950 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800e950:	4b06      	ldr	r3, [pc, #24]	; (800e96c <xTaskResumeAll+0x1c>)
 800e952:	681b      	ldr	r3, [r3, #0]
 800e954:	b943      	cbnz	r3, 800e968 <xTaskResumeAll+0x18>
 800e956:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e95a:	f383 8811 	msr	BASEPRI, r3
 800e95e:	f3bf 8f6f 	isb	sy
 800e962:	f3bf 8f4f 	dsb	sy
 800e966:	e7fe      	b.n	800e966 <xTaskResumeAll+0x16>
 800e968:	f7ff be12 	b.w	800e590 <xTaskResumeAll.part.0>
 800e96c:	20012be4 	.word	0x20012be4

0800e970 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e970:	4b01      	ldr	r3, [pc, #4]	; (800e978 <xTaskGetTickCount+0x8>)
 800e972:	6818      	ldr	r0, [r3, #0]
}
 800e974:	4770      	bx	lr
 800e976:	bf00      	nop
 800e978:	20012c64 	.word	0x20012c64

0800e97c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e97c:	4b05      	ldr	r3, [pc, #20]	; (800e994 <xTaskIncrementTick+0x18>)
 800e97e:	681b      	ldr	r3, [r3, #0]
 800e980:	b90b      	cbnz	r3, 800e986 <xTaskIncrementTick+0xa>
 800e982:	f7ff bd61 	b.w	800e448 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800e986:	4a04      	ldr	r2, [pc, #16]	; (800e998 <xTaskIncrementTick+0x1c>)
 800e988:	6813      	ldr	r3, [r2, #0]
 800e98a:	3301      	adds	r3, #1
}
 800e98c:	2000      	movs	r0, #0
		++xPendedTicks;
 800e98e:	6013      	str	r3, [r2, #0]
}
 800e990:	4770      	bx	lr
 800e992:	bf00      	nop
 800e994:	20012be4 	.word	0x20012be4
 800e998:	20012c20 	.word	0x20012c20

0800e99c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e99c:	4b1f      	ldr	r3, [pc, #124]	; (800ea1c <vTaskSwitchContext+0x80>)
 800e99e:	681b      	ldr	r3, [r3, #0]
 800e9a0:	b11b      	cbz	r3, 800e9aa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800e9a2:	4b1f      	ldr	r3, [pc, #124]	; (800ea20 <vTaskSwitchContext+0x84>)
 800e9a4:	2201      	movs	r2, #1
 800e9a6:	601a      	str	r2, [r3, #0]
 800e9a8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800e9aa:	4a1d      	ldr	r2, [pc, #116]	; (800ea20 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9ac:	491d      	ldr	r1, [pc, #116]	; (800ea24 <vTaskSwitchContext+0x88>)
{
 800e9ae:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9b0:	4c1d      	ldr	r4, [pc, #116]	; (800ea28 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800e9b2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9b4:	6823      	ldr	r3, [r4, #0]
 800e9b6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e9ba:	0092      	lsls	r2, r2, #2
 800e9bc:	0098      	lsls	r0, r3, #2
 800e9be:	588a      	ldr	r2, [r1, r2]
 800e9c0:	b942      	cbnz	r2, 800e9d4 <vTaskSwitchContext+0x38>
 800e9c2:	b313      	cbz	r3, 800ea0a <vTaskSwitchContext+0x6e>
 800e9c4:	3b01      	subs	r3, #1
 800e9c6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e9ca:	0098      	lsls	r0, r3, #2
 800e9cc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800e9d0:	2a00      	cmp	r2, #0
 800e9d2:	d0f6      	beq.n	800e9c2 <vTaskSwitchContext+0x26>
 800e9d4:	4418      	add	r0, r3
 800e9d6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800e9da:	4662      	mov	r2, ip
 800e9dc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e9e0:	6849      	ldr	r1, [r1, #4]
 800e9e2:	f8cc 1004 	str.w	r1, [ip, #4]
 800e9e6:	3208      	adds	r2, #8
 800e9e8:	4291      	cmp	r1, r2
 800e9ea:	bf08      	it	eq
 800e9ec:	6849      	ldreq	r1, [r1, #4]
 800e9ee:	4a0f      	ldr	r2, [pc, #60]	; (800ea2c <vTaskSwitchContext+0x90>)
 800e9f0:	bf08      	it	eq
 800e9f2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800e9f6:	68c9      	ldr	r1, [r1, #12]
 800e9f8:	6011      	str	r1, [r2, #0]
 800e9fa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e9fc:	6813      	ldr	r3, [r2, #0]
 800e9fe:	4a0c      	ldr	r2, [pc, #48]	; (800ea30 <vTaskSwitchContext+0x94>)
}
 800ea00:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ea04:	3358      	adds	r3, #88	; 0x58
 800ea06:	6013      	str	r3, [r2, #0]
}
 800ea08:	4770      	bx	lr
 800ea0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea0e:	f383 8811 	msr	BASEPRI, r3
 800ea12:	f3bf 8f6f 	isb	sy
 800ea16:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea1a:	e7fe      	b.n	800ea1a <vTaskSwitchContext+0x7e>
 800ea1c:	20012be4 	.word	0x20012be4
 800ea20:	20012c68 	.word	0x20012c68
 800ea24:	2001277c 	.word	0x2001277c
 800ea28:	20012bec 	.word	0x20012bec
 800ea2c:	20012770 	.word	0x20012770
 800ea30:	20000160 	.word	0x20000160

0800ea34 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800ea34:	b1d0      	cbz	r0, 800ea6c <vTaskPlaceOnEventList+0x38>
{
 800ea36:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ea38:	4d1a      	ldr	r5, [pc, #104]	; (800eaa4 <vTaskPlaceOnEventList+0x70>)
 800ea3a:	460c      	mov	r4, r1
 800ea3c:	6829      	ldr	r1, [r5, #0]
 800ea3e:	3118      	adds	r1, #24
 800ea40:	f7fe f972 	bl	800cd28 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ea44:	4b18      	ldr	r3, [pc, #96]	; (800eaa8 <vTaskPlaceOnEventList+0x74>)
 800ea46:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ea48:	6828      	ldr	r0, [r5, #0]
 800ea4a:	3004      	adds	r0, #4
 800ea4c:	f7fe f984 	bl	800cd58 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ea50:	1c63      	adds	r3, r4, #1
 800ea52:	d014      	beq.n	800ea7e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ea54:	682b      	ldr	r3, [r5, #0]
 800ea56:	19a4      	adds	r4, r4, r6
 800ea58:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ea5a:	d317      	bcc.n	800ea8c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea5c:	4b13      	ldr	r3, [pc, #76]	; (800eaac <vTaskPlaceOnEventList+0x78>)
 800ea5e:	6818      	ldr	r0, [r3, #0]
 800ea60:	6829      	ldr	r1, [r5, #0]
}
 800ea62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea66:	3104      	adds	r1, #4
 800ea68:	f7fe b95e 	b.w	800cd28 <vListInsert>
 800ea6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea70:	f383 8811 	msr	BASEPRI, r3
 800ea74:	f3bf 8f6f 	isb	sy
 800ea78:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ea7c:	e7fe      	b.n	800ea7c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea7e:	6829      	ldr	r1, [r5, #0]
 800ea80:	480b      	ldr	r0, [pc, #44]	; (800eab0 <vTaskPlaceOnEventList+0x7c>)
}
 800ea82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea86:	3104      	adds	r1, #4
 800ea88:	f7fe b93e 	b.w	800cd08 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea8c:	4b09      	ldr	r3, [pc, #36]	; (800eab4 <vTaskPlaceOnEventList+0x80>)
 800ea8e:	6818      	ldr	r0, [r3, #0]
 800ea90:	6829      	ldr	r1, [r5, #0]
 800ea92:	3104      	adds	r1, #4
 800ea94:	f7fe f948 	bl	800cd28 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ea98:	4b07      	ldr	r3, [pc, #28]	; (800eab8 <vTaskPlaceOnEventList+0x84>)
 800ea9a:	681a      	ldr	r2, [r3, #0]
 800ea9c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ea9e:	bf38      	it	cc
 800eaa0:	601c      	strcc	r4, [r3, #0]
}
 800eaa2:	bd70      	pop	{r4, r5, r6, pc}
 800eaa4:	20012770 	.word	0x20012770
 800eaa8:	20012c64 	.word	0x20012c64
 800eaac:	20012778 	.word	0x20012778
 800eab0:	20012c3c 	.word	0x20012c3c
 800eab4:	20012774 	.word	0x20012774
 800eab8:	20012c18 	.word	0x20012c18

0800eabc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800eabc:	b330      	cbz	r0, 800eb0c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800eabe:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800eac0:	4e1d      	ldr	r6, [pc, #116]	; (800eb38 <vTaskPlaceOnEventListRestricted+0x7c>)
 800eac2:	460c      	mov	r4, r1
 800eac4:	6831      	ldr	r1, [r6, #0]
 800eac6:	4615      	mov	r5, r2
 800eac8:	3118      	adds	r1, #24
 800eaca:	f7fe f91d 	bl	800cd08 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800eace:	4b1b      	ldr	r3, [pc, #108]	; (800eb3c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ead0:	b985      	cbnz	r5, 800eaf4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ead2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ead4:	6830      	ldr	r0, [r6, #0]
 800ead6:	3004      	adds	r0, #4
 800ead8:	f7fe f93e 	bl	800cd58 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eadc:	6833      	ldr	r3, [r6, #0]
 800eade:	1964      	adds	r4, r4, r5
 800eae0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800eae2:	d31c      	bcc.n	800eb1e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eae4:	4b16      	ldr	r3, [pc, #88]	; (800eb40 <vTaskPlaceOnEventListRestricted+0x84>)
 800eae6:	6818      	ldr	r0, [r3, #0]
 800eae8:	6831      	ldr	r1, [r6, #0]
	}
 800eaea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eaee:	3104      	adds	r1, #4
 800eaf0:	f7fe b91a 	b.w	800cd28 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800eaf4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eaf6:	6830      	ldr	r0, [r6, #0]
 800eaf8:	3004      	adds	r0, #4
 800eafa:	f7fe f92d 	bl	800cd58 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eafe:	6831      	ldr	r1, [r6, #0]
 800eb00:	4810      	ldr	r0, [pc, #64]	; (800eb44 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800eb02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb06:	3104      	adds	r1, #4
 800eb08:	f7fe b8fe 	b.w	800cd08 <vListInsertEnd>
 800eb0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb10:	f383 8811 	msr	BASEPRI, r3
 800eb14:	f3bf 8f6f 	isb	sy
 800eb18:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800eb1c:	e7fe      	b.n	800eb1c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb1e:	4b0a      	ldr	r3, [pc, #40]	; (800eb48 <vTaskPlaceOnEventListRestricted+0x8c>)
 800eb20:	6818      	ldr	r0, [r3, #0]
 800eb22:	6831      	ldr	r1, [r6, #0]
 800eb24:	3104      	adds	r1, #4
 800eb26:	f7fe f8ff 	bl	800cd28 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800eb2a:	4b08      	ldr	r3, [pc, #32]	; (800eb4c <vTaskPlaceOnEventListRestricted+0x90>)
 800eb2c:	681a      	ldr	r2, [r3, #0]
 800eb2e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800eb30:	bf38      	it	cc
 800eb32:	601c      	strcc	r4, [r3, #0]
	}
 800eb34:	bd70      	pop	{r4, r5, r6, pc}
 800eb36:	bf00      	nop
 800eb38:	20012770 	.word	0x20012770
 800eb3c:	20012c64 	.word	0x20012c64
 800eb40:	20012778 	.word	0x20012778
 800eb44:	20012c3c 	.word	0x20012c3c
 800eb48:	20012774 	.word	0x20012774
 800eb4c:	20012c18 	.word	0x20012c18

0800eb50 <xTaskRemoveFromEventList>:
{
 800eb50:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb52:	68c3      	ldr	r3, [r0, #12]
 800eb54:	68dc      	ldr	r4, [r3, #12]
{
 800eb56:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800eb58:	2c00      	cmp	r4, #0
 800eb5a:	d02b      	beq.n	800ebb4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800eb5c:	f104 0518 	add.w	r5, r4, #24
 800eb60:	4628      	mov	r0, r5
 800eb62:	f7fe f8f9 	bl	800cd58 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eb66:	4b18      	ldr	r3, [pc, #96]	; (800ebc8 <xTaskRemoveFromEventList+0x78>)
 800eb68:	681b      	ldr	r3, [r3, #0]
 800eb6a:	b17b      	cbz	r3, 800eb8c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800eb6c:	4817      	ldr	r0, [pc, #92]	; (800ebcc <xTaskRemoveFromEventList+0x7c>)
 800eb6e:	4629      	mov	r1, r5
 800eb70:	f7fe f8ca 	bl	800cd08 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800eb74:	4b16      	ldr	r3, [pc, #88]	; (800ebd0 <xTaskRemoveFromEventList+0x80>)
 800eb76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eb78:	681b      	ldr	r3, [r3, #0]
 800eb7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb7c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800eb7e:	bf85      	ittet	hi
 800eb80:	4b14      	ldrhi	r3, [pc, #80]	; (800ebd4 <xTaskRemoveFromEventList+0x84>)
 800eb82:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800eb84:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800eb86:	6018      	strhi	r0, [r3, #0]
}
 800eb88:	b003      	add	sp, #12
 800eb8a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800eb8c:	1d21      	adds	r1, r4, #4
 800eb8e:	4608      	mov	r0, r1
 800eb90:	9101      	str	r1, [sp, #4]
 800eb92:	f7fe f8e1 	bl	800cd58 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800eb96:	4a10      	ldr	r2, [pc, #64]	; (800ebd8 <xTaskRemoveFromEventList+0x88>)
 800eb98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eb9a:	6810      	ldr	r0, [r2, #0]
 800eb9c:	9901      	ldr	r1, [sp, #4]
 800eb9e:	4283      	cmp	r3, r0
 800eba0:	480e      	ldr	r0, [pc, #56]	; (800ebdc <xTaskRemoveFromEventList+0x8c>)
 800eba2:	bf88      	it	hi
 800eba4:	6013      	strhi	r3, [r2, #0]
 800eba6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ebaa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ebae:	f7fe f8ab 	bl	800cd08 <vListInsertEnd>
 800ebb2:	e7df      	b.n	800eb74 <xTaskRemoveFromEventList+0x24>
 800ebb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebb8:	f383 8811 	msr	BASEPRI, r3
 800ebbc:	f3bf 8f6f 	isb	sy
 800ebc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800ebc4:	e7fe      	b.n	800ebc4 <xTaskRemoveFromEventList+0x74>
 800ebc6:	bf00      	nop
 800ebc8:	20012be4 	.word	0x20012be4
 800ebcc:	20012c24 	.word	0x20012c24
 800ebd0:	20012770 	.word	0x20012770
 800ebd4:	20012c68 	.word	0x20012c68
 800ebd8:	20012bec 	.word	0x20012bec
 800ebdc:	2001277c 	.word	0x2001277c

0800ebe0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ebe0:	4a03      	ldr	r2, [pc, #12]	; (800ebf0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ebe2:	4b04      	ldr	r3, [pc, #16]	; (800ebf4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ebe4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ebe6:	681b      	ldr	r3, [r3, #0]
 800ebe8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800ebec:	4770      	bx	lr
 800ebee:	bf00      	nop
 800ebf0:	20012c1c 	.word	0x20012c1c
 800ebf4:	20012c64 	.word	0x20012c64

0800ebf8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800ebf8:	b328      	cbz	r0, 800ec46 <xTaskCheckForTimeOut+0x4e>
{
 800ebfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ebfc:	460d      	mov	r5, r1
 800ebfe:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800ec00:	b1c1      	cbz	r1, 800ec34 <xTaskCheckForTimeOut+0x3c>
 800ec02:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800ec04:	f7fe f926 	bl	800ce54 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800ec08:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800ec0a:	4a1d      	ldr	r2, [pc, #116]	; (800ec80 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800ec0c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800ec0e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ec10:	d030      	beq.n	800ec74 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ec12:	f8df c070 	ldr.w	ip, [pc, #112]	; 800ec84 <xTaskCheckForTimeOut+0x8c>
 800ec16:	e9d4 6000 	ldrd	r6, r0, [r4]
 800ec1a:	f8dc 7000 	ldr.w	r7, [ip]
 800ec1e:	42be      	cmp	r6, r7
 800ec20:	d01a      	beq.n	800ec58 <xTaskCheckForTimeOut+0x60>
 800ec22:	4288      	cmp	r0, r1
 800ec24:	d818      	bhi.n	800ec58 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800ec26:	2001      	movs	r0, #1
 800ec28:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ec2a:	f7fe f935 	bl	800ce98 <vPortExitCritical>
}
 800ec2e:	9801      	ldr	r0, [sp, #4]
 800ec30:	b003      	add	sp, #12
 800ec32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec38:	f383 8811 	msr	BASEPRI, r3
 800ec3c:	f3bf 8f6f 	isb	sy
 800ec40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800ec44:	e7fe      	b.n	800ec44 <xTaskCheckForTimeOut+0x4c>
 800ec46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec4a:	f383 8811 	msr	BASEPRI, r3
 800ec4e:	f3bf 8f6f 	isb	sy
 800ec52:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800ec56:	e7fe      	b.n	800ec56 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ec58:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800ec5c:	4573      	cmp	r3, lr
 800ec5e:	d90b      	bls.n	800ec78 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800ec60:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ec62:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ec66:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800ec68:	4403      	add	r3, r0
 800ec6a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800ec6c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ec6e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800ec72:	e7d9      	b.n	800ec28 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800ec74:	2000      	movs	r0, #0
 800ec76:	e7d7      	b.n	800ec28 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800ec78:	2300      	movs	r3, #0
 800ec7a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800ec7c:	2001      	movs	r0, #1
 800ec7e:	e7d3      	b.n	800ec28 <xTaskCheckForTimeOut+0x30>
 800ec80:	20012c64 	.word	0x20012c64
 800ec84:	20012c1c 	.word	0x20012c1c

0800ec88 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800ec88:	4b01      	ldr	r3, [pc, #4]	; (800ec90 <vTaskMissedYield+0x8>)
 800ec8a:	2201      	movs	r2, #1
 800ec8c:	601a      	str	r2, [r3, #0]
}
 800ec8e:	4770      	bx	lr
 800ec90:	20012c68 	.word	0x20012c68

0800ec94 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800ec94:	4b05      	ldr	r3, [pc, #20]	; (800ecac <xTaskGetSchedulerState+0x18>)
 800ec96:	681b      	ldr	r3, [r3, #0]
 800ec98:	b133      	cbz	r3, 800eca8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ec9a:	4b05      	ldr	r3, [pc, #20]	; (800ecb0 <xTaskGetSchedulerState+0x1c>)
 800ec9c:	6818      	ldr	r0, [r3, #0]
 800ec9e:	fab0 f080 	clz	r0, r0
 800eca2:	0940      	lsrs	r0, r0, #5
 800eca4:	0040      	lsls	r0, r0, #1
 800eca6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800eca8:	2001      	movs	r0, #1
	}
 800ecaa:	4770      	bx	lr
 800ecac:	20012c38 	.word	0x20012c38
 800ecb0:	20012be4 	.word	0x20012be4

0800ecb4 <xTaskPriorityInherit>:
	{
 800ecb4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ecb6:	4604      	mov	r4, r0
	{
 800ecb8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800ecba:	b1c8      	cbz	r0, 800ecf0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ecbc:	4d1d      	ldr	r5, [pc, #116]	; (800ed34 <xTaskPriorityInherit+0x80>)
 800ecbe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ecc0:	682a      	ldr	r2, [r5, #0]
 800ecc2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ecc4:	4293      	cmp	r3, r2
 800ecc6:	d215      	bcs.n	800ecf4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ecc8:	6982      	ldr	r2, [r0, #24]
 800ecca:	2a00      	cmp	r2, #0
 800eccc:	db04      	blt.n	800ecd8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ecce:	682a      	ldr	r2, [r5, #0]
 800ecd0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ecd2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800ecd6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ecd8:	4e17      	ldr	r6, [pc, #92]	; (800ed38 <xTaskPriorityInherit+0x84>)
 800ecda:	6962      	ldr	r2, [r4, #20]
 800ecdc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ece0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800ece4:	429a      	cmp	r2, r3
 800ece6:	d00e      	beq.n	800ed06 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ece8:	682b      	ldr	r3, [r5, #0]
 800ecea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ecec:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800ecee:	2001      	movs	r0, #1
	}
 800ecf0:	b002      	add	sp, #8
 800ecf2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ecf4:	682b      	ldr	r3, [r5, #0]
 800ecf6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ecf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ecfa:	4298      	cmp	r0, r3
 800ecfc:	bf2c      	ite	cs
 800ecfe:	2000      	movcs	r0, #0
 800ed00:	2001      	movcc	r0, #1
	}
 800ed02:	b002      	add	sp, #8
 800ed04:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed06:	1d21      	adds	r1, r4, #4
 800ed08:	4608      	mov	r0, r1
 800ed0a:	9101      	str	r1, [sp, #4]
 800ed0c:	f7fe f824 	bl	800cd58 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ed10:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ed12:	4b0a      	ldr	r3, [pc, #40]	; (800ed3c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ed14:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ed16:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ed18:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ed1a:	4290      	cmp	r0, r2
 800ed1c:	bf88      	it	hi
 800ed1e:	6018      	strhi	r0, [r3, #0]
 800ed20:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ed24:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800ed28:	9901      	ldr	r1, [sp, #4]
 800ed2a:	f7fd ffed 	bl	800cd08 <vListInsertEnd>
				xReturn = pdTRUE;
 800ed2e:	2001      	movs	r0, #1
 800ed30:	e7de      	b.n	800ecf0 <xTaskPriorityInherit+0x3c>
 800ed32:	bf00      	nop
 800ed34:	20012770 	.word	0x20012770
 800ed38:	2001277c 	.word	0x2001277c
 800ed3c:	20012bec 	.word	0x20012bec

0800ed40 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800ed40:	b318      	cbz	r0, 800ed8a <xTaskPriorityDisinherit+0x4a>
	{
 800ed42:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800ed44:	4b1e      	ldr	r3, [pc, #120]	; (800edc0 <xTaskPriorityDisinherit+0x80>)
 800ed46:	681c      	ldr	r4, [r3, #0]
 800ed48:	4284      	cmp	r4, r0
	{
 800ed4a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800ed4c:	d008      	beq.n	800ed60 <xTaskPriorityDisinherit+0x20>
 800ed4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed52:	f383 8811 	msr	BASEPRI, r3
 800ed56:	f3bf 8f6f 	isb	sy
 800ed5a:	f3bf 8f4f 	dsb	sy
 800ed5e:	e7fe      	b.n	800ed5e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800ed60:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ed62:	b14b      	cbz	r3, 800ed78 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ed64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ed66:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ed68:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ed6a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ed6c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ed6e:	d000      	beq.n	800ed72 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ed70:	b16b      	cbz	r3, 800ed8e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800ed72:	2000      	movs	r0, #0
	}
 800ed74:	b002      	add	sp, #8
 800ed76:	bd10      	pop	{r4, pc}
 800ed78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed7c:	f383 8811 	msr	BASEPRI, r3
 800ed80:	f3bf 8f6f 	isb	sy
 800ed84:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ed88:	e7fe      	b.n	800ed88 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800ed8a:	2000      	movs	r0, #0
	}
 800ed8c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed8e:	1d21      	adds	r1, r4, #4
 800ed90:	4608      	mov	r0, r1
 800ed92:	9101      	str	r1, [sp, #4]
 800ed94:	f7fd ffe0 	bl	800cd58 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ed98:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ed9a:	4a0a      	ldr	r2, [pc, #40]	; (800edc4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ed9c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed9e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800eda2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800eda4:	6810      	ldr	r0, [r2, #0]
 800eda6:	9901      	ldr	r1, [sp, #4]
 800eda8:	4283      	cmp	r3, r0
 800edaa:	4807      	ldr	r0, [pc, #28]	; (800edc8 <xTaskPriorityDisinherit+0x88>)
 800edac:	bf88      	it	hi
 800edae:	6013      	strhi	r3, [r2, #0]
 800edb0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800edb4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800edb8:	f7fd ffa6 	bl	800cd08 <vListInsertEnd>
					xReturn = pdTRUE;
 800edbc:	2001      	movs	r0, #1
		return xReturn;
 800edbe:	e7d9      	b.n	800ed74 <xTaskPriorityDisinherit+0x34>
 800edc0:	20012770 	.word	0x20012770
 800edc4:	20012bec 	.word	0x20012bec
 800edc8:	2001277c 	.word	0x2001277c

0800edcc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800edcc:	2800      	cmp	r0, #0
 800edce:	d041      	beq.n	800ee54 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800edd0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800edd2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800edd4:	b083      	sub	sp, #12
 800edd6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800edd8:	b153      	cbz	r3, 800edf0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800edda:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800eddc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800edde:	4281      	cmp	r1, r0
 800ede0:	bf38      	it	cc
 800ede2:	4601      	movcc	r1, r0
 800ede4:	428a      	cmp	r2, r1
 800ede6:	d001      	beq.n	800edec <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ede8:	2b01      	cmp	r3, #1
 800edea:	d00a      	beq.n	800ee02 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800edec:	b003      	add	sp, #12
 800edee:	bd30      	pop	{r4, r5, pc}
 800edf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edf4:	f383 8811 	msr	BASEPRI, r3
 800edf8:	f3bf 8f6f 	isb	sy
 800edfc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ee00:	e7fe      	b.n	800ee00 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800ee02:	4b19      	ldr	r3, [pc, #100]	; (800ee68 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800ee04:	681b      	ldr	r3, [r3, #0]
 800ee06:	42a3      	cmp	r3, r4
 800ee08:	d025      	beq.n	800ee56 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ee0a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800ee0c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ee0e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ee10:	bfa8      	it	ge
 800ee12:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ee16:	4d15      	ldr	r5, [pc, #84]	; (800ee6c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ee18:	bfa8      	it	ge
 800ee1a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ee1c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ee20:	6961      	ldr	r1, [r4, #20]
 800ee22:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800ee26:	4299      	cmp	r1, r3
 800ee28:	d1e0      	bne.n	800edec <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ee2a:	1d21      	adds	r1, r4, #4
 800ee2c:	4608      	mov	r0, r1
 800ee2e:	9101      	str	r1, [sp, #4]
 800ee30:	f7fd ff92 	bl	800cd58 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ee34:	4b0e      	ldr	r3, [pc, #56]	; (800ee70 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800ee36:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ee38:	681a      	ldr	r2, [r3, #0]
 800ee3a:	9901      	ldr	r1, [sp, #4]
 800ee3c:	4290      	cmp	r0, r2
 800ee3e:	bf88      	it	hi
 800ee40:	6018      	strhi	r0, [r3, #0]
 800ee42:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ee46:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800ee4a:	b003      	add	sp, #12
 800ee4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ee50:	f7fd bf5a 	b.w	800cd08 <vListInsertEnd>
 800ee54:	4770      	bx	lr
 800ee56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee5a:	f383 8811 	msr	BASEPRI, r3
 800ee5e:	f3bf 8f6f 	isb	sy
 800ee62:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800ee66:	e7fe      	b.n	800ee66 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800ee68:	20012770 	.word	0x20012770
 800ee6c:	2001277c 	.word	0x2001277c
 800ee70:	20012bec 	.word	0x20012bec

0800ee74 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ee74:	4b04      	ldr	r3, [pc, #16]	; (800ee88 <pvTaskIncrementMutexHeldCount+0x14>)
 800ee76:	681a      	ldr	r2, [r3, #0]
 800ee78:	b11a      	cbz	r2, 800ee82 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ee7a:	6819      	ldr	r1, [r3, #0]
 800ee7c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ee7e:	3201      	adds	r2, #1
 800ee80:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ee82:	6818      	ldr	r0, [r3, #0]
	}
 800ee84:	4770      	bx	lr
 800ee86:	bf00      	nop
 800ee88:	20012770 	.word	0x20012770

0800ee8c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800ee8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ee90:	4e22      	ldr	r6, [pc, #136]	; (800ef1c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800ee92:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ef24 <prvSwitchTimerLists+0x98>
{
 800ee96:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800ee98:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ee9c:	e00d      	b.n	800eeba <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ee9e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eea0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eea2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eea4:	1d25      	adds	r5, r4, #4
 800eea6:	4628      	mov	r0, r5
 800eea8:	f7fd ff56 	bl	800cd58 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eeac:	6a23      	ldr	r3, [r4, #32]
 800eeae:	4620      	mov	r0, r4
 800eeb0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eeb2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800eeb6:	075b      	lsls	r3, r3, #29
 800eeb8:	d40a      	bmi.n	800eed0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800eeba:	6833      	ldr	r3, [r6, #0]
 800eebc:	681a      	ldr	r2, [r3, #0]
 800eebe:	2a00      	cmp	r2, #0
 800eec0:	d1ed      	bne.n	800ee9e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800eec2:	4a17      	ldr	r2, [pc, #92]	; (800ef20 <prvSwitchTimerLists+0x94>)
 800eec4:	6811      	ldr	r1, [r2, #0]
 800eec6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800eec8:	6013      	str	r3, [r2, #0]
}
 800eeca:	b005      	add	sp, #20
 800eecc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800eed0:	69a3      	ldr	r3, [r4, #24]
 800eed2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800eed4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eed6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800eed8:	d205      	bcs.n	800eee6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eeda:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800eedc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eede:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eee0:	f7fd ff22 	bl	800cd28 <vListInsert>
 800eee4:	e7e9      	b.n	800eeba <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800eee6:	f8d9 3000 	ldr.w	r3, [r9]
 800eeea:	b16b      	cbz	r3, 800ef08 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800eeec:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800eef0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eef2:	f7ff fecf 	bl	800ec94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eef6:	2300      	movs	r3, #0
 800eef8:	f8d9 0000 	ldr.w	r0, [r9]
 800eefc:	461a      	mov	r2, r3
 800eefe:	4669      	mov	r1, sp
 800ef00:	f7fe fa9c 	bl	800d43c <xQueueGenericSend>
				configASSERT( xResult );
 800ef04:	2800      	cmp	r0, #0
 800ef06:	d1d8      	bne.n	800eeba <prvSwitchTimerLists+0x2e>
 800ef08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef0c:	f383 8811 	msr	BASEPRI, r3
 800ef10:	f3bf 8f6f 	isb	sy
 800ef14:	f3bf 8f4f 	dsb	sy
 800ef18:	e7fe      	b.n	800ef18 <prvSwitchTimerLists+0x8c>
 800ef1a:	bf00      	nop
 800ef1c:	20012c6c 	.word	0x20012c6c
 800ef20:	20012c70 	.word	0x20012c70
 800ef24:	20012d90 	.word	0x20012d90

0800ef28 <prvTimerTask>:
{
 800ef28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef2c:	4e9b      	ldr	r6, [pc, #620]	; (800f19c <prvTimerTask+0x274>)
 800ef2e:	4d9c      	ldr	r5, [pc, #624]	; (800f1a0 <prvTimerTask+0x278>)
 800ef30:	4c9c      	ldr	r4, [pc, #624]	; (800f1a4 <prvTimerTask+0x27c>)
 800ef32:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800ef34:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800ef38:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ef3c:	6833      	ldr	r3, [r6, #0]
 800ef3e:	681f      	ldr	r7, [r3, #0]
 800ef40:	2f00      	cmp	r7, #0
 800ef42:	f000 80a8 	beq.w	800f096 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef46:	68db      	ldr	r3, [r3, #12]
 800ef48:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800ef4a:	f7ff fcf9 	bl	800e940 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ef4e:	f7ff fd0f 	bl	800e970 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ef52:	682a      	ldr	r2, [r5, #0]
 800ef54:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ef56:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ef58:	f0c0 80ae 	bcc.w	800f0b8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ef5c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ef5e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ef60:	f240 80b4 	bls.w	800f0cc <prvTimerTask+0x1a4>
 800ef64:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ef66:	6820      	ldr	r0, [r4, #0]
 800ef68:	eba7 010a 	sub.w	r1, r7, sl
 800ef6c:	f7ff f89a 	bl	800e0a4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ef70:	f7ff fcee 	bl	800e950 <xTaskResumeAll>
 800ef74:	b928      	cbnz	r0, 800ef82 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800ef76:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ef7a:	f3bf 8f4f 	dsb	sy
 800ef7e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ef82:	6820      	ldr	r0, [r4, #0]
 800ef84:	2200      	movs	r2, #0
 800ef86:	a902      	add	r1, sp, #8
 800ef88:	f7fe fc94 	bl	800d8b4 <xQueueReceive>
 800ef8c:	2800      	cmp	r0, #0
 800ef8e:	d0d5      	beq.n	800ef3c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ef90:	9b02      	ldr	r3, [sp, #8]
 800ef92:	2b00      	cmp	r3, #0
 800ef94:	db76      	blt.n	800f084 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ef96:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ef98:	697b      	ldr	r3, [r7, #20]
 800ef9a:	b113      	cbz	r3, 800efa2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ef9c:	1d38      	adds	r0, r7, #4
 800ef9e:	f7fd fedb 	bl	800cd58 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800efa2:	f7ff fce5 	bl	800e970 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800efa6:	682b      	ldr	r3, [r5, #0]
 800efa8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800efaa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800efac:	f0c0 808b 	bcc.w	800f0c6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800efb0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800efb2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800efb6:	2b09      	cmp	r3, #9
 800efb8:	d8e3      	bhi.n	800ef82 <prvTimerTask+0x5a>
 800efba:	e8df f003 	tbb	[pc, r3]
 800efbe:	0505      	.short	0x0505
 800efc0:	5a3d5305 	.word	0x5a3d5305
 800efc4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800efc8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800efcc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800efce:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800efd0:	f043 0301 	orr.w	r3, r3, #1
 800efd4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800efd8:	9b03      	ldr	r3, [sp, #12]
 800efda:	1899      	adds	r1, r3, r2
 800efdc:	bf2c      	ite	cs
 800efde:	2001      	movcs	r0, #1
 800efe0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800efe2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800efe4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800efe6:	f200 808c 	bhi.w	800f102 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800efea:	ebaa 0303 	sub.w	r3, sl, r3
 800efee:	429a      	cmp	r2, r3
 800eff0:	d832      	bhi.n	800f058 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eff2:	6a3b      	ldr	r3, [r7, #32]
 800eff4:	4638      	mov	r0, r7
 800eff6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eff8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800effc:	075b      	lsls	r3, r3, #29
 800effe:	d5c0      	bpl.n	800ef82 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f000:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f002:	9903      	ldr	r1, [sp, #12]
 800f004:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f006:	b172      	cbz	r2, 800f026 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f008:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f00a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f00e:	2300      	movs	r3, #0
 800f010:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f012:	f7ff fe3f 	bl	800ec94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f016:	2300      	movs	r3, #0
 800f018:	6820      	ldr	r0, [r4, #0]
 800f01a:	461a      	mov	r2, r3
 800f01c:	a906      	add	r1, sp, #24
 800f01e:	f7fe fa0d 	bl	800d43c <xQueueGenericSend>
							configASSERT( xResult );
 800f022:	2800      	cmp	r0, #0
 800f024:	d1ad      	bne.n	800ef82 <prvTimerTask+0x5a>
 800f026:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f02a:	f383 8811 	msr	BASEPRI, r3
 800f02e:	f3bf 8f6f 	isb	sy
 800f032:	f3bf 8f4f 	dsb	sy
 800f036:	e7fe      	b.n	800f036 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f038:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f03c:	f043 0301 	orr.w	r3, r3, #1
 800f040:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f044:	9b03      	ldr	r3, [sp, #12]
 800f046:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f048:	2b00      	cmp	r3, #0
 800f04a:	f000 809d 	beq.w	800f188 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f04e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f050:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f052:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f054:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f056:	d85e      	bhi.n	800f116 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f058:	4b53      	ldr	r3, [pc, #332]	; (800f1a8 <prvTimerTask+0x280>)
 800f05a:	1d39      	adds	r1, r7, #4
 800f05c:	6818      	ldr	r0, [r3, #0]
 800f05e:	f7fd fe63 	bl	800cd28 <vListInsert>
	return xProcessTimerNow;
 800f062:	e78e      	b.n	800ef82 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f064:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f068:	f023 0301 	bic.w	r3, r3, #1
 800f06c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f070:	e787      	b.n	800ef82 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f072:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f076:	079a      	lsls	r2, r3, #30
 800f078:	d552      	bpl.n	800f120 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f07a:	f023 0301 	bic.w	r3, r3, #1
 800f07e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f082:	e77e      	b.n	800ef82 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f084:	9b03      	ldr	r3, [sp, #12]
 800f086:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f08a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f08c:	9b02      	ldr	r3, [sp, #8]
 800f08e:	2b00      	cmp	r3, #0
 800f090:	f6ff af77 	blt.w	800ef82 <prvTimerTask+0x5a>
 800f094:	e77f      	b.n	800ef96 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f096:	f7ff fc53 	bl	800e940 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f09a:	f7ff fc69 	bl	800e970 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f09e:	682a      	ldr	r2, [r5, #0]
 800f0a0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f0a2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f0a4:	d808      	bhi.n	800f0b8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f0a6:	4b40      	ldr	r3, [pc, #256]	; (800f1a8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f0a8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f0ac:	681a      	ldr	r2, [r3, #0]
 800f0ae:	6812      	ldr	r2, [r2, #0]
 800f0b0:	fab2 f282 	clz	r2, r2
 800f0b4:	0952      	lsrs	r2, r2, #5
 800f0b6:	e756      	b.n	800ef66 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f0b8:	f7ff fee8 	bl	800ee8c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f0bc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f0c0:	f7ff fc46 	bl	800e950 <xTaskResumeAll>
 800f0c4:	e75d      	b.n	800ef82 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f0c6:	f7ff fee1 	bl	800ee8c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f0ca:	e771      	b.n	800efb0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f0cc:	f7ff fc40 	bl	800e950 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f0d0:	6832      	ldr	r2, [r6, #0]
 800f0d2:	68d2      	ldr	r2, [r2, #12]
 800f0d4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f0d8:	f10b 0104 	add.w	r1, fp, #4
 800f0dc:	4608      	mov	r0, r1
 800f0de:	9101      	str	r1, [sp, #4]
 800f0e0:	f7fd fe3a 	bl	800cd58 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f0e4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f0e8:	9901      	ldr	r1, [sp, #4]
 800f0ea:	f010 0f04 	tst.w	r0, #4
 800f0ee:	d11b      	bne.n	800f128 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f0f0:	f020 0001 	bic.w	r0, r0, #1
 800f0f4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f0f8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f0fc:	4658      	mov	r0, fp
 800f0fe:	4798      	blx	r3
}
 800f100:	e73f      	b.n	800ef82 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f102:	4553      	cmp	r3, sl
 800f104:	d902      	bls.n	800f10c <prvTimerTask+0x1e4>
 800f106:	2800      	cmp	r0, #0
 800f108:	f43f af73 	beq.w	800eff2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f10c:	6830      	ldr	r0, [r6, #0]
 800f10e:	1d39      	adds	r1, r7, #4
 800f110:	f7fd fe0a 	bl	800cd28 <vListInsert>
	return xProcessTimerNow;
 800f114:	e735      	b.n	800ef82 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f116:	6830      	ldr	r0, [r6, #0]
 800f118:	1d39      	adds	r1, r7, #4
 800f11a:	f7fd fe05 	bl	800cd28 <vListInsert>
 800f11e:	e730      	b.n	800ef82 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f120:	4638      	mov	r0, r7
 800f122:	f7fd fd7d 	bl	800cc20 <vPortFree>
 800f126:	e72c      	b.n	800ef82 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f128:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f12c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f130:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f132:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f134:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f138:	d903      	bls.n	800f142 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f13a:	6830      	ldr	r0, [r6, #0]
 800f13c:	f7fd fdf4 	bl	800cd28 <vListInsert>
	return xProcessTimerNow;
 800f140:	e7da      	b.n	800f0f8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f142:	ebaa 0307 	sub.w	r3, sl, r7
 800f146:	429a      	cmp	r2, r3
 800f148:	d819      	bhi.n	800f17e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f14a:	6823      	ldr	r3, [r4, #0]
 800f14c:	b173      	cbz	r3, 800f16c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f14e:	2300      	movs	r3, #0
 800f150:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f152:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f154:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f158:	f7ff fd9c 	bl	800ec94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f15c:	2300      	movs	r3, #0
 800f15e:	6820      	ldr	r0, [r4, #0]
 800f160:	461a      	mov	r2, r3
 800f162:	a906      	add	r1, sp, #24
 800f164:	f7fe f96a 	bl	800d43c <xQueueGenericSend>
			configASSERT( xResult );
 800f168:	2800      	cmp	r0, #0
 800f16a:	d1c5      	bne.n	800f0f8 <prvTimerTask+0x1d0>
 800f16c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f170:	f383 8811 	msr	BASEPRI, r3
 800f174:	f3bf 8f6f 	isb	sy
 800f178:	f3bf 8f4f 	dsb	sy
 800f17c:	e7fe      	b.n	800f17c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f17e:	4b0a      	ldr	r3, [pc, #40]	; (800f1a8 <prvTimerTask+0x280>)
 800f180:	6818      	ldr	r0, [r3, #0]
 800f182:	f7fd fdd1 	bl	800cd28 <vListInsert>
	return xProcessTimerNow;
 800f186:	e7b7      	b.n	800f0f8 <prvTimerTask+0x1d0>
 800f188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f18c:	f383 8811 	msr	BASEPRI, r3
 800f190:	f3bf 8f6f 	isb	sy
 800f194:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f198:	e7fe      	b.n	800f198 <prvTimerTask+0x270>
 800f19a:	bf00      	nop
 800f19c:	20012c6c 	.word	0x20012c6c
 800f1a0:	20012d3c 	.word	0x20012d3c
 800f1a4:	20012d90 	.word	0x20012d90
 800f1a8:	20012c70 	.word	0x20012c70

0800f1ac <xTimerCreateTimerTask>:
{
 800f1ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f1ae:	4c23      	ldr	r4, [pc, #140]	; (800f23c <xTimerCreateTimerTask+0x90>)
{
 800f1b0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f1b2:	f7fd fe4f 	bl	800ce54 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f1b6:	6825      	ldr	r5, [r4, #0]
 800f1b8:	b335      	cbz	r5, 800f208 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f1ba:	f7fd fe6d 	bl	800ce98 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f1be:	6823      	ldr	r3, [r4, #0]
 800f1c0:	b1cb      	cbz	r3, 800f1f6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f1c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f1c4:	aa07      	add	r2, sp, #28
 800f1c6:	a906      	add	r1, sp, #24
 800f1c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f1ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f1ce:	f7fd fc5b 	bl	800ca88 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f1d2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f1d6:	2302      	movs	r3, #2
 800f1d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f1dc:	9300      	str	r3, [sp, #0]
 800f1de:	9a07      	ldr	r2, [sp, #28]
 800f1e0:	4917      	ldr	r1, [pc, #92]	; (800f240 <xTimerCreateTimerTask+0x94>)
 800f1e2:	4818      	ldr	r0, [pc, #96]	; (800f244 <xTimerCreateTimerTask+0x98>)
 800f1e4:	4623      	mov	r3, r4
 800f1e6:	f7ff fa6d 	bl	800e6c4 <xTaskCreateStatic>
 800f1ea:	4b17      	ldr	r3, [pc, #92]	; (800f248 <xTimerCreateTimerTask+0x9c>)
 800f1ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f1ee:	b110      	cbz	r0, 800f1f6 <xTimerCreateTimerTask+0x4a>
}
 800f1f0:	2001      	movs	r0, #1
 800f1f2:	b009      	add	sp, #36	; 0x24
 800f1f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f1f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1fa:	f383 8811 	msr	BASEPRI, r3
 800f1fe:	f3bf 8f6f 	isb	sy
 800f202:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f206:	e7fe      	b.n	800f206 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f208:	4f10      	ldr	r7, [pc, #64]	; (800f24c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f20a:	4e11      	ldr	r6, [pc, #68]	; (800f250 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f20c:	4638      	mov	r0, r7
 800f20e:	f7fd fd6b 	bl	800cce8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f212:	4630      	mov	r0, r6
 800f214:	f7fd fd68 	bl	800cce8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f218:	4a0e      	ldr	r2, [pc, #56]	; (800f254 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f21a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f21c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f21e:	4a0e      	ldr	r2, [pc, #56]	; (800f258 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f220:	4b0e      	ldr	r3, [pc, #56]	; (800f25c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f222:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f224:	2110      	movs	r1, #16
 800f226:	4a0e      	ldr	r2, [pc, #56]	; (800f260 <xTimerCreateTimerTask+0xb4>)
 800f228:	200a      	movs	r0, #10
 800f22a:	f7fd ffb1 	bl	800d190 <xQueueGenericCreateStatic>
 800f22e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f230:	2800      	cmp	r0, #0
 800f232:	d0c2      	beq.n	800f1ba <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f234:	490b      	ldr	r1, [pc, #44]	; (800f264 <xTimerCreateTimerTask+0xb8>)
 800f236:	f7fe ff0d 	bl	800e054 <vQueueAddToRegistry>
 800f23a:	e7be      	b.n	800f1ba <xTimerCreateTimerTask+0xe>
 800f23c:	20012d90 	.word	0x20012d90
 800f240:	0802d92c 	.word	0x0802d92c
 800f244:	0800ef29 	.word	0x0800ef29
 800f248:	20012d94 	.word	0x20012d94
 800f24c:	20012d14 	.word	0x20012d14
 800f250:	20012d28 	.word	0x20012d28
 800f254:	20012c6c 	.word	0x20012c6c
 800f258:	20012c70 	.word	0x20012c70
 800f25c:	20012d40 	.word	0x20012d40
 800f260:	20012c74 	.word	0x20012c74
 800f264:	0802d924 	.word	0x0802d924

0800f268 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f268:	8880      	ldrh	r0, [r0, #4]
 800f26a:	4770      	bx	lr

0800f26c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f26c:	b570      	push	{r4, r5, r6, lr}
 800f26e:	6803      	ldr	r3, [r0, #0]
 800f270:	4605      	mov	r5, r0
 800f272:	460c      	mov	r4, r1
 800f274:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f276:	2100      	movs	r1, #0
 800f278:	4798      	blx	r3
 800f27a:	682b      	ldr	r3, [r5, #0]
 800f27c:	4606      	mov	r6, r0
 800f27e:	6a1b      	ldr	r3, [r3, #32]
 800f280:	4628      	mov	r0, r5
 800f282:	4798      	blx	r3
 800f284:	1ba4      	subs	r4, r4, r6
 800f286:	b2a4      	uxth	r4, r4
 800f288:	fbb4 f0f0 	udiv	r0, r4, r0
 800f28c:	bd70      	pop	{r4, r5, r6, pc}

0800f28e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f28e:	2300      	movs	r3, #0
 800f290:	8083      	strh	r3, [r0, #4]
 800f292:	4770      	bx	lr

0800f294 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f294:	b510      	push	{r4, lr}
 800f296:	6803      	ldr	r3, [r0, #0]
 800f298:	8881      	ldrh	r1, [r0, #4]
 800f29a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f29c:	4604      	mov	r4, r0
 800f29e:	4798      	blx	r3
 800f2a0:	88a3      	ldrh	r3, [r4, #4]
 800f2a2:	3301      	adds	r3, #1
 800f2a4:	80a3      	strh	r3, [r4, #4]
 800f2a6:	bd10      	pop	{r4, pc}

0800f2a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f2a8:	6803      	ldr	r3, [r0, #0]
 800f2aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f2ac:	4718      	bx	r3

0800f2ae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f2ae:	4770      	bx	lr

0800f2b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f2b0:	4a02      	ldr	r2, [pc, #8]	; (800f2bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f2b2:	6002      	str	r2, [r0, #0]
 800f2b4:	2200      	movs	r2, #0
 800f2b6:	8082      	strh	r2, [r0, #4]
 800f2b8:	4770      	bx	lr
 800f2ba:	bf00      	nop
 800f2bc:	0802d93c 	.word	0x0802d93c

0800f2c0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f2c0:	b510      	push	{r4, lr}
 800f2c2:	6803      	ldr	r3, [r0, #0]
 800f2c4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f2c8:	4604      	mov	r4, r0
 800f2ca:	4798      	blx	r3
 800f2cc:	b110      	cbz	r0, 800f2d4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f2ce:	4620      	mov	r0, r4
 800f2d0:	f7f1 fea4 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f2d4:	bd10      	pop	{r4, pc}

0800f2d6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f2d6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f2da:	4770      	bx	lr

0800f2dc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f2dc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f2e0:	4770      	bx	lr

0800f2e2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f2e2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f2e6:	4770      	bx	lr

0800f2e8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f2e8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f2ec:	4770      	bx	lr

0800f2ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f2ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2f0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f2f4:	461e      	mov	r6, r3
 800f2f6:	6803      	ldr	r3, [r0, #0]
 800f2f8:	460f      	mov	r7, r1
 800f2fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f2fe:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f302:	4604      	mov	r4, r0
 800f304:	4615      	mov	r5, r2
 800f306:	4798      	blx	r3
 800f308:	b93e      	cbnz	r6, 800f31a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f30a:	1bed      	subs	r5, r5, r7
 800f30c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f310:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f314:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f31a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f31e:	e7f7      	b.n	800f310 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f320 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f320:	b510      	push	{r4, lr}
 800f322:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f326:	600c      	str	r4, [r1, #0]
 800f328:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f32c:	6011      	str	r1, [r2, #0]
 800f32e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f332:	801a      	strh	r2, [r3, #0]
 800f334:	9b02      	ldr	r3, [sp, #8]
 800f336:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f33a:	801a      	strh	r2, [r3, #0]
 800f33c:	bd10      	pop	{r4, pc}

0800f33e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f33e:	b510      	push	{r4, lr}
 800f340:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f344:	600c      	str	r4, [r1, #0]
 800f346:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f34a:	6011      	str	r1, [r2, #0]
 800f34c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f350:	801a      	strh	r2, [r3, #0]
 800f352:	bd10      	pop	{r4, pc}

0800f354 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f354:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f358:	600b      	str	r3, [r1, #0]
 800f35a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f35e:	6013      	str	r3, [r2, #0]
 800f360:	4770      	bx	lr

0800f362 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f362:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f366:	4770      	bx	lr

0800f368 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f368:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f36c:	4770      	bx	lr

0800f36e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f36e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f372:	4770      	bx	lr

0800f374 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f374:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f378:	4770      	bx	lr

0800f37a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f37a:	4770      	bx	lr

0800f37c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f37c:	b510      	push	{r4, lr}
 800f37e:	21b4      	movs	r1, #180	; 0xb4
 800f380:	4604      	mov	r4, r0
 800f382:	f019 fc84 	bl	8028c8e <_ZdlPvj>
 800f386:	4620      	mov	r0, r4
 800f388:	bd10      	pop	{r4, pc}

0800f38a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f38a:	b570      	push	{r4, r5, r6, lr}
 800f38c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f390:	428d      	cmp	r5, r1
 800f392:	bfb8      	it	lt
 800f394:	460d      	movlt	r5, r1
 800f396:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f39a:	428d      	cmp	r5, r1
 800f39c:	4604      	mov	r4, r0
 800f39e:	bfa8      	it	ge
 800f3a0:	460d      	movge	r5, r1
 800f3a2:	4616      	mov	r6, r2
 800f3a4:	b99a      	cbnz	r2, 800f3ce <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f3a6:	6803      	ldr	r3, [r0, #0]
 800f3a8:	4629      	mov	r1, r5
 800f3aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f3ae:	4798      	blx	r3
 800f3b0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f3b4:	b368      	cbz	r0, 800f412 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f3b6:	6803      	ldr	r3, [r0, #0]
 800f3b8:	68db      	ldr	r3, [r3, #12]
 800f3ba:	4798      	blx	r3
 800f3bc:	b348      	cbz	r0, 800f412 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f3be:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f3c2:	6803      	ldr	r3, [r0, #0]
 800f3c4:	4621      	mov	r1, r4
 800f3c6:	689b      	ldr	r3, [r3, #8]
 800f3c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f3cc:	4718      	bx	r3
 800f3ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f3d2:	2b00      	cmp	r3, #0
 800f3d4:	dd08      	ble.n	800f3e8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f3d6:	f005 fbe3 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 800f3da:	4621      	mov	r1, r4
 800f3dc:	3004      	adds	r0, #4
 800f3de:	f005 fc2c 	bl	8014c3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f3e2:	2300      	movs	r3, #0
 800f3e4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f3e8:	6823      	ldr	r3, [r4, #0]
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f3f0:	4798      	blx	r3
 800f3f2:	2300      	movs	r3, #0
 800f3f4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f3f8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f3fc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f400:	f005 fbce 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 800f404:	4621      	mov	r1, r4
 800f406:	3004      	adds	r0, #4
 800f408:	f005 fcc0 	bl	8014d8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f40c:	2301      	movs	r3, #1
 800f40e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f412:	bd70      	pop	{r4, r5, r6, pc}

0800f414 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f414:	b510      	push	{r4, lr}
 800f416:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f41a:	4299      	cmp	r1, r3
 800f41c:	bfb8      	it	lt
 800f41e:	4619      	movlt	r1, r3
 800f420:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f424:	4299      	cmp	r1, r3
 800f426:	bfa8      	it	ge
 800f428:	4619      	movge	r1, r3
 800f42a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f42e:	428b      	cmp	r3, r1
 800f430:	4604      	mov	r4, r0
 800f432:	d010      	beq.n	800f456 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f434:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f438:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f43c:	b158      	cbz	r0, 800f456 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f43e:	6803      	ldr	r3, [r0, #0]
 800f440:	68db      	ldr	r3, [r3, #12]
 800f442:	4798      	blx	r3
 800f444:	b138      	cbz	r0, 800f456 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f446:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f44a:	6803      	ldr	r3, [r0, #0]
 800f44c:	4621      	mov	r1, r4
 800f44e:	689b      	ldr	r3, [r3, #8]
 800f450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f454:	4718      	bx	r3
 800f456:	bd10      	pop	{r4, pc}

0800f458 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f458:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f45a:	4604      	mov	r4, r0
 800f45c:	460d      	mov	r5, r1
 800f45e:	b1a9      	cbz	r1, 800f48c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f460:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f464:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f468:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f46c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f470:	ab01      	add	r3, sp, #4
 800f472:	1a12      	subs	r2, r2, r0
 800f474:	1b89      	subs	r1, r1, r6
 800f476:	1a38      	subs	r0, r7, r0
 800f478:	f006 fe48 	bl	801610c <_ZN8touchgfx6muldivElllRl>
 800f47c:	4629      	mov	r1, r5
 800f47e:	ab01      	add	r3, sp, #4
 800f480:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f484:	4430      	add	r0, r6
 800f486:	f006 fe41 	bl	801610c <_ZN8touchgfx6muldivElllRl>
 800f48a:	b285      	uxth	r5, r0
 800f48c:	4628      	mov	r0, r5
 800f48e:	b003      	add	sp, #12
 800f490:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f492 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f492:	b570      	push	{r4, r5, r6, lr}
 800f494:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f498:	4604      	mov	r4, r0
 800f49a:	2b00      	cmp	r3, #0
 800f49c:	d035      	beq.n	800f50a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f49e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f4a2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f4a6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f4aa:	3001      	adds	r0, #1
 800f4ac:	1ad2      	subs	r2, r2, r3
 800f4ae:	b212      	sxth	r2, r2
 800f4b0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f4b4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f4b8:	2100      	movs	r1, #0
 800f4ba:	b280      	uxth	r0, r0
 800f4bc:	47a8      	blx	r5
 800f4be:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f4c2:	6823      	ldr	r3, [r4, #0]
 800f4c4:	4401      	add	r1, r0
 800f4c6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f4ca:	4620      	mov	r0, r4
 800f4cc:	4798      	blx	r3
 800f4ce:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f4d2:	429a      	cmp	r2, r3
 800f4d4:	db19      	blt.n	800f50a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f4d6:	2500      	movs	r5, #0
 800f4d8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f4dc:	f005 fb60 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 800f4e0:	4621      	mov	r1, r4
 800f4e2:	3004      	adds	r0, #4
 800f4e4:	f005 fba9 	bl	8014c3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f4e8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f4ec:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f4f0:	b158      	cbz	r0, 800f50a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f4f2:	6803      	ldr	r3, [r0, #0]
 800f4f4:	68db      	ldr	r3, [r3, #12]
 800f4f6:	4798      	blx	r3
 800f4f8:	b138      	cbz	r0, 800f50a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f4fa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f4fe:	6803      	ldr	r3, [r0, #0]
 800f500:	4621      	mov	r1, r4
 800f502:	689b      	ldr	r3, [r3, #8]
 800f504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f508:	4718      	bx	r3
 800f50a:	bd70      	pop	{r4, r5, r6, pc}

0800f50c <_ZN8touchgfx8DrawableC1Ev>:
 800f50c:	4a0a      	ldr	r2, [pc, #40]	; (800f538 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f50e:	6002      	str	r2, [r0, #0]
 800f510:	2200      	movs	r2, #0
 800f512:	8082      	strh	r2, [r0, #4]
 800f514:	80c2      	strh	r2, [r0, #6]
 800f516:	8102      	strh	r2, [r0, #8]
 800f518:	8142      	strh	r2, [r0, #10]
 800f51a:	8182      	strh	r2, [r0, #12]
 800f51c:	81c2      	strh	r2, [r0, #14]
 800f51e:	8202      	strh	r2, [r0, #16]
 800f520:	8242      	strh	r2, [r0, #18]
 800f522:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f526:	61c2      	str	r2, [r0, #28]
 800f528:	8402      	strh	r2, [r0, #32]
 800f52a:	8442      	strh	r2, [r0, #34]	; 0x22
 800f52c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f530:	2201      	movs	r2, #1
 800f532:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f536:	4770      	bx	lr
 800f538:	0802e0dc 	.word	0x0802e0dc

0800f53c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f53c:	b570      	push	{r4, r5, r6, lr}
 800f53e:	6803      	ldr	r3, [r0, #0]
 800f540:	4604      	mov	r4, r0
 800f542:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f544:	4615      	mov	r5, r2
 800f546:	4798      	blx	r3
 800f548:	6823      	ldr	r3, [r4, #0]
 800f54a:	4629      	mov	r1, r5
 800f54c:	4620      	mov	r0, r4
 800f54e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f554:	4718      	bx	r3

0800f556 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f556:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f55a:	4604      	mov	r4, r0
 800f55c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f560:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f564:	460e      	mov	r6, r1
 800f566:	4615      	mov	r5, r2
 800f568:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f56c:	4619      	mov	r1, r3
 800f56e:	463a      	mov	r2, r7
 800f570:	3058      	adds	r0, #88	; 0x58
 800f572:	4698      	mov	r8, r3
 800f574:	f7ff ffe2 	bl	800f53c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f578:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f57c:	4446      	add	r6, r8
 800f57e:	42b3      	cmp	r3, r6
 800f580:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f584:	bfb8      	it	lt
 800f586:	8126      	strhlt	r6, [r4, #8]
 800f588:	443d      	add	r5, r7
 800f58a:	42ab      	cmp	r3, r5
 800f58c:	bfb8      	it	lt
 800f58e:	8165      	strhlt	r5, [r4, #10]
 800f590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f594:	b510      	push	{r4, lr}
 800f596:	4604      	mov	r4, r0
 800f598:	302c      	adds	r0, #44	; 0x2c
 800f59a:	f002 fdf8 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f59e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f5a2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f5a6:	4620      	mov	r0, r4
 800f5a8:	f7ff ffc8 	bl	800f53c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f5ac:	bd10      	pop	{r4, pc}
	...

0800f5b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f5b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f5b2:	4604      	mov	r4, r0
 800f5b4:	4626      	mov	r6, r4
 800f5b6:	2500      	movs	r5, #0
 800f5b8:	f7ff ffa8 	bl	800f50c <_ZN8touchgfx8DrawableC1Ev>
 800f5bc:	4b23      	ldr	r3, [pc, #140]	; (800f64c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f5be:	62a5      	str	r5, [r4, #40]	; 0x28
 800f5c0:	f846 3b2c 	str.w	r3, [r6], #44
 800f5c4:	2226      	movs	r2, #38	; 0x26
 800f5c6:	4629      	mov	r1, r5
 800f5c8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f5cc:	4630      	mov	r0, r6
 800f5ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f5d2:	f01a fb74 	bl	8029cbe <memset>
 800f5d6:	4630      	mov	r0, r6
 800f5d8:	f7ff ff98 	bl	800f50c <_ZN8touchgfx8DrawableC1Ev>
 800f5dc:	a902      	add	r1, sp, #8
 800f5de:	4b1c      	ldr	r3, [pc, #112]	; (800f650 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f5e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f5e2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f5e6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f5ea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f5ee:	4630      	mov	r0, r6
 800f5f0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f5f4:	f002 fdcb 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f5f8:	4638      	mov	r0, r7
 800f5fa:	f7ff ff87 	bl	800f50c <_ZN8touchgfx8DrawableC1Ev>
 800f5fe:	4b15      	ldr	r3, [pc, #84]	; (800f654 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f600:	65a3      	str	r3, [r4, #88]	; 0x58
 800f602:	2364      	movs	r3, #100	; 0x64
 800f604:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f608:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f60c:	4b12      	ldr	r3, [pc, #72]	; (800f658 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f60e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f612:	4629      	mov	r1, r5
 800f614:	4630      	mov	r0, r6
 800f616:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f61a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f61e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f622:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f626:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f62a:	f7f1 fc53 	bl	8000ed4 <_ZN8touchgfx8Drawable4setXEs>
 800f62e:	4629      	mov	r1, r5
 800f630:	4630      	mov	r0, r6
 800f632:	f7f1 fc51 	bl	8000ed8 <_ZN8touchgfx8Drawable4setYEs>
 800f636:	4631      	mov	r1, r6
 800f638:	4620      	mov	r0, r4
 800f63a:	f000 f819 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f63e:	4620      	mov	r0, r4
 800f640:	4639      	mov	r1, r7
 800f642:	f000 f815 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f646:	4620      	mov	r0, r4
 800f648:	b003      	add	sp, #12
 800f64a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f64c:	0802d970 	.word	0x0802d970
 800f650:	0802df98 	.word	0x0802df98
 800f654:	0802da44 	.word	0x0802da44
 800f658:	0801686b 	.word	0x0801686b

0800f65c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f65c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f65e:	2000      	movs	r0, #0
 800f660:	b12b      	cbz	r3, 800f66e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f662:	b920      	cbnz	r0, 800f66e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f664:	1a5a      	subs	r2, r3, r1
 800f666:	4250      	negs	r0, r2
 800f668:	4150      	adcs	r0, r2
 800f66a:	699b      	ldr	r3, [r3, #24]
 800f66c:	e7f8      	b.n	800f660 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f66e:	4770      	bx	lr

0800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f670:	2300      	movs	r3, #0
 800f672:	6148      	str	r0, [r1, #20]
 800f674:	618b      	str	r3, [r1, #24]
 800f676:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f678:	b913      	cbnz	r3, 800f680 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f67a:	6281      	str	r1, [r0, #40]	; 0x28
 800f67c:	4770      	bx	lr
 800f67e:	4613      	mov	r3, r2
 800f680:	699a      	ldr	r2, [r3, #24]
 800f682:	2a00      	cmp	r2, #0
 800f684:	d1fb      	bne.n	800f67e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f686:	6199      	str	r1, [r3, #24]
 800f688:	4770      	bx	lr

0800f68a <_ZN8touchgfx9Container9removeAllEv>:
 800f68a:	2200      	movs	r2, #0
 800f68c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f68e:	b123      	cbz	r3, 800f69a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f690:	6999      	ldr	r1, [r3, #24]
 800f692:	6281      	str	r1, [r0, #40]	; 0x28
 800f694:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f698:	e7f8      	b.n	800f68c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f69a:	4770      	bx	lr

0800f69c <_ZN8touchgfx9Container6unlinkEv>:
 800f69c:	2300      	movs	r3, #0
 800f69e:	6283      	str	r3, [r0, #40]	; 0x28
 800f6a0:	4770      	bx	lr

0800f6a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f6a2:	2200      	movs	r2, #0
 800f6a4:	8002      	strh	r2, [r0, #0]
 800f6a6:	8042      	strh	r2, [r0, #2]
 800f6a8:	8082      	strh	r2, [r0, #4]
 800f6aa:	80c2      	strh	r2, [r0, #6]
 800f6ac:	4770      	bx	lr

0800f6ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f6ae:	b570      	push	{r4, r5, r6, lr}
 800f6b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f6b2:	460d      	mov	r5, r1
 800f6b4:	4616      	mov	r6, r2
 800f6b6:	b13c      	cbz	r4, 800f6c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f6b8:	6823      	ldr	r3, [r4, #0]
 800f6ba:	4620      	mov	r0, r4
 800f6bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f6be:	4632      	mov	r2, r6
 800f6c0:	4629      	mov	r1, r5
 800f6c2:	4798      	blx	r3
 800f6c4:	69a4      	ldr	r4, [r4, #24]
 800f6c6:	e7f6      	b.n	800f6b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f6c8:	bd70      	pop	{r4, r5, r6, pc}

0800f6ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f6ca:	b538      	push	{r3, r4, r5, lr}
 800f6cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f6ce:	460d      	mov	r5, r1
 800f6d0:	b134      	cbz	r4, 800f6e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f6d2:	682b      	ldr	r3, [r5, #0]
 800f6d4:	4621      	mov	r1, r4
 800f6d6:	689b      	ldr	r3, [r3, #8]
 800f6d8:	4628      	mov	r0, r5
 800f6da:	4798      	blx	r3
 800f6dc:	69a4      	ldr	r4, [r4, #24]
 800f6de:	e7f7      	b.n	800f6d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f6e0:	bd38      	pop	{r3, r4, r5, pc}

0800f6e2 <_ZN8touchgfx9ContainerD1Ev>:
 800f6e2:	4770      	bx	lr

0800f6e4 <_ZN8touchgfx9ContainerD0Ev>:
 800f6e4:	b510      	push	{r4, lr}
 800f6e6:	212c      	movs	r1, #44	; 0x2c
 800f6e8:	4604      	mov	r4, r0
 800f6ea:	f019 fad0 	bl	8028c8e <_ZdlPvj>
 800f6ee:	4620      	mov	r0, r4
 800f6f0:	bd10      	pop	{r4, pc}

0800f6f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f6f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f6f4:	b19b      	cbz	r3, 800f71e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f6f6:	428b      	cmp	r3, r1
 800f6f8:	d109      	bne.n	800f70e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f6fa:	699a      	ldr	r2, [r3, #24]
 800f6fc:	2100      	movs	r1, #0
 800f6fe:	6159      	str	r1, [r3, #20]
 800f700:	6282      	str	r2, [r0, #40]	; 0x28
 800f702:	b902      	cbnz	r2, 800f706 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f704:	4770      	bx	lr
 800f706:	6199      	str	r1, [r3, #24]
 800f708:	4770      	bx	lr
 800f70a:	4613      	mov	r3, r2
 800f70c:	b13a      	cbz	r2, 800f71e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f70e:	699a      	ldr	r2, [r3, #24]
 800f710:	428a      	cmp	r2, r1
 800f712:	d1fa      	bne.n	800f70a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f714:	698a      	ldr	r2, [r1, #24]
 800f716:	619a      	str	r2, [r3, #24]
 800f718:	2300      	movs	r3, #0
 800f71a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f71e:	4770      	bx	lr

0800f720 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f720:	b410      	push	{r4}
 800f722:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f724:	4604      	mov	r4, r0
 800f726:	b92b      	cbnz	r3, 800f734 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f728:	6803      	ldr	r3, [r0, #0]
 800f72a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f72e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f730:	4611      	mov	r1, r2
 800f732:	4718      	bx	r3
 800f734:	b941      	cbnz	r1, 800f748 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f736:	6193      	str	r3, [r2, #24]
 800f738:	6282      	str	r2, [r0, #40]	; 0x28
 800f73a:	6154      	str	r4, [r2, #20]
 800f73c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f740:	4770      	bx	lr
 800f742:	4603      	mov	r3, r0
 800f744:	2800      	cmp	r0, #0
 800f746:	d0f9      	beq.n	800f73c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f748:	4299      	cmp	r1, r3
 800f74a:	6998      	ldr	r0, [r3, #24]
 800f74c:	d1f9      	bne.n	800f742 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f74e:	6190      	str	r0, [r2, #24]
 800f750:	618a      	str	r2, [r1, #24]
 800f752:	e7f2      	b.n	800f73a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f754 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f758:	461f      	mov	r7, r3
 800f75a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f75e:	460d      	mov	r5, r1
 800f760:	4616      	mov	r6, r2
 800f762:	b103      	cbz	r3, 800f766 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f764:	6038      	str	r0, [r7, #0]
 800f766:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f768:	b314      	cbz	r4, 800f7b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f76a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f76e:	b1eb      	cbz	r3, 800f7ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f770:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f774:	428d      	cmp	r5, r1
 800f776:	db19      	blt.n	800f7ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f778:	8923      	ldrh	r3, [r4, #8]
 800f77a:	b289      	uxth	r1, r1
 800f77c:	440b      	add	r3, r1
 800f77e:	b21b      	sxth	r3, r3
 800f780:	429d      	cmp	r5, r3
 800f782:	da13      	bge.n	800f7ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f784:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f788:	4296      	cmp	r6, r2
 800f78a:	db0f      	blt.n	800f7ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f78c:	8963      	ldrh	r3, [r4, #10]
 800f78e:	b292      	uxth	r2, r2
 800f790:	4413      	add	r3, r2
 800f792:	b21b      	sxth	r3, r3
 800f794:	429e      	cmp	r6, r3
 800f796:	da09      	bge.n	800f7ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f798:	6823      	ldr	r3, [r4, #0]
 800f79a:	1ab2      	subs	r2, r6, r2
 800f79c:	1a69      	subs	r1, r5, r1
 800f79e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f7a2:	b212      	sxth	r2, r2
 800f7a4:	463b      	mov	r3, r7
 800f7a6:	b209      	sxth	r1, r1
 800f7a8:	4620      	mov	r0, r4
 800f7aa:	47c0      	blx	r8
 800f7ac:	69a4      	ldr	r4, [r4, #24]
 800f7ae:	e7db      	b.n	800f768 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f7b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f7b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7b8:	4c6e      	ldr	r4, [pc, #440]	; (800f974 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f7ba:	b0a1      	sub	sp, #132	; 0x84
 800f7bc:	6824      	ldr	r4, [r4, #0]
 800f7be:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f7c0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f7c4:	9303      	str	r3, [sp, #12]
 800f7c6:	2400      	movs	r4, #0
 800f7c8:	802c      	strh	r4, [r5, #0]
 800f7ca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f7cc:	802c      	strh	r4, [r5, #0]
 800f7ce:	601c      	str	r4, [r3, #0]
 800f7d0:	4606      	mov	r6, r0
 800f7d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f7d6:	f7ff ffbd 	bl	800f754 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f7da:	f1b9 0f03 	cmp.w	r9, #3
 800f7de:	f340 80c2 	ble.w	800f966 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f7e2:	4631      	mov	r1, r6
 800f7e4:	a80c      	add	r0, sp, #48	; 0x30
 800f7e6:	f006 fb5f 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f7ee:	9306      	str	r3, [sp, #24]
 800f7f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f7f4:	9307      	str	r3, [sp, #28]
 800f7f6:	9b03      	ldr	r3, [sp, #12]
 800f7f8:	f8d3 a000 	ldr.w	sl, [r3]
 800f7fc:	f1ba 0f00 	cmp.w	sl, #0
 800f800:	f000 80b4 	beq.w	800f96c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f804:	4651      	mov	r1, sl
 800f806:	a810      	add	r0, sp, #64	; 0x40
 800f808:	f006 fb4e 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f80c:	9b01      	ldr	r3, [sp, #4]
 800f80e:	9a06      	ldr	r2, [sp, #24]
 800f810:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f814:	189d      	adds	r5, r3, r2
 800f816:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f81a:	9a07      	ldr	r2, [sp, #28]
 800f81c:	2002      	movs	r0, #2
 800f81e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f822:	4419      	add	r1, r3
 800f824:	1a6d      	subs	r5, r5, r1
 800f826:	9b02      	ldr	r3, [sp, #8]
 800f828:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f82c:	4413      	add	r3, r2
 800f82e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f832:	fb92 f2f0 	sdiv	r2, r2, r0
 800f836:	440a      	add	r2, r1
 800f838:	1a9b      	subs	r3, r3, r2
 800f83a:	435b      	muls	r3, r3
 800f83c:	fb05 3505 	mla	r5, r5, r5, r3
 800f840:	4f4d      	ldr	r7, [pc, #308]	; (800f978 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f842:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f844:	ac10      	add	r4, sp, #64	; 0x40
 800f846:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f848:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f84a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f84c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f84e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f850:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f854:	f1b9 0f0c 	cmp.w	r9, #12
 800f858:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f85c:	f04f 0303 	mov.w	r3, #3
 800f860:	bfc8      	it	gt
 800f862:	4698      	movgt	r8, r3
 800f864:	f8cd 9000 	str.w	r9, [sp]
 800f868:	f04f 0400 	mov.w	r4, #0
 800f86c:	bfdc      	itt	le
 800f86e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f872:	fb92 f8f3 	sdivle	r8, r2, r3
 800f876:	1c63      	adds	r3, r4, #1
 800f878:	aa10      	add	r2, sp, #64	; 0x40
 800f87a:	f004 0401 	and.w	r4, r4, #1
 800f87e:	9308      	str	r3, [sp, #32]
 800f880:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f884:	9b00      	ldr	r3, [sp, #0]
 800f886:	fb93 f3f8 	sdiv	r3, r3, r8
 800f88a:	b29b      	uxth	r3, r3
 800f88c:	3404      	adds	r4, #4
 800f88e:	f04f 0b00 	mov.w	fp, #0
 800f892:	9304      	str	r3, [sp, #16]
 800f894:	9a04      	ldr	r2, [sp, #16]
 800f896:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f89a:	fb13 f302 	smulbb	r3, r3, r2
 800f89e:	9a01      	ldr	r2, [sp, #4]
 800f8a0:	b29b      	uxth	r3, r3
 800f8a2:	1899      	adds	r1, r3, r2
 800f8a4:	9305      	str	r3, [sp, #20]
 800f8a6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f8aa:	b209      	sxth	r1, r1
 800f8ac:	4299      	cmp	r1, r3
 800f8ae:	db4d      	blt.n	800f94c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f8b0:	8932      	ldrh	r2, [r6, #8]
 800f8b2:	4413      	add	r3, r2
 800f8b4:	b21b      	sxth	r3, r3
 800f8b6:	4299      	cmp	r1, r3
 800f8b8:	da48      	bge.n	800f94c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f8ba:	9b04      	ldr	r3, [sp, #16]
 800f8bc:	6827      	ldr	r7, [r4, #0]
 800f8be:	fb17 f703 	smulbb	r7, r7, r3
 800f8c2:	9b02      	ldr	r3, [sp, #8]
 800f8c4:	b2bf      	uxth	r7, r7
 800f8c6:	18fa      	adds	r2, r7, r3
 800f8c8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f8cc:	b212      	sxth	r2, r2
 800f8ce:	429a      	cmp	r2, r3
 800f8d0:	db3c      	blt.n	800f94c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f8d2:	8970      	ldrh	r0, [r6, #10]
 800f8d4:	4403      	add	r3, r0
 800f8d6:	b21b      	sxth	r3, r3
 800f8d8:	429a      	cmp	r2, r3
 800f8da:	da37      	bge.n	800f94c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f8dc:	2300      	movs	r3, #0
 800f8de:	930b      	str	r3, [sp, #44]	; 0x2c
 800f8e0:	4630      	mov	r0, r6
 800f8e2:	ab0b      	add	r3, sp, #44	; 0x2c
 800f8e4:	f7ff ff36 	bl	800f754 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f8e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f8ea:	b37a      	cbz	r2, 800f94c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f8ec:	4552      	cmp	r2, sl
 800f8ee:	d02d      	beq.n	800f94c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f8f0:	4611      	mov	r1, r2
 800f8f2:	a80e      	add	r0, sp, #56	; 0x38
 800f8f4:	9209      	str	r2, [sp, #36]	; 0x24
 800f8f6:	f006 fad7 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8fa:	9a06      	ldr	r2, [sp, #24]
 800f8fc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f900:	9b01      	ldr	r3, [sp, #4]
 800f902:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f906:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f90a:	4413      	add	r3, r2
 800f90c:	f04f 0e02 	mov.w	lr, #2
 800f910:	fb91 f1fe 	sdiv	r1, r1, lr
 800f914:	4401      	add	r1, r0
 800f916:	1a58      	subs	r0, r3, r1
 800f918:	9a07      	ldr	r2, [sp, #28]
 800f91a:	9b02      	ldr	r3, [sp, #8]
 800f91c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f920:	fb9c fcfe 	sdiv	ip, ip, lr
 800f924:	4413      	add	r3, r2
 800f926:	448c      	add	ip, r1
 800f928:	eba3 030c 	sub.w	r3, r3, ip
 800f92c:	435b      	muls	r3, r3
 800f92e:	fb00 3300 	mla	r3, r0, r0, r3
 800f932:	42ab      	cmp	r3, r5
 800f934:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f936:	d208      	bcs.n	800f94a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f938:	9803      	ldr	r0, [sp, #12]
 800f93a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f93c:	6001      	str	r1, [r0, #0]
 800f93e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f940:	9805      	ldr	r0, [sp, #20]
 800f942:	8008      	strh	r0, [r1, #0]
 800f944:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f946:	461d      	mov	r5, r3
 800f948:	800f      	strh	r7, [r1, #0]
 800f94a:	4692      	mov	sl, r2
 800f94c:	f10b 0b01 	add.w	fp, fp, #1
 800f950:	f1bb 0f04 	cmp.w	fp, #4
 800f954:	f104 0408 	add.w	r4, r4, #8
 800f958:	d19c      	bne.n	800f894 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f95a:	9b00      	ldr	r3, [sp, #0]
 800f95c:	9c08      	ldr	r4, [sp, #32]
 800f95e:	444b      	add	r3, r9
 800f960:	4544      	cmp	r4, r8
 800f962:	9300      	str	r3, [sp, #0]
 800f964:	d187      	bne.n	800f876 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f966:	b021      	add	sp, #132	; 0x84
 800f968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f96c:	f04f 35ff 	mov.w	r5, #4294967295
 800f970:	e766      	b.n	800f840 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f972:	bf00      	nop
 800f974:	20012da4 	.word	0x20012da4
 800f978:	0802a9cc 	.word	0x0802a9cc

0800f97c <_ZN8touchgfx4RectaNERKS0_>:
 800f97c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f980:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f984:	888c      	ldrh	r4, [r1, #4]
 800f986:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f98a:	443c      	add	r4, r7
 800f98c:	b2a4      	uxth	r4, r4
 800f98e:	fa0f f884 	sxth.w	r8, r4
 800f992:	45c1      	cmp	r9, r8
 800f994:	da2f      	bge.n	800f9f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f996:	8882      	ldrh	r2, [r0, #4]
 800f998:	444a      	add	r2, r9
 800f99a:	b292      	uxth	r2, r2
 800f99c:	fa0f fe82 	sxth.w	lr, r2
 800f9a0:	4577      	cmp	r7, lr
 800f9a2:	da28      	bge.n	800f9f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f9a4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f9a8:	88cb      	ldrh	r3, [r1, #6]
 800f9aa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f9ae:	442b      	add	r3, r5
 800f9b0:	b21b      	sxth	r3, r3
 800f9b2:	429e      	cmp	r6, r3
 800f9b4:	da1f      	bge.n	800f9f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f9b6:	88c3      	ldrh	r3, [r0, #6]
 800f9b8:	4433      	add	r3, r6
 800f9ba:	b29b      	uxth	r3, r3
 800f9bc:	fa0f fc83 	sxth.w	ip, r3
 800f9c0:	4565      	cmp	r5, ip
 800f9c2:	da18      	bge.n	800f9f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f9c4:	454f      	cmp	r7, r9
 800f9c6:	bfb8      	it	lt
 800f9c8:	464f      	movlt	r7, r9
 800f9ca:	42b5      	cmp	r5, r6
 800f9cc:	bfb8      	it	lt
 800f9ce:	4635      	movlt	r5, r6
 800f9d0:	45f0      	cmp	r8, lr
 800f9d2:	bfd8      	it	le
 800f9d4:	4622      	movle	r2, r4
 800f9d6:	1bd2      	subs	r2, r2, r7
 800f9d8:	8082      	strh	r2, [r0, #4]
 800f9da:	884a      	ldrh	r2, [r1, #2]
 800f9dc:	88c9      	ldrh	r1, [r1, #6]
 800f9de:	8007      	strh	r7, [r0, #0]
 800f9e0:	440a      	add	r2, r1
 800f9e2:	b292      	uxth	r2, r2
 800f9e4:	b211      	sxth	r1, r2
 800f9e6:	458c      	cmp	ip, r1
 800f9e8:	bfa8      	it	ge
 800f9ea:	4613      	movge	r3, r2
 800f9ec:	1b5b      	subs	r3, r3, r5
 800f9ee:	80c3      	strh	r3, [r0, #6]
 800f9f0:	8045      	strh	r5, [r0, #2]
 800f9f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9f6:	2300      	movs	r3, #0
 800f9f8:	8003      	strh	r3, [r0, #0]
 800f9fa:	8043      	strh	r3, [r0, #2]
 800f9fc:	8083      	strh	r3, [r0, #4]
 800f9fe:	80c3      	strh	r3, [r0, #6]
 800fa00:	e7f7      	b.n	800f9f2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fa02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fa06:	2b00      	cmp	r3, #0
 800fa08:	dd06      	ble.n	800fa18 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fa0a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fa0e:	2800      	cmp	r0, #0
 800fa10:	bfcc      	ite	gt
 800fa12:	2000      	movgt	r0, #0
 800fa14:	2001      	movle	r0, #1
 800fa16:	4770      	bx	lr
 800fa18:	2001      	movs	r0, #1
 800fa1a:	4770      	bx	lr

0800fa1c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fa1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fa20:	2300      	movs	r3, #0
 800fa22:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fa24:	8003      	strh	r3, [r0, #0]
 800fa26:	4604      	mov	r4, r0
 800fa28:	8043      	strh	r3, [r0, #2]
 800fa2a:	8083      	strh	r3, [r0, #4]
 800fa2c:	80c3      	strh	r3, [r0, #6]
 800fa2e:	2d00      	cmp	r5, #0
 800fa30:	d040      	beq.n	800fab4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fa32:	1d28      	adds	r0, r5, #4
 800fa34:	f7ff ffe5 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa38:	b988      	cbnz	r0, 800fa5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fa3a:	4620      	mov	r0, r4
 800fa3c:	f7ff ffe1 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fa44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fa48:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fa4c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fa50:	b138      	cbz	r0, 800fa62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fa52:	8022      	strh	r2, [r4, #0]
 800fa54:	8063      	strh	r3, [r4, #2]
 800fa56:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fa5a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fa5e:	69ad      	ldr	r5, [r5, #24]
 800fa60:	e7e5      	b.n	800fa2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fa62:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fa66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fa6a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fa6e:	4290      	cmp	r0, r2
 800fa70:	4607      	mov	r7, r0
 800fa72:	bfa8      	it	ge
 800fa74:	4617      	movge	r7, r2
 800fa76:	4472      	add	r2, lr
 800fa78:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fa7c:	8027      	strh	r7, [r4, #0]
 800fa7e:	4299      	cmp	r1, r3
 800fa80:	460e      	mov	r6, r1
 800fa82:	4440      	add	r0, r8
 800fa84:	bfa8      	it	ge
 800fa86:	461e      	movge	r6, r3
 800fa88:	4471      	add	r1, lr
 800fa8a:	4463      	add	r3, ip
 800fa8c:	b200      	sxth	r0, r0
 800fa8e:	b212      	sxth	r2, r2
 800fa90:	b209      	sxth	r1, r1
 800fa92:	b21b      	sxth	r3, r3
 800fa94:	4290      	cmp	r0, r2
 800fa96:	bfac      	ite	ge
 800fa98:	ebc7 0200 	rsbge	r2, r7, r0
 800fa9c:	ebc7 0202 	rsblt	r2, r7, r2
 800faa0:	4299      	cmp	r1, r3
 800faa2:	bfac      	ite	ge
 800faa4:	ebc6 0301 	rsbge	r3, r6, r1
 800faa8:	ebc6 0303 	rsblt	r3, r6, r3
 800faac:	8066      	strh	r6, [r4, #2]
 800faae:	80a2      	strh	r2, [r4, #4]
 800fab0:	80e3      	strh	r3, [r4, #6]
 800fab2:	e7d4      	b.n	800fa5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fab4:	4620      	mov	r0, r4
 800fab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800faba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800faba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fabe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fac2:	b383      	cbz	r3, 800fb26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fac4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fac6:	b374      	cbz	r4, 800fb26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fac8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800facc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fad0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fad4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fad8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fadc:	b303      	cbz	r3, 800fb20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fade:	4668      	mov	r0, sp
 800fae0:	1d21      	adds	r1, r4, #4
 800fae2:	f8ad 5000 	strh.w	r5, [sp]
 800fae6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800faea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800faee:	f8ad 8006 	strh.w	r8, [sp, #6]
 800faf2:	f7ff ff43 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 800faf6:	4668      	mov	r0, sp
 800faf8:	f7ff ff83 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fafc:	b980      	cbnz	r0, 800fb20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fafe:	f8bd 3000 	ldrh.w	r3, [sp]
 800fb02:	88a2      	ldrh	r2, [r4, #4]
 800fb04:	1a9b      	subs	r3, r3, r2
 800fb06:	f8ad 3000 	strh.w	r3, [sp]
 800fb0a:	88e2      	ldrh	r2, [r4, #6]
 800fb0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fb10:	1a9b      	subs	r3, r3, r2
 800fb12:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fb16:	6823      	ldr	r3, [r4, #0]
 800fb18:	4669      	mov	r1, sp
 800fb1a:	689b      	ldr	r3, [r3, #8]
 800fb1c:	4620      	mov	r0, r4
 800fb1e:	4798      	blx	r3
 800fb20:	69a4      	ldr	r4, [r4, #24]
 800fb22:	2c00      	cmp	r4, #0
 800fb24:	d1d8      	bne.n	800fad8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fb26:	b002      	add	sp, #8
 800fb28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fb2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fb2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fb32:	460d      	mov	r5, r1
 800fb34:	4616      	mov	r6, r2
 800fb36:	b323      	cbz	r3, 800fb82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fb38:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fb3a:	b314      	cbz	r4, 800fb82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fb3c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fb40:	b1eb      	cbz	r3, 800fb7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fb42:	6828      	ldr	r0, [r5, #0]
 800fb44:	6869      	ldr	r1, [r5, #4]
 800fb46:	466b      	mov	r3, sp
 800fb48:	c303      	stmia	r3!, {r0, r1}
 800fb4a:	4668      	mov	r0, sp
 800fb4c:	1d21      	adds	r1, r4, #4
 800fb4e:	f7ff ff15 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 800fb52:	4668      	mov	r0, sp
 800fb54:	f7ff ff55 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb58:	b988      	cbnz	r0, 800fb7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fb5a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fb5e:	88a2      	ldrh	r2, [r4, #4]
 800fb60:	1a9b      	subs	r3, r3, r2
 800fb62:	f8ad 3000 	strh.w	r3, [sp]
 800fb66:	88e2      	ldrh	r2, [r4, #6]
 800fb68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fb6c:	1a9b      	subs	r3, r3, r2
 800fb6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fb72:	6823      	ldr	r3, [r4, #0]
 800fb74:	4632      	mov	r2, r6
 800fb76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fb78:	4669      	mov	r1, sp
 800fb7a:	4620      	mov	r0, r4
 800fb7c:	4798      	blx	r3
 800fb7e:	69a4      	ldr	r4, [r4, #24]
 800fb80:	e7db      	b.n	800fb3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fb82:	b002      	add	sp, #8
 800fb84:	bd70      	pop	{r4, r5, r6, pc}

0800fb86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fb86:	b513      	push	{r0, r1, r4, lr}
 800fb88:	6803      	ldr	r3, [r0, #0]
 800fb8a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fb8e:	2300      	movs	r3, #0
 800fb90:	e9cd 3300 	strd	r3, r3, [sp]
 800fb94:	466b      	mov	r3, sp
 800fb96:	47a0      	blx	r4
 800fb98:	b002      	add	sp, #8
 800fb9a:	bd10      	pop	{r4, pc}

0800fb9c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fb9c:	2301      	movs	r3, #1
 800fb9e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fba2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fba6:	4770      	bx	lr

0800fba8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fba8:	2301      	movs	r3, #1
 800fbaa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fbae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fbb2:	4770      	bx	lr

0800fbb4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fbb4:	6843      	ldr	r3, [r0, #4]
 800fbb6:	2201      	movs	r2, #1
 800fbb8:	725a      	strb	r2, [r3, #9]
 800fbba:	6840      	ldr	r0, [r0, #4]
 800fbbc:	6803      	ldr	r3, [r0, #0]
 800fbbe:	691b      	ldr	r3, [r3, #16]
 800fbc0:	4718      	bx	r3

0800fbc2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fbc2:	6840      	ldr	r0, [r0, #4]
 800fbc4:	6803      	ldr	r3, [r0, #0]
 800fbc6:	689b      	ldr	r3, [r3, #8]
 800fbc8:	4718      	bx	r3

0800fbca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fbca:	b530      	push	{r4, r5, lr}
 800fbcc:	b08b      	sub	sp, #44	; 0x2c
 800fbce:	6804      	ldr	r4, [r0, #0]
 800fbd0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fbd4:	9509      	str	r5, [sp, #36]	; 0x24
 800fbd6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fbda:	9508      	str	r5, [sp, #32]
 800fbdc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fbe0:	9507      	str	r5, [sp, #28]
 800fbe2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fbe6:	9506      	str	r5, [sp, #24]
 800fbe8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fbec:	9505      	str	r5, [sp, #20]
 800fbee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fbf2:	9504      	str	r5, [sp, #16]
 800fbf4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fbf8:	9503      	str	r5, [sp, #12]
 800fbfa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fbfe:	9502      	str	r5, [sp, #8]
 800fc00:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fc04:	e9cd 3500 	strd	r3, r5, [sp]
 800fc08:	4613      	mov	r3, r2
 800fc0a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fc0c:	2200      	movs	r2, #0
 800fc0e:	47a0      	blx	r4
 800fc10:	b00b      	add	sp, #44	; 0x2c
 800fc12:	bd30      	pop	{r4, r5, pc}

0800fc14 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fc14:	4b04      	ldr	r3, [pc, #16]	; (800fc28 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fc16:	781b      	ldrb	r3, [r3, #0]
 800fc18:	b123      	cbz	r3, 800fc24 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fc1a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fc1e:	f080 0001 	eor.w	r0, r0, #1
 800fc22:	4770      	bx	lr
 800fc24:	2001      	movs	r0, #1
 800fc26:	4770      	bx	lr
 800fc28:	20012da2 	.word	0x20012da2

0800fc2c <_ZN8touchgfx3HAL8endFrameEv>:
 800fc2c:	b510      	push	{r4, lr}
 800fc2e:	4604      	mov	r4, r0
 800fc30:	6840      	ldr	r0, [r0, #4]
 800fc32:	6803      	ldr	r3, [r0, #0]
 800fc34:	689b      	ldr	r3, [r3, #8]
 800fc36:	4798      	blx	r3
 800fc38:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fc3c:	b113      	cbz	r3, 800fc44 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fc3e:	2301      	movs	r3, #1
 800fc40:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fc44:	bd10      	pop	{r4, pc}

0800fc46 <_ZN8touchgfx3HAL10initializeEv>:
 800fc46:	b510      	push	{r4, lr}
 800fc48:	4604      	mov	r4, r0
 800fc4a:	f7f0 ff2f 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 800fc4e:	f7f0 fe3b 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 800fc52:	6860      	ldr	r0, [r4, #4]
 800fc54:	6803      	ldr	r3, [r0, #0]
 800fc56:	68db      	ldr	r3, [r3, #12]
 800fc58:	4798      	blx	r3
 800fc5a:	68e0      	ldr	r0, [r4, #12]
 800fc5c:	6803      	ldr	r3, [r0, #0]
 800fc5e:	689b      	ldr	r3, [r3, #8]
 800fc60:	4798      	blx	r3
 800fc62:	6823      	ldr	r3, [r4, #0]
 800fc64:	4620      	mov	r0, r4
 800fc66:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fc68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc6c:	4718      	bx	r3
	...

0800fc70 <_ZN8touchgfx3HAL4tickEv>:
 800fc70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fc72:	6803      	ldr	r3, [r0, #0]
 800fc74:	4d5b      	ldr	r5, [pc, #364]	; (800fde4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fc76:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fc7a:	4604      	mov	r4, r0
 800fc7c:	4798      	blx	r3
 800fc7e:	2800      	cmp	r0, #0
 800fc80:	f000 8095 	beq.w	800fdae <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fc84:	2001      	movs	r0, #1
 800fc86:	f7f0 fdd1 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fc8a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fc8e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fc92:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fc96:	2600      	movs	r6, #0
 800fc98:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800fc9c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fca0:	b133      	cbz	r3, 800fcb0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fca2:	6823      	ldr	r3, [r4, #0]
 800fca4:	4620      	mov	r0, r4
 800fca6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fcaa:	4798      	blx	r3
 800fcac:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fcb0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fcb4:	6862      	ldr	r2, [r4, #4]
 800fcb6:	f083 0301 	eor.w	r3, r3, #1
 800fcba:	7253      	strb	r3, [r2, #9]
 800fcbc:	2601      	movs	r6, #1
 800fcbe:	702e      	strb	r6, [r5, #0]
 800fcc0:	f004 ff6e 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 800fcc4:	6803      	ldr	r3, [r0, #0]
 800fcc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fcc8:	4798      	blx	r3
 800fcca:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fcce:	b90b      	cbnz	r3, 800fcd4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fcd0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fcd4:	f004 ff64 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 800fcd8:	6803      	ldr	r3, [r0, #0]
 800fcda:	695b      	ldr	r3, [r3, #20]
 800fcdc:	4798      	blx	r3
 800fcde:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fce0:	6803      	ldr	r3, [r0, #0]
 800fce2:	691b      	ldr	r3, [r3, #16]
 800fce4:	4798      	blx	r3
 800fce6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fcea:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fcee:	3b01      	subs	r3, #1
 800fcf0:	b2db      	uxtb	r3, r3
 800fcf2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fcf6:	b10a      	cbz	r2, 800fcfc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fcf8:	2b00      	cmp	r3, #0
 800fcfa:	d1eb      	bne.n	800fcd4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fcfc:	4a3a      	ldr	r2, [pc, #232]	; (800fde8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fcfe:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fd02:	7813      	ldrb	r3, [r2, #0]
 800fd04:	3301      	adds	r3, #1
 800fd06:	b25b      	sxtb	r3, r3
 800fd08:	4299      	cmp	r1, r3
 800fd0a:	7013      	strb	r3, [r2, #0]
 800fd0c:	dc10      	bgt.n	800fd30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fd0e:	68e0      	ldr	r0, [r4, #12]
 800fd10:	2300      	movs	r3, #0
 800fd12:	7013      	strb	r3, [r2, #0]
 800fd14:	6803      	ldr	r3, [r0, #0]
 800fd16:	aa03      	add	r2, sp, #12
 800fd18:	68db      	ldr	r3, [r3, #12]
 800fd1a:	a902      	add	r1, sp, #8
 800fd1c:	4798      	blx	r3
 800fd1e:	6823      	ldr	r3, [r4, #0]
 800fd20:	2800      	cmp	r0, #0
 800fd22:	d050      	beq.n	800fdc6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fd24:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fd28:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fd2c:	4620      	mov	r0, r4
 800fd2e:	4798      	blx	r3
 800fd30:	6960      	ldr	r0, [r4, #20]
 800fd32:	2300      	movs	r3, #0
 800fd34:	f88d 3007 	strb.w	r3, [sp, #7]
 800fd38:	b158      	cbz	r0, 800fd52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fd3a:	6803      	ldr	r3, [r0, #0]
 800fd3c:	f10d 0107 	add.w	r1, sp, #7
 800fd40:	68db      	ldr	r3, [r3, #12]
 800fd42:	4798      	blx	r3
 800fd44:	b128      	cbz	r0, 800fd52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fd46:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fd48:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fd4c:	6803      	ldr	r3, [r0, #0]
 800fd4e:	68db      	ldr	r3, [r3, #12]
 800fd50:	4798      	blx	r3
 800fd52:	f104 001c 	add.w	r0, r4, #28
 800fd56:	f015 feb9 	bl	8025acc <_ZN8touchgfx8Gestures4tickEv>
 800fd5a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fd5e:	b30b      	cbz	r3, 800fda4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fd60:	6920      	ldr	r0, [r4, #16]
 800fd62:	6803      	ldr	r3, [r0, #0]
 800fd64:	691b      	ldr	r3, [r3, #16]
 800fd66:	4798      	blx	r3
 800fd68:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fd6a:	4606      	mov	r6, r0
 800fd6c:	b903      	cbnz	r3, 800fd70 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fd6e:	6760      	str	r0, [r4, #116]	; 0x74
 800fd70:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fd72:	4a1e      	ldr	r2, [pc, #120]	; (800fdec <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fd74:	1af3      	subs	r3, r6, r3
 800fd76:	4293      	cmp	r3, r2
 800fd78:	d914      	bls.n	800fda4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fd7a:	6920      	ldr	r0, [r4, #16]
 800fd7c:	6803      	ldr	r3, [r0, #0]
 800fd7e:	699b      	ldr	r3, [r3, #24]
 800fd80:	4798      	blx	r3
 800fd82:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fd84:	2264      	movs	r2, #100	; 0x64
 800fd86:	1af3      	subs	r3, r6, r3
 800fd88:	fbb3 f3f2 	udiv	r3, r3, r2
 800fd8c:	fbb0 f0f3 	udiv	r0, r0, r3
 800fd90:	2800      	cmp	r0, #0
 800fd92:	dc1d      	bgt.n	800fdd0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fd94:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fd98:	6920      	ldr	r0, [r4, #16]
 800fd9a:	6803      	ldr	r3, [r0, #0]
 800fd9c:	2100      	movs	r1, #0
 800fd9e:	69db      	ldr	r3, [r3, #28]
 800fda0:	4798      	blx	r3
 800fda2:	6766      	str	r6, [r4, #116]	; 0x74
 800fda4:	f004 fefc 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 800fda8:	6803      	ldr	r3, [r0, #0]
 800fdaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fdac:	4798      	blx	r3
 800fdae:	6823      	ldr	r3, [r4, #0]
 800fdb0:	4620      	mov	r0, r4
 800fdb2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fdb6:	4798      	blx	r3
 800fdb8:	2001      	movs	r0, #1
 800fdba:	f7f0 fd4f 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fdbe:	2300      	movs	r3, #0
 800fdc0:	702b      	strb	r3, [r5, #0]
 800fdc2:	b004      	add	sp, #16
 800fdc4:	bd70      	pop	{r4, r5, r6, pc}
 800fdc6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800fdca:	4620      	mov	r0, r4
 800fdcc:	4798      	blx	r3
 800fdce:	e7af      	b.n	800fd30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fdd0:	2863      	cmp	r0, #99	; 0x63
 800fdd2:	bfcb      	itete	gt
 800fdd4:	2300      	movgt	r3, #0
 800fdd6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fdda:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fdde:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fde2:	e7d9      	b.n	800fd98 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fde4:	20012da8 	.word	0x20012da8
 800fde8:	20012da9 	.word	0x20012da9
 800fdec:	05f5e100 	.word	0x05f5e100

0800fdf0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fdf0:	b510      	push	{r4, lr}
 800fdf2:	4604      	mov	r4, r0
 800fdf4:	f7f0 fe8a 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fdf8:	6863      	ldr	r3, [r4, #4]
 800fdfa:	2200      	movs	r2, #0
 800fdfc:	729a      	strb	r2, [r3, #10]
 800fdfe:	bd10      	pop	{r4, pc}

0800fe00 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fe00:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fe02:	301c      	adds	r0, #28
 800fe04:	f015 be60 	b.w	8025ac8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fe08 <_ZN8touchgfx3HAL5touchEll>:
 800fe08:	b530      	push	{r4, r5, lr}
 800fe0a:	b087      	sub	sp, #28
 800fe0c:	4604      	mov	r4, r0
 800fe0e:	a804      	add	r0, sp, #16
 800fe10:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fe14:	f004 fc90 	bl	8014738 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fe18:	9b04      	ldr	r3, [sp, #16]
 800fe1a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fe1e:	a906      	add	r1, sp, #24
 800fe20:	9b05      	ldr	r3, [sp, #20]
 800fe22:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fe26:	a803      	add	r0, sp, #12
 800fe28:	f004 fcd8 	bl	80147dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fe2c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800fe30:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fe34:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fe38:	f104 001c 	add.w	r0, r4, #28
 800fe3c:	b189      	cbz	r1, 800fe62 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fe3e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800fe42:	9300      	str	r3, [sp, #0]
 800fe44:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fe48:	4613      	mov	r3, r2
 800fe4a:	462a      	mov	r2, r5
 800fe4c:	f015 fe4c 	bl	8025ae8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fe50:	b128      	cbz	r0, 800fe5e <_ZN8touchgfx3HAL5touchEll+0x56>
 800fe52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fe56:	6623      	str	r3, [r4, #96]	; 0x60
 800fe58:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fe5c:	6663      	str	r3, [r4, #100]	; 0x64
 800fe5e:	b007      	add	sp, #28
 800fe60:	bd30      	pop	{r4, r5, pc}
 800fe62:	f015 fe81 	bl	8025b68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fe66:	2301      	movs	r3, #1
 800fe68:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fe6c:	e7f1      	b.n	800fe52 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fe6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fe6e:	b510      	push	{r4, lr}
 800fe70:	2b00      	cmp	r3, #0
 800fe72:	d046      	beq.n	800ff02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fe74:	ea81 0002 	eor.w	r0, r1, r2
 800fe78:	07c4      	lsls	r4, r0, #31
 800fe7a:	d508      	bpl.n	800fe8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fe7c:	440b      	add	r3, r1
 800fe7e:	3a01      	subs	r2, #1
 800fe80:	428b      	cmp	r3, r1
 800fe82:	d93e      	bls.n	800ff02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fe84:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fe88:	f801 0b01 	strb.w	r0, [r1], #1
 800fe8c:	e7f8      	b.n	800fe80 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fe8e:	07d0      	lsls	r0, r2, #31
 800fe90:	bf42      	ittt	mi
 800fe92:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fe96:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fe9a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fe9e:	2b01      	cmp	r3, #1
 800fea0:	d911      	bls.n	800fec6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fea2:	ea81 0402 	eor.w	r4, r1, r2
 800fea6:	07a4      	lsls	r4, r4, #30
 800fea8:	4610      	mov	r0, r2
 800feaa:	d022      	beq.n	800fef2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800feac:	f023 0401 	bic.w	r4, r3, #1
 800feb0:	440c      	add	r4, r1
 800feb2:	428c      	cmp	r4, r1
 800feb4:	4602      	mov	r2, r0
 800feb6:	d904      	bls.n	800fec2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800feb8:	8812      	ldrh	r2, [r2, #0]
 800feba:	f821 2b02 	strh.w	r2, [r1], #2
 800febe:	3002      	adds	r0, #2
 800fec0:	e7f7      	b.n	800feb2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fec2:	f003 0301 	and.w	r3, r3, #1
 800fec6:	f023 0003 	bic.w	r0, r3, #3
 800feca:	4408      	add	r0, r1
 800fecc:	4288      	cmp	r0, r1
 800fece:	4614      	mov	r4, r2
 800fed0:	d904      	bls.n	800fedc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fed2:	6824      	ldr	r4, [r4, #0]
 800fed4:	f841 4b04 	str.w	r4, [r1], #4
 800fed8:	3204      	adds	r2, #4
 800feda:	e7f7      	b.n	800fecc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fedc:	f003 0303 	and.w	r3, r3, #3
 800fee0:	440b      	add	r3, r1
 800fee2:	3a01      	subs	r2, #1
 800fee4:	428b      	cmp	r3, r1
 800fee6:	d90c      	bls.n	800ff02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fee8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800feec:	f801 0b01 	strb.w	r0, [r1], #1
 800fef0:	e7f8      	b.n	800fee4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fef2:	0790      	lsls	r0, r2, #30
 800fef4:	d0e7      	beq.n	800fec6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fef6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fefa:	f821 0b02 	strh.w	r0, [r1], #2
 800fefe:	3b02      	subs	r3, #2
 800ff00:	e7e1      	b.n	800fec6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ff02:	2001      	movs	r0, #1
 800ff04:	bd10      	pop	{r4, pc}

0800ff06 <_ZN8touchgfx3HAL7noTouchEv>:
 800ff06:	b510      	push	{r4, lr}
 800ff08:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800ff0c:	4604      	mov	r4, r0
 800ff0e:	b153      	cbz	r3, 800ff26 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ff10:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800ff14:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800ff18:	2101      	movs	r1, #1
 800ff1a:	301c      	adds	r0, #28
 800ff1c:	f015 fe24 	bl	8025b68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ff20:	2300      	movs	r3, #0
 800ff22:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ff26:	bd10      	pop	{r4, pc}

0800ff28 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ff28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff2c:	b085      	sub	sp, #20
 800ff2e:	ad04      	add	r5, sp, #16
 800ff30:	4604      	mov	r4, r0
 800ff32:	2000      	movs	r0, #0
 800ff34:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ff38:	69a0      	ldr	r0, [r4, #24]
 800ff3a:	6806      	ldr	r6, [r0, #0]
 800ff3c:	9501      	str	r5, [sp, #4]
 800ff3e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800ff42:	9500      	str	r5, [sp, #0]
 800ff44:	6835      	ldr	r5, [r6, #0]
 800ff46:	4699      	mov	r9, r3
 800ff48:	460f      	mov	r7, r1
 800ff4a:	4690      	mov	r8, r2
 800ff4c:	47a8      	blx	r5
 800ff4e:	4d10      	ldr	r5, [pc, #64]	; (800ff90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800ff50:	4606      	mov	r6, r0
 800ff52:	f8a5 9000 	strh.w	r9, [r5]
 800ff56:	f7f3 fc3d 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 800ff5a:	6803      	ldr	r3, [r0, #0]
 800ff5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff5e:	4798      	blx	r3
 800ff60:	b128      	cbz	r0, 800ff6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ff62:	2801      	cmp	r0, #1
 800ff64:	d00b      	beq.n	800ff7e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ff66:	4630      	mov	r0, r6
 800ff68:	b005      	add	sp, #20
 800ff6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff6e:	882b      	ldrh	r3, [r5, #0]
 800ff70:	fb08 7203 	mla	r2, r8, r3, r7
 800ff74:	9b03      	ldr	r3, [sp, #12]
 800ff76:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ff7a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ff7c:	e7f3      	b.n	800ff66 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ff7e:	882a      	ldrh	r2, [r5, #0]
 800ff80:	9b03      	ldr	r3, [sp, #12]
 800ff82:	fb08 7202 	mla	r2, r8, r2, r7
 800ff86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ff8a:	1a9a      	subs	r2, r3, r2
 800ff8c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800ff8e:	e7ea      	b.n	800ff66 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ff90:	20012d9e 	.word	0x20012d9e

0800ff94 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800ff94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff96:	b08b      	sub	sp, #44	; 0x2c
 800ff98:	4617      	mov	r7, r2
 800ff9a:	4604      	mov	r4, r0
 800ff9c:	460e      	mov	r6, r1
 800ff9e:	461d      	mov	r5, r3
 800ffa0:	f7f3 fc18 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 800ffa4:	6803      	ldr	r3, [r0, #0]
 800ffa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ffa8:	4798      	blx	r3
 800ffaa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ffae:	9007      	str	r0, [sp, #28]
 800ffb0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ffb4:	4b0d      	ldr	r3, [pc, #52]	; (800ffec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800ffb6:	6822      	ldr	r2, [r4, #0]
 800ffb8:	881b      	ldrh	r3, [r3, #0]
 800ffba:	9306      	str	r3, [sp, #24]
 800ffbc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800ffc0:	9305      	str	r3, [sp, #20]
 800ffc2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ffc6:	9304      	str	r3, [sp, #16]
 800ffc8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ffcc:	9303      	str	r3, [sp, #12]
 800ffce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ffd2:	9302      	str	r3, [sp, #8]
 800ffd4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ffd8:	e9cd 5300 	strd	r5, r3, [sp]
 800ffdc:	4631      	mov	r1, r6
 800ffde:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800ffe0:	463b      	mov	r3, r7
 800ffe2:	2200      	movs	r2, #0
 800ffe4:	4620      	mov	r0, r4
 800ffe6:	47a8      	blx	r5
 800ffe8:	b00b      	add	sp, #44	; 0x2c
 800ffea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ffec:	20012d9e 	.word	0x20012d9e

0800fff0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fff0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fff4:	4698      	mov	r8, r3
 800fff6:	6803      	ldr	r3, [r0, #0]
 800fff8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800fffa:	4b15      	ldr	r3, [pc, #84]	; (8010050 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fffc:	b08b      	sub	sp, #44	; 0x2c
 800fffe:	4617      	mov	r7, r2
 8010000:	f8b3 9000 	ldrh.w	r9, [r3]
 8010004:	460e      	mov	r6, r1
 8010006:	4604      	mov	r4, r0
 8010008:	f7f3 fbe4 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 801000c:	6803      	ldr	r3, [r0, #0]
 801000e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010010:	4798      	blx	r3
 8010012:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010016:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801001a:	2302      	movs	r3, #2
 801001c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010020:	2301      	movs	r3, #1
 8010022:	9305      	str	r3, [sp, #20]
 8010024:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010028:	9304      	str	r3, [sp, #16]
 801002a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801002e:	9303      	str	r3, [sp, #12]
 8010030:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010034:	9302      	str	r3, [sp, #8]
 8010036:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801003a:	2200      	movs	r2, #0
 801003c:	e9cd 8300 	strd	r8, r3, [sp]
 8010040:	4631      	mov	r1, r6
 8010042:	463b      	mov	r3, r7
 8010044:	4620      	mov	r0, r4
 8010046:	47a8      	blx	r5
 8010048:	b00b      	add	sp, #44	; 0x2c
 801004a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801004e:	bf00      	nop
 8010050:	20012d9e 	.word	0x20012d9e

08010054 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010054:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010058:	4698      	mov	r8, r3
 801005a:	6803      	ldr	r3, [r0, #0]
 801005c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801005e:	4b11      	ldr	r3, [pc, #68]	; (80100a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010060:	b087      	sub	sp, #28
 8010062:	f8b3 9000 	ldrh.w	r9, [r3]
 8010066:	460e      	mov	r6, r1
 8010068:	4617      	mov	r7, r2
 801006a:	4604      	mov	r4, r0
 801006c:	f7f3 fbb2 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8010070:	6803      	ldr	r3, [r0, #0]
 8010072:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010074:	4798      	blx	r3
 8010076:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801007a:	f8cd 900c 	str.w	r9, [sp, #12]
 801007e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010082:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010086:	9302      	str	r3, [sp, #8]
 8010088:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801008c:	9301      	str	r3, [sp, #4]
 801008e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010092:	9300      	str	r3, [sp, #0]
 8010094:	463a      	mov	r2, r7
 8010096:	4643      	mov	r3, r8
 8010098:	4631      	mov	r1, r6
 801009a:	4620      	mov	r0, r4
 801009c:	47a8      	blx	r5
 801009e:	b007      	add	sp, #28
 80100a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80100a4:	20012d9e 	.word	0x20012d9e

080100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80100a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100ac:	4604      	mov	r4, r0
 80100ae:	b08f      	sub	sp, #60	; 0x3c
 80100b0:	4610      	mov	r0, r2
 80100b2:	460d      	mov	r5, r1
 80100b4:	4691      	mov	r9, r2
 80100b6:	461e      	mov	r6, r3
 80100b8:	f008 f8f0 	bl	801829c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80100bc:	2800      	cmp	r0, #0
 80100be:	f000 809d 	beq.w	80101fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80100c2:	6823      	ldr	r3, [r4, #0]
 80100c4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010260 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80100c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80100ca:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010264 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80100ce:	4f61      	ldr	r7, [pc, #388]	; (8010254 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80100d0:	4620      	mov	r0, r4
 80100d2:	4798      	blx	r3
 80100d4:	6823      	ldr	r3, [r4, #0]
 80100d6:	4620      	mov	r0, r4
 80100d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80100da:	4798      	blx	r3
 80100dc:	f8bb 3000 	ldrh.w	r3, [fp]
 80100e0:	9301      	str	r3, [sp, #4]
 80100e2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80100e6:	f8ba 3000 	ldrh.w	r3, [sl]
 80100ea:	9302      	str	r3, [sp, #8]
 80100ec:	883b      	ldrh	r3, [r7, #0]
 80100ee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80100f2:	9303      	str	r3, [sp, #12]
 80100f4:	4b58      	ldr	r3, [pc, #352]	; (8010258 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80100f6:	9305      	str	r3, [sp, #20]
 80100f8:	881a      	ldrh	r2, [r3, #0]
 80100fa:	9204      	str	r2, [sp, #16]
 80100fc:	4640      	mov	r0, r8
 80100fe:	f008 f961 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010102:	8038      	strh	r0, [r7, #0]
 8010104:	4640      	mov	r0, r8
 8010106:	f008 f991 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801010a:	9b05      	ldr	r3, [sp, #20]
 801010c:	b280      	uxth	r0, r0
 801010e:	8018      	strh	r0, [r3, #0]
 8010110:	4b52      	ldr	r3, [pc, #328]	; (801025c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010112:	781b      	ldrb	r3, [r3, #0]
 8010114:	2b00      	cmp	r3, #0
 8010116:	d174      	bne.n	8010202 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010118:	883b      	ldrh	r3, [r7, #0]
 801011a:	f8ab 3000 	strh.w	r3, [fp]
 801011e:	f8aa 0000 	strh.w	r0, [sl]
 8010122:	4648      	mov	r0, r9
 8010124:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010128:	f008 f8b8 	bl	801829c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801012c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010130:	2200      	movs	r2, #0
 8010132:	4611      	mov	r1, r2
 8010134:	4628      	mov	r0, r5
 8010136:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801013a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801013e:	f7f2 fa8e 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8010142:	2301      	movs	r3, #1
 8010144:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010148:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801014c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010150:	2b00      	cmp	r3, #0
 8010152:	dd5c      	ble.n	801020e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010154:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010158:	2b00      	cmp	r3, #0
 801015a:	dd58      	ble.n	801020e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801015c:	462a      	mov	r2, r5
 801015e:	ab0a      	add	r3, sp, #40	; 0x28
 8010160:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010164:	6851      	ldr	r1, [r2, #4]
 8010166:	c303      	stmia	r3!, {r0, r1}
 8010168:	4631      	mov	r1, r6
 801016a:	a80a      	add	r0, sp, #40	; 0x28
 801016c:	f7ff fc06 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8010170:	4b38      	ldr	r3, [pc, #224]	; (8010254 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010172:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010176:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801017a:	2100      	movs	r1, #0
 801017c:	aa0a      	add	r2, sp, #40	; 0x28
 801017e:	4b36      	ldr	r3, [pc, #216]	; (8010258 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010180:	910c      	str	r1, [sp, #48]	; 0x30
 8010182:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010186:	f9b3 3000 	ldrsh.w	r3, [r3]
 801018a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801018e:	ab08      	add	r3, sp, #32
 8010190:	e883 0003 	stmia.w	r3, {r0, r1}
 8010194:	4618      	mov	r0, r3
 8010196:	a90c      	add	r1, sp, #48	; 0x30
 8010198:	f7ff fbf0 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 801019c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801019e:	2b00      	cmp	r3, #0
 80101a0:	d13c      	bne.n	801021c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80101a2:	2000      	movs	r0, #0
 80101a4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80101a8:	2600      	movs	r6, #0
 80101aa:	682a      	ldr	r2, [r5, #0]
 80101ac:	696b      	ldr	r3, [r5, #20]
 80101ae:	616e      	str	r6, [r5, #20]
 80101b0:	9305      	str	r3, [sp, #20]
 80101b2:	6892      	ldr	r2, [r2, #8]
 80101b4:	a908      	add	r1, sp, #32
 80101b6:	4628      	mov	r0, r5
 80101b8:	4790      	blx	r2
 80101ba:	9b05      	ldr	r3, [sp, #20]
 80101bc:	616b      	str	r3, [r5, #20]
 80101be:	4652      	mov	r2, sl
 80101c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80101c4:	4649      	mov	r1, r9
 80101c6:	4628      	mov	r0, r5
 80101c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80101cc:	f7f2 fa47 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 80101d0:	4b23      	ldr	r3, [pc, #140]	; (8010260 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80101d2:	9a01      	ldr	r2, [sp, #4]
 80101d4:	801a      	strh	r2, [r3, #0]
 80101d6:	4b23      	ldr	r3, [pc, #140]	; (8010264 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80101d8:	9a02      	ldr	r2, [sp, #8]
 80101da:	801a      	strh	r2, [r3, #0]
 80101dc:	4b1d      	ldr	r3, [pc, #116]	; (8010254 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80101de:	9a03      	ldr	r2, [sp, #12]
 80101e0:	801a      	strh	r2, [r3, #0]
 80101e2:	4b1d      	ldr	r3, [pc, #116]	; (8010258 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80101e4:	9a04      	ldr	r2, [sp, #16]
 80101e6:	801a      	strh	r2, [r3, #0]
 80101e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80101ec:	6823      	ldr	r3, [r4, #0]
 80101ee:	4620      	mov	r0, r4
 80101f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80101f2:	4798      	blx	r3
 80101f4:	6823      	ldr	r3, [r4, #0]
 80101f6:	4620      	mov	r0, r4
 80101f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80101fa:	4798      	blx	r3
 80101fc:	b00f      	add	sp, #60	; 0x3c
 80101fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010202:	883b      	ldrh	r3, [r7, #0]
 8010204:	f8ab 0000 	strh.w	r0, [fp]
 8010208:	f8aa 3000 	strh.w	r3, [sl]
 801020c:	e789      	b.n	8010122 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801020e:	462a      	mov	r2, r5
 8010210:	ab0a      	add	r3, sp, #40	; 0x28
 8010212:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010216:	6851      	ldr	r1, [r2, #4]
 8010218:	c303      	stmia	r3!, {r0, r1}
 801021a:	e7a9      	b.n	8010170 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801021c:	a807      	add	r0, sp, #28
 801021e:	f008 fa41 	bl	80186a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010222:	4606      	mov	r6, r0
 8010224:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010226:	6803      	ldr	r3, [r0, #0]
 8010228:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801022a:	4798      	blx	r3
 801022c:	4286      	cmp	r6, r0
 801022e:	d1b8      	bne.n	80101a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010230:	f7f3 fad0 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8010234:	6803      	ldr	r3, [r0, #0]
 8010236:	4606      	mov	r6, r0
 8010238:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801023a:	9305      	str	r3, [sp, #20]
 801023c:	a807      	add	r0, sp, #28
 801023e:	f008 fa31 	bl	80186a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010242:	9b05      	ldr	r3, [sp, #20]
 8010244:	4601      	mov	r1, r0
 8010246:	4630      	mov	r0, r6
 8010248:	4798      	blx	r3
 801024a:	f080 0001 	eor.w	r0, r0, #1
 801024e:	b2c0      	uxtb	r0, r0
 8010250:	e7a8      	b.n	80101a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010252:	bf00      	nop
 8010254:	20012d98 	.word	0x20012d98
 8010258:	20012d9a 	.word	0x20012d9a
 801025c:	20012d9c 	.word	0x20012d9c
 8010260:	20012d9e 	.word	0x20012d9e
 8010264:	20012da0 	.word	0x20012da0

08010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010268:	b510      	push	{r4, lr}
 801026a:	4b07      	ldr	r3, [pc, #28]	; (8010288 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801026c:	781b      	ldrb	r3, [r3, #0]
 801026e:	4604      	mov	r4, r0
 8010270:	b13b      	cbz	r3, 8010282 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010272:	6803      	ldr	r3, [r0, #0]
 8010274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010276:	4798      	blx	r3
 8010278:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801027a:	4283      	cmp	r3, r0
 801027c:	d101      	bne.n	8010282 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801027e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010280:	bd10      	pop	{r4, pc}
 8010282:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010284:	e7fc      	b.n	8010280 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010286:	bf00      	nop
 8010288:	20012da2 	.word	0x20012da2

0801028c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801028c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010290:	b08a      	sub	sp, #40	; 0x28
 8010292:	461d      	mov	r5, r3
 8010294:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010298:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801029c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80102a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80102a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80102a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80102ac:	2400      	movs	r4, #0
 80102ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80102b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80102b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80102ba:	4690      	mov	r8, r2
 80102bc:	4607      	mov	r7, r0
 80102be:	9404      	str	r4, [sp, #16]
 80102c0:	f88d 4020 	strb.w	r4, [sp, #32]
 80102c4:	f7ff ffd0 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80102c8:	fb06 8505 	mla	r5, r6, r5, r8
 80102cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80102d0:	6878      	ldr	r0, [r7, #4]
 80102d2:	9505      	str	r5, [sp, #20]
 80102d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80102d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80102dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80102e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80102e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80102e8:	6803      	ldr	r3, [r0, #0]
 80102ea:	a901      	add	r1, sp, #4
 80102ec:	685b      	ldr	r3, [r3, #4]
 80102ee:	4798      	blx	r3
 80102f0:	b00a      	add	sp, #40	; 0x28
 80102f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80102f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80102fa:	b08b      	sub	sp, #44	; 0x2c
 80102fc:	2400      	movs	r4, #0
 80102fe:	461d      	mov	r5, r3
 8010300:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010304:	4688      	mov	r8, r1
 8010306:	4691      	mov	r9, r2
 8010308:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801030c:	9404      	str	r4, [sp, #16]
 801030e:	4607      	mov	r7, r0
 8010310:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010314:	f7ff ffa8 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010318:	fb06 9505 	mla	r5, r6, r5, r9
 801031c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010320:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010324:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010328:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801032c:	6878      	ldr	r0, [r7, #4]
 801032e:	9505      	str	r5, [sp, #20]
 8010330:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010334:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010338:	f8ad 601e 	strh.w	r6, [sp, #30]
 801033c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010340:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010344:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010348:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801034c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010350:	6803      	ldr	r3, [r0, #0]
 8010352:	a901      	add	r1, sp, #4
 8010354:	685b      	ldr	r3, [r3, #4]
 8010356:	4798      	blx	r3
 8010358:	b00b      	add	sp, #44	; 0x2c
 801035a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010360 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010364:	b08a      	sub	sp, #40	; 0x28
 8010366:	4698      	mov	r8, r3
 8010368:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801036c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010370:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010374:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010378:	2300      	movs	r3, #0
 801037a:	2d0b      	cmp	r5, #11
 801037c:	4606      	mov	r6, r0
 801037e:	9304      	str	r3, [sp, #16]
 8010380:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010384:	d138      	bne.n	80103f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010386:	2380      	movs	r3, #128	; 0x80
 8010388:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801038c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010390:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010394:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010398:	f8ad 301a 	strh.w	r3, [sp, #26]
 801039c:	f88d 0020 	strb.w	r0, [sp, #32]
 80103a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80103a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80103a8:	4630      	mov	r0, r6
 80103aa:	9203      	str	r2, [sp, #12]
 80103ac:	f7ff ff5c 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80103b0:	2c0b      	cmp	r4, #11
 80103b2:	bf98      	it	ls
 80103b4:	4b1b      	ldrls	r3, [pc, #108]	; (8010424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80103b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80103ba:	bf98      	it	ls
 80103bc:	5d19      	ldrbls	r1, [r3, r4]
 80103be:	f8ad 701e 	strh.w	r7, [sp, #30]
 80103c2:	bf88      	it	hi
 80103c4:	2100      	movhi	r1, #0
 80103c6:	fb02 8307 	mla	r3, r2, r7, r8
 80103ca:	10c9      	asrs	r1, r1, #3
 80103cc:	fb01 0003 	mla	r0, r1, r3, r0
 80103d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80103d4:	9005      	str	r0, [sp, #20]
 80103d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80103da:	6870      	ldr	r0, [r6, #4]
 80103dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80103e0:	2300      	movs	r3, #0
 80103e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80103e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80103ea:	6803      	ldr	r3, [r0, #0]
 80103ec:	a901      	add	r1, sp, #4
 80103ee:	685b      	ldr	r3, [r3, #4]
 80103f0:	4798      	blx	r3
 80103f2:	b00a      	add	sp, #40	; 0x28
 80103f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103f8:	2d02      	cmp	r5, #2
 80103fa:	d109      	bne.n	8010410 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80103fc:	28ff      	cmp	r0, #255	; 0xff
 80103fe:	d105      	bne.n	801040c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010400:	f1bc 0f00 	cmp.w	ip, #0
 8010404:	bf14      	ite	ne
 8010406:	2340      	movne	r3, #64	; 0x40
 8010408:	2320      	moveq	r3, #32
 801040a:	e7bd      	b.n	8010388 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801040c:	2340      	movs	r3, #64	; 0x40
 801040e:	e7bb      	b.n	8010388 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010410:	28ff      	cmp	r0, #255	; 0xff
 8010412:	d105      	bne.n	8010420 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010414:	f1bc 0f00 	cmp.w	ip, #0
 8010418:	bf14      	ite	ne
 801041a:	2304      	movne	r3, #4
 801041c:	2301      	moveq	r3, #1
 801041e:	e7b3      	b.n	8010388 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010420:	2304      	movs	r3, #4
 8010422:	e7b1      	b.n	8010388 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010424:	0802dacc 	.word	0x0802dacc

08010428 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801042c:	b08b      	sub	sp, #44	; 0x2c
 801042e:	461d      	mov	r5, r3
 8010430:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010434:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010438:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801043c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010440:	bf14      	ite	ne
 8010442:	2308      	movne	r3, #8
 8010444:	2302      	moveq	r3, #2
 8010446:	2400      	movs	r4, #0
 8010448:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801044c:	4688      	mov	r8, r1
 801044e:	4693      	mov	fp, r2
 8010450:	9404      	str	r4, [sp, #16]
 8010452:	4607      	mov	r7, r0
 8010454:	f7ff ff08 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010458:	2e0b      	cmp	r6, #11
 801045a:	bf98      	it	ls
 801045c:	4b15      	ldrls	r3, [pc, #84]	; (80104b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801045e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010462:	bf98      	it	ls
 8010464:	5d9c      	ldrbls	r4, [r3, r6]
 8010466:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801046a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801046e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010472:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010476:	f8ad 301a 	strh.w	r3, [sp, #26]
 801047a:	10e4      	asrs	r4, r4, #3
 801047c:	fb04 0405 	mla	r4, r4, r5, r0
 8010480:	2300      	movs	r3, #0
 8010482:	6878      	ldr	r0, [r7, #4]
 8010484:	9405      	str	r4, [sp, #20]
 8010486:	f8ad 301c 	strh.w	r3, [sp, #28]
 801048a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801048e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010492:	f88d 9020 	strb.w	r9, [sp, #32]
 8010496:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801049a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801049e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80104a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80104a6:	6803      	ldr	r3, [r0, #0]
 80104a8:	a901      	add	r1, sp, #4
 80104aa:	685b      	ldr	r3, [r3, #4]
 80104ac:	4798      	blx	r3
 80104ae:	b00b      	add	sp, #44	; 0x2c
 80104b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104b4:	0802dacc 	.word	0x0802dacc

080104b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80104b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104bc:	461e      	mov	r6, r3
 80104be:	4b0a      	ldr	r3, [pc, #40]	; (80104e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80104c0:	460f      	mov	r7, r1
 80104c2:	881d      	ldrh	r5, [r3, #0]
 80104c4:	4690      	mov	r8, r2
 80104c6:	f7f3 f985 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 80104ca:	6803      	ldr	r3, [r0, #0]
 80104cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104ce:	4798      	blx	r3
 80104d0:	280b      	cmp	r0, #11
 80104d2:	bf9a      	itte	ls
 80104d4:	4b05      	ldrls	r3, [pc, #20]	; (80104ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80104d6:	5c1c      	ldrbls	r4, [r3, r0]
 80104d8:	2400      	movhi	r4, #0
 80104da:	fb08 7005 	mla	r0, r8, r5, r7
 80104de:	10e4      	asrs	r4, r4, #3
 80104e0:	fb04 6000 	mla	r0, r4, r0, r6
 80104e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104e8:	20012d9e 	.word	0x20012d9e
 80104ec:	0802dacc 	.word	0x0802dacc

080104f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80104f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104f2:	b08b      	sub	sp, #44	; 0x2c
 80104f4:	461f      	mov	r7, r3
 80104f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80104fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80104fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010502:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010506:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801050a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801050e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010512:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010516:	2500      	movs	r5, #0
 8010518:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801051c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010520:	4604      	mov	r4, r0
 8010522:	4616      	mov	r6, r2
 8010524:	9504      	str	r5, [sp, #16]
 8010526:	f7ff fe9f 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801052a:	463a      	mov	r2, r7
 801052c:	4631      	mov	r1, r6
 801052e:	4603      	mov	r3, r0
 8010530:	4620      	mov	r0, r4
 8010532:	f7ff ffc1 	bl	80104b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010536:	4b0e      	ldr	r3, [pc, #56]	; (8010570 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010538:	9005      	str	r0, [sp, #20]
 801053a:	881b      	ldrh	r3, [r3, #0]
 801053c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010540:	f7f3 f948 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8010544:	6803      	ldr	r3, [r0, #0]
 8010546:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010548:	4798      	blx	r3
 801054a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801054c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010550:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010554:	9304      	str	r3, [sp, #16]
 8010556:	6860      	ldr	r0, [r4, #4]
 8010558:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801055c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010560:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010564:	6803      	ldr	r3, [r0, #0]
 8010566:	a901      	add	r1, sp, #4
 8010568:	685b      	ldr	r3, [r3, #4]
 801056a:	4798      	blx	r3
 801056c:	b00b      	add	sp, #44	; 0x2c
 801056e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010570:	20012d9e 	.word	0x20012d9e

08010574 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010574:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010576:	b08d      	sub	sp, #52	; 0x34
 8010578:	466b      	mov	r3, sp
 801057a:	e883 0006 	stmia.w	r3, {r1, r2}
 801057e:	2300      	movs	r3, #0
 8010580:	9306      	str	r3, [sp, #24]
 8010582:	6803      	ldr	r3, [r0, #0]
 8010584:	f8bd 6000 	ldrh.w	r6, [sp]
 8010588:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801058a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801058e:	2501      	movs	r5, #1
 8010590:	9503      	str	r5, [sp, #12]
 8010592:	4604      	mov	r4, r0
 8010594:	4798      	blx	r3
 8010596:	463a      	mov	r2, r7
 8010598:	4631      	mov	r1, r6
 801059a:	4603      	mov	r3, r0
 801059c:	4620      	mov	r0, r4
 801059e:	f7ff ff8b 	bl	80104b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80105a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80105a4:	9307      	str	r3, [sp, #28]
 80105a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80105aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80105ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80105b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80105b6:	4b0f      	ldr	r3, [pc, #60]	; (80105f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80105b8:	9004      	str	r0, [sp, #16]
 80105ba:	881b      	ldrh	r3, [r3, #0]
 80105bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80105c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80105c4:	f7f3 f906 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 80105c8:	6803      	ldr	r3, [r0, #0]
 80105ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105cc:	4798      	blx	r3
 80105ce:	23ff      	movs	r3, #255	; 0xff
 80105d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80105d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80105d8:	6860      	ldr	r0, [r4, #4]
 80105da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80105de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80105e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80105e6:	6803      	ldr	r3, [r0, #0]
 80105e8:	a903      	add	r1, sp, #12
 80105ea:	685b      	ldr	r3, [r3, #4]
 80105ec:	4798      	blx	r3
 80105ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80105f0:	b00d      	add	sp, #52	; 0x34
 80105f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105f4:	20012d9e 	.word	0x20012d9e

080105f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80105f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105fc:	b08c      	sub	sp, #48	; 0x30
 80105fe:	461e      	mov	r6, r3
 8010600:	466d      	mov	r5, sp
 8010602:	2300      	movs	r3, #0
 8010604:	e885 0006 	stmia.w	r5, {r1, r2}
 8010608:	9306      	str	r3, [sp, #24]
 801060a:	6803      	ldr	r3, [r0, #0]
 801060c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010610:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010612:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010616:	2501      	movs	r5, #1
 8010618:	9503      	str	r5, [sp, #12]
 801061a:	4604      	mov	r4, r0
 801061c:	4798      	blx	r3
 801061e:	4642      	mov	r2, r8
 8010620:	4639      	mov	r1, r7
 8010622:	4603      	mov	r3, r0
 8010624:	4620      	mov	r0, r4
 8010626:	f7ff ff47 	bl	80104b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801062a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801062e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010632:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010636:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801063a:	4b11      	ldr	r3, [pc, #68]	; (8010680 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801063c:	9004      	str	r0, [sp, #16]
 801063e:	881b      	ldrh	r3, [r3, #0]
 8010640:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010644:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010646:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801064a:	9607      	str	r6, [sp, #28]
 801064c:	f7f3 f8c2 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8010650:	6803      	ldr	r3, [r0, #0]
 8010652:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010654:	4798      	blx	r3
 8010656:	23ff      	movs	r3, #255	; 0xff
 8010658:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801065c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010660:	6860      	ldr	r0, [r4, #4]
 8010662:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010666:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801066a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801066e:	6803      	ldr	r3, [r0, #0]
 8010670:	a903      	add	r1, sp, #12
 8010672:	685b      	ldr	r3, [r3, #4]
 8010674:	4798      	blx	r3
 8010676:	4630      	mov	r0, r6
 8010678:	b00c      	add	sp, #48	; 0x30
 801067a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801067e:	bf00      	nop
 8010680:	20012d9e 	.word	0x20012d9e

08010684 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010684:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010686:	b085      	sub	sp, #20
 8010688:	ac02      	add	r4, sp, #8
 801068a:	e884 0006 	stmia.w	r4, {r1, r2}
 801068e:	4605      	mov	r5, r0
 8010690:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010694:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010698:	f7ff fde6 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801069c:	463a      	mov	r2, r7
 801069e:	4603      	mov	r3, r0
 80106a0:	4631      	mov	r1, r6
 80106a2:	4628      	mov	r0, r5
 80106a4:	f7ff ff08 	bl	80104b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80106a8:	4a05      	ldr	r2, [pc, #20]	; (80106c0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80106aa:	682b      	ldr	r3, [r5, #0]
 80106ac:	8812      	ldrh	r2, [r2, #0]
 80106ae:	9200      	str	r2, [sp, #0]
 80106b0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80106b2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80106b6:	4603      	mov	r3, r0
 80106b8:	4628      	mov	r0, r5
 80106ba:	47b0      	blx	r6
 80106bc:	b005      	add	sp, #20
 80106be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106c0:	20012d9e 	.word	0x20012d9e

080106c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80106c4:	b570      	push	{r4, r5, r6, lr}
 80106c6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80106ca:	4604      	mov	r4, r0
 80106cc:	b19b      	cbz	r3, 80106f6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80106ce:	2002      	movs	r0, #2
 80106d0:	f7f0 f8dc 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80106d4:	2300      	movs	r3, #0
 80106d6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80106da:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80106de:	6823      	ldr	r3, [r4, #0]
 80106e0:	4620      	mov	r0, r4
 80106e2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80106e6:	f7ff fdbf 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80106ea:	462b      	mov	r3, r5
 80106ec:	4601      	mov	r1, r0
 80106ee:	4620      	mov	r0, r4
 80106f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80106f4:	4718      	bx	r3
 80106f6:	bd70      	pop	{r4, r5, r6, pc}

080106f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80106f8:	b538      	push	{r3, r4, r5, lr}
 80106fa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80106fe:	428b      	cmp	r3, r1
 8010700:	4604      	mov	r4, r0
 8010702:	460d      	mov	r5, r1
 8010704:	d006      	beq.n	8010714 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010706:	6803      	ldr	r3, [r0, #0]
 8010708:	b929      	cbnz	r1, 8010716 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801070a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801070e:	4798      	blx	r3
 8010710:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010714:	bd38      	pop	{r3, r4, r5, pc}
 8010716:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801071a:	e7f8      	b.n	801070e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801071c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801071c:	b510      	push	{r4, lr}
 801071e:	4b0d      	ldr	r3, [pc, #52]	; (8010754 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010720:	781b      	ldrb	r3, [r3, #0]
 8010722:	4604      	mov	r4, r0
 8010724:	b95b      	cbnz	r3, 801073e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010726:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801072a:	2b02      	cmp	r3, #2
 801072c:	d007      	beq.n	801073e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801072e:	6840      	ldr	r0, [r0, #4]
 8010730:	f000 f92c 	bl	801098c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010734:	b118      	cbz	r0, 801073e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010736:	6862      	ldr	r2, [r4, #4]
 8010738:	7a53      	ldrb	r3, [r2, #9]
 801073a:	2b00      	cmp	r3, #0
 801073c:	d0fc      	beq.n	8010738 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801073e:	f7f0 f9dd 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010742:	4620      	mov	r0, r4
 8010744:	2100      	movs	r1, #0
 8010746:	f7ff ffd7 	bl	80106f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801074a:	4620      	mov	r0, r4
 801074c:	f7ff fd8c 	bl	8010268 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010750:	bd10      	pop	{r4, pc}
 8010752:	bf00      	nop
 8010754:	20012da2 	.word	0x20012da2

08010758 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010758:	b570      	push	{r4, r5, r6, lr}
 801075a:	4604      	mov	r4, r0
 801075c:	6803      	ldr	r3, [r0, #0]
 801075e:	b919      	cbnz	r1, 8010768 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010760:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010762:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010766:	4718      	bx	r3
 8010768:	2200      	movs	r2, #0
 801076a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801076e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010772:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010774:	4798      	blx	r3
 8010776:	6863      	ldr	r3, [r4, #4]
 8010778:	2101      	movs	r1, #1
 801077a:	4605      	mov	r5, r0
 801077c:	7299      	strb	r1, [r3, #10]
 801077e:	4620      	mov	r0, r4
 8010780:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010784:	f7ff ffb8 	bl	80106f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010788:	4628      	mov	r0, r5
 801078a:	bd70      	pop	{r4, r5, r6, pc}

0801078c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801078c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010790:	1a13      	subs	r3, r2, r0
 8010792:	4258      	negs	r0, r3
 8010794:	4158      	adcs	r0, r3
 8010796:	4770      	bx	lr

08010798 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010798:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801079c:	1a9b      	subs	r3, r3, r2
 801079e:	2b00      	cmp	r3, #0
 80107a0:	bfdc      	itt	le
 80107a2:	6882      	ldrle	r2, [r0, #8]
 80107a4:	189b      	addle	r3, r3, r2
 80107a6:	2b01      	cmp	r3, #1
 80107a8:	bfcc      	ite	gt
 80107aa:	2000      	movgt	r0, #0
 80107ac:	2001      	movle	r0, #1
 80107ae:	4770      	bx	lr

080107b0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80107b0:	6902      	ldr	r2, [r0, #16]
 80107b2:	6843      	ldr	r3, [r0, #4]
 80107b4:	2024      	movs	r0, #36	; 0x24
 80107b6:	fb00 3002 	mla	r0, r0, r2, r3
 80107ba:	4770      	bx	lr

080107bc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80107bc:	6803      	ldr	r3, [r0, #0]
 80107be:	691b      	ldr	r3, [r3, #16]
 80107c0:	4718      	bx	r3

080107c2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80107c2:	b570      	push	{r4, r5, r6, lr}
 80107c4:	2301      	movs	r3, #1
 80107c6:	7203      	strb	r3, [r0, #8]
 80107c8:	4604      	mov	r4, r0
 80107ca:	6840      	ldr	r0, [r0, #4]
 80107cc:	6803      	ldr	r3, [r0, #0]
 80107ce:	699b      	ldr	r3, [r3, #24]
 80107d0:	4798      	blx	r3
 80107d2:	6803      	ldr	r3, [r0, #0]
 80107d4:	2b40      	cmp	r3, #64	; 0x40
 80107d6:	4605      	mov	r5, r0
 80107d8:	d00c      	beq.n	80107f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80107da:	d810      	bhi.n	80107fe <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80107dc:	2b04      	cmp	r3, #4
 80107de:	d01d      	beq.n	801081c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80107e0:	d804      	bhi.n	80107ec <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80107e2:	2b01      	cmp	r3, #1
 80107e4:	d006      	beq.n	80107f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80107e6:	2b02      	cmp	r3, #2
 80107e8:	d02c      	beq.n	8010844 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80107ea:	bd70      	pop	{r4, r5, r6, pc}
 80107ec:	2b08      	cmp	r3, #8
 80107ee:	d01d      	beq.n	801082c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80107f0:	2b20      	cmp	r3, #32
 80107f2:	d1fa      	bne.n	80107ea <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80107f4:	6823      	ldr	r3, [r4, #0]
 80107f6:	4620      	mov	r0, r4
 80107f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80107fa:	4798      	blx	r3
 80107fc:	e013      	b.n	8010826 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80107fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010802:	d0f7      	beq.n	80107f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010804:	d804      	bhi.n	8010810 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010806:	2b80      	cmp	r3, #128	; 0x80
 8010808:	d0f4      	beq.n	80107f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801080a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801080e:	e7f0      	b.n	80107f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010810:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010814:	d0ee      	beq.n	80107f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010816:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801081a:	e7e5      	b.n	80107e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801081c:	6823      	ldr	r3, [r4, #0]
 801081e:	7f01      	ldrb	r1, [r0, #28]
 8010820:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010822:	4620      	mov	r0, r4
 8010824:	4798      	blx	r3
 8010826:	6823      	ldr	r3, [r4, #0]
 8010828:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801082a:	e006      	b.n	801083a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801082c:	6823      	ldr	r3, [r4, #0]
 801082e:	7f01      	ldrb	r1, [r0, #28]
 8010830:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010832:	4620      	mov	r0, r4
 8010834:	4798      	blx	r3
 8010836:	6823      	ldr	r3, [r4, #0]
 8010838:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801083a:	4629      	mov	r1, r5
 801083c:	4620      	mov	r0, r4
 801083e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010842:	4718      	bx	r3
 8010844:	6823      	ldr	r3, [r4, #0]
 8010846:	4620      	mov	r0, r4
 8010848:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801084a:	4798      	blx	r3
 801084c:	e7f3      	b.n	8010836 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801084e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801084e:	4770      	bx	lr

08010850 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010850:	4770      	bx	lr

08010852 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010852:	4770      	bx	lr

08010854 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010854:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010858:	1ad2      	subs	r2, r2, r3
 801085a:	2a00      	cmp	r2, #0
 801085c:	b510      	push	{r4, lr}
 801085e:	bfdc      	itt	le
 8010860:	6884      	ldrle	r4, [r0, #8]
 8010862:	1912      	addle	r2, r2, r4
 8010864:	2a01      	cmp	r2, #1
 8010866:	dd16      	ble.n	8010896 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010868:	6842      	ldr	r2, [r0, #4]
 801086a:	2424      	movs	r4, #36	; 0x24
 801086c:	fb04 2303 	mla	r3, r4, r3, r2
 8010870:	f101 0220 	add.w	r2, r1, #32
 8010874:	f851 4b04 	ldr.w	r4, [r1], #4
 8010878:	f843 4b04 	str.w	r4, [r3], #4
 801087c:	4291      	cmp	r1, r2
 801087e:	d1f9      	bne.n	8010874 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010880:	780a      	ldrb	r2, [r1, #0]
 8010882:	701a      	strb	r2, [r3, #0]
 8010884:	68c3      	ldr	r3, [r0, #12]
 8010886:	6882      	ldr	r2, [r0, #8]
 8010888:	f3bf 8f5b 	dmb	ish
 801088c:	3301      	adds	r3, #1
 801088e:	429a      	cmp	r2, r3
 8010890:	bfd8      	it	le
 8010892:	1a9b      	suble	r3, r3, r2
 8010894:	60c3      	str	r3, [r0, #12]
 8010896:	bd10      	pop	{r4, pc}

08010898 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010898:	6903      	ldr	r3, [r0, #16]
 801089a:	6882      	ldr	r2, [r0, #8]
 801089c:	f3bf 8f5b 	dmb	ish
 80108a0:	3301      	adds	r3, #1
 80108a2:	429a      	cmp	r2, r3
 80108a4:	bfd8      	it	le
 80108a6:	1a9b      	suble	r3, r3, r2
 80108a8:	6103      	str	r3, [r0, #16]
 80108aa:	4770      	bx	lr

080108ac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80108ac:	b570      	push	{r4, r5, r6, lr}
 80108ae:	4604      	mov	r4, r0
 80108b0:	460e      	mov	r6, r1
 80108b2:	6860      	ldr	r0, [r4, #4]
 80108b4:	6803      	ldr	r3, [r0, #0]
 80108b6:	685b      	ldr	r3, [r3, #4]
 80108b8:	4798      	blx	r3
 80108ba:	2800      	cmp	r0, #0
 80108bc:	d1f9      	bne.n	80108b2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80108be:	4d0d      	ldr	r5, [pc, #52]	; (80108f4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80108c0:	6828      	ldr	r0, [r5, #0]
 80108c2:	6803      	ldr	r3, [r0, #0]
 80108c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80108c6:	4798      	blx	r3
 80108c8:	f7f0 f926 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80108cc:	6828      	ldr	r0, [r5, #0]
 80108ce:	2101      	movs	r1, #1
 80108d0:	f7ff ff12 	bl	80106f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80108d4:	6860      	ldr	r0, [r4, #4]
 80108d6:	6803      	ldr	r3, [r0, #0]
 80108d8:	4631      	mov	r1, r6
 80108da:	689b      	ldr	r3, [r3, #8]
 80108dc:	4798      	blx	r3
 80108de:	6823      	ldr	r3, [r4, #0]
 80108e0:	4620      	mov	r0, r4
 80108e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108e4:	4798      	blx	r3
 80108e6:	6828      	ldr	r0, [r5, #0]
 80108e8:	6803      	ldr	r3, [r0, #0]
 80108ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108ee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80108f0:	4718      	bx	r3
 80108f2:	bf00      	nop
 80108f4:	20012da4 	.word	0x20012da4

080108f8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80108f8:	b508      	push	{r3, lr}
 80108fa:	f7f0 f8ff 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80108fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010902:	f7f0 b903 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010906 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010906:	b510      	push	{r4, lr}
 8010908:	2114      	movs	r1, #20
 801090a:	4604      	mov	r4, r0
 801090c:	f018 f9bf 	bl	8028c8e <_ZdlPvj>
 8010910:	4620      	mov	r0, r4
 8010912:	bd10      	pop	{r4, pc}

08010914 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010914:	b510      	push	{r4, lr}
 8010916:	4604      	mov	r4, r0
 8010918:	6840      	ldr	r0, [r0, #4]
 801091a:	6803      	ldr	r3, [r0, #0]
 801091c:	681b      	ldr	r3, [r3, #0]
 801091e:	4798      	blx	r3
 8010920:	b948      	cbnz	r0, 8010936 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010922:	7a63      	ldrb	r3, [r4, #9]
 8010924:	b13b      	cbz	r3, 8010936 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010926:	7a23      	ldrb	r3, [r4, #8]
 8010928:	b92b      	cbnz	r3, 8010936 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801092a:	6823      	ldr	r3, [r4, #0]
 801092c:	4620      	mov	r0, r4
 801092e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010934:	4718      	bx	r3
 8010936:	bd10      	pop	{r4, pc}

08010938 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010938:	b570      	push	{r4, r5, r6, lr}
 801093a:	4604      	mov	r4, r0
 801093c:	6840      	ldr	r0, [r0, #4]
 801093e:	6803      	ldr	r3, [r0, #0]
 8010940:	681b      	ldr	r3, [r3, #0]
 8010942:	4798      	blx	r3
 8010944:	4605      	mov	r5, r0
 8010946:	b930      	cbnz	r0, 8010956 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010948:	7a23      	ldrb	r3, [r4, #8]
 801094a:	b123      	cbz	r3, 8010956 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801094c:	6860      	ldr	r0, [r4, #4]
 801094e:	6803      	ldr	r3, [r0, #0]
 8010950:	695b      	ldr	r3, [r3, #20]
 8010952:	4798      	blx	r3
 8010954:	7225      	strb	r5, [r4, #8]
 8010956:	6860      	ldr	r0, [r4, #4]
 8010958:	6803      	ldr	r3, [r0, #0]
 801095a:	681b      	ldr	r3, [r3, #0]
 801095c:	4798      	blx	r3
 801095e:	b928      	cbnz	r0, 801096c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010960:	6823      	ldr	r3, [r4, #0]
 8010962:	4620      	mov	r0, r4
 8010964:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010966:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801096a:	4718      	bx	r3
 801096c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010970:	f7f0 b8da 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010974 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010974:	b510      	push	{r4, lr}
 8010976:	4c04      	ldr	r4, [pc, #16]	; (8010988 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010978:	6082      	str	r2, [r0, #8]
 801097a:	2200      	movs	r2, #0
 801097c:	e9c0 4100 	strd	r4, r1, [r0]
 8010980:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010984:	bd10      	pop	{r4, pc}
 8010986:	bf00      	nop
 8010988:	0802dae0 	.word	0x0802dae0

0801098c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801098c:	6840      	ldr	r0, [r0, #4]
 801098e:	6803      	ldr	r3, [r0, #0]
 8010990:	681b      	ldr	r3, [r3, #0]
 8010992:	4718      	bx	r3

08010994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010994:	4b06      	ldr	r3, [pc, #24]	; (80109b0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010996:	60c1      	str	r1, [r0, #12]
 8010998:	094a      	lsrs	r2, r1, #5
 801099a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801099e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80109a2:	4313      	orrs	r3, r2
 80109a4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80109a8:	4319      	orrs	r1, r3
 80109aa:	8201      	strh	r1, [r0, #16]
 80109ac:	4770      	bx	lr
 80109ae:	bf00      	nop
 80109b0:	fffff800 	.word	0xfffff800

080109b4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80109b4:	f1a0 0008 	sub.w	r0, r0, #8
 80109b8:	e7ec      	b.n	8010994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80109ba:	bf00      	nop

080109bc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80109bc:	b508      	push	{r3, lr}
 80109be:	4b05      	ldr	r3, [pc, #20]	; (80109d4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80109c0:	6818      	ldr	r0, [r3, #0]
 80109c2:	6803      	ldr	r3, [r0, #0]
 80109c4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80109c8:	4798      	blx	r3
 80109ca:	1e43      	subs	r3, r0, #1
 80109cc:	4258      	negs	r0, r3
 80109ce:	4158      	adcs	r0, r3
 80109d0:	bd08      	pop	{r3, pc}
 80109d2:	bf00      	nop
 80109d4:	20012da4 	.word	0x20012da4

080109d8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80109d8:	4770      	bx	lr

080109da <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80109da:	3808      	subs	r0, #8
 80109dc:	4770      	bx	lr

080109de <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80109de:	b430      	push	{r4, r5}
 80109e0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80109e4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80109e8:	8a02      	ldrh	r2, [r0, #16]
 80109ea:	9202      	str	r2, [sp, #8]
 80109ec:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80109f0:	68c2      	ldr	r2, [r0, #12]
 80109f2:	4629      	mov	r1, r5
 80109f4:	4620      	mov	r0, r4
 80109f6:	bc30      	pop	{r4, r5}
 80109f8:	f7f0 bb58 	b.w	80010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080109fc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80109fc:	f7f0 bb54 	b.w	80010a8 <_ZN8touchgfx5paint8tearDownEv>

08010a00 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010a00:	b510      	push	{r4, lr}
 8010a02:	2114      	movs	r1, #20
 8010a04:	4604      	mov	r4, r0
 8010a06:	f018 f942 	bl	8028c8e <_ZdlPvj>
 8010a0a:	4620      	mov	r0, r4
 8010a0c:	bd10      	pop	{r4, pc}

08010a0e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010a0e:	f1a0 0008 	sub.w	r0, r0, #8
 8010a12:	e7f5      	b.n	8010a00 <_ZN8touchgfx13PainterRGB565D0Ev>

08010a14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010a14:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010a16:	6803      	ldr	r3, [r0, #0]
 8010a18:	460d      	mov	r5, r1
 8010a1a:	4604      	mov	r4, r0
 8010a1c:	4601      	mov	r1, r0
 8010a1e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010a20:	a802      	add	r0, sp, #8
 8010a22:	4798      	blx	r3
 8010a24:	6828      	ldr	r0, [r5, #0]
 8010a26:	6869      	ldr	r1, [r5, #4]
 8010a28:	466b      	mov	r3, sp
 8010a2a:	c303      	stmia	r3!, {r0, r1}
 8010a2c:	4668      	mov	r0, sp
 8010a2e:	4619      	mov	r1, r3
 8010a30:	f7fe ffa4 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8010a34:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010a36:	b188      	cbz	r0, 8010a5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010a38:	6803      	ldr	r3, [r0, #0]
 8010a3a:	1d21      	adds	r1, r4, #4
 8010a3c:	68db      	ldr	r3, [r3, #12]
 8010a3e:	4798      	blx	r3
 8010a40:	b160      	cbz	r0, 8010a5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010a42:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010a46:	2b00      	cmp	r3, #0
 8010a48:	dd08      	ble.n	8010a5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010a4a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010a4e:	2d00      	cmp	r5, #0
 8010a50:	dd04      	ble.n	8010a5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010a52:	4a2b      	ldr	r2, [pc, #172]	; (8010b00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010a54:	7812      	ldrb	r2, [r2, #0]
 8010a56:	b11a      	cbz	r2, 8010a60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010a58:	2a01      	cmp	r2, #1
 8010a5a:	d029      	beq.n	8010ab0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010a5c:	b004      	add	sp, #16
 8010a5e:	bd70      	pop	{r4, r5, r6, pc}
 8010a60:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a64:	441d      	add	r5, r3
 8010a66:	b2ad      	uxth	r5, r5
 8010a68:	b22e      	sxth	r6, r5
 8010a6a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010a6e:	42b3      	cmp	r3, r6
 8010a70:	daf4      	bge.n	8010a5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010a72:	6823      	ldr	r3, [r4, #0]
 8010a74:	4669      	mov	r1, sp
 8010a76:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010a78:	4620      	mov	r0, r4
 8010a7a:	4798      	blx	r3
 8010a7c:	b940      	cbnz	r0, 8010a90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010a7e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010a82:	2b01      	cmp	r3, #1
 8010a84:	d004      	beq.n	8010a90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010a86:	3301      	adds	r3, #1
 8010a88:	105b      	asrs	r3, r3, #1
 8010a8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010a8e:	e7f0      	b.n	8010a72 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010a90:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010a94:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a98:	4413      	add	r3, r2
 8010a9a:	b29b      	uxth	r3, r3
 8010a9c:	441a      	add	r2, r3
 8010a9e:	b212      	sxth	r2, r2
 8010aa0:	4296      	cmp	r6, r2
 8010aa2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010aa6:	dae0      	bge.n	8010a6a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010aa8:	1aeb      	subs	r3, r5, r3
 8010aaa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010aae:	e7dc      	b.n	8010a6a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010ab0:	f8bd 5000 	ldrh.w	r5, [sp]
 8010ab4:	441d      	add	r5, r3
 8010ab6:	b2ad      	uxth	r5, r5
 8010ab8:	b22e      	sxth	r6, r5
 8010aba:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010abe:	42b3      	cmp	r3, r6
 8010ac0:	dacc      	bge.n	8010a5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010ac2:	6823      	ldr	r3, [r4, #0]
 8010ac4:	4669      	mov	r1, sp
 8010ac6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010ac8:	4620      	mov	r0, r4
 8010aca:	4798      	blx	r3
 8010acc:	b940      	cbnz	r0, 8010ae0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010ace:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010ad2:	2b01      	cmp	r3, #1
 8010ad4:	d004      	beq.n	8010ae0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010ad6:	3301      	adds	r3, #1
 8010ad8:	105b      	asrs	r3, r3, #1
 8010ada:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010ade:	e7f0      	b.n	8010ac2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010ae0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010ae4:	f8bd 3000 	ldrh.w	r3, [sp]
 8010ae8:	4413      	add	r3, r2
 8010aea:	b29b      	uxth	r3, r3
 8010aec:	441a      	add	r2, r3
 8010aee:	b212      	sxth	r2, r2
 8010af0:	4296      	cmp	r6, r2
 8010af2:	f8ad 3000 	strh.w	r3, [sp]
 8010af6:	dae0      	bge.n	8010aba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010af8:	1aeb      	subs	r3, r5, r3
 8010afa:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010afe:	e7dc      	b.n	8010aba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010b00:	20012d9c 	.word	0x20012d9c

08010b04 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010b04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010b06:	6803      	ldr	r3, [r0, #0]
 8010b08:	4604      	mov	r4, r0
 8010b0a:	4601      	mov	r1, r0
 8010b0c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010b0e:	4668      	mov	r0, sp
 8010b10:	4798      	blx	r3
 8010b12:	2100      	movs	r1, #0
 8010b14:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010b18:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010b1c:	9102      	str	r1, [sp, #8]
 8010b1e:	4668      	mov	r0, sp
 8010b20:	a902      	add	r1, sp, #8
 8010b22:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010b26:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010b2a:	f7fe ff27 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8010b2e:	6823      	ldr	r3, [r4, #0]
 8010b30:	4669      	mov	r1, sp
 8010b32:	691b      	ldr	r3, [r3, #16]
 8010b34:	4620      	mov	r0, r4
 8010b36:	4798      	blx	r3
 8010b38:	b004      	add	sp, #16
 8010b3a:	bd10      	pop	{r4, pc}

08010b3c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010b3c:	2101      	movs	r1, #1
 8010b3e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010b42:	490b      	ldr	r1, [pc, #44]	; (8010b70 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010b44:	6001      	str	r1, [r0, #0]
 8010b46:	2200      	movs	r2, #0
 8010b48:	21ff      	movs	r1, #255	; 0xff
 8010b4a:	8082      	strh	r2, [r0, #4]
 8010b4c:	80c2      	strh	r2, [r0, #6]
 8010b4e:	8102      	strh	r2, [r0, #8]
 8010b50:	8142      	strh	r2, [r0, #10]
 8010b52:	8182      	strh	r2, [r0, #12]
 8010b54:	81c2      	strh	r2, [r0, #14]
 8010b56:	8202      	strh	r2, [r0, #16]
 8010b58:	8242      	strh	r2, [r0, #18]
 8010b5a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010b5e:	61c2      	str	r2, [r0, #28]
 8010b60:	8402      	strh	r2, [r0, #32]
 8010b62:	8442      	strh	r2, [r0, #34]	; 0x22
 8010b64:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010b68:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010b6c:	6282      	str	r2, [r0, #40]	; 0x28
 8010b6e:	4770      	bx	lr
 8010b70:	0802db3c 	.word	0x0802db3c

08010b74 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010b74:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010b78:	4602      	mov	r2, r0
 8010b7a:	cb03      	ldmia	r3!, {r0, r1}
 8010b7c:	6010      	str	r0, [r2, #0]
 8010b7e:	6051      	str	r1, [r2, #4]
 8010b80:	4610      	mov	r0, r2
 8010b82:	4770      	bx	lr

08010b84 <_ZN8touchgfx4LineD1Ev>:
 8010b84:	4770      	bx	lr

08010b86 <_ZN8touchgfx4LineD0Ev>:
 8010b86:	b510      	push	{r4, lr}
 8010b88:	2170      	movs	r1, #112	; 0x70
 8010b8a:	4604      	mov	r4, r0
 8010b8c:	f018 f87f 	bl	8028c8e <_ZdlPvj>
 8010b90:	4620      	mov	r0, r4
 8010b92:	bd10      	pop	{r4, pc}

08010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010b94:	b507      	push	{r0, r1, r2, lr}
 8010b96:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010b9a:	ab01      	add	r3, sp, #4
 8010b9c:	6809      	ldr	r1, [r1, #0]
 8010b9e:	6800      	ldr	r0, [r0, #0]
 8010ba0:	f005 fab4 	bl	801610c <_ZN8touchgfx6muldivElllRl>
 8010ba4:	b003      	add	sp, #12
 8010ba6:	f85d fb04 	ldr.w	pc, [sp], #4

08010baa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010baa:	6800      	ldr	r0, [r0, #0]
 8010bac:	2800      	cmp	r0, #0
 8010bae:	bfb9      	ittee	lt
 8010bb0:	2320      	movlt	r3, #32
 8010bb2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010bb6:	301f      	addge	r0, #31
 8010bb8:	1140      	asrge	r0, r0, #5
 8010bba:	4770      	bx	lr

08010bbc <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010bc4:	b089      	sub	sp, #36	; 0x24
 8010bc6:	4604      	mov	r4, r0
 8010bc8:	b353      	cbz	r3, 8010c20 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010bca:	6803      	ldr	r3, [r0, #0]
 8010bcc:	4601      	mov	r1, r0
 8010bce:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010bd0:	a802      	add	r0, sp, #8
 8010bd2:	4798      	blx	r3
 8010bd4:	2220      	movs	r2, #32
 8010bd6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010bda:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010bdc:	fb9a f0f2 	sdiv	r0, sl, r2
 8010be0:	fb91 f5f2 	sdiv	r5, r1, r2
 8010be4:	1b40      	subs	r0, r0, r5
 8010be6:	2800      	cmp	r0, #0
 8010be8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010bea:	fb93 f6f2 	sdiv	r6, r3, r2
 8010bee:	bfb8      	it	lt
 8010bf0:	4240      	neglt	r0, r0
 8010bf2:	0076      	lsls	r6, r6, #1
 8010bf4:	4286      	cmp	r6, r0
 8010bf6:	f8d4 b000 	ldr.w	fp, [r4]
 8010bfa:	dc0c      	bgt.n	8010c16 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010bfc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010bfe:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010c02:	fb95 f0f2 	sdiv	r0, r5, r2
 8010c06:	fb98 f7f2 	sdiv	r7, r8, r2
 8010c0a:	1bc0      	subs	r0, r0, r7
 8010c0c:	2800      	cmp	r0, #0
 8010c0e:	bfb8      	it	lt
 8010c10:	4240      	neglt	r0, r0
 8010c12:	4286      	cmp	r6, r0
 8010c14:	dd07      	ble.n	8010c26 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010c16:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010c1a:	a902      	add	r1, sp, #8
 8010c1c:	4620      	mov	r0, r4
 8010c1e:	4798      	blx	r3
 8010c20:	b009      	add	sp, #36	; 0x24
 8010c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c26:	3301      	adds	r3, #1
 8010c28:	2002      	movs	r0, #2
 8010c2a:	f10d 0920 	add.w	r9, sp, #32
 8010c2e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c32:	4103      	asrs	r3, r0
 8010c34:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010c38:	eb01 060a 	add.w	r6, r1, sl
 8010c3c:	eb08 0705 	add.w	r7, r8, r5
 8010c40:	fb96 f6f0 	sdiv	r6, r6, r0
 8010c44:	fb97 f7f0 	sdiv	r7, r7, r0
 8010c48:	4648      	mov	r0, r9
 8010c4a:	9101      	str	r1, [sp, #4]
 8010c4c:	b236      	sxth	r6, r6
 8010c4e:	b23f      	sxth	r7, r7
 8010c50:	fb96 f6f2 	sdiv	r6, r6, r2
 8010c54:	fb97 f7f2 	sdiv	r7, r7, r2
 8010c58:	f7ff ffa7 	bl	8010baa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010c5c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010c60:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010c64:	9901      	ldr	r1, [sp, #4]
 8010c66:	4293      	cmp	r3, r2
 8010c68:	fa1f fe87 	uxth.w	lr, r7
 8010c6c:	fa1f fc86 	uxth.w	ip, r6
 8010c70:	eba1 0a0a 	sub.w	sl, r1, sl
 8010c74:	b280      	uxth	r0, r0
 8010c76:	da54      	bge.n	8010d22 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010c78:	ebac 0100 	sub.w	r1, ip, r0
 8010c7c:	b289      	uxth	r1, r1
 8010c7e:	4460      	add	r0, ip
 8010c80:	f1ba 0f00 	cmp.w	sl, #0
 8010c84:	b20e      	sxth	r6, r1
 8010c86:	b280      	uxth	r0, r0
 8010c88:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010c8c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010c90:	da29      	bge.n	8010ce6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010c92:	eba8 0505 	sub.w	r5, r8, r5
 8010c96:	2d00      	cmp	r5, #0
 8010c98:	da2a      	bge.n	8010cf0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010c9a:	fa1f f88a 	uxth.w	r8, sl
 8010c9e:	eba0 0008 	sub.w	r0, r0, r8
 8010ca2:	fa1f f58c 	uxth.w	r5, ip
 8010ca6:	4443      	add	r3, r8
 8010ca8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010cac:	1a59      	subs	r1, r3, r1
 8010cae:	ebae 0005 	sub.w	r0, lr, r5
 8010cb2:	f8ad a010 	strh.w	sl, [sp, #16]
 8010cb6:	f8ad c012 	strh.w	ip, [sp, #18]
 8010cba:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010cbe:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010cc2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010cc6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010cca:	442a      	add	r2, r5
 8010ccc:	eba2 0e0e 	sub.w	lr, r2, lr
 8010cd0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010cd4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010cd8:	a904      	add	r1, sp, #16
 8010cda:	4620      	mov	r0, r4
 8010cdc:	4798      	blx	r3
 8010cde:	6823      	ldr	r3, [r4, #0]
 8010ce0:	4649      	mov	r1, r9
 8010ce2:	691b      	ldr	r3, [r3, #16]
 8010ce4:	e79a      	b.n	8010c1c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010ce6:	d003      	beq.n	8010cf0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010ce8:	eba8 0505 	sub.w	r5, r8, r5
 8010cec:	2d00      	cmp	r5, #0
 8010cee:	dcd4      	bgt.n	8010c9a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010cf0:	fa1f f88a 	uxth.w	r8, sl
 8010cf4:	4443      	add	r3, r8
 8010cf6:	fa1f f58c 	uxth.w	r5, ip
 8010cfa:	1a59      	subs	r1, r3, r1
 8010cfc:	eba0 0008 	sub.w	r0, r0, r8
 8010d00:	ebae 0305 	sub.w	r3, lr, r5
 8010d04:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010d08:	f8ad c012 	strh.w	ip, [sp, #18]
 8010d0c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010d10:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010d14:	f8ad a018 	strh.w	sl, [sp, #24]
 8010d18:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010d1c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010d20:	e7d3      	b.n	8010cca <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010d22:	ebae 0100 	sub.w	r1, lr, r0
 8010d26:	b289      	uxth	r1, r1
 8010d28:	4470      	add	r0, lr
 8010d2a:	f1ba 0f00 	cmp.w	sl, #0
 8010d2e:	b20f      	sxth	r7, r1
 8010d30:	b280      	uxth	r0, r0
 8010d32:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010d36:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010d3a:	da20      	bge.n	8010d7e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010d3c:	eba8 0505 	sub.w	r5, r8, r5
 8010d40:	2d00      	cmp	r5, #0
 8010d42:	da21      	bge.n	8010d88 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010d44:	fa1f f88e 	uxth.w	r8, lr
 8010d48:	fa1f f58a 	uxth.w	r5, sl
 8010d4c:	4443      	add	r3, r8
 8010d4e:	442a      	add	r2, r5
 8010d50:	f8ad e010 	strh.w	lr, [sp, #16]
 8010d54:	1b40      	subs	r0, r0, r5
 8010d56:	ebac 0e08 	sub.w	lr, ip, r8
 8010d5a:	1a51      	subs	r1, r2, r1
 8010d5c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010d60:	f8ad a012 	strh.w	sl, [sp, #18]
 8010d64:	f8ad e014 	strh.w	lr, [sp, #20]
 8010d68:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010d6c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010d70:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010d74:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010d78:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010d7c:	e7aa      	b.n	8010cd4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010d7e:	d003      	beq.n	8010d88 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010d80:	eba8 0505 	sub.w	r5, r8, r5
 8010d84:	2d00      	cmp	r5, #0
 8010d86:	dcdd      	bgt.n	8010d44 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010d88:	fa1f f58e 	uxth.w	r5, lr
 8010d8c:	fa1f f88a 	uxth.w	r8, sl
 8010d90:	4442      	add	r2, r8
 8010d92:	442b      	add	r3, r5
 8010d94:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010d98:	1a51      	subs	r1, r2, r1
 8010d9a:	ebac 0705 	sub.w	r7, ip, r5
 8010d9e:	eba0 0008 	sub.w	r0, r0, r8
 8010da2:	eba3 0c0c 	sub.w	ip, r3, ip
 8010da6:	f8ad e010 	strh.w	lr, [sp, #16]
 8010daa:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010dae:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010db2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010db6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010dba:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010dbe:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010dc2:	e787      	b.n	8010cd4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010dc4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010dc4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010dc8:	fb90 f2f3 	sdiv	r2, r0, r3
 8010dcc:	fb02 0013 	mls	r0, r2, r3, r0
 8010dd0:	2800      	cmp	r0, #0
 8010dd2:	bfb8      	it	lt
 8010dd4:	18c0      	addlt	r0, r0, r3
 8010dd6:	285a      	cmp	r0, #90	; 0x5a
 8010dd8:	4b09      	ldr	r3, [pc, #36]	; (8010e00 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010dda:	dc02      	bgt.n	8010de2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010ddc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010de0:	4770      	bx	lr
 8010de2:	28b4      	cmp	r0, #180	; 0xb4
 8010de4:	dc02      	bgt.n	8010dec <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010de6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010dea:	e7f7      	b.n	8010ddc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010dec:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010df0:	bfd4      	ite	le
 8010df2:	38b4      	suble	r0, #180	; 0xb4
 8010df4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010df8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010dfc:	4240      	negs	r0, r0
 8010dfe:	4770      	bx	lr
 8010e00:	0802dc08 	.word	0x0802dc08

08010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010e04:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8010e08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010e0a:	fb90 f2f3 	sdiv	r2, r0, r3
 8010e0e:	fb02 0013 	mls	r0, r2, r3, r0
 8010e12:	2800      	cmp	r0, #0
 8010e14:	bfb8      	it	lt
 8010e16:	18c0      	addlt	r0, r0, r3
 8010e18:	1144      	asrs	r4, r0, #5
 8010e1a:	f000 061f 	and.w	r6, r0, #31
 8010e1e:	4620      	mov	r0, r4
 8010e20:	f7ff ffd0 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010e24:	4605      	mov	r5, r0
 8010e26:	b90e      	cbnz	r6, 8010e2c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8010e28:	b002      	add	sp, #8
 8010e2a:	bd70      	pop	{r4, r5, r6, pc}
 8010e2c:	1c60      	adds	r0, r4, #1
 8010e2e:	f7ff ffc9 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010e32:	ab01      	add	r3, sp, #4
 8010e34:	2220      	movs	r2, #32
 8010e36:	4631      	mov	r1, r6
 8010e38:	1b40      	subs	r0, r0, r5
 8010e3a:	f005 f967 	bl	801610c <_ZN8touchgfx6muldivElllRl>
 8010e3e:	4428      	add	r0, r5
 8010e40:	e7f2      	b.n	8010e28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08010e42 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010e42:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010e46:	bf2c      	ite	cs
 8010e48:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010e4c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010e50:	2300      	movs	r3, #0
 8010e52:	1899      	adds	r1, r3, r2
 8010e54:	4288      	cmp	r0, r1
 8010e56:	bf24      	itt	cs
 8010e58:	1853      	addcs	r3, r2, r1
 8010e5a:	1a40      	subcs	r0, r0, r1
 8010e5c:	0892      	lsrs	r2, r2, #2
 8010e5e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010e62:	d1f6      	bne.n	8010e52 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010e64:	4618      	mov	r0, r3
 8010e66:	4770      	bx	lr

08010e68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010e68:	b510      	push	{r4, lr}
 8010e6a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010e6e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010e72:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010e76:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010e7a:	13a4      	asrs	r4, r4, #14
 8010e7c:	139b      	asrs	r3, r3, #14
 8010e7e:	429c      	cmp	r4, r3
 8010e80:	bfb8      	it	lt
 8010e82:	461c      	movlt	r4, r3
 8010e84:	2c01      	cmp	r4, #1
 8010e86:	dd07      	ble.n	8010e98 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010e88:	fb91 f1f4 	sdiv	r1, r1, r4
 8010e8c:	fb90 f0f4 	sdiv	r0, r0, r4
 8010e90:	f7ff ffea 	bl	8010e68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010e94:	4360      	muls	r0, r4
 8010e96:	bd10      	pop	{r4, pc}
 8010e98:	4340      	muls	r0, r0
 8010e9a:	fb01 0001 	mla	r0, r1, r1, r0
 8010e9e:	f7ff ffd0 	bl	8010e42 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010ea2:	e7f8      	b.n	8010e96 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010ea4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010ea4:	2800      	cmp	r0, #0
 8010ea6:	b508      	push	{r3, lr}
 8010ea8:	da05      	bge.n	8010eb6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010eaa:	4240      	negs	r0, r0
 8010eac:	f7ff fffa 	bl	8010ea4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010eb0:	4240      	negs	r0, r0
 8010eb2:	b240      	sxtb	r0, r0
 8010eb4:	bd08      	pop	{r3, pc}
 8010eb6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010eba:	dc11      	bgt.n	8010ee0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010ebc:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010ec0:	dd09      	ble.n	8010ed6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010ec2:	4340      	muls	r0, r0
 8010ec4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010ec8:	f7ff ffbb 	bl	8010e42 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010ecc:	f7ff ffea 	bl	8010ea4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010ed0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010ed4:	e7ed      	b.n	8010eb2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010ed6:	3003      	adds	r0, #3
 8010ed8:	10c0      	asrs	r0, r0, #3
 8010eda:	4b02      	ldr	r3, [pc, #8]	; (8010ee4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010edc:	5618      	ldrsb	r0, [r3, r0]
 8010ede:	e7e9      	b.n	8010eb4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010ee0:	2000      	movs	r0, #0
 8010ee2:	e7e7      	b.n	8010eb4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010ee4:	0802dbac 	.word	0x0802dbac

08010ee8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010ee8:	4281      	cmp	r1, r0
 8010eea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010eec:	460c      	mov	r4, r1
 8010eee:	4615      	mov	r5, r2
 8010ef0:	dd07      	ble.n	8010f02 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010ef2:	4601      	mov	r1, r0
 8010ef4:	4620      	mov	r0, r4
 8010ef6:	f7ff fff7 	bl	8010ee8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010efa:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010efe:	b003      	add	sp, #12
 8010f00:	bd30      	pop	{r4, r5, pc}
 8010f02:	f7ff ffb1 	bl	8010e68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010f06:	6028      	str	r0, [r5, #0]
 8010f08:	2800      	cmp	r0, #0
 8010f0a:	d0f8      	beq.n	8010efe <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8010f0c:	4602      	mov	r2, r0
 8010f0e:	ab01      	add	r3, sp, #4
 8010f10:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010f14:	4620      	mov	r0, r4
 8010f16:	f005 f8f9 	bl	801610c <_ZN8touchgfx6muldivElllRl>
 8010f1a:	f7ff ffc3 	bl	8010ea4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010f1e:	e7ee      	b.n	8010efe <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010f20 <_ZN8touchgfx4LineC1Ev>:
 8010f20:	b510      	push	{r4, lr}
 8010f22:	4604      	mov	r4, r0
 8010f24:	f7ff fe0a 	bl	8010b3c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010f28:	4b0c      	ldr	r3, [pc, #48]	; (8010f5c <_ZN8touchgfx4LineC1Ev+0x3c>)
 8010f2a:	6023      	str	r3, [r4, #0]
 8010f2c:	2220      	movs	r2, #32
 8010f2e:	2300      	movs	r3, #0
 8010f30:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010f32:	2212      	movs	r2, #18
 8010f34:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010f38:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8010f3c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010f40:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8010f44:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8010f48:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8010f4c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010f50:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010f54:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010f56:	60a3      	str	r3, [r4, #8]
 8010f58:	4620      	mov	r0, r4
 8010f5a:	bd10      	pop	{r4, pc}
 8010f5c:	0802dcc8 	.word	0x0802dcc8

08010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8010f60:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010f64:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8010f66:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010f68:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8010f6a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8010f6c:	1aff      	subs	r7, r7, r3
 8010f6e:	4604      	mov	r4, r0
 8010f70:	eba5 0502 	sub.w	r5, r5, r2
 8010f74:	d142      	bne.n	8010ffc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8010f76:	b955      	cbnz	r5, 8010f8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8010f78:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8010f7c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8010f80:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8010f84:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8010f88:	b002      	add	sp, #8
 8010f8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010f8e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8010f92:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8010f96:	4629      	mov	r1, r5
 8010f98:	4642      	mov	r2, r8
 8010f9a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010f9c:	f005 f8d5 	bl	801614a <_ZN8touchgfx6muldivElll>
 8010fa0:	2502      	movs	r5, #2
 8010fa2:	4642      	mov	r2, r8
 8010fa4:	fb90 f6f5 	sdiv	r6, r0, r5
 8010fa8:	4639      	mov	r1, r7
 8010faa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010fac:	f005 f8cd 	bl	801614a <_ZN8touchgfx6muldivElll>
 8010fb0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010fb4:	fb90 f5f5 	sdiv	r5, r0, r5
 8010fb8:	f1b9 0f00 	cmp.w	r9, #0
 8010fbc:	d067      	beq.n	801108e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8010fbe:	f1b9 0f02 	cmp.w	r9, #2
 8010fc2:	d878      	bhi.n	80110b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8010fc4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010fc6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010fc8:	1b93      	subs	r3, r2, r6
 8010fca:	1b5b      	subs	r3, r3, r5
 8010fcc:	6463      	str	r3, [r4, #68]	; 0x44
 8010fce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fd0:	18e9      	adds	r1, r5, r3
 8010fd2:	1b89      	subs	r1, r1, r6
 8010fd4:	6561      	str	r1, [r4, #84]	; 0x54
 8010fd6:	1b81      	subs	r1, r0, r6
 8010fd8:	4429      	add	r1, r5
 8010fda:	64a1      	str	r1, [r4, #72]	; 0x48
 8010fdc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010fde:	4430      	add	r0, r6
 8010fe0:	186f      	adds	r7, r5, r1
 8010fe2:	4432      	add	r2, r6
 8010fe4:	1b49      	subs	r1, r1, r5
 8010fe6:	4437      	add	r7, r6
 8010fe8:	4428      	add	r0, r5
 8010fea:	4431      	add	r1, r6
 8010fec:	1b52      	subs	r2, r2, r5
 8010fee:	1b5b      	subs	r3, r3, r5
 8010ff0:	65a7      	str	r7, [r4, #88]	; 0x58
 8010ff2:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010ff4:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010ff6:	6522      	str	r2, [r4, #80]	; 0x50
 8010ff8:	1b9b      	subs	r3, r3, r6
 8010ffa:	e05b      	b.n	80110b4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8010ffc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011000:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011004:	2d00      	cmp	r5, #0
 8011006:	d0c6      	beq.n	8010f96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011008:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801100c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011010:	fb93 f2f8 	sdiv	r2, r3, r8
 8011014:	fb08 3312 	mls	r3, r8, r2, r3
 8011018:	b353      	cbz	r3, 8011070 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801101a:	fb98 f2f3 	sdiv	r2, r8, r3
 801101e:	fb03 8812 	mls	r8, r3, r2, r8
 8011022:	f1b8 0f00 	cmp.w	r8, #0
 8011026:	d1f3      	bne.n	8011010 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011028:	2b01      	cmp	r3, #1
 801102a:	bf1c      	itt	ne
 801102c:	fb95 f5f3 	sdivne	r5, r5, r3
 8011030:	fb97 f7f3 	sdivne	r7, r7, r3
 8011034:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011038:	f24b 5104 	movw	r1, #46340	; 0xb504
 801103c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011040:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011044:	428b      	cmp	r3, r1
 8011046:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801104a:	4608      	mov	r0, r1
 801104c:	dd01      	ble.n	8011052 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801104e:	428a      	cmp	r2, r1
 8011050:	dc10      	bgt.n	8011074 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011052:	fb90 f3f3 	sdiv	r3, r0, r3
 8011056:	fb90 f2f2 	sdiv	r2, r0, r2
 801105a:	4293      	cmp	r3, r2
 801105c:	bfa8      	it	ge
 801105e:	4613      	movge	r3, r2
 8011060:	435f      	muls	r7, r3
 8011062:	435d      	muls	r5, r3
 8011064:	4629      	mov	r1, r5
 8011066:	4638      	mov	r0, r7
 8011068:	f7ff fefe 	bl	8010e68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801106c:	4680      	mov	r8, r0
 801106e:	e792      	b.n	8010f96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011070:	4643      	mov	r3, r8
 8011072:	e7d9      	b.n	8011028 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011074:	fb93 f3f1 	sdiv	r3, r3, r1
 8011078:	fb92 f2f1 	sdiv	r2, r2, r1
 801107c:	4293      	cmp	r3, r2
 801107e:	bfcc      	ite	gt
 8011080:	3301      	addgt	r3, #1
 8011082:	1c53      	addle	r3, r2, #1
 8011084:	fb97 f7f3 	sdiv	r7, r7, r3
 8011088:	fb95 f5f3 	sdiv	r5, r5, r3
 801108c:	e7ea      	b.n	8011064 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801108e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011090:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011092:	1b93      	subs	r3, r2, r6
 8011094:	6463      	str	r3, [r4, #68]	; 0x44
 8011096:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011098:	18e9      	adds	r1, r5, r3
 801109a:	6561      	str	r1, [r4, #84]	; 0x54
 801109c:	1b81      	subs	r1, r0, r6
 801109e:	64a1      	str	r1, [r4, #72]	; 0x48
 80110a0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80110a2:	4430      	add	r0, r6
 80110a4:	186f      	adds	r7, r5, r1
 80110a6:	4432      	add	r2, r6
 80110a8:	1b49      	subs	r1, r1, r5
 80110aa:	65a7      	str	r7, [r4, #88]	; 0x58
 80110ac:	64e0      	str	r0, [r4, #76]	; 0x4c
 80110ae:	65e1      	str	r1, [r4, #92]	; 0x5c
 80110b0:	6522      	str	r2, [r4, #80]	; 0x50
 80110b2:	1b5b      	subs	r3, r3, r5
 80110b4:	6623      	str	r3, [r4, #96]	; 0x60
 80110b6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80110b8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80110ba:	9200      	str	r2, [sp, #0]
 80110bc:	9301      	str	r3, [sp, #4]
 80110be:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80110c2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80110c6:	680f      	ldr	r7, [r1, #0]
 80110c8:	9800      	ldr	r0, [sp, #0]
 80110ca:	42ba      	cmp	r2, r7
 80110cc:	bfa8      	it	ge
 80110ce:	463a      	movge	r2, r7
 80110d0:	4287      	cmp	r7, r0
 80110d2:	bfc8      	it	gt
 80110d4:	9700      	strgt	r7, [sp, #0]
 80110d6:	690f      	ldr	r7, [r1, #16]
 80110d8:	9801      	ldr	r0, [sp, #4]
 80110da:	42bb      	cmp	r3, r7
 80110dc:	bfa8      	it	ge
 80110de:	463b      	movge	r3, r7
 80110e0:	3104      	adds	r1, #4
 80110e2:	4287      	cmp	r7, r0
 80110e4:	bfc8      	it	gt
 80110e6:	9701      	strgt	r7, [sp, #4]
 80110e8:	458c      	cmp	ip, r1
 80110ea:	d1ec      	bne.n	80110c6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80110ec:	4668      	mov	r0, sp
 80110ee:	2720      	movs	r7, #32
 80110f0:	fb92 f8f7 	sdiv	r8, r2, r7
 80110f4:	fb93 f7f7 	sdiv	r7, r3, r7
 80110f8:	f7ff fd57 	bl	8010baa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80110fc:	4682      	mov	sl, r0
 80110fe:	a801      	add	r0, sp, #4
 8011100:	f7ff fd53 	bl	8010baa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011104:	ebaa 0208 	sub.w	r2, sl, r8
 8011108:	1bc0      	subs	r0, r0, r7
 801110a:	f1b9 0f01 	cmp.w	r9, #1
 801110e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011112:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011116:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801111a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801111e:	f47f af33 	bne.w	8010f88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011122:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011124:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011126:	1b83      	subs	r3, r0, r6
 8011128:	6463      	str	r3, [r4, #68]	; 0x44
 801112a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801112c:	18ea      	adds	r2, r5, r3
 801112e:	6562      	str	r2, [r4, #84]	; 0x54
 8011130:	1b8a      	subs	r2, r1, r6
 8011132:	64a2      	str	r2, [r4, #72]	; 0x48
 8011134:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011136:	4431      	add	r1, r6
 8011138:	18af      	adds	r7, r5, r2
 801113a:	4406      	add	r6, r0
 801113c:	1b52      	subs	r2, r2, r5
 801113e:	1b5d      	subs	r5, r3, r5
 8011140:	65a7      	str	r7, [r4, #88]	; 0x58
 8011142:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011144:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011146:	6526      	str	r6, [r4, #80]	; 0x50
 8011148:	6625      	str	r5, [r4, #96]	; 0x60
 801114a:	e71d      	b.n	8010f88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801114c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801114c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801114e:	428b      	cmp	r3, r1
 8011150:	d102      	bne.n	8011158 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011152:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011154:	4293      	cmp	r3, r2
 8011156:	d003      	beq.n	8011160 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011158:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801115c:	f7ff bf00 	b.w	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011160:	4770      	bx	lr

08011162 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011162:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011164:	428b      	cmp	r3, r1
 8011166:	d102      	bne.n	801116e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011168:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801116a:	4293      	cmp	r3, r2
 801116c:	d003      	beq.n	8011176 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801116e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011172:	f7ff bef5 	b.w	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011176:	4770      	bx	lr

08011178 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011178:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801117c:	f7ff bef0 	b.w	8010f60 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011180 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011184:	b0a0      	sub	sp, #128	; 0x80
 8011186:	4604      	mov	r4, r0
 8011188:	460a      	mov	r2, r1
 801118a:	4601      	mov	r1, r0
 801118c:	a804      	add	r0, sp, #16
 801118e:	f014 fe3b 	bl	8025e08 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011192:	2300      	movs	r3, #0
 8011194:	9301      	str	r3, [sp, #4]
 8011196:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801119a:	2b01      	cmp	r3, #1
 801119c:	d17c      	bne.n	8011298 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801119e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80111a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80111a2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80111a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80111a6:	1ac0      	subs	r0, r0, r3
 80111a8:	eba1 0102 	sub.w	r1, r1, r2
 80111ac:	d437      	bmi.n	801121e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80111ae:	2900      	cmp	r1, #0
 80111b0:	aa01      	add	r2, sp, #4
 80111b2:	db2e      	blt.n	8011212 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80111b4:	f7ff fe98 	bl	8010ee8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80111b8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80111bc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80111be:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80111c0:	a804      	add	r0, sp, #16
 80111c2:	f014 ffa1 	bl	8026108 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80111c6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80111c8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80111ca:	a804      	add	r0, sp, #16
 80111cc:	f014 ffe9 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111d0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80111d2:	2db3      	cmp	r5, #179	; 0xb3
 80111d4:	dc33      	bgt.n	801123e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80111d6:	eba6 0805 	sub.w	r8, r6, r5
 80111da:	4640      	mov	r0, r8
 80111dc:	f7ff fdf2 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 80111e0:	a902      	add	r1, sp, #8
 80111e2:	9002      	str	r0, [sp, #8]
 80111e4:	a801      	add	r0, sp, #4
 80111e6:	f7ff fcd5 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80111ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80111ec:	1847      	adds	r7, r0, r1
 80111ee:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80111f2:	f7ff fde7 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 80111f6:	a903      	add	r1, sp, #12
 80111f8:	9003      	str	r0, [sp, #12]
 80111fa:	a801      	add	r0, sp, #4
 80111fc:	f7ff fcca 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011200:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011202:	4639      	mov	r1, r7
 8011204:	1a12      	subs	r2, r2, r0
 8011206:	a804      	add	r0, sp, #16
 8011208:	f014 ffcb 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801120c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801120e:	441d      	add	r5, r3
 8011210:	e7df      	b.n	80111d2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011212:	4249      	negs	r1, r1
 8011214:	f7ff fe68 	bl	8010ee8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011218:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801121c:	e7ce      	b.n	80111bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801121e:	2900      	cmp	r1, #0
 8011220:	f1c0 0000 	rsb	r0, r0, #0
 8011224:	aa01      	add	r2, sp, #4
 8011226:	db04      	blt.n	8011232 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011228:	f7ff fe5e 	bl	8010ee8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801122c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011230:	e7c4      	b.n	80111bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011232:	4249      	negs	r1, r1
 8011234:	f7ff fe58 	bl	8010ee8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011238:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801123c:	e7be      	b.n	80111bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801123e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011240:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011242:	a804      	add	r0, sp, #16
 8011244:	f014 ffad 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011248:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801124a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801124c:	a804      	add	r0, sp, #16
 801124e:	f014 ffa8 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011252:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011254:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011258:	2d00      	cmp	r5, #0
 801125a:	dd31      	ble.n	80112c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801125c:	eb05 0806 	add.w	r8, r5, r6
 8011260:	4640      	mov	r0, r8
 8011262:	f7ff fdaf 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011266:	a902      	add	r1, sp, #8
 8011268:	9002      	str	r0, [sp, #8]
 801126a:	a801      	add	r0, sp, #4
 801126c:	f7ff fc92 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011270:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011272:	1847      	adds	r7, r0, r1
 8011274:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011278:	f7ff fda4 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 801127c:	a903      	add	r1, sp, #12
 801127e:	9003      	str	r0, [sp, #12]
 8011280:	a801      	add	r0, sp, #4
 8011282:	f7ff fc87 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011286:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011288:	4639      	mov	r1, r7
 801128a:	1a12      	subs	r2, r2, r0
 801128c:	a804      	add	r0, sp, #16
 801128e:	f014 ff88 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011292:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011294:	1aed      	subs	r5, r5, r3
 8011296:	e7df      	b.n	8011258 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011298:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801129a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801129c:	a804      	add	r0, sp, #16
 801129e:	f014 ff33 	bl	8026108 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80112a2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80112a4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80112a6:	a804      	add	r0, sp, #16
 80112a8:	f014 ff7b 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112ac:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80112ae:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80112b0:	a804      	add	r0, sp, #16
 80112b2:	f014 ff76 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112b6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80112b8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80112ba:	a804      	add	r0, sp, #16
 80112bc:	f014 ff71 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112c0:	21ff      	movs	r1, #255	; 0xff
 80112c2:	a804      	add	r0, sp, #16
 80112c4:	f014 fe5c 	bl	8025f80 <_ZN8touchgfx6Canvas6renderEh>
 80112c8:	4b04      	ldr	r3, [pc, #16]	; (80112dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80112ca:	9304      	str	r3, [sp, #16]
 80112cc:	4604      	mov	r4, r0
 80112ce:	a80c      	add	r0, sp, #48	; 0x30
 80112d0:	f001 f8cc 	bl	801246c <_ZN8touchgfx7OutlineD1Ev>
 80112d4:	4620      	mov	r0, r4
 80112d6:	b020      	add	sp, #128	; 0x80
 80112d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112dc:	0802e4f0 	.word	0x0802e4f0

080112e0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80112e0:	2000      	movs	r0, #0
 80112e2:	4770      	bx	lr

080112e4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80112e4:	4b07      	ldr	r3, [pc, #28]	; (8011304 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80112e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80112e8:	881b      	ldrh	r3, [r3, #0]
 80112ea:	4293      	cmp	r3, r2
 80112ec:	bf81      	itttt	hi
 80112ee:	4b06      	ldrhi	r3, [pc, #24]	; (8011308 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80112f0:	681b      	ldrhi	r3, [r3, #0]
 80112f2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80112f6:	7858      	ldrbhi	r0, [r3, #1]
 80112f8:	bf8c      	ite	hi
 80112fa:	f000 0003 	andhi.w	r0, r0, #3
 80112fe:	2000      	movls	r0, #0
 8011300:	4770      	bx	lr
 8011302:	bf00      	nop
 8011304:	20012e00 	.word	0x20012e00
 8011308:	20012dfc 	.word	0x20012dfc

0801130c <_ZN8touchgfx8TextAreaD1Ev>:
 801130c:	4770      	bx	lr
	...

08011310 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011314:	4b10      	ldr	r3, [pc, #64]	; (8011358 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011316:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011318:	881b      	ldrh	r3, [r3, #0]
 801131a:	428b      	cmp	r3, r1
 801131c:	4604      	mov	r4, r0
 801131e:	d918      	bls.n	8011352 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011320:	6803      	ldr	r3, [r0, #0]
 8011322:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011324:	4b0d      	ldr	r3, [pc, #52]	; (801135c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011326:	6818      	ldr	r0, [r3, #0]
 8011328:	f7f6 feae 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 801132c:	6823      	ldr	r3, [r4, #0]
 801132e:	4606      	mov	r6, r0
 8011330:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011332:	4620      	mov	r0, r4
 8011334:	4798      	blx	r3
 8011336:	6823      	ldr	r3, [r4, #0]
 8011338:	4607      	mov	r7, r0
 801133a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801133e:	4620      	mov	r0, r4
 8011340:	4798      	blx	r3
 8011342:	463a      	mov	r2, r7
 8011344:	4603      	mov	r3, r0
 8011346:	4631      	mov	r1, r6
 8011348:	4620      	mov	r0, r4
 801134a:	46ac      	mov	ip, r5
 801134c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011350:	4760      	bx	ip
 8011352:	2000      	movs	r0, #0
 8011354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011358:	20012e00 	.word	0x20012e00
 801135c:	20012e08 	.word	0x20012e08

08011360 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011360:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011364:	4b17      	ldr	r3, [pc, #92]	; (80113c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011366:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011368:	881b      	ldrh	r3, [r3, #0]
 801136a:	428b      	cmp	r3, r1
 801136c:	4604      	mov	r4, r0
 801136e:	d926      	bls.n	80113be <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011370:	4b15      	ldr	r3, [pc, #84]	; (80113c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011372:	681b      	ldr	r3, [r3, #0]
 8011374:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011378:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801137c:	4b13      	ldr	r3, [pc, #76]	; (80113cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801137e:	7855      	ldrb	r5, [r2, #1]
 8011380:	681b      	ldr	r3, [r3, #0]
 8011382:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011386:	6833      	ldr	r3, [r6, #0]
 8011388:	69df      	ldr	r7, [r3, #28]
 801138a:	4b11      	ldr	r3, [pc, #68]	; (80113d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801138c:	6818      	ldr	r0, [r3, #0]
 801138e:	f7f6 fe7b 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8011392:	6823      	ldr	r3, [r4, #0]
 8011394:	4680      	mov	r8, r0
 8011396:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011398:	4620      	mov	r0, r4
 801139a:	4798      	blx	r3
 801139c:	6823      	ldr	r3, [r4, #0]
 801139e:	4681      	mov	r9, r0
 80113a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80113a4:	4620      	mov	r0, r4
 80113a6:	4798      	blx	r3
 80113a8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80113ac:	9000      	str	r0, [sp, #0]
 80113ae:	464b      	mov	r3, r9
 80113b0:	4642      	mov	r2, r8
 80113b2:	4629      	mov	r1, r5
 80113b4:	4630      	mov	r0, r6
 80113b6:	47b8      	blx	r7
 80113b8:	b003      	add	sp, #12
 80113ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80113be:	2000      	movs	r0, #0
 80113c0:	e7fa      	b.n	80113b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80113c2:	bf00      	nop
 80113c4:	20012e00 	.word	0x20012e00
 80113c8:	20012dfc 	.word	0x20012dfc
 80113cc:	20012e04 	.word	0x20012e04
 80113d0:	20012e08 	.word	0x20012e08

080113d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80113d4:	b40e      	push	{r1, r2, r3}
 80113d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80113da:	4b2f      	ldr	r3, [pc, #188]	; (8011498 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80113dc:	881a      	ldrh	r2, [r3, #0]
 80113de:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80113e0:	429a      	cmp	r2, r3
 80113e2:	b09d      	sub	sp, #116	; 0x74
 80113e4:	4604      	mov	r4, r0
 80113e6:	d954      	bls.n	8011492 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80113e8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801149c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80113ec:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80114a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80113f0:	aa26      	add	r2, sp, #152	; 0x98
 80113f2:	9202      	str	r2, [sp, #8]
 80113f4:	f8d9 2000 	ldr.w	r2, [r9]
 80113f8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80113fc:	f8d8 3000 	ldr.w	r3, [r8]
 8011400:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011404:	682b      	ldr	r3, [r5, #0]
 8011406:	4628      	mov	r0, r5
 8011408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801140a:	4798      	blx	r3
 801140c:	b207      	sxth	r7, r0
 801140e:	4606      	mov	r6, r0
 8011410:	a803      	add	r0, sp, #12
 8011412:	f005 fa57 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011416:	682b      	ldr	r3, [r5, #0]
 8011418:	4628      	mov	r0, r5
 801141a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801141c:	4798      	blx	r3
 801141e:	682b      	ldr	r3, [r5, #0]
 8011420:	4682      	mov	sl, r0
 8011422:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011424:	4628      	mov	r0, r5
 8011426:	4798      	blx	r3
 8011428:	4653      	mov	r3, sl
 801142a:	9000      	str	r0, [sp, #0]
 801142c:	9a02      	ldr	r2, [sp, #8]
 801142e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011430:	a803      	add	r0, sp, #12
 8011432:	f005 faa2 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011436:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011438:	f8d9 3000 	ldr.w	r3, [r9]
 801143c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011440:	8925      	ldrh	r5, [r4, #8]
 8011442:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011446:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801144a:	eba5 050c 	sub.w	r5, r5, ip
 801144e:	784a      	ldrb	r2, [r1, #1]
 8011450:	f8d8 3000 	ldr.w	r3, [r8]
 8011454:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011458:	b22d      	sxth	r5, r5
 801145a:	9500      	str	r5, [sp, #0]
 801145c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011460:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011464:	a803      	add	r0, sp, #12
 8011466:	f002 feed 	bl	8014244 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801146a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801146e:	18b9      	adds	r1, r7, r2
 8011470:	2900      	cmp	r1, #0
 8011472:	b203      	sxth	r3, r0
 8011474:	dd0b      	ble.n	801148e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011476:	3b01      	subs	r3, #1
 8011478:	fb13 f302 	smulbb	r3, r3, r2
 801147c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011480:	b21f      	sxth	r7, r3
 8011482:	4638      	mov	r0, r7
 8011484:	b01d      	add	sp, #116	; 0x74
 8011486:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801148a:	b003      	add	sp, #12
 801148c:	4770      	bx	lr
 801148e:	2b00      	cmp	r3, #0
 8011490:	dcf7      	bgt.n	8011482 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011492:	2700      	movs	r7, #0
 8011494:	e7f5      	b.n	8011482 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011496:	bf00      	nop
 8011498:	20012e00 	.word	0x20012e00
 801149c:	20012dfc 	.word	0x20012dfc
 80114a0:	20012e04 	.word	0x20012e04

080114a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80114a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114a8:	4bbc      	ldr	r3, [pc, #752]	; (801179c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80114aa:	460c      	mov	r4, r1
 80114ac:	881b      	ldrh	r3, [r3, #0]
 80114ae:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80114b0:	428b      	cmp	r3, r1
 80114b2:	b0a9      	sub	sp, #164	; 0xa4
 80114b4:	4680      	mov	r8, r0
 80114b6:	d809      	bhi.n	80114cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80114b8:	2300      	movs	r3, #0
 80114ba:	f04f 32ff 	mov.w	r2, #4294967295
 80114be:	e9c0 3200 	strd	r3, r2, [r0]
 80114c2:	6083      	str	r3, [r0, #8]
 80114c4:	4640      	mov	r0, r8
 80114c6:	b029      	add	sp, #164	; 0xa4
 80114c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114cc:	4eb4      	ldr	r6, [pc, #720]	; (80117a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80114ce:	6833      	ldr	r3, [r6, #0]
 80114d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80114d4:	4bb3      	ldr	r3, [pc, #716]	; (80117a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80114d6:	681b      	ldr	r3, [r3, #0]
 80114d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80114dc:	4bb2      	ldr	r3, [pc, #712]	; (80117a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80114de:	6818      	ldr	r0, [r3, #0]
 80114e0:	f7f6 fdd2 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 80114e4:	682b      	ldr	r3, [r5, #0]
 80114e6:	4681      	mov	r9, r0
 80114e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80114ea:	4628      	mov	r0, r5
 80114ec:	4798      	blx	r3
 80114ee:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80114f0:	b203      	sxth	r3, r0
 80114f2:	4407      	add	r7, r0
 80114f4:	9304      	str	r3, [sp, #16]
 80114f6:	b2bb      	uxth	r3, r7
 80114f8:	9303      	str	r3, [sp, #12]
 80114fa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80114fe:	4682      	mov	sl, r0
 8011500:	a80f      	add	r0, sp, #60	; 0x3c
 8011502:	2b00      	cmp	r3, #0
 8011504:	f040 80a6 	bne.w	8011654 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011508:	f005 f9dc 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 801150c:	682b      	ldr	r3, [r5, #0]
 801150e:	4628      	mov	r0, r5
 8011510:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011512:	4798      	blx	r3
 8011514:	682b      	ldr	r3, [r5, #0]
 8011516:	4606      	mov	r6, r0
 8011518:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801151a:	4628      	mov	r0, r5
 801151c:	4798      	blx	r3
 801151e:	6823      	ldr	r3, [r4, #0]
 8011520:	4607      	mov	r7, r0
 8011522:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011524:	4620      	mov	r0, r4
 8011526:	4798      	blx	r3
 8011528:	6823      	ldr	r3, [r4, #0]
 801152a:	4683      	mov	fp, r0
 801152c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011530:	4620      	mov	r0, r4
 8011532:	4798      	blx	r3
 8011534:	463b      	mov	r3, r7
 8011536:	e9cd b000 	strd	fp, r0, [sp]
 801153a:	4649      	mov	r1, r9
 801153c:	4632      	mov	r2, r6
 801153e:	a80f      	add	r0, sp, #60	; 0x3c
 8011540:	f005 fa30 	bl	80169a4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011544:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011548:	f8df b254 	ldr.w	fp, [pc, #596]	; 80117a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801154c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011550:	f04f 0600 	mov.w	r6, #0
 8011554:	bf0c      	ite	eq
 8011556:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801155a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801155e:	4637      	mov	r7, r6
 8011560:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011562:	f8db 3000 	ldr.w	r3, [fp]
 8011566:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801156a:	4629      	mov	r1, r5
 801156c:	785b      	ldrb	r3, [r3, #1]
 801156e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011572:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011576:	a80f      	add	r0, sp, #60	; 0x3c
 8011578:	f002 fb7f 	bl	8013c7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801157c:	9b03      	ldr	r3, [sp, #12]
 801157e:	4286      	cmp	r6, r0
 8011580:	bfb8      	it	lt
 8011582:	4606      	movlt	r6, r0
 8011584:	3701      	adds	r7, #1
 8011586:	eba9 0903 	sub.w	r9, r9, r3
 801158a:	a80f      	add	r0, sp, #60	; 0x3c
 801158c:	b236      	sxth	r6, r6
 801158e:	b2bf      	uxth	r7, r7
 8011590:	fa0f f989 	sxth.w	r9, r9
 8011594:	f005 f9bd 	bl	8016912 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011598:	b918      	cbnz	r0, 80115a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801159a:	7a2b      	ldrb	r3, [r5, #8]
 801159c:	444b      	add	r3, r9
 801159e:	2b00      	cmp	r3, #0
 80115a0:	dcde      	bgt.n	8011560 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80115a2:	9b03      	ldr	r3, [sp, #12]
 80115a4:	9a04      	ldr	r2, [sp, #16]
 80115a6:	f895 9009 	ldrb.w	r9, [r5, #9]
 80115aa:	fb13 f707 	smulbb	r7, r3, r7
 80115ae:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80115b0:	1aff      	subs	r7, r7, r3
 80115b2:	b2bf      	uxth	r7, r7
 80115b4:	b23b      	sxth	r3, r7
 80115b6:	429a      	cmp	r2, r3
 80115b8:	bfa8      	it	ge
 80115ba:	4657      	movge	r7, sl
 80115bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80115c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80115c4:	6823      	ldr	r3, [r4, #0]
 80115c6:	bf08      	it	eq
 80115c8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80115cc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80115ce:	bf18      	it	ne
 80115d0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80115d4:	4620      	mov	r0, r4
 80115d6:	4798      	blx	r3
 80115d8:	444f      	add	r7, r9
 80115da:	fa1f f987 	uxth.w	r9, r7
 80115de:	2801      	cmp	r0, #1
 80115e0:	fa0f f789 	sxth.w	r7, r9
 80115e4:	b2b3      	uxth	r3, r6
 80115e6:	f000 80e1 	beq.w	80117ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80115ea:	2802      	cmp	r0, #2
 80115ec:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80115f0:	f000 80e2 	beq.w	80117b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80115f4:	7aea      	ldrb	r2, [r5, #11]
 80115f6:	7b2d      	ldrb	r5, [r5, #12]
 80115f8:	b236      	sxth	r6, r6
 80115fa:	1ab6      	subs	r6, r6, r2
 80115fc:	442a      	add	r2, r5
 80115fe:	4413      	add	r3, r2
 8011600:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011604:	fa1f fa86 	uxth.w	sl, r6
 8011608:	b29b      	uxth	r3, r3
 801160a:	2a02      	cmp	r2, #2
 801160c:	fa0f fb8a 	sxth.w	fp, sl
 8011610:	b21e      	sxth	r6, r3
 8011612:	f000 80d5 	beq.w	80117c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011616:	2a03      	cmp	r2, #3
 8011618:	f000 80dd 	beq.w	80117d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801161c:	2a01      	cmp	r2, #1
 801161e:	f040 80e5 	bne.w	80117ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011622:	8925      	ldrh	r5, [r4, #8]
 8011624:	4633      	mov	r3, r6
 8011626:	eba5 0909 	sub.w	r9, r5, r9
 801162a:	463e      	mov	r6, r7
 801162c:	465d      	mov	r5, fp
 801162e:	461f      	mov	r7, r3
 8011630:	fa0f fb89 	sxth.w	fp, r9
 8011634:	4b5c      	ldr	r3, [pc, #368]	; (80117a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011636:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011638:	6818      	ldr	r0, [r3, #0]
 801163a:	f7f6 fd25 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 801163e:	f8a8 b000 	strh.w	fp, [r8]
 8011642:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011646:	f8a8 6004 	strh.w	r6, [r8, #4]
 801164a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801164e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011652:	e737      	b.n	80114c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011654:	f005 f936 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011658:	682b      	ldr	r3, [r5, #0]
 801165a:	4628      	mov	r0, r5
 801165c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801165e:	4798      	blx	r3
 8011660:	682b      	ldr	r3, [r5, #0]
 8011662:	4607      	mov	r7, r0
 8011664:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011666:	4628      	mov	r0, r5
 8011668:	4798      	blx	r3
 801166a:	6823      	ldr	r3, [r4, #0]
 801166c:	4683      	mov	fp, r0
 801166e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011670:	4620      	mov	r0, r4
 8011672:	4798      	blx	r3
 8011674:	6822      	ldr	r2, [r4, #0]
 8011676:	9005      	str	r0, [sp, #20]
 8011678:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801167c:	4620      	mov	r0, r4
 801167e:	4790      	blx	r2
 8011680:	9b05      	ldr	r3, [sp, #20]
 8011682:	9001      	str	r0, [sp, #4]
 8011684:	463a      	mov	r2, r7
 8011686:	4649      	mov	r1, r9
 8011688:	9300      	str	r3, [sp, #0]
 801168a:	a80f      	add	r0, sp, #60	; 0x3c
 801168c:	465b      	mov	r3, fp
 801168e:	f005 f989 	bl	80169a4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011692:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011696:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801169a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801169c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80116a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80116a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80116a8:	bf0a      	itet	eq
 80116aa:	464a      	moveq	r2, r9
 80116ac:	461a      	movne	r2, r3
 80116ae:	4699      	moveq	r9, r3
 80116b0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80116b4:	1ad2      	subs	r2, r2, r3
 80116b6:	6833      	ldr	r3, [r6, #0]
 80116b8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80116bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80116c0:	af0f      	add	r7, sp, #60	; 0x3c
 80116c2:	7859      	ldrb	r1, [r3, #1]
 80116c4:	9707      	str	r7, [sp, #28]
 80116c6:	2300      	movs	r3, #0
 80116c8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80116cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80116d0:	f88d 1020 	strb.w	r1, [sp, #32]
 80116d4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80116d8:	9509      	str	r5, [sp, #36]	; 0x24
 80116da:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80116de:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80116e2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80116e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80116ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80116ee:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80116f2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80116f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80116fa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80116fe:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011702:	b350      	cbz	r0, 801175a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011704:	682b      	ldr	r3, [r5, #0]
 8011706:	4628      	mov	r0, r5
 8011708:	695b      	ldr	r3, [r3, #20]
 801170a:	4798      	blx	r3
 801170c:	4607      	mov	r7, r0
 801170e:	b320      	cbz	r0, 801175a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011710:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011712:	6803      	ldr	r3, [r0, #0]
 8011714:	4639      	mov	r1, r7
 8011716:	68db      	ldr	r3, [r3, #12]
 8011718:	4798      	blx	r3
 801171a:	4606      	mov	r6, r0
 801171c:	b1e8      	cbz	r0, 801175a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801171e:	7b43      	ldrb	r3, [r0, #13]
 8011720:	7a82      	ldrb	r2, [r0, #10]
 8011722:	005b      	lsls	r3, r3, #1
 8011724:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011728:	4313      	orrs	r3, r2
 801172a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801172e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011732:	2b06      	cmp	r3, #6
 8011734:	d111      	bne.n	801175a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011736:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011738:	6803      	ldr	r3, [r0, #0]
 801173a:	4632      	mov	r2, r6
 801173c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801173e:	4639      	mov	r1, r7
 8011740:	4798      	blx	r3
 8011742:	7b73      	ldrb	r3, [r6, #13]
 8011744:	005b      	lsls	r3, r3, #1
 8011746:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801174a:	7ab3      	ldrb	r3, [r6, #10]
 801174c:	4313      	orrs	r3, r2
 801174e:	4418      	add	r0, r3
 8011750:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011754:	4418      	add	r0, r3
 8011756:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801175a:	2600      	movs	r6, #0
 801175c:	4637      	mov	r7, r6
 801175e:	a806      	add	r0, sp, #24
 8011760:	f002 fc6c 	bl	801403c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011764:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011768:	9b03      	ldr	r3, [sp, #12]
 801176a:	4286      	cmp	r6, r0
 801176c:	eba9 0903 	sub.w	r9, r9, r3
 8011770:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011774:	bfb8      	it	lt
 8011776:	4606      	movlt	r6, r0
 8011778:	3701      	adds	r7, #1
 801177a:	b236      	sxth	r6, r6
 801177c:	b2bf      	uxth	r7, r7
 801177e:	fa0f f989 	sxth.w	r9, r9
 8011782:	2b00      	cmp	r3, #0
 8011784:	f43f af0d 	beq.w	80115a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011788:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801178c:	2b00      	cmp	r3, #0
 801178e:	f47f af08 	bne.w	80115a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011792:	7a2b      	ldrb	r3, [r5, #8]
 8011794:	444b      	add	r3, r9
 8011796:	2b00      	cmp	r3, #0
 8011798:	dce1      	bgt.n	801175e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801179a:	e702      	b.n	80115a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801179c:	20012e00 	.word	0x20012e00
 80117a0:	20012dfc 	.word	0x20012dfc
 80117a4:	20012e04 	.word	0x20012e04
 80117a8:	20012e08 	.word	0x20012e08
 80117ac:	ebaa 0606 	sub.w	r6, sl, r6
 80117b0:	2002      	movs	r0, #2
 80117b2:	fb96 f6f0 	sdiv	r6, r6, r0
 80117b6:	e71d      	b.n	80115f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80117b8:	441e      	add	r6, r3
 80117ba:	ebaa 0606 	sub.w	r6, sl, r6
 80117be:	e719      	b.n	80115f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80117c0:	8925      	ldrh	r5, [r4, #8]
 80117c2:	1aed      	subs	r5, r5, r3
 80117c4:	eba5 050a 	sub.w	r5, r5, sl
 80117c8:	fa0f fb85 	sxth.w	fp, r5
 80117cc:	8965      	ldrh	r5, [r4, #10]
 80117ce:	eba5 0509 	sub.w	r5, r5, r9
 80117d2:	b22d      	sxth	r5, r5
 80117d4:	e72e      	b.n	8011634 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80117d6:	8965      	ldrh	r5, [r4, #10]
 80117d8:	1aed      	subs	r5, r5, r3
 80117da:	eba5 050a 	sub.w	r5, r5, sl
 80117de:	4633      	mov	r3, r6
 80117e0:	b22d      	sxth	r5, r5
 80117e2:	463e      	mov	r6, r7
 80117e4:	f04f 0b00 	mov.w	fp, #0
 80117e8:	461f      	mov	r7, r3
 80117ea:	e723      	b.n	8011634 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80117ec:	2500      	movs	r5, #0
 80117ee:	e721      	b.n	8011634 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080117f0 <_ZN8touchgfx8TextAreaD0Ev>:
 80117f0:	b510      	push	{r4, lr}
 80117f2:	2148      	movs	r1, #72	; 0x48
 80117f4:	4604      	mov	r4, r0
 80117f6:	f017 fa4a 	bl	8028c8e <_ZdlPvj>
 80117fa:	4620      	mov	r0, r4
 80117fc:	bd10      	pop	{r4, pc}
	...

08011800 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011800:	b513      	push	{r0, r1, r4, lr}
 8011802:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011806:	4604      	mov	r4, r0
 8011808:	b1fb      	cbz	r3, 801184a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801180a:	4b16      	ldr	r3, [pc, #88]	; (8011864 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801180c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801180e:	881b      	ldrh	r3, [r3, #0]
 8011810:	428b      	cmp	r3, r1
 8011812:	d91a      	bls.n	801184a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011814:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011818:	2b00      	cmp	r3, #0
 801181a:	dd16      	ble.n	801184a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801181c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011820:	2b00      	cmp	r3, #0
 8011822:	dd12      	ble.n	801184a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011824:	4b10      	ldr	r3, [pc, #64]	; (8011868 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011826:	6818      	ldr	r0, [r3, #0]
 8011828:	f7f6 fc2e 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 801182c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011830:	6822      	ldr	r2, [r4, #0]
 8011832:	2b00      	cmp	r3, #0
 8011834:	db06      	blt.n	8011844 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011836:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801183a:	2b00      	cmp	r3, #0
 801183c:	db02      	blt.n	8011844 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801183e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011840:	4298      	cmp	r0, r3
 8011842:	d004      	beq.n	801184e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011844:	6953      	ldr	r3, [r2, #20]
 8011846:	4620      	mov	r0, r4
 8011848:	4798      	blx	r3
 801184a:	b002      	add	sp, #8
 801184c:	bd10      	pop	{r4, pc}
 801184e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011852:	c903      	ldmia	r1, {r0, r1}
 8011854:	466b      	mov	r3, sp
 8011856:	e883 0003 	stmia.w	r3, {r0, r1}
 801185a:	6912      	ldr	r2, [r2, #16]
 801185c:	4619      	mov	r1, r3
 801185e:	4620      	mov	r0, r4
 8011860:	4790      	blx	r2
 8011862:	e7f2      	b.n	801184a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011864:	20012e00 	.word	0x20012e00
 8011868:	20012e08 	.word	0x20012e08

0801186c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801186c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011870:	4b44      	ldr	r3, [pc, #272]	; (8011984 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011872:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011874:	881b      	ldrh	r3, [r3, #0]
 8011876:	4293      	cmp	r3, r2
 8011878:	b08e      	sub	sp, #56	; 0x38
 801187a:	4604      	mov	r4, r0
 801187c:	d97e      	bls.n	801197c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801187e:	6808      	ldr	r0, [r1, #0]
 8011880:	4d41      	ldr	r5, [pc, #260]	; (8011988 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011882:	6849      	ldr	r1, [r1, #4]
 8011884:	ab05      	add	r3, sp, #20
 8011886:	c303      	stmia	r3!, {r0, r1}
 8011888:	4611      	mov	r1, r2
 801188a:	6828      	ldr	r0, [r5, #0]
 801188c:	f7f6 fbfc 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8011890:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011894:	2b00      	cmp	r3, #0
 8011896:	db11      	blt.n	80118bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011898:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801189c:	2b00      	cmp	r3, #0
 801189e:	db0d      	blt.n	80118bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80118a0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80118a2:	4298      	cmp	r0, r3
 80118a4:	d10a      	bne.n	80118bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80118a6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80118aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80118ae:	ab09      	add	r3, sp, #36	; 0x24
 80118b0:	e883 0003 	stmia.w	r3, {r0, r1}
 80118b4:	4619      	mov	r1, r3
 80118b6:	a805      	add	r0, sp, #20
 80118b8:	f7fe f860 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 80118bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80118c0:	2b00      	cmp	r3, #0
 80118c2:	dd5b      	ble.n	801197c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80118c4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80118c8:	2b00      	cmp	r3, #0
 80118ca:	dd57      	ble.n	801197c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80118cc:	4f2f      	ldr	r7, [pc, #188]	; (801198c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80118ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80118d0:	683b      	ldr	r3, [r7, #0]
 80118d2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80118d6:	4b2e      	ldr	r3, [pc, #184]	; (8011990 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80118d8:	681b      	ldr	r3, [r3, #0]
 80118da:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80118de:	2e00      	cmp	r6, #0
 80118e0:	d04c      	beq.n	801197c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80118e2:	6823      	ldr	r3, [r4, #0]
 80118e4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80118e8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80118ea:	4620      	mov	r0, r4
 80118ec:	4798      	blx	r3
 80118ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80118f0:	683b      	ldr	r3, [r7, #0]
 80118f2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80118f6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80118fa:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80118fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011900:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011904:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011908:	785b      	ldrb	r3, [r3, #1]
 801190a:	9609      	str	r6, [sp, #36]	; 0x24
 801190c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011910:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011914:	4b1f      	ldr	r3, [pc, #124]	; (8011994 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011916:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801191a:	681b      	ldr	r3, [r3, #0]
 801191c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011920:	910b      	str	r1, [sp, #44]	; 0x2c
 8011922:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011926:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801192a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801192e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011932:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011936:	b10a      	cbz	r2, 801193c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011938:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801193a:	b906      	cbnz	r6, 801193e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801193c:	689e      	ldr	r6, [r3, #8]
 801193e:	af07      	add	r7, sp, #28
 8011940:	4621      	mov	r1, r4
 8011942:	4638      	mov	r0, r7
 8011944:	f004 fab0 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011948:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801194a:	6828      	ldr	r0, [r5, #0]
 801194c:	f7f6 fb9c 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8011950:	6823      	ldr	r3, [r4, #0]
 8011952:	4605      	mov	r5, r0
 8011954:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011956:	4620      	mov	r0, r4
 8011958:	4798      	blx	r3
 801195a:	6823      	ldr	r3, [r4, #0]
 801195c:	4680      	mov	r8, r0
 801195e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011962:	4620      	mov	r0, r4
 8011964:	4798      	blx	r3
 8011966:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801196a:	ab09      	add	r3, sp, #36	; 0x24
 801196c:	9300      	str	r3, [sp, #0]
 801196e:	9501      	str	r5, [sp, #4]
 8011970:	ab05      	add	r3, sp, #20
 8011972:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011976:	4630      	mov	r0, r6
 8011978:	f7f6 fb38 	bl	8007fec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801197c:	b00e      	add	sp, #56	; 0x38
 801197e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011982:	bf00      	nop
 8011984:	20012e00 	.word	0x20012e00
 8011988:	20012e08 	.word	0x20012e08
 801198c:	20012dfc 	.word	0x20012dfc
 8011990:	20012e04 	.word	0x20012e04
 8011994:	20012da4 	.word	0x20012da4

08011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011998:	b538      	push	{r3, r4, r5, lr}
 801199a:	4b0e      	ldr	r3, [pc, #56]	; (80119d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801199c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801199e:	881b      	ldrh	r3, [r3, #0]
 80119a0:	429a      	cmp	r2, r3
 80119a2:	4604      	mov	r4, r0
 80119a4:	d214      	bcs.n	80119d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80119a6:	6803      	ldr	r3, [r0, #0]
 80119a8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80119aa:	4798      	blx	r3
 80119ac:	6823      	ldr	r3, [r4, #0]
 80119ae:	4605      	mov	r5, r0
 80119b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80119b2:	4620      	mov	r0, r4
 80119b4:	4798      	blx	r3
 80119b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80119ba:	b22d      	sxth	r5, r5
 80119bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80119c0:	4601      	mov	r1, r0
 80119c2:	bf06      	itte	eq
 80119c4:	4602      	moveq	r2, r0
 80119c6:	4629      	moveq	r1, r5
 80119c8:	462a      	movne	r2, r5
 80119ca:	4620      	mov	r0, r4
 80119cc:	f7fd fdb6 	bl	800f53c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80119d0:	bd38      	pop	{r3, r4, r5, pc}
 80119d2:	bf00      	nop
 80119d4:	20012e00 	.word	0x20012e00

080119d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80119d8:	b530      	push	{r4, r5, lr}
 80119da:	888b      	ldrh	r3, [r1, #4]
 80119dc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80119de:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80119e2:	b085      	sub	sp, #20
 80119e4:	4604      	mov	r4, r0
 80119e6:	b923      	cbnz	r3, 80119f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80119e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80119ec:	b90b      	cbnz	r3, 80119f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80119ee:	f7ff ffd3 	bl	8011998 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80119f2:	6823      	ldr	r3, [r4, #0]
 80119f4:	466d      	mov	r5, sp
 80119f6:	4621      	mov	r1, r4
 80119f8:	4628      	mov	r0, r5
 80119fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80119fe:	4798      	blx	r3
 8011a00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011a04:	343c      	adds	r4, #60	; 0x3c
 8011a06:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011a0a:	b005      	add	sp, #20
 8011a0c:	bd30      	pop	{r4, r5, pc}

08011a0e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011a0e:	2300      	movs	r3, #0
 8011a10:	8083      	strh	r3, [r0, #4]
 8011a12:	80c3      	strh	r3, [r0, #6]
 8011a14:	8003      	strh	r3, [r0, #0]
 8011a16:	8043      	strh	r3, [r0, #2]
 8011a18:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011a1c:	2bff      	cmp	r3, #255	; 0xff
 8011a1e:	bf01      	itttt	eq
 8011a20:	890b      	ldrheq	r3, [r1, #8]
 8011a22:	8083      	strheq	r3, [r0, #4]
 8011a24:	894b      	ldrheq	r3, [r1, #10]
 8011a26:	80c3      	strheq	r3, [r0, #6]
 8011a28:	4770      	bx	lr
	...

08011a2c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011a2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011a2e:	4604      	mov	r4, r0
 8011a30:	6808      	ldr	r0, [r1, #0]
 8011a32:	6849      	ldr	r1, [r1, #4]
 8011a34:	466b      	mov	r3, sp
 8011a36:	c303      	stmia	r3!, {r0, r1}
 8011a38:	6823      	ldr	r3, [r4, #0]
 8011a3a:	4669      	mov	r1, sp
 8011a3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a3e:	4620      	mov	r0, r4
 8011a40:	4798      	blx	r3
 8011a42:	4b08      	ldr	r3, [pc, #32]	; (8011a64 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011a44:	681b      	ldr	r3, [r3, #0]
 8011a46:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011a4a:	b10a      	cbz	r2, 8011a50 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011a4c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011a4e:	b900      	cbnz	r0, 8011a52 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011a50:	6898      	ldr	r0, [r3, #8]
 8011a52:	6803      	ldr	r3, [r0, #0]
 8011a54:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011a56:	6a1d      	ldr	r5, [r3, #32]
 8011a58:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011a5c:	4669      	mov	r1, sp
 8011a5e:	47a8      	blx	r5
 8011a60:	b003      	add	sp, #12
 8011a62:	bd30      	pop	{r4, r5, pc}
 8011a64:	20012da4 	.word	0x20012da4

08011a68 <_ZN8touchgfx3BoxD1Ev>:
 8011a68:	4770      	bx	lr

08011a6a <_ZN8touchgfx3BoxD0Ev>:
 8011a6a:	b510      	push	{r4, lr}
 8011a6c:	212c      	movs	r1, #44	; 0x2c
 8011a6e:	4604      	mov	r4, r0
 8011a70:	f017 f90d 	bl	8028c8e <_ZdlPvj>
 8011a74:	4620      	mov	r0, r4
 8011a76:	bd10      	pop	{r4, pc}

08011a78 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011a78:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011a7c:	b12a      	cbz	r2, 8011a8a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011a7e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011a82:	b112      	cbz	r2, 8011a8a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011a84:	6803      	ldr	r3, [r0, #0]
 8011a86:	695b      	ldr	r3, [r3, #20]
 8011a88:	4718      	bx	r3
 8011a8a:	4770      	bx	lr

08011a8c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8011a8c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011a90:	600b      	str	r3, [r1, #0]
 8011a92:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011a96:	6013      	str	r3, [r2, #0]
 8011a98:	4770      	bx	lr

08011a9a <_ZN8touchgfx5Gauge8setWidthEs>:
 8011a9a:	8101      	strh	r1, [r0, #8]
 8011a9c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8011aa0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8011aa4:	4770      	bx	lr

08011aa6 <_ZN8touchgfx5Gauge9setHeightEs>:
 8011aa6:	8141      	strh	r1, [r0, #10]
 8011aa8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8011aac:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8011ab0:	4770      	bx	lr

08011ab2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8011ab2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8011ab6:	4770      	bx	lr

08011ab8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8011ab8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8011abc:	4770      	bx	lr

08011abe <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8011abe:	4770      	bx	lr

08011ac0 <_ZN8touchgfx5GaugeD1Ev>:
 8011ac0:	4770      	bx	lr

08011ac2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8011ac2:	b538      	push	{r3, r4, r5, lr}
 8011ac4:	4604      	mov	r4, r0
 8011ac6:	460d      	mov	r5, r1
 8011ac8:	f7fd fc51 	bl	800f36e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011acc:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8011ad0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8011ad4:	bd38      	pop	{r3, r4, r5, pc}

08011ad6 <_ZN8touchgfx5GaugeD0Ev>:
 8011ad6:	b510      	push	{r4, lr}
 8011ad8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8011adc:	4604      	mov	r4, r0
 8011ade:	f017 f8d6 	bl	8028c8e <_ZdlPvj>
 8011ae2:	4620      	mov	r0, r4
 8011ae4:	bd10      	pop	{r4, pc}

08011ae6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011ae6:	b510      	push	{r4, lr}
 8011ae8:	6803      	ldr	r3, [r0, #0]
 8011aea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011aee:	4604      	mov	r4, r0
 8011af0:	4798      	blx	r3
 8011af2:	b170      	cbz	r0, 8011b12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011af4:	6823      	ldr	r3, [r4, #0]
 8011af6:	4620      	mov	r0, r4
 8011af8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011afc:	4798      	blx	r3
 8011afe:	b140      	cbz	r0, 8011b12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011b00:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011b04:	b12b      	cbz	r3, 8011b12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011b06:	6823      	ldr	r3, [r4, #0]
 8011b08:	4620      	mov	r0, r4
 8011b0a:	695b      	ldr	r3, [r3, #20]
 8011b0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b10:	4718      	bx	r3
 8011b12:	bd10      	pop	{r4, pc}

08011b14 <_ZN8touchgfx5GaugeC1Ev>:
 8011b14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011b16:	4604      	mov	r4, r0
 8011b18:	4626      	mov	r6, r4
 8011b1a:	f7fd fd49 	bl	800f5b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011b1e:	4b18      	ldr	r3, [pc, #96]	; (8011b80 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011b20:	f846 3bb4 	str.w	r3, [r6], #180
 8011b24:	a902      	add	r1, sp, #8
 8011b26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011b2a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011b2e:	4630      	mov	r0, r6
 8011b30:	f015 f970 	bl	8026e14 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011b34:	2500      	movs	r5, #0
 8011b36:	2301      	movs	r3, #1
 8011b38:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011b3c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011b40:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011b44:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011b48:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011b4c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011b50:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011b54:	4638      	mov	r0, r7
 8011b56:	f014 fba1 	bl	802629c <_ZN8touchgfx6CircleC1Ev>
 8011b5a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011b5e:	4620      	mov	r0, r4
 8011b60:	f7fd fdc7 	bl	800f6f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011b64:	4639      	mov	r1, r7
 8011b66:	4620      	mov	r0, r4
 8011b68:	f7fd fd82 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011b6c:	4620      	mov	r0, r4
 8011b6e:	4631      	mov	r1, r6
 8011b70:	f7fd fd7e 	bl	800f670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011b74:	4620      	mov	r0, r4
 8011b76:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011b7a:	b003      	add	sp, #12
 8011b7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b7e:	bf00      	nop
 8011b80:	0802de38 	.word	0x0802de38

08011b84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011b84:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011b88:	4770      	bx	lr

08011b8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011b8a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011b8e:	4770      	bx	lr

08011b90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011b90:	b538      	push	{r3, r4, r5, lr}
 8011b92:	8902      	ldrh	r2, [r0, #8]
 8011b94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011b98:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011b9c:	4604      	mov	r4, r0
 8011b9e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011ba2:	2200      	movs	r2, #0
 8011ba4:	4611      	mov	r1, r2
 8011ba6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011baa:	4628      	mov	r0, r5
 8011bac:	f7f0 fd57 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8011bb0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011bb4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011bb8:	1a9b      	subs	r3, r3, r2
 8011bba:	ee07 3a90 	vmov	s15, r3
 8011bbe:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011bc2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011bc6:	1a9b      	subs	r3, r3, r2
 8011bc8:	ee07 3a10 	vmov	s14, r3
 8011bcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011bd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011bd4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011bd8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011bdc:	4628      	mov	r0, r5
 8011bde:	f015 f965 	bl	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011be2:	4b16      	ldr	r3, [pc, #88]	; (8011c3c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011be4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011be8:	4628      	mov	r0, r5
 8011bea:	f015 f95f 	bl	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011bee:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011bf2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011bf6:	ee07 3a90 	vmov	s15, r3
 8011bfa:	ee07 2a10 	vmov	s14, r2
 8011bfe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011c02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011c06:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011c0a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011c0e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011c12:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011c16:	4628      	mov	r0, r5
 8011c18:	f015 f948 	bl	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011c1c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011c20:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011c24:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011c28:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011c2c:	4628      	mov	r0, r5
 8011c2e:	f015 f93d 	bl	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011c32:	2301      	movs	r3, #1
 8011c34:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011c38:	bd38      	pop	{r3, r4, r5, pc}
 8011c3a:	bf00      	nop
 8011c3c:	43960000 	.word	0x43960000

08011c40 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011c40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011c42:	4604      	mov	r4, r0
 8011c44:	a802      	add	r0, sp, #8
 8011c46:	4616      	mov	r6, r2
 8011c48:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011c4c:	461d      	mov	r5, r3
 8011c4e:	4601      	mov	r1, r0
 8011c50:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011c54:	f015 fa80 	bl	8027158 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011c58:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8011c5c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011c60:	4620      	mov	r0, r4
 8011c62:	f7ff ff95 	bl	8011b90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011c66:	b002      	add	sp, #8
 8011c68:	bd70      	pop	{r4, r5, r6, pc}

08011c6a <_ZN8touchgfx5Gauge9setCenterEii>:
 8011c6a:	b570      	push	{r4, r5, r6, lr}
 8011c6c:	4606      	mov	r6, r0
 8011c6e:	460d      	mov	r5, r1
 8011c70:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011c74:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011c78:	4614      	mov	r4, r2
 8011c7a:	f7ff ff89 	bl	8011b90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011c7e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8011c82:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8011c86:	1aa4      	subs	r4, r4, r2
 8011c88:	1a6d      	subs	r5, r5, r1
 8011c8a:	0164      	lsls	r4, r4, #5
 8011c8c:	016d      	lsls	r5, r5, #5
 8011c8e:	3410      	adds	r4, #16
 8011c90:	3510      	adds	r5, #16
 8011c92:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8011c96:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8011c9a:	bd70      	pop	{r4, r5, r6, pc}

08011c9c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8011c9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011c9e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8011ca0:	0149      	lsls	r1, r1, #5
 8011ca2:	4299      	cmp	r1, r3
 8011ca4:	4604      	mov	r4, r0
 8011ca6:	9101      	str	r1, [sp, #4]
 8011ca8:	d00b      	beq.n	8011cc2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8011caa:	4601      	mov	r1, r0
 8011cac:	aa01      	add	r2, sp, #4
 8011cae:	a802      	add	r0, sp, #8
 8011cb0:	f014 fcf2 	bl	8026698 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011cb4:	9b01      	ldr	r3, [sp, #4]
 8011cb6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011cb8:	6823      	ldr	r3, [r4, #0]
 8011cba:	a902      	add	r1, sp, #8
 8011cbc:	691b      	ldr	r3, [r3, #16]
 8011cbe:	4620      	mov	r0, r4
 8011cc0:	4798      	blx	r3
 8011cc2:	b004      	add	sp, #16
 8011cc4:	bd10      	pop	{r4, pc}
	...

08011cc8 <_ZN8touchgfx5Gauge8setValueEi>:
 8011cc8:	b570      	push	{r4, r5, r6, lr}
 8011cca:	4604      	mov	r4, r0
 8011ccc:	f7fd fba2 	bl	800f414 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011cd0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011cd4:	429a      	cmp	r2, r3
 8011cd6:	bfac      	ite	ge
 8011cd8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8011cdc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8011ce0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011ce4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8011ce8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011cec:	1ac9      	subs	r1, r1, r3
 8011cee:	2900      	cmp	r1, #0
 8011cf0:	bfb8      	it	lt
 8011cf2:	4249      	neglt	r1, r1
 8011cf4:	b289      	uxth	r1, r1
 8011cf6:	4620      	mov	r0, r4
 8011cf8:	f7fd fbae 	bl	800f458 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011cfc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011d00:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8011d04:	eddf 6a19 	vldr	s13, [pc, #100]	; 8011d6c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8011d08:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8011d70 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8011d0c:	429a      	cmp	r2, r3
 8011d0e:	4605      	mov	r5, r0
 8011d10:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8011d14:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011d18:	da15      	bge.n	8011d46 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8011d1a:	1b5b      	subs	r3, r3, r5
 8011d1c:	ee07 3a90 	vmov	s15, r3
 8011d20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011d24:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011d28:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011d2c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011d30:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011d34:	f015 f829 	bl	8026d8a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011d38:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011d3c:	1b49      	subs	r1, r1, r5
 8011d3e:	4630      	mov	r0, r6
 8011d40:	f7ff ffac 	bl	8011c9c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8011d44:	bd70      	pop	{r4, r5, r6, pc}
 8011d46:	442b      	add	r3, r5
 8011d48:	ee07 3a90 	vmov	s15, r3
 8011d4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011d50:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011d54:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011d58:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011d5c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011d60:	f015 f813 	bl	8026d8a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011d64:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011d68:	4429      	add	r1, r5
 8011d6a:	e7e8      	b.n	8011d3e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8011d6c:	43340000 	.word	0x43340000
 8011d70:	40490fdb 	.word	0x40490fdb

08011d74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8011d74:	b510      	push	{r4, lr}
 8011d76:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8011d7a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8011d7e:	0149      	lsls	r1, r1, #5
 8011d80:	0152      	lsls	r2, r2, #5
 8011d82:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8011d86:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8011d8a:	4604      	mov	r4, r0
 8011d8c:	f7fd faec 	bl	800f368 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011d90:	4601      	mov	r1, r0
 8011d92:	4620      	mov	r0, r4
 8011d94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d98:	f7ff bf96 	b.w	8011cc8 <_ZN8touchgfx5Gauge8setValueEi>

08011d9c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011d9c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011da0:	4770      	bx	lr

08011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011da2:	b570      	push	{r4, r5, r6, lr}
 8011da4:	880b      	ldrh	r3, [r1, #0]
 8011da6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011da8:	4605      	mov	r5, r0
 8011daa:	8813      	ldrh	r3, [r2, #0]
 8011dac:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011db0:	4604      	mov	r4, r0
 8011db2:	4628      	mov	r0, r5
 8011db4:	f006 fb06 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011db8:	4606      	mov	r6, r0
 8011dba:	4628      	mov	r0, r5
 8011dbc:	f006 fb36 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011dc0:	6823      	ldr	r3, [r4, #0]
 8011dc2:	4605      	mov	r5, r0
 8011dc4:	4631      	mov	r1, r6
 8011dc6:	4620      	mov	r0, r4
 8011dc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011dca:	4798      	blx	r3
 8011dcc:	6823      	ldr	r3, [r4, #0]
 8011dce:	4629      	mov	r1, r5
 8011dd0:	4620      	mov	r0, r4
 8011dd2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011dd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011dd8:	4718      	bx	r3

08011dda <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011dda:	b510      	push	{r4, lr}
 8011ddc:	4604      	mov	r4, r0
 8011dde:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011de0:	b150      	cbz	r0, 8011df8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	68db      	ldr	r3, [r3, #12]
 8011de6:	4798      	blx	r3
 8011de8:	b130      	cbz	r0, 8011df8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011dea:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011dec:	6803      	ldr	r3, [r0, #0]
 8011dee:	4621      	mov	r1, r4
 8011df0:	689b      	ldr	r3, [r3, #8]
 8011df2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011df6:	4718      	bx	r3
 8011df8:	bd10      	pop	{r4, pc}

08011dfa <_ZNK8touchgfx6Button12getSolidRectEv>:
 8011dfa:	b510      	push	{r4, lr}
 8011dfc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011e00:	2bff      	cmp	r3, #255	; 0xff
 8011e02:	4604      	mov	r4, r0
 8011e04:	d006      	beq.n	8011e14 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011e06:	2300      	movs	r3, #0
 8011e08:	8003      	strh	r3, [r0, #0]
 8011e0a:	8043      	strh	r3, [r0, #2]
 8011e0c:	8083      	strh	r3, [r0, #4]
 8011e0e:	80c3      	strh	r3, [r0, #6]
 8011e10:	4620      	mov	r0, r4
 8011e12:	bd10      	pop	{r4, pc}
 8011e14:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011e18:	b11b      	cbz	r3, 8011e22 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8011e1a:	3130      	adds	r1, #48	; 0x30
 8011e1c:	f006 fb3a 	bl	8018494 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011e20:	e7f6      	b.n	8011e10 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011e22:	312e      	adds	r1, #46	; 0x2e
 8011e24:	e7fa      	b.n	8011e1c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011e28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e2c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011e30:	b08a      	sub	sp, #40	; 0x28
 8011e32:	4604      	mov	r4, r0
 8011e34:	4688      	mov	r8, r1
 8011e36:	2b00      	cmp	r3, #0
 8011e38:	d066      	beq.n	8011f08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8011e3a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011e3c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011e40:	a805      	add	r0, sp, #20
 8011e42:	f006 fabf 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e46:	4607      	mov	r7, r0
 8011e48:	a805      	add	r0, sp, #20
 8011e4a:	f006 faef 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e4e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011e52:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011e56:	4432      	add	r2, r6
 8011e58:	b292      	uxth	r2, r2
 8011e5a:	2300      	movs	r3, #0
 8011e5c:	fa0f fc82 	sxth.w	ip, r2
 8011e60:	459c      	cmp	ip, r3
 8011e62:	9306      	str	r3, [sp, #24]
 8011e64:	dd52      	ble.n	8011f0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011e66:	42b7      	cmp	r7, r6
 8011e68:	dd50      	ble.n	8011f0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011e6a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011e6e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011e72:	442b      	add	r3, r5
 8011e74:	b29b      	uxth	r3, r3
 8011e76:	b219      	sxth	r1, r3
 8011e78:	2900      	cmp	r1, #0
 8011e7a:	dd47      	ble.n	8011f0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011e7c:	42a8      	cmp	r0, r5
 8011e7e:	dd45      	ble.n	8011f0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011e80:	4567      	cmp	r7, ip
 8011e82:	bfb8      	it	lt
 8011e84:	b2ba      	uxthlt	r2, r7
 8011e86:	4288      	cmp	r0, r1
 8011e88:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011e8c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011e90:	bfb8      	it	lt
 8011e92:	b283      	uxthlt	r3, r0
 8011e94:	1b92      	subs	r2, r2, r6
 8011e96:	1b5b      	subs	r3, r3, r5
 8011e98:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011e9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011ea0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011ea4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011ea8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011eac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011eb0:	429a      	cmp	r2, r3
 8011eb2:	d026      	beq.n	8011f02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011eb4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011eb8:	2b00      	cmp	r3, #0
 8011eba:	dd22      	ble.n	8011f02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011ebc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011ec0:	2b00      	cmp	r3, #0
 8011ec2:	dd1e      	ble.n	8011f02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011ec4:	2300      	movs	r3, #0
 8011ec6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8011eca:	6823      	ldr	r3, [r4, #0]
 8011ecc:	a908      	add	r1, sp, #32
 8011ece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ed0:	4620      	mov	r0, r4
 8011ed2:	4798      	blx	r3
 8011ed4:	4b0f      	ldr	r3, [pc, #60]	; (8011f14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011ed6:	681b      	ldr	r3, [r3, #0]
 8011ed8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011edc:	b10a      	cbz	r2, 8011ee2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8011ede:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011ee0:	b900      	cbnz	r0, 8011ee4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011ee2:	6898      	ldr	r0, [r3, #8]
 8011ee4:	6801      	ldr	r1, [r0, #0]
 8011ee6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011eea:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011eee:	2501      	movs	r5, #1
 8011ef0:	9502      	str	r5, [sp, #8]
 8011ef2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011ef6:	9401      	str	r4, [sp, #4]
 8011ef8:	ac06      	add	r4, sp, #24
 8011efa:	9400      	str	r4, [sp, #0]
 8011efc:	688c      	ldr	r4, [r1, #8]
 8011efe:	a905      	add	r1, sp, #20
 8011f00:	47a0      	blx	r4
 8011f02:	b00a      	add	sp, #40	; 0x28
 8011f04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f08:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011f0a:	e797      	b.n	8011e3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8011f0c:	2300      	movs	r3, #0
 8011f0e:	9307      	str	r3, [sp, #28]
 8011f10:	e7ca      	b.n	8011ea8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011f12:	bf00      	nop
 8011f14:	20012da4 	.word	0x20012da4

08011f18 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011f18:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8011f1c:	b12a      	cbz	r2, 8011f2a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011f1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011f22:	b112      	cbz	r2, 8011f2a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011f24:	6803      	ldr	r3, [r0, #0]
 8011f26:	695b      	ldr	r3, [r3, #20]
 8011f28:	4718      	bx	r3
 8011f2a:	4770      	bx	lr

08011f2c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011f2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011f30:	4b2f      	ldr	r3, [pc, #188]	; (8011ff0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011f32:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011f34:	881b      	ldrh	r3, [r3, #0]
 8011f36:	4293      	cmp	r3, r2
 8011f38:	b08d      	sub	sp, #52	; 0x34
 8011f3a:	4604      	mov	r4, r0
 8011f3c:	460f      	mov	r7, r1
 8011f3e:	d954      	bls.n	8011fea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011f40:	4b2c      	ldr	r3, [pc, #176]	; (8011ff4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011f42:	6819      	ldr	r1, [r3, #0]
 8011f44:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011f48:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8011f4c:	4a2a      	ldr	r2, [pc, #168]	; (8011ff8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8011f4e:	6812      	ldr	r2, [r2, #0]
 8011f50:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011f54:	2900      	cmp	r1, #0
 8011f56:	d048      	beq.n	8011fea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011f58:	785a      	ldrb	r2, [r3, #1]
 8011f5a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011f5e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011f62:	4b26      	ldr	r3, [pc, #152]	; (8011ffc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011f64:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8011f68:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8011f6c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8011f70:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8011f72:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8011f76:	9107      	str	r1, [sp, #28]
 8011f78:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8011f7c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011f80:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8011f84:	681a      	ldr	r2, [r3, #0]
 8011f86:	f88d 8020 	strb.w	r8, [sp, #32]
 8011f8a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8011f8e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8011f92:	9609      	str	r6, [sp, #36]	; 0x24
 8011f94:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8011f98:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8011f9c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8011fa0:	b10b      	cbz	r3, 8011fa6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011fa2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8011fa4:	b905      	cbnz	r5, 8011fa8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011fa6:	6895      	ldr	r5, [r2, #8]
 8011fa8:	ae05      	add	r6, sp, #20
 8011faa:	4621      	mov	r1, r4
 8011fac:	4630      	mov	r0, r6
 8011fae:	f003 ff7b 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fb2:	4b13      	ldr	r3, [pc, #76]	; (8012000 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011fb4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011fb6:	6818      	ldr	r0, [r3, #0]
 8011fb8:	f7f6 f866 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 8011fbc:	6823      	ldr	r3, [r4, #0]
 8011fbe:	4680      	mov	r8, r0
 8011fc0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011fc2:	4620      	mov	r0, r4
 8011fc4:	4798      	blx	r3
 8011fc6:	6823      	ldr	r3, [r4, #0]
 8011fc8:	4681      	mov	r9, r0
 8011fca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011fce:	4620      	mov	r0, r4
 8011fd0:	4798      	blx	r3
 8011fd2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011fd6:	ab07      	add	r3, sp, #28
 8011fd8:	9300      	str	r3, [sp, #0]
 8011fda:	f8cd 8004 	str.w	r8, [sp, #4]
 8011fde:	463b      	mov	r3, r7
 8011fe0:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011fe4:	4628      	mov	r0, r5
 8011fe6:	f7f6 f801 	bl	8007fec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011fea:	b00d      	add	sp, #52	; 0x34
 8011fec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ff0:	20012e00 	.word	0x20012e00
 8011ff4:	20012dfc 	.word	0x20012dfc
 8011ff8:	20012e04 	.word	0x20012e04
 8011ffc:	20012da4 	.word	0x20012da4
 8012000:	20012e08 	.word	0x20012e08

08012004 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8012004:	4770      	bx	lr

08012006 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8012006:	4770      	bx	lr

08012008 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8012008:	b510      	push	{r4, lr}
 801200a:	213c      	movs	r1, #60	; 0x3c
 801200c:	4604      	mov	r4, r0
 801200e:	f016 fe3e 	bl	8028c8e <_ZdlPvj>
 8012012:	4620      	mov	r0, r4
 8012014:	bd10      	pop	{r4, pc}

08012016 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012016:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801201a:	461c      	mov	r4, r3
 801201c:	4606      	mov	r6, r0
 801201e:	9f06      	ldr	r7, [sp, #24]
 8012020:	f7ff febf 	bl	8011da2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8012024:	8823      	ldrh	r3, [r4, #0]
 8012026:	86b3      	strh	r3, [r6, #52]	; 0x34
 8012028:	883b      	ldrh	r3, [r7, #0]
 801202a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801202c:	4638      	mov	r0, r7
 801202e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012032:	f006 f9c7 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012036:	f04f 0802 	mov.w	r8, #2
 801203a:	fb95 f5f8 	sdiv	r5, r5, r8
 801203e:	b2ad      	uxth	r5, r5
 8012040:	fb90 f0f8 	sdiv	r0, r0, r8
 8012044:	1a2d      	subs	r5, r5, r0
 8012046:	8735      	strh	r5, [r6, #56]	; 0x38
 8012048:	4638      	mov	r0, r7
 801204a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801204e:	fb94 f4f8 	sdiv	r4, r4, r8
 8012052:	f006 f9eb 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012056:	b2a4      	uxth	r4, r4
 8012058:	fb90 f0f8 	sdiv	r0, r0, r8
 801205c:	1a24      	subs	r4, r4, r0
 801205e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012064 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012068:	4604      	mov	r4, r0
 801206a:	b08c      	sub	sp, #48	; 0x30
 801206c:	460d      	mov	r5, r1
 801206e:	f7ff fedb 	bl	8011e28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012072:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012076:	2b00      	cmp	r3, #0
 8012078:	d05d      	beq.n	8012136 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801207a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801207c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012080:	a805      	add	r0, sp, #20
 8012082:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012086:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801208a:	f006 f99b 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801208e:	4606      	mov	r6, r0
 8012090:	a805      	add	r0, sp, #20
 8012092:	f006 f9cb 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012096:	6869      	ldr	r1, [r5, #4]
 8012098:	f8ad 001e 	strh.w	r0, [sp, #30]
 801209c:	6828      	ldr	r0, [r5, #0]
 801209e:	f8ad 8018 	strh.w	r8, [sp, #24]
 80120a2:	ab08      	add	r3, sp, #32
 80120a4:	ad08      	add	r5, sp, #32
 80120a6:	c303      	stmia	r3!, {r0, r1}
 80120a8:	a906      	add	r1, sp, #24
 80120aa:	4628      	mov	r0, r5
 80120ac:	f8ad 701a 	strh.w	r7, [sp, #26]
 80120b0:	f8ad 601c 	strh.w	r6, [sp, #28]
 80120b4:	f7fd fc62 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 80120b8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80120bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80120c0:	429a      	cmp	r2, r3
 80120c2:	d035      	beq.n	8012130 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80120c4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80120c8:	2b00      	cmp	r3, #0
 80120ca:	dd31      	ble.n	8012130 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80120cc:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80120d0:	2b00      	cmp	r3, #0
 80120d2:	dd2d      	ble.n	8012130 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80120d4:	2300      	movs	r3, #0
 80120d6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80120da:	6823      	ldr	r3, [r4, #0]
 80120dc:	a90a      	add	r1, sp, #40	; 0x28
 80120de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120e0:	4620      	mov	r0, r4
 80120e2:	4798      	blx	r3
 80120e4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80120e8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80120ea:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80120ee:	1a9b      	subs	r3, r3, r2
 80120f0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80120f4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80120f6:	1ac9      	subs	r1, r1, r3
 80120f8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80120fc:	490f      	ldr	r1, [pc, #60]	; (801213c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80120fe:	6809      	ldr	r1, [r1, #0]
 8012100:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8012104:	b108      	cbz	r0, 801210a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012106:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8012108:	b900      	cbnz	r0, 801210c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801210a:	6888      	ldr	r0, [r1, #8]
 801210c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8012110:	440b      	add	r3, r1
 8012112:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012116:	2601      	movs	r6, #1
 8012118:	440a      	add	r2, r1
 801211a:	6801      	ldr	r1, [r0, #0]
 801211c:	9602      	str	r6, [sp, #8]
 801211e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012122:	e9cd 5400 	strd	r5, r4, [sp]
 8012126:	b21b      	sxth	r3, r3
 8012128:	688c      	ldr	r4, [r1, #8]
 801212a:	b212      	sxth	r2, r2
 801212c:	a905      	add	r1, sp, #20
 801212e:	47a0      	blx	r4
 8012130:	b00c      	add	sp, #48	; 0x30
 8012132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012136:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012138:	e7a0      	b.n	801207c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801213a:	bf00      	nop
 801213c:	20012da4 	.word	0x20012da4

08012140 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012140:	b510      	push	{r4, lr}
 8012142:	2101      	movs	r1, #1
 8012144:	2200      	movs	r2, #0
 8012146:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801214a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801214e:	4c0e      	ldr	r4, [pc, #56]	; (8012188 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012150:	8082      	strh	r2, [r0, #4]
 8012152:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012156:	80c2      	strh	r2, [r0, #6]
 8012158:	8102      	strh	r2, [r0, #8]
 801215a:	8142      	strh	r2, [r0, #10]
 801215c:	8182      	strh	r2, [r0, #12]
 801215e:	81c2      	strh	r2, [r0, #14]
 8012160:	8202      	strh	r2, [r0, #16]
 8012162:	8242      	strh	r2, [r0, #18]
 8012164:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012168:	61c2      	str	r2, [r0, #28]
 801216a:	8402      	strh	r2, [r0, #32]
 801216c:	8442      	strh	r2, [r0, #34]	; 0x22
 801216e:	6282      	str	r2, [r0, #40]	; 0x28
 8012170:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012174:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012176:	8601      	strh	r1, [r0, #48]	; 0x30
 8012178:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801217c:	6004      	str	r4, [r0, #0]
 801217e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012180:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012182:	8702      	strh	r2, [r0, #56]	; 0x38
 8012184:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012186:	bd10      	pop	{r4, pc}
 8012188:	0802df20 	.word	0x0802df20

0801218c <_ZN8touchgfx5ImageD1Ev>:
 801218c:	4770      	bx	lr

0801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801218e:	b570      	push	{r4, r5, r6, lr}
 8012190:	880b      	ldrh	r3, [r1, #0]
 8012192:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012194:	4604      	mov	r4, r0
 8012196:	4608      	mov	r0, r1
 8012198:	460d      	mov	r5, r1
 801219a:	f006 f913 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801219e:	4606      	mov	r6, r0
 80121a0:	4628      	mov	r0, r5
 80121a2:	f006 f943 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121a6:	6823      	ldr	r3, [r4, #0]
 80121a8:	4605      	mov	r5, r0
 80121aa:	4631      	mov	r1, r6
 80121ac:	4620      	mov	r0, r4
 80121ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80121b0:	4798      	blx	r3
 80121b2:	6823      	ldr	r3, [r4, #0]
 80121b4:	4629      	mov	r1, r5
 80121b6:	4620      	mov	r0, r4
 80121b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80121ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121be:	4718      	bx	r3

080121c0 <_ZN8touchgfx5ImageD0Ev>:
 80121c0:	b510      	push	{r4, lr}
 80121c2:	212c      	movs	r1, #44	; 0x2c
 80121c4:	4604      	mov	r4, r0
 80121c6:	f016 fd62 	bl	8028c8e <_ZdlPvj>
 80121ca:	4620      	mov	r0, r4
 80121cc:	bd10      	pop	{r4, pc}

080121ce <_ZNK8touchgfx5Image12getSolidRectEv>:
 80121ce:	b510      	push	{r4, lr}
 80121d0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80121d4:	2bff      	cmp	r3, #255	; 0xff
 80121d6:	4604      	mov	r4, r0
 80121d8:	d006      	beq.n	80121e8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80121da:	2300      	movs	r3, #0
 80121dc:	8003      	strh	r3, [r0, #0]
 80121de:	8043      	strh	r3, [r0, #2]
 80121e0:	8083      	strh	r3, [r0, #4]
 80121e2:	80c3      	strh	r3, [r0, #6]
 80121e4:	4620      	mov	r0, r4
 80121e6:	bd10      	pop	{r4, pc}
 80121e8:	3126      	adds	r1, #38	; 0x26
 80121ea:	f006 f953 	bl	8018494 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80121ee:	e7f9      	b.n	80121e4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080121f0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80121f0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80121f4:	b12a      	cbz	r2, 8012202 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80121f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80121fa:	b112      	cbz	r2, 8012202 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80121fc:	6803      	ldr	r3, [r0, #0]
 80121fe:	695b      	ldr	r3, [r3, #20]
 8012200:	4718      	bx	r3
 8012202:	4770      	bx	lr

08012204 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012208:	4604      	mov	r4, r0
 801220a:	b088      	sub	sp, #32
 801220c:	f854 3b26 	ldr.w	r3, [r4], #38
 8012210:	2500      	movs	r5, #0
 8012212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012214:	460f      	mov	r7, r1
 8012216:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801221a:	a904      	add	r1, sp, #16
 801221c:	4606      	mov	r6, r0
 801221e:	4798      	blx	r3
 8012220:	4620      	mov	r0, r4
 8012222:	f006 f8cf 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012226:	4680      	mov	r8, r0
 8012228:	4620      	mov	r0, r4
 801222a:	f006 f8ff 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801222e:	9506      	str	r5, [sp, #24]
 8012230:	ad06      	add	r5, sp, #24
 8012232:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012236:	4639      	mov	r1, r7
 8012238:	4628      	mov	r0, r5
 801223a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801223e:	f7fd fb9d 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8012242:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012246:	2b00      	cmp	r3, #0
 8012248:	dd19      	ble.n	801227e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801224a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801224e:	2b00      	cmp	r3, #0
 8012250:	dd15      	ble.n	801227e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012252:	4b0c      	ldr	r3, [pc, #48]	; (8012284 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012254:	681b      	ldr	r3, [r3, #0]
 8012256:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801225a:	b10a      	cbz	r2, 8012260 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801225c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801225e:	b900      	cbnz	r0, 8012262 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012260:	6898      	ldr	r0, [r3, #8]
 8012262:	6801      	ldr	r1, [r0, #0]
 8012264:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012268:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801226c:	2701      	movs	r7, #1
 801226e:	9702      	str	r7, [sp, #8]
 8012270:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012274:	e9cd 5600 	strd	r5, r6, [sp]
 8012278:	688d      	ldr	r5, [r1, #8]
 801227a:	4621      	mov	r1, r4
 801227c:	47a8      	blx	r5
 801227e:	b008      	add	sp, #32
 8012280:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012284:	20012da4 	.word	0x20012da4

08012288 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012288:	4770      	bx	lr

0801228a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801228a:	b510      	push	{r4, lr}
 801228c:	2148      	movs	r1, #72	; 0x48
 801228e:	4604      	mov	r4, r0
 8012290:	f016 fcfd 	bl	8028c8e <_ZdlPvj>
 8012294:	4620      	mov	r0, r4
 8012296:	bd10      	pop	{r4, pc}

08012298 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012298:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801229c:	b08d      	sub	sp, #52	; 0x34
 801229e:	4604      	mov	r4, r0
 80122a0:	460f      	mov	r7, r1
 80122a2:	f7ff fdc1 	bl	8011e28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80122a6:	4a55      	ldr	r2, [pc, #340]	; (80123fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80122a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80122aa:	8812      	ldrh	r2, [r2, #0]
 80122ac:	429a      	cmp	r2, r3
 80122ae:	f240 8082 	bls.w	80123b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80122b2:	4d53      	ldr	r5, [pc, #332]	; (8012400 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80122b4:	682a      	ldr	r2, [r5, #0]
 80122b6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80122ba:	4b52      	ldr	r3, [pc, #328]	; (8012404 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80122bc:	681b      	ldr	r3, [r3, #0]
 80122be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80122c2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80122c6:	2200      	movs	r2, #0
 80122c8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80122cc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80122d0:	2a03      	cmp	r2, #3
 80122d2:	d811      	bhi.n	80122f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80122d4:	e8df f002 	tbb	[pc, r2]
 80122d8:	89727902 	.word	0x89727902
 80122dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80122e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80122e4:	1ad2      	subs	r2, r2, r3
 80122e6:	2002      	movs	r0, #2
 80122e8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80122ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80122f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80122f4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80122f8:	f10d 080c 	add.w	r8, sp, #12
 80122fc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012300:	f10d 0914 	add.w	r9, sp, #20
 8012304:	e889 0003 	stmia.w	r9, {r0, r1}
 8012308:	4639      	mov	r1, r7
 801230a:	4648      	mov	r0, r9
 801230c:	f7fd fb36 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8012310:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012314:	2b00      	cmp	r3, #0
 8012316:	dd4e      	ble.n	80123b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012318:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801231c:	2b00      	cmp	r3, #0
 801231e:	dd4a      	ble.n	80123b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012320:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012324:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012328:	1a9b      	subs	r3, r3, r2
 801232a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801232e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012332:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012336:	1a9b      	subs	r3, r3, r2
 8012338:	f8ad 3016 	strh.w	r3, [sp, #22]
 801233c:	6823      	ldr	r3, [r4, #0]
 801233e:	4641      	mov	r1, r8
 8012340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012342:	4620      	mov	r0, r4
 8012344:	4798      	blx	r3
 8012346:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801234a:	2b00      	cmp	r3, #0
 801234c:	d053      	beq.n	80123f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801234e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012350:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012352:	682b      	ldr	r3, [r5, #0]
 8012354:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012358:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801235c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012360:	785b      	ldrb	r3, [r3, #1]
 8012362:	9209      	str	r2, [sp, #36]	; 0x24
 8012364:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012368:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801236c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012370:	2300      	movs	r3, #0
 8012372:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012376:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801237a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801237e:	4b22      	ldr	r3, [pc, #136]	; (8012408 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012380:	9607      	str	r6, [sp, #28]
 8012382:	681b      	ldr	r3, [r3, #0]
 8012384:	f88d 5020 	strb.w	r5, [sp, #32]
 8012388:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801238c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012390:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012394:	b10a      	cbz	r2, 801239a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012396:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012398:	b904      	cbnz	r4, 801239c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801239a:	689c      	ldr	r4, [r3, #8]
 801239c:	4b1b      	ldr	r3, [pc, #108]	; (801240c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801239e:	6818      	ldr	r0, [r3, #0]
 80123a0:	f7f5 fe72 	bl	8008088 <_ZNK8touchgfx5Texts7getTextEt>
 80123a4:	ab07      	add	r3, sp, #28
 80123a6:	9001      	str	r0, [sp, #4]
 80123a8:	9300      	str	r3, [sp, #0]
 80123aa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80123ae:	464b      	mov	r3, r9
 80123b0:	4620      	mov	r0, r4
 80123b2:	f7f5 fe1b 	bl	8007fec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80123b6:	b00d      	add	sp, #52	; 0x34
 80123b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80123bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80123c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80123c4:	1ad2      	subs	r2, r2, r3
 80123c6:	3201      	adds	r2, #1
 80123c8:	e78d      	b.n	80122e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80123ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80123ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80123d2:	1ad2      	subs	r2, r2, r3
 80123d4:	3201      	adds	r2, #1
 80123d6:	2002      	movs	r0, #2
 80123d8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80123dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80123e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80123e4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80123e8:	e786      	b.n	80122f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80123ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80123ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80123f2:	1ad2      	subs	r2, r2, r3
 80123f4:	e7ef      	b.n	80123d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80123f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80123f8:	e7aa      	b.n	8012350 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80123fa:	bf00      	nop
 80123fc:	20012e00 	.word	0x20012e00
 8012400:	20012dfc 	.word	0x20012dfc
 8012404:	20012e04 	.word	0x20012e04
 8012408:	20012da4 	.word	0x20012da4
 801240c:	20012e08 	.word	0x20012e08

08012410 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012410:	b510      	push	{r4, lr}
 8012412:	2101      	movs	r1, #1
 8012414:	4c13      	ldr	r4, [pc, #76]	; (8012464 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012416:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801241a:	2200      	movs	r2, #0
 801241c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012420:	6004      	str	r4, [r0, #0]
 8012422:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012426:	4c10      	ldr	r4, [pc, #64]	; (8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012428:	8082      	strh	r2, [r0, #4]
 801242a:	80c2      	strh	r2, [r0, #6]
 801242c:	8102      	strh	r2, [r0, #8]
 801242e:	8142      	strh	r2, [r0, #10]
 8012430:	8182      	strh	r2, [r0, #12]
 8012432:	81c2      	strh	r2, [r0, #14]
 8012434:	8202      	strh	r2, [r0, #16]
 8012436:	8242      	strh	r2, [r0, #18]
 8012438:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801243c:	61c2      	str	r2, [r0, #28]
 801243e:	8402      	strh	r2, [r0, #32]
 8012440:	8442      	strh	r2, [r0, #34]	; 0x22
 8012442:	6282      	str	r2, [r0, #40]	; 0x28
 8012444:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012448:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801244a:	8601      	strh	r1, [r0, #48]	; 0x30
 801244c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012450:	6344      	str	r4, [r0, #52]	; 0x34
 8012452:	8701      	strh	r1, [r0, #56]	; 0x38
 8012454:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012458:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801245c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012460:	bd10      	pop	{r4, pc}
 8012462:	bf00      	nop
 8012464:	0802e004 	.word	0x0802e004
 8012468:	0802b458 	.word	0x0802b458

0801246c <_ZN8touchgfx7OutlineD1Ev>:
 801246c:	4770      	bx	lr

0801246e <_ZN8touchgfx7OutlineD0Ev>:
 801246e:	b510      	push	{r4, lr}
 8012470:	2130      	movs	r1, #48	; 0x30
 8012472:	4604      	mov	r4, r0
 8012474:	f016 fc0b 	bl	8028c8e <_ZdlPvj>
 8012478:	4620      	mov	r0, r4
 801247a:	bd10      	pop	{r4, pc}

0801247c <_ZN8touchgfx7Outline5resetEv>:
 801247c:	b510      	push	{r4, lr}
 801247e:	4604      	mov	r4, r0
 8012480:	f000 fe96 	bl	80131b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012484:	60e0      	str	r0, [r4, #12]
 8012486:	f000 fe99 	bl	80131bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801248a:	68e3      	ldr	r3, [r4, #12]
 801248c:	6123      	str	r3, [r4, #16]
 801248e:	08c0      	lsrs	r0, r0, #3
 8012490:	2200      	movs	r2, #0
 8012492:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012496:	3801      	subs	r0, #1
 8012498:	6060      	str	r0, [r4, #4]
 801249a:	60a2      	str	r2, [r4, #8]
 801249c:	8019      	strh	r1, [r3, #0]
 801249e:	8059      	strh	r1, [r3, #2]
 80124a0:	809a      	strh	r2, [r3, #4]
 80124a2:	80da      	strh	r2, [r3, #6]
 80124a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80124a6:	f023 0301 	bic.w	r3, r3, #1
 80124aa:	f043 0302 	orr.w	r3, r3, #2
 80124ae:	6263      	str	r3, [r4, #36]	; 0x24
 80124b0:	bd10      	pop	{r4, pc}
	...

080124b4 <_ZN8touchgfx7OutlineC1Ev>:
 80124b4:	b510      	push	{r4, lr}
 80124b6:	4b0a      	ldr	r3, [pc, #40]	; (80124e0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80124b8:	6003      	str	r3, [r0, #0]
 80124ba:	2300      	movs	r3, #0
 80124bc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80124c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80124c4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80124c8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80124cc:	6243      	str	r3, [r0, #36]	; 0x24
 80124ce:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80124d2:	4604      	mov	r4, r0
 80124d4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80124d8:	f7ff ffd0 	bl	801247c <_ZN8touchgfx7Outline5resetEv>
 80124dc:	4620      	mov	r0, r4
 80124de:	bd10      	pop	{r4, pc}
 80124e0:	0802e078 	.word	0x0802e078

080124e4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80124e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124e8:	b093      	sub	sp, #76	; 0x4c
 80124ea:	1156      	asrs	r6, r2, #5
 80124ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80124ee:	9305      	str	r3, [sp, #20]
 80124f0:	f004 051f 	and.w	r5, r4, #31
 80124f4:	1153      	asrs	r3, r2, #5
 80124f6:	9504      	str	r5, [sp, #16]
 80124f8:	1165      	asrs	r5, r4, #5
 80124fa:	9303      	str	r3, [sp, #12]
 80124fc:	42ae      	cmp	r6, r5
 80124fe:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012502:	9306      	str	r3, [sp, #24]
 8012504:	f002 031f 	and.w	r3, r2, #31
 8012508:	f040 80f8 	bne.w	80126fc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801250c:	9c04      	ldr	r4, [sp, #16]
 801250e:	9a05      	ldr	r2, [sp, #20]
 8012510:	42a3      	cmp	r3, r4
 8012512:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012516:	6902      	ldr	r2, [r0, #16]
 8012518:	d125      	bne.n	8012566 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801251a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801251e:	459e      	cmp	lr, r3
 8012520:	d103      	bne.n	801252a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012522:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012526:	429e      	cmp	r6, r3
 8012528:	d035      	beq.n	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801252a:	88d1      	ldrh	r1, [r2, #6]
 801252c:	8893      	ldrh	r3, [r2, #4]
 801252e:	430b      	orrs	r3, r1
 8012530:	d010      	beq.n	8012554 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012532:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012536:	2b00      	cmp	r3, #0
 8012538:	db0c      	blt.n	8012554 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801253a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801253c:	428b      	cmp	r3, r1
 801253e:	da09      	bge.n	8012554 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012540:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012544:	428b      	cmp	r3, r1
 8012546:	bf38      	it	cc
 8012548:	3208      	addcc	r2, #8
 801254a:	f103 0301 	add.w	r3, r3, #1
 801254e:	bf38      	it	cc
 8012550:	6102      	strcc	r2, [r0, #16]
 8012552:	6083      	str	r3, [r0, #8]
 8012554:	6903      	ldr	r3, [r0, #16]
 8012556:	9a03      	ldr	r2, [sp, #12]
 8012558:	f8a3 e000 	strh.w	lr, [r3]
 801255c:	805a      	strh	r2, [r3, #2]
 801255e:	2200      	movs	r2, #0
 8012560:	809a      	strh	r2, [r3, #4]
 8012562:	80da      	strh	r2, [r3, #6]
 8012564:	e017      	b.n	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012566:	9c05      	ldr	r4, [sp, #20]
 8012568:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801256c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012570:	f004 041f 	and.w	r4, r4, #31
 8012574:	114e      	asrs	r6, r1, #5
 8012576:	9402      	str	r4, [sp, #8]
 8012578:	9c04      	ldr	r4, [sp, #16]
 801257a:	4576      	cmp	r6, lr
 801257c:	f001 0c1f 	and.w	ip, r1, #31
 8012580:	eba4 0403 	sub.w	r4, r4, r3
 8012584:	d10a      	bne.n	801259c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012586:	9b02      	ldr	r3, [sp, #8]
 8012588:	449c      	add	ip, r3
 801258a:	44a0      	add	r8, r4
 801258c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012590:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012594:	80d4      	strh	r4, [r2, #6]
 8012596:	b013      	add	sp, #76	; 0x4c
 8012598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801259c:	9d05      	ldr	r5, [sp, #20]
 801259e:	1a69      	subs	r1, r5, r1
 80125a0:	bf5b      	ittet	pl
 80125a2:	f1cc 0520 	rsbpl	r5, ip, #32
 80125a6:	436c      	mulpl	r4, r5
 80125a8:	2500      	movmi	r5, #0
 80125aa:	2520      	movpl	r5, #32
 80125ac:	bf44      	itt	mi
 80125ae:	fb04 f40c 	mulmi.w	r4, r4, ip
 80125b2:	4249      	negmi	r1, r1
 80125b4:	9501      	str	r5, [sp, #4]
 80125b6:	9f01      	ldr	r7, [sp, #4]
 80125b8:	fb94 f5f1 	sdiv	r5, r4, r1
 80125bc:	fb01 4415 	mls	r4, r1, r5, r4
 80125c0:	bf54      	ite	pl
 80125c2:	f04f 0901 	movpl.w	r9, #1
 80125c6:	f04f 39ff 	movmi.w	r9, #4294967295
 80125ca:	2c00      	cmp	r4, #0
 80125cc:	bfb8      	it	lt
 80125ce:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80125d2:	44bc      	add	ip, r7
 80125d4:	44a8      	add	r8, r5
 80125d6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80125da:	f8a2 8004 	strh.w	r8, [r2, #4]
 80125de:	f8a2 c006 	strh.w	ip, [r2, #6]
 80125e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80125e6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80125ea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80125ee:	bfb8      	it	lt
 80125f0:	1864      	addlt	r4, r4, r1
 80125f2:	ea58 0202 	orrs.w	r2, r8, r2
 80125f6:	444e      	add	r6, r9
 80125f8:	d011      	beq.n	801261e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80125fa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80125fe:	f1b8 0f00 	cmp.w	r8, #0
 8012602:	db0c      	blt.n	801261e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012604:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012606:	4590      	cmp	r8, r2
 8012608:	da09      	bge.n	801261e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801260a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801260e:	4590      	cmp	r8, r2
 8012610:	bf3c      	itt	cc
 8012612:	f10c 0208 	addcc.w	r2, ip, #8
 8012616:	6102      	strcc	r2, [r0, #16]
 8012618:	f108 0201 	add.w	r2, r8, #1
 801261c:	6082      	str	r2, [r0, #8]
 801261e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012622:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012626:	f8ac 6000 	strh.w	r6, [ip]
 801262a:	2700      	movs	r7, #0
 801262c:	45b6      	cmp	lr, r6
 801262e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012632:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012636:	f8ac 7006 	strh.w	r7, [ip, #6]
 801263a:	442b      	add	r3, r5
 801263c:	d04d      	beq.n	80126da <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801263e:	9f04      	ldr	r7, [sp, #16]
 8012640:	1aff      	subs	r7, r7, r3
 8012642:	443d      	add	r5, r7
 8012644:	016d      	lsls	r5, r5, #5
 8012646:	fb95 f8f1 	sdiv	r8, r5, r1
 801264a:	fb01 5518 	mls	r5, r1, r8, r5
 801264e:	2d00      	cmp	r5, #0
 8012650:	bfb8      	it	lt
 8012652:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012656:	f108 0701 	add.w	r7, r8, #1
 801265a:	bfb8      	it	lt
 801265c:	186d      	addlt	r5, r5, r1
 801265e:	1a64      	subs	r4, r4, r1
 8012660:	9703      	str	r7, [sp, #12]
 8012662:	f04f 0a00 	mov.w	sl, #0
 8012666:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801266a:	1964      	adds	r4, r4, r5
 801266c:	bf58      	it	pl
 801266e:	9f03      	ldrpl	r7, [sp, #12]
 8012670:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012674:	bf48      	it	mi
 8012676:	4647      	movmi	r7, r8
 8012678:	44bb      	add	fp, r7
 801267a:	f8ac b004 	strh.w	fp, [ip, #4]
 801267e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012682:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012686:	f8ac b006 	strh.w	fp, [ip, #6]
 801268a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801268e:	443b      	add	r3, r7
 8012690:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012694:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012698:	bf58      	it	pl
 801269a:	1a64      	subpl	r4, r4, r1
 801269c:	ea5b 0707 	orrs.w	r7, fp, r7
 80126a0:	444e      	add	r6, r9
 80126a2:	d011      	beq.n	80126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126a4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80126a8:	f1bb 0f00 	cmp.w	fp, #0
 80126ac:	db0c      	blt.n	80126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126ae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80126b0:	45bb      	cmp	fp, r7
 80126b2:	da09      	bge.n	80126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126b4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80126b8:	45bb      	cmp	fp, r7
 80126ba:	bf3c      	itt	cc
 80126bc:	f10c 0708 	addcc.w	r7, ip, #8
 80126c0:	6107      	strcc	r7, [r0, #16]
 80126c2:	f10b 0701 	add.w	r7, fp, #1
 80126c6:	6087      	str	r7, [r0, #8]
 80126c8:	6907      	ldr	r7, [r0, #16]
 80126ca:	45b6      	cmp	lr, r6
 80126cc:	803e      	strh	r6, [r7, #0]
 80126ce:	807a      	strh	r2, [r7, #2]
 80126d0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80126d4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80126d8:	d1c5      	bne.n	8012666 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80126da:	9a04      	ldr	r2, [sp, #16]
 80126dc:	1ad3      	subs	r3, r2, r3
 80126de:	6902      	ldr	r2, [r0, #16]
 80126e0:	8891      	ldrh	r1, [r2, #4]
 80126e2:	88d6      	ldrh	r6, [r2, #6]
 80126e4:	4419      	add	r1, r3
 80126e6:	8091      	strh	r1, [r2, #4]
 80126e8:	9902      	ldr	r1, [sp, #8]
 80126ea:	f101 0c20 	add.w	ip, r1, #32
 80126ee:	9901      	ldr	r1, [sp, #4]
 80126f0:	ebac 0c01 	sub.w	ip, ip, r1
 80126f4:	fb03 630c 	mla	r3, r3, ip, r6
 80126f8:	80d3      	strh	r3, [r2, #6]
 80126fa:	e74c      	b.n	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80126fc:	9d05      	ldr	r5, [sp, #20]
 80126fe:	1aa2      	subs	r2, r4, r2
 8012700:	eba5 0501 	sub.w	r5, r5, r1
 8012704:	9508      	str	r5, [sp, #32]
 8012706:	9202      	str	r2, [sp, #8]
 8012708:	f140 8128 	bpl.w	801295c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801270c:	9a03      	ldr	r2, [sp, #12]
 801270e:	2a00      	cmp	r2, #0
 8012710:	f6ff af41 	blt.w	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012714:	9a02      	ldr	r2, [sp, #8]
 8012716:	4252      	negs	r2, r2
 8012718:	9202      	str	r2, [sp, #8]
 801271a:	9a06      	ldr	r2, [sp, #24]
 801271c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012720:	f04f 34ff 	mov.w	r4, #4294967295
 8012724:	9206      	str	r2, [sp, #24]
 8012726:	462a      	mov	r2, r5
 8012728:	940b      	str	r4, [sp, #44]	; 0x2c
 801272a:	435a      	muls	r2, r3
 801272c:	2400      	movs	r4, #0
 801272e:	9d02      	ldr	r5, [sp, #8]
 8012730:	9401      	str	r4, [sp, #4]
 8012732:	9c02      	ldr	r4, [sp, #8]
 8012734:	fb92 f4f4 	sdiv	r4, r2, r4
 8012738:	fb05 2214 	mls	r2, r5, r4, r2
 801273c:	2a00      	cmp	r2, #0
 801273e:	9207      	str	r2, [sp, #28]
 8012740:	bfbc      	itt	lt
 8012742:	1952      	addlt	r2, r2, r5
 8012744:	9207      	strlt	r2, [sp, #28]
 8012746:	9a01      	ldr	r2, [sp, #4]
 8012748:	6905      	ldr	r5, [r0, #16]
 801274a:	bfb8      	it	lt
 801274c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012750:	eb04 0901 	add.w	r9, r4, r1
 8012754:	429a      	cmp	r2, r3
 8012756:	ea4f 1669 	mov.w	r6, r9, asr #5
 801275a:	f040 8112 	bne.w	8012982 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801275e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012762:	429e      	cmp	r6, r3
 8012764:	d104      	bne.n	8012770 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012766:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801276a:	9a03      	ldr	r2, [sp, #12]
 801276c:	429a      	cmp	r2, r3
 801276e:	d01b      	beq.n	80127a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012770:	88ea      	ldrh	r2, [r5, #6]
 8012772:	88ab      	ldrh	r3, [r5, #4]
 8012774:	4313      	orrs	r3, r2
 8012776:	d010      	beq.n	801279a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012778:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801277c:	2a00      	cmp	r2, #0
 801277e:	db0c      	blt.n	801279a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012780:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012782:	429a      	cmp	r2, r3
 8012784:	da09      	bge.n	801279a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012786:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801278a:	429a      	cmp	r2, r3
 801278c:	bf38      	it	cc
 801278e:	3508      	addcc	r5, #8
 8012790:	f102 0201 	add.w	r2, r2, #1
 8012794:	bf38      	it	cc
 8012796:	6105      	strcc	r5, [r0, #16]
 8012798:	6082      	str	r2, [r0, #8]
 801279a:	6903      	ldr	r3, [r0, #16]
 801279c:	9a03      	ldr	r2, [sp, #12]
 801279e:	805a      	strh	r2, [r3, #2]
 80127a0:	2200      	movs	r2, #0
 80127a2:	801e      	strh	r6, [r3, #0]
 80127a4:	809a      	strh	r2, [r3, #4]
 80127a6:	80da      	strh	r2, [r3, #6]
 80127a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80127aa:	9a03      	ldr	r2, [sp, #12]
 80127ac:	6901      	ldr	r1, [r0, #16]
 80127ae:	441a      	add	r2, r3
 80127b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80127b4:	42b3      	cmp	r3, r6
 80127b6:	d103      	bne.n	80127c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80127b8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80127bc:	429a      	cmp	r2, r3
 80127be:	d01a      	beq.n	80127f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80127c0:	88cc      	ldrh	r4, [r1, #6]
 80127c2:	888b      	ldrh	r3, [r1, #4]
 80127c4:	4323      	orrs	r3, r4
 80127c6:	d010      	beq.n	80127ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80127c8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80127cc:	2c00      	cmp	r4, #0
 80127ce:	db0c      	blt.n	80127ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80127d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80127d2:	429c      	cmp	r4, r3
 80127d4:	da09      	bge.n	80127ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80127d6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80127da:	429c      	cmp	r4, r3
 80127dc:	bf38      	it	cc
 80127de:	3108      	addcc	r1, #8
 80127e0:	f104 0401 	add.w	r4, r4, #1
 80127e4:	bf38      	it	cc
 80127e6:	6101      	strcc	r1, [r0, #16]
 80127e8:	6084      	str	r4, [r0, #8]
 80127ea:	6903      	ldr	r3, [r0, #16]
 80127ec:	2100      	movs	r1, #0
 80127ee:	801e      	strh	r6, [r3, #0]
 80127f0:	805a      	strh	r2, [r3, #2]
 80127f2:	8099      	strh	r1, [r3, #4]
 80127f4:	80d9      	strh	r1, [r3, #6]
 80127f6:	9b06      	ldr	r3, [sp, #24]
 80127f8:	4293      	cmp	r3, r2
 80127fa:	f000 8082 	beq.w	8012902 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80127fe:	9b08      	ldr	r3, [sp, #32]
 8012800:	9c02      	ldr	r4, [sp, #8]
 8012802:	9902      	ldr	r1, [sp, #8]
 8012804:	015b      	lsls	r3, r3, #5
 8012806:	fb93 f1f1 	sdiv	r1, r3, r1
 801280a:	fb04 3311 	mls	r3, r4, r1, r3
 801280e:	2b00      	cmp	r3, #0
 8012810:	9103      	str	r1, [sp, #12]
 8012812:	9308      	str	r3, [sp, #32]
 8012814:	da04      	bge.n	8012820 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012816:	1e4b      	subs	r3, r1, #1
 8012818:	9303      	str	r3, [sp, #12]
 801281a:	9b08      	ldr	r3, [sp, #32]
 801281c:	4423      	add	r3, r4
 801281e:	9308      	str	r3, [sp, #32]
 8012820:	9b07      	ldr	r3, [sp, #28]
 8012822:	9902      	ldr	r1, [sp, #8]
 8012824:	1a5b      	subs	r3, r3, r1
 8012826:	9307      	str	r3, [sp, #28]
 8012828:	9b01      	ldr	r3, [sp, #4]
 801282a:	f1c3 0320 	rsb	r3, r3, #32
 801282e:	930e      	str	r3, [sp, #56]	; 0x38
 8012830:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012832:	9b01      	ldr	r3, [sp, #4]
 8012834:	1a5b      	subs	r3, r3, r1
 8012836:	464f      	mov	r7, r9
 8012838:	930a      	str	r3, [sp, #40]	; 0x28
 801283a:	2600      	movs	r6, #0
 801283c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012840:	185b      	adds	r3, r3, r1
 8012842:	bf58      	it	pl
 8012844:	9902      	ldrpl	r1, [sp, #8]
 8012846:	9307      	str	r3, [sp, #28]
 8012848:	bf5d      	ittte	pl
 801284a:	1a5b      	subpl	r3, r3, r1
 801284c:	9307      	strpl	r3, [sp, #28]
 801284e:	9b03      	ldrpl	r3, [sp, #12]
 8012850:	9903      	ldrmi	r1, [sp, #12]
 8012852:	bf58      	it	pl
 8012854:	1c59      	addpl	r1, r3, #1
 8012856:	4489      	add	r9, r1
 8012858:	2a00      	cmp	r2, #0
 801285a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801285e:	db2e      	blt.n	80128be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012860:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012862:	4293      	cmp	r3, r2
 8012864:	dd2b      	ble.n	80128be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012866:	9c01      	ldr	r4, [sp, #4]
 8012868:	6905      	ldr	r5, [r0, #16]
 801286a:	46a0      	mov	r8, r4
 801286c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801286e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012872:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012876:	45a0      	cmp	r8, r4
 8012878:	f040 814f 	bne.w	8012b1a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801287c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012880:	4551      	cmp	r1, sl
 8012882:	d103      	bne.n	801288c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012884:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012888:	4291      	cmp	r1, r2
 801288a:	d018      	beq.n	80128be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801288c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012890:	d00f      	beq.n	80128b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012892:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012896:	2900      	cmp	r1, #0
 8012898:	db0b      	blt.n	80128b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801289a:	428b      	cmp	r3, r1
 801289c:	dd09      	ble.n	80128b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801289e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80128a2:	4299      	cmp	r1, r3
 80128a4:	bf38      	it	cc
 80128a6:	3508      	addcc	r5, #8
 80128a8:	f101 0101 	add.w	r1, r1, #1
 80128ac:	bf38      	it	cc
 80128ae:	6105      	strcc	r5, [r0, #16]
 80128b0:	6081      	str	r1, [r0, #8]
 80128b2:	6903      	ldr	r3, [r0, #16]
 80128b4:	f8a3 a000 	strh.w	sl, [r3]
 80128b8:	805a      	strh	r2, [r3, #2]
 80128ba:	809e      	strh	r6, [r3, #4]
 80128bc:	80de      	strh	r6, [r3, #6]
 80128be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80128c0:	6901      	ldr	r1, [r0, #16]
 80128c2:	441a      	add	r2, r3
 80128c4:	88cc      	ldrh	r4, [r1, #6]
 80128c6:	888b      	ldrh	r3, [r1, #4]
 80128c8:	4323      	orrs	r3, r4
 80128ca:	d010      	beq.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80128cc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80128d0:	2c00      	cmp	r4, #0
 80128d2:	db0c      	blt.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80128d4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80128d6:	429c      	cmp	r4, r3
 80128d8:	da09      	bge.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80128da:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80128de:	429c      	cmp	r4, r3
 80128e0:	bf38      	it	cc
 80128e2:	3108      	addcc	r1, #8
 80128e4:	f104 0401 	add.w	r4, r4, #1
 80128e8:	bf38      	it	cc
 80128ea:	6101      	strcc	r1, [r0, #16]
 80128ec:	6084      	str	r4, [r0, #8]
 80128ee:	6903      	ldr	r3, [r0, #16]
 80128f0:	f8a3 a000 	strh.w	sl, [r3]
 80128f4:	805a      	strh	r2, [r3, #2]
 80128f6:	809e      	strh	r6, [r3, #4]
 80128f8:	80de      	strh	r6, [r3, #6]
 80128fa:	9b06      	ldr	r3, [sp, #24]
 80128fc:	4293      	cmp	r3, r2
 80128fe:	464f      	mov	r7, r9
 8012900:	d19c      	bne.n	801283c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012902:	9b01      	ldr	r3, [sp, #4]
 8012904:	6907      	ldr	r7, [r0, #16]
 8012906:	f1c3 0620 	rsb	r6, r3, #32
 801290a:	9b05      	ldr	r3, [sp, #20]
 801290c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012910:	9b04      	ldr	r3, [sp, #16]
 8012912:	429e      	cmp	r6, r3
 8012914:	f040 81cc 	bne.w	8012cb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012918:	f9b7 3000 	ldrsh.w	r3, [r7]
 801291c:	459e      	cmp	lr, r3
 801291e:	d104      	bne.n	801292a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012920:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012924:	429a      	cmp	r2, r3
 8012926:	f43f ae36 	beq.w	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801292a:	88f9      	ldrh	r1, [r7, #6]
 801292c:	88bb      	ldrh	r3, [r7, #4]
 801292e:	430b      	orrs	r3, r1
 8012930:	d010      	beq.n	8012954 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012932:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012936:	2b00      	cmp	r3, #0
 8012938:	db0c      	blt.n	8012954 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801293a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801293c:	428b      	cmp	r3, r1
 801293e:	da09      	bge.n	8012954 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012940:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012944:	428b      	cmp	r3, r1
 8012946:	bf38      	it	cc
 8012948:	3708      	addcc	r7, #8
 801294a:	f103 0301 	add.w	r3, r3, #1
 801294e:	bf38      	it	cc
 8012950:	6107      	strcc	r7, [r0, #16]
 8012952:	6083      	str	r3, [r0, #8]
 8012954:	6903      	ldr	r3, [r0, #16]
 8012956:	f8a3 e000 	strh.w	lr, [r3]
 801295a:	e5ff      	b.n	801255c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801295c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801295e:	9c03      	ldr	r4, [sp, #12]
 8012960:	42a2      	cmp	r2, r4
 8012962:	f6ff ae18 	blt.w	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012966:	9c06      	ldr	r4, [sp, #24]
 8012968:	42a2      	cmp	r2, r4
 801296a:	bfb8      	it	lt
 801296c:	3201      	addlt	r2, #1
 801296e:	9c08      	ldr	r4, [sp, #32]
 8012970:	bfb8      	it	lt
 8012972:	9206      	strlt	r2, [sp, #24]
 8012974:	f1c3 0220 	rsb	r2, r3, #32
 8012978:	4362      	muls	r2, r4
 801297a:	2401      	movs	r4, #1
 801297c:	940b      	str	r4, [sp, #44]	; 0x2c
 801297e:	2420      	movs	r4, #32
 8012980:	e6d5      	b.n	801272e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012982:	f009 021f 	and.w	r2, r9, #31
 8012986:	ea4f 1861 	mov.w	r8, r1, asr #5
 801298a:	920c      	str	r2, [sp, #48]	; 0x30
 801298c:	9a01      	ldr	r2, [sp, #4]
 801298e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012992:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012996:	45b0      	cmp	r8, r6
 8012998:	f001 011f 	and.w	r1, r1, #31
 801299c:	eba2 0203 	sub.w	r2, r2, r3
 80129a0:	d108      	bne.n	80129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80129a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80129a4:	4419      	add	r1, r3
 80129a6:	4496      	add	lr, r2
 80129a8:	fb02 a101 	mla	r1, r2, r1, sl
 80129ac:	f8a5 e004 	strh.w	lr, [r5, #4]
 80129b0:	80e9      	strh	r1, [r5, #6]
 80129b2:	e6f9      	b.n	80127a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80129b4:	2c00      	cmp	r4, #0
 80129b6:	f2c0 80a9 	blt.w	8012b0c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80129ba:	2701      	movs	r7, #1
 80129bc:	f1c1 0c20 	rsb	ip, r1, #32
 80129c0:	970a      	str	r7, [sp, #40]	; 0x28
 80129c2:	fb02 f20c 	mul.w	r2, r2, ip
 80129c6:	2720      	movs	r7, #32
 80129c8:	9709      	str	r7, [sp, #36]	; 0x24
 80129ca:	fb92 fcf4 	sdiv	ip, r2, r4
 80129ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80129d0:	fb04 221c 	mls	r2, r4, ip, r2
 80129d4:	2a00      	cmp	r2, #0
 80129d6:	bfb8      	it	lt
 80129d8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80129dc:	4439      	add	r1, r7
 80129de:	fb0c a101 	mla	r1, ip, r1, sl
 80129e2:	80e9      	strh	r1, [r5, #6]
 80129e4:	44e6      	add	lr, ip
 80129e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80129e8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80129ec:	eb08 0501 	add.w	r5, r8, r1
 80129f0:	6901      	ldr	r1, [r0, #16]
 80129f2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80129f6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80129fa:	bfb8      	it	lt
 80129fc:	1912      	addlt	r2, r2, r4
 80129fe:	ea58 070e 	orrs.w	r7, r8, lr
 8012a02:	d010      	beq.n	8012a26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a04:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012a08:	f1be 0f00 	cmp.w	lr, #0
 8012a0c:	db0b      	blt.n	8012a26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a0e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012a10:	45be      	cmp	lr, r7
 8012a12:	da08      	bge.n	8012a26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a14:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012a18:	45be      	cmp	lr, r7
 8012a1a:	bf3c      	itt	cc
 8012a1c:	3108      	addcc	r1, #8
 8012a1e:	6101      	strcc	r1, [r0, #16]
 8012a20:	f10e 0101 	add.w	r1, lr, #1
 8012a24:	6081      	str	r1, [r0, #8]
 8012a26:	6901      	ldr	r1, [r0, #16]
 8012a28:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012a2c:	800d      	strh	r5, [r1, #0]
 8012a2e:	f04f 0e00 	mov.w	lr, #0
 8012a32:	42ae      	cmp	r6, r5
 8012a34:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012a38:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012a3c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012a40:	4463      	add	r3, ip
 8012a42:	d054      	beq.n	8012aee <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012a44:	9901      	ldr	r1, [sp, #4]
 8012a46:	1ac9      	subs	r1, r1, r3
 8012a48:	4461      	add	r1, ip
 8012a4a:	0149      	lsls	r1, r1, #5
 8012a4c:	fb91 fef4 	sdiv	lr, r1, r4
 8012a50:	fb04 111e 	mls	r1, r4, lr, r1
 8012a54:	2900      	cmp	r1, #0
 8012a56:	bfb8      	it	lt
 8012a58:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012a5c:	f10e 0701 	add.w	r7, lr, #1
 8012a60:	bfb8      	it	lt
 8012a62:	1909      	addlt	r1, r1, r4
 8012a64:	1b12      	subs	r2, r2, r4
 8012a66:	970d      	str	r7, [sp, #52]	; 0x34
 8012a68:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012a6c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012a6e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012a72:	1852      	adds	r2, r2, r1
 8012a74:	bf54      	ite	pl
 8012a76:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012a7a:	46f4      	movmi	ip, lr
 8012a7c:	44e3      	add	fp, ip
 8012a7e:	f8aa b004 	strh.w	fp, [sl, #4]
 8012a82:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012a86:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012a8a:	f8aa b006 	strh.w	fp, [sl, #6]
 8012a8e:	4463      	add	r3, ip
 8012a90:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012a94:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012a98:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012a9c:	bf58      	it	pl
 8012a9e:	1b12      	subpl	r2, r2, r4
 8012aa0:	443d      	add	r5, r7
 8012aa2:	ea5b 070a 	orrs.w	r7, fp, sl
 8012aa6:	d014      	beq.n	8012ad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012aa8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012aac:	f1ba 0f00 	cmp.w	sl, #0
 8012ab0:	db0f      	blt.n	8012ad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012ab2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012ab4:	45ba      	cmp	sl, r7
 8012ab6:	da0c      	bge.n	8012ad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012ab8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012abc:	45ba      	cmp	sl, r7
 8012abe:	bf38      	it	cc
 8012ac0:	f10c 0c08 	addcc.w	ip, ip, #8
 8012ac4:	f10a 0a01 	add.w	sl, sl, #1
 8012ac8:	bf38      	it	cc
 8012aca:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012ace:	f8c0 a008 	str.w	sl, [r0, #8]
 8012ad2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012ad6:	f04f 0700 	mov.w	r7, #0
 8012ada:	42ae      	cmp	r6, r5
 8012adc:	f8ac 5000 	strh.w	r5, [ip]
 8012ae0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012ae4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012ae8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012aec:	d1bc      	bne.n	8012a68 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012aee:	6904      	ldr	r4, [r0, #16]
 8012af0:	9a01      	ldr	r2, [sp, #4]
 8012af2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012af4:	1ad3      	subs	r3, r2, r3
 8012af6:	88a2      	ldrh	r2, [r4, #4]
 8012af8:	441a      	add	r2, r3
 8012afa:	80a2      	strh	r2, [r4, #4]
 8012afc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012afe:	3120      	adds	r1, #32
 8012b00:	1a89      	subs	r1, r1, r2
 8012b02:	88e2      	ldrh	r2, [r4, #6]
 8012b04:	fb03 2301 	mla	r3, r3, r1, r2
 8012b08:	80e3      	strh	r3, [r4, #6]
 8012b0a:	e64d      	b.n	80127a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012b0c:	f04f 37ff 	mov.w	r7, #4294967295
 8012b10:	970a      	str	r7, [sp, #40]	; 0x28
 8012b12:	434a      	muls	r2, r1
 8012b14:	4264      	negs	r4, r4
 8012b16:	2700      	movs	r7, #0
 8012b18:	e756      	b.n	80129c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012b1a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012b1e:	f009 031f 	and.w	r3, r9, #31
 8012b22:	45d0      	cmp	r8, sl
 8012b24:	f007 071f 	and.w	r7, r7, #31
 8012b28:	930f      	str	r3, [sp, #60]	; 0x3c
 8012b2a:	fa1f fc8c 	uxth.w	ip, ip
 8012b2e:	fa1f fe8e 	uxth.w	lr, lr
 8012b32:	d10a      	bne.n	8012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b36:	449c      	add	ip, r3
 8012b38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012b3a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012b3e:	441f      	add	r7, r3
 8012b40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b42:	fb03 e707 	mla	r7, r3, r7, lr
 8012b46:	80ef      	strh	r7, [r5, #6]
 8012b48:	e6b9      	b.n	80128be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b4a:	2900      	cmp	r1, #0
 8012b4c:	f2c0 80a8 	blt.w	8012ca0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012b50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012b52:	f1c7 0320 	rsb	r3, r7, #32
 8012b56:	4363      	muls	r3, r4
 8012b58:	2401      	movs	r4, #1
 8012b5a:	940d      	str	r4, [sp, #52]	; 0x34
 8012b5c:	2420      	movs	r4, #32
 8012b5e:	940c      	str	r4, [sp, #48]	; 0x30
 8012b60:	fb93 f4f1 	sdiv	r4, r3, r1
 8012b64:	fb01 3b14 	mls	fp, r1, r4, r3
 8012b68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012b6a:	f1bb 0f00 	cmp.w	fp, #0
 8012b6e:	bfb8      	it	lt
 8012b70:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012b74:	441f      	add	r7, r3
 8012b76:	fb04 e707 	mla	r7, r4, r7, lr
 8012b7a:	44a4      	add	ip, r4
 8012b7c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012b80:	80ef      	strh	r7, [r5, #6]
 8012b82:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012b86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012b88:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012b8c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012b90:	bfb8      	it	lt
 8012b92:	448b      	addlt	fp, r1
 8012b94:	eb08 0503 	add.w	r5, r8, r3
 8012b98:	ea5e 0307 	orrs.w	r3, lr, r7
 8012b9c:	d011      	beq.n	8012bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012b9e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012ba2:	f1be 0f00 	cmp.w	lr, #0
 8012ba6:	db0c      	blt.n	8012bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012ba8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012baa:	45be      	cmp	lr, r7
 8012bac:	da09      	bge.n	8012bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012bae:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012bb2:	45be      	cmp	lr, r7
 8012bb4:	bf3c      	itt	cc
 8012bb6:	f10c 0708 	addcc.w	r7, ip, #8
 8012bba:	6107      	strcc	r7, [r0, #16]
 8012bbc:	f10e 0701 	add.w	r7, lr, #1
 8012bc0:	6087      	str	r7, [r0, #8]
 8012bc2:	6907      	ldr	r7, [r0, #16]
 8012bc4:	b213      	sxth	r3, r2
 8012bc6:	9310      	str	r3, [sp, #64]	; 0x40
 8012bc8:	807b      	strh	r3, [r7, #2]
 8012bca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012bcc:	803d      	strh	r5, [r7, #0]
 8012bce:	4555      	cmp	r5, sl
 8012bd0:	80be      	strh	r6, [r7, #4]
 8012bd2:	80fe      	strh	r6, [r7, #6]
 8012bd4:	eb04 0c03 	add.w	ip, r4, r3
 8012bd8:	d051      	beq.n	8012c7e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012bda:	9b01      	ldr	r3, [sp, #4]
 8012bdc:	eba3 070c 	sub.w	r7, r3, ip
 8012be0:	443c      	add	r4, r7
 8012be2:	0164      	lsls	r4, r4, #5
 8012be4:	fb94 f8f1 	sdiv	r8, r4, r1
 8012be8:	fb01 4418 	mls	r4, r1, r8, r4
 8012bec:	2c00      	cmp	r4, #0
 8012bee:	bfb8      	it	lt
 8012bf0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012bf4:	ebab 0301 	sub.w	r3, fp, r1
 8012bf8:	f108 0701 	add.w	r7, r8, #1
 8012bfc:	bfb8      	it	lt
 8012bfe:	1864      	addlt	r4, r4, r1
 8012c00:	9309      	str	r3, [sp, #36]	; 0x24
 8012c02:	9711      	str	r7, [sp, #68]	; 0x44
 8012c04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c06:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012c0a:	191b      	adds	r3, r3, r4
 8012c0c:	bf58      	it	pl
 8012c0e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012c10:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012c14:	9309      	str	r3, [sp, #36]	; 0x24
 8012c16:	bf48      	it	mi
 8012c18:	4647      	movmi	r7, r8
 8012c1a:	44bb      	add	fp, r7
 8012c1c:	f8ae b004 	strh.w	fp, [lr, #4]
 8012c20:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012c24:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012c28:	f8ae b006 	strh.w	fp, [lr, #6]
 8012c2c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012c30:	44bc      	add	ip, r7
 8012c32:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012c34:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012c38:	443d      	add	r5, r7
 8012c3a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012c3e:	bf5c      	itt	pl
 8012c40:	1a5b      	subpl	r3, r3, r1
 8012c42:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012c44:	ea5b 0307 	orrs.w	r3, fp, r7
 8012c48:	d011      	beq.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012c4a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012c4e:	f1bb 0f00 	cmp.w	fp, #0
 8012c52:	db0c      	blt.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012c54:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012c56:	45bb      	cmp	fp, r7
 8012c58:	da09      	bge.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012c5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012c5e:	45bb      	cmp	fp, r7
 8012c60:	bf3c      	itt	cc
 8012c62:	f10e 0708 	addcc.w	r7, lr, #8
 8012c66:	6107      	strcc	r7, [r0, #16]
 8012c68:	f10b 0701 	add.w	r7, fp, #1
 8012c6c:	6087      	str	r7, [r0, #8]
 8012c6e:	6907      	ldr	r7, [r0, #16]
 8012c70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012c72:	803d      	strh	r5, [r7, #0]
 8012c74:	4555      	cmp	r5, sl
 8012c76:	807b      	strh	r3, [r7, #2]
 8012c78:	80be      	strh	r6, [r7, #4]
 8012c7a:	80fe      	strh	r6, [r7, #6]
 8012c7c:	d1c2      	bne.n	8012c04 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012c7e:	9b01      	ldr	r3, [sp, #4]
 8012c80:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012c82:	eba3 0c0c 	sub.w	ip, r3, ip
 8012c86:	6903      	ldr	r3, [r0, #16]
 8012c88:	8899      	ldrh	r1, [r3, #4]
 8012c8a:	4461      	add	r1, ip
 8012c8c:	8099      	strh	r1, [r3, #4]
 8012c8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012c90:	3720      	adds	r7, #32
 8012c92:	1a7f      	subs	r7, r7, r1
 8012c94:	88d9      	ldrh	r1, [r3, #6]
 8012c96:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012c9a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012c9e:	e60e      	b.n	80128be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012ca0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012ca2:	f04f 34ff 	mov.w	r4, #4294967295
 8012ca6:	940d      	str	r4, [sp, #52]	; 0x34
 8012ca8:	437b      	muls	r3, r7
 8012caa:	4249      	negs	r1, r1
 8012cac:	2400      	movs	r4, #0
 8012cae:	e756      	b.n	8012b5e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012cb0:	9905      	ldr	r1, [sp, #20]
 8012cb2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012cb6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012cba:	f001 011f 	and.w	r1, r1, #31
 8012cbe:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012cc2:	9102      	str	r1, [sp, #8]
 8012cc4:	9904      	ldr	r1, [sp, #16]
 8012cc6:	45f3      	cmp	fp, lr
 8012cc8:	f009 0c1f 	and.w	ip, r9, #31
 8012ccc:	eba1 0406 	sub.w	r4, r1, r6
 8012cd0:	d108      	bne.n	8012ce4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012cd2:	9b02      	ldr	r3, [sp, #8]
 8012cd4:	449c      	add	ip, r3
 8012cd6:	44a0      	add	r8, r4
 8012cd8:	fb04 a40c 	mla	r4, r4, ip, sl
 8012cdc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012ce0:	80fc      	strh	r4, [r7, #6]
 8012ce2:	e458      	b.n	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ce4:	9905      	ldr	r1, [sp, #20]
 8012ce6:	ebb1 0109 	subs.w	r1, r1, r9
 8012cea:	bf5b      	ittet	pl
 8012cec:	f1cc 0520 	rsbpl	r5, ip, #32
 8012cf0:	436c      	mulpl	r4, r5
 8012cf2:	2500      	movmi	r5, #0
 8012cf4:	2520      	movpl	r5, #32
 8012cf6:	bf44      	itt	mi
 8012cf8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012cfc:	4249      	negmi	r1, r1
 8012cfe:	9501      	str	r5, [sp, #4]
 8012d00:	9b01      	ldr	r3, [sp, #4]
 8012d02:	fb94 f5f1 	sdiv	r5, r4, r1
 8012d06:	fb01 4415 	mls	r4, r1, r5, r4
 8012d0a:	bf54      	ite	pl
 8012d0c:	f04f 0901 	movpl.w	r9, #1
 8012d10:	f04f 39ff 	movmi.w	r9, #4294967295
 8012d14:	2c00      	cmp	r4, #0
 8012d16:	bfb8      	it	lt
 8012d18:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012d1c:	449c      	add	ip, r3
 8012d1e:	44a8      	add	r8, r5
 8012d20:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012d24:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012d28:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012d2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d30:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012d34:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012d38:	bfb8      	it	lt
 8012d3a:	1864      	addlt	r4, r4, r1
 8012d3c:	ea58 0707 	orrs.w	r7, r8, r7
 8012d40:	eb0b 0309 	add.w	r3, fp, r9
 8012d44:	d011      	beq.n	8012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d46:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012d4a:	f1b8 0f00 	cmp.w	r8, #0
 8012d4e:	db0c      	blt.n	8012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d50:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d52:	45b8      	cmp	r8, r7
 8012d54:	da09      	bge.n	8012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d56:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8012d5a:	45b8      	cmp	r8, r7
 8012d5c:	bf3c      	itt	cc
 8012d5e:	f10c 0708 	addcc.w	r7, ip, #8
 8012d62:	6107      	strcc	r7, [r0, #16]
 8012d64:	f108 0701 	add.w	r7, r8, #1
 8012d68:	6087      	str	r7, [r0, #8]
 8012d6a:	6907      	ldr	r7, [r0, #16]
 8012d6c:	f04f 0c00 	mov.w	ip, #0
 8012d70:	b212      	sxth	r2, r2
 8012d72:	459e      	cmp	lr, r3
 8012d74:	803b      	strh	r3, [r7, #0]
 8012d76:	807a      	strh	r2, [r7, #2]
 8012d78:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012d7c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012d80:	442e      	add	r6, r5
 8012d82:	d04d      	beq.n	8012e20 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012d84:	9f04      	ldr	r7, [sp, #16]
 8012d86:	1bbf      	subs	r7, r7, r6
 8012d88:	443d      	add	r5, r7
 8012d8a:	016d      	lsls	r5, r5, #5
 8012d8c:	fb95 f8f1 	sdiv	r8, r5, r1
 8012d90:	fb01 5518 	mls	r5, r1, r8, r5
 8012d94:	4565      	cmp	r5, ip
 8012d96:	bfb8      	it	lt
 8012d98:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012d9c:	f108 0701 	add.w	r7, r8, #1
 8012da0:	bfb8      	it	lt
 8012da2:	186d      	addlt	r5, r5, r1
 8012da4:	1a64      	subs	r4, r4, r1
 8012da6:	9703      	str	r7, [sp, #12]
 8012da8:	f04f 0a00 	mov.w	sl, #0
 8012dac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012db0:	1964      	adds	r4, r4, r5
 8012db2:	bf58      	it	pl
 8012db4:	9f03      	ldrpl	r7, [sp, #12]
 8012db6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012dba:	bf48      	it	mi
 8012dbc:	4647      	movmi	r7, r8
 8012dbe:	44bb      	add	fp, r7
 8012dc0:	f8ac b004 	strh.w	fp, [ip, #4]
 8012dc4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012dc8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012dcc:	f8ac b006 	strh.w	fp, [ip, #6]
 8012dd0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012dd4:	443e      	add	r6, r7
 8012dd6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012dda:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012dde:	bf58      	it	pl
 8012de0:	1a64      	subpl	r4, r4, r1
 8012de2:	ea5b 0707 	orrs.w	r7, fp, r7
 8012de6:	444b      	add	r3, r9
 8012de8:	d011      	beq.n	8012e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012dea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012dee:	f1bb 0f00 	cmp.w	fp, #0
 8012df2:	db0c      	blt.n	8012e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012df4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012df6:	45bb      	cmp	fp, r7
 8012df8:	da09      	bge.n	8012e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012dfa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012dfe:	45bb      	cmp	fp, r7
 8012e00:	bf3c      	itt	cc
 8012e02:	f10c 0708 	addcc.w	r7, ip, #8
 8012e06:	6107      	strcc	r7, [r0, #16]
 8012e08:	f10b 0701 	add.w	r7, fp, #1
 8012e0c:	6087      	str	r7, [r0, #8]
 8012e0e:	6907      	ldr	r7, [r0, #16]
 8012e10:	459e      	cmp	lr, r3
 8012e12:	803b      	strh	r3, [r7, #0]
 8012e14:	807a      	strh	r2, [r7, #2]
 8012e16:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012e1a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012e1e:	d1c5      	bne.n	8012dac <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012e20:	9b04      	ldr	r3, [sp, #16]
 8012e22:	1b9e      	subs	r6, r3, r6
 8012e24:	6903      	ldr	r3, [r0, #16]
 8012e26:	889a      	ldrh	r2, [r3, #4]
 8012e28:	4432      	add	r2, r6
 8012e2a:	809a      	strh	r2, [r3, #4]
 8012e2c:	9a02      	ldr	r2, [sp, #8]
 8012e2e:	f102 0c20 	add.w	ip, r2, #32
 8012e32:	9a01      	ldr	r2, [sp, #4]
 8012e34:	ebac 0c02 	sub.w	ip, ip, r2
 8012e38:	88da      	ldrh	r2, [r3, #6]
 8012e3a:	fb06 260c 	mla	r6, r6, ip, r2
 8012e3e:	80de      	strh	r6, [r3, #6]
 8012e40:	f7ff bba9 	b.w	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012e44 <_ZN8touchgfx7Outline6lineToEii>:
 8012e44:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012e46:	079b      	lsls	r3, r3, #30
 8012e48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012e4a:	460e      	mov	r6, r1
 8012e4c:	4615      	mov	r5, r2
 8012e4e:	d511      	bpl.n	8012e74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012e50:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012e54:	ea86 0701 	eor.w	r7, r6, r1
 8012e58:	ea85 0302 	eor.w	r3, r5, r2
 8012e5c:	433b      	orrs	r3, r7
 8012e5e:	d009      	beq.n	8012e74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012e60:	4633      	mov	r3, r6
 8012e62:	9500      	str	r5, [sp, #0]
 8012e64:	f7ff fb3e 	bl	80124e4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012e68:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012e6a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012e6e:	f043 0301 	orr.w	r3, r3, #1
 8012e72:	6243      	str	r3, [r0, #36]	; 0x24
 8012e74:	b003      	add	sp, #12
 8012e76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012e78 <_ZN8touchgfx7Outline6moveToEii>:
 8012e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012e7a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012e7c:	4615      	mov	r5, r2
 8012e7e:	079a      	lsls	r2, r3, #30
 8012e80:	4604      	mov	r4, r0
 8012e82:	460e      	mov	r6, r1
 8012e84:	d401      	bmi.n	8012e8a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012e86:	f7ff faf9 	bl	801247c <_ZN8touchgfx7Outline5resetEv>
 8012e8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012e8c:	07db      	lsls	r3, r3, #31
 8012e8e:	d504      	bpl.n	8012e9a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012e90:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012e94:	4620      	mov	r0, r4
 8012e96:	f7ff ffd5 	bl	8012e44 <_ZN8touchgfx7Outline6lineToEii>
 8012e9a:	6923      	ldr	r3, [r4, #16]
 8012e9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012ea0:	1170      	asrs	r0, r6, #5
 8012ea2:	4290      	cmp	r0, r2
 8012ea4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012ea8:	d103      	bne.n	8012eb2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8012eaa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012eae:	4291      	cmp	r1, r2
 8012eb0:	d01a      	beq.n	8012ee8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012eb2:	88df      	ldrh	r7, [r3, #6]
 8012eb4:	889a      	ldrh	r2, [r3, #4]
 8012eb6:	433a      	orrs	r2, r7
 8012eb8:	d010      	beq.n	8012edc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012eba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012ebe:	2a00      	cmp	r2, #0
 8012ec0:	db0c      	blt.n	8012edc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012ec2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012ec4:	42ba      	cmp	r2, r7
 8012ec6:	da09      	bge.n	8012edc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012ec8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012ecc:	42ba      	cmp	r2, r7
 8012ece:	bf38      	it	cc
 8012ed0:	3308      	addcc	r3, #8
 8012ed2:	f102 0201 	add.w	r2, r2, #1
 8012ed6:	bf38      	it	cc
 8012ed8:	6123      	strcc	r3, [r4, #16]
 8012eda:	60a2      	str	r2, [r4, #8]
 8012edc:	6923      	ldr	r3, [r4, #16]
 8012ede:	2200      	movs	r2, #0
 8012ee0:	8018      	strh	r0, [r3, #0]
 8012ee2:	8059      	strh	r1, [r3, #2]
 8012ee4:	809a      	strh	r2, [r3, #4]
 8012ee6:	80da      	strh	r2, [r3, #6]
 8012ee8:	6166      	str	r6, [r4, #20]
 8012eea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012eee:	6225      	str	r5, [r4, #32]
 8012ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012ef2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012ef2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012ef6:	b0d0      	sub	sp, #320	; 0x140
 8012ef8:	466c      	mov	r4, sp
 8012efa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012efe:	4627      	mov	r7, r4
 8012f00:	1a0d      	subs	r5, r1, r0
 8012f02:	2d48      	cmp	r5, #72	; 0x48
 8012f04:	f100 0308 	add.w	r3, r0, #8
 8012f08:	f340 80d5 	ble.w	80130b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012f0c:	112d      	asrs	r5, r5, #4
 8012f0e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012f12:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012f16:	6816      	ldr	r6, [r2, #0]
 8012f18:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8012f1c:	6006      	str	r6, [r0, #0]
 8012f1e:	6856      	ldr	r6, [r2, #4]
 8012f20:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012f24:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012f28:	6046      	str	r6, [r0, #4]
 8012f2a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012f2e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012f32:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012f36:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012f3a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012f3e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012f42:	4565      	cmp	r5, ip
 8012f44:	f1a1 0208 	sub.w	r2, r1, #8
 8012f48:	db06      	blt.n	8012f58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8012f4a:	d119      	bne.n	8012f80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012f4c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012f50:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012f54:	42ae      	cmp	r6, r5
 8012f56:	dd13      	ble.n	8012f80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012f58:	460e      	mov	r6, r1
 8012f5a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012f5e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012f62:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012f66:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8012f6a:	601d      	str	r5, [r3, #0]
 8012f6c:	6875      	ldr	r5, [r6, #4]
 8012f6e:	605d      	str	r5, [r3, #4]
 8012f70:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012f74:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012f78:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012f7c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012f80:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012f84:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012f88:	42ae      	cmp	r6, r5
 8012f8a:	db06      	blt.n	8012f9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012f8c:	d116      	bne.n	8012fbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012f8e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012f92:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012f96:	45ac      	cmp	ip, r5
 8012f98:	da10      	bge.n	8012fbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012f9a:	681d      	ldr	r5, [r3, #0]
 8012f9c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012fa0:	6005      	str	r5, [r0, #0]
 8012fa2:	685d      	ldr	r5, [r3, #4]
 8012fa4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012fa8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012fac:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012fb0:	6045      	str	r5, [r0, #4]
 8012fb2:	8146      	strh	r6, [r0, #10]
 8012fb4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012fb8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8012fbc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012fc0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012fc4:	4565      	cmp	r5, ip
 8012fc6:	db06      	blt.n	8012fd6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012fc8:	d119      	bne.n	8012ffe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012fca:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8012fce:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012fd2:	42ae      	cmp	r6, r5
 8012fd4:	da13      	bge.n	8012ffe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012fd6:	460e      	mov	r6, r1
 8012fd8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012fdc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012fe0:	6005      	str	r5, [r0, #0]
 8012fe2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012fe6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8012fea:	6875      	ldr	r5, [r6, #4]
 8012fec:	6045      	str	r5, [r0, #4]
 8012fee:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012ff2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012ff6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012ffa:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012ffe:	3308      	adds	r3, #8
 8013000:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013004:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013008:	45e6      	cmp	lr, ip
 801300a:	dbf8      	blt.n	8012ffe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801300c:	d105      	bne.n	801301a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801300e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013012:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013016:	42ae      	cmp	r6, r5
 8013018:	dbf1      	blt.n	8012ffe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801301a:	4615      	mov	r5, r2
 801301c:	3a08      	subs	r2, #8
 801301e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013022:	45b4      	cmp	ip, r6
 8013024:	dbf9      	blt.n	801301a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013026:	d105      	bne.n	8013034 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013028:	f9b0 8000 	ldrsh.w	r8, [r0]
 801302c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013030:	45b0      	cmp	r8, r6
 8013032:	dbf2      	blt.n	801301a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013034:	4293      	cmp	r3, r2
 8013036:	f1a5 0608 	sub.w	r6, r5, #8
 801303a:	d816      	bhi.n	801306a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801303c:	f8d6 c000 	ldr.w	ip, [r6]
 8013040:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013044:	f8c3 c000 	str.w	ip, [r3]
 8013048:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801304c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013050:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013054:	f8c3 c004 	str.w	ip, [r3, #4]
 8013058:	f825 ac08 	strh.w	sl, [r5, #-8]
 801305c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013060:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013064:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013068:	e7c9      	b.n	8012ffe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801306a:	f8d6 e000 	ldr.w	lr, [r6]
 801306e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013072:	f8c0 e000 	str.w	lr, [r0]
 8013076:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801307a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801307e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013082:	f8c0 e004 	str.w	lr, [r0, #4]
 8013086:	f825 ac08 	strh.w	sl, [r5, #-8]
 801308a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801308e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013092:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013096:	1acd      	subs	r5, r1, r3
 8013098:	1a16      	subs	r6, r2, r0
 801309a:	10ed      	asrs	r5, r5, #3
 801309c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80130a0:	bfb5      	itete	lt
 80130a2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80130a6:	e9c4 3100 	strdge	r3, r1, [r4]
 80130aa:	460a      	movlt	r2, r1
 80130ac:	4603      	movge	r3, r0
 80130ae:	3408      	adds	r4, #8
 80130b0:	4618      	mov	r0, r3
 80130b2:	4611      	mov	r1, r2
 80130b4:	e724      	b.n	8012f00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80130b6:	4299      	cmp	r1, r3
 80130b8:	d928      	bls.n	801310c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80130ba:	f1a3 0210 	sub.w	r2, r3, #16
 80130be:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80130c2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80130c6:	45ac      	cmp	ip, r5
 80130c8:	db06      	blt.n	80130d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80130ca:	d11d      	bne.n	8013108 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80130cc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80130d0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80130d4:	42ae      	cmp	r6, r5
 80130d6:	da17      	bge.n	8013108 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80130d8:	4615      	mov	r5, r2
 80130da:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80130de:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80130e2:	6116      	str	r6, [r2, #16]
 80130e4:	686e      	ldr	r6, [r5, #4]
 80130e6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80130ea:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80130ee:	f8a2 9008 	strh.w	r9, [r2, #8]
 80130f2:	42a8      	cmp	r0, r5
 80130f4:	6156      	str	r6, [r2, #20]
 80130f6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80130fa:	f8a2 800c 	strh.w	r8, [r2, #12]
 80130fe:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013102:	f1a2 0208 	sub.w	r2, r2, #8
 8013106:	d1da      	bne.n	80130be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013108:	3308      	adds	r3, #8
 801310a:	e7d4      	b.n	80130b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801310c:	42bc      	cmp	r4, r7
 801310e:	d903      	bls.n	8013118 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013110:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013114:	3c08      	subs	r4, #8
 8013116:	e6f3      	b.n	8012f00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013118:	b050      	add	sp, #320	; 0x140
 801311a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801311e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801311e:	b510      	push	{r4, lr}
 8013120:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013122:	07da      	lsls	r2, r3, #31
 8013124:	4604      	mov	r4, r0
 8013126:	d507      	bpl.n	8013138 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013128:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801312c:	f7ff fe8a 	bl	8012e44 <_ZN8touchgfx7Outline6lineToEii>
 8013130:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013132:	f023 0301 	bic.w	r3, r3, #1
 8013136:	6243      	str	r3, [r0, #36]	; 0x24
 8013138:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801313a:	079b      	lsls	r3, r3, #30
 801313c:	d521      	bpl.n	8013182 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801313e:	6923      	ldr	r3, [r4, #16]
 8013140:	88d9      	ldrh	r1, [r3, #6]
 8013142:	889a      	ldrh	r2, [r3, #4]
 8013144:	430a      	orrs	r2, r1
 8013146:	d010      	beq.n	801316a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013148:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801314c:	2a00      	cmp	r2, #0
 801314e:	db0c      	blt.n	801316a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013150:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013152:	428a      	cmp	r2, r1
 8013154:	da09      	bge.n	801316a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013156:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801315a:	4291      	cmp	r1, r2
 801315c:	bf88      	it	hi
 801315e:	3308      	addhi	r3, #8
 8013160:	f102 0201 	add.w	r2, r2, #1
 8013164:	bf88      	it	hi
 8013166:	6123      	strhi	r3, [r4, #16]
 8013168:	60a2      	str	r2, [r4, #8]
 801316a:	68a1      	ldr	r1, [r4, #8]
 801316c:	b129      	cbz	r1, 801317a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801316e:	6863      	ldr	r3, [r4, #4]
 8013170:	4299      	cmp	r1, r3
 8013172:	d802      	bhi.n	801317a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013174:	68e0      	ldr	r0, [r4, #12]
 8013176:	f7ff febc 	bl	8012ef2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801317a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801317c:	f023 0302 	bic.w	r3, r3, #2
 8013180:	6263      	str	r3, [r4, #36]	; 0x24
 8013182:	68e0      	ldr	r0, [r4, #12]
 8013184:	bd10      	pop	{r4, pc}
	...

08013188 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013188:	4b02      	ldr	r3, [pc, #8]	; (8013194 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801318a:	6018      	str	r0, [r3, #0]
 801318c:	4b02      	ldr	r3, [pc, #8]	; (8013198 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801318e:	6019      	str	r1, [r3, #0]
 8013190:	4770      	bx	lr
 8013192:	bf00      	nop
 8013194:	20012dac 	.word	0x20012dac
 8013198:	20012db0 	.word	0x20012db0

0801319c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801319c:	4a02      	ldr	r2, [pc, #8]	; (80131a8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801319e:	2300      	movs	r3, #0
 80131a0:	6013      	str	r3, [r2, #0]
 80131a2:	4a02      	ldr	r2, [pc, #8]	; (80131ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80131a4:	6013      	str	r3, [r2, #0]
 80131a6:	4770      	bx	lr
 80131a8:	20012dac 	.word	0x20012dac
 80131ac:	20012db0 	.word	0x20012db0

080131b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80131b0:	4b01      	ldr	r3, [pc, #4]	; (80131b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80131b2:	6818      	ldr	r0, [r3, #0]
 80131b4:	4770      	bx	lr
 80131b6:	bf00      	nop
 80131b8:	20012dac 	.word	0x20012dac

080131bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80131bc:	4b01      	ldr	r3, [pc, #4]	; (80131c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80131be:	6818      	ldr	r0, [r3, #0]
 80131c0:	4770      	bx	lr
 80131c2:	bf00      	nop
 80131c4:	20012db0 	.word	0x20012db0

080131c8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80131c8:	b510      	push	{r4, lr}
 80131ca:	6803      	ldr	r3, [r0, #0]
 80131cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131ce:	460c      	mov	r4, r1
 80131d0:	4798      	blx	r3
 80131d2:	1b03      	subs	r3, r0, r4
 80131d4:	4258      	negs	r0, r3
 80131d6:	4158      	adcs	r0, r3
 80131d8:	bd10      	pop	{r4, pc}
	...

080131dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80131dc:	4b01      	ldr	r3, [pc, #4]	; (80131e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80131de:	6019      	str	r1, [r3, #0]
 80131e0:	4770      	bx	lr
 80131e2:	bf00      	nop
 80131e4:	20012db4 	.word	0x20012db4

080131e8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80131e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131ec:	4696      	mov	lr, r2
 80131ee:	4605      	mov	r5, r0
 80131f0:	4614      	mov	r4, r2
 80131f2:	460e      	mov	r6, r1
 80131f4:	461f      	mov	r7, r3
 80131f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80131fa:	b097      	sub	sp, #92	; 0x5c
 80131fc:	f10d 0c1c 	add.w	ip, sp, #28
 8013200:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013204:	f8de 3000 	ldr.w	r3, [lr]
 8013208:	f8cc 3000 	str.w	r3, [ip]
 801320c:	f104 0e14 	add.w	lr, r4, #20
 8013210:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013214:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013218:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801321c:	f8de 3000 	ldr.w	r3, [lr]
 8013220:	f8cc 3000 	str.w	r3, [ip]
 8013224:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013228:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801322c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013230:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013234:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013238:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801323c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013240:	f8de 3000 	ldr.w	r3, [lr]
 8013244:	f8cc 3000 	str.w	r3, [ip]
 8013248:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801324a:	682b      	ldr	r3, [r5, #0]
 801324c:	9201      	str	r2, [sp, #4]
 801324e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013252:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013254:	9200      	str	r2, [sp, #0]
 8013256:	f8cd 8008 	str.w	r8, [sp, #8]
 801325a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801325e:	aa07      	add	r2, sp, #28
 8013260:	463b      	mov	r3, r7
 8013262:	4631      	mov	r1, r6
 8013264:	4628      	mov	r0, r5
 8013266:	47d8      	blx	fp
 8013268:	46a6      	mov	lr, r4
 801326a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801326e:	f10d 0c1c 	add.w	ip, sp, #28
 8013272:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013276:	f8de 3000 	ldr.w	r3, [lr]
 801327a:	f8cc 3000 	str.w	r3, [ip]
 801327e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013282:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013286:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801328a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801328e:	343c      	adds	r4, #60	; 0x3c
 8013290:	f8de 3000 	ldr.w	r3, [lr]
 8013294:	f8cc 3000 	str.w	r3, [ip]
 8013298:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801329a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801329e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132a2:	6823      	ldr	r3, [r4, #0]
 80132a4:	f8cc 3000 	str.w	r3, [ip]
 80132a8:	682b      	ldr	r3, [r5, #0]
 80132aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80132ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80132b0:	9201      	str	r2, [sp, #4]
 80132b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80132b4:	9200      	str	r2, [sp, #0]
 80132b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80132ba:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80132bc:	aa07      	add	r2, sp, #28
 80132be:	463b      	mov	r3, r7
 80132c0:	4631      	mov	r1, r6
 80132c2:	4628      	mov	r0, r5
 80132c4:	47a0      	blx	r4
 80132c6:	b017      	add	sp, #92	; 0x5c
 80132c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80132cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132d0:	b08d      	sub	sp, #52	; 0x34
 80132d2:	4688      	mov	r8, r1
 80132d4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80132d6:	f8d3 c000 	ldr.w	ip, [r3]
 80132da:	680f      	ldr	r7, [r1, #0]
 80132dc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80132e0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80132e4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80132e8:	edd3 6a07 	vldr	s13, [r3, #28]
 80132ec:	9918      	ldr	r1, [sp, #96]	; 0x60
 80132ee:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80132f2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80132f6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80132fa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80132fe:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013302:	eba7 070c 	sub.w	r7, r7, ip
 8013306:	42bc      	cmp	r4, r7
 8013308:	bfa8      	it	ge
 801330a:	463c      	movge	r4, r7
 801330c:	ee07 4a90 	vmov	s15, r4
 8013310:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013314:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013318:	ee25 4a04 	vmul.f32	s8, s10, s8
 801331c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013320:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013324:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013328:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801332c:	eb09 0e0c 	add.w	lr, r9, ip
 8013330:	4571      	cmp	r1, lr
 8013332:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013336:	ee32 1a05 	vadd.f32	s2, s4, s10
 801333a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801333e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013342:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013346:	f340 808d 	ble.w	8013464 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801334a:	eba1 060e 	sub.w	r6, r1, lr
 801334e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013352:	ee07 5a10 	vmov	s14, r5
 8013356:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801335a:	2d00      	cmp	r5, #0
 801335c:	fb04 6615 	mls	r6, r4, r5, r6
 8013360:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013364:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013368:	eea7 1a05 	vfma.f32	s2, s14, s10
 801336c:	dd13      	ble.n	8013396 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801336e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013372:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013376:	eef5 6a40 	vcmp.f32	s13, #0.0
 801337a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801337e:	bf18      	it	ne
 8013380:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013384:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013388:	bf08      	it	eq
 801338a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801338e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013392:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013396:	fb05 f204 	mul.w	r2, r5, r4
 801339a:	1abf      	subs	r7, r7, r2
 801339c:	4494      	add	ip, r2
 801339e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80133a2:	4411      	add	r1, r2
 80133a4:	eb09 020c 	add.w	r2, r9, ip
 80133a8:	443a      	add	r2, r7
 80133aa:	b209      	sxth	r1, r1
 80133ac:	428a      	cmp	r2, r1
 80133ae:	bfc4      	itt	gt
 80133b0:	eba1 0209 	subgt.w	r2, r1, r9
 80133b4:	eba2 070c 	subgt.w	r7, r2, ip
 80133b8:	2f00      	cmp	r7, #0
 80133ba:	dd50      	ble.n	801345e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80133bc:	fb97 f1f4 	sdiv	r1, r7, r4
 80133c0:	fb04 7211 	mls	r2, r4, r1, r7
 80133c4:	b90a      	cbnz	r2, 80133ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80133c6:	3901      	subs	r1, #1
 80133c8:	4622      	mov	r2, r4
 80133ca:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80133ce:	6840      	ldr	r0, [r0, #4]
 80133d0:	900b      	str	r0, [sp, #44]	; 0x2c
 80133d2:	f8d0 a000 	ldr.w	sl, [r0]
 80133d6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80133d8:	9008      	str	r0, [sp, #32]
 80133da:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80133de:	9818      	ldr	r0, [sp, #96]	; 0x60
 80133e0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80133e4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80133e8:	695b      	ldr	r3, [r3, #20]
 80133ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80133ec:	445b      	add	r3, fp
 80133ee:	eef0 6a42 	vmov.f32	s13, s4
 80133f2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80133f6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80133fa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80133fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013402:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013406:	9307      	str	r3, [sp, #28]
 8013408:	ee17 7a90 	vmov	r7, s15
 801340c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013410:	eeb0 7a61 	vmov.f32	s14, s3
 8013414:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013418:	ee16 3a90 	vmov	r3, s13
 801341c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013420:	ee17 ca90 	vmov	ip, s15
 8013424:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013428:	fb9c fcf4 	sdiv	ip, ip, r4
 801342c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013430:	9302      	str	r3, [sp, #8]
 8013432:	ee17 3a10 	vmov	r3, s14
 8013436:	44b6      	add	lr, r6
 8013438:	fb04 e505 	mla	r5, r4, r5, lr
 801343c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013440:	fb07 3706 	mla	r7, r7, r6, r3
 8013444:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013448:	e9cd 4700 	strd	r4, r7, [sp]
 801344c:	2900      	cmp	r1, #0
 801344e:	bfcc      	ite	gt
 8013450:	46a1      	movgt	r9, r4
 8013452:	4691      	movle	r9, r2
 8013454:	eba9 0306 	sub.w	r3, r9, r6
 8013458:	f8da 4008 	ldr.w	r4, [sl, #8]
 801345c:	47a0      	blx	r4
 801345e:	b00d      	add	sp, #52	; 0x34
 8013460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013464:	2500      	movs	r5, #0
 8013466:	462e      	mov	r6, r5
 8013468:	e799      	b.n	801339e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801346c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801346c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013470:	b0db      	sub	sp, #364	; 0x16c
 8013472:	461d      	mov	r5, r3
 8013474:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013478:	930a      	str	r3, [sp, #40]	; 0x28
 801347a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801347e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013480:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013484:	9310      	str	r3, [sp, #64]	; 0x40
 8013486:	6803      	ldr	r3, [r0, #0]
 8013488:	910f      	str	r1, [sp, #60]	; 0x3c
 801348a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801348c:	9009      	str	r0, [sp, #36]	; 0x24
 801348e:	4614      	mov	r4, r2
 8013490:	4629      	mov	r1, r5
 8013492:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013496:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801349a:	47b8      	blx	r7
 801349c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801349e:	6058      	str	r0, [r3, #4]
 80134a0:	2800      	cmp	r0, #0
 80134a2:	f000 83a1 	beq.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134a6:	682b      	ldr	r3, [r5, #0]
 80134a8:	9314      	str	r3, [sp, #80]	; 0x50
 80134aa:	686b      	ldr	r3, [r5, #4]
 80134ac:	9315      	str	r3, [sp, #84]	; 0x54
 80134ae:	4bc4      	ldr	r3, [pc, #784]	; (80137c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80134b0:	ed94 7a02 	vldr	s14, [r4, #8]
 80134b4:	7819      	ldrb	r1, [r3, #0]
 80134b6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80134ba:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80134be:	2900      	cmp	r1, #0
 80134c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80134c4:	bf16      	itet	ne
 80134c6:	4619      	movne	r1, r3
 80134c8:	4611      	moveq	r1, r2
 80134ca:	4613      	movne	r3, r2
 80134cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134d0:	9116      	str	r1, [sp, #88]	; 0x58
 80134d2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80134d6:	f240 8387 	bls.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134da:	ed94 7a07 	vldr	s14, [r4, #28]
 80134de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80134e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134e6:	f240 837f 	bls.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134ea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80134ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80134f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134f6:	f240 8377 	bls.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134fa:	6822      	ldr	r2, [r4, #0]
 80134fc:	4bb1      	ldr	r3, [pc, #708]	; (80137c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80134fe:	429a      	cmp	r2, r3
 8013500:	f2c0 8372 	blt.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013504:	49b0      	ldr	r1, [pc, #704]	; (80137c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013506:	6963      	ldr	r3, [r4, #20]
 8013508:	428a      	cmp	r2, r1
 801350a:	f300 836d 	bgt.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801350e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013512:	48ae      	ldr	r0, [pc, #696]	; (80137cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013514:	33ff      	adds	r3, #255	; 0xff
 8013516:	4283      	cmp	r3, r0
 8013518:	f200 8366 	bhi.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801351c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801351e:	4dac      	ldr	r5, [pc, #688]	; (80137d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013520:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013524:	33ff      	adds	r3, #255	; 0xff
 8013526:	42ab      	cmp	r3, r5
 8013528:	f200 835e 	bhi.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801352c:	6862      	ldr	r2, [r4, #4]
 801352e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013532:	33ff      	adds	r3, #255	; 0xff
 8013534:	4283      	cmp	r3, r0
 8013536:	f200 8357 	bhi.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801353a:	69a1      	ldr	r1, [r4, #24]
 801353c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013540:	33ff      	adds	r3, #255	; 0xff
 8013542:	4283      	cmp	r3, r0
 8013544:	f200 8350 	bhi.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013548:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801354a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801354e:	30ff      	adds	r0, #255	; 0xff
 8013550:	42a8      	cmp	r0, r5
 8013552:	f200 8349 	bhi.w	8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013556:	428a      	cmp	r2, r1
 8013558:	f280 8110 	bge.w	801377c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801355c:	429a      	cmp	r2, r3
 801355e:	f300 8119 	bgt.w	8013794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013562:	4299      	cmp	r1, r3
 8013564:	f280 811d 	bge.w	80137a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013568:	2502      	movs	r5, #2
 801356a:	2701      	movs	r7, #1
 801356c:	46a9      	mov	r9, r5
 801356e:	46b8      	mov	r8, r7
 8013570:	f04f 0a00 	mov.w	sl, #0
 8013574:	4621      	mov	r1, r4
 8013576:	a849      	add	r0, sp, #292	; 0x124
 8013578:	f003 feec 	bl	8017354 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801357c:	4622      	mov	r2, r4
 801357e:	4653      	mov	r3, sl
 8013580:	a949      	add	r1, sp, #292	; 0x124
 8013582:	f8cd 9000 	str.w	r9, [sp]
 8013586:	a819      	add	r0, sp, #100	; 0x64
 8013588:	f004 f814 	bl	80175b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801358c:	4622      	mov	r2, r4
 801358e:	4653      	mov	r3, sl
 8013590:	a949      	add	r1, sp, #292	; 0x124
 8013592:	f8cd 8000 	str.w	r8, [sp]
 8013596:	a829      	add	r0, sp, #164	; 0xa4
 8013598:	f004 f80c 	bl	80175b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801359c:	4643      	mov	r3, r8
 801359e:	4622      	mov	r2, r4
 80135a0:	a949      	add	r1, sp, #292	; 0x124
 80135a2:	f8cd 9000 	str.w	r9, [sp]
 80135a6:	a839      	add	r0, sp, #228	; 0xe4
 80135a8:	f004 f804 	bl	80175b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80135ac:	42af      	cmp	r7, r5
 80135ae:	bfb5      	itete	lt
 80135b0:	2300      	movlt	r3, #0
 80135b2:	2301      	movge	r3, #1
 80135b4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80135b6:	930e      	strge	r3, [sp, #56]	; 0x38
 80135b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80135ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80135be:	af12      	add	r7, sp, #72	; 0x48
 80135c0:	bfb9      	ittee	lt
 80135c2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80135c4:	ac19      	addlt	r4, sp, #100	; 0x64
 80135c6:	ad19      	addge	r5, sp, #100	; 0x64
 80135c8:	ac29      	addge	r4, sp, #164	; 0xa4
 80135ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80135ce:	b928      	cbnz	r0, 80135dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80135d0:	4b80      	ldr	r3, [pc, #512]	; (80137d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80135d2:	6818      	ldr	r0, [r3, #0]
 80135d4:	6803      	ldr	r3, [r0, #0]
 80135d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80135d8:	4798      	blx	r3
 80135da:	6038      	str	r0, [r7, #0]
 80135dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80135de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80135e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80135e6:	930c      	str	r3, [sp, #48]	; 0x30
 80135e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80135ea:	6963      	ldr	r3, [r4, #20]
 80135ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80135ee:	440b      	add	r3, r1
 80135f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80135f4:	4408      	add	r0, r1
 80135f6:	b200      	sxth	r0, r0
 80135f8:	4283      	cmp	r3, r0
 80135fa:	900d      	str	r0, [sp, #52]	; 0x34
 80135fc:	f280 80dd 	bge.w	80137ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013600:	428b      	cmp	r3, r1
 8013602:	da08      	bge.n	8013616 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013604:	2a00      	cmp	r2, #0
 8013606:	dd06      	ble.n	8013616 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013608:	1acb      	subs	r3, r1, r3
 801360a:	429a      	cmp	r2, r3
 801360c:	f2c0 80e4 	blt.w	80137d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013610:	2b00      	cmp	r3, #0
 8013612:	f300 80e2 	bgt.w	80137da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013616:	6967      	ldr	r7, [r4, #20]
 8013618:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801361a:	443b      	add	r3, r7
 801361c:	461f      	mov	r7, r3
 801361e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013620:	1bdf      	subs	r7, r3, r7
 8013622:	4297      	cmp	r7, r2
 8013624:	bfa8      	it	ge
 8013626:	4617      	movge	r7, r2
 8013628:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801362c:	2f00      	cmp	r7, #0
 801362e:	f340 8166 	ble.w	80138fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013632:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013634:	6829      	ldr	r1, [r5, #0]
 8013636:	f9b3 2000 	ldrsh.w	r2, [r3]
 801363a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801363e:	6820      	ldr	r0, [r4, #0]
 8013640:	4411      	add	r1, r2
 8013642:	4299      	cmp	r1, r3
 8013644:	dd1a      	ble.n	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013646:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801364a:	440b      	add	r3, r1
 801364c:	4402      	add	r2, r0
 801364e:	b21b      	sxth	r3, r3
 8013650:	429a      	cmp	r2, r3
 8013652:	dc13      	bgt.n	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013654:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013656:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013658:	681b      	ldr	r3, [r3, #0]
 801365a:	9206      	str	r2, [sp, #24]
 801365c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801365e:	9205      	str	r2, [sp, #20]
 8013660:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013662:	9500      	str	r5, [sp, #0]
 8013664:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013668:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801366a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801366c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013670:	a912      	add	r1, sp, #72	; 0x48
 8013672:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013676:	aa49      	add	r2, sp, #292	; 0x124
 8013678:	4623      	mov	r3, r4
 801367a:	47c8      	blx	r9
 801367c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013680:	441a      	add	r2, r3
 8013682:	6963      	ldr	r3, [r4, #20]
 8013684:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013688:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801368c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013690:	68a1      	ldr	r1, [r4, #8]
 8013692:	ed94 6a08 	vldr	s12, [r4, #32]
 8013696:	6022      	str	r2, [r4, #0]
 8013698:	3301      	adds	r3, #1
 801369a:	6163      	str	r3, [r4, #20]
 801369c:	69a3      	ldr	r3, [r4, #24]
 801369e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80136a2:	3b01      	subs	r3, #1
 80136a4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80136a8:	61a3      	str	r3, [r4, #24]
 80136aa:	6923      	ldr	r3, [r4, #16]
 80136ac:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80136b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80136b4:	edd4 6a07 	vldr	s13, [r4, #28]
 80136b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80136bc:	440b      	add	r3, r1
 80136be:	68e1      	ldr	r1, [r4, #12]
 80136c0:	6123      	str	r3, [r4, #16]
 80136c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80136c6:	428b      	cmp	r3, r1
 80136c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80136cc:	db15      	blt.n	80136fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80136ce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80136d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80136d6:	3201      	adds	r2, #1
 80136d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80136dc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80136e0:	6022      	str	r2, [r4, #0]
 80136e2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80136e6:	1a5b      	subs	r3, r3, r1
 80136e8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80136ec:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80136f0:	6123      	str	r3, [r4, #16]
 80136f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80136f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80136fa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80136fe:	441a      	add	r2, r3
 8013700:	696b      	ldr	r3, [r5, #20]
 8013702:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013706:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801370a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801370e:	68a9      	ldr	r1, [r5, #8]
 8013710:	ed95 6a08 	vldr	s12, [r5, #32]
 8013714:	602a      	str	r2, [r5, #0]
 8013716:	3301      	adds	r3, #1
 8013718:	616b      	str	r3, [r5, #20]
 801371a:	69ab      	ldr	r3, [r5, #24]
 801371c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013720:	3b01      	subs	r3, #1
 8013722:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013726:	61ab      	str	r3, [r5, #24]
 8013728:	692b      	ldr	r3, [r5, #16]
 801372a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801372e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013732:	edd5 6a07 	vldr	s13, [r5, #28]
 8013736:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801373a:	440b      	add	r3, r1
 801373c:	68e9      	ldr	r1, [r5, #12]
 801373e:	612b      	str	r3, [r5, #16]
 8013740:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013744:	428b      	cmp	r3, r1
 8013746:	edc5 6a07 	vstr	s13, [r5, #28]
 801374a:	db15      	blt.n	8013778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801374c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013750:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013754:	3201      	adds	r2, #1
 8013756:	edc5 6a07 	vstr	s13, [r5, #28]
 801375a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801375e:	602a      	str	r2, [r5, #0]
 8013760:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013764:	1a5b      	subs	r3, r3, r1
 8013766:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801376a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801376e:	612b      	str	r3, [r5, #16]
 8013770:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013774:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013778:	3f01      	subs	r7, #1
 801377a:	e757      	b.n	801362c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801377c:	4299      	cmp	r1, r3
 801377e:	dc13      	bgt.n	80137a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013780:	429a      	cmp	r2, r3
 8013782:	da14      	bge.n	80137ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013784:	2502      	movs	r5, #2
 8013786:	2703      	movs	r7, #3
 8013788:	46a9      	mov	r9, r5
 801378a:	f04f 0800 	mov.w	r8, #0
 801378e:	f04f 0a01 	mov.w	sl, #1
 8013792:	e6ef      	b.n	8013574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013794:	2501      	movs	r5, #1
 8013796:	2700      	movs	r7, #0
 8013798:	46a9      	mov	r9, r5
 801379a:	46b8      	mov	r8, r7
 801379c:	f04f 0a02 	mov.w	sl, #2
 80137a0:	e6e8      	b.n	8013574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80137a2:	2501      	movs	r5, #1
 80137a4:	2702      	movs	r7, #2
 80137a6:	e6e1      	b.n	801356c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80137a8:	2500      	movs	r5, #0
 80137aa:	2701      	movs	r7, #1
 80137ac:	e7f4      	b.n	8013798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80137ae:	2702      	movs	r7, #2
 80137b0:	2503      	movs	r5, #3
 80137b2:	f04f 0900 	mov.w	r9, #0
 80137b6:	46b8      	mov	r8, r7
 80137b8:	e7e9      	b.n	801378e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80137ba:	4613      	mov	r3, r2
 80137bc:	e728      	b.n	8013610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80137be:	bf00      	nop
 80137c0:	20012d9c 	.word	0x20012d9c
 80137c4:	fffd8f01 	.word	0xfffd8f01
 80137c8:	00027100 	.word	0x00027100
 80137cc:	0004e1ff 	.word	0x0004e1ff
 80137d0:	0004e1fe 	.word	0x0004e1fe
 80137d4:	20012da4 	.word	0x20012da4
 80137d8:	4613      	mov	r3, r2
 80137da:	992b      	ldr	r1, [sp, #172]	; 0xac
 80137dc:	9111      	str	r1, [sp, #68]	; 0x44
 80137de:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80137e2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80137e6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80137e8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80137ec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80137f0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80137f4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80137f8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80137fc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013800:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013804:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013808:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801380c:	469e      	mov	lr, r3
 801380e:	469c      	mov	ip, r3
 8013810:	f04f 0900 	mov.w	r9, #0
 8013814:	f1bc 0f00 	cmp.w	ip, #0
 8013818:	d147      	bne.n	80138aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801381a:	eb03 0c07 	add.w	ip, r3, r7
 801381e:	1ad7      	subs	r7, r2, r3
 8013820:	f1b9 0f00 	cmp.w	r9, #0
 8013824:	d009      	beq.n	801383a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013826:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801382a:	9029      	str	r0, [sp, #164]	; 0xa4
 801382c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013830:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013834:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013838:	912d      	str	r1, [sp, #180]	; 0xb4
 801383a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801383c:	9111      	str	r1, [sp, #68]	; 0x44
 801383e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013842:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013846:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801384a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801384e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013852:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013856:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801385a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801385e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013862:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013866:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801386a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801386e:	f04f 0800 	mov.w	r8, #0
 8013872:	f1be 0f00 	cmp.w	lr, #0
 8013876:	d031      	beq.n	80138dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013878:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801387a:	4431      	add	r1, r6
 801387c:	4549      	cmp	r1, r9
 801387e:	4450      	add	r0, sl
 8013880:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013884:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013888:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801388c:	db08      	blt.n	80138a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801388e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013892:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013896:	ee37 7a06 	vadd.f32	s14, s14, s12
 801389a:	3001      	adds	r0, #1
 801389c:	eba1 0109 	sub.w	r1, r1, r9
 80138a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80138a4:	f04f 0801 	mov.w	r8, #1
 80138a8:	e7e3      	b.n	8013872 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80138aa:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80138ac:	4431      	add	r1, r6
 80138ae:	4541      	cmp	r1, r8
 80138b0:	4450      	add	r0, sl
 80138b2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80138b6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80138ba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80138be:	db08      	blt.n	80138d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80138c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80138c4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80138c8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80138cc:	3001      	adds	r0, #1
 80138ce:	eba1 0108 	sub.w	r1, r1, r8
 80138d2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80138d6:	f04f 0901 	mov.w	r9, #1
 80138da:	e79b      	b.n	8013814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80138dc:	449c      	add	ip, r3
 80138de:	1aff      	subs	r7, r7, r3
 80138e0:	f1b8 0f00 	cmp.w	r8, #0
 80138e4:	d009      	beq.n	80138fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80138e6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80138ea:	9019      	str	r0, [sp, #100]	; 0x64
 80138ec:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80138f0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80138f4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80138f8:	911d      	str	r1, [sp, #116]	; 0x74
 80138fa:	1ad2      	subs	r2, r2, r3
 80138fc:	e68b      	b.n	8013616 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80138fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013900:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013902:	2b00      	cmp	r3, #0
 8013904:	f000 80d1 	beq.w	8013aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013908:	ad19      	add	r5, sp, #100	; 0x64
 801390a:	ac39      	add	r4, sp, #228	; 0xe4
 801390c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801390e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013912:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013916:	930c      	str	r3, [sp, #48]	; 0x30
 8013918:	990c      	ldr	r1, [sp, #48]	; 0x30
 801391a:	6963      	ldr	r3, [r4, #20]
 801391c:	440b      	add	r3, r1
 801391e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013922:	4408      	add	r0, r1
 8013924:	b200      	sxth	r0, r0
 8013926:	4283      	cmp	r3, r0
 8013928:	900d      	str	r0, [sp, #52]	; 0x34
 801392a:	f280 80c1 	bge.w	8013ab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801392e:	428b      	cmp	r3, r1
 8013930:	da08      	bge.n	8013944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013932:	2a00      	cmp	r2, #0
 8013934:	dd06      	ble.n	8013944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013936:	1acb      	subs	r3, r1, r3
 8013938:	429a      	cmp	r2, r3
 801393a:	f2c0 80bb 	blt.w	8013ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801393e:	2b00      	cmp	r3, #0
 8013940:	f300 80b9 	bgt.w	8013ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013944:	6967      	ldr	r7, [r4, #20]
 8013946:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013948:	443b      	add	r3, r7
 801394a:	461f      	mov	r7, r3
 801394c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801394e:	1bdf      	subs	r7, r3, r7
 8013950:	4297      	cmp	r7, r2
 8013952:	bfa8      	it	ge
 8013954:	4617      	movge	r7, r2
 8013956:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801395a:	2f00      	cmp	r7, #0
 801395c:	f340 813c 	ble.w	8013bd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013960:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013962:	6829      	ldr	r1, [r5, #0]
 8013964:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013968:	f9bb 3000 	ldrsh.w	r3, [fp]
 801396c:	6820      	ldr	r0, [r4, #0]
 801396e:	4411      	add	r1, r2
 8013970:	4299      	cmp	r1, r3
 8013972:	dd1a      	ble.n	80139aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013974:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013978:	440b      	add	r3, r1
 801397a:	4402      	add	r2, r0
 801397c:	b21b      	sxth	r3, r3
 801397e:	429a      	cmp	r2, r3
 8013980:	dc13      	bgt.n	80139aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013982:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013984:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013986:	681b      	ldr	r3, [r3, #0]
 8013988:	9206      	str	r2, [sp, #24]
 801398a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801398c:	9205      	str	r2, [sp, #20]
 801398e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013990:	9500      	str	r5, [sp, #0]
 8013992:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013996:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013998:	9809      	ldr	r0, [sp, #36]	; 0x24
 801399a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801399e:	a912      	add	r1, sp, #72	; 0x48
 80139a0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80139a4:	aa49      	add	r2, sp, #292	; 0x124
 80139a6:	4623      	mov	r3, r4
 80139a8:	47c8      	blx	r9
 80139aa:	e9d4 2300 	ldrd	r2, r3, [r4]
 80139ae:	441a      	add	r2, r3
 80139b0:	6963      	ldr	r3, [r4, #20]
 80139b2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80139b6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80139ba:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80139be:	68a1      	ldr	r1, [r4, #8]
 80139c0:	ed94 6a08 	vldr	s12, [r4, #32]
 80139c4:	6022      	str	r2, [r4, #0]
 80139c6:	3301      	adds	r3, #1
 80139c8:	6163      	str	r3, [r4, #20]
 80139ca:	69a3      	ldr	r3, [r4, #24]
 80139cc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80139d0:	3b01      	subs	r3, #1
 80139d2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80139d6:	61a3      	str	r3, [r4, #24]
 80139d8:	6923      	ldr	r3, [r4, #16]
 80139da:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80139e2:	edd4 6a07 	vldr	s13, [r4, #28]
 80139e6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80139ea:	440b      	add	r3, r1
 80139ec:	68e1      	ldr	r1, [r4, #12]
 80139ee:	6123      	str	r3, [r4, #16]
 80139f0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80139f4:	428b      	cmp	r3, r1
 80139f6:	edc4 6a07 	vstr	s13, [r4, #28]
 80139fa:	db15      	blt.n	8013a28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80139fc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013a00:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a04:	3201      	adds	r2, #1
 8013a06:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a0a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013a0e:	6022      	str	r2, [r4, #0]
 8013a10:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a14:	1a5b      	subs	r3, r3, r1
 8013a16:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a1a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013a1e:	6123      	str	r3, [r4, #16]
 8013a20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a24:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a28:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013a2c:	441a      	add	r2, r3
 8013a2e:	696b      	ldr	r3, [r5, #20]
 8013a30:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013a34:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013a38:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013a3c:	68a9      	ldr	r1, [r5, #8]
 8013a3e:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a42:	602a      	str	r2, [r5, #0]
 8013a44:	3301      	adds	r3, #1
 8013a46:	616b      	str	r3, [r5, #20]
 8013a48:	69ab      	ldr	r3, [r5, #24]
 8013a4a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a4e:	3b01      	subs	r3, #1
 8013a50:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013a54:	61ab      	str	r3, [r5, #24]
 8013a56:	692b      	ldr	r3, [r5, #16]
 8013a58:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a60:	edd5 6a07 	vldr	s13, [r5, #28]
 8013a64:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a68:	440b      	add	r3, r1
 8013a6a:	68e9      	ldr	r1, [r5, #12]
 8013a6c:	612b      	str	r3, [r5, #16]
 8013a6e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a72:	428b      	cmp	r3, r1
 8013a74:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a78:	db15      	blt.n	8013aa6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013a7a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013a7e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a82:	3201      	adds	r2, #1
 8013a84:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a88:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013a8c:	602a      	str	r2, [r5, #0]
 8013a8e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a92:	1a5b      	subs	r3, r3, r1
 8013a94:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a98:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013a9c:	612b      	str	r3, [r5, #16]
 8013a9e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013aa2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013aa6:	3f01      	subs	r7, #1
 8013aa8:	e757      	b.n	801395a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013aaa:	ad39      	add	r5, sp, #228	; 0xe4
 8013aac:	ac19      	add	r4, sp, #100	; 0x64
 8013aae:	e72d      	b.n	801390c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013ab0:	4613      	mov	r3, r2
 8013ab2:	e744      	b.n	801393e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013ab4:	4613      	mov	r3, r2
 8013ab6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013aba:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013abc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013ac0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013ac4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013ac8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013acc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013ad0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013ad4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013ad8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013ada:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013ade:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013ae2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013ae6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013aea:	960e      	str	r6, [sp, #56]	; 0x38
 8013aec:	469e      	mov	lr, r3
 8013aee:	461f      	mov	r7, r3
 8013af0:	f04f 0900 	mov.w	r9, #0
 8013af4:	2f00      	cmp	r7, #0
 8013af6:	d146      	bne.n	8013b86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013af8:	449c      	add	ip, r3
 8013afa:	1ad7      	subs	r7, r2, r3
 8013afc:	f1b9 0f00 	cmp.w	r9, #0
 8013b00:	d009      	beq.n	8013b16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013b02:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013b06:	9039      	str	r0, [sp, #228]	; 0xe4
 8013b08:	913d      	str	r1, [sp, #244]	; 0xf4
 8013b0a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013b0e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013b12:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013b16:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013b18:	910e      	str	r1, [sp, #56]	; 0x38
 8013b1a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013b1e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013b22:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013b26:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013b2a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013b2e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013b32:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013b36:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013b3a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013b3e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013b42:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013b46:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013b4a:	f04f 0800 	mov.w	r8, #0
 8013b4e:	f1be 0f00 	cmp.w	lr, #0
 8013b52:	d030      	beq.n	8013bb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013b54:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013b56:	4431      	add	r1, r6
 8013b58:	4549      	cmp	r1, r9
 8013b5a:	4450      	add	r0, sl
 8013b5c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013b60:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013b64:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013b68:	db08      	blt.n	8013b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013b6a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013b6e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b72:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013b76:	3001      	adds	r0, #1
 8013b78:	eba1 0109 	sub.w	r1, r1, r9
 8013b7c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013b80:	f04f 0801 	mov.w	r8, #1
 8013b84:	e7e3      	b.n	8013b4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013b86:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013b88:	4431      	add	r1, r6
 8013b8a:	4541      	cmp	r1, r8
 8013b8c:	4450      	add	r0, sl
 8013b8e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013b92:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013b96:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013b9a:	db08      	blt.n	8013bae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013b9c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013ba0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013ba4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013ba8:	3001      	adds	r0, #1
 8013baa:	eba1 0108 	sub.w	r1, r1, r8
 8013bae:	3f01      	subs	r7, #1
 8013bb0:	f04f 0901 	mov.w	r9, #1
 8013bb4:	e79e      	b.n	8013af4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013bb6:	449c      	add	ip, r3
 8013bb8:	1aff      	subs	r7, r7, r3
 8013bba:	f1b8 0f00 	cmp.w	r8, #0
 8013bbe:	d009      	beq.n	8013bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013bc0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013bc4:	9019      	str	r0, [sp, #100]	; 0x64
 8013bc6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013bca:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013bce:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013bd2:	911d      	str	r1, [sp, #116]	; 0x74
 8013bd4:	1ad2      	subs	r2, r2, r3
 8013bd6:	e6b5      	b.n	8013944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013bd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013bda:	681b      	ldr	r3, [r3, #0]
 8013bdc:	b923      	cbnz	r3, 8013be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013bde:	4b04      	ldr	r3, [pc, #16]	; (8013bf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013be0:	6818      	ldr	r0, [r3, #0]
 8013be2:	6803      	ldr	r3, [r0, #0]
 8013be4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013be6:	4798      	blx	r3
 8013be8:	b05b      	add	sp, #364	; 0x16c
 8013bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bee:	bf00      	nop
 8013bf0:	20012da4 	.word	0x20012da4

08013bf4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013bf4:	b570      	push	{r4, r5, r6, lr}
 8013bf6:	4604      	mov	r4, r0
 8013bf8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013bfc:	9805      	ldr	r0, [sp, #20]
 8013bfe:	6061      	str	r1, [r4, #4]
 8013c00:	2500      	movs	r5, #0
 8013c02:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013c06:	8263      	strh	r3, [r4, #18]
 8013c08:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013c0c:	8025      	strh	r5, [r4, #0]
 8013c0e:	7221      	strb	r1, [r4, #8]
 8013c10:	7266      	strb	r6, [r4, #9]
 8013c12:	60e0      	str	r0, [r4, #12]
 8013c14:	8222      	strh	r2, [r4, #16]
 8013c16:	82a3      	strh	r3, [r4, #20]
 8013c18:	82e5      	strh	r5, [r4, #22]
 8013c1a:	8325      	strh	r5, [r4, #24]
 8013c1c:	8365      	strh	r5, [r4, #26]
 8013c1e:	83a5      	strh	r5, [r4, #28]
 8013c20:	83e5      	strh	r5, [r4, #30]
 8013c22:	8425      	strh	r5, [r4, #32]
 8013c24:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013c28:	b32e      	cbz	r6, 8013c76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c2a:	6803      	ldr	r3, [r0, #0]
 8013c2c:	695b      	ldr	r3, [r3, #20]
 8013c2e:	4798      	blx	r3
 8013c30:	4606      	mov	r6, r0
 8013c32:	b300      	cbz	r0, 8013c76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c34:	68e0      	ldr	r0, [r4, #12]
 8013c36:	6803      	ldr	r3, [r0, #0]
 8013c38:	4631      	mov	r1, r6
 8013c3a:	68db      	ldr	r3, [r3, #12]
 8013c3c:	4798      	blx	r3
 8013c3e:	4605      	mov	r5, r0
 8013c40:	b1c8      	cbz	r0, 8013c76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c42:	7b43      	ldrb	r3, [r0, #13]
 8013c44:	7a82      	ldrb	r2, [r0, #10]
 8013c46:	005b      	lsls	r3, r3, #1
 8013c48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013c4c:	4313      	orrs	r3, r2
 8013c4e:	8423      	strh	r3, [r4, #32]
 8013c50:	7a63      	ldrb	r3, [r4, #9]
 8013c52:	2b06      	cmp	r3, #6
 8013c54:	d10f      	bne.n	8013c76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c56:	68e0      	ldr	r0, [r4, #12]
 8013c58:	6803      	ldr	r3, [r0, #0]
 8013c5a:	462a      	mov	r2, r5
 8013c5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013c5e:	4631      	mov	r1, r6
 8013c60:	4798      	blx	r3
 8013c62:	7b6b      	ldrb	r3, [r5, #13]
 8013c64:	005b      	lsls	r3, r3, #1
 8013c66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013c6a:	7aab      	ldrb	r3, [r5, #10]
 8013c6c:	4313      	orrs	r3, r2
 8013c6e:	4418      	add	r0, r3
 8013c70:	8c23      	ldrh	r3, [r4, #32]
 8013c72:	4418      	add	r0, r3
 8013c74:	8420      	strh	r0, [r4, #32]
 8013c76:	4620      	mov	r0, r4
 8013c78:	bd70      	pop	{r4, r5, r6, pc}

08013c7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013c7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c7e:	2400      	movs	r4, #0
 8013c80:	b085      	sub	sp, #20
 8013c82:	4681      	mov	r9, r0
 8013c84:	4688      	mov	r8, r1
 8013c86:	4692      	mov	sl, r2
 8013c88:	469b      	mov	fp, r3
 8013c8a:	4627      	mov	r7, r4
 8013c8c:	4625      	mov	r5, r4
 8013c8e:	4626      	mov	r6, r4
 8013c90:	4554      	cmp	r4, sl
 8013c92:	da2a      	bge.n	8013cea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013c94:	2300      	movs	r3, #0
 8013c96:	9303      	str	r3, [sp, #12]
 8013c98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013c9c:	429d      	cmp	r5, r3
 8013c9e:	d004      	beq.n	8013caa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013ca0:	f242 030b 	movw	r3, #8203	; 0x200b
 8013ca4:	429d      	cmp	r5, r3
 8013ca6:	bf18      	it	ne
 8013ca8:	462f      	movne	r7, r5
 8013caa:	ab03      	add	r3, sp, #12
 8013cac:	4642      	mov	r2, r8
 8013cae:	4659      	mov	r1, fp
 8013cb0:	4648      	mov	r0, r9
 8013cb2:	f003 f965 	bl	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013cb6:	4605      	mov	r5, r0
 8013cb8:	b1b8      	cbz	r0, 8013cea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013cba:	280a      	cmp	r0, #10
 8013cbc:	d015      	beq.n	8013cea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013cbe:	9a03      	ldr	r2, [sp, #12]
 8013cc0:	b18a      	cbz	r2, 8013ce6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013cc2:	7b50      	ldrb	r0, [r2, #13]
 8013cc4:	7a93      	ldrb	r3, [r2, #10]
 8013cc6:	8895      	ldrh	r5, [r2, #4]
 8013cc8:	0040      	lsls	r0, r0, #1
 8013cca:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013cce:	4303      	orrs	r3, r0
 8013cd0:	9301      	str	r3, [sp, #4]
 8013cd2:	f8d8 3000 	ldr.w	r3, [r8]
 8013cd6:	4639      	mov	r1, r7
 8013cd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013cda:	4640      	mov	r0, r8
 8013cdc:	4798      	blx	r3
 8013cde:	9b01      	ldr	r3, [sp, #4]
 8013ce0:	4418      	add	r0, r3
 8013ce2:	4406      	add	r6, r0
 8013ce4:	b2b6      	uxth	r6, r6
 8013ce6:	3401      	adds	r4, #1
 8013ce8:	e7d2      	b.n	8013c90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013cea:	4630      	mov	r0, r6
 8013cec:	b005      	add	sp, #20
 8013cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013cf2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013cf2:	2a02      	cmp	r2, #2
 8013cf4:	b530      	push	{r4, r5, lr}
 8013cf6:	d011      	beq.n	8013d1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013cf8:	2a03      	cmp	r2, #3
 8013cfa:	d01c      	beq.n	8013d36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013cfc:	2a01      	cmp	r2, #1
 8013cfe:	d10c      	bne.n	8013d1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013d00:	888b      	ldrh	r3, [r1, #4]
 8013d02:	8801      	ldrh	r1, [r0, #0]
 8013d04:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013d08:	8844      	ldrh	r4, [r0, #2]
 8013d0a:	8004      	strh	r4, [r0, #0]
 8013d0c:	1a5b      	subs	r3, r3, r1
 8013d0e:	1a9b      	subs	r3, r3, r2
 8013d10:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013d14:	8043      	strh	r3, [r0, #2]
 8013d16:	8081      	strh	r1, [r0, #4]
 8013d18:	80c2      	strh	r2, [r0, #6]
 8013d1a:	bd30      	pop	{r4, r5, pc}
 8013d1c:	88cb      	ldrh	r3, [r1, #6]
 8013d1e:	8842      	ldrh	r2, [r0, #2]
 8013d20:	1a9b      	subs	r3, r3, r2
 8013d22:	88c2      	ldrh	r2, [r0, #6]
 8013d24:	1a9b      	subs	r3, r3, r2
 8013d26:	888a      	ldrh	r2, [r1, #4]
 8013d28:	8801      	ldrh	r1, [r0, #0]
 8013d2a:	8043      	strh	r3, [r0, #2]
 8013d2c:	1a52      	subs	r2, r2, r1
 8013d2e:	8881      	ldrh	r1, [r0, #4]
 8013d30:	1a52      	subs	r2, r2, r1
 8013d32:	8002      	strh	r2, [r0, #0]
 8013d34:	e7f1      	b.n	8013d1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013d36:	88cb      	ldrh	r3, [r1, #6]
 8013d38:	8841      	ldrh	r1, [r0, #2]
 8013d3a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013d3e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013d42:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8013d46:	8045      	strh	r5, [r0, #2]
 8013d48:	1a5b      	subs	r3, r3, r1
 8013d4a:	1a9b      	subs	r3, r3, r2
 8013d4c:	8003      	strh	r3, [r0, #0]
 8013d4e:	8082      	strh	r2, [r0, #4]
 8013d50:	80c4      	strh	r4, [r0, #6]
 8013d52:	e7e2      	b.n	8013d1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013d54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d58:	b09f      	sub	sp, #124	; 0x7c
 8013d5a:	9116      	str	r1, [sp, #88]	; 0x58
 8013d5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8013d5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013d60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013d62:	8809      	ldrh	r1, [r1, #0]
 8013d64:	889b      	ldrh	r3, [r3, #4]
 8013d66:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8013d6a:	9212      	str	r2, [sp, #72]	; 0x48
 8013d6c:	440b      	add	r3, r1
 8013d6e:	b21b      	sxth	r3, r3
 8013d70:	9310      	str	r3, [sp, #64]	; 0x40
 8013d72:	f8d8 3000 	ldr.w	r3, [r8]
 8013d76:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8013d7a:	7b19      	ldrb	r1, [r3, #12]
 8013d7c:	7adb      	ldrb	r3, [r3, #11]
 8013d7e:	9011      	str	r0, [sp, #68]	; 0x44
 8013d80:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013d84:	9114      	str	r1, [sp, #80]	; 0x50
 8013d86:	9315      	str	r3, [sp, #84]	; 0x54
 8013d88:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8013d8c:	2a00      	cmp	r2, #0
 8013d8e:	d06a      	beq.n	8013e66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013d90:	f898 3010 	ldrb.w	r3, [r8, #16]
 8013d94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013d96:	2b06      	cmp	r3, #6
 8013d98:	bf14      	ite	ne
 8013d9a:	2301      	movne	r3, #1
 8013d9c:	2302      	moveq	r3, #2
 8013d9e:	4413      	add	r3, r2
 8013da0:	f04f 0900 	mov.w	r9, #0
 8013da4:	930f      	str	r3, [sp, #60]	; 0x3c
 8013da6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013daa:	464c      	mov	r4, r9
 8013dac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013db0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013db4:	4293      	cmp	r3, r2
 8013db6:	f280 808f 	bge.w	8013ed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013dba:	2300      	movs	r3, #0
 8013dbc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013dc0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013dc4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013dc8:	429c      	cmp	r4, r3
 8013dca:	d006      	beq.n	8013dda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8013dcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013dce:	f242 020b 	movw	r2, #8203	; 0x200b
 8013dd2:	4294      	cmp	r4, r2
 8013dd4:	bf18      	it	ne
 8013dd6:	4623      	movne	r3, r4
 8013dd8:	930d      	str	r3, [sp, #52]	; 0x34
 8013dda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ddc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013dde:	f8d8 2000 	ldr.w	r2, [r8]
 8013de2:	428b      	cmp	r3, r1
 8013de4:	db41      	blt.n	8013e6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013de6:	6813      	ldr	r3, [r2, #0]
 8013de8:	4610      	mov	r0, r2
 8013dea:	695b      	ldr	r3, [r3, #20]
 8013dec:	4798      	blx	r3
 8013dee:	4604      	mov	r4, r0
 8013df0:	f8d8 0000 	ldr.w	r0, [r8]
 8013df4:	6803      	ldr	r3, [r0, #0]
 8013df6:	aa1d      	add	r2, sp, #116	; 0x74
 8013df8:	689d      	ldr	r5, [r3, #8]
 8013dfa:	4621      	mov	r1, r4
 8013dfc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013e00:	47a8      	blx	r5
 8013e02:	901c      	str	r0, [sp, #112]	; 0x70
 8013e04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013e08:	429c      	cmp	r4, r3
 8013e0a:	f000 80eb 	beq.w	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e0e:	f242 030b 	movw	r3, #8203	; 0x200b
 8013e12:	429c      	cmp	r4, r3
 8013e14:	f000 80e6 	beq.w	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e18:	2c00      	cmp	r4, #0
 8013e1a:	f000 80f8 	beq.w	801400e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013e1e:	2c0a      	cmp	r4, #10
 8013e20:	d060      	beq.n	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013e22:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013e24:	b36a      	cbz	r2, 8013e82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013e26:	8894      	ldrh	r4, [r2, #4]
 8013e28:	f1bb 0f00 	cmp.w	fp, #0
 8013e2c:	d03b      	beq.n	8013ea6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013e2e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013e32:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013e36:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013e3a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013e3e:	f1bb 0f01 	cmp.w	fp, #1
 8013e42:	ea49 0903 	orr.w	r9, r9, r3
 8013e46:	d134      	bne.n	8013eb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8013e48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e4a:	eba6 0609 	sub.w	r6, r6, r9
 8013e4e:	2b00      	cmp	r3, #0
 8013e50:	d14f      	bne.n	8013ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013e52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013e54:	eb09 0306 	add.w	r3, r9, r6
 8013e58:	4413      	add	r3, r2
 8013e5a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013e5c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013e60:	4293      	cmp	r3, r2
 8013e62:	da51      	bge.n	8013f08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013e64:	e038      	b.n	8013ed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013e66:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013e68:	e79a      	b.n	8013da0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8013e6a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013e6e:	9301      	str	r3, [sp, #4]
 8013e70:	ab1d      	add	r3, sp, #116	; 0x74
 8013e72:	9300      	str	r3, [sp, #0]
 8013e74:	4659      	mov	r1, fp
 8013e76:	ab1c      	add	r3, sp, #112	; 0x70
 8013e78:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013e7a:	f003 f8ca 	bl	8017012 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013e7e:	4604      	mov	r4, r0
 8013e80:	e7c0      	b.n	8013e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013e82:	f8d8 0000 	ldr.w	r0, [r8]
 8013e86:	6803      	ldr	r3, [r0, #0]
 8013e88:	691b      	ldr	r3, [r3, #16]
 8013e8a:	4798      	blx	r3
 8013e8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013e90:	4298      	cmp	r0, r3
 8013e92:	f000 80a7 	beq.w	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e96:	f242 030b 	movw	r3, #8203	; 0x200b
 8013e9a:	4298      	cmp	r0, r3
 8013e9c:	f000 80a2 	beq.w	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013ea0:	f1bb 0f00 	cmp.w	fp, #0
 8013ea4:	d100      	bne.n	8013ea8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013ea6:	444e      	add	r6, r9
 8013ea8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013eaa:	2a00      	cmp	r2, #0
 8013eac:	d1bf      	bne.n	8013e2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013eae:	4691      	mov	r9, r2
 8013eb0:	e098      	b.n	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013eb4:	2b00      	cmp	r3, #0
 8013eb6:	f000 80ac 	beq.w	8014012 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8013eba:	f1bb 0f00 	cmp.w	fp, #0
 8013ebe:	d118      	bne.n	8013ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013ec0:	f8d8 0000 	ldr.w	r0, [r8]
 8013ec4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013ec6:	6803      	ldr	r3, [r0, #0]
 8013ec8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013eca:	4798      	blx	r3
 8013ecc:	4406      	add	r6, r0
 8013ece:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013ed0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013ed2:	1af3      	subs	r3, r6, r3
 8013ed4:	4293      	cmp	r3, r2
 8013ed6:	dd17      	ble.n	8013f08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013ed8:	2c00      	cmp	r4, #0
 8013eda:	f000 8098 	beq.w	801400e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013ede:	2c0a      	cmp	r4, #10
 8013ee0:	f040 8086 	bne.w	8013ff0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013ee4:	240a      	movs	r4, #10
 8013ee6:	fab4 f084 	clz	r0, r4
 8013eea:	0940      	lsrs	r0, r0, #5
 8013eec:	b01f      	add	sp, #124	; 0x7c
 8013eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ef2:	f8d8 0000 	ldr.w	r0, [r8]
 8013ef6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013ef8:	6803      	ldr	r3, [r0, #0]
 8013efa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013efc:	4798      	blx	r3
 8013efe:	f1bb 0f01 	cmp.w	fp, #1
 8013f02:	eba6 0600 	sub.w	r6, r6, r0
 8013f06:	d0a4      	beq.n	8013e52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013f08:	981c      	ldr	r0, [sp, #112]	; 0x70
 8013f0a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013f0c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013f10:	f9b3 7000 	ldrsh.w	r7, [r3]
 8013f14:	7b43      	ldrb	r3, [r0, #13]
 8013f16:	015b      	lsls	r3, r3, #5
 8013f18:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013f1c:	7983      	ldrb	r3, [r0, #6]
 8013f1e:	4431      	add	r1, r6
 8013f20:	4313      	orrs	r3, r2
 8013f22:	440b      	add	r3, r1
 8013f24:	42bb      	cmp	r3, r7
 8013f26:	db5d      	blt.n	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f2a:	4299      	cmp	r1, r3
 8013f2c:	da5a      	bge.n	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f2e:	f8d8 0000 	ldr.w	r0, [r8]
 8013f32:	6803      	ldr	r3, [r0, #0]
 8013f34:	42b7      	cmp	r7, r6
 8013f36:	bfc8      	it	gt
 8013f38:	1bbf      	subgt	r7, r7, r6
 8013f3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013f3c:	bfcc      	ite	gt
 8013f3e:	b2bf      	uxthgt	r7, r7
 8013f40:	2700      	movle	r7, #0
 8013f42:	4798      	blx	r3
 8013f44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013f46:	7b5a      	ldrb	r2, [r3, #13]
 8013f48:	00d1      	lsls	r1, r2, #3
 8013f4a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8013f4e:	7a19      	ldrb	r1, [r3, #8]
 8013f50:	4329      	orrs	r1, r5
 8013f52:	0655      	lsls	r5, r2, #25
 8013f54:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013f56:	bf44      	itt	mi
 8013f58:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8013f5c:	b209      	sxthmi	r1, r1
 8013f5e:	1945      	adds	r5, r0, r5
 8013f60:	1a6d      	subs	r5, r5, r1
 8013f62:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013f64:	b2ad      	uxth	r5, r5
 8013f66:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8013f6a:	fa0f fa85 	sxth.w	sl, r5
 8013f6e:	4551      	cmp	r1, sl
 8013f70:	dd3c      	ble.n	8013fec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013f72:	0112      	lsls	r2, r2, #4
 8013f74:	79d8      	ldrb	r0, [r3, #7]
 8013f76:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013f7a:	4302      	orrs	r2, r0
 8013f7c:	4492      	add	sl, r2
 8013f7e:	4551      	cmp	r1, sl
 8013f80:	dc30      	bgt.n	8013fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f82:	1b4d      	subs	r5, r1, r5
 8013f84:	b22d      	sxth	r5, r5
 8013f86:	468a      	mov	sl, r1
 8013f88:	9319      	str	r3, [sp, #100]	; 0x64
 8013f8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013f8c:	f8d8 0000 	ldr.w	r0, [r8]
 8013f90:	681a      	ldr	r2, [r3, #0]
 8013f92:	6801      	ldr	r1, [r0, #0]
 8013f94:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8013f96:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013f98:	9313      	str	r3, [sp, #76]	; 0x4c
 8013f9a:	9218      	str	r2, [sp, #96]	; 0x60
 8013f9c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8013f9e:	4788      	blx	r1
 8013fa0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013fa4:	910b      	str	r1, [sp, #44]	; 0x2c
 8013fa6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8013faa:	910a      	str	r1, [sp, #40]	; 0x28
 8013fac:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013fb0:	9109      	str	r1, [sp, #36]	; 0x24
 8013fb2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013fb6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013fb8:	9305      	str	r3, [sp, #20]
 8013fba:	b2ad      	uxth	r5, r5
 8013fbc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013fc0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8013fc4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013fc6:	9304      	str	r3, [sp, #16]
 8013fc8:	4437      	add	r7, r6
 8013fca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013fcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013fce:	9206      	str	r2, [sp, #24]
 8013fd0:	b23f      	sxth	r7, r7
 8013fd2:	f8cd a004 	str.w	sl, [sp, #4]
 8013fd6:	9700      	str	r7, [sp, #0]
 8013fd8:	681a      	ldr	r2, [r3, #0]
 8013fda:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013fdc:	685b      	ldr	r3, [r3, #4]
 8013fde:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013fe0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013fe2:	47a8      	blx	r5
 8013fe4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fe6:	3301      	adds	r3, #1
 8013fe8:	930e      	str	r3, [sp, #56]	; 0x38
 8013fea:	e6e1      	b.n	8013db0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8013fec:	2500      	movs	r5, #0
 8013fee:	e7cb      	b.n	8013f88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8013ff0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013ff2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013ff4:	3501      	adds	r5, #1
 8013ff6:	429d      	cmp	r5, r3
 8013ff8:	f6bf af75 	bge.w	8013ee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8013ffc:	4659      	mov	r1, fp
 8013ffe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014000:	f7f3 ffb0 	bl	8007f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014004:	4604      	mov	r4, r0
 8014006:	b110      	cbz	r0, 801400e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014008:	280a      	cmp	r0, #10
 801400a:	d1f2      	bne.n	8013ff2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801400c:	e76a      	b.n	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801400e:	2400      	movs	r4, #0
 8014010:	e769      	b.n	8013ee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014012:	f1bb 0f00 	cmp.w	fp, #0
 8014016:	f43f af5a 	beq.w	8013ece <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801401a:	e775      	b.n	8013f08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801401c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801401c:	b530      	push	{r4, r5, lr}
 801401e:	8ac4      	ldrh	r4, [r0, #22]
 8014020:	8b45      	ldrh	r5, [r0, #26]
 8014022:	8343      	strh	r3, [r0, #26]
 8014024:	442c      	add	r4, r5
 8014026:	1ae4      	subs	r4, r4, r3
 8014028:	82c4      	strh	r4, [r0, #22]
 801402a:	8b83      	ldrh	r3, [r0, #28]
 801402c:	8b04      	ldrh	r4, [r0, #24]
 801402e:	4422      	add	r2, r4
 8014030:	440c      	add	r4, r1
 8014032:	1a59      	subs	r1, r3, r1
 8014034:	83c2      	strh	r2, [r0, #30]
 8014036:	8304      	strh	r4, [r0, #24]
 8014038:	8381      	strh	r1, [r0, #28]
 801403a:	bd30      	pop	{r4, r5, pc}

0801403c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801403c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014040:	4604      	mov	r4, r0
 8014042:	8a47      	ldrh	r7, [r0, #18]
 8014044:	68c0      	ldr	r0, [r0, #12]
 8014046:	6803      	ldr	r3, [r0, #0]
 8014048:	b085      	sub	sp, #20
 801404a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801404c:	4798      	blx	r3
 801404e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014052:	7a63      	ldrb	r3, [r4, #9]
 8014054:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014058:	42b7      	cmp	r7, r6
 801405a:	f103 33ff 	add.w	r3, r3, #4294967295
 801405e:	bfac      	ite	ge
 8014060:	f04f 0900 	movge.w	r9, #0
 8014064:	f04f 0901 	movlt.w	r9, #1
 8014068:	2b05      	cmp	r3, #5
 801406a:	d804      	bhi.n	8014076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801406c:	e8df f003 	tbb	[pc, r3]
 8014070:	470e0854 	.word	0x470e0854
 8014074:	4c4c      	.short	0x4c4c
 8014076:	2500      	movs	r5, #0
 8014078:	46a9      	mov	r9, r5
 801407a:	462e      	mov	r6, r5
 801407c:	462f      	mov	r7, r5
 801407e:	e00d      	b.n	801409c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014080:	42b7      	cmp	r7, r6
 8014082:	bfb4      	ite	lt
 8014084:	2600      	movlt	r6, #0
 8014086:	2601      	movge	r6, #1
 8014088:	2500      	movs	r5, #0
 801408a:	e7f7      	b.n	801407c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801408c:	42b7      	cmp	r7, r6
 801408e:	464d      	mov	r5, r9
 8014090:	f04f 0900 	mov.w	r9, #0
 8014094:	bfb4      	ite	lt
 8014096:	2600      	movlt	r6, #0
 8014098:	2601      	movge	r6, #1
 801409a:	464f      	mov	r7, r9
 801409c:	f04f 0800 	mov.w	r8, #0
 80140a0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80140a4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80140a8:	f8cd 8004 	str.w	r8, [sp, #4]
 80140ac:	2300      	movs	r3, #0
 80140ae:	9303      	str	r3, [sp, #12]
 80140b0:	8823      	ldrh	r3, [r4, #0]
 80140b2:	2b20      	cmp	r3, #32
 80140b4:	d034      	beq.n	8014120 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80140b6:	f242 010b 	movw	r1, #8203	; 0x200b
 80140ba:	1a5a      	subs	r2, r3, r1
 80140bc:	f1d2 0a00 	rsbs	sl, r2, #0
 80140c0:	eb4a 0a02 	adc.w	sl, sl, r2
 80140c4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80140c8:	4293      	cmp	r3, r2
 80140ca:	d009      	beq.n	80140e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80140cc:	428b      	cmp	r3, r1
 80140ce:	9a01      	ldr	r2, [sp, #4]
 80140d0:	bf18      	it	ne
 80140d2:	461a      	movne	r2, r3
 80140d4:	9201      	str	r2, [sp, #4]
 80140d6:	bf0c      	ite	eq
 80140d8:	f04f 0a01 	moveq.w	sl, #1
 80140dc:	f04f 0a00 	movne.w	sl, #0
 80140e0:	ab03      	add	r3, sp, #12
 80140e2:	68e2      	ldr	r2, [r4, #12]
 80140e4:	7a21      	ldrb	r1, [r4, #8]
 80140e6:	6860      	ldr	r0, [r4, #4]
 80140e8:	f002 ff4a 	bl	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80140ec:	8020      	strh	r0, [r4, #0]
 80140ee:	b9d8      	cbnz	r0, 8014128 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80140f0:	8ba2      	ldrh	r2, [r4, #28]
 80140f2:	2300      	movs	r3, #0
 80140f4:	4611      	mov	r1, r2
 80140f6:	4620      	mov	r0, r4
 80140f8:	f7ff ff90 	bl	801401c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80140fc:	e06e      	b.n	80141dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80140fe:	2500      	movs	r5, #0
 8014100:	46a9      	mov	r9, r5
 8014102:	462e      	mov	r6, r5
 8014104:	2701      	movs	r7, #1
 8014106:	e7c9      	b.n	801409c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014108:	42b7      	cmp	r7, r6
 801410a:	f04f 0500 	mov.w	r5, #0
 801410e:	bfb4      	ite	lt
 8014110:	2700      	movlt	r7, #0
 8014112:	2701      	movge	r7, #1
 8014114:	462e      	mov	r6, r5
 8014116:	e7c1      	b.n	801409c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014118:	2500      	movs	r5, #0
 801411a:	46a9      	mov	r9, r5
 801411c:	2601      	movs	r6, #1
 801411e:	e7ad      	b.n	801407c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014120:	9301      	str	r3, [sp, #4]
 8014122:	f04f 0a01 	mov.w	sl, #1
 8014126:	e7db      	b.n	80140e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014128:	8b63      	ldrh	r3, [r4, #26]
 801412a:	280a      	cmp	r0, #10
 801412c:	f103 0301 	add.w	r3, r3, #1
 8014130:	8363      	strh	r3, [r4, #26]
 8014132:	d0dd      	beq.n	80140f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014134:	9a03      	ldr	r2, [sp, #12]
 8014136:	bb62      	cbnz	r2, 8014192 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014138:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801413c:	4298      	cmp	r0, r3
 801413e:	d003      	beq.n	8014148 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014140:	f242 030b 	movw	r3, #8203	; 0x200b
 8014144:	4298      	cmp	r0, r3
 8014146:	d1b1      	bne.n	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014148:	8823      	ldrh	r3, [r4, #0]
 801414a:	8ba1      	ldrh	r1, [r4, #28]
 801414c:	2b20      	cmp	r3, #32
 801414e:	d003      	beq.n	8014158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014150:	f242 000b 	movw	r0, #8203	; 0x200b
 8014154:	4283      	cmp	r3, r0
 8014156:	d131      	bne.n	80141bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014158:	f1ba 0f00 	cmp.w	sl, #0
 801415c:	bf0a      	itet	eq
 801415e:	4688      	moveq	r8, r1
 8014160:	4650      	movne	r0, sl
 8014162:	2001      	moveq	r0, #1
 8014164:	440a      	add	r2, r1
 8014166:	8b23      	ldrh	r3, [r4, #24]
 8014168:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801416c:	b292      	uxth	r2, r2
 801416e:	83a2      	strh	r2, [r4, #28]
 8014170:	4413      	add	r3, r2
 8014172:	f1b9 0f00 	cmp.w	r9, #0
 8014176:	d102      	bne.n	801417e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014178:	2d00      	cmp	r5, #0
 801417a:	d042      	beq.n	8014202 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801417c:	b300      	cbz	r0, 80141c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801417e:	8c21      	ldrh	r1, [r4, #32]
 8014180:	4419      	add	r1, r3
 8014182:	458c      	cmp	ip, r1
 8014184:	da37      	bge.n	80141f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014186:	8ae1      	ldrh	r1, [r4, #22]
 8014188:	2900      	cmp	r1, #0
 801418a:	d034      	beq.n	80141f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801418c:	4563      	cmp	r3, ip
 801418e:	dd8d      	ble.n	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014190:	e01d      	b.n	80141ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014192:	8893      	ldrh	r3, [r2, #4]
 8014194:	8023      	strh	r3, [r4, #0]
 8014196:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801419a:	9901      	ldr	r1, [sp, #4]
 801419c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80141a0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80141a4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80141a8:	ea4b 0b00 	orr.w	fp, fp, r0
 80141ac:	68e0      	ldr	r0, [r4, #12]
 80141ae:	6803      	ldr	r3, [r0, #0]
 80141b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141b2:	4798      	blx	r3
 80141b4:	eb0b 0200 	add.w	r2, fp, r0
 80141b8:	b292      	uxth	r2, r2
 80141ba:	e7c5      	b.n	8014148 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80141bc:	2000      	movs	r0, #0
 80141be:	e7d1      	b.n	8014164 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80141c0:	4563      	cmp	r3, ip
 80141c2:	f77f af73 	ble.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80141c6:	8ae3      	ldrh	r3, [r4, #22]
 80141c8:	2b00      	cmp	r3, #0
 80141ca:	f43f af6f 	beq.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80141ce:	2301      	movs	r3, #1
 80141d0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80141d4:	8c22      	ldrh	r2, [r4, #32]
 80141d6:	8be3      	ldrh	r3, [r4, #30]
 80141d8:	4413      	add	r3, r2
 80141da:	83e3      	strh	r3, [r4, #30]
 80141dc:	68e0      	ldr	r0, [r4, #12]
 80141de:	6803      	ldr	r3, [r0, #0]
 80141e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80141e2:	4798      	blx	r3
 80141e4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80141e8:	4418      	add	r0, r3
 80141ea:	8a63      	ldrh	r3, [r4, #18]
 80141ec:	1a18      	subs	r0, r3, r0
 80141ee:	8260      	strh	r0, [r4, #18]
 80141f0:	b005      	add	sp, #20
 80141f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141f6:	2300      	movs	r3, #0
 80141f8:	4611      	mov	r1, r2
 80141fa:	4620      	mov	r0, r4
 80141fc:	f7ff ff0e 	bl	801401c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014200:	e754      	b.n	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014202:	4563      	cmp	r3, ip
 8014204:	dd14      	ble.n	8014230 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014206:	b117      	cbz	r7, 801420e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014208:	2301      	movs	r3, #1
 801420a:	460a      	mov	r2, r1
 801420c:	e772      	b.n	80140f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801420e:	2e00      	cmp	r6, #0
 8014210:	f43f af4c 	beq.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014214:	2800      	cmp	r0, #0
 8014216:	f47f af49 	bne.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801421a:	f1ba 0f00 	cmp.w	sl, #0
 801421e:	d002      	beq.n	8014226 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014220:	2301      	movs	r3, #1
 8014222:	4642      	mov	r2, r8
 8014224:	e767      	b.n	80140f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014226:	8ae3      	ldrh	r3, [r4, #22]
 8014228:	2b00      	cmp	r3, #0
 801422a:	f43f af3f 	beq.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801422e:	e7d5      	b.n	80141dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014230:	2800      	cmp	r0, #0
 8014232:	f47f af3b 	bne.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014236:	f1ba 0f00 	cmp.w	sl, #0
 801423a:	f43f af37 	beq.w	80140ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801423e:	2301      	movs	r3, #1
 8014240:	4642      	mov	r2, r8
 8014242:	e7da      	b.n	80141fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014244 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014246:	4605      	mov	r5, r0
 8014248:	b08f      	sub	sp, #60	; 0x3c
 801424a:	4617      	mov	r7, r2
 801424c:	461c      	mov	r4, r3
 801424e:	460e      	mov	r6, r1
 8014250:	b1d1      	cbz	r1, 8014288 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014252:	681b      	ldr	r3, [r3, #0]
 8014254:	4620      	mov	r0, r4
 8014256:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014258:	4798      	blx	r3
 801425a:	4240      	negs	r0, r0
 801425c:	b200      	sxth	r0, r0
 801425e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014262:	9603      	str	r6, [sp, #12]
 8014264:	9700      	str	r7, [sp, #0]
 8014266:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801426a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801426e:	4629      	mov	r1, r5
 8014270:	a805      	add	r0, sp, #20
 8014272:	f7ff fcbf 	bl	8013bf4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014276:	2401      	movs	r4, #1
 8014278:	a805      	add	r0, sp, #20
 801427a:	f7ff fedf 	bl	801403c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801427e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014282:	b163      	cbz	r3, 801429e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014284:	3401      	adds	r4, #1
 8014286:	e7f7      	b.n	8014278 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014288:	f002 ff48 	bl	801711c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801428c:	2401      	movs	r4, #1
 801428e:	280a      	cmp	r0, #10
 8014290:	4628      	mov	r0, r5
 8014292:	bf08      	it	eq
 8014294:	3401      	addeq	r4, #1
 8014296:	f002 ff41 	bl	801711c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801429a:	2800      	cmp	r0, #0
 801429c:	d1f7      	bne.n	801428e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801429e:	b2a0      	uxth	r0, r4
 80142a0:	b00f      	add	sp, #60	; 0x3c
 80142a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080142a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80142a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142a8:	b0e3      	sub	sp, #396	; 0x18c
 80142aa:	461c      	mov	r4, r3
 80142ac:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80142ae:	4683      	mov	fp, r0
 80142b0:	4688      	mov	r8, r1
 80142b2:	2b00      	cmp	r3, #0
 80142b4:	f000 8112 	beq.w	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80142b8:	6823      	ldr	r3, [r4, #0]
 80142ba:	2b00      	cmp	r3, #0
 80142bc:	f000 810e 	beq.w	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80142c0:	7ba3      	ldrb	r3, [r4, #14]
 80142c2:	2b00      	cmp	r3, #0
 80142c4:	f000 810a 	beq.w	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80142c8:	6810      	ldr	r0, [r2, #0]
 80142ca:	6851      	ldr	r1, [r2, #4]
 80142cc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80142d0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80142d4:	ad0a      	add	r5, sp, #40	; 0x28
 80142d6:	462b      	mov	r3, r5
 80142d8:	c303      	stmia	r3!, {r0, r1}
 80142da:	2100      	movs	r1, #0
 80142dc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80142e0:	910c      	str	r1, [sp, #48]	; 0x30
 80142e2:	79a2      	ldrb	r2, [r4, #6]
 80142e4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80142e8:	a90c      	add	r1, sp, #48	; 0x30
 80142ea:	4628      	mov	r0, r5
 80142ec:	f7ff fd01 	bl	8013cf2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80142f0:	a90c      	add	r1, sp, #48	; 0x30
 80142f2:	4608      	mov	r0, r1
 80142f4:	79a2      	ldrb	r2, [r4, #6]
 80142f6:	f7ff fcfc 	bl	8013cf2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80142fa:	a817      	add	r0, sp, #92	; 0x5c
 80142fc:	f002 fae2 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8014300:	6820      	ldr	r0, [r4, #0]
 8014302:	6803      	ldr	r3, [r0, #0]
 8014304:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014306:	4798      	blx	r3
 8014308:	4606      	mov	r6, r0
 801430a:	6820      	ldr	r0, [r4, #0]
 801430c:	6803      	ldr	r3, [r0, #0]
 801430e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014310:	4798      	blx	r3
 8014312:	4633      	mov	r3, r6
 8014314:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014316:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014318:	9000      	str	r0, [sp, #0]
 801431a:	a817      	add	r0, sp, #92	; 0x5c
 801431c:	f002 fb2d 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014320:	6820      	ldr	r0, [r4, #0]
 8014322:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014326:	6803      	ldr	r3, [r0, #0]
 8014328:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801432a:	4798      	blx	r3
 801432c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014330:	6823      	ldr	r3, [r4, #0]
 8014332:	4607      	mov	r7, r0
 8014334:	4406      	add	r6, r0
 8014336:	a830      	add	r0, sp, #192	; 0xc0
 8014338:	f893 9009 	ldrb.w	r9, [r3, #9]
 801433c:	f002 fac2 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8014340:	7c23      	ldrb	r3, [r4, #16]
 8014342:	b17b      	cbz	r3, 8014364 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014344:	6820      	ldr	r0, [r4, #0]
 8014346:	6803      	ldr	r3, [r0, #0]
 8014348:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801434a:	4798      	blx	r3
 801434c:	9009      	str	r0, [sp, #36]	; 0x24
 801434e:	6820      	ldr	r0, [r4, #0]
 8014350:	6802      	ldr	r2, [r0, #0]
 8014352:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014354:	4790      	blx	r2
 8014356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014358:	9000      	str	r0, [sp, #0]
 801435a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801435c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801435e:	a830      	add	r0, sp, #192	; 0xc0
 8014360:	f002 fb0b 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014364:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014368:	7be2      	ldrb	r2, [r4, #15]
 801436a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801436e:	1a8a      	subs	r2, r1, r2
 8014370:	7c21      	ldrb	r1, [r4, #16]
 8014372:	9103      	str	r1, [sp, #12]
 8014374:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014378:	9102      	str	r1, [sp, #8]
 801437a:	6821      	ldr	r1, [r4, #0]
 801437c:	9101      	str	r1, [sp, #4]
 801437e:	7961      	ldrb	r1, [r4, #5]
 8014380:	9100      	str	r1, [sp, #0]
 8014382:	b292      	uxth	r2, r2
 8014384:	a930      	add	r1, sp, #192	; 0xc0
 8014386:	a80e      	add	r0, sp, #56	; 0x38
 8014388:	f7ff fc34 	bl	8013bf4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801438c:	2e00      	cmp	r6, #0
 801438e:	dc5b      	bgt.n	8014448 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014390:	af17      	add	r7, sp, #92	; 0x5c
 8014392:	f04f 0900 	mov.w	r9, #0
 8014396:	7c23      	ldrb	r3, [r4, #16]
 8014398:	2b00      	cmp	r3, #0
 801439a:	f000 80b1 	beq.w	8014500 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801439e:	a80e      	add	r0, sp, #56	; 0x38
 80143a0:	f7ff fe4c 	bl	801403c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80143a4:	f1ba 0f00 	cmp.w	sl, #0
 80143a8:	f000 80a5 	beq.w	80144f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80143ac:	7c23      	ldrb	r3, [r4, #16]
 80143ae:	9309      	str	r3, [sp, #36]	; 0x24
 80143b0:	2264      	movs	r2, #100	; 0x64
 80143b2:	4639      	mov	r1, r7
 80143b4:	a849      	add	r0, sp, #292	; 0x124
 80143b6:	f015 fda8 	bl	8029f0a <memcpy>
 80143ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143bc:	2b00      	cmp	r3, #0
 80143be:	f000 80a7 	beq.w	8014510 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80143c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80143c6:	7922      	ldrb	r2, [r4, #4]
 80143c8:	2a01      	cmp	r2, #1
 80143ca:	f040 808a 	bne.w	80144e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80143ce:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80143d2:	1ac0      	subs	r0, r0, r3
 80143d4:	2302      	movs	r3, #2
 80143d6:	fb90 f0f3 	sdiv	r0, r0, r3
 80143da:	b200      	sxth	r0, r0
 80143dc:	7c23      	ldrb	r3, [r4, #16]
 80143de:	2b00      	cmp	r3, #0
 80143e0:	f000 808b 	beq.w	80144fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80143e4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80143e8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80143ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80143f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80143f4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80143f8:	4410      	add	r0, r2
 80143fa:	b200      	sxth	r0, r0
 80143fc:	9000      	str	r0, [sp, #0]
 80143fe:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014402:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014406:	4642      	mov	r2, r8
 8014408:	2100      	movs	r1, #0
 801440a:	4658      	mov	r0, fp
 801440c:	f7ff fca2 	bl	8013d54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014410:	2800      	cmp	r0, #0
 8014412:	d163      	bne.n	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014414:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014418:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801441c:	b2b2      	uxth	r2, r6
 801441e:	4413      	add	r3, r2
 8014420:	1a8a      	subs	r2, r1, r2
 8014422:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014426:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801442a:	b21b      	sxth	r3, r3
 801442c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014430:	2a00      	cmp	r2, #0
 8014432:	d153      	bne.n	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014434:	6822      	ldr	r2, [r4, #0]
 8014436:	8869      	ldrh	r1, [r5, #2]
 8014438:	7a12      	ldrb	r2, [r2, #8]
 801443a:	1a9b      	subs	r3, r3, r2
 801443c:	88ea      	ldrh	r2, [r5, #6]
 801443e:	440a      	add	r2, r1
 8014440:	b212      	sxth	r2, r2
 8014442:	4293      	cmp	r3, r2
 8014444:	dda7      	ble.n	8014396 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014446:	e049      	b.n	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014448:	7c23      	ldrb	r3, [r4, #16]
 801444a:	444f      	add	r7, r9
 801444c:	b1c3      	cbz	r3, 8014480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801444e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014452:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014456:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801445a:	443b      	add	r3, r7
 801445c:	4293      	cmp	r3, r2
 801445e:	da97      	bge.n	8014390 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014460:	a80e      	add	r0, sp, #56	; 0x38
 8014462:	f7ff fdeb 	bl	801403c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014466:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801446a:	3b01      	subs	r3, #1
 801446c:	b29b      	uxth	r3, r3
 801446e:	454b      	cmp	r3, r9
 8014470:	9309      	str	r3, [sp, #36]	; 0x24
 8014472:	d021      	beq.n	80144b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014474:	7961      	ldrb	r1, [r4, #5]
 8014476:	a817      	add	r0, sp, #92	; 0x5c
 8014478:	f7f3 fd74 	bl	8007f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801447c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801447e:	e7f4      	b.n	801446a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014480:	fa1f f986 	uxth.w	r9, r6
 8014484:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014488:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801448c:	443b      	add	r3, r7
 801448e:	4293      	cmp	r3, r2
 8014490:	f6bf af7e 	bge.w	8014390 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014494:	a817      	add	r0, sp, #92	; 0x5c
 8014496:	f002 fe41 	bl	801711c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801449a:	b1f8      	cbz	r0, 80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801449c:	280a      	cmp	r0, #10
 801449e:	d1f1      	bne.n	8014484 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80144a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80144a4:	444b      	add	r3, r9
 80144a6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80144aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80144ae:	eba3 0309 	sub.w	r3, r3, r9
 80144b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80144b6:	e7e5      	b.n	8014484 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80144b8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80144bc:	b2b3      	uxth	r3, r6
 80144be:	441a      	add	r2, r3
 80144c0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80144c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80144c8:	1ad3      	subs	r3, r2, r3
 80144ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80144ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80144d2:	b11b      	cbz	r3, 80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80144d4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80144d8:	2b00      	cmp	r3, #0
 80144da:	d0ba      	beq.n	8014452 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80144dc:	b063      	add	sp, #396	; 0x18c
 80144de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144e2:	2a02      	cmp	r2, #2
 80144e4:	d105      	bne.n	80144f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80144e6:	7be2      	ldrb	r2, [r4, #15]
 80144e8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80144ec:	1a80      	subs	r0, r0, r2
 80144ee:	1ac0      	subs	r0, r0, r3
 80144f0:	e773      	b.n	80143da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80144f2:	2000      	movs	r0, #0
 80144f4:	e772      	b.n	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80144f6:	7be0      	ldrb	r0, [r4, #15]
 80144f8:	e770      	b.n	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80144fa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80144fe:	e773      	b.n	80143e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014500:	f1ba 0f00 	cmp.w	sl, #0
 8014504:	d0f7      	beq.n	80144f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014506:	2264      	movs	r2, #100	; 0x64
 8014508:	4639      	mov	r1, r7
 801450a:	a849      	add	r0, sp, #292	; 0x124
 801450c:	f015 fcfd 	bl	8029f0a <memcpy>
 8014510:	2300      	movs	r3, #0
 8014512:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014516:	6821      	ldr	r1, [r4, #0]
 8014518:	a849      	add	r0, sp, #292	; 0x124
 801451a:	f7ff fbae 	bl	8013c7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801451e:	b203      	sxth	r3, r0
 8014520:	e751      	b.n	80143c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014522 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014522:	2b03      	cmp	r3, #3
 8014524:	d818      	bhi.n	8014558 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014526:	e8df f003 	tbb	[pc, r3]
 801452a:	0602      	.short	0x0602
 801452c:	130d      	.short	0x130d
 801452e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014532:	1850      	adds	r0, r2, r1
 8014534:	4770      	bx	lr
 8014536:	8803      	ldrh	r3, [r0, #0]
 8014538:	8880      	ldrh	r0, [r0, #4]
 801453a:	4418      	add	r0, r3
 801453c:	b200      	sxth	r0, r0
 801453e:	1a80      	subs	r0, r0, r2
 8014540:	3801      	subs	r0, #1
 8014542:	4770      	bx	lr
 8014544:	8803      	ldrh	r3, [r0, #0]
 8014546:	8880      	ldrh	r0, [r0, #4]
 8014548:	4418      	add	r0, r3
 801454a:	b200      	sxth	r0, r0
 801454c:	1a40      	subs	r0, r0, r1
 801454e:	e7f7      	b.n	8014540 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014550:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014554:	4410      	add	r0, r2
 8014556:	4770      	bx	lr
 8014558:	2000      	movs	r0, #0
 801455a:	4770      	bx	lr

0801455c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801455c:	2b03      	cmp	r3, #3
 801455e:	d817      	bhi.n	8014590 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014560:	e8df f003 	tbb	[pc, r3]
 8014564:	10090602 	.word	0x10090602
 8014568:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801456c:	1850      	adds	r0, r2, r1
 801456e:	4770      	bx	lr
 8014570:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014574:	e7fa      	b.n	801456c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014576:	8843      	ldrh	r3, [r0, #2]
 8014578:	88c0      	ldrh	r0, [r0, #6]
 801457a:	4418      	add	r0, r3
 801457c:	b200      	sxth	r0, r0
 801457e:	1a80      	subs	r0, r0, r2
 8014580:	3801      	subs	r0, #1
 8014582:	4770      	bx	lr
 8014584:	8843      	ldrh	r3, [r0, #2]
 8014586:	88c0      	ldrh	r0, [r0, #6]
 8014588:	4418      	add	r0, r3
 801458a:	b200      	sxth	r0, r0
 801458c:	1a40      	subs	r0, r0, r1
 801458e:	e7f7      	b.n	8014580 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014590:	2000      	movs	r0, #0
 8014592:	4770      	bx	lr

08014594 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014594:	4b01      	ldr	r3, [pc, #4]	; (801459c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014596:	2200      	movs	r2, #0
 8014598:	601a      	str	r2, [r3, #0]
 801459a:	4770      	bx	lr
 801459c:	20012db4 	.word	0x20012db4

080145a0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80145a0:	4603      	mov	r3, r0
 80145a2:	b1c8      	cbz	r0, 80145d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80145a4:	0c02      	lsrs	r2, r0, #16
 80145a6:	0412      	lsls	r2, r2, #16
 80145a8:	b9a2      	cbnz	r2, 80145d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80145aa:	0403      	lsls	r3, r0, #16
 80145ac:	2010      	movs	r0, #16
 80145ae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80145b2:	bf04      	itt	eq
 80145b4:	021b      	lsleq	r3, r3, #8
 80145b6:	3008      	addeq	r0, #8
 80145b8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80145bc:	bf04      	itt	eq
 80145be:	011b      	lsleq	r3, r3, #4
 80145c0:	3004      	addeq	r0, #4
 80145c2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80145c6:	bf04      	itt	eq
 80145c8:	009b      	lsleq	r3, r3, #2
 80145ca:	3002      	addeq	r0, #2
 80145cc:	2b00      	cmp	r3, #0
 80145ce:	db04      	blt.n	80145da <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80145d0:	3001      	adds	r0, #1
 80145d2:	4770      	bx	lr
 80145d4:	2000      	movs	r0, #0
 80145d6:	e7ea      	b.n	80145ae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80145d8:	2020      	movs	r0, #32
 80145da:	4770      	bx	lr

080145dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80145dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145e0:	b087      	sub	sp, #28
 80145e2:	460d      	mov	r5, r1
 80145e4:	4616      	mov	r6, r2
 80145e6:	4698      	mov	r8, r3
 80145e8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80145ec:	4601      	mov	r1, r0
 80145ee:	b120      	cbz	r0, 80145fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80145f0:	b11a      	cbz	r2, 80145fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80145f2:	2d1f      	cmp	r5, #31
 80145f4:	d801      	bhi.n	80145fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80145f6:	2b1f      	cmp	r3, #31
 80145f8:	d904      	bls.n	8014604 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80145fa:	2000      	movs	r0, #0
 80145fc:	6038      	str	r0, [r7, #0]
 80145fe:	b007      	add	sp, #28
 8014600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014604:	b97d      	cbnz	r5, 8014626 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014606:	b143      	cbz	r3, 801461a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014608:	4602      	mov	r2, r0
 801460a:	e9cd 4700 	strd	r4, r7, [sp]
 801460e:	462b      	mov	r3, r5
 8014610:	4641      	mov	r1, r8
 8014612:	4630      	mov	r0, r6
 8014614:	f7ff ffe2 	bl	80145dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014618:	e7f1      	b.n	80145fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801461a:	f04f 33ff 	mov.w	r3, #4294967295
 801461e:	603b      	str	r3, [r7, #0]
 8014620:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014624:	e7eb      	b.n	80145fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014626:	fa32 fa05 	lsrs.w	sl, r2, r5
 801462a:	d106      	bne.n	801463a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801462c:	4346      	muls	r6, r0
 801462e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014632:	fb04 6610 	mls	r6, r4, r0, r6
 8014636:	603e      	str	r6, [r7, #0]
 8014638:	e7e1      	b.n	80145fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801463a:	2201      	movs	r2, #1
 801463c:	40aa      	lsls	r2, r5
 801463e:	3a01      	subs	r2, #1
 8014640:	4016      	ands	r6, r2
 8014642:	fa00 fb05 	lsl.w	fp, r0, r5
 8014646:	4630      	mov	r0, r6
 8014648:	fbbb f9f4 	udiv	r9, fp, r4
 801464c:	fb0a f309 	mul.w	r3, sl, r9
 8014650:	9303      	str	r3, [sp, #12]
 8014652:	f7ff ffa5 	bl	80145a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014656:	462b      	mov	r3, r5
 8014658:	460a      	mov	r2, r1
 801465a:	e9cd 4700 	strd	r4, r7, [sp]
 801465e:	4601      	mov	r1, r0
 8014660:	4630      	mov	r0, r6
 8014662:	f7ff ffbb 	bl	80145dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014666:	fb04 b919 	mls	r9, r4, r9, fp
 801466a:	4606      	mov	r6, r0
 801466c:	4648      	mov	r0, r9
 801466e:	eb05 0108 	add.w	r1, r5, r8
 8014672:	f7ff ff95 	bl	80145a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014676:	ab05      	add	r3, sp, #20
 8014678:	e9cd 4300 	strd	r4, r3, [sp]
 801467c:	464a      	mov	r2, r9
 801467e:	4603      	mov	r3, r0
 8014680:	4650      	mov	r0, sl
 8014682:	f7ff ffab 	bl	80145dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014686:	6839      	ldr	r1, [r7, #0]
 8014688:	9a05      	ldr	r2, [sp, #20]
 801468a:	9b03      	ldr	r3, [sp, #12]
 801468c:	4411      	add	r1, r2
 801468e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014692:	18d3      	adds	r3, r2, r3
 8014694:	441e      	add	r6, r3
 8014696:	fb04 1412 	mls	r4, r4, r2, r1
 801469a:	4430      	add	r0, r6
 801469c:	603c      	str	r4, [r7, #0]
 801469e:	e7ae      	b.n	80145fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080146a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80146a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80146a4:	b085      	sub	sp, #20
 80146a6:	f1b0 0900 	subs.w	r9, r0, #0
 80146aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80146ac:	461d      	mov	r5, r3
 80146ae:	bfbf      	itttt	lt
 80146b0:	6823      	ldrlt	r3, [r4, #0]
 80146b2:	425b      	neglt	r3, r3
 80146b4:	f1c9 0900 	rsblt	r9, r9, #0
 80146b8:	6023      	strlt	r3, [r4, #0]
 80146ba:	bfb4      	ite	lt
 80146bc:	f04f 36ff 	movlt.w	r6, #4294967295
 80146c0:	2601      	movge	r6, #1
 80146c2:	2a00      	cmp	r2, #0
 80146c4:	4617      	mov	r7, r2
 80146c6:	da04      	bge.n	80146d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80146c8:	6823      	ldr	r3, [r4, #0]
 80146ca:	425b      	negs	r3, r3
 80146cc:	4257      	negs	r7, r2
 80146ce:	4276      	negs	r6, r6
 80146d0:	6023      	str	r3, [r4, #0]
 80146d2:	2d00      	cmp	r5, #0
 80146d4:	4638      	mov	r0, r7
 80146d6:	bfba      	itte	lt
 80146d8:	426d      	neglt	r5, r5
 80146da:	f04f 38ff 	movlt.w	r8, #4294967295
 80146de:	f04f 0801 	movge.w	r8, #1
 80146e2:	f7ff ff5d 	bl	80145a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80146e6:	ab03      	add	r3, sp, #12
 80146e8:	e9cd 5300 	strd	r5, r3, [sp]
 80146ec:	463a      	mov	r2, r7
 80146ee:	4603      	mov	r3, r0
 80146f0:	4648      	mov	r0, r9
 80146f2:	f7ff ff73 	bl	80145dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80146f6:	6823      	ldr	r3, [r4, #0]
 80146f8:	9a03      	ldr	r2, [sp, #12]
 80146fa:	4546      	cmp	r6, r8
 80146fc:	441a      	add	r2, r3
 80146fe:	fb92 f3f5 	sdiv	r3, r2, r5
 8014702:	4418      	add	r0, r3
 8014704:	bf18      	it	ne
 8014706:	4240      	negne	r0, r0
 8014708:	fb05 2313 	mls	r3, r5, r3, r2
 801470c:	1c72      	adds	r2, r6, #1
 801470e:	6023      	str	r3, [r4, #0]
 8014710:	d105      	bne.n	801471e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014712:	2b00      	cmp	r3, #0
 8014714:	f1c3 0200 	rsb	r2, r3, #0
 8014718:	db0b      	blt.n	8014732 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801471a:	6022      	str	r2, [r4, #0]
 801471c:	e006      	b.n	801472c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801471e:	2e01      	cmp	r6, #1
 8014720:	d104      	bne.n	801472c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014722:	2b00      	cmp	r3, #0
 8014724:	da02      	bge.n	801472c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014726:	442b      	add	r3, r5
 8014728:	3801      	subs	r0, #1
 801472a:	6023      	str	r3, [r4, #0]
 801472c:	b005      	add	sp, #20
 801472e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014732:	3801      	subs	r0, #1
 8014734:	1b52      	subs	r2, r2, r5
 8014736:	e7f0      	b.n	801471a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014738 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014738:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801473c:	4c1c      	ldr	r4, [pc, #112]	; (80147b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801473e:	6807      	ldr	r7, [r0, #0]
 8014740:	69a3      	ldr	r3, [r4, #24]
 8014742:	4605      	mov	r5, r0
 8014744:	b92b      	cbnz	r3, 8014752 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014746:	6840      	ldr	r0, [r0, #4]
 8014748:	e9c5 7000 	strd	r7, r0, [r5]
 801474c:	b004      	add	sp, #16
 801474e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014752:	68a2      	ldr	r2, [r4, #8]
 8014754:	6820      	ldr	r0, [r4, #0]
 8014756:	ae04      	add	r6, sp, #16
 8014758:	f04f 0802 	mov.w	r8, #2
 801475c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014760:	440a      	add	r2, r1
 8014762:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014766:	69e1      	ldr	r1, [r4, #28]
 8014768:	9600      	str	r6, [sp, #0]
 801476a:	463a      	mov	r2, r7
 801476c:	f7ff ff98 	bl	80146a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014770:	69a3      	ldr	r3, [r4, #24]
 8014772:	686a      	ldr	r2, [r5, #4]
 8014774:	6a21      	ldr	r1, [r4, #32]
 8014776:	9600      	str	r6, [sp, #0]
 8014778:	4607      	mov	r7, r0
 801477a:	6860      	ldr	r0, [r4, #4]
 801477c:	f7ff ff90 	bl	80146a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014780:	6962      	ldr	r2, [r4, #20]
 8014782:	69a3      	ldr	r3, [r4, #24]
 8014784:	fb93 f8f8 	sdiv	r8, r3, r8
 8014788:	4442      	add	r2, r8
 801478a:	9203      	str	r2, [sp, #12]
 801478c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801478e:	682a      	ldr	r2, [r5, #0]
 8014790:	9600      	str	r6, [sp, #0]
 8014792:	4407      	add	r7, r0
 8014794:	68e0      	ldr	r0, [r4, #12]
 8014796:	f7ff ff83 	bl	80146a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801479a:	9600      	str	r6, [sp, #0]
 801479c:	4680      	mov	r8, r0
 801479e:	69a3      	ldr	r3, [r4, #24]
 80147a0:	686a      	ldr	r2, [r5, #4]
 80147a2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80147a4:	6920      	ldr	r0, [r4, #16]
 80147a6:	f7ff ff7b 	bl	80146a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80147aa:	4440      	add	r0, r8
 80147ac:	e7cc      	b.n	8014748 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80147ae:	bf00      	nop
 80147b0:	20012db8 	.word	0x20012db8

080147b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80147b4:	4b07      	ldr	r3, [pc, #28]	; (80147d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80147b6:	781b      	ldrb	r3, [r3, #0]
 80147b8:	2b01      	cmp	r3, #1
 80147ba:	d109      	bne.n	80147d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80147bc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80147c0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80147c4:	8003      	strh	r3, [r0, #0]
 80147c6:	4b04      	ldr	r3, [pc, #16]	; (80147d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80147c8:	881b      	ldrh	r3, [r3, #0]
 80147ca:	3b01      	subs	r3, #1
 80147cc:	1a9b      	subs	r3, r3, r2
 80147ce:	800b      	strh	r3, [r1, #0]
 80147d0:	4770      	bx	lr
 80147d2:	bf00      	nop
 80147d4:	20012d9c 	.word	0x20012d9c
 80147d8:	20012d98 	.word	0x20012d98

080147dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80147dc:	b510      	push	{r4, lr}
 80147de:	4b07      	ldr	r3, [pc, #28]	; (80147fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80147e0:	781b      	ldrb	r3, [r3, #0]
 80147e2:	2b01      	cmp	r3, #1
 80147e4:	d108      	bne.n	80147f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80147e6:	4b06      	ldr	r3, [pc, #24]	; (8014800 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80147e8:	880c      	ldrh	r4, [r1, #0]
 80147ea:	881b      	ldrh	r3, [r3, #0]
 80147ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80147f0:	3b01      	subs	r3, #1
 80147f2:	1b1b      	subs	r3, r3, r4
 80147f4:	8003      	strh	r3, [r0, #0]
 80147f6:	800a      	strh	r2, [r1, #0]
 80147f8:	bd10      	pop	{r4, pc}
 80147fa:	bf00      	nop
 80147fc:	20012d9c 	.word	0x20012d9c
 8014800:	20012d98 	.word	0x20012d98

08014804 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014804:	b510      	push	{r4, lr}
 8014806:	4b0a      	ldr	r3, [pc, #40]	; (8014830 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014808:	781b      	ldrb	r3, [r3, #0]
 801480a:	2b01      	cmp	r3, #1
 801480c:	d10e      	bne.n	801482c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801480e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014812:	8843      	ldrh	r3, [r0, #2]
 8014814:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014818:	8044      	strh	r4, [r0, #2]
 801481a:	18ca      	adds	r2, r1, r3
 801481c:	4b05      	ldr	r3, [pc, #20]	; (8014834 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801481e:	881b      	ldrh	r3, [r3, #0]
 8014820:	1a9b      	subs	r3, r3, r2
 8014822:	8003      	strh	r3, [r0, #0]
 8014824:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014828:	80c3      	strh	r3, [r0, #6]
 801482a:	8081      	strh	r1, [r0, #4]
 801482c:	bd10      	pop	{r4, pc}
 801482e:	bf00      	nop
 8014830:	20012d9c 	.word	0x20012d9c
 8014834:	20012d98 	.word	0x20012d98

08014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014838:	4b08      	ldr	r3, [pc, #32]	; (801485c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801483a:	781b      	ldrb	r3, [r3, #0]
 801483c:	2b01      	cmp	r3, #1
 801483e:	d10c      	bne.n	801485a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014840:	8803      	ldrh	r3, [r0, #0]
 8014842:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014846:	8842      	ldrh	r2, [r0, #2]
 8014848:	8002      	strh	r2, [r0, #0]
 801484a:	185a      	adds	r2, r3, r1
 801484c:	4b04      	ldr	r3, [pc, #16]	; (8014860 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801484e:	881b      	ldrh	r3, [r3, #0]
 8014850:	1a9b      	subs	r3, r3, r2
 8014852:	8043      	strh	r3, [r0, #2]
 8014854:	88c3      	ldrh	r3, [r0, #6]
 8014856:	8083      	strh	r3, [r0, #4]
 8014858:	80c1      	strh	r1, [r0, #6]
 801485a:	4770      	bx	lr
 801485c:	20012d9c 	.word	0x20012d9c
 8014860:	20012d98 	.word	0x20012d98

08014864 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014864:	b510      	push	{r4, lr}
 8014866:	4b07      	ldr	r3, [pc, #28]	; (8014884 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014868:	781b      	ldrb	r3, [r3, #0]
 801486a:	2b01      	cmp	r3, #1
 801486c:	d108      	bne.n	8014880 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801486e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014872:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014876:	8003      	strh	r3, [r0, #0]
 8014878:	8893      	ldrh	r3, [r2, #4]
 801487a:	3b01      	subs	r3, #1
 801487c:	1b1b      	subs	r3, r3, r4
 801487e:	800b      	strh	r3, [r1, #0]
 8014880:	bd10      	pop	{r4, pc}
 8014882:	bf00      	nop
 8014884:	20012d9c 	.word	0x20012d9c

08014888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014888:	4b0b      	ldr	r3, [pc, #44]	; (80148b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801488a:	781b      	ldrb	r3, [r3, #0]
 801488c:	2b01      	cmp	r3, #1
 801488e:	d111      	bne.n	80148b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014890:	680b      	ldr	r3, [r1, #0]
 8014892:	ed90 7a00 	vldr	s14, [r0]
 8014896:	6003      	str	r3, [r0, #0]
 8014898:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801489c:	eddf 6a07 	vldr	s13, [pc, #28]	; 80148bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80148a0:	ee07 3a90 	vmov	s15, r3
 80148a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80148a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80148ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80148b0:	edc1 7a00 	vstr	s15, [r1]
 80148b4:	4770      	bx	lr
 80148b6:	bf00      	nop
 80148b8:	20012d9c 	.word	0x20012d9c
 80148bc:	38d1b717 	.word	0x38d1b717

080148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80148c0:	b510      	push	{r4, lr}
 80148c2:	4b0a      	ldr	r3, [pc, #40]	; (80148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80148c4:	781b      	ldrb	r3, [r3, #0]
 80148c6:	2b01      	cmp	r3, #1
 80148c8:	460a      	mov	r2, r1
 80148ca:	d10d      	bne.n	80148e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80148cc:	8881      	ldrh	r1, [r0, #4]
 80148ce:	8803      	ldrh	r3, [r0, #0]
 80148d0:	440b      	add	r3, r1
 80148d2:	4601      	mov	r1, r0
 80148d4:	3b01      	subs	r3, #1
 80148d6:	f821 3b02 	strh.w	r3, [r1], #2
 80148da:	f7ff ffc3 	bl	8014864 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80148de:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80148e2:	88c2      	ldrh	r2, [r0, #6]
 80148e4:	8082      	strh	r2, [r0, #4]
 80148e6:	80c3      	strh	r3, [r0, #6]
 80148e8:	bd10      	pop	{r4, pc}
 80148ea:	bf00      	nop
 80148ec:	20012d9c 	.word	0x20012d9c

080148f0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80148f0:	4b06      	ldr	r3, [pc, #24]	; (801490c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80148f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80148f6:	4b06      	ldr	r3, [pc, #24]	; (8014910 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80148f8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80148fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014900:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014904:	2100      	movs	r1, #0
 8014906:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801490a:	4770      	bx	lr
 801490c:	20012d98 	.word	0x20012d98
 8014910:	20012d9a 	.word	0x20012d9a

08014914 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014914:	4b03      	ldr	r3, [pc, #12]	; (8014924 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014916:	6818      	ldr	r0, [r3, #0]
 8014918:	b110      	cbz	r0, 8014920 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801491a:	6803      	ldr	r3, [r0, #0]
 801491c:	699b      	ldr	r3, [r3, #24]
 801491e:	4718      	bx	r3
 8014920:	4770      	bx	lr
 8014922:	bf00      	nop
 8014924:	20012de8 	.word	0x20012de8

08014928 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014928:	4770      	bx	lr
	...

0801492c <_ZN8touchgfx11Application4drawEv>:
 801492c:	b507      	push	{r0, r1, r2, lr}
 801492e:	4b09      	ldr	r3, [pc, #36]	; (8014954 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014930:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014934:	4b08      	ldr	r3, [pc, #32]	; (8014958 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014936:	f8ad 2004 	strh.w	r2, [sp, #4]
 801493a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801493e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014942:	6803      	ldr	r3, [r0, #0]
 8014944:	2100      	movs	r1, #0
 8014946:	9100      	str	r1, [sp, #0]
 8014948:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801494a:	4669      	mov	r1, sp
 801494c:	4798      	blx	r3
 801494e:	b003      	add	sp, #12
 8014950:	f85d fb04 	ldr.w	pc, [sp], #4
 8014954:	20012d98 	.word	0x20012d98
 8014958:	20012d9a 	.word	0x20012d9a

0801495c <_ZN8touchgfx11Application10invalidateEv>:
 801495c:	4b09      	ldr	r3, [pc, #36]	; (8014984 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801495e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014962:	4b09      	ldr	r3, [pc, #36]	; (8014988 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014964:	b082      	sub	sp, #8
 8014966:	f9b3 3000 	ldrsh.w	r3, [r3]
 801496a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801496e:	2100      	movs	r1, #0
 8014970:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014974:	9100      	str	r1, [sp, #0]
 8014976:	6803      	ldr	r3, [r0, #0]
 8014978:	aa02      	add	r2, sp, #8
 801497a:	e912 0006 	ldmdb	r2, {r1, r2}
 801497e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014980:	b002      	add	sp, #8
 8014982:	4718      	bx	r3
 8014984:	20012d98 	.word	0x20012d98
 8014988:	20012d9a 	.word	0x20012d9a

0801498c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801498c:	4b03      	ldr	r3, [pc, #12]	; (801499c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801498e:	6818      	ldr	r0, [r3, #0]
 8014990:	b110      	cbz	r0, 8014998 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014992:	6803      	ldr	r3, [r0, #0]
 8014994:	69db      	ldr	r3, [r3, #28]
 8014996:	4718      	bx	r3
 8014998:	4770      	bx	lr
 801499a:	bf00      	nop
 801499c:	20012de8 	.word	0x20012de8

080149a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80149a0:	4b03      	ldr	r3, [pc, #12]	; (80149b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80149a2:	6818      	ldr	r0, [r3, #0]
 80149a4:	b110      	cbz	r0, 80149ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80149a6:	6803      	ldr	r3, [r0, #0]
 80149a8:	6a1b      	ldr	r3, [r3, #32]
 80149aa:	4718      	bx	r3
 80149ac:	4770      	bx	lr
 80149ae:	bf00      	nop
 80149b0:	20012de8 	.word	0x20012de8

080149b4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80149b4:	2300      	movs	r3, #0
 80149b6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80149ba:	4770      	bx	lr

080149bc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80149bc:	4b03      	ldr	r3, [pc, #12]	; (80149cc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80149be:	6818      	ldr	r0, [r3, #0]
 80149c0:	b110      	cbz	r0, 80149c8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80149c2:	6803      	ldr	r3, [r0, #0]
 80149c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80149c6:	4718      	bx	r3
 80149c8:	4770      	bx	lr
 80149ca:	bf00      	nop
 80149cc:	20012de8 	.word	0x20012de8

080149d0 <_ZN8touchgfx11ApplicationD1Ev>:
 80149d0:	4770      	bx	lr

080149d2 <_ZN8touchgfx11ApplicationD0Ev>:
 80149d2:	b510      	push	{r4, lr}
 80149d4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80149d8:	4604      	mov	r4, r0
 80149da:	f014 f958 	bl	8028c8e <_ZdlPvj>
 80149de:	4620      	mov	r0, r4
 80149e0:	bd10      	pop	{r4, pc}

080149e2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80149e2:	b510      	push	{r4, lr}
 80149e4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80149e8:	888a      	ldrh	r2, [r1, #4]
 80149ea:	f9b0 3000 	ldrsh.w	r3, [r0]
 80149ee:	4422      	add	r2, r4
 80149f0:	b212      	sxth	r2, r2
 80149f2:	4293      	cmp	r3, r2
 80149f4:	da15      	bge.n	8014a22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80149f6:	8882      	ldrh	r2, [r0, #4]
 80149f8:	4413      	add	r3, r2
 80149fa:	b21b      	sxth	r3, r3
 80149fc:	429c      	cmp	r4, r3
 80149fe:	da10      	bge.n	8014a22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014a00:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014a04:	88c9      	ldrh	r1, [r1, #6]
 8014a06:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014a0a:	4419      	add	r1, r3
 8014a0c:	b209      	sxth	r1, r1
 8014a0e:	428a      	cmp	r2, r1
 8014a10:	da07      	bge.n	8014a22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014a12:	88c0      	ldrh	r0, [r0, #6]
 8014a14:	4410      	add	r0, r2
 8014a16:	b200      	sxth	r0, r0
 8014a18:	4283      	cmp	r3, r0
 8014a1a:	bfac      	ite	ge
 8014a1c:	2000      	movge	r0, #0
 8014a1e:	2001      	movlt	r0, #1
 8014a20:	bd10      	pop	{r4, pc}
 8014a22:	2000      	movs	r0, #0
 8014a24:	e7fc      	b.n	8014a20 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014a26 <_ZN8touchgfx4Rect10restrictToEss>:
 8014a26:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014a2a:	2b00      	cmp	r3, #0
 8014a2c:	b510      	push	{r4, lr}
 8014a2e:	da04      	bge.n	8014a3a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014a30:	8884      	ldrh	r4, [r0, #4]
 8014a32:	4423      	add	r3, r4
 8014a34:	8083      	strh	r3, [r0, #4]
 8014a36:	2300      	movs	r3, #0
 8014a38:	8003      	strh	r3, [r0, #0]
 8014a3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014a3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014a42:	1b09      	subs	r1, r1, r4
 8014a44:	428b      	cmp	r3, r1
 8014a46:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014a4a:	bfc8      	it	gt
 8014a4c:	8081      	strhgt	r1, [r0, #4]
 8014a4e:	2b00      	cmp	r3, #0
 8014a50:	da04      	bge.n	8014a5c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014a52:	88c1      	ldrh	r1, [r0, #6]
 8014a54:	440b      	add	r3, r1
 8014a56:	80c3      	strh	r3, [r0, #6]
 8014a58:	2300      	movs	r3, #0
 8014a5a:	8043      	strh	r3, [r0, #2]
 8014a5c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014a60:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014a64:	1a52      	subs	r2, r2, r1
 8014a66:	4293      	cmp	r3, r2
 8014a68:	bfc8      	it	gt
 8014a6a:	80c2      	strhgt	r2, [r0, #6]
 8014a6c:	bd10      	pop	{r4, pc}
	...

08014a70 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014a70:	b510      	push	{r4, lr}
 8014a72:	4b10      	ldr	r3, [pc, #64]	; (8014ab4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014a74:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a78:	4b0f      	ldr	r3, [pc, #60]	; (8014ab8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014a7a:	460c      	mov	r4, r1
 8014a7c:	4620      	mov	r0, r4
 8014a7e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014a82:	f7ff ffd0 	bl	8014a26 <_ZN8touchgfx4Rect10restrictToEss>
 8014a86:	4b0d      	ldr	r3, [pc, #52]	; (8014abc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014a88:	6818      	ldr	r0, [r3, #0]
 8014a8a:	b190      	cbz	r0, 8014ab2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014a8c:	6803      	ldr	r3, [r0, #0]
 8014a8e:	4621      	mov	r1, r4
 8014a90:	689b      	ldr	r3, [r3, #8]
 8014a92:	4798      	blx	r3
 8014a94:	4b0a      	ldr	r3, [pc, #40]	; (8014ac0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014a96:	6818      	ldr	r0, [r3, #0]
 8014a98:	b118      	cbz	r0, 8014aa2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014a9a:	6803      	ldr	r3, [r0, #0]
 8014a9c:	4621      	mov	r1, r4
 8014a9e:	689b      	ldr	r3, [r3, #8]
 8014aa0:	4798      	blx	r3
 8014aa2:	4b08      	ldr	r3, [pc, #32]	; (8014ac4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014aa4:	6818      	ldr	r0, [r3, #0]
 8014aa6:	6803      	ldr	r3, [r0, #0]
 8014aa8:	4621      	mov	r1, r4
 8014aaa:	69db      	ldr	r3, [r3, #28]
 8014aac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014ab0:	4718      	bx	r3
 8014ab2:	bd10      	pop	{r4, pc}
 8014ab4:	20012d9a 	.word	0x20012d9a
 8014ab8:	20012d98 	.word	0x20012d98
 8014abc:	20012de8 	.word	0x20012de8
 8014ac0:	20012de4 	.word	0x20012de4
 8014ac4:	20012da4 	.word	0x20012da4

08014ac8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014aca:	4606      	mov	r6, r0
 8014acc:	4608      	mov	r0, r1
 8014ace:	460f      	mov	r7, r1
 8014ad0:	f7fa ff97 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ad4:	b9e8      	cbnz	r0, 8014b12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014ad6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014ada:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014ade:	42a5      	cmp	r5, r4
 8014ae0:	db17      	blt.n	8014b12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014ae2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014ae6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014aea:	429a      	cmp	r2, r3
 8014aec:	db11      	blt.n	8014b12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014aee:	88b9      	ldrh	r1, [r7, #4]
 8014af0:	440d      	add	r5, r1
 8014af2:	88b1      	ldrh	r1, [r6, #4]
 8014af4:	440c      	add	r4, r1
 8014af6:	b22d      	sxth	r5, r5
 8014af8:	b224      	sxth	r4, r4
 8014afa:	42a5      	cmp	r5, r4
 8014afc:	dc09      	bgt.n	8014b12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014afe:	88f8      	ldrh	r0, [r7, #6]
 8014b00:	4410      	add	r0, r2
 8014b02:	88f2      	ldrh	r2, [r6, #6]
 8014b04:	4413      	add	r3, r2
 8014b06:	b200      	sxth	r0, r0
 8014b08:	b21b      	sxth	r3, r3
 8014b0a:	4298      	cmp	r0, r3
 8014b0c:	bfcc      	ite	gt
 8014b0e:	2000      	movgt	r0, #0
 8014b10:	2001      	movle	r0, #1
 8014b12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014b14 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b16:	4604      	mov	r4, r0
 8014b18:	4608      	mov	r0, r1
 8014b1a:	460d      	mov	r5, r1
 8014b1c:	f7fa ff71 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b20:	b978      	cbnz	r0, 8014b42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014b22:	4620      	mov	r0, r4
 8014b24:	f7fa ff6d 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b28:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014b2c:	b150      	cbz	r0, 8014b44 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014b2e:	8026      	strh	r6, [r4, #0]
 8014b30:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014b34:	8063      	strh	r3, [r4, #2]
 8014b36:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014b3a:	80a3      	strh	r3, [r4, #4]
 8014b3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014b40:	80e3      	strh	r3, [r4, #6]
 8014b42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014b44:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014b48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014b4c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014b50:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014b54:	88ed      	ldrh	r5, [r5, #6]
 8014b56:	42b1      	cmp	r1, r6
 8014b58:	460f      	mov	r7, r1
 8014b5a:	bfa8      	it	ge
 8014b5c:	4637      	movge	r7, r6
 8014b5e:	4293      	cmp	r3, r2
 8014b60:	4618      	mov	r0, r3
 8014b62:	4466      	add	r6, ip
 8014b64:	bfa8      	it	ge
 8014b66:	4610      	movge	r0, r2
 8014b68:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014b6c:	8027      	strh	r7, [r4, #0]
 8014b6e:	442a      	add	r2, r5
 8014b70:	88e5      	ldrh	r5, [r4, #6]
 8014b72:	8060      	strh	r0, [r4, #2]
 8014b74:	4461      	add	r1, ip
 8014b76:	442b      	add	r3, r5
 8014b78:	b236      	sxth	r6, r6
 8014b7a:	b209      	sxth	r1, r1
 8014b7c:	b212      	sxth	r2, r2
 8014b7e:	b21b      	sxth	r3, r3
 8014b80:	428e      	cmp	r6, r1
 8014b82:	bfac      	ite	ge
 8014b84:	ebc7 0106 	rsbge	r1, r7, r6
 8014b88:	ebc7 0101 	rsblt	r1, r7, r1
 8014b8c:	429a      	cmp	r2, r3
 8014b8e:	bfac      	ite	ge
 8014b90:	ebc0 0202 	rsbge	r2, r0, r2
 8014b94:	ebc0 0203 	rsblt	r2, r0, r3
 8014b98:	80a1      	strh	r1, [r4, #4]
 8014b9a:	80e2      	strh	r2, [r4, #6]
 8014b9c:	e7d1      	b.n	8014b42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014ba0 <_ZN8touchgfx11Application11getInstanceEv>:
 8014ba0:	4b01      	ldr	r3, [pc, #4]	; (8014ba8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014ba2:	6818      	ldr	r0, [r3, #0]
 8014ba4:	4770      	bx	lr
 8014ba6:	bf00      	nop
 8014ba8:	20012df8 	.word	0x20012df8

08014bac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014bac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014bae:	4b10      	ldr	r3, [pc, #64]	; (8014bf0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014bb0:	781b      	ldrb	r3, [r3, #0]
 8014bb2:	4605      	mov	r5, r0
 8014bb4:	b1d3      	cbz	r3, 8014bec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014bb6:	4b0f      	ldr	r3, [pc, #60]	; (8014bf4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014bb8:	4f0f      	ldr	r7, [pc, #60]	; (8014bf8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014bba:	881c      	ldrh	r4, [r3, #0]
 8014bbc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014bc0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014bc4:	42a3      	cmp	r3, r4
 8014bc6:	d90e      	bls.n	8014be6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014bc8:	683b      	ldr	r3, [r7, #0]
 8014bca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014bce:	b10a      	cbz	r2, 8014bd4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014bd0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014bd2:	b900      	cbnz	r0, 8014bd6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014bd4:	6898      	ldr	r0, [r3, #8]
 8014bd6:	6803      	ldr	r3, [r0, #0]
 8014bd8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014bdc:	69db      	ldr	r3, [r3, #28]
 8014bde:	3401      	adds	r4, #1
 8014be0:	4798      	blx	r3
 8014be2:	b2a4      	uxth	r4, r4
 8014be4:	e7ec      	b.n	8014bc0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014be6:	2300      	movs	r3, #0
 8014be8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014bec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014bee:	bf00      	nop
 8014bf0:	20012da2 	.word	0x20012da2
 8014bf4:	20000088 	.word	0x20000088
 8014bf8:	20012da4 	.word	0x20012da4

08014bfc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014bfc:	b510      	push	{r4, lr}
 8014bfe:	2300      	movs	r3, #0
 8014c00:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014c04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014c08:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014c0c:	4604      	mov	r4, r0
 8014c0e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014c12:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014c16:	429a      	cmp	r2, r3
 8014c18:	d90e      	bls.n	8014c38 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014c1a:	18e2      	adds	r2, r4, r3
 8014c1c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014c20:	b122      	cbz	r2, 8014c2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014c22:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014c26:	6803      	ldr	r3, [r0, #0]
 8014c28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014c2a:	4798      	blx	r3
 8014c2c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014c30:	3301      	adds	r3, #1
 8014c32:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014c36:	e7ea      	b.n	8014c0e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014c38:	bd10      	pop	{r4, pc}

08014c3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014c3a:	b530      	push	{r4, r5, lr}
 8014c3c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014c40:	2200      	movs	r2, #0
 8014c42:	b293      	uxth	r3, r2
 8014c44:	429d      	cmp	r5, r3
 8014c46:	d90e      	bls.n	8014c66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014c48:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014c4c:	428b      	cmp	r3, r1
 8014c4e:	d10b      	bne.n	8014c68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014c50:	1884      	adds	r4, r0, r2
 8014c52:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014c56:	b13b      	cbz	r3, 8014c68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014c58:	3b01      	subs	r3, #1
 8014c5a:	b2db      	uxtb	r3, r3
 8014c5c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014c60:	b90b      	cbnz	r3, 8014c66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014c62:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014c66:	bd30      	pop	{r4, r5, pc}
 8014c68:	3201      	adds	r2, #1
 8014c6a:	e7ea      	b.n	8014c42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014c6c:	2300      	movs	r3, #0
 8014c6e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014c72:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014c76:	30a4      	adds	r0, #164	; 0xa4
 8014c78:	f802 3b01 	strb.w	r3, [r2], #1
 8014c7c:	4282      	cmp	r2, r0
 8014c7e:	d1fb      	bne.n	8014c78 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014c80:	4770      	bx	lr
	...

08014c84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014c84:	b570      	push	{r4, r5, r6, lr}
 8014c86:	4c0b      	ldr	r4, [pc, #44]	; (8014cb4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014c88:	4605      	mov	r5, r0
 8014c8a:	6820      	ldr	r0, [r4, #0]
 8014c8c:	460e      	mov	r6, r1
 8014c8e:	b110      	cbz	r0, 8014c96 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014c90:	6803      	ldr	r3, [r0, #0]
 8014c92:	695b      	ldr	r3, [r3, #20]
 8014c94:	4798      	blx	r3
 8014c96:	1d28      	adds	r0, r5, #4
 8014c98:	f7ff ffe8 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014c9c:	6026      	str	r6, [r4, #0]
 8014c9e:	6833      	ldr	r3, [r6, #0]
 8014ca0:	4630      	mov	r0, r6
 8014ca2:	68db      	ldr	r3, [r3, #12]
 8014ca4:	4798      	blx	r3
 8014ca6:	682b      	ldr	r3, [r5, #0]
 8014ca8:	4628      	mov	r0, r5
 8014caa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014cac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014cb0:	4718      	bx	r3
 8014cb2:	bf00      	nop
 8014cb4:	20012de8 	.word	0x20012de8

08014cb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014cb8:	2300      	movs	r3, #0
 8014cba:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014cbe:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014cc2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014cc4:	461a      	mov	r2, r3
 8014cc6:	461c      	mov	r4, r3
 8014cc8:	461d      	mov	r5, r3
 8014cca:	459c      	cmp	ip, r3
 8014ccc:	dd1a      	ble.n	8014d04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014cce:	18c6      	adds	r6, r0, r3
 8014cd0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014cd4:	b16e      	cbz	r6, 8014cf2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014cd6:	429a      	cmp	r2, r3
 8014cd8:	d008      	beq.n	8014cec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014cda:	fa1f fe82 	uxth.w	lr, r2
 8014cde:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014ce2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014ce6:	1887      	adds	r7, r0, r2
 8014ce8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014cec:	3201      	adds	r2, #1
 8014cee:	3301      	adds	r3, #1
 8014cf0:	e7eb      	b.n	8014cca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014cf2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014cf6:	4299      	cmp	r1, r3
 8014cf8:	bfa8      	it	ge
 8014cfa:	3501      	addge	r5, #1
 8014cfc:	429e      	cmp	r6, r3
 8014cfe:	bfc8      	it	gt
 8014d00:	3401      	addgt	r4, #1
 8014d02:	e7f4      	b.n	8014cee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014d04:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8014d08:	1b49      	subs	r1, r1, r5
 8014d0a:	1b1b      	subs	r3, r3, r4
 8014d0c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8014d10:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014d14:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014d18:	4293      	cmp	r3, r2
 8014d1a:	dd03      	ble.n	8014d24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014d1c:	3b01      	subs	r3, #1
 8014d1e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014d22:	e7f7      	b.n	8014d14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014d28 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014d28:	b570      	push	{r4, r5, r6, lr}
 8014d2a:	4d16      	ldr	r5, [pc, #88]	; (8014d84 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014d2c:	4604      	mov	r4, r0
 8014d2e:	6828      	ldr	r0, [r5, #0]
 8014d30:	b140      	cbz	r0, 8014d44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014d32:	7a03      	ldrb	r3, [r0, #8]
 8014d34:	b933      	cbnz	r3, 8014d44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014d36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014d3a:	6803      	ldr	r3, [r0, #0]
 8014d3c:	689b      	ldr	r3, [r3, #8]
 8014d3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014d42:	4718      	bx	r3
 8014d44:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8014d48:	4e0f      	ldr	r6, [pc, #60]	; (8014d88 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014d4a:	b973      	cbnz	r3, 8014d6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014d4c:	b168      	cbz	r0, 8014d6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014d4e:	7a03      	ldrb	r3, [r0, #8]
 8014d50:	b15b      	cbz	r3, 8014d6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014d52:	6830      	ldr	r0, [r6, #0]
 8014d54:	b110      	cbz	r0, 8014d5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014d56:	6803      	ldr	r3, [r0, #0]
 8014d58:	691b      	ldr	r3, [r3, #16]
 8014d5a:	4798      	blx	r3
 8014d5c:	6828      	ldr	r0, [r5, #0]
 8014d5e:	6803      	ldr	r3, [r0, #0]
 8014d60:	68db      	ldr	r3, [r3, #12]
 8014d62:	4798      	blx	r3
 8014d64:	2301      	movs	r3, #1
 8014d66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014d6a:	3404      	adds	r4, #4
 8014d6c:	4620      	mov	r0, r4
 8014d6e:	f7ff ff45 	bl	8014bfc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014d72:	4620      	mov	r0, r4
 8014d74:	f7ff ffa0 	bl	8014cb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014d78:	6830      	ldr	r0, [r6, #0]
 8014d7a:	b110      	cbz	r0, 8014d82 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014d7c:	6803      	ldr	r3, [r0, #0]
 8014d7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014d80:	e7dd      	b.n	8014d3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014d82:	bd70      	pop	{r4, r5, r6, pc}
 8014d84:	20012dec 	.word	0x20012dec
 8014d88:	20012de8 	.word	0x20012de8

08014d8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8014d8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014d8e:	2300      	movs	r3, #0
 8014d90:	4604      	mov	r4, r0
 8014d92:	460d      	mov	r5, r1
 8014d94:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8014d98:	4618      	mov	r0, r3
 8014d9a:	b29a      	uxth	r2, r3
 8014d9c:	4291      	cmp	r1, r2
 8014d9e:	d911      	bls.n	8014dc4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014da0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014da4:	18e6      	adds	r6, r4, r3
 8014da6:	42af      	cmp	r7, r5
 8014da8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8014dac:	d105      	bne.n	8014dba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8014dae:	2aff      	cmp	r2, #255	; 0xff
 8014db0:	d002      	beq.n	8014db8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014db2:	3201      	adds	r2, #1
 8014db4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014db8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014dba:	2a00      	cmp	r2, #0
 8014dbc:	bf08      	it	eq
 8014dbe:	2001      	moveq	r0, #1
 8014dc0:	3301      	adds	r3, #1
 8014dc2:	e7ea      	b.n	8014d9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014dc4:	b120      	cbz	r0, 8014dd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014dc6:	2920      	cmp	r1, #32
 8014dc8:	d102      	bne.n	8014dd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014dca:	4620      	mov	r0, r4
 8014dcc:	f7ff ff74 	bl	8014cb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014dd0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014dd4:	2b1f      	cmp	r3, #31
 8014dd6:	d8ef      	bhi.n	8014db8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014dd8:	18e2      	adds	r2, r4, r3
 8014dda:	2101      	movs	r1, #1
 8014ddc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014de0:	185a      	adds	r2, r3, r1
 8014de2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014de6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8014dea:	e7e5      	b.n	8014db8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08014dec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014dec:	4603      	mov	r3, r0
 8014dee:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014df2:	2200      	movs	r2, #0
 8014df4:	801a      	strh	r2, [r3, #0]
 8014df6:	805a      	strh	r2, [r3, #2]
 8014df8:	809a      	strh	r2, [r3, #4]
 8014dfa:	80da      	strh	r2, [r3, #6]
 8014dfc:	3308      	adds	r3, #8
 8014dfe:	428b      	cmp	r3, r1
 8014e00:	d1f8      	bne.n	8014df4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014e02:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014e06:	4770      	bx	lr

08014e08 <_ZN8touchgfx11ApplicationC1Ev>:
 8014e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e0a:	4606      	mov	r6, r0
 8014e0c:	4b1c      	ldr	r3, [pc, #112]	; (8014e80 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014e0e:	f846 3b04 	str.w	r3, [r6], #4
 8014e12:	4604      	mov	r4, r0
 8014e14:	2500      	movs	r5, #0
 8014e16:	22a8      	movs	r2, #168	; 0xa8
 8014e18:	2100      	movs	r1, #0
 8014e1a:	4630      	mov	r0, r6
 8014e1c:	f014 ff4f 	bl	8029cbe <memset>
 8014e20:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014e24:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014e28:	f7ff ffe0 	bl	8014dec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014e2c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014e30:	f7ff ffdc 	bl	8014dec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014e34:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014e38:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8014e3c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8014e40:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8014e44:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8014e48:	490e      	ldr	r1, [pc, #56]	; (8014e84 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014e4a:	480f      	ldr	r0, [pc, #60]	; (8014e88 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014e4c:	4f0f      	ldr	r7, [pc, #60]	; (8014e8c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8014e4e:	f010 fde9 	bl	8025a24 <CRC_Lock>
 8014e52:	4b0f      	ldr	r3, [pc, #60]	; (8014e90 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014e54:	b158      	cbz	r0, 8014e6e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014e56:	801d      	strh	r5, [r3, #0]
 8014e58:	4a0e      	ldr	r2, [pc, #56]	; (8014e94 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014e5a:	2300      	movs	r3, #0
 8014e5c:	6013      	str	r3, [r2, #0]
 8014e5e:	4a0e      	ldr	r2, [pc, #56]	; (8014e98 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014e60:	603b      	str	r3, [r7, #0]
 8014e62:	4630      	mov	r0, r6
 8014e64:	6013      	str	r3, [r2, #0]
 8014e66:	f7ff ff01 	bl	8014c6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014e6a:	4620      	mov	r0, r4
 8014e6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014e72:	2002      	movs	r0, #2
 8014e74:	801a      	strh	r2, [r3, #0]
 8014e76:	6038      	str	r0, [r7, #0]
 8014e78:	f001 fb4a 	bl	8016510 <_ZN8touchgfx6Screen4drawEv>
 8014e7c:	e7ec      	b.n	8014e58 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8014e7e:	bf00      	nop
 8014e80:	0802e088 	.word	0x0802e088
 8014e84:	b5e8b5cd 	.word	0xb5e8b5cd
 8014e88:	f407a5c2 	.word	0xf407a5c2
 8014e8c:	20012de8 	.word	0x20012de8
 8014e90:	20000088 	.word	0x20000088
 8014e94:	20012df8 	.word	0x20012df8
 8014e98:	20012dec 	.word	0x20012dec

08014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014e9c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014ea0:	3b01      	subs	r3, #1
 8014ea2:	b29b      	uxth	r3, r3
 8014ea4:	428b      	cmp	r3, r1
 8014ea6:	b510      	push	{r4, lr}
 8014ea8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8014eac:	d908      	bls.n	8014ec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014eae:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014eb2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014eb6:	681a      	ldr	r2, [r3, #0]
 8014eb8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014ebc:	685a      	ldr	r2, [r3, #4]
 8014ebe:	6062      	str	r2, [r4, #4]
 8014ec0:	bd10      	pop	{r4, pc}
	...

08014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec8:	4b8f      	ldr	r3, [pc, #572]	; (8015108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014eca:	b08f      	sub	sp, #60	; 0x3c
 8014ecc:	ac0a      	add	r4, sp, #40	; 0x28
 8014ece:	e884 0006 	stmia.w	r4, {r1, r2}
 8014ed2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ed6:	4b8d      	ldr	r3, [pc, #564]	; (801510c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014ed8:	4683      	mov	fp, r0
 8014eda:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014ede:	4620      	mov	r0, r4
 8014ee0:	f7ff fda1 	bl	8014a26 <_ZN8touchgfx4Rect10restrictToEss>
 8014ee4:	4620      	mov	r0, r4
 8014ee6:	f7fa fd8c 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014eea:	2800      	cmp	r0, #0
 8014eec:	d16a      	bne.n	8014fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014eee:	9403      	str	r4, [sp, #12]
 8014ef0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014ef4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014ef8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014efc:	35a4      	adds	r5, #164	; 0xa4
 8014efe:	9301      	str	r3, [sp, #4]
 8014f00:	b15c      	cbz	r4, 8014f1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014f02:	4629      	mov	r1, r5
 8014f04:	9803      	ldr	r0, [sp, #12]
 8014f06:	f7ff fddf 	bl	8014ac8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014f0a:	3c01      	subs	r4, #1
 8014f0c:	b118      	cbz	r0, 8014f16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014f0e:	b2a1      	uxth	r1, r4
 8014f10:	9801      	ldr	r0, [sp, #4]
 8014f12:	f7ff ffc3 	bl	8014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014f16:	3d08      	subs	r5, #8
 8014f18:	e7f2      	b.n	8014f00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014f1a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8014f1e:	f8cd a010 	str.w	sl, [sp, #16]
 8014f22:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014f26:	9302      	str	r3, [sp, #8]
 8014f28:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014f2c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014f30:	9306      	str	r3, [sp, #24]
 8014f32:	445c      	add	r4, fp
 8014f34:	2500      	movs	r5, #0
 8014f36:	4626      	mov	r6, r4
 8014f38:	f8cd a014 	str.w	sl, [sp, #20]
 8014f3c:	462f      	mov	r7, r5
 8014f3e:	9b05      	ldr	r3, [sp, #20]
 8014f40:	2b00      	cmp	r3, #0
 8014f42:	d073      	beq.n	801502c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014f44:	9903      	ldr	r1, [sp, #12]
 8014f46:	4630      	mov	r0, r6
 8014f48:	f7ff fd4b 	bl	80149e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014f4c:	b350      	cbz	r0, 8014fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014f4e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014f52:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014f56:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8014f5a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014f5e:	45e6      	cmp	lr, ip
 8014f60:	db33      	blt.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014f62:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014f66:	88b3      	ldrh	r3, [r6, #4]
 8014f68:	4472      	add	r2, lr
 8014f6a:	4463      	add	r3, ip
 8014f6c:	b212      	sxth	r2, r2
 8014f6e:	b21b      	sxth	r3, r3
 8014f70:	429a      	cmp	r2, r3
 8014f72:	dc2a      	bgt.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014f74:	88f3      	ldrh	r3, [r6, #6]
 8014f76:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014f7a:	fa1f f289 	uxth.w	r2, r9
 8014f7e:	4413      	add	r3, r2
 8014f80:	b29b      	uxth	r3, r3
 8014f82:	45c8      	cmp	r8, r9
 8014f84:	fa1f fc88 	uxth.w	ip, r8
 8014f88:	fa0f fe83 	sxth.w	lr, r3
 8014f8c:	db0f      	blt.n	8014fae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8014f8e:	eba3 030c 	sub.w	r3, r3, ip
 8014f92:	1ac9      	subs	r1, r1, r3
 8014f94:	b209      	sxth	r1, r1
 8014f96:	2900      	cmp	r1, #0
 8014f98:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014f9c:	dd12      	ble.n	8014fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014f9e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014fa2:	4605      	mov	r5, r0
 8014fa4:	9b05      	ldr	r3, [sp, #20]
 8014fa6:	3b01      	subs	r3, #1
 8014fa8:	9305      	str	r3, [sp, #20]
 8014faa:	3e08      	subs	r6, #8
 8014fac:	e7c7      	b.n	8014f3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8014fae:	4461      	add	r1, ip
 8014fb0:	b209      	sxth	r1, r1
 8014fb2:	4571      	cmp	r1, lr
 8014fb4:	dc38      	bgt.n	8015028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014fb6:	eba2 020c 	sub.w	r2, r2, ip
 8014fba:	b212      	sxth	r2, r2
 8014fbc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8014fc0:	2a00      	cmp	r2, #0
 8014fc2:	dcee      	bgt.n	8014fa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014fc4:	b00f      	add	sp, #60	; 0x3c
 8014fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fca:	45c8      	cmp	r8, r9
 8014fcc:	db2c      	blt.n	8015028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014fce:	88f3      	ldrh	r3, [r6, #6]
 8014fd0:	4499      	add	r9, r3
 8014fd2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8014fd6:	4498      	add	r8, r3
 8014fd8:	fa0f f989 	sxth.w	r9, r9
 8014fdc:	fa0f f888 	sxth.w	r8, r8
 8014fe0:	45c1      	cmp	r9, r8
 8014fe2:	db21      	blt.n	8015028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014fe4:	88b3      	ldrh	r3, [r6, #4]
 8014fe6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014fea:	fa1f f28c 	uxth.w	r2, ip
 8014fee:	4413      	add	r3, r2
 8014ff0:	b29b      	uxth	r3, r3
 8014ff2:	45e6      	cmp	lr, ip
 8014ff4:	fa1f f88e 	uxth.w	r8, lr
 8014ff8:	fa0f f983 	sxth.w	r9, r3
 8014ffc:	db0a      	blt.n	8015014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8014ffe:	eba3 0308 	sub.w	r3, r3, r8
 8015002:	1ac9      	subs	r1, r1, r3
 8015004:	b209      	sxth	r1, r1
 8015006:	2900      	cmp	r1, #0
 8015008:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801500c:	ddda      	ble.n	8014fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801500e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015012:	e7c6      	b.n	8014fa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015014:	4441      	add	r1, r8
 8015016:	b209      	sxth	r1, r1
 8015018:	4549      	cmp	r1, r9
 801501a:	dc05      	bgt.n	8015028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801501c:	eba2 0208 	sub.w	r2, r2, r8
 8015020:	b212      	sxth	r2, r2
 8015022:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015026:	e7cb      	b.n	8014fc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015028:	4607      	mov	r7, r0
 801502a:	e7bb      	b.n	8014fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801502c:	2d00      	cmp	r5, #0
 801502e:	d181      	bne.n	8014f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015030:	2f00      	cmp	r7, #0
 8015032:	f000 81dd 	beq.w	80153f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015036:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801503a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801503e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015042:	b2b3      	uxth	r3, r6
 8015044:	9305      	str	r3, [sp, #20]
 8015046:	9a05      	ldr	r2, [sp, #20]
 8015048:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801504c:	4413      	add	r3, r2
 801504e:	b2ba      	uxth	r2, r7
 8015050:	4492      	add	sl, r2
 8015052:	b29b      	uxth	r3, r3
 8015054:	fa1f fa8a 	uxth.w	sl, sl
 8015058:	fa0f f883 	sxth.w	r8, r3
 801505c:	fa0f f98a 	sxth.w	r9, sl
 8015060:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015064:	9b04      	ldr	r3, [sp, #16]
 8015066:	2b00      	cmp	r3, #0
 8015068:	d052      	beq.n	8015110 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801506a:	9903      	ldr	r1, [sp, #12]
 801506c:	4620      	mov	r0, r4
 801506e:	f7ff fcb8 	bl	80149e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015072:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015076:	b1c0      	cbz	r0, 80150aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015078:	f9b4 e000 	ldrsh.w	lr, [r4]
 801507c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015080:	4576      	cmp	r6, lr
 8015082:	dc22      	bgt.n	80150ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015084:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015088:	44f4      	add	ip, lr
 801508a:	fa0f fc8c 	sxth.w	ip, ip
 801508e:	45e0      	cmp	r8, ip
 8015090:	db1b      	blt.n	80150ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015092:	428f      	cmp	r7, r1
 8015094:	fa1f fc81 	uxth.w	ip, r1
 8015098:	88e1      	ldrh	r1, [r4, #6]
 801509a:	dc0d      	bgt.n	80150b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801509c:	ebaa 0c0c 	sub.w	ip, sl, ip
 80150a0:	eba1 010c 	sub.w	r1, r1, ip
 80150a4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80150a8:	80e1      	strh	r1, [r4, #6]
 80150aa:	4628      	mov	r0, r5
 80150ac:	9904      	ldr	r1, [sp, #16]
 80150ae:	3901      	subs	r1, #1
 80150b0:	9104      	str	r1, [sp, #16]
 80150b2:	3c08      	subs	r4, #8
 80150b4:	4605      	mov	r5, r0
 80150b6:	e7d3      	b.n	8015060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80150b8:	4461      	add	r1, ip
 80150ba:	b209      	sxth	r1, r1
 80150bc:	4549      	cmp	r1, r9
 80150be:	dcf5      	bgt.n	80150ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80150c0:	eba2 0c0c 	sub.w	ip, r2, ip
 80150c4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80150c8:	e7ef      	b.n	80150aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80150ca:	428f      	cmp	r7, r1
 80150cc:	dcee      	bgt.n	80150ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80150ce:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80150d2:	4461      	add	r1, ip
 80150d4:	b209      	sxth	r1, r1
 80150d6:	4589      	cmp	r9, r1
 80150d8:	dbe8      	blt.n	80150ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80150da:	4576      	cmp	r6, lr
 80150dc:	fa1f fc8e 	uxth.w	ip, lr
 80150e0:	88a1      	ldrh	r1, [r4, #4]
 80150e2:	dc07      	bgt.n	80150f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80150e4:	eba3 0c0c 	sub.w	ip, r3, ip
 80150e8:	eba1 010c 	sub.w	r1, r1, ip
 80150ec:	f8a4 8000 	strh.w	r8, [r4]
 80150f0:	80a1      	strh	r1, [r4, #4]
 80150f2:	e7da      	b.n	80150aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80150f4:	4461      	add	r1, ip
 80150f6:	b209      	sxth	r1, r1
 80150f8:	4588      	cmp	r8, r1
 80150fa:	dbd7      	blt.n	80150ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80150fc:	9905      	ldr	r1, [sp, #20]
 80150fe:	eba1 0c0c 	sub.w	ip, r1, ip
 8015102:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015106:	e7d0      	b.n	80150aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015108:	20012d9a 	.word	0x20012d9a
 801510c:	20012d98 	.word	0x20012d98
 8015110:	2d00      	cmp	r5, #0
 8015112:	f000 816d 	beq.w	80153f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015116:	9b06      	ldr	r3, [sp, #24]
 8015118:	445b      	add	r3, fp
 801511a:	461c      	mov	r4, r3
 801511c:	9b02      	ldr	r3, [sp, #8]
 801511e:	3301      	adds	r3, #1
 8015120:	f000 8166 	beq.w	80153f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015124:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015128:	4629      	mov	r1, r5
 801512a:	9803      	ldr	r0, [sp, #12]
 801512c:	f7ff fccc 	bl	8014ac8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015130:	b120      	cbz	r0, 801513c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015132:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015136:	9801      	ldr	r0, [sp, #4]
 8015138:	f7ff feb0 	bl	8014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801513c:	9903      	ldr	r1, [sp, #12]
 801513e:	4628      	mov	r0, r5
 8015140:	f7ff fc4f 	bl	80149e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015144:	2800      	cmp	r0, #0
 8015146:	f000 809c 	beq.w	8015282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801514a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801514e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015152:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015156:	9309      	str	r3, [sp, #36]	; 0x24
 8015158:	fa1f f189 	uxth.w	r1, r9
 801515c:	eb01 0c03 	add.w	ip, r1, r3
 8015160:	fa1f fa8c 	uxth.w	sl, ip
 8015164:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015168:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801516c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015170:	b283      	uxth	r3, r0
 8015172:	eb03 050c 	add.w	r5, r3, ip
 8015176:	b2ad      	uxth	r5, r5
 8015178:	9505      	str	r5, [sp, #20]
 801517a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801517e:	9504      	str	r5, [sp, #16]
 8015180:	4548      	cmp	r0, r9
 8015182:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015186:	f340 8099 	ble.w	80152bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801518a:	1a5b      	subs	r3, r3, r1
 801518c:	b29b      	uxth	r3, r3
 801518e:	4596      	cmp	lr, r2
 8015190:	fa0f f08a 	sxth.w	r0, sl
 8015194:	b21e      	sxth	r6, r3
 8015196:	dd2e      	ble.n	80151f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015198:	9f02      	ldr	r7, [sp, #8]
 801519a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801519e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80151a2:	9f04      	ldr	r7, [sp, #16]
 80151a4:	1a3f      	subs	r7, r7, r0
 80151a6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80151aa:	fa1f fe8e 	uxth.w	lr, lr
 80151ae:	b292      	uxth	r2, r2
 80151b0:	ebae 0102 	sub.w	r1, lr, r2
 80151b4:	44a6      	add	lr, r4
 80151b6:	4402      	add	r2, r0
 80151b8:	b289      	uxth	r1, r1
 80151ba:	fa0f fe8e 	sxth.w	lr, lr
 80151be:	b212      	sxth	r2, r2
 80151c0:	b20d      	sxth	r5, r1
 80151c2:	ebae 0202 	sub.w	r2, lr, r2
 80151c6:	436f      	muls	r7, r5
 80151c8:	4372      	muls	r2, r6
 80151ca:	4297      	cmp	r7, r2
 80151cc:	db09      	blt.n	80151e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80151ce:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80151d2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80151d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80151da:	449c      	add	ip, r3
 80151dc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80151e0:	e686      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80151e2:	4421      	add	r1, r4
 80151e4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80151e8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80151ec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80151f0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80151f4:	e67c      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80151f6:	9f04      	ldr	r7, [sp, #16]
 80151f8:	42b8      	cmp	r0, r7
 80151fa:	da27      	bge.n	801524c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80151fc:	9902      	ldr	r1, [sp, #8]
 80151fe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015202:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015206:	eb05 010e 	add.w	r1, r5, lr
 801520a:	fa1f f881 	uxth.w	r8, r1
 801520e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015212:	4411      	add	r1, r2
 8015214:	eba1 0108 	sub.w	r1, r1, r8
 8015218:	b289      	uxth	r1, r1
 801521a:	fa0f f988 	sxth.w	r9, r8
 801521e:	eba2 020e 	sub.w	r2, r2, lr
 8015222:	fa0f f881 	sxth.w	r8, r1
 8015226:	1a3f      	subs	r7, r7, r0
 8015228:	4372      	muls	r2, r6
 801522a:	fb08 f707 	mul.w	r7, r8, r7
 801522e:	42ba      	cmp	r2, r7
 8015230:	dc06      	bgt.n	8015240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015232:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015236:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801523a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801523e:	e7ca      	b.n	80151d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015240:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015244:	4429      	add	r1, r5
 8015246:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801524a:	e651      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801524c:	9805      	ldr	r0, [sp, #20]
 801524e:	ebaa 0000 	sub.w	r0, sl, r0
 8015252:	b280      	uxth	r0, r0
 8015254:	2d06      	cmp	r5, #6
 8015256:	fa0f fe80 	sxth.w	lr, r0
 801525a:	d817      	bhi.n	801528c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801525c:	9b04      	ldr	r3, [sp, #16]
 801525e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015262:	1c6b      	adds	r3, r5, #1
 8015264:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015268:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801526c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015270:	9b01      	ldr	r3, [sp, #4]
 8015272:	9801      	ldr	r0, [sp, #4]
 8015274:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015278:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801527c:	805a      	strh	r2, [r3, #2]
 801527e:	809e      	strh	r6, [r3, #4]
 8015280:	80d9      	strh	r1, [r3, #6]
 8015282:	9b02      	ldr	r3, [sp, #8]
 8015284:	3b01      	subs	r3, #1
 8015286:	9302      	str	r3, [sp, #8]
 8015288:	3c08      	subs	r4, #8
 801528a:	e747      	b.n	801511c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801528c:	9a02      	ldr	r2, [sp, #8]
 801528e:	45b6      	cmp	lr, r6
 8015290:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015294:	db0d      	blt.n	80152b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015296:	449c      	add	ip, r3
 8015298:	fa1f fc8c 	uxth.w	ip, ip
 801529c:	445a      	add	r2, fp
 801529e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80152a2:	448c      	add	ip, r1
 80152a4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80152a8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80152ac:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80152b0:	e61e      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80152b2:	445a      	add	r2, fp
 80152b4:	4484      	add	ip, r0
 80152b6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80152ba:	e78f      	b.n	80151dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80152bc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80152c0:	fa1f f18e 	uxth.w	r1, lr
 80152c4:	eb01 0806 	add.w	r8, r1, r6
 80152c8:	b293      	uxth	r3, r2
 80152ca:	fa1f f888 	uxth.w	r8, r8
 80152ce:	9306      	str	r3, [sp, #24]
 80152d0:	fa0f f388 	sxth.w	r3, r8
 80152d4:	9307      	str	r3, [sp, #28]
 80152d6:	9f06      	ldr	r7, [sp, #24]
 80152d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80152dc:	443b      	add	r3, r7
 80152de:	b29b      	uxth	r3, r3
 80152e0:	4596      	cmp	lr, r2
 80152e2:	9308      	str	r3, [sp, #32]
 80152e4:	da24      	bge.n	8015330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80152e6:	9905      	ldr	r1, [sp, #20]
 80152e8:	eba3 0308 	sub.w	r3, r3, r8
 80152ec:	ebaa 0401 	sub.w	r4, sl, r1
 80152f0:	b2a4      	uxth	r4, r4
 80152f2:	b29b      	uxth	r3, r3
 80152f4:	b225      	sxth	r5, r4
 80152f6:	b219      	sxth	r1, r3
 80152f8:	eba2 020e 	sub.w	r2, r2, lr
 80152fc:	eba9 0000 	sub.w	r0, r9, r0
 8015300:	436a      	muls	r2, r5
 8015302:	4348      	muls	r0, r1
 8015304:	4282      	cmp	r2, r0
 8015306:	9a02      	ldr	r2, [sp, #8]
 8015308:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801530c:	445a      	add	r2, fp
 801530e:	dc06      	bgt.n	801531e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015310:	9b07      	ldr	r3, [sp, #28]
 8015312:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015316:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801531a:	44a4      	add	ip, r4
 801531c:	e75e      	b.n	80151dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801531e:	9904      	ldr	r1, [sp, #16]
 8015320:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015324:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015328:	4433      	add	r3, r6
 801532a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801532e:	e5df      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015330:	9f06      	ldr	r7, [sp, #24]
 8015332:	9b04      	ldr	r3, [sp, #16]
 8015334:	1bc9      	subs	r1, r1, r7
 8015336:	fa0f f78a 	sxth.w	r7, sl
 801533a:	b289      	uxth	r1, r1
 801533c:	429f      	cmp	r7, r3
 801533e:	fa0f fe81 	sxth.w	lr, r1
 8015342:	dd23      	ble.n	801538c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015344:	9a05      	ldr	r2, [sp, #20]
 8015346:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801534a:	9d07      	ldr	r5, [sp, #28]
 801534c:	ebaa 0202 	sub.w	r2, sl, r2
 8015350:	b292      	uxth	r2, r2
 8015352:	eba5 0a03 	sub.w	sl, r5, r3
 8015356:	b214      	sxth	r4, r2
 8015358:	eba9 0000 	sub.w	r0, r9, r0
 801535c:	9b02      	ldr	r3, [sp, #8]
 801535e:	fb0e f000 	mul.w	r0, lr, r0
 8015362:	fb04 fa0a 	mul.w	sl, r4, sl
 8015366:	00db      	lsls	r3, r3, #3
 8015368:	4550      	cmp	r0, sl
 801536a:	445b      	add	r3, fp
 801536c:	db03      	blt.n	8015376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801536e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015372:	4494      	add	ip, r2
 8015374:	e732      	b.n	80151dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015376:	9a04      	ldr	r2, [sp, #16]
 8015378:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801537c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015380:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015384:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015388:	4431      	add	r1, r6
 801538a:	e75c      	b.n	8015246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801538c:	9b08      	ldr	r3, [sp, #32]
 801538e:	eba3 0308 	sub.w	r3, r3, r8
 8015392:	b29b      	uxth	r3, r3
 8015394:	2d06      	cmp	r5, #6
 8015396:	b218      	sxth	r0, r3
 8015398:	d813      	bhi.n	80153c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801539a:	9b07      	ldr	r3, [sp, #28]
 801539c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80153a0:	1c6b      	adds	r3, r5, #1
 80153a2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80153a6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80153aa:	9b01      	ldr	r3, [sp, #4]
 80153ac:	9901      	ldr	r1, [sp, #4]
 80153ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80153b2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80153b6:	805a      	strh	r2, [r3, #2]
 80153b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80153ba:	809a      	strh	r2, [r3, #4]
 80153bc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80153c0:	e75f      	b.n	8015282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80153c2:	9c02      	ldr	r4, [sp, #8]
 80153c4:	4570      	cmp	r0, lr
 80153c6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80153ca:	db0d      	blt.n	80153e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80153cc:	4431      	add	r1, r6
 80153ce:	9b06      	ldr	r3, [sp, #24]
 80153d0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80153d4:	b289      	uxth	r1, r1
 80153d6:	445c      	add	r4, fp
 80153d8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80153dc:	4419      	add	r1, r3
 80153de:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80153e2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80153e6:	e583      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80153e8:	445c      	add	r4, fp
 80153ea:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80153ee:	e79b      	b.n	8015328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80153f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80153f4:	1e65      	subs	r5, r4, #1
 80153f6:	b2ad      	uxth	r5, r5
 80153f8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80153fc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015400:	42b5      	cmp	r5, r6
 8015402:	d044      	beq.n	801548e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015404:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015408:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801540c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015410:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015414:	4282      	cmp	r2, r0
 8015416:	d11f      	bne.n	8015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015418:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801541c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015420:	459c      	cmp	ip, r3
 8015422:	d119      	bne.n	8015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015424:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015428:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801542c:	19d8      	adds	r0, r3, r7
 801542e:	b200      	sxth	r0, r0
 8015430:	4288      	cmp	r0, r1
 8015432:	d109      	bne.n	8015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015434:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015438:	4413      	add	r3, r2
 801543a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801543e:	4629      	mov	r1, r5
 8015440:	9801      	ldr	r0, [sp, #4]
 8015442:	f7ff fd2b 	bl	8014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015446:	e003      	b.n	8015450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015448:	4411      	add	r1, r2
 801544a:	b209      	sxth	r1, r1
 801544c:	42b9      	cmp	r1, r7
 801544e:	d0f3      	beq.n	8015438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015450:	3d01      	subs	r5, #1
 8015452:	b2ad      	uxth	r5, r5
 8015454:	3c08      	subs	r4, #8
 8015456:	e7d3      	b.n	8015400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015458:	42b9      	cmp	r1, r7
 801545a:	d1f9      	bne.n	8015450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801545c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015460:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015464:	4299      	cmp	r1, r3
 8015466:	d1f3      	bne.n	8015450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015468:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801546c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015470:	181f      	adds	r7, r3, r0
 8015472:	b23f      	sxth	r7, r7
 8015474:	42ba      	cmp	r2, r7
 8015476:	d105      	bne.n	8015484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015478:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801547c:	440b      	add	r3, r1
 801547e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015482:	e7dc      	b.n	801543e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015484:	440a      	add	r2, r1
 8015486:	b212      	sxth	r2, r2
 8015488:	4290      	cmp	r0, r2
 801548a:	d1e1      	bne.n	8015450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801548c:	e7f6      	b.n	801547c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801548e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015492:	2e07      	cmp	r6, #7
 8015494:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015498:	d812      	bhi.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801549a:	1c75      	adds	r5, r6, #1
 801549c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80154a0:	9d01      	ldr	r5, [sp, #4]
 80154a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80154a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80154aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80154ae:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80154b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80154b6:	442c      	add	r4, r5
 80154b8:	8061      	strh	r1, [r4, #2]
 80154ba:	80a2      	strh	r2, [r4, #4]
 80154bc:	80e3      	strh	r3, [r4, #6]
 80154be:	e581      	b.n	8014fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80154c0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80154c4:	3e01      	subs	r6, #1
 80154c6:	445c      	add	r4, fp
 80154c8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80154cc:	f04f 37ff 	mov.w	r7, #4294967295
 80154d0:	2500      	movs	r5, #0
 80154d2:	9305      	str	r3, [sp, #20]
 80154d4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80154d8:	9302      	str	r3, [sp, #8]
 80154da:	1e72      	subs	r2, r6, #1
 80154dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80154e0:	9304      	str	r3, [sp, #16]
 80154e2:	4691      	mov	r9, r2
 80154e4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80154e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80154ec:	bf14      	ite	ne
 80154ee:	9905      	ldrne	r1, [sp, #20]
 80154f0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80154f4:	6818      	ldr	r0, [r3, #0]
 80154f6:	9207      	str	r2, [sp, #28]
 80154f8:	bf18      	it	ne
 80154fa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80154fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015502:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015506:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801550a:	9306      	str	r3, [sp, #24]
 801550c:	fb18 f801 	smulbb	r8, r8, r1
 8015510:	6859      	ldr	r1, [r3, #4]
 8015512:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015516:	4671      	mov	r1, lr
 8015518:	a80c      	add	r0, sp, #48	; 0x30
 801551a:	f7ff fafb 	bl	8014b14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801551e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015522:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015526:	9b04      	ldr	r3, [sp, #16]
 8015528:	9a02      	ldr	r2, [sp, #8]
 801552a:	fb10 f001 	smulbb	r0, r0, r1
 801552e:	fb02 8803 	mla	r8, r2, r3, r8
 8015532:	eba0 0108 	sub.w	r1, r0, r8
 8015536:	f04f 0c08 	mov.w	ip, #8
 801553a:	fb90 f0fc 	sdiv	r0, r0, ip
 801553e:	4288      	cmp	r0, r1
 8015540:	dc20      	bgt.n	8015584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015542:	4551      	cmp	r1, sl
 8015544:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015548:	da03      	bge.n	8015552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801554a:	b1d9      	cbz	r1, 8015584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801554c:	468a      	mov	sl, r1
 801554e:	464f      	mov	r7, r9
 8015550:	4635      	mov	r5, r6
 8015552:	f109 39ff 	add.w	r9, r9, #4294967295
 8015556:	f119 0f02 	cmn.w	r9, #2
 801555a:	d1c5      	bne.n	80154e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801555c:	4616      	mov	r6, r2
 801555e:	3201      	adds	r2, #1
 8015560:	f1a4 0408 	sub.w	r4, r4, #8
 8015564:	d1b6      	bne.n	80154d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015566:	9b01      	ldr	r3, [sp, #4]
 8015568:	b2ac      	uxth	r4, r5
 801556a:	00ed      	lsls	r5, r5, #3
 801556c:	1958      	adds	r0, r3, r5
 801556e:	1c7b      	adds	r3, r7, #1
 8015570:	d10b      	bne.n	801558a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015572:	4601      	mov	r1, r0
 8015574:	9803      	ldr	r0, [sp, #12]
 8015576:	f7ff facd 	bl	8014b14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801557a:	4621      	mov	r1, r4
 801557c:	9801      	ldr	r0, [sp, #4]
 801557e:	f7ff fc8d 	bl	8014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015582:	e4b5      	b.n	8014ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015584:	464f      	mov	r7, r9
 8015586:	4635      	mov	r5, r6
 8015588:	e7ed      	b.n	8015566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801558a:	9b01      	ldr	r3, [sp, #4]
 801558c:	00ff      	lsls	r7, r7, #3
 801558e:	19d9      	adds	r1, r3, r7
 8015590:	f7ff fac0 	bl	8014b14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015594:	9b03      	ldr	r3, [sp, #12]
 8015596:	cb03      	ldmia	r3!, {r0, r1}
 8015598:	445f      	add	r7, fp
 801559a:	445d      	add	r5, fp
 801559c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80155a0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80155a4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80155a8:	9b03      	ldr	r3, [sp, #12]
 80155aa:	6869      	ldr	r1, [r5, #4]
 80155ac:	c303      	stmia	r3!, {r0, r1}
 80155ae:	e7e4      	b.n	801557a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080155b0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80155b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155b4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80155b8:	b09b      	sub	sp, #108	; 0x6c
 80155ba:	4604      	mov	r4, r0
 80155bc:	4630      	mov	r0, r6
 80155be:	f7fa fa20 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80155c2:	4605      	mov	r5, r0
 80155c4:	b948      	cbnz	r0, 80155da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80155c6:	6823      	ldr	r3, [r4, #0]
 80155c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80155cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80155ce:	4620      	mov	r0, r4
 80155d0:	4798      	blx	r3
 80155d2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80155d6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80155da:	4bc6      	ldr	r3, [pc, #792]	; (80158f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80155dc:	681b      	ldr	r3, [r3, #0]
 80155de:	2b00      	cmp	r3, #0
 80155e0:	d03f      	beq.n	8015662 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80155e2:	4dc5      	ldr	r5, [pc, #788]	; (80158f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80155e4:	4628      	mov	r0, r5
 80155e6:	f7fa fa0c 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80155ea:	4606      	mov	r6, r0
 80155ec:	2800      	cmp	r0, #0
 80155ee:	d138      	bne.n	8015662 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80155f0:	4628      	mov	r0, r5
 80155f2:	f7ff f907 	bl	8014804 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80155f6:	6823      	ldr	r3, [r4, #0]
 80155f8:	6829      	ldr	r1, [r5, #0]
 80155fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80155fc:	686a      	ldr	r2, [r5, #4]
 80155fe:	4620      	mov	r0, r4
 8015600:	4798      	blx	r3
 8015602:	802e      	strh	r6, [r5, #0]
 8015604:	806e      	strh	r6, [r5, #2]
 8015606:	80ae      	strh	r6, [r5, #4]
 8015608:	80ee      	strh	r6, [r5, #6]
 801560a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801560e:	4dbb      	ldr	r5, [pc, #748]	; (80158fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015610:	4640      	mov	r0, r8
 8015612:	f7ff fbeb 	bl	8014dec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015616:	882e      	ldrh	r6, [r5, #0]
 8015618:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801561c:	4633      	mov	r3, r6
 801561e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015622:	42bb      	cmp	r3, r7
 8015624:	d224      	bcs.n	8015670 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015626:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801562a:	2907      	cmp	r1, #7
 801562c:	d816      	bhi.n	801565c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801562e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015632:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015636:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801563a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801563e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015642:	1c4a      	adds	r2, r1, #1
 8015644:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015648:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801564c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015650:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015654:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015658:	f8a2 c006 	strh.w	ip, [r2, #6]
 801565c:	3301      	adds	r3, #1
 801565e:	b29b      	uxth	r3, r3
 8015660:	e7df      	b.n	8015622 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015662:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015666:	2b00      	cmp	r3, #0
 8015668:	d1cf      	bne.n	801560a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801566a:	b01b      	add	sp, #108	; 0x6c
 801566c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015670:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015674:	42b3      	cmp	r3, r6
 8015676:	d90c      	bls.n	8015692 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015678:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801567c:	6822      	ldr	r2, [r4, #0]
 801567e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015682:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015684:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015688:	4620      	mov	r0, r4
 801568a:	3601      	adds	r6, #1
 801568c:	47b8      	blx	r7
 801568e:	b2b6      	uxth	r6, r6
 8015690:	e7ee      	b.n	8015670 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015692:	4a9b      	ldr	r2, [pc, #620]	; (8015900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015694:	6813      	ldr	r3, [r2, #0]
 8015696:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801569a:	2b01      	cmp	r3, #1
 801569c:	4691      	mov	r9, r2
 801569e:	f040 80e2 	bne.w	8015866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80156a2:	8829      	ldrh	r1, [r5, #0]
 80156a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80156a8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80156ac:	33ae      	adds	r3, #174	; 0xae
 80156ae:	2600      	movs	r6, #0
 80156b0:	428f      	cmp	r7, r1
 80156b2:	f103 0308 	add.w	r3, r3, #8
 80156b6:	dd0a      	ble.n	80156ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80156b8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80156bc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80156c0:	4402      	add	r2, r0
 80156c2:	b212      	sxth	r2, r2
 80156c4:	4296      	cmp	r6, r2
 80156c6:	bfb8      	it	lt
 80156c8:	4616      	movlt	r6, r2
 80156ca:	3101      	adds	r1, #1
 80156cc:	e7f0      	b.n	80156b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80156ce:	4b8d      	ldr	r3, [pc, #564]	; (8015904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80156d0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80156d4:	881b      	ldrh	r3, [r3, #0]
 80156d6:	2b0f      	cmp	r3, #15
 80156d8:	bf88      	it	hi
 80156da:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80156de:	f04f 0300 	mov.w	r3, #0
 80156e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80156e6:	bf98      	it	ls
 80156e8:	f04f 0b01 	movls.w	fp, #1
 80156ec:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80156f0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80156f4:	4b82      	ldr	r3, [pc, #520]	; (8015900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80156f6:	4438      	add	r0, r7
 80156f8:	b207      	sxth	r7, r0
 80156fa:	6818      	ldr	r0, [r3, #0]
 80156fc:	42b7      	cmp	r7, r6
 80156fe:	6803      	ldr	r3, [r0, #0]
 8015700:	f280 8083 	bge.w	801580a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015704:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015708:	4798      	blx	r3
 801570a:	eb07 030b 	add.w	r3, r7, fp
 801570e:	4298      	cmp	r0, r3
 8015710:	da07      	bge.n	8015722 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015712:	42b0      	cmp	r0, r6
 8015714:	da05      	bge.n	8015722 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015716:	4287      	cmp	r7, r0
 8015718:	dd6c      	ble.n	80157f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801571a:	2f00      	cmp	r7, #0
 801571c:	dd6a      	ble.n	80157f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801571e:	4630      	mov	r0, r6
 8015720:	e004      	b.n	801572c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015722:	4287      	cmp	r7, r0
 8015724:	dcfb      	bgt.n	801571e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015726:	42b0      	cmp	r0, r6
 8015728:	bfa8      	it	ge
 801572a:	4630      	movge	r0, r6
 801572c:	4b76      	ldr	r3, [pc, #472]	; (8015908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801572e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015732:	1bc0      	subs	r0, r0, r7
 8015734:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015738:	882f      	ldrh	r7, [r5, #0]
 801573a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801573e:	2200      	movs	r2, #0
 8015740:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015744:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015748:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801574c:	42bb      	cmp	r3, r7
 801574e:	d9cd      	bls.n	80156ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015750:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015754:	ab07      	add	r3, sp, #28
 8015756:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801575a:	6851      	ldr	r1, [r2, #4]
 801575c:	c303      	stmia	r3!, {r0, r1}
 801575e:	a905      	add	r1, sp, #20
 8015760:	a807      	add	r0, sp, #28
 8015762:	f7ff f93e 	bl	80149e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015766:	2800      	cmp	r0, #0
 8015768:	d04c      	beq.n	8015804 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801576a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801576e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015772:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015776:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801577a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801577e:	9302      	str	r3, [sp, #8]
 8015780:	4686      	mov	lr, r0
 8015782:	4290      	cmp	r0, r2
 8015784:	4450      	add	r0, sl
 8015786:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801578a:	bfb8      	it	lt
 801578c:	4696      	movlt	lr, r2
 801578e:	4452      	add	r2, sl
 8015790:	4299      	cmp	r1, r3
 8015792:	b280      	uxth	r0, r0
 8015794:	b292      	uxth	r2, r2
 8015796:	468c      	mov	ip, r1
 8015798:	fa0f fa82 	sxth.w	sl, r2
 801579c:	bfb8      	it	lt
 801579e:	469c      	movlt	ip, r3
 80157a0:	b203      	sxth	r3, r0
 80157a2:	4553      	cmp	r3, sl
 80157a4:	bfb8      	it	lt
 80157a6:	4602      	movlt	r2, r0
 80157a8:	eba2 020e 	sub.w	r2, r2, lr
 80157ac:	f8ad 2020 	strh.w	r2, [sp, #32]
 80157b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80157b4:	9b02      	ldr	r3, [sp, #8]
 80157b6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80157ba:	4411      	add	r1, r2
 80157bc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80157c0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80157c4:	4413      	add	r3, r2
 80157c6:	b289      	uxth	r1, r1
 80157c8:	b29b      	uxth	r3, r3
 80157ca:	b208      	sxth	r0, r1
 80157cc:	b21a      	sxth	r2, r3
 80157ce:	4290      	cmp	r0, r2
 80157d0:	bfb8      	it	lt
 80157d2:	460b      	movlt	r3, r1
 80157d4:	eba3 030c 	sub.w	r3, r3, ip
 80157d8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80157dc:	a807      	add	r0, sp, #28
 80157de:	f7fa f910 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80157e2:	b920      	cbnz	r0, 80157ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80157e4:	6823      	ldr	r3, [r4, #0]
 80157e6:	a907      	add	r1, sp, #28
 80157e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80157ea:	4620      	mov	r0, r4
 80157ec:	4798      	blx	r3
 80157ee:	3701      	adds	r7, #1
 80157f0:	b2bf      	uxth	r7, r7
 80157f2:	e7a9      	b.n	8015748 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80157f4:	f8d9 0000 	ldr.w	r0, [r9]
 80157f8:	6803      	ldr	r3, [r0, #0]
 80157fa:	2101      	movs	r1, #1
 80157fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015800:	4798      	blx	r3
 8015802:	e773      	b.n	80156ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015804:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015808:	e7e8      	b.n	80157dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801580a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801580c:	4798      	blx	r3
 801580e:	4b3f      	ldr	r3, [pc, #252]	; (801590c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015810:	781b      	ldrb	r3, [r3, #0]
 8015812:	2b00      	cmp	r3, #0
 8015814:	f43f af29 	beq.w	801566a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015818:	2300      	movs	r3, #0
 801581a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801581e:	882b      	ldrh	r3, [r5, #0]
 8015820:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015824:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015828:	42ab      	cmp	r3, r5
 801582a:	f4bf af1e 	bcs.w	801566a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801582e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015832:	2907      	cmp	r1, #7
 8015834:	d814      	bhi.n	8015860 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015836:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801583a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801583e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015842:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015846:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801584a:	1c4a      	adds	r2, r1, #1
 801584c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015850:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015854:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015858:	f8a2 c002 	strh.w	ip, [r2, #2]
 801585c:	8097      	strh	r7, [r2, #4]
 801585e:	80d6      	strh	r6, [r2, #6]
 8015860:	3301      	adds	r3, #1
 8015862:	b29b      	uxth	r3, r3
 8015864:	e7e0      	b.n	8015828 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015866:	2b02      	cmp	r3, #2
 8015868:	f040 8133 	bne.w	8015ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801586c:	4b28      	ldr	r3, [pc, #160]	; (8015910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801586e:	781b      	ldrb	r3, [r3, #0]
 8015870:	2b01      	cmp	r3, #1
 8015872:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015876:	f000 8098 	beq.w	80159aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801587a:	882a      	ldrh	r2, [r5, #0]
 801587c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015880:	3201      	adds	r2, #1
 8015882:	b292      	uxth	r2, r2
 8015884:	2900      	cmp	r1, #0
 8015886:	d0c2      	beq.n	801580e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015888:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801588c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015890:	441e      	add	r6, r3
 8015892:	b236      	sxth	r6, r6
 8015894:	4694      	mov	ip, r2
 8015896:	f04f 0900 	mov.w	r9, #0
 801589a:	fa1f f38c 	uxth.w	r3, ip
 801589e:	4299      	cmp	r1, r3
 80158a0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80158a4:	f240 80bf 	bls.w	8015a26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80158a8:	4427      	add	r7, r4
 80158aa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80158ae:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80158b2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80158b6:	4283      	cmp	r3, r0
 80158b8:	f340 80a1 	ble.w	80159fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80158bc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80158c0:	4406      	add	r6, r0
 80158c2:	b236      	sxth	r6, r6
 80158c4:	429e      	cmp	r6, r3
 80158c6:	bfa8      	it	ge
 80158c8:	461e      	movge	r6, r3
 80158ca:	46e1      	mov	r9, ip
 80158cc:	f10c 0c01 	add.w	ip, ip, #1
 80158d0:	e7e3      	b.n	801589a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80158d2:	d10a      	bne.n	80158ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80158d4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80158d8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80158dc:	4562      	cmp	r2, ip
 80158de:	bfb8      	it	lt
 80158e0:	4662      	movlt	r2, ip
 80158e2:	4288      	cmp	r0, r1
 80158e4:	bfb8      	it	lt
 80158e6:	461f      	movlt	r7, r3
 80158e8:	e087      	b.n	80159fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80158ea:	428a      	cmp	r2, r1
 80158ec:	bfb8      	it	lt
 80158ee:	460a      	movlt	r2, r1
 80158f0:	e083      	b.n	80159fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80158f2:	bf00      	nop
 80158f4:	20012de4 	.word	0x20012de4
 80158f8:	20012df0 	.word	0x20012df0
 80158fc:	20000088 	.word	0x20000088
 8015900:	20012da4 	.word	0x20012da4
 8015904:	20012d9a 	.word	0x20012d9a
 8015908:	20012d98 	.word	0x20012d98
 801590c:	20012da2 	.word	0x20012da2
 8015910:	20012d9c 	.word	0x20012d9c
 8015914:	19a1      	adds	r1, r4, r6
 8015916:	ab07      	add	r3, sp, #28
 8015918:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801591c:	6849      	ldr	r1, [r1, #4]
 801591e:	c303      	stmia	r3!, {r0, r1}
 8015920:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015924:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015928:	2b13      	cmp	r3, #19
 801592a:	bfd8      	it	le
 801592c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015930:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015934:	440b      	add	r3, r1
 8015936:	1a9b      	subs	r3, r3, r2
 8015938:	a807      	add	r0, sp, #28
 801593a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801593e:	f7fe ff7b 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015942:	a807      	add	r0, sp, #28
 8015944:	f7fa f85d 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015948:	bb78      	cbnz	r0, 80159aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801594a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801594e:	f8d9 0000 	ldr.w	r0, [r9]
 8015952:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015956:	f8d0 e000 	ldr.w	lr, [r0]
 801595a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801595e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015962:	f1bc 0f14 	cmp.w	ip, #20
 8015966:	bfa8      	it	ge
 8015968:	f04f 0c14 	movge.w	ip, #20
 801596c:	fa1f fc8c 	uxth.w	ip, ip
 8015970:	f8cd c000 	str.w	ip, [sp]
 8015974:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015978:	47d8      	blx	fp
 801597a:	4683      	mov	fp, r0
 801597c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015980:	a807      	add	r0, sp, #28
 8015982:	f7fe ff3f 	bl	8014804 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015986:	6823      	ldr	r3, [r4, #0]
 8015988:	4426      	add	r6, r4
 801598a:	4620      	mov	r0, r4
 801598c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801598e:	a907      	add	r1, sp, #28
 8015990:	4798      	blx	r3
 8015992:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015996:	eba0 000b 	sub.w	r0, r0, fp
 801599a:	b200      	sxth	r0, r0
 801599c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80159a0:	b918      	cbnz	r0, 80159aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80159a2:	b2b9      	uxth	r1, r7
 80159a4:	4650      	mov	r0, sl
 80159a6:	f7ff fa79 	bl	8014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80159aa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80159ae:	f1bb 0f00 	cmp.w	fp, #0
 80159b2:	f43f af2c 	beq.w	801580e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80159b6:	882b      	ldrh	r3, [r5, #0]
 80159b8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80159bc:	3301      	adds	r3, #1
 80159be:	b29b      	uxth	r3, r3
 80159c0:	2700      	movs	r7, #0
 80159c2:	b299      	uxth	r1, r3
 80159c4:	458b      	cmp	fp, r1
 80159c6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80159ca:	d9a3      	bls.n	8015914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80159cc:	4426      	add	r6, r4
 80159ce:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80159d2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80159d6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80159da:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80159de:	4408      	add	r0, r1
 80159e0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80159e4:	4461      	add	r1, ip
 80159e6:	b200      	sxth	r0, r0
 80159e8:	b209      	sxth	r1, r1
 80159ea:	4288      	cmp	r0, r1
 80159ec:	f6bf af71 	bge.w	80158d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80159f0:	4584      	cmp	ip, r0
 80159f2:	4662      	mov	r2, ip
 80159f4:	461f      	mov	r7, r3
 80159f6:	bfb8      	it	lt
 80159f8:	4602      	movlt	r2, r0
 80159fa:	3301      	adds	r3, #1
 80159fc:	e7e1      	b.n	80159c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80159fe:	d10e      	bne.n	8015a1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015a00:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015a04:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015a08:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015a0c:	4473      	add	r3, lr
 8015a0e:	b21b      	sxth	r3, r3
 8015a10:	429e      	cmp	r6, r3
 8015a12:	bfa8      	it	ge
 8015a14:	461e      	movge	r6, r3
 8015a16:	4287      	cmp	r7, r0
 8015a18:	bfb8      	it	lt
 8015a1a:	46e1      	movlt	r9, ip
 8015a1c:	e756      	b.n	80158cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015a1e:	4286      	cmp	r6, r0
 8015a20:	bfa8      	it	ge
 8015a22:	4606      	movge	r6, r0
 8015a24:	e752      	b.n	80158cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015a26:	eb0a 0007 	add.w	r0, sl, r7
 8015a2a:	4427      	add	r7, r4
 8015a2c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015a30:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015a34:	f1bb 0f13 	cmp.w	fp, #19
 8015a38:	bfde      	ittt	le
 8015a3a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015a3e:	445e      	addle	r6, fp
 8015a40:	b236      	sxthle	r6, r6
 8015a42:	f7f9 ffde 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015a46:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015a4a:	2800      	cmp	r0, #0
 8015a4c:	f47f af1a 	bne.w	8015884 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015a50:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015a54:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015a58:	482a      	ldr	r0, [pc, #168]	; (8015b04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015a5a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015a5e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015a62:	6800      	ldr	r0, [r0, #0]
 8015a64:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015a68:	1ab6      	subs	r6, r6, r2
 8015a6a:	2e14      	cmp	r6, #20
 8015a6c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015a70:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015a74:	bfa8      	it	ge
 8015a76:	2614      	movge	r6, #20
 8015a78:	f8d0 c000 	ldr.w	ip, [r0]
 8015a7c:	b2b6      	uxth	r6, r6
 8015a7e:	fa1f fb8b 	uxth.w	fp, fp
 8015a82:	455e      	cmp	r6, fp
 8015a84:	bf94      	ite	ls
 8015a86:	9600      	strls	r6, [sp, #0]
 8015a88:	f8cd b000 	strhi.w	fp, [sp]
 8015a8c:	b292      	uxth	r2, r2
 8015a8e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015a92:	b29b      	uxth	r3, r3
 8015a94:	b289      	uxth	r1, r1
 8015a96:	47b0      	blx	r6
 8015a98:	6823      	ldr	r3, [r4, #0]
 8015a9a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015a9e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015aa0:	a907      	add	r1, sp, #28
 8015aa2:	4620      	mov	r0, r4
 8015aa4:	4798      	blx	r3
 8015aa6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015aaa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015aae:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015ab2:	1a5b      	subs	r3, r3, r1
 8015ab4:	440a      	add	r2, r1
 8015ab6:	b21b      	sxth	r3, r3
 8015ab8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015abc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015ac0:	2b00      	cmp	r3, #0
 8015ac2:	f47f aeda 	bne.w	801587a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015ac6:	fa1f f189 	uxth.w	r1, r9
 8015aca:	4650      	mov	r0, sl
 8015acc:	f7ff f9e6 	bl	8014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015ad0:	e6d3      	b.n	801587a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015ad2:	882e      	ldrh	r6, [r5, #0]
 8015ad4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015ad8:	42b3      	cmp	r3, r6
 8015ada:	f67f ae98 	bls.w	801580e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015ade:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015ae2:	ab07      	add	r3, sp, #28
 8015ae4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015ae8:	6851      	ldr	r1, [r2, #4]
 8015aea:	c303      	stmia	r3!, {r0, r1}
 8015aec:	a807      	add	r0, sp, #28
 8015aee:	f7f9 ff88 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015af2:	b920      	cbnz	r0, 8015afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015af4:	6823      	ldr	r3, [r4, #0]
 8015af6:	a907      	add	r1, sp, #28
 8015af8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015afa:	4620      	mov	r0, r4
 8015afc:	4798      	blx	r3
 8015afe:	3601      	adds	r6, #1
 8015b00:	b2b6      	uxth	r6, r6
 8015b02:	e7e7      	b.n	8015ad4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015b04:	20012da4 	.word	0x20012da4

08015b08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015b08:	4b03      	ldr	r3, [pc, #12]	; (8015b18 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015b0a:	2200      	movs	r2, #0
 8015b0c:	801a      	strh	r2, [r3, #0]
 8015b0e:	805a      	strh	r2, [r3, #2]
 8015b10:	809a      	strh	r2, [r3, #4]
 8015b12:	80da      	strh	r2, [r3, #6]
 8015b14:	4770      	bx	lr
 8015b16:	bf00      	nop
 8015b18:	20012df0 	.word	0x20012df0

08015b1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b20:	4606      	mov	r6, r0
 8015b22:	b09d      	sub	sp, #116	; 0x74
 8015b24:	a803      	add	r0, sp, #12
 8015b26:	4614      	mov	r4, r2
 8015b28:	468a      	mov	sl, r1
 8015b2a:	461d      	mov	r5, r3
 8015b2c:	f000 feca 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015b30:	6833      	ldr	r3, [r6, #0]
 8015b32:	4630      	mov	r0, r6
 8015b34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015b36:	4798      	blx	r3
 8015b38:	6833      	ldr	r3, [r6, #0]
 8015b3a:	4607      	mov	r7, r0
 8015b3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015b3e:	4630      	mov	r0, r6
 8015b40:	4798      	blx	r3
 8015b42:	462a      	mov	r2, r5
 8015b44:	9000      	str	r0, [sp, #0]
 8015b46:	4621      	mov	r1, r4
 8015b48:	463b      	mov	r3, r7
 8015b4a:	a803      	add	r0, sp, #12
 8015b4c:	f000 ff15 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015b50:	2500      	movs	r5, #0
 8015b52:	462c      	mov	r4, r5
 8015b54:	46a9      	mov	r9, r5
 8015b56:	46a8      	mov	r8, r5
 8015b58:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015b5c:	2300      	movs	r3, #0
 8015b5e:	9302      	str	r3, [sp, #8]
 8015b60:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015b64:	429c      	cmp	r4, r3
 8015b66:	d002      	beq.n	8015b6e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015b68:	455c      	cmp	r4, fp
 8015b6a:	bf18      	it	ne
 8015b6c:	4625      	movne	r5, r4
 8015b6e:	ab02      	add	r3, sp, #8
 8015b70:	4632      	mov	r2, r6
 8015b72:	4651      	mov	r1, sl
 8015b74:	a803      	add	r0, sp, #12
 8015b76:	f001 fa03 	bl	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015b7a:	4604      	mov	r4, r0
 8015b7c:	b108      	cbz	r0, 8015b82 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015b7e:	280a      	cmp	r0, #10
 8015b80:	d10a      	bne.n	8015b98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015b82:	45c1      	cmp	r9, r8
 8015b84:	bf38      	it	cc
 8015b86:	46c1      	movcc	r9, r8
 8015b88:	f04f 0800 	mov.w	r8, #0
 8015b8c:	2c00      	cmp	r4, #0
 8015b8e:	d1e5      	bne.n	8015b5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015b90:	4648      	mov	r0, r9
 8015b92:	b01d      	add	sp, #116	; 0x74
 8015b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b98:	9a02      	ldr	r2, [sp, #8]
 8015b9a:	2a00      	cmp	r2, #0
 8015b9c:	d0de      	beq.n	8015b5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015b9e:	7b57      	ldrb	r7, [r2, #13]
 8015ba0:	6833      	ldr	r3, [r6, #0]
 8015ba2:	8894      	ldrh	r4, [r2, #4]
 8015ba4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015ba6:	007f      	lsls	r7, r7, #1
 8015ba8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015bac:	7a97      	ldrb	r7, [r2, #10]
 8015bae:	4629      	mov	r1, r5
 8015bb0:	4307      	orrs	r7, r0
 8015bb2:	4630      	mov	r0, r6
 8015bb4:	4798      	blx	r3
 8015bb6:	4438      	add	r0, r7
 8015bb8:	4480      	add	r8, r0
 8015bba:	fa1f f888 	uxth.w	r8, r8
 8015bbe:	e7e5      	b.n	8015b8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015bc0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015bc0:	b508      	push	{r3, lr}
 8015bc2:	6803      	ldr	r3, [r0, #0]
 8015bc4:	68db      	ldr	r3, [r3, #12]
 8015bc6:	4798      	blx	r3
 8015bc8:	b128      	cbz	r0, 8015bd6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015bca:	7b43      	ldrb	r3, [r0, #13]
 8015bcc:	7a80      	ldrb	r0, [r0, #10]
 8015bce:	005b      	lsls	r3, r3, #1
 8015bd0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015bd4:	4318      	orrs	r0, r3
 8015bd6:	bd08      	pop	{r3, pc}

08015bd8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015bd8:	b40e      	push	{r1, r2, r3}
 8015bda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015bdc:	b09e      	sub	sp, #120	; 0x78
 8015bde:	ab23      	add	r3, sp, #140	; 0x8c
 8015be0:	4605      	mov	r5, r0
 8015be2:	f853 4b04 	ldr.w	r4, [r3], #4
 8015be6:	9303      	str	r3, [sp, #12]
 8015be8:	a805      	add	r0, sp, #20
 8015bea:	f000 fe6b 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015bee:	682b      	ldr	r3, [r5, #0]
 8015bf0:	4628      	mov	r0, r5
 8015bf2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015bf4:	4798      	blx	r3
 8015bf6:	682b      	ldr	r3, [r5, #0]
 8015bf8:	4606      	mov	r6, r0
 8015bfa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015bfc:	4628      	mov	r0, r5
 8015bfe:	4798      	blx	r3
 8015c00:	4633      	mov	r3, r6
 8015c02:	ae1e      	add	r6, sp, #120	; 0x78
 8015c04:	4621      	mov	r1, r4
 8015c06:	9000      	str	r0, [sp, #0]
 8015c08:	9a03      	ldr	r2, [sp, #12]
 8015c0a:	2400      	movs	r4, #0
 8015c0c:	a805      	add	r0, sp, #20
 8015c0e:	f000 feb4 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015c12:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015c16:	462a      	mov	r2, r5
 8015c18:	4633      	mov	r3, r6
 8015c1a:	4621      	mov	r1, r4
 8015c1c:	a805      	add	r0, sp, #20
 8015c1e:	f001 f9af 	bl	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c22:	b1f0      	cbz	r0, 8015c62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015c24:	280a      	cmp	r0, #10
 8015c26:	d018      	beq.n	8015c5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015c28:	9f04      	ldr	r7, [sp, #16]
 8015c2a:	b1b7      	cbz	r7, 8015c5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015c2c:	7b78      	ldrb	r0, [r7, #13]
 8015c2e:	7a3b      	ldrb	r3, [r7, #8]
 8015c30:	88ea      	ldrh	r2, [r5, #6]
 8015c32:	00c1      	lsls	r1, r0, #3
 8015c34:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015c38:	4319      	orrs	r1, r3
 8015c3a:	0643      	lsls	r3, r0, #25
 8015c3c:	bf44      	itt	mi
 8015c3e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015c42:	b219      	sxthmi	r1, r3
 8015c44:	0100      	lsls	r0, r0, #4
 8015c46:	79fb      	ldrb	r3, [r7, #7]
 8015c48:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015c4c:	4303      	orrs	r3, r0
 8015c4e:	4413      	add	r3, r2
 8015c50:	1a5b      	subs	r3, r3, r1
 8015c52:	b21b      	sxth	r3, r3
 8015c54:	429c      	cmp	r4, r3
 8015c56:	bfb8      	it	lt
 8015c58:	461c      	movlt	r4, r3
 8015c5a:	4633      	mov	r3, r6
 8015c5c:	462a      	mov	r2, r5
 8015c5e:	2100      	movs	r1, #0
 8015c60:	e7dc      	b.n	8015c1c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015c62:	b2a0      	uxth	r0, r4
 8015c64:	b01e      	add	sp, #120	; 0x78
 8015c66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015c6a:	b003      	add	sp, #12
 8015c6c:	4770      	bx	lr

08015c6e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015c6e:	7a43      	ldrb	r3, [r0, #9]
 8015c70:	8880      	ldrh	r0, [r0, #4]
 8015c72:	4418      	add	r0, r3
 8015c74:	b280      	uxth	r0, r0
 8015c76:	4770      	bx	lr

08015c78 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015c78:	6803      	ldr	r3, [r0, #0]
 8015c7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015c7c:	4718      	bx	r3

08015c7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015c7e:	b40e      	push	{r1, r2, r3}
 8015c80:	b570      	push	{r4, r5, r6, lr}
 8015c82:	b09d      	sub	sp, #116	; 0x74
 8015c84:	ab21      	add	r3, sp, #132	; 0x84
 8015c86:	4604      	mov	r4, r0
 8015c88:	f853 5b04 	ldr.w	r5, [r3], #4
 8015c8c:	9302      	str	r3, [sp, #8]
 8015c8e:	a803      	add	r0, sp, #12
 8015c90:	f000 fe18 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015c94:	6823      	ldr	r3, [r4, #0]
 8015c96:	4620      	mov	r0, r4
 8015c98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015c9a:	4798      	blx	r3
 8015c9c:	6823      	ldr	r3, [r4, #0]
 8015c9e:	4606      	mov	r6, r0
 8015ca0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ca2:	4620      	mov	r0, r4
 8015ca4:	4798      	blx	r3
 8015ca6:	4633      	mov	r3, r6
 8015ca8:	9000      	str	r0, [sp, #0]
 8015caa:	9a02      	ldr	r2, [sp, #8]
 8015cac:	4629      	mov	r1, r5
 8015cae:	a803      	add	r0, sp, #12
 8015cb0:	f000 fe63 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015cb4:	a803      	add	r0, sp, #12
 8015cb6:	f001 fa31 	bl	801711c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015cba:	2401      	movs	r4, #1
 8015cbc:	b2a3      	uxth	r3, r4
 8015cbe:	b140      	cbz	r0, 8015cd2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015cc0:	280a      	cmp	r0, #10
 8015cc2:	bf08      	it	eq
 8015cc4:	3301      	addeq	r3, #1
 8015cc6:	a803      	add	r0, sp, #12
 8015cc8:	bf08      	it	eq
 8015cca:	b21c      	sxtheq	r4, r3
 8015ccc:	f001 fa26 	bl	801711c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015cd0:	e7f4      	b.n	8015cbc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015cd2:	4618      	mov	r0, r3
 8015cd4:	b01d      	add	sp, #116	; 0x74
 8015cd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015cda:	b003      	add	sp, #12
 8015cdc:	4770      	bx	lr

08015cde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015cde:	b40e      	push	{r1, r2, r3}
 8015ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ce2:	b09e      	sub	sp, #120	; 0x78
 8015ce4:	ab23      	add	r3, sp, #140	; 0x8c
 8015ce6:	4604      	mov	r4, r0
 8015ce8:	f853 5b04 	ldr.w	r5, [r3], #4
 8015cec:	9303      	str	r3, [sp, #12]
 8015cee:	a805      	add	r0, sp, #20
 8015cf0:	f000 fde8 	bl	80168c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015cf4:	6823      	ldr	r3, [r4, #0]
 8015cf6:	4620      	mov	r0, r4
 8015cf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015cfa:	4798      	blx	r3
 8015cfc:	6823      	ldr	r3, [r4, #0]
 8015cfe:	4606      	mov	r6, r0
 8015d00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d02:	4620      	mov	r0, r4
 8015d04:	4798      	blx	r3
 8015d06:	4633      	mov	r3, r6
 8015d08:	4629      	mov	r1, r5
 8015d0a:	9000      	str	r0, [sp, #0]
 8015d0c:	9a03      	ldr	r2, [sp, #12]
 8015d0e:	a805      	add	r0, sp, #20
 8015d10:	ad1e      	add	r5, sp, #120	; 0x78
 8015d12:	f000 fe32 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d16:	2100      	movs	r1, #0
 8015d18:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015d1c:	4622      	mov	r2, r4
 8015d1e:	462b      	mov	r3, r5
 8015d20:	a805      	add	r0, sp, #20
 8015d22:	f001 f92d 	bl	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015d26:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8015d2a:	b1d8      	cbz	r0, 8015d64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015d2c:	280a      	cmp	r0, #10
 8015d2e:	d012      	beq.n	8015d56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015d30:	9804      	ldr	r0, [sp, #16]
 8015d32:	b180      	cbz	r0, 8015d56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015d34:	7b47      	ldrb	r7, [r0, #13]
 8015d36:	88e2      	ldrh	r2, [r4, #6]
 8015d38:	00fb      	lsls	r3, r7, #3
 8015d3a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015d3e:	7a03      	ldrb	r3, [r0, #8]
 8015d40:	430b      	orrs	r3, r1
 8015d42:	0679      	lsls	r1, r7, #25
 8015d44:	bf44      	itt	mi
 8015d46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015d4a:	b21b      	sxthmi	r3, r3
 8015d4c:	1ad3      	subs	r3, r2, r3
 8015d4e:	b21b      	sxth	r3, r3
 8015d50:	429e      	cmp	r6, r3
 8015d52:	bfa8      	it	ge
 8015d54:	461e      	movge	r6, r3
 8015d56:	462b      	mov	r3, r5
 8015d58:	4622      	mov	r2, r4
 8015d5a:	2100      	movs	r1, #0
 8015d5c:	a805      	add	r0, sp, #20
 8015d5e:	f001 f90f 	bl	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015d62:	e7e2      	b.n	8015d2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015d64:	4630      	mov	r0, r6
 8015d66:	b01e      	add	sp, #120	; 0x78
 8015d68:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015d6c:	b003      	add	sp, #12
 8015d6e:	4770      	bx	lr

08015d70 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015d70:	b513      	push	{r0, r1, r4, lr}
 8015d72:	6803      	ldr	r3, [r0, #0]
 8015d74:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015d78:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015d7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015d80:	2400      	movs	r4, #0
 8015d82:	9400      	str	r4, [sp, #0]
 8015d84:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015d88:	691b      	ldr	r3, [r3, #16]
 8015d8a:	4669      	mov	r1, sp
 8015d8c:	4798      	blx	r3
 8015d8e:	b002      	add	sp, #8
 8015d90:	bd10      	pop	{r4, pc}

08015d92 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015d92:	b538      	push	{r3, r4, r5, lr}
 8015d94:	680b      	ldr	r3, [r1, #0]
 8015d96:	460c      	mov	r4, r1
 8015d98:	68db      	ldr	r3, [r3, #12]
 8015d9a:	4605      	mov	r5, r0
 8015d9c:	4798      	blx	r3
 8015d9e:	6823      	ldr	r3, [r4, #0]
 8015da0:	4620      	mov	r0, r4
 8015da2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015da4:	4629      	mov	r1, r5
 8015da6:	4798      	blx	r3
 8015da8:	4628      	mov	r0, r5
 8015daa:	bd38      	pop	{r3, r4, r5, pc}

08015dac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015dac:	b410      	push	{r4}
 8015dae:	880a      	ldrh	r2, [r1, #0]
 8015db0:	8884      	ldrh	r4, [r0, #4]
 8015db2:	4422      	add	r2, r4
 8015db4:	800a      	strh	r2, [r1, #0]
 8015db6:	88c4      	ldrh	r4, [r0, #6]
 8015db8:	884a      	ldrh	r2, [r1, #2]
 8015dba:	4422      	add	r2, r4
 8015dbc:	804a      	strh	r2, [r1, #2]
 8015dbe:	6940      	ldr	r0, [r0, #20]
 8015dc0:	b120      	cbz	r0, 8015dcc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015dc2:	6803      	ldr	r3, [r0, #0]
 8015dc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015dc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015dca:	4718      	bx	r3
 8015dcc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015dd0:	4770      	bx	lr

08015dd2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015dd2:	b570      	push	{r4, r5, r6, lr}
 8015dd4:	8882      	ldrh	r2, [r0, #4]
 8015dd6:	880b      	ldrh	r3, [r1, #0]
 8015dd8:	4413      	add	r3, r2
 8015dda:	800b      	strh	r3, [r1, #0]
 8015ddc:	88c2      	ldrh	r2, [r0, #6]
 8015dde:	884b      	ldrh	r3, [r1, #2]
 8015de0:	460c      	mov	r4, r1
 8015de2:	4413      	add	r3, r2
 8015de4:	804b      	strh	r3, [r1, #2]
 8015de6:	4605      	mov	r5, r0
 8015de8:	1d01      	adds	r1, r0, #4
 8015dea:	4620      	mov	r0, r4
 8015dec:	f7f9 fdc6 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8015df0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015df4:	2b00      	cmp	r3, #0
 8015df6:	dd0b      	ble.n	8015e10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015df8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015dfc:	2b00      	cmp	r3, #0
 8015dfe:	dd07      	ble.n	8015e10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015e00:	6968      	ldr	r0, [r5, #20]
 8015e02:	b128      	cbz	r0, 8015e10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015e04:	6803      	ldr	r3, [r0, #0]
 8015e06:	4621      	mov	r1, r4
 8015e08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015e0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e0e:	4718      	bx	r3
 8015e10:	bd70      	pop	{r4, r5, r6, pc}
	...

08015e14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015e14:	b570      	push	{r4, r5, r6, lr}
 8015e16:	8882      	ldrh	r2, [r0, #4]
 8015e18:	880b      	ldrh	r3, [r1, #0]
 8015e1a:	4413      	add	r3, r2
 8015e1c:	800b      	strh	r3, [r1, #0]
 8015e1e:	88c2      	ldrh	r2, [r0, #6]
 8015e20:	884b      	ldrh	r3, [r1, #2]
 8015e22:	460c      	mov	r4, r1
 8015e24:	4413      	add	r3, r2
 8015e26:	804b      	strh	r3, [r1, #2]
 8015e28:	4605      	mov	r5, r0
 8015e2a:	1d01      	adds	r1, r0, #4
 8015e2c:	4620      	mov	r0, r4
 8015e2e:	f7f9 fda5 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8015e32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015e36:	2b00      	cmp	r3, #0
 8015e38:	dd19      	ble.n	8015e6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015e3a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015e3e:	2b00      	cmp	r3, #0
 8015e40:	dd15      	ble.n	8015e6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015e42:	6968      	ldr	r0, [r5, #20]
 8015e44:	b128      	cbz	r0, 8015e52 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015e46:	6803      	ldr	r3, [r0, #0]
 8015e48:	4621      	mov	r1, r4
 8015e4a:	691b      	ldr	r3, [r3, #16]
 8015e4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e50:	4718      	bx	r3
 8015e52:	4b07      	ldr	r3, [pc, #28]	; (8015e70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015e54:	681b      	ldr	r3, [r3, #0]
 8015e56:	3304      	adds	r3, #4
 8015e58:	429d      	cmp	r5, r3
 8015e5a:	d108      	bne.n	8015e6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015e5c:	f7fe fea0 	bl	8014ba0 <_ZN8touchgfx11Application11getInstanceEv>
 8015e60:	6803      	ldr	r3, [r0, #0]
 8015e62:	6821      	ldr	r1, [r4, #0]
 8015e64:	6862      	ldr	r2, [r4, #4]
 8015e66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015e68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e6c:	4718      	bx	r3
 8015e6e:	bd70      	pop	{r4, r5, r6, pc}
 8015e70:	20012de8 	.word	0x20012de8

08015e74 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015e74:	b570      	push	{r4, r5, r6, lr}
 8015e76:	4604      	mov	r4, r0
 8015e78:	4616      	mov	r6, r2
 8015e7a:	460d      	mov	r5, r1
 8015e7c:	b901      	cbnz	r1, 8015e80 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8015e7e:	b192      	cbz	r2, 8015ea6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015e80:	6823      	ldr	r3, [r4, #0]
 8015e82:	4620      	mov	r0, r4
 8015e84:	699b      	ldr	r3, [r3, #24]
 8015e86:	4798      	blx	r3
 8015e88:	88e2      	ldrh	r2, [r4, #6]
 8015e8a:	88a1      	ldrh	r1, [r4, #4]
 8015e8c:	4432      	add	r2, r6
 8015e8e:	4429      	add	r1, r5
 8015e90:	4620      	mov	r0, r4
 8015e92:	b212      	sxth	r2, r2
 8015e94:	b209      	sxth	r1, r1
 8015e96:	f7ec fbe2 	bl	800265e <_ZN8touchgfx8Drawable5setXYEss>
 8015e9a:	6823      	ldr	r3, [r4, #0]
 8015e9c:	4620      	mov	r0, r4
 8015e9e:	699b      	ldr	r3, [r3, #24]
 8015ea0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015ea4:	4718      	bx	r3
 8015ea6:	bd70      	pop	{r4, r5, r6, pc}

08015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015ea8:	b510      	push	{r4, lr}
 8015eaa:	4604      	mov	r4, r0
 8015eac:	4608      	mov	r0, r1
 8015eae:	2300      	movs	r3, #0
 8015eb0:	8023      	strh	r3, [r4, #0]
 8015eb2:	8063      	strh	r3, [r4, #2]
 8015eb4:	6803      	ldr	r3, [r0, #0]
 8015eb6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015eba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8015ebe:	80a1      	strh	r1, [r4, #4]
 8015ec0:	80e2      	strh	r2, [r4, #6]
 8015ec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ec4:	4621      	mov	r1, r4
 8015ec6:	4798      	blx	r3
 8015ec8:	4620      	mov	r0, r4
 8015eca:	bd10      	pop	{r4, pc}

08015ecc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015ecc:	b530      	push	{r4, r5, lr}
 8015ece:	8083      	strh	r3, [r0, #4]
 8015ed0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015ed4:	80c3      	strh	r3, [r0, #6]
 8015ed6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015eda:	7203      	strb	r3, [r0, #8]
 8015edc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015ee0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015ee4:	7243      	strb	r3, [r0, #9]
 8015ee6:	7a83      	ldrb	r3, [r0, #10]
 8015ee8:	6141      	str	r1, [r0, #20]
 8015eea:	f365 0306 	bfi	r3, r5, #0, #7
 8015eee:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015ef2:	8302      	strh	r2, [r0, #24]
 8015ef4:	f365 13c7 	bfi	r3, r5, #7, #1
 8015ef8:	7283      	strb	r3, [r0, #10]
 8015efa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015efe:	72c3      	strb	r3, [r0, #11]
 8015f00:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8015f04:	7303      	strb	r3, [r0, #12]
 8015f06:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015f0a:	81c3      	strh	r3, [r0, #14]
 8015f0c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015f10:	8203      	strh	r3, [r0, #16]
 8015f12:	4b01      	ldr	r3, [pc, #4]	; (8015f18 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015f14:	6003      	str	r3, [r0, #0]
 8015f16:	bd30      	pop	{r4, r5, pc}
 8015f18:	0802e144 	.word	0x0802e144

08015f1c <_ZNK8touchgfx9ConstFont4findEt>:
 8015f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f1e:	6944      	ldr	r4, [r0, #20]
 8015f20:	b3bc      	cbz	r4, 8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f22:	88a3      	ldrh	r3, [r4, #4]
 8015f24:	8b02      	ldrh	r2, [r0, #24]
 8015f26:	1acb      	subs	r3, r1, r3
 8015f28:	f102 32ff 	add.w	r2, r2, #4294967295
 8015f2c:	d431      	bmi.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f2e:	4293      	cmp	r3, r2
 8015f30:	dd0c      	ble.n	8015f4c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015f32:	230e      	movs	r3, #14
 8015f34:	fb03 4302 	mla	r3, r3, r2, r4
 8015f38:	889b      	ldrh	r3, [r3, #4]
 8015f3a:	1a5b      	subs	r3, r3, r1
 8015f3c:	1ad3      	subs	r3, r2, r3
 8015f3e:	429a      	cmp	r2, r3
 8015f40:	db27      	blt.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f42:	2b00      	cmp	r3, #0
 8015f44:	bfbc      	itt	lt
 8015f46:	2302      	movlt	r3, #2
 8015f48:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015f4c:	2500      	movs	r5, #0
 8015f4e:	260e      	movs	r6, #14
 8015f50:	4295      	cmp	r5, r2
 8015f52:	dc1e      	bgt.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f54:	fb06 4003 	mla	r0, r6, r3, r4
 8015f58:	8887      	ldrh	r7, [r0, #4]
 8015f5a:	42b9      	cmp	r1, r7
 8015f5c:	d01a      	beq.n	8015f94 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015f5e:	d20d      	bcs.n	8015f7c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015f60:	1e5a      	subs	r2, r3, #1
 8015f62:	4295      	cmp	r5, r2
 8015f64:	dc15      	bgt.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f66:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015f6a:	1a5b      	subs	r3, r3, r1
 8015f6c:	1ad3      	subs	r3, r2, r3
 8015f6e:	429a      	cmp	r2, r3
 8015f70:	db0f      	blt.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f72:	429d      	cmp	r5, r3
 8015f74:	ddec      	ble.n	8015f50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015f76:	1953      	adds	r3, r2, r5
 8015f78:	105b      	asrs	r3, r3, #1
 8015f7a:	e7e9      	b.n	8015f50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015f7c:	1c5d      	adds	r5, r3, #1
 8015f7e:	42aa      	cmp	r2, r5
 8015f80:	db07      	blt.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f82:	8a43      	ldrh	r3, [r0, #18]
 8015f84:	1acb      	subs	r3, r1, r3
 8015f86:	442b      	add	r3, r5
 8015f88:	429d      	cmp	r5, r3
 8015f8a:	dc02      	bgt.n	8015f92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f8c:	429a      	cmp	r2, r3
 8015f8e:	dadf      	bge.n	8015f50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015f90:	e7f1      	b.n	8015f76 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015f92:	2000      	movs	r0, #0
 8015f94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015f96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015f96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f98:	4604      	mov	r4, r0
 8015f9a:	4617      	mov	r7, r2
 8015f9c:	461e      	mov	r6, r3
 8015f9e:	b911      	cbnz	r1, 8015fa6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015fa0:	2500      	movs	r5, #0
 8015fa2:	4628      	mov	r0, r5
 8015fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015fa6:	290a      	cmp	r1, #10
 8015fa8:	d0fa      	beq.n	8015fa0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015faa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015fae:	4291      	cmp	r1, r2
 8015fb0:	d0f6      	beq.n	8015fa0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015fb2:	f242 020b 	movw	r2, #8203	; 0x200b
 8015fb6:	4291      	cmp	r1, r2
 8015fb8:	d0f2      	beq.n	8015fa0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015fba:	f7ff ffaf 	bl	8015f1c <_ZNK8touchgfx9ConstFont4findEt>
 8015fbe:	4605      	mov	r5, r0
 8015fc0:	b950      	cbnz	r0, 8015fd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015fc2:	6823      	ldr	r3, [r4, #0]
 8015fc4:	4620      	mov	r0, r4
 8015fc6:	691b      	ldr	r3, [r3, #16]
 8015fc8:	4798      	blx	r3
 8015fca:	4601      	mov	r1, r0
 8015fcc:	4620      	mov	r0, r4
 8015fce:	f7ff ffa5 	bl	8015f1c <_ZNK8touchgfx9ConstFont4findEt>
 8015fd2:	4605      	mov	r5, r0
 8015fd4:	2800      	cmp	r0, #0
 8015fd6:	d0e3      	beq.n	8015fa0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015fd8:	6823      	ldr	r3, [r4, #0]
 8015fda:	4629      	mov	r1, r5
 8015fdc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015fde:	4620      	mov	r0, r4
 8015fe0:	4798      	blx	r3
 8015fe2:	6038      	str	r0, [r7, #0]
 8015fe4:	6823      	ldr	r3, [r4, #0]
 8015fe6:	4620      	mov	r0, r4
 8015fe8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015fea:	4798      	blx	r3
 8015fec:	7030      	strb	r0, [r6, #0]
 8015fee:	e7d8      	b.n	8015fa2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015ff0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8015ff0:	b538      	push	{r3, r4, r5, lr}
 8015ff2:	4605      	mov	r5, r0
 8015ff4:	f002 fb56 	bl	80186a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015ff8:	4604      	mov	r4, r0
 8015ffa:	4628      	mov	r0, r5
 8015ffc:	f002 fa96 	bl	801852c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016000:	2800      	cmp	r0, #0
 8016002:	bf14      	ite	ne
 8016004:	2002      	movne	r0, #2
 8016006:	2000      	moveq	r0, #0
 8016008:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801600c:	b280      	uxth	r0, r0
 801600e:	bd38      	pop	{r3, r4, r5, pc}

08016010 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016010:	b538      	push	{r3, r4, r5, lr}
 8016012:	4605      	mov	r5, r0
 8016014:	f002 fb46 	bl	80186a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016018:	4604      	mov	r4, r0
 801601a:	4628      	mov	r0, r5
 801601c:	f002 fa86 	bl	801852c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016020:	2800      	cmp	r0, #0
 8016022:	bf14      	ite	ne
 8016024:	2002      	movne	r0, #2
 8016026:	2000      	moveq	r0, #0
 8016028:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801602c:	f040 0001 	orr.w	r0, r0, #1
 8016030:	b280      	uxth	r0, r0
 8016032:	bd38      	pop	{r3, r4, r5, pc}

08016034 <_ZN8touchgfx4clzuEm>:
 8016034:	4603      	mov	r3, r0
 8016036:	b1c8      	cbz	r0, 801606c <_ZN8touchgfx4clzuEm+0x38>
 8016038:	0c02      	lsrs	r2, r0, #16
 801603a:	0412      	lsls	r2, r2, #16
 801603c:	b9a2      	cbnz	r2, 8016068 <_ZN8touchgfx4clzuEm+0x34>
 801603e:	0403      	lsls	r3, r0, #16
 8016040:	2010      	movs	r0, #16
 8016042:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016046:	bf04      	itt	eq
 8016048:	021b      	lsleq	r3, r3, #8
 801604a:	3008      	addeq	r0, #8
 801604c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016050:	bf04      	itt	eq
 8016052:	011b      	lsleq	r3, r3, #4
 8016054:	3004      	addeq	r0, #4
 8016056:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801605a:	bf04      	itt	eq
 801605c:	009b      	lsleq	r3, r3, #2
 801605e:	3002      	addeq	r0, #2
 8016060:	2b00      	cmp	r3, #0
 8016062:	db04      	blt.n	801606e <_ZN8touchgfx4clzuEm+0x3a>
 8016064:	3001      	adds	r0, #1
 8016066:	4770      	bx	lr
 8016068:	2000      	movs	r0, #0
 801606a:	e7ea      	b.n	8016042 <_ZN8touchgfx4clzuEm+0xe>
 801606c:	2020      	movs	r0, #32
 801606e:	4770      	bx	lr

08016070 <_ZN8touchgfx7muldivuEmmmRm>:
 8016070:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016074:	460f      	mov	r7, r1
 8016076:	4615      	mov	r5, r2
 8016078:	461e      	mov	r6, r3
 801607a:	4601      	mov	r1, r0
 801607c:	b100      	cbz	r0, 8016080 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801607e:	b927      	cbnz	r7, 801608a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016080:	2000      	movs	r0, #0
 8016082:	6030      	str	r0, [r6, #0]
 8016084:	b002      	add	sp, #8
 8016086:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801608a:	f7ff ffd3 	bl	8016034 <_ZN8touchgfx4clzuEm>
 801608e:	b980      	cbnz	r0, 80160b2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016090:	4638      	mov	r0, r7
 8016092:	f7ff ffcf 	bl	8016034 <_ZN8touchgfx4clzuEm>
 8016096:	2800      	cmp	r0, #0
 8016098:	dd05      	ble.n	80160a6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801609a:	4633      	mov	r3, r6
 801609c:	462a      	mov	r2, r5
 801609e:	4638      	mov	r0, r7
 80160a0:	f7ff ffe6 	bl	8016070 <_ZN8touchgfx7muldivuEmmmRm>
 80160a4:	e7ee      	b.n	8016084 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80160a6:	f04f 33ff 	mov.w	r3, #4294967295
 80160aa:	6033      	str	r3, [r6, #0]
 80160ac:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80160b0:	e7e8      	b.n	8016084 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80160b2:	fa37 f800 	lsrs.w	r8, r7, r0
 80160b6:	fb07 f301 	mul.w	r3, r7, r1
 80160ba:	d105      	bne.n	80160c8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80160bc:	fbb3 f0f5 	udiv	r0, r3, r5
 80160c0:	fb05 3510 	mls	r5, r5, r0, r3
 80160c4:	6035      	str	r5, [r6, #0]
 80160c6:	e7dd      	b.n	8016084 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80160c8:	2301      	movs	r3, #1
 80160ca:	fa01 fa00 	lsl.w	sl, r1, r0
 80160ce:	fa03 f000 	lsl.w	r0, r3, r0
 80160d2:	3801      	subs	r0, #1
 80160d4:	462a      	mov	r2, r5
 80160d6:	4633      	mov	r3, r6
 80160d8:	4038      	ands	r0, r7
 80160da:	f7ff ffc9 	bl	8016070 <_ZN8touchgfx7muldivuEmmmRm>
 80160de:	fbba f9f5 	udiv	r9, sl, r5
 80160e2:	462a      	mov	r2, r5
 80160e4:	4607      	mov	r7, r0
 80160e6:	ab01      	add	r3, sp, #4
 80160e8:	fb05 a119 	mls	r1, r5, r9, sl
 80160ec:	4640      	mov	r0, r8
 80160ee:	f7ff ffbf 	bl	8016070 <_ZN8touchgfx7muldivuEmmmRm>
 80160f2:	9b01      	ldr	r3, [sp, #4]
 80160f4:	6832      	ldr	r2, [r6, #0]
 80160f6:	fb08 f409 	mul.w	r4, r8, r9
 80160fa:	441a      	add	r2, r3
 80160fc:	fbb2 f3f5 	udiv	r3, r2, r5
 8016100:	441c      	add	r4, r3
 8016102:	443c      	add	r4, r7
 8016104:	4420      	add	r0, r4
 8016106:	fb05 2513 	mls	r5, r5, r3, r2
 801610a:	e7db      	b.n	80160c4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801610c <_ZN8touchgfx6muldivElllRl>:
 801610c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801610e:	2800      	cmp	r0, #0
 8016110:	bfba      	itte	lt
 8016112:	4240      	neglt	r0, r0
 8016114:	f04f 34ff 	movlt.w	r4, #4294967295
 8016118:	2401      	movge	r4, #1
 801611a:	2900      	cmp	r1, #0
 801611c:	bfbc      	itt	lt
 801611e:	4249      	neglt	r1, r1
 8016120:	4264      	neglt	r4, r4
 8016122:	2a00      	cmp	r2, #0
 8016124:	bfb6      	itet	lt
 8016126:	4265      	neglt	r5, r4
 8016128:	4625      	movge	r5, r4
 801612a:	4252      	neglt	r2, r2
 801612c:	4288      	cmp	r0, r1
 801612e:	461e      	mov	r6, r3
 8016130:	bfc2      	ittt	gt
 8016132:	4603      	movgt	r3, r0
 8016134:	4608      	movgt	r0, r1
 8016136:	4619      	movgt	r1, r3
 8016138:	ab01      	add	r3, sp, #4
 801613a:	f7ff ff99 	bl	8016070 <_ZN8touchgfx7muldivuEmmmRm>
 801613e:	9b01      	ldr	r3, [sp, #4]
 8016140:	4368      	muls	r0, r5
 8016142:	435c      	muls	r4, r3
 8016144:	6034      	str	r4, [r6, #0]
 8016146:	b002      	add	sp, #8
 8016148:	bd70      	pop	{r4, r5, r6, pc}

0801614a <_ZN8touchgfx6muldivElll>:
 801614a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801614c:	4606      	mov	r6, r0
 801614e:	ab01      	add	r3, sp, #4
 8016150:	460d      	mov	r5, r1
 8016152:	4614      	mov	r4, r2
 8016154:	f7ff ffda 	bl	801610c <_ZN8touchgfx6muldivElllRl>
 8016158:	2e00      	cmp	r6, #0
 801615a:	db20      	blt.n	801619e <_ZN8touchgfx6muldivElll+0x54>
 801615c:	bf14      	ite	ne
 801615e:	2301      	movne	r3, #1
 8016160:	2300      	moveq	r3, #0
 8016162:	2d00      	cmp	r5, #0
 8016164:	db1e      	blt.n	80161a4 <_ZN8touchgfx6muldivElll+0x5a>
 8016166:	bf14      	ite	ne
 8016168:	2201      	movne	r2, #1
 801616a:	2200      	moveq	r2, #0
 801616c:	2c00      	cmp	r4, #0
 801616e:	fb03 f202 	mul.w	r2, r3, r2
 8016172:	db1a      	blt.n	80161aa <_ZN8touchgfx6muldivElll+0x60>
 8016174:	bf14      	ite	ne
 8016176:	2301      	movne	r3, #1
 8016178:	2300      	moveq	r3, #0
 801617a:	4353      	muls	r3, r2
 801617c:	2b01      	cmp	r3, #1
 801617e:	d117      	bne.n	80161b0 <_ZN8touchgfx6muldivElll+0x66>
 8016180:	9b01      	ldr	r3, [sp, #4]
 8016182:	2c00      	cmp	r4, #0
 8016184:	bfb8      	it	lt
 8016186:	4264      	neglt	r4, r4
 8016188:	2b00      	cmp	r3, #0
 801618a:	f104 0401 	add.w	r4, r4, #1
 801618e:	bfb8      	it	lt
 8016190:	425b      	neglt	r3, r3
 8016192:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016196:	db00      	blt.n	801619a <_ZN8touchgfx6muldivElll+0x50>
 8016198:	3001      	adds	r0, #1
 801619a:	b002      	add	sp, #8
 801619c:	bd70      	pop	{r4, r5, r6, pc}
 801619e:	f04f 33ff 	mov.w	r3, #4294967295
 80161a2:	e7de      	b.n	8016162 <_ZN8touchgfx6muldivElll+0x18>
 80161a4:	f04f 32ff 	mov.w	r2, #4294967295
 80161a8:	e7e0      	b.n	801616c <_ZN8touchgfx6muldivElll+0x22>
 80161aa:	f04f 33ff 	mov.w	r3, #4294967295
 80161ae:	e7e4      	b.n	801617a <_ZN8touchgfx6muldivElll+0x30>
 80161b0:	3301      	adds	r3, #1
 80161b2:	d1f2      	bne.n	801619a <_ZN8touchgfx6muldivElll+0x50>
 80161b4:	9b01      	ldr	r3, [sp, #4]
 80161b6:	2c00      	cmp	r4, #0
 80161b8:	bfb8      	it	lt
 80161ba:	4264      	neglt	r4, r4
 80161bc:	2b00      	cmp	r3, #0
 80161be:	bfb8      	it	lt
 80161c0:	425b      	neglt	r3, r3
 80161c2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80161c6:	bfc8      	it	gt
 80161c8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80161cc:	e7e5      	b.n	801619a <_ZN8touchgfx6muldivElll+0x50>

080161ce <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80161ce:	2000      	movs	r0, #0
 80161d0:	4770      	bx	lr

080161d2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80161d2:	2001      	movs	r0, #1
 80161d4:	4770      	bx	lr

080161d6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80161d6:	2002      	movs	r0, #2
 80161d8:	4770      	bx	lr

080161da <_ZN8touchgfx6ScreenD1Ev>:
 80161da:	4770      	bx	lr

080161dc <_ZN8touchgfx12GestureEventD1Ev>:
 80161dc:	4770      	bx	lr

080161de <_ZN8touchgfx9DragEventD1Ev>:
 80161de:	4770      	bx	lr

080161e0 <_ZN8touchgfx10ClickEventD1Ev>:
 80161e0:	4770      	bx	lr

080161e2 <_ZN8touchgfx10ClickEventD0Ev>:
 80161e2:	b510      	push	{r4, lr}
 80161e4:	210c      	movs	r1, #12
 80161e6:	4604      	mov	r4, r0
 80161e8:	f012 fd51 	bl	8028c8e <_ZdlPvj>
 80161ec:	4620      	mov	r0, r4
 80161ee:	bd10      	pop	{r4, pc}

080161f0 <_ZN8touchgfx9DragEventD0Ev>:
 80161f0:	b510      	push	{r4, lr}
 80161f2:	2110      	movs	r1, #16
 80161f4:	4604      	mov	r4, r0
 80161f6:	f012 fd4a 	bl	8028c8e <_ZdlPvj>
 80161fa:	4620      	mov	r0, r4
 80161fc:	bd10      	pop	{r4, pc}

080161fe <_ZN8touchgfx12GestureEventD0Ev>:
 80161fe:	b510      	push	{r4, lr}
 8016200:	210c      	movs	r1, #12
 8016202:	4604      	mov	r4, r0
 8016204:	f012 fd43 	bl	8028c8e <_ZdlPvj>
 8016208:	4620      	mov	r0, r4
 801620a:	bd10      	pop	{r4, pc}

0801620c <_ZN8touchgfx6ScreenD0Ev>:
 801620c:	b510      	push	{r4, lr}
 801620e:	213c      	movs	r1, #60	; 0x3c
 8016210:	4604      	mov	r4, r0
 8016212:	f012 fd3c 	bl	8028c8e <_ZdlPvj>
 8016216:	4620      	mov	r0, r4
 8016218:	bd10      	pop	{r4, pc}
	...

0801621c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801621c:	b530      	push	{r4, r5, lr}
 801621e:	460d      	mov	r5, r1
 8016220:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016222:	b087      	sub	sp, #28
 8016224:	4604      	mov	r4, r0
 8016226:	b301      	cbz	r1, 801626a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016228:	a801      	add	r0, sp, #4
 801622a:	f7ff fe3d 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801622e:	892a      	ldrh	r2, [r5, #8]
 8016230:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016234:	7928      	ldrb	r0, [r5, #4]
 8016236:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801623a:	f88d 0010 	strb.w	r0, [sp, #16]
 801623e:	1ad2      	subs	r2, r2, r3
 8016240:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016242:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016244:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016248:	441a      	add	r2, r3
 801624a:	896b      	ldrh	r3, [r5, #10]
 801624c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016250:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016254:	1b5b      	subs	r3, r3, r5
 8016256:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016258:	442b      	add	r3, r5
 801625a:	4d05      	ldr	r5, [pc, #20]	; (8016270 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801625c:	9503      	str	r5, [sp, #12]
 801625e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016262:	6803      	ldr	r3, [r0, #0]
 8016264:	a903      	add	r1, sp, #12
 8016266:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016268:	4798      	blx	r3
 801626a:	b007      	add	sp, #28
 801626c:	bd30      	pop	{r4, r5, pc}
 801626e:	bf00      	nop
 8016270:	0802e1cc 	.word	0x0802e1cc

08016274 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016278:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801627a:	b08a      	sub	sp, #40	; 0x28
 801627c:	4604      	mov	r4, r0
 801627e:	460d      	mov	r5, r1
 8016280:	b113      	cbz	r3, 8016288 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016282:	790b      	ldrb	r3, [r1, #4]
 8016284:	2b00      	cmp	r3, #0
 8016286:	d044      	beq.n	8016312 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016288:	f104 0804 	add.w	r8, r4, #4
 801628c:	4641      	mov	r1, r8
 801628e:	a803      	add	r0, sp, #12
 8016290:	f7ff fe0a 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016294:	792b      	ldrb	r3, [r5, #4]
 8016296:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801629a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801629e:	b983      	cbnz	r3, 80162c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80162a0:	892a      	ldrh	r2, [r5, #8]
 80162a2:	88e9      	ldrh	r1, [r5, #6]
 80162a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80162a8:	1b92      	subs	r2, r2, r6
 80162aa:	1bc9      	subs	r1, r1, r7
 80162ac:	9301      	str	r3, [sp, #4]
 80162ae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80162b2:	9300      	str	r3, [sp, #0]
 80162b4:	b212      	sxth	r2, r2
 80162b6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80162ba:	b209      	sxth	r1, r1
 80162bc:	4640      	mov	r0, r8
 80162be:	f7f9 fa79 	bl	800f7b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80162c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80162c4:	b329      	cbz	r1, 8016312 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80162c6:	a805      	add	r0, sp, #20
 80162c8:	f7ff fdee 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80162cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80162d0:	792b      	ldrb	r3, [r5, #4]
 80162d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80162d4:	f88d 3020 	strb.w	r3, [sp, #32]
 80162d8:	1abf      	subs	r7, r7, r2
 80162da:	88ea      	ldrh	r2, [r5, #6]
 80162dc:	4417      	add	r7, r2
 80162de:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80162e0:	4417      	add	r7, r2
 80162e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80162e6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80162ea:	1ab6      	subs	r6, r6, r2
 80162ec:	892a      	ldrh	r2, [r5, #8]
 80162ee:	4416      	add	r6, r2
 80162f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80162f2:	4416      	add	r6, r2
 80162f4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80162f8:	4a07      	ldr	r2, [pc, #28]	; (8016318 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80162fa:	9207      	str	r2, [sp, #28]
 80162fc:	2600      	movs	r6, #0
 80162fe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016302:	6803      	ldr	r3, [r0, #0]
 8016304:	a907      	add	r1, sp, #28
 8016306:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016308:	4798      	blx	r3
 801630a:	792b      	ldrb	r3, [r5, #4]
 801630c:	b10b      	cbz	r3, 8016312 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801630e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016312:	b00a      	add	sp, #40	; 0x28
 8016314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016318:	0802e1a4 	.word	0x0802e1a4

0801631c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801631c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016320:	460c      	mov	r4, r1
 8016322:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016324:	b088      	sub	sp, #32
 8016326:	4605      	mov	r5, r0
 8016328:	2900      	cmp	r1, #0
 801632a:	d06d      	beq.n	8016408 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801632c:	4668      	mov	r0, sp
 801632e:	f7ff fdbb 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016332:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016334:	88e3      	ldrh	r3, [r4, #6]
 8016336:	f9bd 8000 	ldrsh.w	r8, [sp]
 801633a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801633e:	440b      	add	r3, r1
 8016340:	b21b      	sxth	r3, r3
 8016342:	4543      	cmp	r3, r8
 8016344:	db31      	blt.n	80163aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016346:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801634a:	44c4      	add	ip, r8
 801634c:	fa0f fc8c 	sxth.w	ip, ip
 8016350:	4563      	cmp	r3, ip
 8016352:	da2a      	bge.n	80163aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016354:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016356:	8926      	ldrh	r6, [r4, #8]
 8016358:	4416      	add	r6, r2
 801635a:	b236      	sxth	r6, r6
 801635c:	42be      	cmp	r6, r7
 801635e:	db24      	blt.n	80163aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016360:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016364:	4438      	add	r0, r7
 8016366:	b200      	sxth	r0, r0
 8016368:	4286      	cmp	r6, r0
 801636a:	da1e      	bge.n	80163aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801636c:	8963      	ldrh	r3, [r4, #10]
 801636e:	4419      	add	r1, r3
 8016370:	b209      	sxth	r1, r1
 8016372:	4541      	cmp	r1, r8
 8016374:	db08      	blt.n	8016388 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016376:	4561      	cmp	r1, ip
 8016378:	da06      	bge.n	8016388 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801637a:	89a3      	ldrh	r3, [r4, #12]
 801637c:	441a      	add	r2, r3
 801637e:	b212      	sxth	r2, r2
 8016380:	42ba      	cmp	r2, r7
 8016382:	db01      	blt.n	8016388 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016384:	4282      	cmp	r2, r0
 8016386:	db10      	blt.n	80163aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016388:	4b21      	ldr	r3, [pc, #132]	; (8016410 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801638a:	9304      	str	r3, [sp, #16]
 801638c:	2302      	movs	r3, #2
 801638e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016392:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016394:	2300      	movs	r3, #0
 8016396:	f8ad 3016 	strh.w	r3, [sp, #22]
 801639a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801639e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80163a2:	6803      	ldr	r3, [r0, #0]
 80163a4:	a904      	add	r1, sp, #16
 80163a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80163a8:	4798      	blx	r3
 80163aa:	1d29      	adds	r1, r5, #4
 80163ac:	a802      	add	r0, sp, #8
 80163ae:	f7ff fd7b 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80163b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80163b6:	88e0      	ldrh	r0, [r4, #6]
 80163b8:	7921      	ldrb	r1, [r4, #4]
 80163ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80163be:	8922      	ldrh	r2, [r4, #8]
 80163c0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80163c2:	f88d 1014 	strb.w	r1, [sp, #20]
 80163c6:	eba3 0808 	sub.w	r8, r3, r8
 80163ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80163ce:	1bdf      	subs	r7, r3, r7
 80163d0:	b2bb      	uxth	r3, r7
 80163d2:	fa1f f888 	uxth.w	r8, r8
 80163d6:	8967      	ldrh	r7, [r4, #10]
 80163d8:	89a4      	ldrh	r4, [r4, #12]
 80163da:	4440      	add	r0, r8
 80163dc:	4460      	add	r0, ip
 80163de:	441a      	add	r2, r3
 80163e0:	44b8      	add	r8, r7
 80163e2:	4423      	add	r3, r4
 80163e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80163e8:	4433      	add	r3, r6
 80163ea:	4432      	add	r2, r6
 80163ec:	44e0      	add	r8, ip
 80163ee:	4c09      	ldr	r4, [pc, #36]	; (8016414 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80163f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80163f2:	9404      	str	r4, [sp, #16]
 80163f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80163f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80163fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016400:	6803      	ldr	r3, [r0, #0]
 8016402:	a904      	add	r1, sp, #16
 8016404:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016406:	4798      	blx	r3
 8016408:	b008      	add	sp, #32
 801640a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801640e:	bf00      	nop
 8016410:	0802e1a4 	.word	0x0802e1a4
 8016414:	0802e1b8 	.word	0x0802e1b8

08016418 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016418:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801641a:	4604      	mov	r4, r0
 801641c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016420:	3201      	adds	r2, #1
 8016422:	d112      	bne.n	801644a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016424:	6803      	ldr	r3, [r0, #0]
 8016426:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801642a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801642e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016432:	2500      	movs	r5, #0
 8016434:	9500      	str	r5, [sp, #0]
 8016436:	466d      	mov	r5, sp
 8016438:	4629      	mov	r1, r5
 801643a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801643e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016440:	4798      	blx	r3
 8016442:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016446:	e884 0003 	stmia.w	r4, {r0, r1}
 801644a:	4620      	mov	r0, r4
 801644c:	b003      	add	sp, #12
 801644e:	bd30      	pop	{r4, r5, pc}

08016450 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016450:	b513      	push	{r0, r1, r4, lr}
 8016452:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016456:	3301      	adds	r3, #1
 8016458:	4604      	mov	r4, r0
 801645a:	d109      	bne.n	8016470 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801645c:	4601      	mov	r1, r0
 801645e:	4668      	mov	r0, sp
 8016460:	f7ff fd22 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016464:	f8bd 3000 	ldrh.w	r3, [sp]
 8016468:	8423      	strh	r3, [r4, #32]
 801646a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801646e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016470:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016474:	b002      	add	sp, #8
 8016476:	bd10      	pop	{r4, pc}

08016478 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016478:	b513      	push	{r0, r1, r4, lr}
 801647a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801647e:	3301      	adds	r3, #1
 8016480:	4604      	mov	r4, r0
 8016482:	d109      	bne.n	8016498 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016484:	4601      	mov	r1, r0
 8016486:	4668      	mov	r0, sp
 8016488:	f7ff fd0e 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801648c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016490:	8423      	strh	r3, [r4, #32]
 8016492:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016496:	8463      	strh	r3, [r4, #34]	; 0x22
 8016498:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801649c:	b002      	add	sp, #8
 801649e:	bd10      	pop	{r4, pc}

080164a0 <_ZN8touchgfx6ScreenC1Ev>:
 80164a0:	b570      	push	{r4, r5, r6, lr}
 80164a2:	4605      	mov	r5, r0
 80164a4:	4b16      	ldr	r3, [pc, #88]	; (8016500 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80164a6:	f845 3b04 	str.w	r3, [r5], #4
 80164aa:	2300      	movs	r3, #0
 80164ac:	8103      	strh	r3, [r0, #8]
 80164ae:	8143      	strh	r3, [r0, #10]
 80164b0:	8183      	strh	r3, [r0, #12]
 80164b2:	81c3      	strh	r3, [r0, #14]
 80164b4:	8203      	strh	r3, [r0, #16]
 80164b6:	8243      	strh	r3, [r0, #18]
 80164b8:	8283      	strh	r3, [r0, #20]
 80164ba:	82c3      	strh	r3, [r0, #22]
 80164bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80164c0:	6203      	str	r3, [r0, #32]
 80164c2:	8483      	strh	r3, [r0, #36]	; 0x24
 80164c4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80164c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80164ca:	4a0e      	ldr	r2, [pc, #56]	; (8016504 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80164cc:	6343      	str	r3, [r0, #52]	; 0x34
 80164ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80164d2:	4b0d      	ldr	r3, [pc, #52]	; (8016508 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80164d4:	6042      	str	r2, [r0, #4]
 80164d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80164da:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80164dc:	4a0b      	ldr	r2, [pc, #44]	; (801650c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80164de:	4604      	mov	r4, r0
 80164e0:	2101      	movs	r1, #1
 80164e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80164e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80164ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80164ee:	4628      	mov	r0, r5
 80164f0:	4798      	blx	r3
 80164f2:	6863      	ldr	r3, [r4, #4]
 80164f4:	4628      	mov	r0, r5
 80164f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80164f8:	4631      	mov	r1, r6
 80164fa:	4798      	blx	r3
 80164fc:	4620      	mov	r0, r4
 80164fe:	bd70      	pop	{r4, r5, r6, pc}
 8016500:	0802e1e0 	.word	0x0802e1e0
 8016504:	0802da44 	.word	0x0802da44
 8016508:	20012d9a 	.word	0x20012d9a
 801650c:	20012d98 	.word	0x20012d98

08016510 <_ZN8touchgfx6Screen4drawEv>:
 8016510:	b507      	push	{r0, r1, r2, lr}
 8016512:	4b09      	ldr	r3, [pc, #36]	; (8016538 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016514:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016518:	4b08      	ldr	r3, [pc, #32]	; (801653c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801651a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801651e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016522:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016526:	6803      	ldr	r3, [r0, #0]
 8016528:	2100      	movs	r1, #0
 801652a:	9100      	str	r1, [sp, #0]
 801652c:	689b      	ldr	r3, [r3, #8]
 801652e:	4669      	mov	r1, sp
 8016530:	4798      	blx	r3
 8016532:	b003      	add	sp, #12
 8016534:	f85d fb04 	ldr.w	pc, [sp], #4
 8016538:	20012d98 	.word	0x20012d98
 801653c:	20012d9a 	.word	0x20012d9a

08016540 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016544:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016548:	2b00      	cmp	r3, #0
 801654a:	b089      	sub	sp, #36	; 0x24
 801654c:	4680      	mov	r8, r0
 801654e:	460c      	mov	r4, r1
 8016550:	4615      	mov	r5, r2
 8016552:	dd0e      	ble.n	8016572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016554:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016558:	2b00      	cmp	r3, #0
 801655a:	dd0a      	ble.n	8016572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801655c:	4628      	mov	r0, r5
 801655e:	f7ff ff5b 	bl	8016418 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016562:	4621      	mov	r1, r4
 8016564:	f7fe fa3d 	bl	80149e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016568:	69eb      	ldr	r3, [r5, #28]
 801656a:	b928      	cbnz	r0, 8016578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801656c:	461d      	mov	r5, r3
 801656e:	2b00      	cmp	r3, #0
 8016570:	d1f4      	bne.n	801655c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016572:	b009      	add	sp, #36	; 0x24
 8016574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016578:	ae04      	add	r6, sp, #16
 801657a:	2b00      	cmp	r3, #0
 801657c:	f000 80b5 	beq.w	80166ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016580:	682b      	ldr	r3, [r5, #0]
 8016582:	4629      	mov	r1, r5
 8016584:	68db      	ldr	r3, [r3, #12]
 8016586:	a802      	add	r0, sp, #8
 8016588:	4798      	blx	r3
 801658a:	4628      	mov	r0, r5
 801658c:	f7ff ff60 	bl	8016450 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016590:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016594:	4407      	add	r7, r0
 8016596:	4628      	mov	r0, r5
 8016598:	f7ff ff6e 	bl	8016478 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801659c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80165a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80165a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80165a8:	4418      	add	r0, r3
 80165aa:	4621      	mov	r1, r4
 80165ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80165b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80165b4:	b23f      	sxth	r7, r7
 80165b6:	4630      	mov	r0, r6
 80165b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80165bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80165c0:	f7f9 f9dc 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 80165c4:	4628      	mov	r0, r5
 80165c6:	f7ff ff27 	bl	8016418 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80165ca:	4602      	mov	r2, r0
 80165cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80165d0:	ab06      	add	r3, sp, #24
 80165d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80165d6:	4611      	mov	r1, r2
 80165d8:	4618      	mov	r0, r3
 80165da:	f7f9 f9cf 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 80165de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80165e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80165e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80165ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80165ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80165f2:	4299      	cmp	r1, r3
 80165f4:	d10b      	bne.n	801660e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80165f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80165fa:	4552      	cmp	r2, sl
 80165fc:	d107      	bne.n	801660e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80165fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016602:	455a      	cmp	r2, fp
 8016604:	d103      	bne.n	801660e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016606:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801660a:	454a      	cmp	r2, r9
 801660c:	d06d      	beq.n	80166ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801660e:	f1bb 0f00 	cmp.w	fp, #0
 8016612:	dd65      	ble.n	80166e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016614:	f1b9 0f00 	cmp.w	r9, #0
 8016618:	dd62      	ble.n	80166e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801661a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801661e:	fa1f f08a 	uxth.w	r0, sl
 8016622:	4552      	cmp	r2, sl
 8016624:	9000      	str	r0, [sp, #0]
 8016626:	da12      	bge.n	801664e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016628:	9301      	str	r3, [sp, #4]
 801662a:	9b00      	ldr	r3, [sp, #0]
 801662c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016630:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016634:	1a9a      	subs	r2, r3, r2
 8016636:	f8ad 1010 	strh.w	r1, [sp, #16]
 801663a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801663e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016642:	69ea      	ldr	r2, [r5, #28]
 8016644:	4631      	mov	r1, r6
 8016646:	4640      	mov	r0, r8
 8016648:	f7ff ff7a 	bl	8016540 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801664c:	9b01      	ldr	r3, [sp, #4]
 801664e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016652:	429a      	cmp	r2, r3
 8016654:	b29f      	uxth	r7, r3
 8016656:	da0d      	bge.n	8016674 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016658:	f8ad 2010 	strh.w	r2, [sp, #16]
 801665c:	1aba      	subs	r2, r7, r2
 801665e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016662:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016666:	f8ad 9016 	strh.w	r9, [sp, #22]
 801666a:	69ea      	ldr	r2, [r5, #28]
 801666c:	4631      	mov	r1, r6
 801666e:	4640      	mov	r0, r8
 8016670:	f7ff ff66 	bl	8016540 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016674:	8822      	ldrh	r2, [r4, #0]
 8016676:	88a3      	ldrh	r3, [r4, #4]
 8016678:	445f      	add	r7, fp
 801667a:	4413      	add	r3, r2
 801667c:	b29b      	uxth	r3, r3
 801667e:	b2bf      	uxth	r7, r7
 8016680:	b23a      	sxth	r2, r7
 8016682:	b219      	sxth	r1, r3
 8016684:	4291      	cmp	r1, r2
 8016686:	dd0d      	ble.n	80166a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016688:	1bdb      	subs	r3, r3, r7
 801668a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801668e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016692:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016696:	f8ad 9016 	strh.w	r9, [sp, #22]
 801669a:	69ea      	ldr	r2, [r5, #28]
 801669c:	4631      	mov	r1, r6
 801669e:	4640      	mov	r0, r8
 80166a0:	f7ff ff4e 	bl	8016540 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166a4:	88e2      	ldrh	r2, [r4, #6]
 80166a6:	8863      	ldrh	r3, [r4, #2]
 80166a8:	4413      	add	r3, r2
 80166aa:	9a00      	ldr	r2, [sp, #0]
 80166ac:	444a      	add	r2, r9
 80166ae:	b29b      	uxth	r3, r3
 80166b0:	fa1f f982 	uxth.w	r9, r2
 80166b4:	fa0f f289 	sxth.w	r2, r9
 80166b8:	b219      	sxth	r1, r3
 80166ba:	428a      	cmp	r2, r1
 80166bc:	da15      	bge.n	80166ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80166be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80166c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80166c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80166ca:	eba3 0309 	sub.w	r3, r3, r9
 80166ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80166d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80166d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80166da:	69ea      	ldr	r2, [r5, #28]
 80166dc:	4631      	mov	r1, r6
 80166de:	e001      	b.n	80166e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80166e0:	69ea      	ldr	r2, [r5, #28]
 80166e2:	4621      	mov	r1, r4
 80166e4:	4640      	mov	r0, r8
 80166e6:	f7ff ff2b 	bl	8016540 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166ea:	4628      	mov	r0, r5
 80166ec:	f7ff fe94 	bl	8016418 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80166f0:	6861      	ldr	r1, [r4, #4]
 80166f2:	4602      	mov	r2, r0
 80166f4:	6820      	ldr	r0, [r4, #0]
 80166f6:	4633      	mov	r3, r6
 80166f8:	c303      	stmia	r3!, {r0, r1}
 80166fa:	4611      	mov	r1, r2
 80166fc:	4630      	mov	r0, r6
 80166fe:	f7f9 f93d 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 8016702:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016706:	2b00      	cmp	r3, #0
 8016708:	f77f af33 	ble.w	8016572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801670c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016710:	2b00      	cmp	r3, #0
 8016712:	f77f af2e 	ble.w	8016572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016716:	4628      	mov	r0, r5
 8016718:	f7ff fe9a 	bl	8016450 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801671c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016720:	1a18      	subs	r0, r3, r0
 8016722:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016726:	4628      	mov	r0, r5
 8016728:	f7ff fea6 	bl	8016478 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801672c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016730:	1a18      	subs	r0, r3, r0
 8016732:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016736:	682b      	ldr	r3, [r5, #0]
 8016738:	4631      	mov	r1, r6
 801673a:	689b      	ldr	r3, [r3, #8]
 801673c:	4628      	mov	r0, r5
 801673e:	4798      	blx	r3
 8016740:	e717      	b.n	8016572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016742 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016742:	b570      	push	{r4, r5, r6, lr}
 8016744:	460c      	mov	r4, r1
 8016746:	b086      	sub	sp, #24
 8016748:	1d06      	adds	r6, r0, #4
 801674a:	2300      	movs	r3, #0
 801674c:	4631      	mov	r1, r6
 801674e:	4605      	mov	r5, r0
 8016750:	a802      	add	r0, sp, #8
 8016752:	9301      	str	r3, [sp, #4]
 8016754:	f7ff fba8 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016758:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801675c:	8822      	ldrh	r2, [r4, #0]
 801675e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016762:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016766:	f8ad 0014 	strh.w	r0, [sp, #20]
 801676a:	1ad2      	subs	r2, r2, r3
 801676c:	8863      	ldrh	r3, [r4, #2]
 801676e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016772:	1a5b      	subs	r3, r3, r1
 8016774:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016778:	f8ad 1016 	strh.w	r1, [sp, #22]
 801677c:	aa01      	add	r2, sp, #4
 801677e:	a904      	add	r1, sp, #16
 8016780:	4630      	mov	r0, r6
 8016782:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016786:	f7f9 f9d1 	bl	800fb2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801678a:	9a01      	ldr	r2, [sp, #4]
 801678c:	b11a      	cbz	r2, 8016796 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801678e:	4621      	mov	r1, r4
 8016790:	4628      	mov	r0, r5
 8016792:	f7ff fed5 	bl	8016540 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016796:	b006      	add	sp, #24
 8016798:	bd70      	pop	{r4, r5, r6, pc}

0801679a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801679a:	b530      	push	{r4, r5, lr}
 801679c:	4602      	mov	r2, r0
 801679e:	4604      	mov	r4, r0
 80167a0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80167a4:	b085      	sub	sp, #20
 80167a6:	460d      	mov	r5, r1
 80167a8:	6851      	ldr	r1, [r2, #4]
 80167aa:	466b      	mov	r3, sp
 80167ac:	c303      	stmia	r3!, {r0, r1}
 80167ae:	4629      	mov	r1, r5
 80167b0:	4668      	mov	r0, sp
 80167b2:	f7f9 f8e3 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 80167b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80167ba:	b12b      	cbz	r3, 80167c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80167bc:	4669      	mov	r1, sp
 80167be:	4620      	mov	r0, r4
 80167c0:	f7ff ffbf 	bl	8016742 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80167c4:	b005      	add	sp, #20
 80167c6:	bd30      	pop	{r4, r5, pc}
 80167c8:	3404      	adds	r4, #4
 80167ca:	4621      	mov	r1, r4
 80167cc:	a802      	add	r0, sp, #8
 80167ce:	f7ff fb6b 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167d2:	f8bd 3000 	ldrh.w	r3, [sp]
 80167d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80167da:	1a9b      	subs	r3, r3, r2
 80167dc:	f8ad 3000 	strh.w	r3, [sp]
 80167e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80167e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80167e8:	4669      	mov	r1, sp
 80167ea:	1a9b      	subs	r3, r3, r2
 80167ec:	4620      	mov	r0, r4
 80167ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 80167f2:	f7f9 f962 	bl	800faba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80167f6:	e7e5      	b.n	80167c4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080167f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80167f8:	680a      	ldr	r2, [r1, #0]
 80167fa:	460b      	mov	r3, r1
 80167fc:	6992      	ldr	r2, [r2, #24]
 80167fe:	1d01      	adds	r1, r0, #4
 8016800:	4618      	mov	r0, r3
 8016802:	4710      	bx	r2

08016804 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016804:	4298      	cmp	r0, r3
 8016806:	d200      	bcs.n	801680a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016808:	b913      	cbnz	r3, 8016810 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801680a:	440a      	add	r2, r1
 801680c:	b210      	sxth	r0, r2
 801680e:	4770      	bx	lr
 8016810:	ee07 0a90 	vmov	s15, r0
 8016814:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016818:	ee07 3a90 	vmov	s15, r3
 801681c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016820:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016824:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016828:	ee37 7a66 	vsub.f32	s14, s14, s13
 801682c:	ee07 2a90 	vmov	s15, r2
 8016830:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016834:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016838:	eee5 6a87 	vfma.f32	s13, s11, s14
 801683c:	ee07 1a90 	vmov	s15, r1
 8016840:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016844:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016848:	eee6 7a26 	vfma.f32	s15, s12, s13
 801684c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016854:	bfcc      	ite	gt
 8016856:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801685a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801685e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016862:	ee17 3a90 	vmov	r3, s15
 8016866:	b218      	sxth	r0, r3
 8016868:	4770      	bx	lr

0801686a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801686a:	4298      	cmp	r0, r3
 801686c:	d200      	bcs.n	8016870 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801686e:	b913      	cbnz	r3, 8016876 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016870:	440a      	add	r2, r1
 8016872:	b210      	sxth	r0, r2
 8016874:	4770      	bx	lr
 8016876:	ee07 2a90 	vmov	s15, r2
 801687a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801687e:	ee07 0a90 	vmov	s15, r0
 8016882:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016886:	ee67 7a27 	vmul.f32	s15, s14, s15
 801688a:	ee07 3a10 	vmov	s14, r3
 801688e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016892:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016896:	ee07 1a90 	vmov	s15, r1
 801689a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801689e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80168a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80168a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ae:	bfcc      	ite	gt
 80168b0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80168b4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80168b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80168bc:	ee17 3a90 	vmov	r3, s15
 80168c0:	b218      	sxth	r0, r3
 80168c2:	4770      	bx	lr

080168c4 <_ZN8touchgfx12TextProviderC1Ev>:
 80168c4:	b538      	push	{r3, r4, r5, lr}
 80168c6:	2500      	movs	r5, #0
 80168c8:	2302      	movs	r3, #2
 80168ca:	4604      	mov	r4, r0
 80168cc:	e9c0 5500 	strd	r5, r5, [r0]
 80168d0:	7403      	strb	r3, [r0, #16]
 80168d2:	6145      	str	r5, [r0, #20]
 80168d4:	7605      	strb	r5, [r0, #24]
 80168d6:	83c5      	strh	r5, [r0, #30]
 80168d8:	8405      	strh	r5, [r0, #32]
 80168da:	86c5      	strh	r5, [r0, #54]	; 0x36
 80168dc:	8705      	strh	r5, [r0, #56]	; 0x38
 80168de:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80168e0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80168e4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80168e8:	220e      	movs	r2, #14
 80168ea:	4629      	mov	r1, r5
 80168ec:	304c      	adds	r0, #76	; 0x4c
 80168ee:	f013 f9e6 	bl	8029cbe <memset>
 80168f2:	2301      	movs	r3, #1
 80168f4:	4620      	mov	r0, r4
 80168f6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80168fa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80168fe:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016902:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016906:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801690a:	f7f1 fb6d 	bl	8007fe8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801690e:	4620      	mov	r0, r4
 8016910:	bd38      	pop	{r3, r4, r5, pc}

08016912 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016912:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016914:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016918:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801691a:	fab0 f080 	clz	r0, r0
 801691e:	0940      	lsrs	r0, r0, #5
 8016920:	4770      	bx	lr

08016922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016922:	b530      	push	{r4, r5, lr}
 8016924:	2500      	movs	r5, #0
 8016926:	2401      	movs	r4, #1
 8016928:	6843      	ldr	r3, [r0, #4]
 801692a:	b913      	cbnz	r3, 8016932 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801692c:	6803      	ldr	r3, [r0, #0]
 801692e:	b313      	cbz	r3, 8016976 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016930:	6043      	str	r3, [r0, #4]
 8016932:	7e03      	ldrb	r3, [r0, #24]
 8016934:	b143      	cbz	r3, 8016948 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016936:	6943      	ldr	r3, [r0, #20]
 8016938:	b12b      	cbz	r3, 8016946 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801693a:	881a      	ldrh	r2, [r3, #0]
 801693c:	b11a      	cbz	r2, 8016946 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801693e:	1c9a      	adds	r2, r3, #2
 8016940:	6142      	str	r2, [r0, #20]
 8016942:	8818      	ldrh	r0, [r3, #0]
 8016944:	bd30      	pop	{r4, r5, pc}
 8016946:	7605      	strb	r5, [r0, #24]
 8016948:	6843      	ldr	r3, [r0, #4]
 801694a:	8819      	ldrh	r1, [r3, #0]
 801694c:	b199      	cbz	r1, 8016976 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801694e:	1c9a      	adds	r2, r3, #2
 8016950:	2902      	cmp	r1, #2
 8016952:	6042      	str	r2, [r0, #4]
 8016954:	d1f5      	bne.n	8016942 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016956:	7c03      	ldrb	r3, [r0, #16]
 8016958:	2b01      	cmp	r3, #1
 801695a:	d8e5      	bhi.n	8016928 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801695c:	1c5a      	adds	r2, r3, #1
 801695e:	3302      	adds	r3, #2
 8016960:	7402      	strb	r2, [r0, #16]
 8016962:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016966:	6143      	str	r3, [r0, #20]
 8016968:	2b00      	cmp	r3, #0
 801696a:	d0dd      	beq.n	8016928 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801696c:	881b      	ldrh	r3, [r3, #0]
 801696e:	2b00      	cmp	r3, #0
 8016970:	d0da      	beq.n	8016928 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016972:	7604      	strb	r4, [r0, #24]
 8016974:	e7d8      	b.n	8016928 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016976:	2000      	movs	r0, #0
 8016978:	e7e4      	b.n	8016944 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801697a:	b430      	push	{r4, r5}
 801697c:	6001      	str	r1, [r0, #0]
 801697e:	2100      	movs	r1, #0
 8016980:	6041      	str	r1, [r0, #4]
 8016982:	6815      	ldr	r5, [r2, #0]
 8016984:	6085      	str	r5, [r0, #8]
 8016986:	6852      	ldr	r2, [r2, #4]
 8016988:	6443      	str	r3, [r0, #68]	; 0x44
 801698a:	9b02      	ldr	r3, [sp, #8]
 801698c:	60c2      	str	r2, [r0, #12]
 801698e:	7401      	strb	r1, [r0, #16]
 8016990:	6141      	str	r1, [r0, #20]
 8016992:	7601      	strb	r1, [r0, #24]
 8016994:	8701      	strh	r1, [r0, #56]	; 0x38
 8016996:	8401      	strh	r1, [r0, #32]
 8016998:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801699c:	6483      	str	r3, [r0, #72]	; 0x48
 801699e:	bc30      	pop	{r4, r5}
 80169a0:	f7f1 bb22 	b.w	8007fe8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080169a4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80169a4:	b408      	push	{r3}
 80169a6:	b510      	push	{r4, lr}
 80169a8:	b085      	sub	sp, #20
 80169aa:	ac07      	add	r4, sp, #28
 80169ac:	f854 3b04 	ldr.w	r3, [r4], #4
 80169b0:	9300      	str	r3, [sp, #0]
 80169b2:	4613      	mov	r3, r2
 80169b4:	4622      	mov	r2, r4
 80169b6:	9403      	str	r4, [sp, #12]
 80169b8:	f7ff ffdf 	bl	801697a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80169bc:	b005      	add	sp, #20
 80169be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80169c2:	b001      	add	sp, #4
 80169c4:	4770      	bx	lr

080169c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80169c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80169c8:	4605      	mov	r5, r0
 80169ca:	4608      	mov	r0, r1
 80169cc:	b1e9      	cbz	r1, 8016a0a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80169ce:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80169d2:	460b      	mov	r3, r1
 80169d4:	f101 0708 	add.w	r7, r1, #8
 80169d8:	4622      	mov	r2, r4
 80169da:	6818      	ldr	r0, [r3, #0]
 80169dc:	6859      	ldr	r1, [r3, #4]
 80169de:	4626      	mov	r6, r4
 80169e0:	c603      	stmia	r6!, {r0, r1}
 80169e2:	3308      	adds	r3, #8
 80169e4:	42bb      	cmp	r3, r7
 80169e6:	4634      	mov	r4, r6
 80169e8:	d1f7      	bne.n	80169da <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80169ea:	6818      	ldr	r0, [r3, #0]
 80169ec:	6030      	str	r0, [r6, #0]
 80169ee:	889b      	ldrh	r3, [r3, #4]
 80169f0:	80b3      	strh	r3, [r6, #4]
 80169f2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80169f6:	015b      	lsls	r3, r3, #5
 80169f8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80169fc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016a00:	430b      	orrs	r3, r1
 8016a02:	425b      	negs	r3, r3
 8016a04:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016a08:	4610      	mov	r0, r2
 8016a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016a0c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016a0c:	b538      	push	{r3, r4, r5, lr}
 8016a0e:	460c      	mov	r4, r1
 8016a10:	6811      	ldr	r1, [r2, #0]
 8016a12:	4610      	mov	r0, r2
 8016a14:	68cd      	ldr	r5, [r1, #12]
 8016a16:	4619      	mov	r1, r3
 8016a18:	47a8      	blx	r5
 8016a1a:	2800      	cmp	r0, #0
 8016a1c:	bf08      	it	eq
 8016a1e:	4620      	moveq	r0, r4
 8016a20:	bd38      	pop	{r3, r4, r5, pc}
	...

08016a24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016a26:	4604      	mov	r4, r0
 8016a28:	4615      	mov	r5, r2
 8016a2a:	4608      	mov	r0, r1
 8016a2c:	b93a      	cbnz	r2, 8016a3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016a2e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016a32:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016a36:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016a3a:	4628      	mov	r0, r5
 8016a3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016a3e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016a42:	8893      	ldrh	r3, [r2, #4]
 8016a44:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016a48:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016a4c:	79ee      	ldrb	r6, [r5, #7]
 8016a4e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016a52:	4316      	orrs	r6, r2
 8016a54:	19da      	adds	r2, r3, r7
 8016a56:	b291      	uxth	r1, r2
 8016a58:	291d      	cmp	r1, #29
 8016a5a:	b2b7      	uxth	r7, r6
 8016a5c:	d87a      	bhi.n	8016b54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016a5e:	2201      	movs	r2, #1
 8016a60:	408a      	lsls	r2, r1
 8016a62:	4975      	ldr	r1, [pc, #468]	; (8016c38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016a64:	420a      	tst	r2, r1
 8016a66:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016a6a:	d12d      	bne.n	8016ac8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016a6c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016a70:	d070      	beq.n	8016b54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016a72:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016a76:	462b      	mov	r3, r5
 8016a78:	f105 0e08 	add.w	lr, r5, #8
 8016a7c:	4615      	mov	r5, r2
 8016a7e:	6818      	ldr	r0, [r3, #0]
 8016a80:	6859      	ldr	r1, [r3, #4]
 8016a82:	4694      	mov	ip, r2
 8016a84:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016a88:	3308      	adds	r3, #8
 8016a8a:	4573      	cmp	r3, lr
 8016a8c:	4662      	mov	r2, ip
 8016a8e:	d1f6      	bne.n	8016a7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016a90:	6818      	ldr	r0, [r3, #0]
 8016a92:	f8cc 0000 	str.w	r0, [ip]
 8016a96:	889b      	ldrh	r3, [r3, #4]
 8016a98:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016a9c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016aa0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016aa4:	b2b3      	uxth	r3, r6
 8016aa6:	1aca      	subs	r2, r1, r3
 8016aa8:	b292      	uxth	r2, r2
 8016aaa:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016aae:	10d2      	asrs	r2, r2, #3
 8016ab0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016ab4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016ab8:	4302      	orrs	r2, r0
 8016aba:	1bcf      	subs	r7, r1, r7
 8016abc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016ac0:	1afb      	subs	r3, r7, r3
 8016ac2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016ac6:	e7b8      	b.n	8016a3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016ac8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016aca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016ace:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016ad0:	f640 6333 	movw	r3, #3635	; 0xe33
 8016ad4:	4299      	cmp	r1, r3
 8016ad6:	d110      	bne.n	8016afa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016ad8:	6803      	ldr	r3, [r0, #0]
 8016ada:	68db      	ldr	r3, [r3, #12]
 8016adc:	4798      	blx	r3
 8016ade:	7b41      	ldrb	r1, [r0, #13]
 8016ae0:	00cb      	lsls	r3, r1, #3
 8016ae2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016ae6:	7a03      	ldrb	r3, [r0, #8]
 8016ae8:	0648      	lsls	r0, r1, #25
 8016aea:	ea43 0302 	orr.w	r3, r3, r2
 8016aee:	bf44      	itt	mi
 8016af0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016af4:	b21b      	sxthmi	r3, r3
 8016af6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016afa:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016afe:	443b      	add	r3, r7
 8016b00:	4433      	add	r3, r6
 8016b02:	b29b      	uxth	r3, r3
 8016b04:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016b08:	462a      	mov	r2, r5
 8016b0a:	f105 0c08 	add.w	ip, r5, #8
 8016b0e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016b12:	4635      	mov	r5, r6
 8016b14:	6810      	ldr	r0, [r2, #0]
 8016b16:	6851      	ldr	r1, [r2, #4]
 8016b18:	4637      	mov	r7, r6
 8016b1a:	c703      	stmia	r7!, {r0, r1}
 8016b1c:	3208      	adds	r2, #8
 8016b1e:	4562      	cmp	r2, ip
 8016b20:	463e      	mov	r6, r7
 8016b22:	d1f7      	bne.n	8016b14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016b24:	6810      	ldr	r0, [r2, #0]
 8016b26:	6038      	str	r0, [r7, #0]
 8016b28:	8892      	ldrh	r2, [r2, #4]
 8016b2a:	80ba      	strh	r2, [r7, #4]
 8016b2c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016b30:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016b34:	10db      	asrs	r3, r3, #3
 8016b36:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016b3a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016b3e:	4313      	orrs	r3, r2
 8016b40:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016b44:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016b48:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016b4c:	1a9b      	subs	r3, r3, r2
 8016b4e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016b52:	e772      	b.n	8016a3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016b54:	f023 0204 	bic.w	r2, r3, #4
 8016b58:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016b5c:	428a      	cmp	r2, r1
 8016b5e:	d003      	beq.n	8016b68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016b60:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016b64:	4293      	cmp	r3, r2
 8016b66:	d120      	bne.n	8016baa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016b68:	3b01      	subs	r3, #1
 8016b6a:	4602      	mov	r2, r0
 8016b6c:	b29b      	uxth	r3, r3
 8016b6e:	4629      	mov	r1, r5
 8016b70:	4620      	mov	r0, r4
 8016b72:	f7ff ff4b 	bl	8016a0c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016b76:	7b41      	ldrb	r1, [r0, #13]
 8016b78:	00cb      	lsls	r3, r1, #3
 8016b7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b7e:	7a03      	ldrb	r3, [r0, #8]
 8016b80:	0649      	lsls	r1, r1, #25
 8016b82:	ea43 0302 	orr.w	r3, r3, r2
 8016b86:	bf44      	itt	mi
 8016b88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016b8c:	b21b      	sxthmi	r3, r3
 8016b8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016b92:	7b6b      	ldrb	r3, [r5, #13]
 8016b94:	7aaa      	ldrb	r2, [r5, #10]
 8016b96:	005b      	lsls	r3, r3, #1
 8016b98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016b9c:	4313      	orrs	r3, r2
 8016b9e:	115a      	asrs	r2, r3, #5
 8016ba0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016ba4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016ba8:	e036      	b.n	8016c18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016baa:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016bae:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016bb2:	7a2a      	ldrb	r2, [r5, #8]
 8016bb4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016bb8:	ea42 0201 	orr.w	r2, r2, r1
 8016bbc:	bf1c      	itt	ne
 8016bbe:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016bc2:	b212      	sxthne	r2, r2
 8016bc4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016bc8:	f640 6109 	movw	r1, #3593	; 0xe09
 8016bcc:	f023 0210 	bic.w	r2, r3, #16
 8016bd0:	428a      	cmp	r2, r1
 8016bd2:	d003      	beq.n	8016bdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016bd4:	f640 6213 	movw	r2, #3603	; 0xe13
 8016bd8:	4293      	cmp	r3, r2
 8016bda:	d12a      	bne.n	8016c32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016bdc:	7b6e      	ldrb	r6, [r5, #13]
 8016bde:	0076      	lsls	r6, r6, #1
 8016be0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016be4:	7aae      	ldrb	r6, [r5, #10]
 8016be6:	4316      	orrs	r6, r2
 8016be8:	f640 6213 	movw	r2, #3603	; 0xe13
 8016bec:	4293      	cmp	r3, r2
 8016bee:	bf18      	it	ne
 8016bf0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016bf4:	4602      	mov	r2, r0
 8016bf6:	bf14      	ite	ne
 8016bf8:	b29b      	uxthne	r3, r3
 8016bfa:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016bfe:	4629      	mov	r1, r5
 8016c00:	4620      	mov	r0, r4
 8016c02:	f7ff ff03 	bl	8016a0c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016c06:	7b43      	ldrb	r3, [r0, #13]
 8016c08:	7a82      	ldrb	r2, [r0, #10]
 8016c0a:	005b      	lsls	r3, r3, #1
 8016c0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016c10:	4313      	orrs	r3, r2
 8016c12:	1af6      	subs	r6, r6, r3
 8016c14:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016c18:	7b69      	ldrb	r1, [r5, #13]
 8016c1a:	00cb      	lsls	r3, r1, #3
 8016c1c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016c20:	7a2b      	ldrb	r3, [r5, #8]
 8016c22:	4313      	orrs	r3, r2
 8016c24:	064a      	lsls	r2, r1, #25
 8016c26:	bf44      	itt	mi
 8016c28:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c2c:	b21b      	sxthmi	r3, r3
 8016c2e:	1bdb      	subs	r3, r3, r7
 8016c30:	e747      	b.n	8016ac2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016c32:	2300      	movs	r3, #0
 8016c34:	e7b6      	b.n	8016ba4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016c36:	bf00      	nop
 8016c38:	3fc00079 	.word	0x3fc00079

08016c3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016c3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016c40:	4604      	mov	r4, r0
 8016c42:	b942      	cbnz	r2, 8016c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016c44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016c48:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016c4c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016c50:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016c54:	e047      	b.n	8016ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016c56:	7b51      	ldrb	r1, [r2, #13]
 8016c58:	8893      	ldrh	r3, [r2, #4]
 8016c5a:	010d      	lsls	r5, r1, #4
 8016c5c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016c60:	79d5      	ldrb	r5, [r2, #7]
 8016c62:	4305      	orrs	r5, r0
 8016c64:	2d04      	cmp	r5, #4
 8016c66:	bfcc      	ite	gt
 8016c68:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016c6c:	f04f 0e01 	movle.w	lr, #1
 8016c70:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016c74:	f200 80ab 	bhi.w	8016dce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016c78:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016c7c:	4283      	cmp	r3, r0
 8016c7e:	d216      	bcs.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c80:	f240 605b 	movw	r0, #1627	; 0x65b
 8016c84:	4283      	cmp	r3, r0
 8016c86:	d859      	bhi.n	8016d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016c88:	f240 6057 	movw	r0, #1623	; 0x657
 8016c8c:	4283      	cmp	r3, r0
 8016c8e:	d20e      	bcs.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c90:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016c94:	d24a      	bcs.n	8016d2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016c96:	f240 604e 	movw	r0, #1614	; 0x64e
 8016c9a:	4283      	cmp	r3, r0
 8016c9c:	d207      	bcs.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c9e:	f240 601a 	movw	r0, #1562	; 0x61a
 8016ca2:	4283      	cmp	r3, r0
 8016ca4:	d02a      	beq.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ca6:	d821      	bhi.n	8016cec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016ca8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016cac:	d35b      	bcc.n	8016d66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016cae:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016cb2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016cb6:	f040 80d0 	bne.w	8016e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016cba:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016cbe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016cc2:	f040 80ca 	bne.w	8016e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016cc6:	00cb      	lsls	r3, r1, #3
 8016cc8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016ccc:	7a13      	ldrb	r3, [r2, #8]
 8016cce:	0649      	lsls	r1, r1, #25
 8016cd0:	ea43 0300 	orr.w	r3, r3, r0
 8016cd4:	bf44      	itt	mi
 8016cd6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016cda:	b21b      	sxthmi	r3, r3
 8016cdc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016ce0:	1b5d      	subs	r5, r3, r5
 8016ce2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016ce6:	4610      	mov	r0, r2
 8016ce8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016cec:	f240 604b 	movw	r0, #1611	; 0x64b
 8016cf0:	4283      	cmp	r3, r0
 8016cf2:	d338      	bcc.n	8016d66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016cf4:	f240 604c 	movw	r0, #1612	; 0x64c
 8016cf8:	4283      	cmp	r3, r0
 8016cfa:	d9d8      	bls.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cfc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016d00:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016d04:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016d08:	f040 80f2 	bne.w	8016ef0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016d0c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016d10:	f040 80ee 	bne.w	8016ef0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016d14:	00cb      	lsls	r3, r1, #3
 8016d16:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016d1a:	7a13      	ldrb	r3, [r2, #8]
 8016d1c:	064e      	lsls	r6, r1, #25
 8016d1e:	ea43 0300 	orr.w	r3, r3, r0
 8016d22:	bf44      	itt	mi
 8016d24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d28:	b21b      	sxthmi	r3, r3
 8016d2a:	e7d9      	b.n	8016ce0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016d2c:	f240 6054 	movw	r0, #1620	; 0x654
 8016d30:	4283      	cmp	r3, r0
 8016d32:	d8e3      	bhi.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d34:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016d38:	d9e0      	bls.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d3a:	e7b8      	b.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d3c:	f240 6074 	movw	r0, #1652	; 0x674
 8016d40:	4283      	cmp	r3, r0
 8016d42:	d0b4      	beq.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d44:	d82d      	bhi.n	8016da2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016d46:	f240 605e 	movw	r0, #1630	; 0x65e
 8016d4a:	4283      	cmp	r3, r0
 8016d4c:	d804      	bhi.n	8016d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016d4e:	f240 605d 	movw	r0, #1629	; 0x65d
 8016d52:	4283      	cmp	r3, r0
 8016d54:	d3d2      	bcc.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d56:	e7aa      	b.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d58:	f240 605f 	movw	r0, #1631	; 0x65f
 8016d5c:	4283      	cmp	r3, r0
 8016d5e:	d0cd      	beq.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d60:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016d64:	d0a3      	beq.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d66:	00cb      	lsls	r3, r1, #3
 8016d68:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016d6c:	7a13      	ldrb	r3, [r2, #8]
 8016d6e:	0649      	lsls	r1, r1, #25
 8016d70:	ea43 0300 	orr.w	r3, r3, r0
 8016d74:	bf44      	itt	mi
 8016d76:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d7a:	b21b      	sxthmi	r3, r3
 8016d7c:	1b5d      	subs	r5, r3, r5
 8016d7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016d82:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016d86:	7b53      	ldrb	r3, [r2, #13]
 8016d88:	015b      	lsls	r3, r3, #5
 8016d8a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016d8e:	7993      	ldrb	r3, [r2, #6]
 8016d90:	430b      	orrs	r3, r1
 8016d92:	005b      	lsls	r3, r3, #1
 8016d94:	2105      	movs	r1, #5
 8016d96:	fb93 f3f1 	sdiv	r3, r3, r1
 8016d9a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016d9e:	440b      	add	r3, r1
 8016da0:	e756      	b.n	8016c50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016da2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016da6:	4283      	cmp	r3, r0
 8016da8:	d809      	bhi.n	8016dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016daa:	f240 60df 	movw	r0, #1759	; 0x6df
 8016dae:	4283      	cmp	r3, r0
 8016db0:	f4bf af7d 	bcs.w	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016db4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016db8:	2b05      	cmp	r3, #5
 8016dba:	d8d4      	bhi.n	8016d66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016dbc:	e777      	b.n	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016dbe:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016dc2:	4283      	cmp	r3, r0
 8016dc4:	d09a      	beq.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016dc6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8016dca:	4283      	cmp	r3, r0
 8016dcc:	e7ca      	b.n	8016d64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016dce:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016dd2:	d22b      	bcs.n	8016e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016dd4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016dd8:	4283      	cmp	r3, r0
 8016dda:	d28f      	bcs.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ddc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016de0:	4283      	cmp	r3, r0
 8016de2:	d816      	bhi.n	8016e12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016de4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016de8:	4283      	cmp	r3, r0
 8016dea:	f4bf af60 	bcs.w	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016dee:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8016df2:	4283      	cmp	r3, r0
 8016df4:	d80a      	bhi.n	8016e0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016df6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8016dfa:	4283      	cmp	r3, r0
 8016dfc:	f4bf af57 	bcs.w	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e00:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8016e04:	4283      	cmp	r3, r0
 8016e06:	f43f af79 	beq.w	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e0a:	e7ac      	b.n	8016d66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016e0c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8016e10:	e7f8      	b.n	8016e04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016e12:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8016e16:	4283      	cmp	r3, r0
 8016e18:	d802      	bhi.n	8016e20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016e1a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8016e1e:	e798      	b.n	8016d52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016e20:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016e24:	4283      	cmp	r3, r0
 8016e26:	f47f af42 	bne.w	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e2a:	e767      	b.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e2c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016e30:	4283      	cmp	r3, r0
 8016e32:	f43f af63 	beq.w	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e36:	d802      	bhi.n	8016e3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016e38:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8016e3c:	e7f2      	b.n	8016e24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016e3e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8016e42:	4283      	cmp	r3, r0
 8016e44:	d805      	bhi.n	8016e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016e46:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8016e4a:	4283      	cmp	r3, r0
 8016e4c:	f4ff af2f 	bcc.w	8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e50:	e754      	b.n	8016cfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e52:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016e56:	4283      	cmp	r3, r0
 8016e58:	e7af      	b.n	8016dba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016e5a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016e5e:	4617      	mov	r7, r2
 8016e60:	f102 0808 	add.w	r8, r2, #8
 8016e64:	4666      	mov	r6, ip
 8016e66:	6838      	ldr	r0, [r7, #0]
 8016e68:	6879      	ldr	r1, [r7, #4]
 8016e6a:	46e6      	mov	lr, ip
 8016e6c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016e70:	3708      	adds	r7, #8
 8016e72:	4547      	cmp	r7, r8
 8016e74:	46f4      	mov	ip, lr
 8016e76:	d1f6      	bne.n	8016e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016e78:	6838      	ldr	r0, [r7, #0]
 8016e7a:	f8ce 0000 	str.w	r0, [lr]
 8016e7e:	88b9      	ldrh	r1, [r7, #4]
 8016e80:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016e84:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016e88:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016e8c:	d009      	beq.n	8016ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016e8e:	7b51      	ldrb	r1, [r2, #13]
 8016e90:	7992      	ldrb	r2, [r2, #6]
 8016e92:	0149      	lsls	r1, r1, #5
 8016e94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016e98:	4311      	orrs	r1, r2
 8016e9a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016e9e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016ea2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016ea6:	b2ad      	uxth	r5, r5
 8016ea8:	d00d      	beq.n	8016ec6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016eaa:	442b      	add	r3, r5
 8016eac:	b29b      	uxth	r3, r3
 8016eae:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016eb2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016eb6:	10db      	asrs	r3, r3, #3
 8016eb8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016ebc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016ec0:	4313      	orrs	r3, r2
 8016ec2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016ec6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016eca:	00cb      	lsls	r3, r1, #3
 8016ecc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016ed0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016ed4:	064f      	lsls	r7, r1, #25
 8016ed6:	ea43 0302 	orr.w	r3, r3, r2
 8016eda:	bf44      	itt	mi
 8016edc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016ee0:	b21b      	sxthmi	r3, r3
 8016ee2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016ee6:	1b5b      	subs	r3, r3, r5
 8016ee8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016eec:	4632      	mov	r2, r6
 8016eee:	e6fa      	b.n	8016ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016ef0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016ef4:	4617      	mov	r7, r2
 8016ef6:	f102 0908 	add.w	r9, r2, #8
 8016efa:	4666      	mov	r6, ip
 8016efc:	6838      	ldr	r0, [r7, #0]
 8016efe:	6879      	ldr	r1, [r7, #4]
 8016f00:	46e0      	mov	r8, ip
 8016f02:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016f06:	3708      	adds	r7, #8
 8016f08:	454f      	cmp	r7, r9
 8016f0a:	46c4      	mov	ip, r8
 8016f0c:	d1f6      	bne.n	8016efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016f0e:	6838      	ldr	r0, [r7, #0]
 8016f10:	f8c8 0000 	str.w	r0, [r8]
 8016f14:	88b9      	ldrh	r1, [r7, #4]
 8016f16:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016f1a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016f1e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016f22:	d009      	beq.n	8016f38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016f24:	7b51      	ldrb	r1, [r2, #13]
 8016f26:	7992      	ldrb	r2, [r2, #6]
 8016f28:	0149      	lsls	r1, r1, #5
 8016f2a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016f2e:	4311      	orrs	r1, r2
 8016f30:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016f34:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016f38:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016f3c:	d00e      	beq.n	8016f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016f3e:	eba3 030e 	sub.w	r3, r3, lr
 8016f42:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016f46:	b29b      	uxth	r3, r3
 8016f48:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016f4c:	10db      	asrs	r3, r3, #3
 8016f4e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016f52:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016f56:	4313      	orrs	r3, r2
 8016f58:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016f5c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016f60:	00cb      	lsls	r3, r1, #3
 8016f62:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f66:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016f6a:	0648      	lsls	r0, r1, #25
 8016f6c:	ea43 0302 	orr.w	r3, r3, r2
 8016f70:	bf44      	itt	mi
 8016f72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f76:	b21b      	sxthmi	r3, r3
 8016f78:	1b5d      	subs	r5, r3, r5
 8016f7a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016f7e:	e7b5      	b.n	8016eec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016f80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016f84:	461e      	mov	r6, r3
 8016f86:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016f88:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f8c:	4604      	mov	r4, r0
 8016f8e:	4617      	mov	r7, r2
 8016f90:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016f94:	f7f0 ffe6 	bl	8007f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016f98:	4605      	mov	r5, r0
 8016f9a:	b918      	cbnz	r0, 8016fa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8016f9c:	6030      	str	r0, [r6, #0]
 8016f9e:	4628      	mov	r0, r5
 8016fa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016fa4:	683b      	ldr	r3, [r7, #0]
 8016fa6:	4601      	mov	r1, r0
 8016fa8:	68db      	ldr	r3, [r3, #12]
 8016faa:	4638      	mov	r0, r7
 8016fac:	4798      	blx	r3
 8016fae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016fb2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016fb6:	4602      	mov	r2, r0
 8016fb8:	6030      	str	r0, [r6, #0]
 8016fba:	d213      	bcs.n	8016fe4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8016fbc:	4643      	mov	r3, r8
 8016fbe:	4639      	mov	r1, r7
 8016fc0:	4620      	mov	r0, r4
 8016fc2:	f7ff fe3b 	bl	8016c3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016fc6:	6030      	str	r0, [r6, #0]
 8016fc8:	6833      	ldr	r3, [r6, #0]
 8016fca:	b143      	cbz	r3, 8016fde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8016fcc:	7b5a      	ldrb	r2, [r3, #13]
 8016fce:	7a9b      	ldrb	r3, [r3, #10]
 8016fd0:	0052      	lsls	r2, r2, #1
 8016fd2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016fd6:	4313      	orrs	r3, r2
 8016fd8:	bf0c      	ite	eq
 8016fda:	2301      	moveq	r3, #1
 8016fdc:	2300      	movne	r3, #0
 8016fde:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016fe2:	e7dc      	b.n	8016f9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016fe4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016fe8:	b29b      	uxth	r3, r3
 8016fea:	2b7f      	cmp	r3, #127	; 0x7f
 8016fec:	d804      	bhi.n	8016ff8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8016fee:	4639      	mov	r1, r7
 8016ff0:	4620      	mov	r0, r4
 8016ff2:	f7ff fd17 	bl	8016a24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016ff6:	e7e6      	b.n	8016fc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016ff8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016ffc:	2b00      	cmp	r3, #0
 8016ffe:	d0e3      	beq.n	8016fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017000:	f640 1302 	movw	r3, #2306	; 0x902
 8017004:	429d      	cmp	r5, r3
 8017006:	d1df      	bne.n	8016fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017008:	4601      	mov	r1, r0
 801700a:	4620      	mov	r0, r4
 801700c:	f7ff fcdb 	bl	80169c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017010:	e7d9      	b.n	8016fc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017012 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017012:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017016:	461e      	mov	r6, r3
 8017018:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801701a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801701e:	4604      	mov	r4, r0
 8017020:	4617      	mov	r7, r2
 8017022:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017026:	f7f0 ff9d 	bl	8007f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801702a:	4605      	mov	r5, r0
 801702c:	b918      	cbnz	r0, 8017036 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801702e:	6030      	str	r0, [r6, #0]
 8017030:	4628      	mov	r0, r5
 8017032:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017036:	683b      	ldr	r3, [r7, #0]
 8017038:	4601      	mov	r1, r0
 801703a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801703e:	4638      	mov	r0, r7
 8017040:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017044:	47c8      	blx	r9
 8017046:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801704a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801704e:	4602      	mov	r2, r0
 8017050:	6030      	str	r0, [r6, #0]
 8017052:	d213      	bcs.n	801707c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017054:	4643      	mov	r3, r8
 8017056:	4639      	mov	r1, r7
 8017058:	4620      	mov	r0, r4
 801705a:	f7ff fdef 	bl	8016c3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801705e:	6030      	str	r0, [r6, #0]
 8017060:	6833      	ldr	r3, [r6, #0]
 8017062:	b143      	cbz	r3, 8017076 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017064:	7b5a      	ldrb	r2, [r3, #13]
 8017066:	7a9b      	ldrb	r3, [r3, #10]
 8017068:	0052      	lsls	r2, r2, #1
 801706a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801706e:	4313      	orrs	r3, r2
 8017070:	bf0c      	ite	eq
 8017072:	2301      	moveq	r3, #1
 8017074:	2300      	movne	r3, #0
 8017076:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801707a:	e7d9      	b.n	8017030 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801707c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017080:	b29b      	uxth	r3, r3
 8017082:	2b7f      	cmp	r3, #127	; 0x7f
 8017084:	d804      	bhi.n	8017090 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017086:	4639      	mov	r1, r7
 8017088:	4620      	mov	r0, r4
 801708a:	f7ff fccb 	bl	8016a24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801708e:	e7e6      	b.n	801705e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017090:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017094:	2b00      	cmp	r3, #0
 8017096:	d0e3      	beq.n	8017060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017098:	f640 1302 	movw	r3, #2306	; 0x902
 801709c:	429d      	cmp	r5, r3
 801709e:	d1df      	bne.n	8017060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80170a0:	4601      	mov	r1, r0
 80170a2:	4620      	mov	r0, r4
 80170a4:	f7ff fc8f 	bl	80169c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80170a8:	e7d9      	b.n	801705e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080170aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80170aa:	b510      	push	{r4, lr}
 80170ac:	4604      	mov	r4, r0
 80170ae:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80170b2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80170b4:	b1f1      	cbz	r1, 80170f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80170b6:	2b0a      	cmp	r3, #10
 80170b8:	d02f      	beq.n	801711a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80170ba:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80170bc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80170c0:	3901      	subs	r1, #1
 80170c2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80170c4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80170c8:	1c51      	adds	r1, r2, #1
 80170ca:	b289      	uxth	r1, r1
 80170cc:	2901      	cmp	r1, #1
 80170ce:	bf84      	itt	hi
 80170d0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80170d4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80170d6:	f103 0201 	add.w	r2, r3, #1
 80170da:	8722      	strh	r2, [r4, #56]	; 0x38
 80170dc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80170de:	bf98      	it	ls
 80170e0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80170e2:	4413      	add	r3, r2
 80170e4:	b29b      	uxth	r3, r3
 80170e6:	2b09      	cmp	r3, #9
 80170e8:	bf88      	it	hi
 80170ea:	3b0a      	subhi	r3, #10
 80170ec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80170f0:	8458      	strh	r0, [r3, #34]	; 0x22
 80170f2:	e7dc      	b.n	80170ae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80170f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80170f6:	2b0a      	cmp	r3, #10
 80170f8:	d00f      	beq.n	801711a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80170fa:	4620      	mov	r0, r4
 80170fc:	f7ff fc11 	bl	8016922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017100:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017102:	1c5a      	adds	r2, r3, #1
 8017104:	8722      	strh	r2, [r4, #56]	; 0x38
 8017106:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017108:	4413      	add	r3, r2
 801710a:	b29b      	uxth	r3, r3
 801710c:	2b09      	cmp	r3, #9
 801710e:	bf88      	it	hi
 8017110:	3b0a      	subhi	r3, #10
 8017112:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017116:	8458      	strh	r0, [r3, #34]	; 0x22
 8017118:	e7ec      	b.n	80170f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801711a:	bd10      	pop	{r4, pc}

0801711c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801711c:	b538      	push	{r3, r4, r5, lr}
 801711e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017120:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017124:	4604      	mov	r4, r0
 8017126:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017128:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801712a:	3a01      	subs	r2, #1
 801712c:	8702      	strh	r2, [r0, #56]	; 0x38
 801712e:	1c5a      	adds	r2, r3, #1
 8017130:	b292      	uxth	r2, r2
 8017132:	2a09      	cmp	r2, #9
 8017134:	bf86      	itte	hi
 8017136:	3b09      	subhi	r3, #9
 8017138:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801713a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801713c:	f7ff ffb5 	bl	80170aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017140:	8c23      	ldrh	r3, [r4, #32]
 8017142:	2b01      	cmp	r3, #1
 8017144:	bf9c      	itt	ls
 8017146:	3301      	addls	r3, #1
 8017148:	8423      	strhls	r3, [r4, #32]
 801714a:	8be3      	ldrh	r3, [r4, #30]
 801714c:	b90b      	cbnz	r3, 8017152 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801714e:	2302      	movs	r3, #2
 8017150:	83e3      	strh	r3, [r4, #30]
 8017152:	8be3      	ldrh	r3, [r4, #30]
 8017154:	3b01      	subs	r3, #1
 8017156:	b29b      	uxth	r3, r3
 8017158:	83e3      	strh	r3, [r4, #30]
 801715a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801715e:	4628      	mov	r0, r5
 8017160:	8365      	strh	r5, [r4, #26]
 8017162:	bd38      	pop	{r3, r4, r5, pc}

08017164 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017164:	428a      	cmp	r2, r1
 8017166:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801716a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801716c:	d931      	bls.n	80171d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801716e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017170:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017174:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017178:	19ee      	adds	r6, r5, r7
 801717a:	1a54      	subs	r4, r2, r1
 801717c:	3e01      	subs	r6, #1
 801717e:	fa1f fe84 	uxth.w	lr, r4
 8017182:	b2b4      	uxth	r4, r6
 8017184:	eba4 090e 	sub.w	r9, r4, lr
 8017188:	fa1f f989 	uxth.w	r9, r9
 801718c:	2c09      	cmp	r4, #9
 801718e:	4626      	mov	r6, r4
 8017190:	bf88      	it	hi
 8017192:	f1a4 060a 	subhi.w	r6, r4, #10
 8017196:	f1bc 0f00 	cmp.w	ip, #0
 801719a:	bf08      	it	eq
 801719c:	f04f 0c02 	moveq.w	ip, #2
 80171a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80171a4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80171a8:	fa1f fc8c 	uxth.w	ip, ip
 80171ac:	3c01      	subs	r4, #1
 80171ae:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80171b2:	b2a4      	uxth	r4, r4
 80171b4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80171b8:	454c      	cmp	r4, r9
 80171ba:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80171be:	d1e5      	bne.n	801718c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80171c0:	eba5 050e 	sub.w	r5, r5, lr
 80171c4:	eb0e 0408 	add.w	r4, lr, r8
 80171c8:	8705      	strh	r5, [r0, #56]	; 0x38
 80171ca:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80171ce:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80171d2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80171d4:	1a64      	subs	r4, r4, r1
 80171d6:	4439      	add	r1, r7
 80171d8:	b289      	uxth	r1, r1
 80171da:	2909      	cmp	r1, #9
 80171dc:	bf88      	it	hi
 80171de:	390a      	subhi	r1, #10
 80171e0:	8704      	strh	r4, [r0, #56]	; 0x38
 80171e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80171e4:	250a      	movs	r5, #10
 80171e6:	b18a      	cbz	r2, 801720c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80171e8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80171ea:	3a01      	subs	r2, #1
 80171ec:	b292      	uxth	r2, r2
 80171ee:	3101      	adds	r1, #1
 80171f0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80171f4:	8701      	strh	r1, [r0, #56]	; 0x38
 80171f6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80171f8:	b901      	cbnz	r1, 80171fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80171fa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80171fc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80171fe:	3901      	subs	r1, #1
 8017200:	b289      	uxth	r1, r1
 8017202:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017204:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017208:	844c      	strh	r4, [r1, #34]	; 0x22
 801720a:	e7ec      	b.n	80171e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801720c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017210:	f7ff bf4b 	b.w	80170aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017214 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017214:	b570      	push	{r4, r5, r6, lr}
 8017216:	2500      	movs	r5, #0
 8017218:	4295      	cmp	r5, r2
 801721a:	d011      	beq.n	8017240 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801721c:	8bc4      	ldrh	r4, [r0, #30]
 801721e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017222:	4414      	add	r4, r2
 8017224:	3c01      	subs	r4, #1
 8017226:	1b64      	subs	r4, r4, r5
 8017228:	b2a4      	uxth	r4, r4
 801722a:	2c01      	cmp	r4, #1
 801722c:	bf88      	it	hi
 801722e:	3c02      	subhi	r4, #2
 8017230:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017234:	8b64      	ldrh	r4, [r4, #26]
 8017236:	42b4      	cmp	r4, r6
 8017238:	d117      	bne.n	801726a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801723a:	3501      	adds	r5, #1
 801723c:	b2ad      	uxth	r5, r5
 801723e:	e7eb      	b.n	8017218 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017240:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017244:	2400      	movs	r4, #0
 8017246:	4413      	add	r3, r2
 8017248:	b2a2      	uxth	r2, r4
 801724a:	429a      	cmp	r2, r3
 801724c:	da0f      	bge.n	801726e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801724e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017250:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017254:	4432      	add	r2, r6
 8017256:	b292      	uxth	r2, r2
 8017258:	2a09      	cmp	r2, #9
 801725a:	bf88      	it	hi
 801725c:	3a0a      	subhi	r2, #10
 801725e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017262:	3401      	adds	r4, #1
 8017264:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017266:	42aa      	cmp	r2, r5
 8017268:	d0ee      	beq.n	8017248 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801726a:	2000      	movs	r0, #0
 801726c:	bd70      	pop	{r4, r5, r6, pc}
 801726e:	2001      	movs	r0, #1
 8017270:	e7fc      	b.n	801726c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017272 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017272:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017276:	4605      	mov	r5, r0
 8017278:	4616      	mov	r6, r2
 801727a:	1c8c      	adds	r4, r1, #2
 801727c:	8809      	ldrh	r1, [r1, #0]
 801727e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017282:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017286:	42b3      	cmp	r3, r6
 8017288:	d124      	bne.n	80172d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801728a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801728e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017292:	f001 070f 	and.w	r7, r1, #15
 8017296:	f8cd 8000 	str.w	r8, [sp]
 801729a:	464b      	mov	r3, r9
 801729c:	4652      	mov	r2, sl
 801729e:	4621      	mov	r1, r4
 80172a0:	4628      	mov	r0, r5
 80172a2:	f7ff ffb7 	bl	8017214 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80172a6:	4683      	mov	fp, r0
 80172a8:	b168      	cbz	r0, 80172c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80172aa:	eb0a 0109 	add.w	r1, sl, r9
 80172ae:	4441      	add	r1, r8
 80172b0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80172b4:	463a      	mov	r2, r7
 80172b6:	4649      	mov	r1, r9
 80172b8:	4628      	mov	r0, r5
 80172ba:	f7ff ff53 	bl	8017164 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80172be:	4658      	mov	r0, fp
 80172c0:	b003      	add	sp, #12
 80172c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172c6:	eb07 010a 	add.w	r1, r7, sl
 80172ca:	4449      	add	r1, r9
 80172cc:	4441      	add	r1, r8
 80172ce:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80172d2:	e7d2      	b.n	801727a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80172d4:	f04f 0b00 	mov.w	fp, #0
 80172d8:	e7f1      	b.n	80172be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080172da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80172da:	b570      	push	{r4, r5, r6, lr}
 80172dc:	8810      	ldrh	r0, [r2, #0]
 80172de:	4298      	cmp	r0, r3
 80172e0:	d817      	bhi.n	8017312 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80172e2:	1e48      	subs	r0, r1, #1
 80172e4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80172e8:	4298      	cmp	r0, r3
 80172ea:	d312      	bcc.n	8017312 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80172ec:	2400      	movs	r4, #0
 80172ee:	428c      	cmp	r4, r1
 80172f0:	d20f      	bcs.n	8017312 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80172f2:	1860      	adds	r0, r4, r1
 80172f4:	1040      	asrs	r0, r0, #1
 80172f6:	0085      	lsls	r5, r0, #2
 80172f8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80172fc:	42b3      	cmp	r3, r6
 80172fe:	d902      	bls.n	8017306 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017300:	3001      	adds	r0, #1
 8017302:	b284      	uxth	r4, r0
 8017304:	e7f3      	b.n	80172ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017306:	d201      	bcs.n	801730c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017308:	b281      	uxth	r1, r0
 801730a:	e7f0      	b.n	80172ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801730c:	442a      	add	r2, r5
 801730e:	8850      	ldrh	r0, [r2, #2]
 8017310:	bd70      	pop	{r4, r5, r6, pc}
 8017312:	2000      	movs	r0, #0
 8017314:	e7fc      	b.n	8017310 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017316 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017316:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801731a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801731c:	886f      	ldrh	r7, [r5, #2]
 801731e:	4604      	mov	r4, r0
 8017320:	087f      	lsrs	r7, r7, #1
 8017322:	260b      	movs	r6, #11
 8017324:	3e01      	subs	r6, #1
 8017326:	d013      	beq.n	8017350 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017328:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801732a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801732e:	462a      	mov	r2, r5
 8017330:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017334:	4639      	mov	r1, r7
 8017336:	4643      	mov	r3, r8
 8017338:	4620      	mov	r0, r4
 801733a:	f7ff ffce 	bl	80172da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801733e:	b138      	cbz	r0, 8017350 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017340:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017344:	4642      	mov	r2, r8
 8017346:	4620      	mov	r0, r4
 8017348:	f7ff ff93 	bl	8017272 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801734c:	2800      	cmp	r0, #0
 801734e:	d1e9      	bne.n	8017324 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017350:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017354 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017354:	b570      	push	{r4, r5, r6, lr}
 8017356:	694a      	ldr	r2, [r1, #20]
 8017358:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801735a:	684b      	ldr	r3, [r1, #4]
 801735c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801735e:	1b54      	subs	r4, r2, r5
 8017360:	f000 8106 	beq.w	8017570 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017364:	1b9b      	subs	r3, r3, r6
 8017366:	d003      	beq.n	8017370 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017368:	4363      	muls	r3, r4
 801736a:	2210      	movs	r2, #16
 801736c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017370:	680c      	ldr	r4, [r1, #0]
 8017372:	698a      	ldr	r2, [r1, #24]
 8017374:	1b65      	subs	r5, r4, r5
 8017376:	f000 80fd 	beq.w	8017574 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801737a:	1b92      	subs	r2, r2, r6
 801737c:	d003      	beq.n	8017386 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801737e:	436a      	muls	r2, r5
 8017380:	2410      	movs	r4, #16
 8017382:	fb92 f2f4 	sdiv	r2, r2, r4
 8017386:	1a9b      	subs	r3, r3, r2
 8017388:	ee07 3a90 	vmov	s15, r3
 801738c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80175b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017390:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017394:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017398:	ee67 7a84 	vmul.f32	s15, s15, s8
 801739c:	460a      	mov	r2, r1
 801739e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80173a2:	4603      	mov	r3, r0
 80173a4:	f100 040c 	add.w	r4, r0, #12
 80173a8:	eeb1 6a43 	vneg.f32	s12, s6
 80173ac:	edd2 7a02 	vldr	s15, [r2, #8]
 80173b0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80173b4:	3214      	adds	r2, #20
 80173b6:	ece3 6a01 	vstmia	r3!, {s13}
 80173ba:	ed52 7a02 	vldr	s15, [r2, #-8]
 80173be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80173c2:	429c      	cmp	r4, r3
 80173c4:	edc3 7a02 	vstr	s15, [r3, #8]
 80173c8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80173cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80173d0:	edc3 7a05 	vstr	s15, [r3, #20]
 80173d4:	d1ea      	bne.n	80173ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80173d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80173d8:	698b      	ldr	r3, [r1, #24]
 80173da:	edd0 4a02 	vldr	s9, [r0, #8]
 80173de:	edd0 3a00 	vldr	s7, [r0]
 80173e2:	edd0 6a01 	vldr	s13, [r0, #4]
 80173e6:	ed90 5a05 	vldr	s10, [r0, #20]
 80173ea:	ed90 2a03 	vldr	s4, [r0, #12]
 80173ee:	edd0 5a04 	vldr	s11, [r0, #16]
 80173f2:	ed90 1a07 	vldr	s2, [r0, #28]
 80173f6:	edd0 2a06 	vldr	s5, [r0, #24]
 80173fa:	1a9b      	subs	r3, r3, r2
 80173fc:	ee07 3a90 	vmov	s15, r3
 8017400:	684b      	ldr	r3, [r1, #4]
 8017402:	1a9b      	subs	r3, r3, r2
 8017404:	ee07 3a10 	vmov	s14, r3
 8017408:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801740c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017410:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017414:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017418:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801741c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017420:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017424:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017428:	eee6 7a87 	vfma.f32	s15, s13, s14
 801742c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017430:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017434:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017438:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801743a:	694a      	ldr	r2, [r1, #20]
 801743c:	1b13      	subs	r3, r2, r4
 801743e:	ee07 3a10 	vmov	s14, r3
 8017442:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017446:	680b      	ldr	r3, [r1, #0]
 8017448:	ee27 7a04 	vmul.f32	s14, s14, s8
 801744c:	1b1b      	subs	r3, r3, r4
 801744e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017452:	ee07 3a10 	vmov	s14, r3
 8017456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801745a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801745e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017462:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017466:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801746a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801746c:	698b      	ldr	r3, [r1, #24]
 801746e:	1a9b      	subs	r3, r3, r2
 8017470:	ee06 3a90 	vmov	s13, r3
 8017474:	684b      	ldr	r3, [r1, #4]
 8017476:	1a9b      	subs	r3, r3, r2
 8017478:	ee07 3a10 	vmov	s14, r3
 801747c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017480:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017484:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017488:	ee27 7a04 	vmul.f32	s14, s14, s8
 801748c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017490:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017494:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017498:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801749c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801749e:	694a      	ldr	r2, [r1, #20]
 80174a0:	1b13      	subs	r3, r2, r4
 80174a2:	ee07 3a10 	vmov	s14, r3
 80174a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174aa:	680b      	ldr	r3, [r1, #0]
 80174ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174b0:	1b1b      	subs	r3, r3, r4
 80174b2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80174b6:	ee07 3a10 	vmov	s14, r3
 80174ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174be:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174c2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80174c6:	edd0 5a08 	vldr	s11, [r0, #32]
 80174ca:	ee25 5a06 	vmul.f32	s10, s10, s12
 80174ce:	ee31 1a65 	vsub.f32	s2, s2, s11
 80174d2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80174d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80174d8:	698b      	ldr	r3, [r1, #24]
 80174da:	1a9b      	subs	r3, r3, r2
 80174dc:	ee07 3a10 	vmov	s14, r3
 80174e0:	684b      	ldr	r3, [r1, #4]
 80174e2:	1a9b      	subs	r3, r3, r2
 80174e4:	ee01 3a90 	vmov	s3, r3
 80174e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174ec:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80174f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174f4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80174f8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80174fc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017500:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017504:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017508:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801750c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801750e:	694a      	ldr	r2, [r1, #20]
 8017510:	1b13      	subs	r3, r2, r4
 8017512:	ee03 3a10 	vmov	s6, r3
 8017516:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801751a:	680b      	ldr	r3, [r1, #0]
 801751c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017520:	1b1b      	subs	r3, r3, r4
 8017522:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017526:	ee03 3a10 	vmov	s6, r3
 801752a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801752e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017532:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017536:	ee25 6a86 	vmul.f32	s12, s11, s12
 801753a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801753e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017542:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017546:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801754a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801754e:	dd13      	ble.n	8017578 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017550:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017554:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017558:	63c3      	str	r3, [r0, #60]	; 0x3c
 801755a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801755e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017566:	dd15      	ble.n	8017594 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017568:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801756c:	6403      	str	r3, [r0, #64]	; 0x40
 801756e:	bd70      	pop	{r4, r5, r6, pc}
 8017570:	4623      	mov	r3, r4
 8017572:	e6fd      	b.n	8017370 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017574:	462a      	mov	r2, r5
 8017576:	e706      	b.n	8017386 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017578:	d502      	bpl.n	8017580 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801757a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801757e:	e7e9      	b.n	8017554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017580:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017584:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017588:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801758c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017590:	dade      	bge.n	8017550 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017592:	e7f2      	b.n	801757a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017594:	d502      	bpl.n	801759c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017596:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801759a:	e7e7      	b.n	801756c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801759c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80175a0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80175a4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80175a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175ac:	dadc      	bge.n	8017568 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80175ae:	e7f2      	b.n	8017596 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80175b0:	3d800000 	.word	0x3d800000

080175b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80175b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80175b8:	2714      	movs	r7, #20
 80175ba:	435f      	muls	r7, r3
 80175bc:	eb02 0c07 	add.w	ip, r2, r7
 80175c0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80175c4:	f115 0e0f 	adds.w	lr, r5, #15
 80175c8:	f100 80a2 	bmi.w	8017710 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80175cc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80175d0:	9c08      	ldr	r4, [sp, #32]
 80175d2:	f8c0 e014 	str.w	lr, [r0, #20]
 80175d6:	2614      	movs	r6, #20
 80175d8:	4366      	muls	r6, r4
 80175da:	eb02 0806 	add.w	r8, r2, r6
 80175de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80175e2:	f115 040f 	adds.w	r4, r5, #15
 80175e6:	f100 809f 	bmi.w	8017728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80175ea:	1124      	asrs	r4, r4, #4
 80175ec:	eba4 040e 	sub.w	r4, r4, lr
 80175f0:	6184      	str	r4, [r0, #24]
 80175f2:	2c00      	cmp	r4, #0
 80175f4:	f000 808a 	beq.w	801770c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80175f8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80175fc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017600:	5995      	ldr	r5, [r2, r6]
 8017602:	eba4 0809 	sub.w	r8, r4, r9
 8017606:	59d4      	ldr	r4, [r2, r7]
 8017608:	eba5 0a04 	sub.w	sl, r5, r4
 801760c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017610:	fb0e fe05 	mul.w	lr, lr, r5
 8017614:	fb0a ee19 	mls	lr, sl, r9, lr
 8017618:	fb08 e404 	mla	r4, r8, r4, lr
 801761c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017620:	3c01      	subs	r4, #1
 8017622:	19a4      	adds	r4, r4, r6
 8017624:	f100 808c 	bmi.w	8017740 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017628:	fb94 fef6 	sdiv	lr, r4, r6
 801762c:	f8c0 e000 	str.w	lr, [r0]
 8017630:	fb06 441e 	mls	r4, r6, lr, r4
 8017634:	6104      	str	r4, [r0, #16]
 8017636:	2d00      	cmp	r5, #0
 8017638:	f2c0 8095 	blt.w	8017766 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801763c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017640:	6044      	str	r4, [r0, #4]
 8017642:	fb06 5514 	mls	r5, r6, r4, r5
 8017646:	6085      	str	r5, [r0, #8]
 8017648:	60c6      	str	r6, [r0, #12]
 801764a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801764e:	6945      	ldr	r5, [r0, #20]
 8017650:	59d2      	ldr	r2, [r2, r7]
 8017652:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017788 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017656:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801765a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801765e:	ee07 4a10 	vmov	s14, r4
 8017662:	6804      	ldr	r4, [r0, #0]
 8017664:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017668:	ee07 2a90 	vmov	s15, r2
 801766c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017674:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017678:	ee27 7a26 	vmul.f32	s14, s14, s13
 801767c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017680:	edd3 6a00 	vldr	s13, [r3]
 8017684:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017688:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801768c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017690:	edc0 6a07 	vstr	s13, [r0, #28]
 8017694:	edd0 6a01 	vldr	s13, [r0, #4]
 8017698:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801769c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80176a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80176a4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80176a8:	ed80 6a08 	vstr	s12, [r0, #32]
 80176ac:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80176ae:	6242      	str	r2, [r0, #36]	; 0x24
 80176b0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80176b4:	ed93 6a03 	vldr	s12, [r3, #12]
 80176b8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80176bc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80176c0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80176c4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80176c8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80176cc:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80176d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80176d4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80176d8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80176da:	6302      	str	r2, [r0, #48]	; 0x30
 80176dc:	ed93 6a06 	vldr	s12, [r3, #24]
 80176e0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80176e4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80176e8:	eeb0 7a46 	vmov.f32	s14, s12
 80176ec:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80176f0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80176f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80176f8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80176fc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017700:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017704:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017708:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801770a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801770c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017710:	f1c5 0501 	rsb	r5, r5, #1
 8017714:	f015 050f 	ands.w	r5, r5, #15
 8017718:	bf18      	it	ne
 801771a:	2501      	movne	r5, #1
 801771c:	2410      	movs	r4, #16
 801771e:	fb9e fef4 	sdiv	lr, lr, r4
 8017722:	ebae 0e05 	sub.w	lr, lr, r5
 8017726:	e753      	b.n	80175d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017728:	f1c5 0501 	rsb	r5, r5, #1
 801772c:	f015 050f 	ands.w	r5, r5, #15
 8017730:	bf18      	it	ne
 8017732:	2501      	movne	r5, #1
 8017734:	f04f 0910 	mov.w	r9, #16
 8017738:	fb94 f4f9 	sdiv	r4, r4, r9
 801773c:	1b64      	subs	r4, r4, r5
 801773e:	e755      	b.n	80175ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017740:	4264      	negs	r4, r4
 8017742:	fb94 fef6 	sdiv	lr, r4, r6
 8017746:	f1ce 0800 	rsb	r8, lr, #0
 801774a:	fb06 441e 	mls	r4, r6, lr, r4
 801774e:	f8c0 8000 	str.w	r8, [r0]
 8017752:	6104      	str	r4, [r0, #16]
 8017754:	2c00      	cmp	r4, #0
 8017756:	f43f af6e 	beq.w	8017636 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801775a:	ea6f 0e0e 	mvn.w	lr, lr
 801775e:	f8c0 e000 	str.w	lr, [r0]
 8017762:	1b34      	subs	r4, r6, r4
 8017764:	e766      	b.n	8017634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017766:	426d      	negs	r5, r5
 8017768:	fb95 f4f6 	sdiv	r4, r5, r6
 801776c:	f1c4 0e00 	rsb	lr, r4, #0
 8017770:	fb06 5514 	mls	r5, r6, r4, r5
 8017774:	f8c0 e004 	str.w	lr, [r0, #4]
 8017778:	6085      	str	r5, [r0, #8]
 801777a:	2d00      	cmp	r5, #0
 801777c:	f43f af64 	beq.w	8017648 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017780:	43e4      	mvns	r4, r4
 8017782:	6044      	str	r4, [r0, #4]
 8017784:	1b75      	subs	r5, r6, r5
 8017786:	e75e      	b.n	8017646 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017788:	3d800000 	.word	0x3d800000

0801778c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801778c:	4602      	mov	r2, r0
 801778e:	b148      	cbz	r0, 80177a4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017790:	2300      	movs	r3, #0
 8017792:	b298      	uxth	r0, r3
 8017794:	3301      	adds	r3, #1
 8017796:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801779a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801779e:	2900      	cmp	r1, #0
 80177a0:	d1f7      	bne.n	8017792 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80177a2:	4770      	bx	lr
 80177a4:	4770      	bx	lr

080177a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80177a6:	b530      	push	{r4, r5, lr}
 80177a8:	4604      	mov	r4, r0
 80177aa:	b159      	cbz	r1, 80177c4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80177ac:	b148      	cbz	r0, 80177c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80177ae:	2300      	movs	r3, #0
 80177b0:	b298      	uxth	r0, r3
 80177b2:	4282      	cmp	r2, r0
 80177b4:	d905      	bls.n	80177c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80177b6:	5ccd      	ldrb	r5, [r1, r3]
 80177b8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80177bc:	3301      	adds	r3, #1
 80177be:	2d00      	cmp	r5, #0
 80177c0:	d1f6      	bne.n	80177b0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80177c2:	bd30      	pop	{r4, r5, pc}
 80177c4:	4608      	mov	r0, r1
 80177c6:	e7fc      	b.n	80177c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080177c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80177c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80177ca:	b08b      	sub	sp, #44	; 0x2c
 80177cc:	468c      	mov	ip, r1
 80177ce:	2100      	movs	r1, #0
 80177d0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80177d4:	4604      	mov	r4, r0
 80177d6:	261f      	movs	r6, #31
 80177d8:	af01      	add	r7, sp, #4
 80177da:	fb94 fef3 	sdiv	lr, r4, r3
 80177de:	fb03 441e 	mls	r4, r3, lr, r4
 80177e2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80177e6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80177ea:	b2ec      	uxtb	r4, r5
 80177ec:	2d09      	cmp	r5, #9
 80177ee:	bfd4      	ite	le
 80177f0:	3430      	addle	r4, #48	; 0x30
 80177f2:	3457      	addgt	r4, #87	; 0x57
 80177f4:	b2e4      	uxtb	r4, r4
 80177f6:	55bc      	strb	r4, [r7, r6]
 80177f8:	4674      	mov	r4, lr
 80177fa:	1e71      	subs	r1, r6, #1
 80177fc:	b974      	cbnz	r4, 801781c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80177fe:	2800      	cmp	r0, #0
 8017800:	da05      	bge.n	801780e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017802:	ab0a      	add	r3, sp, #40	; 0x28
 8017804:	4419      	add	r1, r3
 8017806:	232d      	movs	r3, #45	; 0x2d
 8017808:	f801 3c24 	strb.w	r3, [r1, #-36]
 801780c:	1eb1      	subs	r1, r6, #2
 801780e:	3101      	adds	r1, #1
 8017810:	4439      	add	r1, r7
 8017812:	4660      	mov	r0, ip
 8017814:	f7ff ffc7 	bl	80177a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017818:	b00b      	add	sp, #44	; 0x2c
 801781a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801781c:	460e      	mov	r6, r1
 801781e:	e7dc      	b.n	80177da <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017820 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017820:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017822:	b08b      	sub	sp, #44	; 0x2c
 8017824:	468c      	mov	ip, r1
 8017826:	2100      	movs	r1, #0
 8017828:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801782c:	ae01      	add	r6, sp, #4
 801782e:	211f      	movs	r1, #31
 8017830:	fbb0 f7f3 	udiv	r7, r0, r3
 8017834:	fb03 0517 	mls	r5, r3, r7, r0
 8017838:	b2ec      	uxtb	r4, r5
 801783a:	2d09      	cmp	r5, #9
 801783c:	bfd4      	ite	le
 801783e:	3430      	addle	r4, #48	; 0x30
 8017840:	3457      	addgt	r4, #87	; 0x57
 8017842:	b2e4      	uxtb	r4, r4
 8017844:	558c      	strb	r4, [r1, r6]
 8017846:	4638      	mov	r0, r7
 8017848:	1e4c      	subs	r4, r1, #1
 801784a:	b92f      	cbnz	r7, 8017858 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801784c:	4431      	add	r1, r6
 801784e:	4660      	mov	r0, ip
 8017850:	f7ff ffa9 	bl	80177a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017854:	b00b      	add	sp, #44	; 0x2c
 8017856:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017858:	4621      	mov	r1, r4
 801785a:	e7e9      	b.n	8017830 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801785c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801785c:	b410      	push	{r4}
 801785e:	b131      	cbz	r1, 801786e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017860:	1e9c      	subs	r4, r3, #2
 8017862:	2c22      	cmp	r4, #34	; 0x22
 8017864:	d803      	bhi.n	801786e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017866:	f85d 4b04 	ldr.w	r4, [sp], #4
 801786a:	f7ff bfad 	b.w	80177c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801786e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017872:	4770      	bx	lr

08017874 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017878:	4691      	mov	r9, r2
 801787a:	b085      	sub	sp, #20
 801787c:	6802      	ldr	r2, [r0, #0]
 801787e:	9201      	str	r2, [sp, #4]
 8017880:	4688      	mov	r8, r1
 8017882:	4683      	mov	fp, r0
 8017884:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017888:	9103      	str	r1, [sp, #12]
 801788a:	4610      	mov	r0, r2
 801788c:	461c      	mov	r4, r3
 801788e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017892:	9302      	str	r3, [sp, #8]
 8017894:	f7ff ff7a 	bl	801778c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017898:	f1b8 0f00 	cmp.w	r8, #0
 801789c:	bf0c      	ite	eq
 801789e:	4684      	moveq	ip, r0
 80178a0:	f100 0c01 	addne.w	ip, r0, #1
 80178a4:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80178a8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80178ac:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80178ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80178b0:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80178b4:	9903      	ldr	r1, [sp, #12]
 80178b6:	fa1f fc8c 	uxth.w	ip, ip
 80178ba:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80178be:	d041      	beq.n	8017944 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80178c0:	d834      	bhi.n	801792c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80178c2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80178c6:	d059      	beq.n	801797c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80178c8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80178cc:	d03a      	beq.n	8017944 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80178ce:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80178d2:	d034      	beq.n	801793e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80178d4:	2400      	movs	r4, #0
 80178d6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80178da:	3a01      	subs	r2, #1
 80178dc:	b169      	cbz	r1, 80178fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80178de:	9911      	ldr	r1, [sp, #68]	; 0x44
 80178e0:	458c      	cmp	ip, r1
 80178e2:	da09      	bge.n	80178f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80178e4:	eba1 010c 	sub.w	r1, r1, ip
 80178e8:	b289      	uxth	r1, r1
 80178ea:	b933      	cbnz	r3, 80178fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80178ec:	2e00      	cmp	r6, #0
 80178ee:	d051      	beq.n	8017994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80178f0:	2800      	cmp	r0, #0
 80178f2:	d04f      	beq.n	8017994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80178f4:	440c      	add	r4, r1
 80178f6:	b2a4      	uxth	r4, r4
 80178f8:	2100      	movs	r1, #0
 80178fa:	682b      	ldr	r3, [r5, #0]
 80178fc:	4293      	cmp	r3, r2
 80178fe:	da07      	bge.n	8017910 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017900:	f1b8 0f00 	cmp.w	r8, #0
 8017904:	d004      	beq.n	8017910 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017906:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801790a:	682b      	ldr	r3, [r5, #0]
 801790c:	3301      	adds	r3, #1
 801790e:	602b      	str	r3, [r5, #0]
 8017910:	2730      	movs	r7, #48	; 0x30
 8017912:	2c00      	cmp	r4, #0
 8017914:	d04e      	beq.n	80179b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017916:	682e      	ldr	r6, [r5, #0]
 8017918:	3c01      	subs	r4, #1
 801791a:	42b2      	cmp	r2, r6
 801791c:	b2a4      	uxth	r4, r4
 801791e:	dd49      	ble.n	80179b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017920:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017924:	682b      	ldr	r3, [r5, #0]
 8017926:	3301      	adds	r3, #1
 8017928:	602b      	str	r3, [r5, #0]
 801792a:	e7f2      	b.n	8017912 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801792c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017930:	d01d      	beq.n	801796e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017932:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017936:	d002      	beq.n	801793e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017938:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801793c:	e7c9      	b.n	80178d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801793e:	4684      	mov	ip, r0
 8017940:	f04f 0800 	mov.w	r8, #0
 8017944:	2c00      	cmp	r4, #0
 8017946:	d0c6      	beq.n	80178d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017948:	b947      	cbnz	r7, 801795c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801794a:	2801      	cmp	r0, #1
 801794c:	d106      	bne.n	801795c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801794e:	8814      	ldrh	r4, [r2, #0]
 8017950:	2c30      	cmp	r4, #48	; 0x30
 8017952:	bf02      	ittt	eq
 8017954:	3202      	addeq	r2, #2
 8017956:	f8cb 2000 	streq.w	r2, [fp]
 801795a:	4638      	moveq	r0, r7
 801795c:	45bc      	cmp	ip, r7
 801795e:	da14      	bge.n	801798a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017960:	b2bf      	uxth	r7, r7
 8017962:	eba7 040c 	sub.w	r4, r7, ip
 8017966:	b2a4      	uxth	r4, r4
 8017968:	46bc      	mov	ip, r7
 801796a:	2600      	movs	r6, #0
 801796c:	e7b3      	b.n	80178d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801796e:	4684      	mov	ip, r0
 8017970:	b16c      	cbz	r4, 801798e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017972:	42b8      	cmp	r0, r7
 8017974:	dd00      	ble.n	8017978 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017976:	b2b8      	uxth	r0, r7
 8017978:	2400      	movs	r4, #0
 801797a:	e003      	b.n	8017984 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801797c:	f04f 0c01 	mov.w	ip, #1
 8017980:	2400      	movs	r4, #0
 8017982:	4660      	mov	r0, ip
 8017984:	4626      	mov	r6, r4
 8017986:	46a0      	mov	r8, r4
 8017988:	e7a5      	b.n	80178d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801798a:	2400      	movs	r4, #0
 801798c:	e7ed      	b.n	801796a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801798e:	4626      	mov	r6, r4
 8017990:	46a0      	mov	r8, r4
 8017992:	e7a0      	b.n	80178d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017994:	2900      	cmp	r1, #0
 8017996:	d0b0      	beq.n	80178fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017998:	2720      	movs	r7, #32
 801799a:	682e      	ldr	r6, [r5, #0]
 801799c:	2900      	cmp	r1, #0
 801799e:	d0ac      	beq.n	80178fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80179a0:	3901      	subs	r1, #1
 80179a2:	4296      	cmp	r6, r2
 80179a4:	b289      	uxth	r1, r1
 80179a6:	daa7      	bge.n	80178f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80179a8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80179ac:	682b      	ldr	r3, [r5, #0]
 80179ae:	3301      	adds	r3, #1
 80179b0:	602b      	str	r3, [r5, #0]
 80179b2:	e7f2      	b.n	801799a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80179b4:	b188      	cbz	r0, 80179da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80179b6:	682b      	ldr	r3, [r5, #0]
 80179b8:	3801      	subs	r0, #1
 80179ba:	429a      	cmp	r2, r3
 80179bc:	b280      	uxth	r0, r0
 80179be:	dd0c      	ble.n	80179da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80179c0:	f8db 3000 	ldr.w	r3, [fp]
 80179c4:	1c9c      	adds	r4, r3, #2
 80179c6:	f8cb 4000 	str.w	r4, [fp]
 80179ca:	881c      	ldrh	r4, [r3, #0]
 80179cc:	682b      	ldr	r3, [r5, #0]
 80179ce:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80179d2:	682b      	ldr	r3, [r5, #0]
 80179d4:	3301      	adds	r3, #1
 80179d6:	602b      	str	r3, [r5, #0]
 80179d8:	e7ec      	b.n	80179b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80179da:	2620      	movs	r6, #32
 80179dc:	b151      	cbz	r1, 80179f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80179de:	6828      	ldr	r0, [r5, #0]
 80179e0:	3901      	subs	r1, #1
 80179e2:	4282      	cmp	r2, r0
 80179e4:	b289      	uxth	r1, r1
 80179e6:	dd05      	ble.n	80179f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80179e8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80179ec:	682b      	ldr	r3, [r5, #0]
 80179ee:	3301      	adds	r3, #1
 80179f0:	602b      	str	r3, [r5, #0]
 80179f2:	e7f3      	b.n	80179dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80179f4:	b005      	add	sp, #20
 80179f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080179fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80179fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80179fe:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017a02:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017a06:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017a0a:	2400      	movs	r4, #0
 8017a0c:	8014      	strh	r4, [r2, #0]
 8017a0e:	701c      	strb	r4, [r3, #0]
 8017a10:	f888 4000 	strb.w	r4, [r8]
 8017a14:	f88c 4000 	strb.w	r4, [ip]
 8017a18:	f88e 4000 	strb.w	r4, [lr]
 8017a1c:	703c      	strb	r4, [r7, #0]
 8017a1e:	6804      	ldr	r4, [r0, #0]
 8017a20:	b1a4      	cbz	r4, 8017a4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017a22:	8824      	ldrh	r4, [r4, #0]
 8017a24:	f04f 0901 	mov.w	r9, #1
 8017a28:	b314      	cbz	r4, 8017a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017a2a:	2c2b      	cmp	r4, #43	; 0x2b
 8017a2c:	d001      	beq.n	8017a32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017a2e:	2c20      	cmp	r4, #32
 8017a30:	d110      	bne.n	8017a54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017a32:	8014      	strh	r4, [r2, #0]
 8017a34:	6804      	ldr	r4, [r0, #0]
 8017a36:	b10c      	cbz	r4, 8017a3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017a38:	3402      	adds	r4, #2
 8017a3a:	6004      	str	r4, [r0, #0]
 8017a3c:	680c      	ldr	r4, [r1, #0]
 8017a3e:	b10c      	cbz	r4, 8017a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017a40:	3401      	adds	r4, #1
 8017a42:	600c      	str	r4, [r1, #0]
 8017a44:	6804      	ldr	r4, [r0, #0]
 8017a46:	b17c      	cbz	r4, 8017a68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017a48:	8824      	ldrh	r4, [r4, #0]
 8017a4a:	e7ed      	b.n	8017a28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017a4c:	680c      	ldr	r4, [r1, #0]
 8017a4e:	b17c      	cbz	r4, 8017a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017a50:	7824      	ldrb	r4, [r4, #0]
 8017a52:	e7e7      	b.n	8017a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017a54:	2c2d      	cmp	r4, #45	; 0x2d
 8017a56:	d102      	bne.n	8017a5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017a58:	f883 9000 	strb.w	r9, [r3]
 8017a5c:	e7ea      	b.n	8017a34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017a5e:	2c23      	cmp	r4, #35	; 0x23
 8017a60:	d107      	bne.n	8017a72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017a62:	f888 9000 	strb.w	r9, [r8]
 8017a66:	e7e5      	b.n	8017a34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017a68:	680c      	ldr	r4, [r1, #0]
 8017a6a:	b10c      	cbz	r4, 8017a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017a6c:	7824      	ldrb	r4, [r4, #0]
 8017a6e:	e7db      	b.n	8017a28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017a70:	2400      	movs	r4, #0
 8017a72:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017a76:	2b09      	cmp	r3, #9
 8017a78:	d901      	bls.n	8017a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017a7a:	2c2a      	cmp	r4, #42	; 0x2a
 8017a7c:	d122      	bne.n	8017ac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017a7e:	2301      	movs	r3, #1
 8017a80:	2c30      	cmp	r4, #48	; 0x30
 8017a82:	f88e 3000 	strb.w	r3, [lr]
 8017a86:	d10d      	bne.n	8017aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017a88:	f88c 3000 	strb.w	r3, [ip]
 8017a8c:	6803      	ldr	r3, [r0, #0]
 8017a8e:	b10b      	cbz	r3, 8017a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017a90:	3302      	adds	r3, #2
 8017a92:	6003      	str	r3, [r0, #0]
 8017a94:	680b      	ldr	r3, [r1, #0]
 8017a96:	b10b      	cbz	r3, 8017a9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017a98:	3301      	adds	r3, #1
 8017a9a:	600b      	str	r3, [r1, #0]
 8017a9c:	6803      	ldr	r3, [r0, #0]
 8017a9e:	2b00      	cmp	r3, #0
 8017aa0:	d02f      	beq.n	8017b02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017aa2:	881c      	ldrh	r4, [r3, #0]
 8017aa4:	2c2a      	cmp	r4, #42	; 0x2a
 8017aa6:	d135      	bne.n	8017b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017aa8:	f04f 33ff 	mov.w	r3, #4294967295
 8017aac:	6033      	str	r3, [r6, #0]
 8017aae:	6803      	ldr	r3, [r0, #0]
 8017ab0:	b10b      	cbz	r3, 8017ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017ab2:	3302      	adds	r3, #2
 8017ab4:	6003      	str	r3, [r0, #0]
 8017ab6:	680b      	ldr	r3, [r1, #0]
 8017ab8:	b10b      	cbz	r3, 8017abe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017aba:	3301      	adds	r3, #1
 8017abc:	600b      	str	r3, [r1, #0]
 8017abe:	6803      	ldr	r3, [r0, #0]
 8017ac0:	b31b      	cbz	r3, 8017b0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017ac2:	881c      	ldrh	r4, [r3, #0]
 8017ac4:	2c2e      	cmp	r4, #46	; 0x2e
 8017ac6:	d11a      	bne.n	8017afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017ac8:	2301      	movs	r3, #1
 8017aca:	703b      	strb	r3, [r7, #0]
 8017acc:	6803      	ldr	r3, [r0, #0]
 8017ace:	b10b      	cbz	r3, 8017ad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017ad0:	3302      	adds	r3, #2
 8017ad2:	6003      	str	r3, [r0, #0]
 8017ad4:	680b      	ldr	r3, [r1, #0]
 8017ad6:	b10b      	cbz	r3, 8017adc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017ad8:	3301      	adds	r3, #1
 8017ada:	600b      	str	r3, [r1, #0]
 8017adc:	6803      	ldr	r3, [r0, #0]
 8017ade:	2b00      	cmp	r3, #0
 8017ae0:	d036      	beq.n	8017b50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017ae2:	881b      	ldrh	r3, [r3, #0]
 8017ae4:	2b2a      	cmp	r3, #42	; 0x2a
 8017ae6:	d137      	bne.n	8017b58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017ae8:	f04f 33ff 	mov.w	r3, #4294967295
 8017aec:	602b      	str	r3, [r5, #0]
 8017aee:	6803      	ldr	r3, [r0, #0]
 8017af0:	b10b      	cbz	r3, 8017af6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017af2:	3302      	adds	r3, #2
 8017af4:	6003      	str	r3, [r0, #0]
 8017af6:	680b      	ldr	r3, [r1, #0]
 8017af8:	b10b      	cbz	r3, 8017afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017afa:	3301      	adds	r3, #1
 8017afc:	600b      	str	r3, [r1, #0]
 8017afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017b02:	680c      	ldr	r4, [r1, #0]
 8017b04:	b134      	cbz	r4, 8017b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017b06:	7824      	ldrb	r4, [r4, #0]
 8017b08:	e7cc      	b.n	8017aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017b0a:	680b      	ldr	r3, [r1, #0]
 8017b0c:	2b00      	cmp	r3, #0
 8017b0e:	d0f6      	beq.n	8017afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017b10:	781c      	ldrb	r4, [r3, #0]
 8017b12:	e7d7      	b.n	8017ac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017b14:	2300      	movs	r3, #0
 8017b16:	6033      	str	r3, [r6, #0]
 8017b18:	220a      	movs	r2, #10
 8017b1a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017b1e:	fa1f f38c 	uxth.w	r3, ip
 8017b22:	2b09      	cmp	r3, #9
 8017b24:	d8ce      	bhi.n	8017ac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017b26:	6833      	ldr	r3, [r6, #0]
 8017b28:	fb02 c303 	mla	r3, r2, r3, ip
 8017b2c:	6033      	str	r3, [r6, #0]
 8017b2e:	6803      	ldr	r3, [r0, #0]
 8017b30:	b10b      	cbz	r3, 8017b36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017b32:	3302      	adds	r3, #2
 8017b34:	6003      	str	r3, [r0, #0]
 8017b36:	680b      	ldr	r3, [r1, #0]
 8017b38:	b10b      	cbz	r3, 8017b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017b3a:	3301      	adds	r3, #1
 8017b3c:	600b      	str	r3, [r1, #0]
 8017b3e:	6803      	ldr	r3, [r0, #0]
 8017b40:	b10b      	cbz	r3, 8017b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017b42:	881c      	ldrh	r4, [r3, #0]
 8017b44:	e7e9      	b.n	8017b1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017b46:	680c      	ldr	r4, [r1, #0]
 8017b48:	2c00      	cmp	r4, #0
 8017b4a:	d0e6      	beq.n	8017b1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017b4c:	7824      	ldrb	r4, [r4, #0]
 8017b4e:	e7e4      	b.n	8017b1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017b50:	680b      	ldr	r3, [r1, #0]
 8017b52:	b10b      	cbz	r3, 8017b58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017b54:	781b      	ldrb	r3, [r3, #0]
 8017b56:	e7c5      	b.n	8017ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017b58:	2200      	movs	r2, #0
 8017b5a:	602a      	str	r2, [r5, #0]
 8017b5c:	240a      	movs	r4, #10
 8017b5e:	3b30      	subs	r3, #48	; 0x30
 8017b60:	b29e      	uxth	r6, r3
 8017b62:	2e09      	cmp	r6, #9
 8017b64:	682a      	ldr	r2, [r5, #0]
 8017b66:	d813      	bhi.n	8017b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017b68:	fb04 3302 	mla	r3, r4, r2, r3
 8017b6c:	602b      	str	r3, [r5, #0]
 8017b6e:	6803      	ldr	r3, [r0, #0]
 8017b70:	b10b      	cbz	r3, 8017b76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017b72:	3302      	adds	r3, #2
 8017b74:	6003      	str	r3, [r0, #0]
 8017b76:	680b      	ldr	r3, [r1, #0]
 8017b78:	b10b      	cbz	r3, 8017b7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017b7a:	3301      	adds	r3, #1
 8017b7c:	600b      	str	r3, [r1, #0]
 8017b7e:	6803      	ldr	r3, [r0, #0]
 8017b80:	b10b      	cbz	r3, 8017b86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017b82:	881b      	ldrh	r3, [r3, #0]
 8017b84:	e7eb      	b.n	8017b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017b86:	680b      	ldr	r3, [r1, #0]
 8017b88:	2b00      	cmp	r3, #0
 8017b8a:	d0e8      	beq.n	8017b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017b8c:	781b      	ldrb	r3, [r3, #0]
 8017b8e:	e7e6      	b.n	8017b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017b90:	2a06      	cmp	r2, #6
 8017b92:	bfa8      	it	ge
 8017b94:	2206      	movge	r2, #6
 8017b96:	602a      	str	r2, [r5, #0]
 8017b98:	e7b1      	b.n	8017afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017b9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017b9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b9e:	b0a3      	sub	sp, #140	; 0x8c
 8017ba0:	2600      	movs	r6, #0
 8017ba2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017ba6:	4607      	mov	r7, r0
 8017ba8:	4688      	mov	r8, r1
 8017baa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017bae:	4631      	mov	r1, r6
 8017bb0:	2242      	movs	r2, #66	; 0x42
 8017bb2:	4648      	mov	r0, r9
 8017bb4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017bb6:	960d      	str	r6, [sp, #52]	; 0x34
 8017bb8:	f012 f881 	bl	8029cbe <memset>
 8017bbc:	b15f      	cbz	r7, 8017bd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017bbe:	f108 3aff 	add.w	sl, r8, #4294967295
 8017bc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017bc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bc6:	b152      	cbz	r2, 8017bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017bc8:	8812      	ldrh	r2, [r2, #0]
 8017bca:	b10a      	cbz	r2, 8017bd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017bcc:	459a      	cmp	sl, r3
 8017bce:	dc2e      	bgt.n	8017c2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017bd0:	2200      	movs	r2, #0
 8017bd2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017bd6:	4638      	mov	r0, r7
 8017bd8:	b023      	add	sp, #140	; 0x8c
 8017bda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bde:	9a08      	ldr	r2, [sp, #32]
 8017be0:	2a00      	cmp	r2, #0
 8017be2:	d0f5      	beq.n	8017bd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017be4:	7812      	ldrb	r2, [r2, #0]
 8017be6:	e7f0      	b.n	8017bca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017be8:	2d00      	cmp	r5, #0
 8017bea:	d0ea      	beq.n	8017bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017bec:	782a      	ldrb	r2, [r5, #0]
 8017bee:	b142      	cbz	r2, 8017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017bf0:	2a25      	cmp	r2, #37	; 0x25
 8017bf2:	d001      	beq.n	8017bf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017bf4:	459a      	cmp	sl, r3
 8017bf6:	dc08      	bgt.n	8017c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017bf8:	f1bb 0f00 	cmp.w	fp, #0
 8017bfc:	d121      	bne.n	8017c42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017bfe:	2d00      	cmp	r5, #0
 8017c00:	d0df      	beq.n	8017bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c02:	782a      	ldrb	r2, [r5, #0]
 8017c04:	f04f 0b00 	mov.w	fp, #0
 8017c08:	e01d      	b.n	8017c46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017c0a:	f1bb 0f00 	cmp.w	fp, #0
 8017c0e:	d078      	beq.n	8017d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017c10:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c14:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017c18:	f1bb 0f00 	cmp.w	fp, #0
 8017c1c:	d002      	beq.n	8017c24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017c1e:	f10b 0202 	add.w	r2, fp, #2
 8017c22:	9209      	str	r2, [sp, #36]	; 0x24
 8017c24:	b10d      	cbz	r5, 8017c2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017c26:	3501      	adds	r5, #1
 8017c28:	9508      	str	r5, [sp, #32]
 8017c2a:	3301      	adds	r3, #1
 8017c2c:	930d      	str	r3, [sp, #52]	; 0x34
 8017c2e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017c32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c34:	f1bb 0f00 	cmp.w	fp, #0
 8017c38:	d0d6      	beq.n	8017be8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017c3a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c3e:	2a00      	cmp	r2, #0
 8017c40:	d1d6      	bne.n	8017bf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017c42:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c46:	2a00      	cmp	r2, #0
 8017c48:	d0bb      	beq.n	8017bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c4a:	459a      	cmp	sl, r3
 8017c4c:	ddb9      	ble.n	8017bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c4e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017c52:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017c56:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017c5a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017c5e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017c62:	960e      	str	r6, [sp, #56]	; 0x38
 8017c64:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017c68:	960f      	str	r6, [sp, #60]	; 0x3c
 8017c6a:	f1bb 0f00 	cmp.w	fp, #0
 8017c6e:	d002      	beq.n	8017c76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017c70:	f10b 0302 	add.w	r3, fp, #2
 8017c74:	9309      	str	r3, [sp, #36]	; 0x24
 8017c76:	b10d      	cbz	r5, 8017c7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017c78:	1c6b      	adds	r3, r5, #1
 8017c7a:	9308      	str	r3, [sp, #32]
 8017c7c:	ab0f      	add	r3, sp, #60	; 0x3c
 8017c7e:	9305      	str	r3, [sp, #20]
 8017c80:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017c84:	9304      	str	r3, [sp, #16]
 8017c86:	ab0e      	add	r3, sp, #56	; 0x38
 8017c88:	9303      	str	r3, [sp, #12]
 8017c8a:	ab0c      	add	r3, sp, #48	; 0x30
 8017c8c:	9302      	str	r3, [sp, #8]
 8017c8e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017c92:	9301      	str	r3, [sp, #4]
 8017c94:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017c98:	9300      	str	r3, [sp, #0]
 8017c9a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017c9e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017ca2:	a908      	add	r1, sp, #32
 8017ca4:	a809      	add	r0, sp, #36	; 0x24
 8017ca6:	f7ff fea8 	bl	80179fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017caa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017cac:	2b00      	cmp	r3, #0
 8017cae:	bfbe      	ittt	lt
 8017cb0:	6823      	ldrlt	r3, [r4, #0]
 8017cb2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017cb6:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017cb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017cba:	bfb8      	it	lt
 8017cbc:	3404      	addlt	r4, #4
 8017cbe:	2b00      	cmp	r3, #0
 8017cc0:	bfb8      	it	lt
 8017cc2:	6823      	ldrlt	r3, [r4, #0]
 8017cc4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017cc8:	bfbe      	ittt	lt
 8017cca:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017cce:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017cd0:	3404      	addlt	r4, #4
 8017cd2:	b1d9      	cbz	r1, 8017d0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017cd4:	880b      	ldrh	r3, [r1, #0]
 8017cd6:	2b69      	cmp	r3, #105	; 0x69
 8017cd8:	d01f      	beq.n	8017d1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017cda:	d82f      	bhi.n	8017d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017cdc:	2b58      	cmp	r3, #88	; 0x58
 8017cde:	d01c      	beq.n	8017d1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017ce0:	d818      	bhi.n	8017d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017ce2:	2b25      	cmp	r3, #37	; 0x25
 8017ce4:	d034      	beq.n	8017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017ce6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017cea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cec:	f1bb 0f00 	cmp.w	fp, #0
 8017cf0:	f000 80b8 	beq.w	8017e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017cf4:	f8bb 5000 	ldrh.w	r5, [fp]
 8017cf8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017cfc:	3301      	adds	r3, #1
 8017cfe:	930d      	str	r3, [sp, #52]	; 0x34
 8017d00:	e029      	b.n	8017d56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017d02:	b10d      	cbz	r5, 8017d08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017d04:	782a      	ldrb	r2, [r5, #0]
 8017d06:	e785      	b.n	8017c14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017d08:	462a      	mov	r2, r5
 8017d0a:	e783      	b.n	8017c14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017d0c:	2a00      	cmp	r2, #0
 8017d0e:	d0ea      	beq.n	8017ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017d10:	7813      	ldrb	r3, [r2, #0]
 8017d12:	e7e0      	b.n	8017cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017d14:	3b63      	subs	r3, #99	; 0x63
 8017d16:	2b01      	cmp	r3, #1
 8017d18:	d8e5      	bhi.n	8017ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017d1a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8017d1e:	b329      	cbz	r1, 8017d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017d20:	880b      	ldrh	r3, [r1, #0]
 8017d22:	2b69      	cmp	r3, #105	; 0x69
 8017d24:	d063      	beq.n	8017dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017d26:	d825      	bhi.n	8017d74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017d28:	2b63      	cmp	r3, #99	; 0x63
 8017d2a:	d038      	beq.n	8017d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017d2c:	2b64      	cmp	r3, #100	; 0x64
 8017d2e:	d05e      	beq.n	8017dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017d30:	2b58      	cmp	r3, #88	; 0x58
 8017d32:	d07b      	beq.n	8017e2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017d34:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8017d38:	4625      	mov	r5, r4
 8017d3a:	e036      	b.n	8017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d3c:	2b73      	cmp	r3, #115	; 0x73
 8017d3e:	d0ec      	beq.n	8017d1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d40:	d802      	bhi.n	8017d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017d42:	2b6f      	cmp	r3, #111	; 0x6f
 8017d44:	d1cf      	bne.n	8017ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017d46:	e7e8      	b.n	8017d1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d48:	2b75      	cmp	r3, #117	; 0x75
 8017d4a:	d0e6      	beq.n	8017d1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d4c:	2b78      	cmp	r3, #120	; 0x78
 8017d4e:	e7f9      	b.n	8017d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017d50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d52:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017d56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d58:	b10b      	cbz	r3, 8017d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017d5a:	3302      	adds	r3, #2
 8017d5c:	9309      	str	r3, [sp, #36]	; 0x24
 8017d5e:	9b08      	ldr	r3, [sp, #32]
 8017d60:	2b00      	cmp	r3, #0
 8017d62:	f43f af2e 	beq.w	8017bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017d66:	3301      	adds	r3, #1
 8017d68:	9308      	str	r3, [sp, #32]
 8017d6a:	e72a      	b.n	8017bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017d6c:	2a00      	cmp	r2, #0
 8017d6e:	d0e1      	beq.n	8017d34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017d70:	7813      	ldrb	r3, [r2, #0]
 8017d72:	e7d6      	b.n	8017d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017d74:	2b73      	cmp	r3, #115	; 0x73
 8017d76:	d036      	beq.n	8017de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017d78:	d807      	bhi.n	8017d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017d7a:	2b6f      	cmp	r3, #111	; 0x6f
 8017d7c:	d1da      	bne.n	8017d34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017d7e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d80:	1d25      	adds	r5, r4, #4
 8017d82:	eba8 0202 	sub.w	r2, r8, r2
 8017d86:	2308      	movs	r3, #8
 8017d88:	e04a      	b.n	8017e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017d8a:	2b75      	cmp	r3, #117	; 0x75
 8017d8c:	d043      	beq.n	8017e16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017d8e:	2b78      	cmp	r3, #120	; 0x78
 8017d90:	d1d0      	bne.n	8017d34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017d92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d94:	1d25      	adds	r5, r4, #4
 8017d96:	eba8 0202 	sub.w	r2, r8, r2
 8017d9a:	2310      	movs	r3, #16
 8017d9c:	e040      	b.n	8017e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017d9e:	6823      	ldr	r3, [r4, #0]
 8017da0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8017da4:	1d25      	adds	r5, r4, #4
 8017da6:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8017daa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017dac:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017db0:	2b00      	cmp	r3, #0
 8017db2:	d052      	beq.n	8017e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017db4:	881a      	ldrh	r2, [r3, #0]
 8017db6:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017dba:	a80d      	add	r0, sp, #52	; 0x34
 8017dbc:	9005      	str	r0, [sp, #20]
 8017dbe:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8017dc2:	9004      	str	r0, [sp, #16]
 8017dc4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017dc6:	9003      	str	r0, [sp, #12]
 8017dc8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017dcc:	9002      	str	r0, [sp, #8]
 8017dce:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017dd0:	9001      	str	r0, [sp, #4]
 8017dd2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8017dd6:	9000      	str	r0, [sp, #0]
 8017dd8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017ddc:	a810      	add	r0, sp, #64	; 0x40
 8017dde:	f7ff fd49 	bl	8017874 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017de2:	462c      	mov	r4, r5
 8017de4:	e7b7      	b.n	8017d56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017de6:	6823      	ldr	r3, [r4, #0]
 8017de8:	1d25      	adds	r5, r4, #4
 8017dea:	9310      	str	r3, [sp, #64]	; 0x40
 8017dec:	e7dd      	b.n	8017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017dee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017df0:	6820      	ldr	r0, [r4, #0]
 8017df2:	eba8 0202 	sub.w	r2, r8, r2
 8017df6:	230a      	movs	r3, #10
 8017df8:	b292      	uxth	r2, r2
 8017dfa:	4649      	mov	r1, r9
 8017dfc:	f7ff fce4 	bl	80177c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017e00:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8017e04:	2b2d      	cmp	r3, #45	; 0x2d
 8017e06:	f104 0504 	add.w	r5, r4, #4
 8017e0a:	d1ce      	bne.n	8017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e0c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017e10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e12:	3302      	adds	r3, #2
 8017e14:	e7e9      	b.n	8017dea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017e16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e18:	1d25      	adds	r5, r4, #4
 8017e1a:	eba8 0202 	sub.w	r2, r8, r2
 8017e1e:	230a      	movs	r3, #10
 8017e20:	b292      	uxth	r2, r2
 8017e22:	4649      	mov	r1, r9
 8017e24:	6820      	ldr	r0, [r4, #0]
 8017e26:	f7ff fcfb 	bl	8017820 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017e2a:	e7be      	b.n	8017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e2c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e2e:	6820      	ldr	r0, [r4, #0]
 8017e30:	eba8 0202 	sub.w	r2, r8, r2
 8017e34:	b292      	uxth	r2, r2
 8017e36:	2310      	movs	r3, #16
 8017e38:	4649      	mov	r1, r9
 8017e3a:	f7ff fcf1 	bl	8017820 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017e3e:	1d25      	adds	r5, r4, #4
 8017e40:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8017e44:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017e48:	2b00      	cmp	r3, #0
 8017e4a:	d0ae      	beq.n	8017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e4c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017e50:	2919      	cmp	r1, #25
 8017e52:	d8f7      	bhi.n	8017e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017e54:	3b20      	subs	r3, #32
 8017e56:	8013      	strh	r3, [r2, #0]
 8017e58:	e7f4      	b.n	8017e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017e5a:	9a08      	ldr	r2, [sp, #32]
 8017e5c:	2a00      	cmp	r2, #0
 8017e5e:	d0aa      	beq.n	8017db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017e60:	7812      	ldrb	r2, [r2, #0]
 8017e62:	e7a8      	b.n	8017db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017e64:	2d00      	cmp	r5, #0
 8017e66:	f43f af47 	beq.w	8017cf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017e6a:	782d      	ldrb	r5, [r5, #0]
 8017e6c:	e744      	b.n	8017cf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017e6e:	b507      	push	{r0, r1, r2, lr}
 8017e70:	9300      	str	r3, [sp, #0]
 8017e72:	4613      	mov	r3, r2
 8017e74:	2200      	movs	r2, #0
 8017e76:	f7ff fe90 	bl	8017b9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017e7a:	b003      	add	sp, #12
 8017e7c:	f85d fb04 	ldr.w	pc, [sp], #4

08017e80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017e80:	b40c      	push	{r2, r3}
 8017e82:	b507      	push	{r0, r1, r2, lr}
 8017e84:	ab04      	add	r3, sp, #16
 8017e86:	f853 2b04 	ldr.w	r2, [r3], #4
 8017e8a:	9301      	str	r3, [sp, #4]
 8017e8c:	f7ff ffef 	bl	8017e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017e90:	b003      	add	sp, #12
 8017e92:	f85d eb04 	ldr.w	lr, [sp], #4
 8017e96:	b002      	add	sp, #8
 8017e98:	4770      	bx	lr
	...

08017e9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8017e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ea0:	b0c5      	sub	sp, #276	; 0x114
 8017ea2:	2400      	movs	r4, #0
 8017ea4:	af11      	add	r7, sp, #68	; 0x44
 8017ea6:	4606      	mov	r6, r0
 8017ea8:	468a      	mov	sl, r1
 8017eaa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017eae:	4621      	mov	r1, r4
 8017eb0:	22c8      	movs	r2, #200	; 0xc8
 8017eb2:	4638      	mov	r0, r7
 8017eb4:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8017eb8:	940d      	str	r4, [sp, #52]	; 0x34
 8017eba:	f011 ff00 	bl	8029cbe <memset>
 8017ebe:	b16e      	cbz	r6, 8017edc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8017ec0:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8018164 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8017ec4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ec6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ec8:	b162      	cbz	r2, 8017ee4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8017eca:	8812      	ldrh	r2, [r2, #0]
 8017ecc:	b11a      	cbz	r2, 8017ed6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8017ece:	f10a 31ff 	add.w	r1, sl, #4294967295
 8017ed2:	4299      	cmp	r1, r3
 8017ed4:	dc2e      	bgt.n	8017f34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8017ed6:	2200      	movs	r2, #0
 8017ed8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017edc:	4630      	mov	r0, r6
 8017ede:	b045      	add	sp, #276	; 0x114
 8017ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ee4:	9a08      	ldr	r2, [sp, #32]
 8017ee6:	2a00      	cmp	r2, #0
 8017ee8:	d0f5      	beq.n	8017ed6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8017eea:	7812      	ldrb	r2, [r2, #0]
 8017eec:	e7ee      	b.n	8017ecc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8017eee:	2d00      	cmp	r5, #0
 8017ef0:	d0e8      	beq.n	8017ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017ef2:	782a      	ldrb	r2, [r5, #0]
 8017ef4:	b142      	cbz	r2, 8017f08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8017ef6:	2a25      	cmp	r2, #37	; 0x25
 8017ef8:	d001      	beq.n	8017efe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8017efa:	4299      	cmp	r1, r3
 8017efc:	dc08      	bgt.n	8017f10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8017efe:	f1b8 0f00 	cmp.w	r8, #0
 8017f02:	d121      	bne.n	8017f48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8017f04:	2d00      	cmp	r5, #0
 8017f06:	d0dd      	beq.n	8017ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017f08:	782a      	ldrb	r2, [r5, #0]
 8017f0a:	f04f 0800 	mov.w	r8, #0
 8017f0e:	e01d      	b.n	8017f4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8017f10:	f1b8 0f00 	cmp.w	r8, #0
 8017f14:	d07f      	beq.n	8018016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8017f16:	f8b8 2000 	ldrh.w	r2, [r8]
 8017f1a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017f1e:	f1b8 0f00 	cmp.w	r8, #0
 8017f22:	d002      	beq.n	8017f2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8017f24:	f108 0202 	add.w	r2, r8, #2
 8017f28:	9209      	str	r2, [sp, #36]	; 0x24
 8017f2a:	b10d      	cbz	r5, 8017f30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8017f2c:	3501      	adds	r5, #1
 8017f2e:	9508      	str	r5, [sp, #32]
 8017f30:	3301      	adds	r3, #1
 8017f32:	930d      	str	r3, [sp, #52]	; 0x34
 8017f34:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8017f38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f3a:	f1b8 0f00 	cmp.w	r8, #0
 8017f3e:	d0d6      	beq.n	8017eee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8017f40:	f8b8 2000 	ldrh.w	r2, [r8]
 8017f44:	2a00      	cmp	r2, #0
 8017f46:	d1d6      	bne.n	8017ef6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8017f48:	f8b8 2000 	ldrh.w	r2, [r8]
 8017f4c:	2a00      	cmp	r2, #0
 8017f4e:	d0b9      	beq.n	8017ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017f50:	4299      	cmp	r1, r3
 8017f52:	ddb7      	ble.n	8017ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017f54:	2300      	movs	r3, #0
 8017f56:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017f5a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8017f5e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8017f62:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8017f66:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8017f6a:	930e      	str	r3, [sp, #56]	; 0x38
 8017f6c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8017f70:	930f      	str	r3, [sp, #60]	; 0x3c
 8017f72:	f1b8 0f00 	cmp.w	r8, #0
 8017f76:	d002      	beq.n	8017f7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8017f78:	f108 0302 	add.w	r3, r8, #2
 8017f7c:	9309      	str	r3, [sp, #36]	; 0x24
 8017f7e:	b10d      	cbz	r5, 8017f84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8017f80:	1c6b      	adds	r3, r5, #1
 8017f82:	9308      	str	r3, [sp, #32]
 8017f84:	ab0f      	add	r3, sp, #60	; 0x3c
 8017f86:	9305      	str	r3, [sp, #20]
 8017f88:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017f8c:	9304      	str	r3, [sp, #16]
 8017f8e:	ab0e      	add	r3, sp, #56	; 0x38
 8017f90:	9303      	str	r3, [sp, #12]
 8017f92:	ab0c      	add	r3, sp, #48	; 0x30
 8017f94:	9302      	str	r3, [sp, #8]
 8017f96:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017f9a:	9301      	str	r3, [sp, #4]
 8017f9c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017fa0:	9300      	str	r3, [sp, #0]
 8017fa2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017fa6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017faa:	a908      	add	r1, sp, #32
 8017fac:	a809      	add	r0, sp, #36	; 0x24
 8017fae:	f7ff fd24 	bl	80179fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fb4:	2b00      	cmp	r3, #0
 8017fb6:	da0b      	bge.n	8017fd0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8017fb8:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8017fbc:	edd3 7a00 	vldr	s15, [r3]
 8017fc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017fc4:	3401      	adds	r4, #1
 8017fc6:	ee17 3a90 	vmov	r3, s15
 8017fca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017fce:	930e      	str	r3, [sp, #56]	; 0x38
 8017fd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017fd2:	2b00      	cmp	r3, #0
 8017fd4:	da0b      	bge.n	8017fee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8017fd6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8017fda:	edd3 7a00 	vldr	s15, [r3]
 8017fde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017fe2:	3401      	adds	r4, #1
 8017fe4:	ee17 3a90 	vmov	r3, s15
 8017fe8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017fec:	930f      	str	r3, [sp, #60]	; 0x3c
 8017fee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ff0:	b1b3      	cbz	r3, 8018020 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8017ff2:	881a      	ldrh	r2, [r3, #0]
 8017ff4:	2a25      	cmp	r2, #37	; 0x25
 8017ff6:	d018      	beq.n	801802a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8017ff8:	2a66      	cmp	r2, #102	; 0x66
 8017ffa:	d01c      	beq.n	8018036 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8017ffc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018000:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018002:	f1b8 0f00 	cmp.w	r8, #0
 8018006:	f000 8121 	beq.w	801824c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801800a:	f8b8 5000 	ldrh.w	r5, [r8]
 801800e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8018012:	3301      	adds	r3, #1
 8018014:	e00d      	b.n	8018032 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8018016:	b10d      	cbz	r5, 801801c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018018:	782a      	ldrb	r2, [r5, #0]
 801801a:	e77e      	b.n	8017f1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801801c:	462a      	mov	r2, r5
 801801e:	e77c      	b.n	8017f1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018020:	9b08      	ldr	r3, [sp, #32]
 8018022:	2b00      	cmp	r3, #0
 8018024:	d0ea      	beq.n	8017ffc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8018026:	781a      	ldrb	r2, [r3, #0]
 8018028:	e7e4      	b.n	8017ff4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801802a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801802c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018030:	3302      	adds	r3, #2
 8018032:	930d      	str	r3, [sp, #52]	; 0x34
 8018034:	e041      	b.n	80180ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8018036:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801803a:	edd3 7a00 	vldr	s15, [r3]
 801803e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018042:	9710      	str	r7, [sp, #64]	; 0x40
 8018044:	3401      	adds	r4, #1
 8018046:	b923      	cbnz	r3, 8018052 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018048:	2301      	movs	r3, #1
 801804a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801804e:	2306      	movs	r3, #6
 8018050:	930f      	str	r3, [sp, #60]	; 0x3c
 8018052:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801805a:	bf48      	it	mi
 801805c:	eef1 7a67 	vnegmi.f32	s15, s15
 8018060:	eeb0 7ae7 	vabs.f32	s14, s15
 8018064:	bf48      	it	mi
 8018066:	232d      	movmi	r3, #45	; 0x2d
 8018068:	eeb4 7a45 	vcmp.f32	s14, s10
 801806c:	bf48      	it	mi
 801806e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018076:	dd2b      	ble.n	80180d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018078:	4b3b      	ldr	r3, [pc, #236]	; (8018168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801807a:	9311      	str	r3, [sp, #68]	; 0x44
 801807c:	2366      	movs	r3, #102	; 0x66
 801807e:	9312      	str	r3, [sp, #72]	; 0x48
 8018080:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018082:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018086:	2b00      	cmp	r3, #0
 8018088:	f000 80da 	beq.w	8018240 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801808c:	881a      	ldrh	r2, [r3, #0]
 801808e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018092:	a80d      	add	r0, sp, #52	; 0x34
 8018094:	9005      	str	r0, [sp, #20]
 8018096:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801809a:	9004      	str	r0, [sp, #16]
 801809c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801809e:	9003      	str	r0, [sp, #12]
 80180a0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80180a4:	9002      	str	r0, [sp, #8]
 80180a6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180a8:	9001      	str	r0, [sp, #4]
 80180aa:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80180ae:	9000      	str	r0, [sp, #0]
 80180b0:	e9cd a606 	strd	sl, r6, [sp, #24]
 80180b4:	a810      	add	r0, sp, #64	; 0x40
 80180b6:	f7ff fbdd 	bl	8017874 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80180ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180bc:	b10b      	cbz	r3, 80180c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80180be:	3302      	adds	r3, #2
 80180c0:	9309      	str	r3, [sp, #36]	; 0x24
 80180c2:	9b08      	ldr	r3, [sp, #32]
 80180c4:	2b00      	cmp	r3, #0
 80180c6:	f43f aefd 	beq.w	8017ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80180ca:	3301      	adds	r3, #1
 80180cc:	9308      	str	r3, [sp, #32]
 80180ce:	e6f9      	b.n	8017ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80180d0:	eef4 7a67 	vcmp.f32	s15, s15
 80180d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80180d8:	d63a      	bvs.n	8018150 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80180da:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80180de:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80180e2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80180e6:	eeb0 6a67 	vmov.f32	s12, s15
 80180ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80180ee:	eef0 5a47 	vmov.f32	s11, s14
 80180f2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80180f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80180fa:	da2d      	bge.n	8018158 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80180fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180fe:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8018102:	2100      	movs	r1, #0
 8018104:	eef0 4a46 	vmov.f32	s9, s12
 8018108:	ebaa 0202 	sub.w	r2, sl, r2
 801810c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018114:	b28d      	uxth	r5, r1
 8018116:	db2c      	blt.n	8018172 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018118:	1a53      	subs	r3, r2, r1
 801811a:	2b00      	cmp	r3, #0
 801811c:	dd29      	ble.n	8018172 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801811e:	3101      	adds	r1, #1
 8018120:	2964      	cmp	r1, #100	; 0x64
 8018122:	d025      	beq.n	8018170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8018124:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018128:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801812c:	ee17 3a10 	vmov	r3, s14
 8018130:	2b09      	cmp	r3, #9
 8018132:	bfa8      	it	ge
 8018134:	2309      	movge	r3, #9
 8018136:	ee07 3a10 	vmov	s14, r3
 801813a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801813e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8018142:	eee7 7a66 	vfms.f32	s15, s14, s13
 8018146:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801814a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801814e:	e7dd      	b.n	801810c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018150:	4b06      	ldr	r3, [pc, #24]	; (801816c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8018152:	9311      	str	r3, [sp, #68]	; 0x44
 8018154:	236e      	movs	r3, #110	; 0x6e
 8018156:	e792      	b.n	801807e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018158:	ee66 6a87 	vmul.f32	s13, s13, s14
 801815c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018160:	e7c7      	b.n	80180f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8018162:	bf00      	nop
 8018164:	7f7fffff 	.word	0x7f7fffff
 8018168:	006e0069 	.word	0x006e0069
 801816c:	0061006e 	.word	0x0061006e
 8018170:	2563      	movs	r5, #99	; 0x63
 8018172:	2a63      	cmp	r2, #99	; 0x63
 8018174:	bfd4      	ite	le
 8018176:	ebc5 0202 	rsble	r2, r5, r2
 801817a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801817e:	2a00      	cmp	r2, #0
 8018180:	dd43      	ble.n	801820a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018182:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018184:	2b00      	cmp	r3, #0
 8018186:	dd40      	ble.n	801820a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018188:	f04f 0901 	mov.w	r9, #1
 801818c:	210a      	movs	r1, #10
 801818e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8018192:	d30c      	bcc.n	80181ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8018194:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018198:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801819c:	ee17 0a10 	vmov	r0, s14
 80181a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80181a4:	fb01 0909 	mla	r9, r1, r9, r0
 80181a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80181ac:	e7ef      	b.n	801818e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80181ae:	3501      	adds	r5, #1
 80181b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80181b2:	b292      	uxth	r2, r2
 80181b4:	230a      	movs	r3, #10
 80181b6:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80181ba:	4648      	mov	r0, r9
 80181bc:	f7ff fb4e 	bl	801785c <_ZN8touchgfx7Unicode4itoaElPtti>
 80181c0:	f1b9 0f01 	cmp.w	r9, #1
 80181c4:	dc1f      	bgt.n	8018206 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80181c6:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80181ca:	2b00      	cmp	r3, #0
 80181cc:	bf0c      	ite	eq
 80181ce:	2300      	moveq	r3, #0
 80181d0:	232e      	movne	r3, #46	; 0x2e
 80181d2:	aa44      	add	r2, sp, #272	; 0x110
 80181d4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80181d8:	eef4 7ae4 	vcmpe.f32	s15, s9
 80181dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80181e0:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80181e4:	f6ff af4c 	blt.w	8018080 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80181e8:	2300      	movs	r3, #0
 80181ea:	f838 2b02 	ldrh.w	r2, [r8], #2
 80181ee:	1c59      	adds	r1, r3, #1
 80181f0:	b98a      	cbnz	r2, 8018216 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80181f2:	b29b      	uxth	r3, r3
 80181f4:	2130      	movs	r1, #48	; 0x30
 80181f6:	b983      	cbnz	r3, 801821a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80181f8:	2331      	movs	r3, #49	; 0x31
 80181fa:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80181fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018200:	3b02      	subs	r3, #2
 8018202:	9310      	str	r3, [sp, #64]	; 0x40
 8018204:	e73c      	b.n	8018080 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018206:	232e      	movs	r3, #46	; 0x2e
 8018208:	e7e3      	b.n	80181d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801820a:	ab44      	add	r3, sp, #272	; 0x110
 801820c:	3501      	adds	r5, #1
 801820e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018212:	2300      	movs	r3, #0
 8018214:	e7e0      	b.n	80181d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8018216:	460b      	mov	r3, r1
 8018218:	e7e7      	b.n	80181ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801821a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801821e:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8018222:	2808      	cmp	r0, #8
 8018224:	d806      	bhi.n	8018234 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8018226:	a944      	add	r1, sp, #272	; 0x110
 8018228:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801822c:	3201      	adds	r2, #1
 801822e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8018232:	e725      	b.n	8018080 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018234:	2a39      	cmp	r2, #57	; 0x39
 8018236:	bf08      	it	eq
 8018238:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801823c:	3b01      	subs	r3, #1
 801823e:	e7da      	b.n	80181f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018240:	9a08      	ldr	r2, [sp, #32]
 8018242:	2a00      	cmp	r2, #0
 8018244:	f43f af23 	beq.w	801808e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018248:	7812      	ldrb	r2, [r2, #0]
 801824a:	e720      	b.n	801808e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801824c:	2d00      	cmp	r5, #0
 801824e:	f43f aede 	beq.w	801800e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018252:	782d      	ldrb	r5, [r5, #0]
 8018254:	e6db      	b.n	801800e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018256:	bf00      	nop

08018258 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018258:	b507      	push	{r0, r1, r2, lr}
 801825a:	9300      	str	r3, [sp, #0]
 801825c:	4613      	mov	r3, r2
 801825e:	2200      	movs	r2, #0
 8018260:	f7ff fe1c 	bl	8017e9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8018264:	b003      	add	sp, #12
 8018266:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801826c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801826c:	4b01      	ldr	r3, [pc, #4]	; (8018274 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801826e:	6018      	str	r0, [r3, #0]
 8018270:	4770      	bx	lr
 8018272:	bf00      	nop
 8018274:	20012e0c 	.word	0x20012e0c

08018278 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018278:	4b06      	ldr	r3, [pc, #24]	; (8018294 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801827a:	881a      	ldrh	r2, [r3, #0]
 801827c:	4282      	cmp	r2, r0
 801827e:	d807      	bhi.n	8018290 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018280:	4b05      	ldr	r3, [pc, #20]	; (8018298 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018282:	881b      	ldrh	r3, [r3, #0]
 8018284:	4413      	add	r3, r2
 8018286:	4298      	cmp	r0, r3
 8018288:	bfac      	ite	ge
 801828a:	2000      	movge	r0, #0
 801828c:	2001      	movlt	r0, #1
 801828e:	4770      	bx	lr
 8018290:	2000      	movs	r0, #0
 8018292:	4770      	bx	lr
 8018294:	20012e2c 	.word	0x20012e2c
 8018298:	20012e30 	.word	0x20012e30

0801829c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801829c:	b508      	push	{r3, lr}
 801829e:	4601      	mov	r1, r0
 80182a0:	f7ff ffea 	bl	8018278 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80182a4:	b118      	cbz	r0, 80182ae <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80182a6:	4b02      	ldr	r3, [pc, #8]	; (80182b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80182a8:	681b      	ldr	r3, [r3, #0]
 80182aa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80182ae:	bd08      	pop	{r3, pc}
 80182b0:	20012e10 	.word	0x20012e10

080182b4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80182b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80182b6:	4c24      	ldr	r4, [pc, #144]	; (8018348 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80182b8:	6823      	ldr	r3, [r4, #0]
 80182ba:	2b00      	cmp	r3, #0
 80182bc:	d042      	beq.n	8018344 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80182be:	4a23      	ldr	r2, [pc, #140]	; (801834c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80182c0:	4d23      	ldr	r5, [pc, #140]	; (8018350 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80182c2:	8811      	ldrh	r1, [r2, #0]
 80182c4:	f8b5 c000 	ldrh.w	ip, [r5]
 80182c8:	4822      	ldr	r0, [pc, #136]	; (8018354 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80182ca:	4461      	add	r1, ip
 80182cc:	1c4a      	adds	r2, r1, #1
 80182ce:	f022 0201 	bic.w	r2, r2, #1
 80182d2:	008f      	lsls	r7, r1, #2
 80182d4:	0412      	lsls	r2, r2, #16
 80182d6:	19de      	adds	r6, r3, r7
 80182d8:	0c12      	lsrs	r2, r2, #16
 80182da:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80182de:	6006      	str	r6, [r0, #0]
 80182e0:	4e1d      	ldr	r6, [pc, #116]	; (8018358 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80182e2:	19da      	adds	r2, r3, r7
 80182e4:	6032      	str	r2, [r6, #0]
 80182e6:	220e      	movs	r2, #14
 80182e8:	fb02 f20c 	mul.w	r2, r2, ip
 80182ec:	3203      	adds	r2, #3
 80182ee:	f022 0203 	bic.w	r2, r2, #3
 80182f2:	443a      	add	r2, r7
 80182f4:	4f19      	ldr	r7, [pc, #100]	; (801835c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80182f6:	4413      	add	r3, r2
 80182f8:	603b      	str	r3, [r7, #0]
 80182fa:	4f19      	ldr	r7, [pc, #100]	; (8018360 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80182fc:	2300      	movs	r3, #0
 80182fe:	803b      	strh	r3, [r7, #0]
 8018300:	4f18      	ldr	r7, [pc, #96]	; (8018364 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8018302:	683f      	ldr	r7, [r7, #0]
 8018304:	1aba      	subs	r2, r7, r2
 8018306:	4f18      	ldr	r7, [pc, #96]	; (8018368 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018308:	603a      	str	r2, [r7, #0]
 801830a:	4a18      	ldr	r2, [pc, #96]	; (801836c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801830c:	469c      	mov	ip, r3
 801830e:	8013      	strh	r3, [r2, #0]
 8018310:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8018314:	428b      	cmp	r3, r1
 8018316:	d10d      	bne.n	8018334 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018318:	882d      	ldrh	r5, [r5, #0]
 801831a:	6830      	ldr	r0, [r6, #0]
 801831c:	2300      	movs	r3, #0
 801831e:	240e      	movs	r4, #14
 8018320:	429d      	cmp	r5, r3
 8018322:	d90f      	bls.n	8018344 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018324:	fb04 0203 	mla	r2, r4, r3, r0
 8018328:	3301      	adds	r3, #1
 801832a:	7b11      	ldrb	r1, [r2, #12]
 801832c:	f36f 1145 	bfc	r1, #5, #1
 8018330:	7311      	strb	r1, [r2, #12]
 8018332:	e7f5      	b.n	8018320 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8018334:	6822      	ldr	r2, [r4, #0]
 8018336:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801833a:	6802      	ldr	r2, [r0, #0]
 801833c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018340:	3301      	adds	r3, #1
 8018342:	e7e7      	b.n	8018314 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8018344:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018346:	bf00      	nop
 8018348:	20012e10 	.word	0x20012e10
 801834c:	20012e2c 	.word	0x20012e2c
 8018350:	20012e30 	.word	0x20012e30
 8018354:	20012e24 	.word	0x20012e24
 8018358:	20012e14 	.word	0x20012e14
 801835c:	20012e1c 	.word	0x20012e1c
 8018360:	20012e2e 	.word	0x20012e2e
 8018364:	20012e18 	.word	0x20012e18
 8018368:	20012e28 	.word	0x20012e28
 801836c:	20012e20 	.word	0x20012e20

08018370 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018370:	4b06      	ldr	r3, [pc, #24]	; (801838c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018372:	681b      	ldr	r3, [r3, #0]
 8018374:	b943      	cbnz	r3, 8018388 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018376:	b139      	cbz	r1, 8018388 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018378:	4b05      	ldr	r3, [pc, #20]	; (8018390 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801837a:	801a      	strh	r2, [r3, #0]
 801837c:	4b05      	ldr	r3, [pc, #20]	; (8018394 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801837e:	6019      	str	r1, [r3, #0]
 8018380:	4b05      	ldr	r3, [pc, #20]	; (8018398 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018382:	6018      	str	r0, [r3, #0]
 8018384:	f7ff bf96 	b.w	80182b4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018388:	4770      	bx	lr
 801838a:	bf00      	nop
 801838c:	20012e1c 	.word	0x20012e1c
 8018390:	20012e30 	.word	0x20012e30
 8018394:	20012e18 	.word	0x20012e18
 8018398:	20012e10 	.word	0x20012e10

0801839c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801839c:	b470      	push	{r4, r5, r6}
 801839e:	4c07      	ldr	r4, [pc, #28]	; (80183bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80183a0:	6826      	ldr	r6, [r4, #0]
 80183a2:	4605      	mov	r5, r0
 80183a4:	4610      	mov	r0, r2
 80183a6:	9a03      	ldr	r2, [sp, #12]
 80183a8:	b936      	cbnz	r6, 80183b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80183aa:	6025      	str	r5, [r4, #0]
 80183ac:	4c04      	ldr	r4, [pc, #16]	; (80183c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80183ae:	8021      	strh	r1, [r4, #0]
 80183b0:	bc70      	pop	{r4, r5, r6}
 80183b2:	4619      	mov	r1, r3
 80183b4:	f7ff bfdc 	b.w	8018370 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80183b8:	bc70      	pop	{r4, r5, r6}
 80183ba:	4770      	bx	lr
 80183bc:	20012e34 	.word	0x20012e34
 80183c0:	20012e2c 	.word	0x20012e2c

080183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80183c4:	4a12      	ldr	r2, [pc, #72]	; (8018410 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80183c6:	8803      	ldrh	r3, [r0, #0]
 80183c8:	8812      	ldrh	r2, [r2, #0]
 80183ca:	4293      	cmp	r3, r2
 80183cc:	d207      	bcs.n	80183de <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80183ce:	4a11      	ldr	r2, [pc, #68]	; (8018414 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80183d0:	6812      	ldr	r2, [r2, #0]
 80183d2:	2114      	movs	r1, #20
 80183d4:	fb01 2303 	mla	r3, r1, r3, r2
 80183d8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80183dc:	4770      	bx	lr
 80183de:	490e      	ldr	r1, [pc, #56]	; (8018418 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80183e0:	8809      	ldrh	r1, [r1, #0]
 80183e2:	4411      	add	r1, r2
 80183e4:	428b      	cmp	r3, r1
 80183e6:	da04      	bge.n	80183f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80183e8:	1a9b      	subs	r3, r3, r2
 80183ea:	4a0c      	ldr	r2, [pc, #48]	; (801841c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80183ec:	210e      	movs	r1, #14
 80183ee:	6812      	ldr	r2, [r2, #0]
 80183f0:	e7f0      	b.n	80183d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80183f2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80183f6:	4293      	cmp	r3, r2
 80183f8:	d108      	bne.n	801840c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80183fa:	4b09      	ldr	r3, [pc, #36]	; (8018420 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80183fc:	781b      	ldrb	r3, [r3, #0]
 80183fe:	b91b      	cbnz	r3, 8018408 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018400:	4b08      	ldr	r3, [pc, #32]	; (8018424 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8018402:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018406:	4770      	bx	lr
 8018408:	4b07      	ldr	r3, [pc, #28]	; (8018428 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801840a:	e7fa      	b.n	8018402 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801840c:	2000      	movs	r0, #0
 801840e:	4770      	bx	lr
 8018410:	20012e2c 	.word	0x20012e2c
 8018414:	20012e34 	.word	0x20012e34
 8018418:	20012e30 	.word	0x20012e30
 801841c:	20012e14 	.word	0x20012e14
 8018420:	20012d9c 	.word	0x20012d9c
 8018424:	20012d9e 	.word	0x20012d9e
 8018428:	20012da0 	.word	0x20012da0

0801842c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801842c:	4a12      	ldr	r2, [pc, #72]	; (8018478 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801842e:	8803      	ldrh	r3, [r0, #0]
 8018430:	8812      	ldrh	r2, [r2, #0]
 8018432:	4293      	cmp	r3, r2
 8018434:	d207      	bcs.n	8018446 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8018436:	4a11      	ldr	r2, [pc, #68]	; (801847c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018438:	6812      	ldr	r2, [r2, #0]
 801843a:	2114      	movs	r1, #20
 801843c:	fb01 2303 	mla	r3, r1, r3, r2
 8018440:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8018444:	4770      	bx	lr
 8018446:	490e      	ldr	r1, [pc, #56]	; (8018480 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018448:	8809      	ldrh	r1, [r1, #0]
 801844a:	4411      	add	r1, r2
 801844c:	428b      	cmp	r3, r1
 801844e:	da04      	bge.n	801845a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018450:	1a9b      	subs	r3, r3, r2
 8018452:	4a0c      	ldr	r2, [pc, #48]	; (8018484 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018454:	210e      	movs	r1, #14
 8018456:	6812      	ldr	r2, [r2, #0]
 8018458:	e7f0      	b.n	801843c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801845a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801845e:	4293      	cmp	r3, r2
 8018460:	d108      	bne.n	8018474 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018462:	4b09      	ldr	r3, [pc, #36]	; (8018488 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018464:	781b      	ldrb	r3, [r3, #0]
 8018466:	b91b      	cbnz	r3, 8018470 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018468:	4b08      	ldr	r3, [pc, #32]	; (801848c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801846a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801846e:	4770      	bx	lr
 8018470:	4b07      	ldr	r3, [pc, #28]	; (8018490 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018472:	e7fa      	b.n	801846a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018474:	2000      	movs	r0, #0
 8018476:	4770      	bx	lr
 8018478:	20012e2c 	.word	0x20012e2c
 801847c:	20012e34 	.word	0x20012e34
 8018480:	20012e30 	.word	0x20012e30
 8018484:	20012e14 	.word	0x20012e14
 8018488:	20012d9c 	.word	0x20012d9c
 801848c:	20012da0 	.word	0x20012da0
 8018490:	20012d9e 	.word	0x20012d9e

08018494 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018494:	b510      	push	{r4, lr}
 8018496:	4a1f      	ldr	r2, [pc, #124]	; (8018514 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018498:	880b      	ldrh	r3, [r1, #0]
 801849a:	8812      	ldrh	r2, [r2, #0]
 801849c:	4293      	cmp	r3, r2
 801849e:	d213      	bcs.n	80184c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80184a0:	4a1d      	ldr	r2, [pc, #116]	; (8018518 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80184a2:	6812      	ldr	r2, [r2, #0]
 80184a4:	2114      	movs	r1, #20
 80184a6:	fb01 2303 	mla	r3, r1, r3, r2
 80184aa:	8a1a      	ldrh	r2, [r3, #16]
 80184ac:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80184b0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80184b4:	8a5b      	ldrh	r3, [r3, #18]
 80184b6:	8004      	strh	r4, [r0, #0]
 80184b8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80184bc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80184c0:	8041      	strh	r1, [r0, #2]
 80184c2:	8082      	strh	r2, [r0, #4]
 80184c4:	80c3      	strh	r3, [r0, #6]
 80184c6:	e00e      	b.n	80184e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80184c8:	4914      	ldr	r1, [pc, #80]	; (801851c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80184ca:	8809      	ldrh	r1, [r1, #0]
 80184cc:	4411      	add	r1, r2
 80184ce:	428b      	cmp	r3, r1
 80184d0:	da0a      	bge.n	80184e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80184d2:	1a9b      	subs	r3, r3, r2
 80184d4:	4a12      	ldr	r2, [pc, #72]	; (8018520 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80184d6:	6812      	ldr	r2, [r2, #0]
 80184d8:	210e      	movs	r1, #14
 80184da:	fb01 2303 	mla	r3, r1, r3, r2
 80184de:	681a      	ldr	r2, [r3, #0]
 80184e0:	6002      	str	r2, [r0, #0]
 80184e2:	685a      	ldr	r2, [r3, #4]
 80184e4:	6042      	str	r2, [r0, #4]
 80184e6:	bd10      	pop	{r4, pc}
 80184e8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80184ec:	4293      	cmp	r3, r2
 80184ee:	d10b      	bne.n	8018508 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80184f0:	4b0c      	ldr	r3, [pc, #48]	; (8018524 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80184f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80184f6:	4b0c      	ldr	r3, [pc, #48]	; (8018528 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80184f8:	8081      	strh	r1, [r0, #4]
 80184fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80184fe:	80c2      	strh	r2, [r0, #6]
 8018500:	2300      	movs	r3, #0
 8018502:	8003      	strh	r3, [r0, #0]
 8018504:	8043      	strh	r3, [r0, #2]
 8018506:	e7ee      	b.n	80184e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018508:	2300      	movs	r3, #0
 801850a:	8003      	strh	r3, [r0, #0]
 801850c:	8043      	strh	r3, [r0, #2]
 801850e:	8083      	strh	r3, [r0, #4]
 8018510:	e7d8      	b.n	80184c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018512:	bf00      	nop
 8018514:	20012e2c 	.word	0x20012e2c
 8018518:	20012e34 	.word	0x20012e34
 801851c:	20012e30 	.word	0x20012e30
 8018520:	20012e14 	.word	0x20012e14
 8018524:	20012d98 	.word	0x20012d98
 8018528:	20012d9a 	.word	0x20012d9a

0801852c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801852c:	4a17      	ldr	r2, [pc, #92]	; (801858c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801852e:	8803      	ldrh	r3, [r0, #0]
 8018530:	8812      	ldrh	r2, [r2, #0]
 8018532:	4293      	cmp	r3, r2
 8018534:	d213      	bcs.n	801855e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8018536:	4a16      	ldr	r2, [pc, #88]	; (8018590 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018538:	6812      	ldr	r2, [r2, #0]
 801853a:	2114      	movs	r1, #20
 801853c:	fb01 2303 	mla	r3, r1, r3, r2
 8018540:	8a1a      	ldrh	r2, [r3, #16]
 8018542:	8919      	ldrh	r1, [r3, #8]
 8018544:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018548:	428a      	cmp	r2, r1
 801854a:	db1d      	blt.n	8018588 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801854c:	8a58      	ldrh	r0, [r3, #18]
 801854e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018552:	895b      	ldrh	r3, [r3, #10]
 8018554:	4298      	cmp	r0, r3
 8018556:	bfac      	ite	ge
 8018558:	2000      	movge	r0, #0
 801855a:	2001      	movlt	r0, #1
 801855c:	4770      	bx	lr
 801855e:	490d      	ldr	r1, [pc, #52]	; (8018594 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018560:	8809      	ldrh	r1, [r1, #0]
 8018562:	4411      	add	r1, r2
 8018564:	428b      	cmp	r3, r1
 8018566:	da0d      	bge.n	8018584 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018568:	1a9b      	subs	r3, r3, r2
 801856a:	4a0b      	ldr	r2, [pc, #44]	; (8018598 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801856c:	6812      	ldr	r2, [r2, #0]
 801856e:	210e      	movs	r1, #14
 8018570:	fb01 2303 	mla	r3, r1, r3, r2
 8018574:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018578:	891a      	ldrh	r2, [r3, #8]
 801857a:	4291      	cmp	r1, r2
 801857c:	db04      	blt.n	8018588 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801857e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018582:	e7e6      	b.n	8018552 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018584:	2000      	movs	r0, #0
 8018586:	4770      	bx	lr
 8018588:	2001      	movs	r0, #1
 801858a:	4770      	bx	lr
 801858c:	20012e2c 	.word	0x20012e2c
 8018590:	20012e34 	.word	0x20012e34
 8018594:	20012e30 	.word	0x20012e30
 8018598:	20012e14 	.word	0x20012e14

0801859c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801859c:	4a12      	ldr	r2, [pc, #72]	; (80185e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801859e:	8803      	ldrh	r3, [r0, #0]
 80185a0:	8811      	ldrh	r1, [r2, #0]
 80185a2:	428b      	cmp	r3, r1
 80185a4:	d20b      	bcs.n	80185be <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80185a6:	4a11      	ldr	r2, [pc, #68]	; (80185ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80185a8:	6812      	ldr	r2, [r2, #0]
 80185aa:	b112      	cbz	r2, 80185b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80185ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80185b0:	b9c0      	cbnz	r0, 80185e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80185b2:	4a0f      	ldr	r2, [pc, #60]	; (80185f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80185b4:	6811      	ldr	r1, [r2, #0]
 80185b6:	2214      	movs	r2, #20
 80185b8:	4353      	muls	r3, r2
 80185ba:	58c8      	ldr	r0, [r1, r3]
 80185bc:	4770      	bx	lr
 80185be:	4a0d      	ldr	r2, [pc, #52]	; (80185f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80185c0:	8812      	ldrh	r2, [r2, #0]
 80185c2:	440a      	add	r2, r1
 80185c4:	4293      	cmp	r3, r2
 80185c6:	da04      	bge.n	80185d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80185c8:	4a08      	ldr	r2, [pc, #32]	; (80185ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80185ca:	6812      	ldr	r2, [r2, #0]
 80185cc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80185d0:	4770      	bx	lr
 80185d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80185d6:	4293      	cmp	r3, r2
 80185d8:	d103      	bne.n	80185e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80185da:	4b07      	ldr	r3, [pc, #28]	; (80185f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80185dc:	681b      	ldr	r3, [r3, #0]
 80185de:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80185e0:	4770      	bx	lr
 80185e2:	2000      	movs	r0, #0
 80185e4:	4770      	bx	lr
 80185e6:	bf00      	nop
 80185e8:	20012e2c 	.word	0x20012e2c
 80185ec:	20012e10 	.word	0x20012e10
 80185f0:	20012e34 	.word	0x20012e34
 80185f4:	20012e30 	.word	0x20012e30
 80185f8:	20012da4 	.word	0x20012da4

080185fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80185fc:	4b24      	ldr	r3, [pc, #144]	; (8018690 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80185fe:	8802      	ldrh	r2, [r0, #0]
 8018600:	8818      	ldrh	r0, [r3, #0]
 8018602:	4282      	cmp	r2, r0
 8018604:	d221      	bcs.n	801864a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8018606:	4b23      	ldr	r3, [pc, #140]	; (8018694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018608:	6819      	ldr	r1, [r3, #0]
 801860a:	2314      	movs	r3, #20
 801860c:	fb03 1302 	mla	r3, r3, r2, r1
 8018610:	6858      	ldr	r0, [r3, #4]
 8018612:	2800      	cmp	r0, #0
 8018614:	d03a      	beq.n	801868c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018616:	4920      	ldr	r1, [pc, #128]	; (8018698 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018618:	6809      	ldr	r1, [r1, #0]
 801861a:	2900      	cmp	r1, #0
 801861c:	d036      	beq.n	801868c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801861e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8018622:	2900      	cmp	r1, #0
 8018624:	d032      	beq.n	801868c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018626:	891a      	ldrh	r2, [r3, #8]
 8018628:	8958      	ldrh	r0, [r3, #10]
 801862a:	4350      	muls	r0, r2
 801862c:	7c5a      	ldrb	r2, [r3, #17]
 801862e:	7cdb      	ldrb	r3, [r3, #19]
 8018630:	0952      	lsrs	r2, r2, #5
 8018632:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018636:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801863a:	2b0b      	cmp	r3, #11
 801863c:	bf18      	it	ne
 801863e:	0040      	lslne	r0, r0, #1
 8018640:	3003      	adds	r0, #3
 8018642:	f020 0003 	bic.w	r0, r0, #3
 8018646:	4408      	add	r0, r1
 8018648:	4770      	bx	lr
 801864a:	4b14      	ldr	r3, [pc, #80]	; (801869c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801864c:	881b      	ldrh	r3, [r3, #0]
 801864e:	4403      	add	r3, r0
 8018650:	429a      	cmp	r2, r3
 8018652:	da1a      	bge.n	801868a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018654:	4b12      	ldr	r3, [pc, #72]	; (80186a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018656:	681b      	ldr	r3, [r3, #0]
 8018658:	1a10      	subs	r0, r2, r0
 801865a:	210e      	movs	r1, #14
 801865c:	fb01 3000 	mla	r0, r1, r0, r3
 8018660:	7b03      	ldrb	r3, [r0, #12]
 8018662:	f003 031f 	and.w	r3, r3, #31
 8018666:	2b0b      	cmp	r3, #11
 8018668:	d10b      	bne.n	8018682 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801866a:	8903      	ldrh	r3, [r0, #8]
 801866c:	8940      	ldrh	r0, [r0, #10]
 801866e:	4358      	muls	r0, r3
 8018670:	4b09      	ldr	r3, [pc, #36]	; (8018698 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018672:	6819      	ldr	r1, [r3, #0]
 8018674:	3003      	adds	r0, #3
 8018676:	f020 0303 	bic.w	r3, r0, #3
 801867a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801867e:	4418      	add	r0, r3
 8018680:	4770      	bx	lr
 8018682:	2b0d      	cmp	r3, #13
 8018684:	d101      	bne.n	801868a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018686:	300d      	adds	r0, #13
 8018688:	4770      	bx	lr
 801868a:	2000      	movs	r0, #0
 801868c:	4770      	bx	lr
 801868e:	bf00      	nop
 8018690:	20012e2c 	.word	0x20012e2c
 8018694:	20012e34 	.word	0x20012e34
 8018698:	20012e10 	.word	0x20012e10
 801869c:	20012e30 	.word	0x20012e30
 80186a0:	20012e14 	.word	0x20012e14

080186a4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80186a4:	b510      	push	{r4, lr}
 80186a6:	4a17      	ldr	r2, [pc, #92]	; (8018704 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80186a8:	8803      	ldrh	r3, [r0, #0]
 80186aa:	8812      	ldrh	r2, [r2, #0]
 80186ac:	4293      	cmp	r3, r2
 80186ae:	d20c      	bcs.n	80186ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80186b0:	4a15      	ldr	r2, [pc, #84]	; (8018708 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80186b2:	6812      	ldr	r2, [r2, #0]
 80186b4:	2114      	movs	r1, #20
 80186b6:	fb01 2303 	mla	r3, r1, r3, r2
 80186ba:	7c58      	ldrb	r0, [r3, #17]
 80186bc:	0942      	lsrs	r2, r0, #5
 80186be:	7cd8      	ldrb	r0, [r3, #19]
 80186c0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80186c4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80186c8:	bd10      	pop	{r4, pc}
 80186ca:	4910      	ldr	r1, [pc, #64]	; (801870c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80186cc:	8809      	ldrh	r1, [r1, #0]
 80186ce:	4411      	add	r1, r2
 80186d0:	428b      	cmp	r3, r1
 80186d2:	da09      	bge.n	80186e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80186d4:	1a9b      	subs	r3, r3, r2
 80186d6:	4a0e      	ldr	r2, [pc, #56]	; (8018710 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80186d8:	6812      	ldr	r2, [r2, #0]
 80186da:	210e      	movs	r1, #14
 80186dc:	fb01 2303 	mla	r3, r1, r3, r2
 80186e0:	7b18      	ldrb	r0, [r3, #12]
 80186e2:	f000 001f 	and.w	r0, r0, #31
 80186e6:	e7ef      	b.n	80186c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80186e8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186ec:	4293      	cmp	r3, r2
 80186ee:	d106      	bne.n	80186fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80186f0:	f7eb f870 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 80186f4:	6803      	ldr	r3, [r0, #0]
 80186f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80186fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80186fc:	4718      	bx	r3
 80186fe:	2000      	movs	r0, #0
 8018700:	e7e2      	b.n	80186c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018702:	bf00      	nop
 8018704:	20012e2c 	.word	0x20012e2c
 8018708:	20012e34 	.word	0x20012e34
 801870c:	20012e30 	.word	0x20012e30
 8018710:	20012e14 	.word	0x20012e14

08018714 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018714:	2010      	movs	r0, #16
 8018716:	4770      	bx	lr

08018718 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018718:	2000      	movs	r0, #0
 801871a:	4770      	bx	lr

0801871c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801871c:	4b02      	ldr	r3, [pc, #8]	; (8018728 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801871e:	8818      	ldrh	r0, [r3, #0]
 8018720:	0040      	lsls	r0, r0, #1
 8018722:	b280      	uxth	r0, r0
 8018724:	4770      	bx	lr
 8018726:	bf00      	nop
 8018728:	20012d9e 	.word	0x20012d9e

0801872c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801872c:	2bff      	cmp	r3, #255	; 0xff
 801872e:	d050      	beq.n	80187d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018730:	2a0b      	cmp	r2, #11
 8018732:	d04a      	beq.n	80187ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018734:	d80e      	bhi.n	8018754 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018736:	2a03      	cmp	r2, #3
 8018738:	d03f      	beq.n	80187ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801873a:	d804      	bhi.n	8018746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801873c:	2a01      	cmp	r2, #1
 801873e:	d03e      	beq.n	80187be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018740:	d93f      	bls.n	80187c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018742:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018744:	4770      	bx	lr
 8018746:	2a09      	cmp	r2, #9
 8018748:	d03f      	beq.n	80187ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801874a:	d83c      	bhi.n	80187c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801874c:	2a08      	cmp	r2, #8
 801874e:	d03a      	beq.n	80187c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018750:	2000      	movs	r0, #0
 8018752:	4770      	bx	lr
 8018754:	2a2f      	cmp	r2, #47	; 0x2f
 8018756:	d024      	beq.n	80187a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018758:	d80d      	bhi.n	8018776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801875a:	2a2d      	cmp	r2, #45	; 0x2d
 801875c:	d014      	beq.n	8018788 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801875e:	d826      	bhi.n	80187ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018760:	2a2c      	cmp	r2, #44	; 0x2c
 8018762:	d1f5      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018764:	684b      	ldr	r3, [r1, #4]
 8018766:	781b      	ldrb	r3, [r3, #0]
 8018768:	2b01      	cmp	r3, #1
 801876a:	d018      	beq.n	801879e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801876c:	d323      	bcc.n	80187b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801876e:	2b02      	cmp	r3, #2
 8018770:	d1ee      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018772:	6880      	ldr	r0, [r0, #8]
 8018774:	4770      	bx	lr
 8018776:	2a31      	cmp	r2, #49	; 0x31
 8018778:	d004      	beq.n	8018784 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801877a:	d328      	bcc.n	80187ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801877c:	2a32      	cmp	r2, #50	; 0x32
 801877e:	d026      	beq.n	80187ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018780:	2a33      	cmp	r2, #51	; 0x33
 8018782:	d1e5      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018784:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018786:	4770      	bx	lr
 8018788:	684b      	ldr	r3, [r1, #4]
 801878a:	781b      	ldrb	r3, [r3, #0]
 801878c:	2b01      	cmp	r3, #1
 801878e:	d004      	beq.n	801879a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018790:	d30b      	bcc.n	80187aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018792:	2b02      	cmp	r3, #2
 8018794:	d1dc      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018796:	6900      	ldr	r0, [r0, #16]
 8018798:	4770      	bx	lr
 801879a:	6a00      	ldr	r0, [r0, #32]
 801879c:	4770      	bx	lr
 801879e:	6980      	ldr	r0, [r0, #24]
 80187a0:	4770      	bx	lr
 80187a2:	684b      	ldr	r3, [r1, #4]
 80187a4:	781b      	ldrb	r3, [r3, #0]
 80187a6:	2b00      	cmp	r3, #0
 80187a8:	d1d2      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187aa:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80187ac:	4770      	bx	lr
 80187ae:	684b      	ldr	r3, [r1, #4]
 80187b0:	781b      	ldrb	r3, [r3, #0]
 80187b2:	2b00      	cmp	r3, #0
 80187b4:	d1cc      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187b6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80187b8:	4770      	bx	lr
 80187ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80187bc:	4770      	bx	lr
 80187be:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80187c0:	4770      	bx	lr
 80187c2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80187c4:	4770      	bx	lr
 80187c6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80187c8:	4770      	bx	lr
 80187ca:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80187cc:	4770      	bx	lr
 80187ce:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80187d0:	4770      	bx	lr
 80187d2:	2a0b      	cmp	r2, #11
 80187d4:	d049      	beq.n	801886a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80187d6:	d80e      	bhi.n	80187f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80187d8:	2a03      	cmp	r2, #3
 80187da:	d040      	beq.n	801885e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80187dc:	d804      	bhi.n	80187e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80187de:	2a01      	cmp	r2, #1
 80187e0:	d03f      	beq.n	8018862 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80187e2:	d940      	bls.n	8018866 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80187e4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80187e6:	4770      	bx	lr
 80187e8:	2a09      	cmp	r2, #9
 80187ea:	d03e      	beq.n	801886a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80187ec:	d801      	bhi.n	80187f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80187ee:	2a08      	cmp	r2, #8
 80187f0:	d1ae      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187f2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80187f4:	4770      	bx	lr
 80187f6:	2a2f      	cmp	r2, #47	; 0x2f
 80187f8:	d024      	beq.n	8018844 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80187fa:	d80d      	bhi.n	8018818 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80187fc:	2a2d      	cmp	r2, #45	; 0x2d
 80187fe:	d014      	beq.n	801882a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018800:	d826      	bhi.n	8018850 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018802:	2a2c      	cmp	r2, #44	; 0x2c
 8018804:	d1a4      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018806:	684b      	ldr	r3, [r1, #4]
 8018808:	781b      	ldrb	r3, [r3, #0]
 801880a:	2b01      	cmp	r3, #1
 801880c:	d018      	beq.n	8018840 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801880e:	d324      	bcc.n	801885a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018810:	2b02      	cmp	r3, #2
 8018812:	d19d      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018814:	68c0      	ldr	r0, [r0, #12]
 8018816:	4770      	bx	lr
 8018818:	2a31      	cmp	r2, #49	; 0x31
 801881a:	d004      	beq.n	8018826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801881c:	d327      	bcc.n	801886e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801881e:	2a32      	cmp	r2, #50	; 0x32
 8018820:	d025      	beq.n	801886e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018822:	2a33      	cmp	r2, #51	; 0x33
 8018824:	d194      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018826:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018828:	4770      	bx	lr
 801882a:	684b      	ldr	r3, [r1, #4]
 801882c:	781b      	ldrb	r3, [r3, #0]
 801882e:	2b01      	cmp	r3, #1
 8018830:	d004      	beq.n	801883c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018832:	d30b      	bcc.n	801884c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018834:	2b02      	cmp	r3, #2
 8018836:	d18b      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018838:	6940      	ldr	r0, [r0, #20]
 801883a:	4770      	bx	lr
 801883c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801883e:	4770      	bx	lr
 8018840:	69c0      	ldr	r0, [r0, #28]
 8018842:	4770      	bx	lr
 8018844:	684b      	ldr	r3, [r1, #4]
 8018846:	781b      	ldrb	r3, [r3, #0]
 8018848:	2b00      	cmp	r3, #0
 801884a:	d181      	bne.n	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801884c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801884e:	4770      	bx	lr
 8018850:	684b      	ldr	r3, [r1, #4]
 8018852:	781b      	ldrb	r3, [r3, #0]
 8018854:	2b00      	cmp	r3, #0
 8018856:	f47f af7b 	bne.w	8018750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801885a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801885c:	4770      	bx	lr
 801885e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018860:	4770      	bx	lr
 8018862:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018864:	4770      	bx	lr
 8018866:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018868:	4770      	bx	lr
 801886a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801886c:	4770      	bx	lr
 801886e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018870:	4770      	bx	lr

08018872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018872:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018876:	b087      	sub	sp, #28
 8018878:	9815      	ldr	r0, [sp, #84]	; 0x54
 801887a:	9205      	str	r2, [sp, #20]
 801887c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018880:	9202      	str	r2, [sp, #8]
 8018882:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018886:	9101      	str	r1, [sp, #4]
 8018888:	6841      	ldr	r1, [r0, #4]
 801888a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801888e:	fb01 2404 	mla	r4, r1, r4, r2
 8018892:	6802      	ldr	r2, [r0, #0]
 8018894:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018898:	f8de 2000 	ldr.w	r2, [lr]
 801889c:	9203      	str	r2, [sp, #12]
 801889e:	f8de 2004 	ldr.w	r2, [lr, #4]
 80188a2:	3204      	adds	r2, #4
 80188a4:	9204      	str	r2, [sp, #16]
 80188a6:	9a02      	ldr	r2, [sp, #8]
 80188a8:	43d6      	mvns	r6, r2
 80188aa:	b2f6      	uxtb	r6, r6
 80188ac:	9a01      	ldr	r2, [sp, #4]
 80188ae:	2a00      	cmp	r2, #0
 80188b0:	dc03      	bgt.n	80188ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80188b2:	9a05      	ldr	r2, [sp, #20]
 80188b4:	2a00      	cmp	r2, #0
 80188b6:	f340 8129 	ble.w	8018b0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80188ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80188bc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80188c0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80188c4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80188c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80188ca:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80188ce:	2b00      	cmp	r3, #0
 80188d0:	dd0e      	ble.n	80188f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80188d2:	1408      	asrs	r0, r1, #16
 80188d4:	d405      	bmi.n	80188e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188d6:	4560      	cmp	r0, ip
 80188d8:	da03      	bge.n	80188e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188da:	1410      	asrs	r0, r2, #16
 80188dc:	d401      	bmi.n	80188e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188de:	42b8      	cmp	r0, r7
 80188e0:	db07      	blt.n	80188f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80188e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80188e4:	4401      	add	r1, r0
 80188e6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80188e8:	3b01      	subs	r3, #1
 80188ea:	4402      	add	r2, r0
 80188ec:	3402      	adds	r4, #2
 80188ee:	e7ee      	b.n	80188ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80188f0:	d071      	beq.n	80189d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80188f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80188f4:	1e58      	subs	r0, r3, #1
 80188f6:	fb05 1500 	mla	r5, r5, r0, r1
 80188fa:	142d      	asrs	r5, r5, #16
 80188fc:	d45f      	bmi.n	80189be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188fe:	4565      	cmp	r5, ip
 8018900:	da5d      	bge.n	80189be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018902:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018904:	fb05 2000 	mla	r0, r5, r0, r2
 8018908:	1400      	asrs	r0, r0, #16
 801890a:	d458      	bmi.n	80189be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801890c:	42b8      	cmp	r0, r7
 801890e:	da56      	bge.n	80189be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018910:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018914:	4699      	mov	r9, r3
 8018916:	46a2      	mov	sl, r4
 8018918:	f1b9 0f00 	cmp.w	r9, #0
 801891c:	dd57      	ble.n	80189ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801891e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018922:	9803      	ldr	r0, [sp, #12]
 8018924:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018928:	140d      	asrs	r5, r1, #16
 801892a:	fb07 000c 	mla	r0, r7, ip, r0
 801892e:	f109 39ff 	add.w	r9, r9, #4294967295
 8018932:	5d40      	ldrb	r0, [r0, r5]
 8018934:	9d04      	ldr	r5, [sp, #16]
 8018936:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801893a:	f8ba 5000 	ldrh.w	r5, [sl]
 801893e:	122f      	asrs	r7, r5, #8
 8018940:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018944:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018948:	fb17 f706 	smulbb	r7, r7, r6
 801894c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018950:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018954:	00ed      	lsls	r5, r5, #3
 8018956:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801895a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801895e:	10c7      	asrs	r7, r0, #3
 8018960:	b2ed      	uxtb	r5, r5
 8018962:	00c0      	lsls	r0, r0, #3
 8018964:	fb18 f806 	smulbb	r8, r8, r6
 8018968:	fb15 f506 	smulbb	r5, r5, r6
 801896c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018970:	b2c0      	uxtb	r0, r0
 8018972:	fa1f fc8c 	uxth.w	ip, ip
 8018976:	fb07 870b 	mla	r7, r7, fp, r8
 801897a:	fb00 500b 	mla	r0, r0, fp, r5
 801897e:	b280      	uxth	r0, r0
 8018980:	b2bf      	uxth	r7, r7
 8018982:	f10c 0501 	add.w	r5, ip, #1
 8018986:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801898a:	f107 0801 	add.w	r8, r7, #1
 801898e:	1c45      	adds	r5, r0, #1
 8018990:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018994:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018998:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801899a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801899e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80189a2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80189a6:	ea45 0c0c 	orr.w	ip, r5, ip
 80189aa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80189ae:	4401      	add	r1, r0
 80189b0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80189b2:	ea4c 0c08 	orr.w	ip, ip, r8
 80189b6:	f82a cb02 	strh.w	ip, [sl], #2
 80189ba:	4402      	add	r2, r0
 80189bc:	e7ac      	b.n	8018918 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80189be:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80189c2:	f04f 0800 	mov.w	r8, #0
 80189c6:	eb03 0008 	add.w	r0, r3, r8
 80189ca:	2800      	cmp	r0, #0
 80189cc:	dc41      	bgt.n	8018a52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80189ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80189d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80189d6:	9b01      	ldr	r3, [sp, #4]
 80189d8:	2b00      	cmp	r3, #0
 80189da:	f340 8097 	ble.w	8018b0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80189de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80189e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80189ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80189f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80189f8:	eef0 6a62 	vmov.f32	s13, s5
 80189fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a08:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018a0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a10:	eef0 6a43 	vmov.f32	s13, s6
 8018a14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a18:	ee12 2a90 	vmov	r2, s5
 8018a1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a20:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a24:	ee13 2a10 	vmov	r2, s6
 8018a28:	9313      	str	r3, [sp, #76]	; 0x4c
 8018a2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a30:	9314      	str	r3, [sp, #80]	; 0x50
 8018a32:	9b01      	ldr	r3, [sp, #4]
 8018a34:	9a05      	ldr	r2, [sp, #20]
 8018a36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a3a:	3b01      	subs	r3, #1
 8018a3c:	9301      	str	r3, [sp, #4]
 8018a3e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018a42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a44:	eeb0 3a67 	vmov.f32	s6, s15
 8018a48:	bf08      	it	eq
 8018a4a:	4613      	moveq	r3, r2
 8018a4c:	eef0 2a47 	vmov.f32	s5, s14
 8018a50:	e72c      	b.n	80188ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018a52:	140f      	asrs	r7, r1, #16
 8018a54:	d453      	bmi.n	8018afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a56:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018a5a:	42bd      	cmp	r5, r7
 8018a5c:	dd4f      	ble.n	8018afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a5e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018a62:	d44c      	bmi.n	8018afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a64:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018a68:	4560      	cmp	r0, ip
 8018a6a:	dd48      	ble.n	8018afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a6c:	9803      	ldr	r0, [sp, #12]
 8018a6e:	b22d      	sxth	r5, r5
 8018a70:	fb0c 0505 	mla	r5, ip, r5, r0
 8018a74:	5de8      	ldrb	r0, [r5, r7]
 8018a76:	9d04      	ldr	r5, [sp, #16]
 8018a78:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018a7c:	f06f 0501 	mvn.w	r5, #1
 8018a80:	fb05 fb08 	mul.w	fp, r5, r8
 8018a84:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018a88:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018a8c:	122f      	asrs	r7, r5, #8
 8018a8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018a92:	fb17 f706 	smulbb	r7, r7, r6
 8018a96:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018a9a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018a9e:	00ed      	lsls	r5, r5, #3
 8018aa0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018aa4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018aa8:	10c7      	asrs	r7, r0, #3
 8018aaa:	b2ed      	uxtb	r5, r5
 8018aac:	00c0      	lsls	r0, r0, #3
 8018aae:	fb19 f906 	smulbb	r9, r9, r6
 8018ab2:	fb15 f506 	smulbb	r5, r5, r6
 8018ab6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018aba:	b2c0      	uxtb	r0, r0
 8018abc:	fa1f fc8c 	uxth.w	ip, ip
 8018ac0:	fb07 970a 	mla	r7, r7, sl, r9
 8018ac4:	fb00 500a 	mla	r0, r0, sl, r5
 8018ac8:	b2bf      	uxth	r7, r7
 8018aca:	b280      	uxth	r0, r0
 8018acc:	f10c 0501 	add.w	r5, ip, #1
 8018ad0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018ad4:	f107 0901 	add.w	r9, r7, #1
 8018ad8:	1c45      	adds	r5, r0, #1
 8018ada:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018ade:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018ae2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018ae6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018aea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018aee:	ea45 0c0c 	orr.w	ip, r5, ip
 8018af2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018af6:	ea4c 0c09 	orr.w	ip, ip, r9
 8018afa:	f824 c00b 	strh.w	ip, [r4, fp]
 8018afe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018b00:	4401      	add	r1, r0
 8018b02:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018b04:	f108 38ff 	add.w	r8, r8, #4294967295
 8018b08:	4402      	add	r2, r0
 8018b0a:	e75c      	b.n	80189c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018b0c:	b007      	add	sp, #28
 8018b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b16:	b085      	sub	sp, #20
 8018b18:	4693      	mov	fp, r2
 8018b1a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018b1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018b1e:	6870      	ldr	r0, [r6, #4]
 8018b20:	9100      	str	r1, [sp, #0]
 8018b22:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018b26:	fb00 2404 	mla	r4, r0, r4, r2
 8018b2a:	6832      	ldr	r2, [r6, #0]
 8018b2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b30:	682a      	ldr	r2, [r5, #0]
 8018b32:	9201      	str	r2, [sp, #4]
 8018b34:	686a      	ldr	r2, [r5, #4]
 8018b36:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018b3a:	3204      	adds	r2, #4
 8018b3c:	9202      	str	r2, [sp, #8]
 8018b3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018b42:	9a00      	ldr	r2, [sp, #0]
 8018b44:	2a00      	cmp	r2, #0
 8018b46:	dc03      	bgt.n	8018b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018b48:	f1bb 0f00 	cmp.w	fp, #0
 8018b4c:	f340 80a0 	ble.w	8018c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018b50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018b52:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018b56:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018b5a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018b5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018b60:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018b64:	2b00      	cmp	r3, #0
 8018b66:	dd0c      	ble.n	8018b82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b68:	1406      	asrs	r6, r0, #16
 8018b6a:	d405      	bmi.n	8018b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b6c:	454e      	cmp	r6, r9
 8018b6e:	da03      	bge.n	8018b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b70:	1416      	asrs	r6, r2, #16
 8018b72:	d401      	bmi.n	8018b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b74:	4546      	cmp	r6, r8
 8018b76:	db05      	blt.n	8018b84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018b78:	4470      	add	r0, lr
 8018b7a:	4462      	add	r2, ip
 8018b7c:	3b01      	subs	r3, #1
 8018b7e:	3402      	adds	r4, #2
 8018b80:	e7f0      	b.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018b82:	d00f      	beq.n	8018ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018b84:	1e5e      	subs	r6, r3, #1
 8018b86:	fb0e 0706 	mla	r7, lr, r6, r0
 8018b8a:	143f      	asrs	r7, r7, #16
 8018b8c:	d541      	bpl.n	8018c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018b8e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018b92:	4698      	mov	r8, r3
 8018b94:	9603      	str	r6, [sp, #12]
 8018b96:	f1b8 0f00 	cmp.w	r8, #0
 8018b9a:	dc59      	bgt.n	8018c50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ba0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018ba4:	9b00      	ldr	r3, [sp, #0]
 8018ba6:	2b00      	cmp	r3, #0
 8018ba8:	dd72      	ble.n	8018c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018baa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018bae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018bb2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018bb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018bb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018bbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018bc0:	eeb0 6a62 	vmov.f32	s12, s5
 8018bc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018bc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018bd0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018bd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018bd8:	eeb0 6a43 	vmov.f32	s12, s6
 8018bdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018be0:	ee12 2a90 	vmov	r2, s5
 8018be4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018be8:	fb92 fef3 	sdiv	lr, r2, r3
 8018bec:	ee13 2a10 	vmov	r2, s6
 8018bf0:	fb92 fcf3 	sdiv	ip, r2, r3
 8018bf4:	9b00      	ldr	r3, [sp, #0]
 8018bf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bfa:	3b01      	subs	r3, #1
 8018bfc:	9300      	str	r3, [sp, #0]
 8018bfe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018c02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c04:	eeb0 3a67 	vmov.f32	s6, s15
 8018c08:	bf08      	it	eq
 8018c0a:	465b      	moveq	r3, fp
 8018c0c:	eef0 2a47 	vmov.f32	s5, s14
 8018c10:	e797      	b.n	8018b42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018c12:	454f      	cmp	r7, r9
 8018c14:	dabb      	bge.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c16:	fb0c 2606 	mla	r6, ip, r6, r2
 8018c1a:	1436      	asrs	r6, r6, #16
 8018c1c:	d4b7      	bmi.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c1e:	4546      	cmp	r6, r8
 8018c20:	dab5      	bge.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c22:	461e      	mov	r6, r3
 8018c24:	46a0      	mov	r8, r4
 8018c26:	2e00      	cmp	r6, #0
 8018c28:	ddb8      	ble.n	8018b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018c2a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018c2e:	9901      	ldr	r1, [sp, #4]
 8018c30:	1417      	asrs	r7, r2, #16
 8018c32:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018c36:	fb0a 1707 	mla	r7, sl, r7, r1
 8018c3a:	9902      	ldr	r1, [sp, #8]
 8018c3c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018c40:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018c44:	f828 7b02 	strh.w	r7, [r8], #2
 8018c48:	4470      	add	r0, lr
 8018c4a:	4462      	add	r2, ip
 8018c4c:	3e01      	subs	r6, #1
 8018c4e:	e7ea      	b.n	8018c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018c50:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018c54:	d417      	bmi.n	8018c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c56:	68ae      	ldr	r6, [r5, #8]
 8018c58:	454e      	cmp	r6, r9
 8018c5a:	dd14      	ble.n	8018c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c5c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018c60:	d411      	bmi.n	8018c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c62:	68ef      	ldr	r7, [r5, #12]
 8018c64:	4557      	cmp	r7, sl
 8018c66:	dd0e      	ble.n	8018c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c68:	9f01      	ldr	r7, [sp, #4]
 8018c6a:	b236      	sxth	r6, r6
 8018c6c:	fb0a 7606 	mla	r6, sl, r6, r7
 8018c70:	9f02      	ldr	r7, [sp, #8]
 8018c72:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018c76:	f06f 0101 	mvn.w	r1, #1
 8018c7a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018c7e:	fb01 f608 	mul.w	r6, r1, r8
 8018c82:	9903      	ldr	r1, [sp, #12]
 8018c84:	538f      	strh	r7, [r1, r6]
 8018c86:	4470      	add	r0, lr
 8018c88:	4462      	add	r2, ip
 8018c8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c8e:	e782      	b.n	8018b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c90:	b005      	add	sp, #20
 8018c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c9a:	b087      	sub	sp, #28
 8018c9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c9e:	9205      	str	r2, [sp, #20]
 8018ca0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018ca4:	9203      	str	r2, [sp, #12]
 8018ca6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018caa:	9102      	str	r1, [sp, #8]
 8018cac:	6861      	ldr	r1, [r4, #4]
 8018cae:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018cb2:	fb01 2000 	mla	r0, r1, r0, r2
 8018cb6:	6822      	ldr	r2, [r4, #0]
 8018cb8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018cbc:	9200      	str	r2, [sp, #0]
 8018cbe:	f8dc 2000 	ldr.w	r2, [ip]
 8018cc2:	9204      	str	r2, [sp, #16]
 8018cc4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018cc8:	3204      	adds	r2, #4
 8018cca:	9201      	str	r2, [sp, #4]
 8018ccc:	9a03      	ldr	r2, [sp, #12]
 8018cce:	43d5      	mvns	r5, r2
 8018cd0:	b2ed      	uxtb	r5, r5
 8018cd2:	9a02      	ldr	r2, [sp, #8]
 8018cd4:	2a00      	cmp	r2, #0
 8018cd6:	dc03      	bgt.n	8018ce0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018cd8:	9a05      	ldr	r2, [sp, #20]
 8018cda:	2a00      	cmp	r2, #0
 8018cdc:	f340 812c 	ble.w	8018f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018ce0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018ce2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018ce6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018cea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018cee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018cf0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018cf4:	2b00      	cmp	r3, #0
 8018cf6:	dd10      	ble.n	8018d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018cf8:	140c      	asrs	r4, r1, #16
 8018cfa:	d405      	bmi.n	8018d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018cfc:	4574      	cmp	r4, lr
 8018cfe:	da03      	bge.n	8018d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d00:	1414      	asrs	r4, r2, #16
 8018d02:	d401      	bmi.n	8018d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d04:	42bc      	cmp	r4, r7
 8018d06:	db09      	blt.n	8018d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018d08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018d0a:	9800      	ldr	r0, [sp, #0]
 8018d0c:	4421      	add	r1, r4
 8018d0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018d10:	3002      	adds	r0, #2
 8018d12:	4422      	add	r2, r4
 8018d14:	3b01      	subs	r3, #1
 8018d16:	9000      	str	r0, [sp, #0]
 8018d18:	e7ec      	b.n	8018cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018d1a:	d071      	beq.n	8018e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018d1c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018d1e:	1e5c      	subs	r4, r3, #1
 8018d20:	fb06 1604 	mla	r6, r6, r4, r1
 8018d24:	1436      	asrs	r6, r6, #16
 8018d26:	d45d      	bmi.n	8018de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d28:	4576      	cmp	r6, lr
 8018d2a:	da5b      	bge.n	8018de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d2c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018d2e:	fb06 2404 	mla	r4, r6, r4, r2
 8018d32:	1424      	asrs	r4, r4, #16
 8018d34:	d456      	bmi.n	8018de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d36:	42bc      	cmp	r4, r7
 8018d38:	da54      	bge.n	8018de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d3a:	f8dd 9000 	ldr.w	r9, [sp]
 8018d3e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018d42:	4698      	mov	r8, r3
 8018d44:	f1b8 0f00 	cmp.w	r8, #0
 8018d48:	dd54      	ble.n	8018df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018d4a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018d4e:	9804      	ldr	r0, [sp, #16]
 8018d50:	1414      	asrs	r4, r2, #16
 8018d52:	fb07 0404 	mla	r4, r7, r4, r0
 8018d56:	140e      	asrs	r6, r1, #16
 8018d58:	9801      	ldr	r0, [sp, #4]
 8018d5a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018d5e:	f8b9 4000 	ldrh.w	r4, [r9]
 8018d62:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018d66:	eb00 0b0e 	add.w	fp, r0, lr
 8018d6a:	1227      	asrs	r7, r4, #8
 8018d6c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018d70:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018d74:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018d78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018d7a:	fb16 f60a 	smulbb	r6, r6, sl
 8018d7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d82:	fb07 6705 	mla	r7, r7, r5, r6
 8018d86:	10e6      	asrs	r6, r4, #3
 8018d88:	00e4      	lsls	r4, r4, #3
 8018d8a:	b2e4      	uxtb	r4, r4
 8018d8c:	fb1b fb0a 	smulbb	fp, fp, sl
 8018d90:	fb14 f405 	smulbb	r4, r4, r5
 8018d94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018d98:	b2bf      	uxth	r7, r7
 8018d9a:	fb06 b605 	mla	r6, r6, r5, fp
 8018d9e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018da2:	b2b6      	uxth	r6, r6
 8018da4:	fa1f fe8e 	uxth.w	lr, lr
 8018da8:	1c7c      	adds	r4, r7, #1
 8018daa:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018dae:	f106 0b01 	add.w	fp, r6, #1
 8018db2:	f10e 0401 	add.w	r4, lr, #1
 8018db6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018dba:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018dbe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018dc2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018dc6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018dca:	4327      	orrs	r7, r4
 8018dcc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018dd0:	4401      	add	r1, r0
 8018dd2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018dd4:	ea47 070b 	orr.w	r7, r7, fp
 8018dd8:	f829 7b02 	strh.w	r7, [r9], #2
 8018ddc:	4402      	add	r2, r0
 8018dde:	f108 38ff 	add.w	r8, r8, #4294967295
 8018de2:	e7af      	b.n	8018d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018de4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018de8:	f04f 0e00 	mov.w	lr, #0
 8018dec:	eb03 040e 	add.w	r4, r3, lr
 8018df0:	2c00      	cmp	r4, #0
 8018df2:	dc43      	bgt.n	8018e7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018df4:	9a00      	ldr	r2, [sp, #0]
 8018df6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018dfa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018dfe:	9300      	str	r3, [sp, #0]
 8018e00:	9b02      	ldr	r3, [sp, #8]
 8018e02:	2b00      	cmp	r3, #0
 8018e04:	f340 8098 	ble.w	8018f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018e08:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018e14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e22:	eef0 6a62 	vmov.f32	s13, s5
 8018e26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e32:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018e36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e3a:	eef0 6a43 	vmov.f32	s13, s6
 8018e3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e42:	ee12 2a90 	vmov	r2, s5
 8018e46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e4e:	ee13 2a10 	vmov	r2, s6
 8018e52:	9313      	str	r3, [sp, #76]	; 0x4c
 8018e54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e56:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e5a:	9314      	str	r3, [sp, #80]	; 0x50
 8018e5c:	9b02      	ldr	r3, [sp, #8]
 8018e5e:	9a05      	ldr	r2, [sp, #20]
 8018e60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e64:	3b01      	subs	r3, #1
 8018e66:	9302      	str	r3, [sp, #8]
 8018e68:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018e6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e6e:	eeb0 3a67 	vmov.f32	s6, s15
 8018e72:	bf08      	it	eq
 8018e74:	4613      	moveq	r3, r2
 8018e76:	eef0 2a47 	vmov.f32	s5, s14
 8018e7a:	e72a      	b.n	8018cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018e7c:	140f      	asrs	r7, r1, #16
 8018e7e:	d454      	bmi.n	8018f2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e80:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018e84:	42be      	cmp	r6, r7
 8018e86:	dd50      	ble.n	8018f2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e88:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018e8c:	d44d      	bmi.n	8018f2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e8e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018e92:	4544      	cmp	r4, r8
 8018e94:	dd49      	ble.n	8018f2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e96:	9c04      	ldr	r4, [sp, #16]
 8018e98:	b236      	sxth	r6, r6
 8018e9a:	fb08 4606 	mla	r6, r8, r6, r4
 8018e9e:	f06f 0001 	mvn.w	r0, #1
 8018ea2:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018ea6:	9c01      	ldr	r4, [sp, #4]
 8018ea8:	fb00 fa0e 	mul.w	sl, r0, lr
 8018eac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018eb0:	9800      	ldr	r0, [sp, #0]
 8018eb2:	eb04 0b08 	add.w	fp, r4, r8
 8018eb6:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018eba:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018ebe:	9801      	ldr	r0, [sp, #4]
 8018ec0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018ec4:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018ec8:	9800      	ldr	r0, [sp, #0]
 8018eca:	1227      	asrs	r7, r4, #8
 8018ecc:	fb16 f609 	smulbb	r6, r6, r9
 8018ed0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018ed4:	fb07 6705 	mla	r7, r7, r5, r6
 8018ed8:	10e6      	asrs	r6, r4, #3
 8018eda:	00e4      	lsls	r4, r4, #3
 8018edc:	b2e4      	uxtb	r4, r4
 8018ede:	fb1b fb09 	smulbb	fp, fp, r9
 8018ee2:	fb14 f405 	smulbb	r4, r4, r5
 8018ee6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018eea:	b2bf      	uxth	r7, r7
 8018eec:	fb06 b605 	mla	r6, r6, r5, fp
 8018ef0:	fb08 4809 	mla	r8, r8, r9, r4
 8018ef4:	b2b6      	uxth	r6, r6
 8018ef6:	fa1f f888 	uxth.w	r8, r8
 8018efa:	1c7c      	adds	r4, r7, #1
 8018efc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018f00:	f106 0b01 	add.w	fp, r6, #1
 8018f04:	f108 0401 	add.w	r4, r8, #1
 8018f08:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018f0c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018f10:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018f14:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018f18:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018f1c:	4327      	orrs	r7, r4
 8018f1e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018f22:	ea47 070b 	orr.w	r7, r7, fp
 8018f26:	f820 700a 	strh.w	r7, [r0, sl]
 8018f2a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f2c:	4401      	add	r1, r0
 8018f2e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018f30:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018f34:	4402      	add	r2, r0
 8018f36:	e759      	b.n	8018dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018f38:	b007      	add	sp, #28
 8018f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018f40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f44:	b085      	sub	sp, #20
 8018f46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f4a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018f4c:	9203      	str	r2, [sp, #12]
 8018f4e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018f52:	6870      	ldr	r0, [r6, #4]
 8018f54:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018f56:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018f5a:	686f      	ldr	r7, [r5, #4]
 8018f5c:	9101      	str	r1, [sp, #4]
 8018f5e:	fb00 2404 	mla	r4, r0, r4, r2
 8018f62:	6832      	ldr	r2, [r6, #0]
 8018f64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018f68:	682a      	ldr	r2, [r5, #0]
 8018f6a:	9202      	str	r2, [sp, #8]
 8018f6c:	3704      	adds	r7, #4
 8018f6e:	9a01      	ldr	r2, [sp, #4]
 8018f70:	2a00      	cmp	r2, #0
 8018f72:	dc03      	bgt.n	8018f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018f74:	9a03      	ldr	r2, [sp, #12]
 8018f76:	2a00      	cmp	r2, #0
 8018f78:	f340 80cc 	ble.w	8019114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018f7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f7e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018f82:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018f86:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018f8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f90:	2b00      	cmp	r3, #0
 8018f92:	dd0d      	ble.n	8018fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018f94:	1406      	asrs	r6, r0, #16
 8018f96:	d405      	bmi.n	8018fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f98:	454e      	cmp	r6, r9
 8018f9a:	da03      	bge.n	8018fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f9c:	1416      	asrs	r6, r2, #16
 8018f9e:	d401      	bmi.n	8018fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018fa0:	4546      	cmp	r6, r8
 8018fa2:	db06      	blt.n	8018fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018fa4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018fa6:	4460      	add	r0, ip
 8018fa8:	4432      	add	r2, r6
 8018faa:	3b01      	subs	r3, #1
 8018fac:	3402      	adds	r4, #2
 8018fae:	e7ef      	b.n	8018f90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018fb0:	d00f      	beq.n	8018fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018fb2:	1e5e      	subs	r6, r3, #1
 8018fb4:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018fb8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018fbc:	d543      	bpl.n	8019046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018fbe:	4698      	mov	r8, r3
 8018fc0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018fc4:	f1b8 0f00 	cmp.w	r8, #0
 8018fc8:	dc71      	bgt.n	80190ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018fca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018fd2:	9b01      	ldr	r3, [sp, #4]
 8018fd4:	2b00      	cmp	r3, #0
 8018fd6:	f340 809d 	ble.w	8019114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018fda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fe2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018fe6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fe8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ff0:	eeb0 6a62 	vmov.f32	s12, s5
 8018ff4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ff8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ffc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019000:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019004:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019008:	eeb0 6a43 	vmov.f32	s12, s6
 801900c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019010:	ee12 2a90 	vmov	r2, s5
 8019014:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019018:	fb92 fcf3 	sdiv	ip, r2, r3
 801901c:	ee13 2a10 	vmov	r2, s6
 8019020:	fb92 f3f3 	sdiv	r3, r2, r3
 8019024:	9312      	str	r3, [sp, #72]	; 0x48
 8019026:	9b01      	ldr	r3, [sp, #4]
 8019028:	9a03      	ldr	r2, [sp, #12]
 801902a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801902e:	3b01      	subs	r3, #1
 8019030:	9301      	str	r3, [sp, #4]
 8019032:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019038:	eeb0 3a67 	vmov.f32	s6, s15
 801903c:	bf08      	it	eq
 801903e:	4613      	moveq	r3, r2
 8019040:	eef0 2a47 	vmov.f32	s5, s14
 8019044:	e793      	b.n	8018f6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019046:	45ce      	cmp	lr, r9
 8019048:	dab9      	bge.n	8018fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801904a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801904c:	fb01 2606 	mla	r6, r1, r6, r2
 8019050:	1436      	asrs	r6, r6, #16
 8019052:	d4b4      	bmi.n	8018fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019054:	4546      	cmp	r6, r8
 8019056:	dab2      	bge.n	8018fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019058:	4698      	mov	r8, r3
 801905a:	46a2      	mov	sl, r4
 801905c:	f1b8 0f00 	cmp.w	r8, #0
 8019060:	ddb3      	ble.n	8018fca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019062:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019066:	9902      	ldr	r1, [sp, #8]
 8019068:	1416      	asrs	r6, r2, #16
 801906a:	fb09 1606 	mla	r6, r9, r6, r1
 801906e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019072:	492a      	ldr	r1, [pc, #168]	; (801911c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019074:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019078:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801907c:	eb07 0b0e 	add.w	fp, r7, lr
 8019080:	4460      	add	r0, ip
 8019082:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019086:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801908a:	00f6      	lsls	r6, r6, #3
 801908c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019090:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019094:	ea49 0606 	orr.w	r6, r9, r6
 8019098:	f817 900e 	ldrb.w	r9, [r7, lr]
 801909c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801909e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80190a2:	f82a 6b02 	strh.w	r6, [sl], #2
 80190a6:	440a      	add	r2, r1
 80190a8:	f108 38ff 	add.w	r8, r8, #4294967295
 80190ac:	e7d6      	b.n	801905c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80190ae:	ea5f 4920 	movs.w	r9, r0, asr #16
 80190b2:	d429      	bmi.n	8019108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80190b4:	68ae      	ldr	r6, [r5, #8]
 80190b6:	454e      	cmp	r6, r9
 80190b8:	dd26      	ble.n	8019108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80190ba:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80190be:	d423      	bmi.n	8019108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80190c0:	68e9      	ldr	r1, [r5, #12]
 80190c2:	4559      	cmp	r1, fp
 80190c4:	dd20      	ble.n	8019108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80190c6:	9902      	ldr	r1, [sp, #8]
 80190c8:	fa0f fe86 	sxth.w	lr, r6
 80190cc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80190d0:	f06f 0101 	mvn.w	r1, #1
 80190d4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80190d8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80190dc:	eb07 060e 	add.w	r6, r7, lr
 80190e0:	fb01 f908 	mul.w	r9, r1, r8
 80190e4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80190e8:	7876      	ldrb	r6, [r6, #1]
 80190ea:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80190ee:	00f6      	lsls	r6, r6, #3
 80190f0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80190f4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80190f8:	ea4b 0606 	orr.w	r6, fp, r6
 80190fc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019100:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8019104:	f82a 6009 	strh.w	r6, [sl, r9]
 8019108:	9912      	ldr	r1, [sp, #72]	; 0x48
 801910a:	4460      	add	r0, ip
 801910c:	440a      	add	r2, r1
 801910e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019112:	e757      	b.n	8018fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019114:	b005      	add	sp, #20
 8019116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801911a:	bf00      	nop
 801911c:	fffff800 	.word	0xfffff800

08019120 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019124:	b087      	sub	sp, #28
 8019126:	468b      	mov	fp, r1
 8019128:	9815      	ldr	r0, [sp, #84]	; 0x54
 801912a:	9204      	str	r2, [sp, #16]
 801912c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019130:	9205      	str	r2, [sp, #20]
 8019132:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019136:	6841      	ldr	r1, [r0, #4]
 8019138:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801913c:	fb01 2404 	mla	r4, r1, r4, r2
 8019140:	6802      	ldr	r2, [r0, #0]
 8019142:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019146:	f8dc 2000 	ldr.w	r2, [ip]
 801914a:	9201      	str	r2, [sp, #4]
 801914c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019150:	3204      	adds	r2, #4
 8019152:	9202      	str	r2, [sp, #8]
 8019154:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019158:	f1bb 0f00 	cmp.w	fp, #0
 801915c:	dc03      	bgt.n	8019166 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801915e:	9a04      	ldr	r2, [sp, #16]
 8019160:	2a00      	cmp	r2, #0
 8019162:	f340 8138 	ble.w	80193d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019166:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019168:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801916c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019170:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019174:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019176:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801917a:	2b00      	cmp	r3, #0
 801917c:	dd0e      	ble.n	801919c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801917e:	1402      	asrs	r2, r0, #16
 8019180:	d405      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019182:	42ba      	cmp	r2, r7
 8019184:	da03      	bge.n	801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019186:	140a      	asrs	r2, r1, #16
 8019188:	d401      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801918a:	42b2      	cmp	r2, r6
 801918c:	db07      	blt.n	801919e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801918e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019190:	4410      	add	r0, r2
 8019192:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019194:	3b01      	subs	r3, #1
 8019196:	4411      	add	r1, r2
 8019198:	3402      	adds	r4, #2
 801919a:	e7ee      	b.n	801917a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801919c:	d019      	beq.n	80191d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801919e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80191a0:	1e5a      	subs	r2, r3, #1
 80191a2:	fb05 0502 	mla	r5, r5, r2, r0
 80191a6:	142d      	asrs	r5, r5, #16
 80191a8:	d409      	bmi.n	80191be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80191aa:	42bd      	cmp	r5, r7
 80191ac:	da07      	bge.n	80191be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80191ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80191b0:	fb05 1202 	mla	r2, r5, r2, r1
 80191b4:	1412      	asrs	r2, r2, #16
 80191b6:	d402      	bmi.n	80191be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80191b8:	42b2      	cmp	r2, r6
 80191ba:	f2c0 80ac 	blt.w	8019316 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80191be:	f04f 0e00 	mov.w	lr, #0
 80191c2:	eb03 020e 	add.w	r2, r3, lr
 80191c6:	2a00      	cmp	r2, #0
 80191c8:	dc3e      	bgt.n	8019248 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80191ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80191d2:	f1bb 0f00 	cmp.w	fp, #0
 80191d6:	f340 80fe 	ble.w	80193d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80191da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80191e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191e8:	f1bb 0b01 	subs.w	fp, fp, #1
 80191ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191f4:	eeb0 6a62 	vmov.f32	s12, s5
 80191f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019200:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019204:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019208:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801920c:	eeb0 6a43 	vmov.f32	s12, s6
 8019210:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019214:	ee12 2a90 	vmov	r2, s5
 8019218:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801921c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019220:	ee13 2a10 	vmov	r2, s6
 8019224:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019228:	9313      	str	r3, [sp, #76]	; 0x4c
 801922a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801922c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019230:	9a04      	ldr	r2, [sp, #16]
 8019232:	9314      	str	r3, [sp, #80]	; 0x50
 8019234:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019238:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801923a:	eeb0 3a67 	vmov.f32	s6, s15
 801923e:	bf08      	it	eq
 8019240:	4613      	moveq	r3, r2
 8019242:	eef0 2a47 	vmov.f32	s5, s14
 8019246:	e787      	b.n	8019158 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019248:	1406      	asrs	r6, r0, #16
 801924a:	d45d      	bmi.n	8019308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801924c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019250:	42b5      	cmp	r5, r6
 8019252:	dd59      	ble.n	8019308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019254:	140f      	asrs	r7, r1, #16
 8019256:	d457      	bmi.n	8019308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019258:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801925c:	42ba      	cmp	r2, r7
 801925e:	dd53      	ble.n	8019308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019260:	9a01      	ldr	r2, [sp, #4]
 8019262:	b22d      	sxth	r5, r5
 8019264:	fb07 2505 	mla	r5, r7, r5, r2
 8019268:	5daa      	ldrb	r2, [r5, r6]
 801926a:	9d02      	ldr	r5, [sp, #8]
 801926c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019270:	0e2e      	lsrs	r6, r5, #24
 8019272:	d049      	beq.n	8019308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019274:	f06f 0201 	mvn.w	r2, #1
 8019278:	fb02 f20e 	mul.w	r2, r2, lr
 801927c:	9203      	str	r2, [sp, #12]
 801927e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019282:	9a05      	ldr	r2, [sp, #20]
 8019284:	4356      	muls	r6, r2
 8019286:	1c72      	adds	r2, r6, #1
 8019288:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801928c:	1212      	asrs	r2, r2, #8
 801928e:	fa1f f982 	uxth.w	r9, r2
 8019292:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019296:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801929a:	43d2      	mvns	r2, r2
 801929c:	b2d2      	uxtb	r2, r2
 801929e:	fb16 f609 	smulbb	r6, r6, r9
 80192a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80192a6:	fb07 6702 	mla	r7, r7, r2, r6
 80192aa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80192ae:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80192b2:	b2ed      	uxtb	r5, r5
 80192b4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80192b8:	fa5f f888 	uxtb.w	r8, r8
 80192bc:	fb15 f509 	smulbb	r5, r5, r9
 80192c0:	fb08 5502 	mla	r5, r8, r2, r5
 80192c4:	b2bf      	uxth	r7, r7
 80192c6:	fb1a fa09 	smulbb	sl, sl, r9
 80192ca:	b2ad      	uxth	r5, r5
 80192cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80192d0:	fb06 a602 	mla	r6, r6, r2, sl
 80192d4:	1c7a      	adds	r2, r7, #1
 80192d6:	f105 0a01 	add.w	sl, r5, #1
 80192da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80192de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80192e2:	b2b6      	uxth	r6, r6
 80192e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80192e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80192ec:	ea4a 0707 	orr.w	r7, sl, r7
 80192f0:	f106 0a01 	add.w	sl, r6, #1
 80192f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80192f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80192fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019300:	9a03      	ldr	r2, [sp, #12]
 8019302:	ea47 070a 	orr.w	r7, r7, sl
 8019306:	52a7      	strh	r7, [r4, r2]
 8019308:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801930a:	4410      	add	r0, r2
 801930c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801930e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019312:	4411      	add	r1, r2
 8019314:	e755      	b.n	80191c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019316:	f04f 0800 	mov.w	r8, #0
 801931a:	eba3 0208 	sub.w	r2, r3, r8
 801931e:	2a00      	cmp	r2, #0
 8019320:	f77f af53 	ble.w	80191ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019324:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019328:	9f01      	ldr	r7, [sp, #4]
 801932a:	140a      	asrs	r2, r1, #16
 801932c:	1405      	asrs	r5, r0, #16
 801932e:	fb06 7202 	mla	r2, r6, r2, r7
 8019332:	5d52      	ldrb	r2, [r2, r5]
 8019334:	9d02      	ldr	r5, [sp, #8]
 8019336:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801933a:	0e2e      	lsrs	r6, r5, #24
 801933c:	d044      	beq.n	80193c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801933e:	9a05      	ldr	r2, [sp, #20]
 8019340:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019344:	4356      	muls	r6, r2
 8019346:	1c72      	adds	r2, r6, #1
 8019348:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801934c:	1212      	asrs	r2, r2, #8
 801934e:	fa1f f982 	uxth.w	r9, r2
 8019352:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019356:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801935a:	43d2      	mvns	r2, r2
 801935c:	b2d2      	uxtb	r2, r2
 801935e:	fb16 f609 	smulbb	r6, r6, r9
 8019362:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019366:	fb07 6702 	mla	r7, r7, r2, r6
 801936a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801936e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019372:	b2ed      	uxtb	r5, r5
 8019374:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019378:	fa5f fe8e 	uxtb.w	lr, lr
 801937c:	fb15 f509 	smulbb	r5, r5, r9
 8019380:	fb0e 5502 	mla	r5, lr, r2, r5
 8019384:	b2bf      	uxth	r7, r7
 8019386:	fb1a fa09 	smulbb	sl, sl, r9
 801938a:	b2ad      	uxth	r5, r5
 801938c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019390:	fb06 a602 	mla	r6, r6, r2, sl
 8019394:	1c7a      	adds	r2, r7, #1
 8019396:	f105 0a01 	add.w	sl, r5, #1
 801939a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801939e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80193a2:	b2b6      	uxth	r6, r6
 80193a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80193a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80193ac:	ea4a 0707 	orr.w	r7, sl, r7
 80193b0:	f106 0a01 	add.w	sl, r6, #1
 80193b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80193b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80193c0:	ea47 070a 	orr.w	r7, r7, sl
 80193c4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80193c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80193ca:	4410      	add	r0, r2
 80193cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80193ce:	f108 0801 	add.w	r8, r8, #1
 80193d2:	4411      	add	r1, r2
 80193d4:	e7a1      	b.n	801931a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80193d6:	b007      	add	sp, #28
 80193d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080193dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193e0:	b085      	sub	sp, #20
 80193e2:	468b      	mov	fp, r1
 80193e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80193e6:	9203      	str	r2, [sp, #12]
 80193e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80193ec:	6841      	ldr	r1, [r0, #4]
 80193ee:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80193f2:	fb01 2404 	mla	r4, r1, r4, r2
 80193f6:	6802      	ldr	r2, [r0, #0]
 80193f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80193fc:	f8de 2000 	ldr.w	r2, [lr]
 8019400:	9200      	str	r2, [sp, #0]
 8019402:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019406:	3204      	adds	r2, #4
 8019408:	9201      	str	r2, [sp, #4]
 801940a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801940e:	f1bb 0f00 	cmp.w	fp, #0
 8019412:	dc03      	bgt.n	801941c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019414:	9a03      	ldr	r2, [sp, #12]
 8019416:	2a00      	cmp	r2, #0
 8019418:	f340 8153 	ble.w	80196c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801941c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801941e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019422:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019426:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801942a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801942c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019430:	2b00      	cmp	r3, #0
 8019432:	dd0e      	ble.n	8019452 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019434:	1408      	asrs	r0, r1, #16
 8019436:	d405      	bmi.n	8019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019438:	42b8      	cmp	r0, r7
 801943a:	da03      	bge.n	8019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801943c:	1410      	asrs	r0, r2, #16
 801943e:	d401      	bmi.n	8019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019440:	42b0      	cmp	r0, r6
 8019442:	db07      	blt.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019444:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019446:	4401      	add	r1, r0
 8019448:	9812      	ldr	r0, [sp, #72]	; 0x48
 801944a:	3b01      	subs	r3, #1
 801944c:	4402      	add	r2, r0
 801944e:	3402      	adds	r4, #2
 8019450:	e7ee      	b.n	8019430 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019452:	d017      	beq.n	8019484 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019454:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019456:	1e58      	subs	r0, r3, #1
 8019458:	fb05 1500 	mla	r5, r5, r0, r1
 801945c:	142d      	asrs	r5, r5, #16
 801945e:	d409      	bmi.n	8019474 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019460:	42bd      	cmp	r5, r7
 8019462:	da07      	bge.n	8019474 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019464:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019466:	fb05 2000 	mla	r0, r5, r0, r2
 801946a:	1400      	asrs	r0, r0, #16
 801946c:	d402      	bmi.n	8019474 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801946e:	42b0      	cmp	r0, r6
 8019470:	f2c0 80bc 	blt.w	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019474:	2600      	movs	r6, #0
 8019476:	1998      	adds	r0, r3, r6
 8019478:	2800      	cmp	r0, #0
 801947a:	dc3e      	bgt.n	80194fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801947c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019480:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019484:	f1bb 0f00 	cmp.w	fp, #0
 8019488:	f340 811b 	ble.w	80196c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801948c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019490:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019494:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019498:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801949a:	f1bb 0b01 	subs.w	fp, fp, #1
 801949e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194a6:	eeb0 6a62 	vmov.f32	s12, s5
 80194aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80194ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80194b6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80194ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80194be:	eeb0 6a43 	vmov.f32	s12, s6
 80194c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80194c6:	ee12 2a90 	vmov	r2, s5
 80194ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80194d2:	ee13 2a10 	vmov	r2, s6
 80194d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194da:	9311      	str	r3, [sp, #68]	; 0x44
 80194dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194de:	fb92 f3f3 	sdiv	r3, r2, r3
 80194e2:	9a03      	ldr	r2, [sp, #12]
 80194e4:	9312      	str	r3, [sp, #72]	; 0x48
 80194e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80194ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194ec:	eeb0 3a67 	vmov.f32	s6, s15
 80194f0:	bf08      	it	eq
 80194f2:	4613      	moveq	r3, r2
 80194f4:	eef0 2a47 	vmov.f32	s5, s14
 80194f8:	e789      	b.n	801940e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80194fa:	140f      	asrs	r7, r1, #16
 80194fc:	d426      	bmi.n	801954c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019502:	42bd      	cmp	r5, r7
 8019504:	dd22      	ble.n	801954c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019506:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801950a:	d41f      	bmi.n	801954c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801950c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019510:	4560      	cmp	r0, ip
 8019512:	dd1b      	ble.n	801954c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019514:	9800      	ldr	r0, [sp, #0]
 8019516:	b22d      	sxth	r5, r5
 8019518:	fb0c 0505 	mla	r5, ip, r5, r0
 801951c:	5de8      	ldrb	r0, [r5, r7]
 801951e:	9d01      	ldr	r5, [sp, #4]
 8019520:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8019524:	0e07      	lsrs	r7, r0, #24
 8019526:	2fff      	cmp	r7, #255	; 0xff
 8019528:	d116      	bne.n	8019558 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801952a:	f06f 0501 	mvn.w	r5, #1
 801952e:	fb05 f706 	mul.w	r7, r5, r6
 8019532:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019536:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801953a:	0945      	lsrs	r5, r0, #5
 801953c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019540:	ea4c 0505 	orr.w	r5, ip, r5
 8019544:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019548:	4305      	orrs	r5, r0
 801954a:	53e5      	strh	r5, [r4, r7]
 801954c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801954e:	4401      	add	r1, r0
 8019550:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019552:	3e01      	subs	r6, #1
 8019554:	4402      	add	r2, r0
 8019556:	e78e      	b.n	8019476 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019558:	b2fd      	uxtb	r5, r7
 801955a:	2f00      	cmp	r7, #0
 801955c:	d0f6      	beq.n	801954c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801955e:	f06f 0701 	mvn.w	r7, #1
 8019562:	4377      	muls	r7, r6
 8019564:	fa1f f985 	uxth.w	r9, r5
 8019568:	f834 8007 	ldrh.w	r8, [r4, r7]
 801956c:	9702      	str	r7, [sp, #8]
 801956e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019572:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019576:	43ed      	mvns	r5, r5
 8019578:	b2ed      	uxtb	r5, r5
 801957a:	fb17 f709 	smulbb	r7, r7, r9
 801957e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019582:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019586:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801958a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801958e:	b2c0      	uxtb	r0, r0
 8019590:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019594:	fa5f f888 	uxtb.w	r8, r8
 8019598:	fb10 f009 	smulbb	r0, r0, r9
 801959c:	fb08 0005 	mla	r0, r8, r5, r0
 80195a0:	b280      	uxth	r0, r0
 80195a2:	fa1f fc8c 	uxth.w	ip, ip
 80195a6:	fb1a fa09 	smulbb	sl, sl, r9
 80195aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80195ae:	fb07 a705 	mla	r7, r7, r5, sl
 80195b2:	f100 0a01 	add.w	sl, r0, #1
 80195b6:	f10c 0501 	add.w	r5, ip, #1
 80195ba:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80195be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80195c2:	b2bf      	uxth	r7, r7
 80195c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80195cc:	ea4a 0c0c 	orr.w	ip, sl, ip
 80195d0:	f107 0a01 	add.w	sl, r7, #1
 80195d4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80195d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195e0:	9802      	ldr	r0, [sp, #8]
 80195e2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80195e6:	f824 c000 	strh.w	ip, [r4, r0]
 80195ea:	e7af      	b.n	801954c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195ec:	f04f 0800 	mov.w	r8, #0
 80195f0:	eba3 0008 	sub.w	r0, r3, r8
 80195f4:	2800      	cmp	r0, #0
 80195f6:	f77f af41 	ble.w	801947c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80195fa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80195fe:	9f00      	ldr	r7, [sp, #0]
 8019600:	1410      	asrs	r0, r2, #16
 8019602:	140d      	asrs	r5, r1, #16
 8019604:	fb06 7000 	mla	r0, r6, r0, r7
 8019608:	5d40      	ldrb	r0, [r0, r5]
 801960a:	9d01      	ldr	r5, [sp, #4]
 801960c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019610:	0e2e      	lsrs	r6, r5, #24
 8019612:	2eff      	cmp	r6, #255	; 0xff
 8019614:	d112      	bne.n	801963c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019616:	482c      	ldr	r0, [pc, #176]	; (80196c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019618:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801961c:	0968      	lsrs	r0, r5, #5
 801961e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019622:	4330      	orrs	r0, r6
 8019624:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019628:	4328      	orrs	r0, r5
 801962a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801962e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019630:	4401      	add	r1, r0
 8019632:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019634:	f108 0801 	add.w	r8, r8, #1
 8019638:	4402      	add	r2, r0
 801963a:	e7d9      	b.n	80195f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801963c:	b2f0      	uxtb	r0, r6
 801963e:	2e00      	cmp	r6, #0
 8019640:	d0f5      	beq.n	801962e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019642:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019646:	fa1f f980 	uxth.w	r9, r0
 801964a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801964e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019652:	43c0      	mvns	r0, r0
 8019654:	b2c0      	uxtb	r0, r0
 8019656:	fb16 f609 	smulbb	r6, r6, r9
 801965a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801965e:	fb07 6700 	mla	r7, r7, r0, r6
 8019662:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019666:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801966a:	b2ed      	uxtb	r5, r5
 801966c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019670:	fa5f fc8c 	uxtb.w	ip, ip
 8019674:	fb15 f509 	smulbb	r5, r5, r9
 8019678:	fb0c 5500 	mla	r5, ip, r0, r5
 801967c:	b2bf      	uxth	r7, r7
 801967e:	fb1a fa09 	smulbb	sl, sl, r9
 8019682:	b2ad      	uxth	r5, r5
 8019684:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019688:	fb06 a600 	mla	r6, r6, r0, sl
 801968c:	1c78      	adds	r0, r7, #1
 801968e:	f105 0a01 	add.w	sl, r5, #1
 8019692:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019696:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801969a:	b2b6      	uxth	r6, r6
 801969c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196a4:	ea4a 0707 	orr.w	r7, sl, r7
 80196a8:	f106 0a01 	add.w	sl, r6, #1
 80196ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80196b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196b8:	ea47 070a 	orr.w	r7, r7, sl
 80196bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80196c0:	e7b5      	b.n	801962e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80196c2:	b005      	add	sp, #20
 80196c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196c8:	fffff800 	.word	0xfffff800

080196cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196d0:	b087      	sub	sp, #28
 80196d2:	468b      	mov	fp, r1
 80196d4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80196d6:	9204      	str	r2, [sp, #16]
 80196d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80196dc:	9205      	str	r2, [sp, #20]
 80196de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80196e2:	6861      	ldr	r1, [r4, #4]
 80196e4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80196e8:	fb01 2000 	mla	r0, r1, r0, r2
 80196ec:	6822      	ldr	r2, [r4, #0]
 80196ee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80196f2:	f8de 2000 	ldr.w	r2, [lr]
 80196f6:	9201      	str	r2, [sp, #4]
 80196f8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80196fc:	9202      	str	r2, [sp, #8]
 80196fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019702:	f1bb 0f00 	cmp.w	fp, #0
 8019706:	dc03      	bgt.n	8019710 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019708:	9a04      	ldr	r2, [sp, #16]
 801970a:	2a00      	cmp	r2, #0
 801970c:	f340 8142 	ble.w	8019994 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019710:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019712:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019716:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801971a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801971e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019720:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019724:	2b00      	cmp	r3, #0
 8019726:	dd0e      	ble.n	8019746 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019728:	140c      	asrs	r4, r1, #16
 801972a:	d405      	bmi.n	8019738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801972c:	42bc      	cmp	r4, r7
 801972e:	da03      	bge.n	8019738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019730:	1414      	asrs	r4, r2, #16
 8019732:	d401      	bmi.n	8019738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019734:	42b4      	cmp	r4, r6
 8019736:	db07      	blt.n	8019748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019738:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801973a:	4421      	add	r1, r4
 801973c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801973e:	3b01      	subs	r3, #1
 8019740:	4422      	add	r2, r4
 8019742:	3002      	adds	r0, #2
 8019744:	e7ee      	b.n	8019724 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019746:	d019      	beq.n	801977c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019748:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801974a:	1e5c      	subs	r4, r3, #1
 801974c:	fb05 1504 	mla	r5, r5, r4, r1
 8019750:	142d      	asrs	r5, r5, #16
 8019752:	d409      	bmi.n	8019768 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019754:	42bd      	cmp	r5, r7
 8019756:	da07      	bge.n	8019768 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019758:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801975a:	fb05 2404 	mla	r4, r5, r4, r2
 801975e:	1424      	asrs	r4, r4, #16
 8019760:	d402      	bmi.n	8019768 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019762:	42b4      	cmp	r4, r6
 8019764:	f2c0 80b1 	blt.w	80198ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019768:	f04f 0800 	mov.w	r8, #0
 801976c:	eb03 0408 	add.w	r4, r3, r8
 8019770:	2c00      	cmp	r4, #0
 8019772:	dc3e      	bgt.n	80197f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019778:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801977c:	f1bb 0f00 	cmp.w	fp, #0
 8019780:	f340 8108 	ble.w	8019994 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019784:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019788:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801978c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019792:	f1bb 0b01 	subs.w	fp, fp, #1
 8019796:	ee31 1a05 	vadd.f32	s2, s2, s10
 801979a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801979e:	eeb0 6a62 	vmov.f32	s12, s5
 80197a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80197b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80197b6:	eeb0 6a43 	vmov.f32	s12, s6
 80197ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197be:	ee12 2a90 	vmov	r2, s5
 80197c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197ca:	ee13 2a10 	vmov	r2, s6
 80197ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80197d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197da:	9a04      	ldr	r2, [sp, #16]
 80197dc:	9314      	str	r3, [sp, #80]	; 0x50
 80197de:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80197e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197e4:	eeb0 3a67 	vmov.f32	s6, s15
 80197e8:	bf08      	it	eq
 80197ea:	4613      	moveq	r3, r2
 80197ec:	eef0 2a47 	vmov.f32	s5, s14
 80197f0:	e787      	b.n	8019702 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80197f2:	140e      	asrs	r6, r1, #16
 80197f4:	d462      	bmi.n	80198bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80197fa:	42b5      	cmp	r5, r6
 80197fc:	dd5e      	ble.n	80198bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197fe:	1417      	asrs	r7, r2, #16
 8019800:	d45c      	bmi.n	80198bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019802:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019806:	42bc      	cmp	r4, r7
 8019808:	dd58      	ble.n	80198bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801980a:	b22d      	sxth	r5, r5
 801980c:	fb07 6505 	mla	r5, r7, r5, r6
 8019810:	9c02      	ldr	r4, [sp, #8]
 8019812:	5d66      	ldrb	r6, [r4, r5]
 8019814:	2e00      	cmp	r6, #0
 8019816:	d051      	beq.n	80198bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019818:	9c01      	ldr	r4, [sp, #4]
 801981a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801981e:	f06f 0401 	mvn.w	r4, #1
 8019822:	fb04 f408 	mul.w	r4, r4, r8
 8019826:	9403      	str	r4, [sp, #12]
 8019828:	5b05      	ldrh	r5, [r0, r4]
 801982a:	9c05      	ldr	r4, [sp, #20]
 801982c:	4366      	muls	r6, r4
 801982e:	1c74      	adds	r4, r6, #1
 8019830:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019834:	1224      	asrs	r4, r4, #8
 8019836:	b2a7      	uxth	r7, r4
 8019838:	122e      	asrs	r6, r5, #8
 801983a:	43e4      	mvns	r4, r4
 801983c:	b2e4      	uxtb	r4, r4
 801983e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019842:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019846:	fb16 f604 	smulbb	r6, r6, r4
 801984a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801984e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019852:	00ed      	lsls	r5, r5, #3
 8019854:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019858:	b2ed      	uxtb	r5, r5
 801985a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801985e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019862:	fb15 f504 	smulbb	r5, r5, r4
 8019866:	fa5f f989 	uxtb.w	r9, r9
 801986a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801986e:	fb09 5507 	mla	r5, r9, r7, r5
 8019872:	fb1a fa04 	smulbb	sl, sl, r4
 8019876:	fa1f fc8c 	uxth.w	ip, ip
 801987a:	b2ad      	uxth	r5, r5
 801987c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019880:	fb06 a607 	mla	r6, r6, r7, sl
 8019884:	f10c 0401 	add.w	r4, ip, #1
 8019888:	f105 0a01 	add.w	sl, r5, #1
 801988c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019890:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019894:	b2b6      	uxth	r6, r6
 8019896:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801989a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801989e:	ea4a 0c0c 	orr.w	ip, sl, ip
 80198a2:	f106 0a01 	add.w	sl, r6, #1
 80198a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80198aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80198ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80198b2:	9c03      	ldr	r4, [sp, #12]
 80198b4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80198b8:	f820 c004 	strh.w	ip, [r0, r4]
 80198bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80198be:	4421      	add	r1, r4
 80198c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80198c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80198c6:	4422      	add	r2, r4
 80198c8:	e750      	b.n	801976c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80198ca:	f04f 0900 	mov.w	r9, #0
 80198ce:	eba3 0409 	sub.w	r4, r3, r9
 80198d2:	2c00      	cmp	r4, #0
 80198d4:	f77f af4e 	ble.w	8019774 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80198d8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80198dc:	140d      	asrs	r5, r1, #16
 80198de:	1414      	asrs	r4, r2, #16
 80198e0:	fb06 5404 	mla	r4, r6, r4, r5
 80198e4:	9d02      	ldr	r5, [sp, #8]
 80198e6:	5d2e      	ldrb	r6, [r5, r4]
 80198e8:	2e00      	cmp	r6, #0
 80198ea:	d04c      	beq.n	8019986 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80198ec:	9d01      	ldr	r5, [sp, #4]
 80198ee:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80198f2:	9c05      	ldr	r4, [sp, #20]
 80198f4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80198f8:	4366      	muls	r6, r4
 80198fa:	1c74      	adds	r4, r6, #1
 80198fc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019900:	1224      	asrs	r4, r4, #8
 8019902:	b2a7      	uxth	r7, r4
 8019904:	122e      	asrs	r6, r5, #8
 8019906:	43e4      	mvns	r4, r4
 8019908:	b2e4      	uxtb	r4, r4
 801990a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801990e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019912:	fb16 f604 	smulbb	r6, r6, r4
 8019916:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801991a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801991e:	00ed      	lsls	r5, r5, #3
 8019920:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019924:	b2ed      	uxtb	r5, r5
 8019926:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801992a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801992e:	fb15 f504 	smulbb	r5, r5, r4
 8019932:	fa5f f888 	uxtb.w	r8, r8
 8019936:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801993a:	fb08 5507 	mla	r5, r8, r7, r5
 801993e:	fb1a fa04 	smulbb	sl, sl, r4
 8019942:	fa1f fc8c 	uxth.w	ip, ip
 8019946:	b2ad      	uxth	r5, r5
 8019948:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801994c:	fb06 a607 	mla	r6, r6, r7, sl
 8019950:	f10c 0401 	add.w	r4, ip, #1
 8019954:	f105 0a01 	add.w	sl, r5, #1
 8019958:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801995c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019960:	b2b6      	uxth	r6, r6
 8019962:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019966:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801996a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801996e:	f106 0a01 	add.w	sl, r6, #1
 8019972:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019976:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801997a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801997e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019982:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019986:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019988:	4421      	add	r1, r4
 801998a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801998c:	f109 0901 	add.w	r9, r9, #1
 8019990:	4422      	add	r2, r4
 8019992:	e79c      	b.n	80198ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019994:	b007      	add	sp, #28
 8019996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801999a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801999a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801999e:	b085      	sub	sp, #20
 80199a0:	468b      	mov	fp, r1
 80199a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199a4:	9203      	str	r2, [sp, #12]
 80199a6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80199aa:	6861      	ldr	r1, [r4, #4]
 80199ac:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80199b0:	fb01 2000 	mla	r0, r1, r0, r2
 80199b4:	6822      	ldr	r2, [r4, #0]
 80199b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80199ba:	f8d8 2000 	ldr.w	r2, [r8]
 80199be:	9200      	str	r2, [sp, #0]
 80199c0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80199c4:	9201      	str	r2, [sp, #4]
 80199c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80199ca:	f1bb 0f00 	cmp.w	fp, #0
 80199ce:	dc03      	bgt.n	80199d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80199d0:	9a03      	ldr	r2, [sp, #12]
 80199d2:	2a00      	cmp	r2, #0
 80199d4:	f340 8146 	ble.w	8019c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80199d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80199da:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80199de:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80199e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80199e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80199e8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80199ec:	2b00      	cmp	r3, #0
 80199ee:	dd0e      	ble.n	8019a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80199f0:	140c      	asrs	r4, r1, #16
 80199f2:	d405      	bmi.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80199f4:	42bc      	cmp	r4, r7
 80199f6:	da03      	bge.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80199f8:	1414      	asrs	r4, r2, #16
 80199fa:	d401      	bmi.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80199fc:	42b4      	cmp	r4, r6
 80199fe:	db07      	blt.n	8019a10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019a00:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019a02:	4421      	add	r1, r4
 8019a04:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019a06:	3b01      	subs	r3, #1
 8019a08:	4422      	add	r2, r4
 8019a0a:	3002      	adds	r0, #2
 8019a0c:	e7ee      	b.n	80199ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019a0e:	d017      	beq.n	8019a40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019a10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a12:	1e5c      	subs	r4, r3, #1
 8019a14:	fb05 1504 	mla	r5, r5, r4, r1
 8019a18:	142d      	asrs	r5, r5, #16
 8019a1a:	d409      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019a1c:	42bd      	cmp	r5, r7
 8019a1e:	da07      	bge.n	8019a30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019a20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019a22:	fb05 2404 	mla	r4, r5, r4, r2
 8019a26:	1424      	asrs	r4, r4, #16
 8019a28:	d402      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019a2a:	42b4      	cmp	r4, r6
 8019a2c:	f2c0 80b3 	blt.w	8019b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019a30:	2600      	movs	r6, #0
 8019a32:	199c      	adds	r4, r3, r6
 8019a34:	2c00      	cmp	r4, #0
 8019a36:	dc3e      	bgt.n	8019ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019a38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a40:	f1bb 0f00 	cmp.w	fp, #0
 8019a44:	f340 810e 	ble.w	8019c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019a48:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a50:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a56:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a62:	eeb0 6a62 	vmov.f32	s12, s5
 8019a66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a72:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019a76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a7a:	eeb0 6a43 	vmov.f32	s12, s6
 8019a7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a82:	ee12 2a90 	vmov	r2, s5
 8019a86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a8e:	ee13 2a10 	vmov	r2, s6
 8019a92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a96:	9311      	str	r3, [sp, #68]	; 0x44
 8019a98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a9e:	9a03      	ldr	r2, [sp, #12]
 8019aa0:	9312      	str	r3, [sp, #72]	; 0x48
 8019aa2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019aa6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019aa8:	eeb0 3a67 	vmov.f32	s6, s15
 8019aac:	bf08      	it	eq
 8019aae:	4613      	moveq	r3, r2
 8019ab0:	eef0 2a47 	vmov.f32	s5, s14
 8019ab4:	e789      	b.n	80199ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019ab6:	140f      	asrs	r7, r1, #16
 8019ab8:	d418      	bmi.n	8019aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019aba:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019abe:	42bd      	cmp	r5, r7
 8019ac0:	dd14      	ble.n	8019aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019ac2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019ac6:	d411      	bmi.n	8019aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019ac8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019acc:	4564      	cmp	r4, ip
 8019ace:	dd0d      	ble.n	8019aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019ad0:	b22d      	sxth	r5, r5
 8019ad2:	fb0c 7505 	mla	r5, ip, r5, r7
 8019ad6:	9c01      	ldr	r4, [sp, #4]
 8019ad8:	5d64      	ldrb	r4, [r4, r5]
 8019ada:	2cff      	cmp	r4, #255	; 0xff
 8019adc:	d10c      	bne.n	8019af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019ade:	9c00      	ldr	r4, [sp, #0]
 8019ae0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019ae4:	f06f 0401 	mvn.w	r4, #1
 8019ae8:	4374      	muls	r4, r6
 8019aea:	5305      	strh	r5, [r0, r4]
 8019aec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019aee:	4421      	add	r1, r4
 8019af0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019af2:	3e01      	subs	r6, #1
 8019af4:	4422      	add	r2, r4
 8019af6:	e79c      	b.n	8019a32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019af8:	2c00      	cmp	r4, #0
 8019afa:	d0f7      	beq.n	8019aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019afc:	9f00      	ldr	r7, [sp, #0]
 8019afe:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019b02:	f06f 0501 	mvn.w	r5, #1
 8019b06:	4375      	muls	r5, r6
 8019b08:	9502      	str	r5, [sp, #8]
 8019b0a:	5b45      	ldrh	r5, [r0, r5]
 8019b0c:	fa1f fc84 	uxth.w	ip, r4
 8019b10:	122f      	asrs	r7, r5, #8
 8019b12:	43e4      	mvns	r4, r4
 8019b14:	b2e4      	uxtb	r4, r4
 8019b16:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019b1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b1e:	fb17 f704 	smulbb	r7, r7, r4
 8019b22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019b26:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019b2a:	00ed      	lsls	r5, r5, #3
 8019b2c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019b30:	b2ed      	uxtb	r5, r5
 8019b32:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019b36:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019b3a:	fb15 f504 	smulbb	r5, r5, r4
 8019b3e:	fa5f f989 	uxtb.w	r9, r9
 8019b42:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b46:	fb09 550c 	mla	r5, r9, ip, r5
 8019b4a:	fb1a fa04 	smulbb	sl, sl, r4
 8019b4e:	fa1f fe8e 	uxth.w	lr, lr
 8019b52:	b2ad      	uxth	r5, r5
 8019b54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b58:	fb07 a70c 	mla	r7, r7, ip, sl
 8019b5c:	f10e 0401 	add.w	r4, lr, #1
 8019b60:	f105 0a01 	add.w	sl, r5, #1
 8019b64:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019b68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b6c:	b2bf      	uxth	r7, r7
 8019b6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b72:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019b76:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019b7a:	f107 0a01 	add.w	sl, r7, #1
 8019b7e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019b82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b8a:	9c02      	ldr	r4, [sp, #8]
 8019b8c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019b90:	f820 e004 	strh.w	lr, [r0, r4]
 8019b94:	e7aa      	b.n	8019aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b96:	f04f 0900 	mov.w	r9, #0
 8019b9a:	eba3 0409 	sub.w	r4, r3, r9
 8019b9e:	2c00      	cmp	r4, #0
 8019ba0:	f77f af4a 	ble.w	8019a38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019ba4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019ba8:	1414      	asrs	r4, r2, #16
 8019baa:	140d      	asrs	r5, r1, #16
 8019bac:	fb06 5504 	mla	r5, r6, r4, r5
 8019bb0:	9c01      	ldr	r4, [sp, #4]
 8019bb2:	5d64      	ldrb	r4, [r4, r5]
 8019bb4:	2cff      	cmp	r4, #255	; 0xff
 8019bb6:	d10b      	bne.n	8019bd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019bb8:	9c00      	ldr	r4, [sp, #0]
 8019bba:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019bbe:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019bc2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019bc4:	4421      	add	r1, r4
 8019bc6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019bc8:	f109 0901 	add.w	r9, r9, #1
 8019bcc:	4422      	add	r2, r4
 8019bce:	e7e4      	b.n	8019b9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019bd0:	2c00      	cmp	r4, #0
 8019bd2:	d0f6      	beq.n	8019bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019bd4:	9e00      	ldr	r6, [sp, #0]
 8019bd6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019bda:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019bde:	b2a7      	uxth	r7, r4
 8019be0:	122e      	asrs	r6, r5, #8
 8019be2:	43e4      	mvns	r4, r4
 8019be4:	b2e4      	uxtb	r4, r4
 8019be6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019bea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019bee:	fb16 f604 	smulbb	r6, r6, r4
 8019bf2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019bf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019bfa:	00ed      	lsls	r5, r5, #3
 8019bfc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c00:	b2ed      	uxtb	r5, r5
 8019c02:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019c06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019c0a:	fb15 f504 	smulbb	r5, r5, r4
 8019c0e:	fa5f fe8e 	uxtb.w	lr, lr
 8019c12:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019c16:	fb0e 5507 	mla	r5, lr, r7, r5
 8019c1a:	fb1a fa04 	smulbb	sl, sl, r4
 8019c1e:	fa1f fc8c 	uxth.w	ip, ip
 8019c22:	b2ad      	uxth	r5, r5
 8019c24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c28:	fb06 a607 	mla	r6, r6, r7, sl
 8019c2c:	f10c 0401 	add.w	r4, ip, #1
 8019c30:	f105 0a01 	add.w	sl, r5, #1
 8019c34:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c38:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c3c:	b2b6      	uxth	r6, r6
 8019c3e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c42:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c46:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019c4a:	f106 0a01 	add.w	sl, r6, #1
 8019c4e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c56:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c5e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019c62:	e7ae      	b.n	8019bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019c64:	b005      	add	sp, #20
 8019c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c6e:	b085      	sub	sp, #20
 8019c70:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c72:	9203      	str	r2, [sp, #12]
 8019c74:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019c78:	9201      	str	r2, [sp, #4]
 8019c7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c7e:	9100      	str	r1, [sp, #0]
 8019c80:	6841      	ldr	r1, [r0, #4]
 8019c82:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019c86:	fb01 2404 	mla	r4, r1, r4, r2
 8019c8a:	6802      	ldr	r2, [r0, #0]
 8019c8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c90:	f8de 2000 	ldr.w	r2, [lr]
 8019c94:	9202      	str	r2, [sp, #8]
 8019c96:	9a01      	ldr	r2, [sp, #4]
 8019c98:	43d6      	mvns	r6, r2
 8019c9a:	b2f6      	uxtb	r6, r6
 8019c9c:	9a00      	ldr	r2, [sp, #0]
 8019c9e:	2a00      	cmp	r2, #0
 8019ca0:	dc03      	bgt.n	8019caa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019ca2:	9a03      	ldr	r2, [sp, #12]
 8019ca4:	2a00      	cmp	r2, #0
 8019ca6:	f340 8124 	ble.w	8019ef2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019caa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cac:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019cb0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019cb4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019cba:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cbe:	2b00      	cmp	r3, #0
 8019cc0:	dd0e      	ble.n	8019ce0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019cc2:	1408      	asrs	r0, r1, #16
 8019cc4:	d405      	bmi.n	8019cd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019cc6:	4560      	cmp	r0, ip
 8019cc8:	da03      	bge.n	8019cd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019cca:	1410      	asrs	r0, r2, #16
 8019ccc:	d401      	bmi.n	8019cd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019cce:	42b8      	cmp	r0, r7
 8019cd0:	db07      	blt.n	8019ce2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019cd2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019cd4:	4401      	add	r1, r0
 8019cd6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019cd8:	3b01      	subs	r3, #1
 8019cda:	4402      	add	r2, r0
 8019cdc:	3402      	adds	r4, #2
 8019cde:	e7ee      	b.n	8019cbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019ce0:	d06e      	beq.n	8019dc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019ce2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019ce4:	1e58      	subs	r0, r3, #1
 8019ce6:	fb05 1500 	mla	r5, r5, r0, r1
 8019cea:	142d      	asrs	r5, r5, #16
 8019cec:	d45c      	bmi.n	8019da8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019cee:	4565      	cmp	r5, ip
 8019cf0:	da5a      	bge.n	8019da8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019cf2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019cf4:	fb05 2000 	mla	r0, r5, r0, r2
 8019cf8:	1400      	asrs	r0, r0, #16
 8019cfa:	d455      	bmi.n	8019da8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019cfc:	42b8      	cmp	r0, r7
 8019cfe:	da53      	bge.n	8019da8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d00:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019d04:	4699      	mov	r9, r3
 8019d06:	46a2      	mov	sl, r4
 8019d08:	f1b9 0f00 	cmp.w	r9, #0
 8019d0c:	dd54      	ble.n	8019db8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019d12:	140d      	asrs	r5, r1, #16
 8019d14:	1410      	asrs	r0, r2, #16
 8019d16:	fb07 5000 	mla	r0, r7, r0, r5
 8019d1a:	9d02      	ldr	r5, [sp, #8]
 8019d1c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019d20:	f8ba 5000 	ldrh.w	r5, [sl]
 8019d24:	122f      	asrs	r7, r5, #8
 8019d26:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019d2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d2e:	fb17 f706 	smulbb	r7, r7, r6
 8019d32:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019d36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d3a:	00ed      	lsls	r5, r5, #3
 8019d3c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019d40:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019d44:	10c7      	asrs	r7, r0, #3
 8019d46:	b2ed      	uxtb	r5, r5
 8019d48:	00c0      	lsls	r0, r0, #3
 8019d4a:	fb18 f806 	smulbb	r8, r8, r6
 8019d4e:	fb15 f506 	smulbb	r5, r5, r6
 8019d52:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d56:	b2c0      	uxtb	r0, r0
 8019d58:	fa1f fc8c 	uxth.w	ip, ip
 8019d5c:	fb07 870b 	mla	r7, r7, fp, r8
 8019d60:	fb00 500b 	mla	r0, r0, fp, r5
 8019d64:	b280      	uxth	r0, r0
 8019d66:	b2bf      	uxth	r7, r7
 8019d68:	f10c 0501 	add.w	r5, ip, #1
 8019d6c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019d70:	f107 0801 	add.w	r8, r7, #1
 8019d74:	1c45      	adds	r5, r0, #1
 8019d76:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019d7a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019d7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d80:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d84:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019d8c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019d90:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019d94:	4401      	add	r1, r0
 8019d96:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d98:	ea4c 0c08 	orr.w	ip, ip, r8
 8019d9c:	f82a cb02 	strh.w	ip, [sl], #2
 8019da0:	4402      	add	r2, r0
 8019da2:	f109 39ff 	add.w	r9, r9, #4294967295
 8019da6:	e7af      	b.n	8019d08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019da8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019dac:	f04f 0800 	mov.w	r8, #0
 8019db0:	eb03 0008 	add.w	r0, r3, r8
 8019db4:	2800      	cmp	r0, #0
 8019db6:	dc41      	bgt.n	8019e3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019db8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019dbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019dc0:	9b00      	ldr	r3, [sp, #0]
 8019dc2:	2b00      	cmp	r3, #0
 8019dc4:	f340 8095 	ble.w	8019ef2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019dc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019dd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019dd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019dda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019de2:	eef0 6a62 	vmov.f32	s13, s5
 8019de6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019df2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019df6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dfa:	eef0 6a43 	vmov.f32	s13, s6
 8019dfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e02:	ee12 2a90 	vmov	r2, s5
 8019e06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e0e:	ee13 2a10 	vmov	r2, s6
 8019e12:	9311      	str	r3, [sp, #68]	; 0x44
 8019e14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e1a:	9312      	str	r3, [sp, #72]	; 0x48
 8019e1c:	9b00      	ldr	r3, [sp, #0]
 8019e1e:	9a03      	ldr	r2, [sp, #12]
 8019e20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e24:	3b01      	subs	r3, #1
 8019e26:	9300      	str	r3, [sp, #0]
 8019e28:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019e2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e2e:	eeb0 3a67 	vmov.f32	s6, s15
 8019e32:	bf08      	it	eq
 8019e34:	4613      	moveq	r3, r2
 8019e36:	eef0 2a47 	vmov.f32	s5, s14
 8019e3a:	e72f      	b.n	8019c9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019e3c:	140f      	asrs	r7, r1, #16
 8019e3e:	d451      	bmi.n	8019ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e40:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019e44:	42bd      	cmp	r5, r7
 8019e46:	dd4d      	ble.n	8019ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e48:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019e4c:	d44a      	bmi.n	8019ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e4e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019e52:	4560      	cmp	r0, ip
 8019e54:	dd46      	ble.n	8019ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e56:	b22d      	sxth	r5, r5
 8019e58:	fb0c 7505 	mla	r5, ip, r5, r7
 8019e5c:	9802      	ldr	r0, [sp, #8]
 8019e5e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019e62:	f06f 0501 	mvn.w	r5, #1
 8019e66:	fb05 fb08 	mul.w	fp, r5, r8
 8019e6a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019e6e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019e72:	122f      	asrs	r7, r5, #8
 8019e74:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e78:	fb17 f706 	smulbb	r7, r7, r6
 8019e7c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019e80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e84:	00ed      	lsls	r5, r5, #3
 8019e86:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019e8a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019e8e:	10c7      	asrs	r7, r0, #3
 8019e90:	b2ed      	uxtb	r5, r5
 8019e92:	00c0      	lsls	r0, r0, #3
 8019e94:	fb19 f906 	smulbb	r9, r9, r6
 8019e98:	fb15 f506 	smulbb	r5, r5, r6
 8019e9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ea0:	b2c0      	uxtb	r0, r0
 8019ea2:	fa1f fc8c 	uxth.w	ip, ip
 8019ea6:	fb07 970a 	mla	r7, r7, sl, r9
 8019eaa:	fb00 500a 	mla	r0, r0, sl, r5
 8019eae:	b2bf      	uxth	r7, r7
 8019eb0:	b280      	uxth	r0, r0
 8019eb2:	f10c 0501 	add.w	r5, ip, #1
 8019eb6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019eba:	f107 0901 	add.w	r9, r7, #1
 8019ebe:	1c45      	adds	r5, r0, #1
 8019ec0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019ec4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019ec8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ecc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019ed0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ed4:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ed8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019edc:	ea4c 0c09 	orr.w	ip, ip, r9
 8019ee0:	f824 c00b 	strh.w	ip, [r4, fp]
 8019ee4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019ee6:	4401      	add	r1, r0
 8019ee8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019eea:	f108 38ff 	add.w	r8, r8, #4294967295
 8019eee:	4402      	add	r2, r0
 8019ef0:	e75e      	b.n	8019db0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019ef2:	b005      	add	sp, #20
 8019ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ef8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019efc:	b085      	sub	sp, #20
 8019efe:	4693      	mov	fp, r2
 8019f00:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f02:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f04:	6870      	ldr	r0, [r6, #4]
 8019f06:	9101      	str	r1, [sp, #4]
 8019f08:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f0c:	fb00 2404 	mla	r4, r0, r4, r2
 8019f10:	6832      	ldr	r2, [r6, #0]
 8019f12:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019f16:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f1a:	682a      	ldr	r2, [r5, #0]
 8019f1c:	9202      	str	r2, [sp, #8]
 8019f1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f22:	9a01      	ldr	r2, [sp, #4]
 8019f24:	2a00      	cmp	r2, #0
 8019f26:	dc03      	bgt.n	8019f30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019f28:	f1bb 0f00 	cmp.w	fp, #0
 8019f2c:	f340 809a 	ble.w	801a064 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019f30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019f36:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019f3a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f44:	2b00      	cmp	r3, #0
 8019f46:	dd0c      	ble.n	8019f62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019f48:	1406      	asrs	r6, r0, #16
 8019f4a:	d405      	bmi.n	8019f58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019f4c:	454e      	cmp	r6, r9
 8019f4e:	da03      	bge.n	8019f58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019f50:	1416      	asrs	r6, r2, #16
 8019f52:	d401      	bmi.n	8019f58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019f54:	4546      	cmp	r6, r8
 8019f56:	db05      	blt.n	8019f64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019f58:	4470      	add	r0, lr
 8019f5a:	4462      	add	r2, ip
 8019f5c:	3b01      	subs	r3, #1
 8019f5e:	3402      	adds	r4, #2
 8019f60:	e7f0      	b.n	8019f44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019f62:	d00f      	beq.n	8019f84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019f64:	1e5e      	subs	r6, r3, #1
 8019f66:	fb0e 0706 	mla	r7, lr, r6, r0
 8019f6a:	143f      	asrs	r7, r7, #16
 8019f6c:	d541      	bpl.n	8019ff2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019f6e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019f72:	4698      	mov	r8, r3
 8019f74:	9603      	str	r6, [sp, #12]
 8019f76:	f1b8 0f00 	cmp.w	r8, #0
 8019f7a:	dc56      	bgt.n	801a02a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019f7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f84:	9b01      	ldr	r3, [sp, #4]
 8019f86:	2b00      	cmp	r3, #0
 8019f88:	dd6c      	ble.n	801a064 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019f8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019fa0:	eeb0 6a62 	vmov.f32	s12, s5
 8019fa4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019fa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fac:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fb0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019fb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fb8:	eeb0 6a43 	vmov.f32	s12, s6
 8019fbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fc0:	ee12 2a90 	vmov	r2, s5
 8019fc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fc8:	fb92 fef3 	sdiv	lr, r2, r3
 8019fcc:	ee13 2a10 	vmov	r2, s6
 8019fd0:	fb92 fcf3 	sdiv	ip, r2, r3
 8019fd4:	9b01      	ldr	r3, [sp, #4]
 8019fd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fda:	3b01      	subs	r3, #1
 8019fdc:	9301      	str	r3, [sp, #4]
 8019fde:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019fe2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fe4:	eeb0 3a67 	vmov.f32	s6, s15
 8019fe8:	bf08      	it	eq
 8019fea:	465b      	moveq	r3, fp
 8019fec:	eef0 2a47 	vmov.f32	s5, s14
 8019ff0:	e797      	b.n	8019f22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019ff2:	454f      	cmp	r7, r9
 8019ff4:	dabb      	bge.n	8019f6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019ff6:	fb0c 2606 	mla	r6, ip, r6, r2
 8019ffa:	1436      	asrs	r6, r6, #16
 8019ffc:	d4b7      	bmi.n	8019f6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019ffe:	4546      	cmp	r6, r8
 801a000:	dab5      	bge.n	8019f6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a002:	461e      	mov	r6, r3
 801a004:	46a0      	mov	r8, r4
 801a006:	2e00      	cmp	r6, #0
 801a008:	ddb8      	ble.n	8019f7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a00a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a00e:	9902      	ldr	r1, [sp, #8]
 801a010:	1417      	asrs	r7, r2, #16
 801a012:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a016:	fb0a 9707 	mla	r7, sl, r7, r9
 801a01a:	4470      	add	r0, lr
 801a01c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a020:	f828 7b02 	strh.w	r7, [r8], #2
 801a024:	4462      	add	r2, ip
 801a026:	3e01      	subs	r6, #1
 801a028:	e7ed      	b.n	801a006 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a02a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a02e:	d414      	bmi.n	801a05a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a030:	68ae      	ldr	r6, [r5, #8]
 801a032:	454e      	cmp	r6, r9
 801a034:	dd11      	ble.n	801a05a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a036:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a03a:	d40e      	bmi.n	801a05a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a03c:	68ef      	ldr	r7, [r5, #12]
 801a03e:	4557      	cmp	r7, sl
 801a040:	dd0b      	ble.n	801a05a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a042:	b236      	sxth	r6, r6
 801a044:	fb0a 9606 	mla	r6, sl, r6, r9
 801a048:	9f02      	ldr	r7, [sp, #8]
 801a04a:	f06f 0101 	mvn.w	r1, #1
 801a04e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a052:	fb01 f608 	mul.w	r6, r1, r8
 801a056:	9903      	ldr	r1, [sp, #12]
 801a058:	538f      	strh	r7, [r1, r6]
 801a05a:	4470      	add	r0, lr
 801a05c:	4462      	add	r2, ip
 801a05e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a062:	e788      	b.n	8019f76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a064:	b005      	add	sp, #20
 801a066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a06a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a06a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a06e:	b087      	sub	sp, #28
 801a070:	468b      	mov	fp, r1
 801a072:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a074:	9203      	str	r2, [sp, #12]
 801a076:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a07a:	9204      	str	r2, [sp, #16]
 801a07c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a080:	6841      	ldr	r1, [r0, #4]
 801a082:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a086:	fb01 2505 	mla	r5, r1, r5, r2
 801a08a:	6802      	ldr	r2, [r0, #0]
 801a08c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a090:	f8d9 2000 	ldr.w	r2, [r9]
 801a094:	9201      	str	r2, [sp, #4]
 801a096:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a09a:	f1bb 0f00 	cmp.w	fp, #0
 801a09e:	dc03      	bgt.n	801a0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a0a0:	9a03      	ldr	r2, [sp, #12]
 801a0a2:	2a00      	cmp	r2, #0
 801a0a4:	f340 8159 	ble.w	801a35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a0a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a0aa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a0ae:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a0b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a0b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a0b8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a0bc:	2b00      	cmp	r3, #0
 801a0be:	dd0e      	ble.n	801a0de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a0c0:	1402      	asrs	r2, r0, #16
 801a0c2:	d405      	bmi.n	801a0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a0c4:	42ba      	cmp	r2, r7
 801a0c6:	da03      	bge.n	801a0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a0c8:	140a      	asrs	r2, r1, #16
 801a0ca:	d401      	bmi.n	801a0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a0cc:	42b2      	cmp	r2, r6
 801a0ce:	db07      	blt.n	801a0e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a0d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a0d2:	4410      	add	r0, r2
 801a0d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a0d6:	3b01      	subs	r3, #1
 801a0d8:	4411      	add	r1, r2
 801a0da:	3502      	adds	r5, #2
 801a0dc:	e7ee      	b.n	801a0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a0de:	d017      	beq.n	801a110 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a0e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a0e2:	1e5a      	subs	r2, r3, #1
 801a0e4:	fb04 0402 	mla	r4, r4, r2, r0
 801a0e8:	1424      	asrs	r4, r4, #16
 801a0ea:	d409      	bmi.n	801a100 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a0ec:	42bc      	cmp	r4, r7
 801a0ee:	da07      	bge.n	801a100 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a0f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a0f2:	fb04 1202 	mla	r2, r4, r2, r1
 801a0f6:	1412      	asrs	r2, r2, #16
 801a0f8:	d402      	bmi.n	801a100 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a0fa:	42b2      	cmp	r2, r6
 801a0fc:	f2c0 80bf 	blt.w	801a27e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a100:	2700      	movs	r7, #0
 801a102:	19da      	adds	r2, r3, r7
 801a104:	2a00      	cmp	r2, #0
 801a106:	dc3e      	bgt.n	801a186 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a108:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a10c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a110:	f1bb 0f00 	cmp.w	fp, #0
 801a114:	f340 8121 	ble.w	801a35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a118:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a11c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a120:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a124:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a126:	f1bb 0b01 	subs.w	fp, fp, #1
 801a12a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a12e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a132:	eeb0 6a62 	vmov.f32	s12, s5
 801a136:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a13a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a13e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a142:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a146:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a14a:	eeb0 6a43 	vmov.f32	s12, s6
 801a14e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a152:	ee12 2a90 	vmov	r2, s5
 801a156:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a15a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a15e:	ee13 2a10 	vmov	r2, s6
 801a162:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a166:	9313      	str	r3, [sp, #76]	; 0x4c
 801a168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a16a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a16e:	9a03      	ldr	r2, [sp, #12]
 801a170:	9314      	str	r3, [sp, #80]	; 0x50
 801a172:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a176:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a178:	eeb0 3a67 	vmov.f32	s6, s15
 801a17c:	bf08      	it	eq
 801a17e:	4613      	moveq	r3, r2
 801a180:	eef0 2a47 	vmov.f32	s5, s14
 801a184:	e789      	b.n	801a09a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a186:	1406      	asrs	r6, r0, #16
 801a188:	d42d      	bmi.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a18a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a18e:	42b4      	cmp	r4, r6
 801a190:	dd29      	ble.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a192:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a196:	d426      	bmi.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a198:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a19c:	4562      	cmp	r2, ip
 801a19e:	dd22      	ble.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a1a0:	b224      	sxth	r4, r4
 801a1a2:	9a01      	ldr	r2, [sp, #4]
 801a1a4:	fb0c 6404 	mla	r4, ip, r4, r6
 801a1a8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a1ac:	0e22      	lsrs	r2, r4, #24
 801a1ae:	d01a      	beq.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a1b0:	9e04      	ldr	r6, [sp, #16]
 801a1b2:	4372      	muls	r2, r6
 801a1b4:	1c56      	adds	r6, r2, #1
 801a1b6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a1ba:	1212      	asrs	r2, r2, #8
 801a1bc:	0a26      	lsrs	r6, r4, #8
 801a1be:	2aff      	cmp	r2, #255	; 0xff
 801a1c0:	9605      	str	r6, [sp, #20]
 801a1c2:	d116      	bne.n	801a1f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a1c4:	f06f 0201 	mvn.w	r2, #1
 801a1c8:	fb02 fc07 	mul.w	ip, r2, r7
 801a1cc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a1d0:	0962      	lsrs	r2, r4, #5
 801a1d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a1d6:	f026 0607 	bic.w	r6, r6, #7
 801a1da:	4316      	orrs	r6, r2
 801a1dc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a1e0:	4326      	orrs	r6, r4
 801a1e2:	f825 600c 	strh.w	r6, [r5, ip]
 801a1e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1e8:	4410      	add	r0, r2
 801a1ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1ec:	3f01      	subs	r7, #1
 801a1ee:	4411      	add	r1, r2
 801a1f0:	e787      	b.n	801a102 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a1f2:	f06f 0601 	mvn.w	r6, #1
 801a1f6:	437e      	muls	r6, r7
 801a1f8:	fa1f fa82 	uxth.w	sl, r2
 801a1fc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a200:	9602      	str	r6, [sp, #8]
 801a202:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a206:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a20a:	43d2      	mvns	r2, r2
 801a20c:	b2d2      	uxtb	r2, r2
 801a20e:	fb1c fc0a 	smulbb	ip, ip, sl
 801a212:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a216:	fb0e ce02 	mla	lr, lr, r2, ip
 801a21a:	b2e4      	uxtb	r4, r4
 801a21c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a220:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a224:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a228:	fa5f f888 	uxtb.w	r8, r8
 801a22c:	fb14 f40a 	smulbb	r4, r4, sl
 801a230:	fb08 4402 	mla	r4, r8, r2, r4
 801a234:	fa1f fe8e 	uxth.w	lr, lr
 801a238:	fb16 f60a 	smulbb	r6, r6, sl
 801a23c:	b2a4      	uxth	r4, r4
 801a23e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a242:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a246:	f10e 0201 	add.w	r2, lr, #1
 801a24a:	1c66      	adds	r6, r4, #1
 801a24c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a250:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a254:	fa1f fc8c 	uxth.w	ip, ip
 801a258:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a25c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a260:	ea46 0e0e 	orr.w	lr, r6, lr
 801a264:	f10c 0601 	add.w	r6, ip, #1
 801a268:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a26c:	0976      	lsrs	r6, r6, #5
 801a26e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a272:	9a02      	ldr	r2, [sp, #8]
 801a274:	ea4e 0e06 	orr.w	lr, lr, r6
 801a278:	f825 e002 	strh.w	lr, [r5, r2]
 801a27c:	e7b3      	b.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a27e:	f04f 0800 	mov.w	r8, #0
 801a282:	eba3 0208 	sub.w	r2, r3, r8
 801a286:	2a00      	cmp	r2, #0
 801a288:	f77f af3e 	ble.w	801a108 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a28c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a290:	1404      	asrs	r4, r0, #16
 801a292:	140a      	asrs	r2, r1, #16
 801a294:	fb06 4202 	mla	r2, r6, r2, r4
 801a298:	9c01      	ldr	r4, [sp, #4]
 801a29a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a29e:	0e22      	lsrs	r2, r4, #24
 801a2a0:	d016      	beq.n	801a2d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a2a2:	9e04      	ldr	r6, [sp, #16]
 801a2a4:	4372      	muls	r2, r6
 801a2a6:	1c56      	adds	r6, r2, #1
 801a2a8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a2ac:	1212      	asrs	r2, r2, #8
 801a2ae:	2aff      	cmp	r2, #255	; 0xff
 801a2b0:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a2b4:	d113      	bne.n	801a2de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a2b6:	0962      	lsrs	r2, r4, #5
 801a2b8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a2bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a2c0:	f026 0607 	bic.w	r6, r6, #7
 801a2c4:	4316      	orrs	r6, r2
 801a2c6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a2ca:	4326      	orrs	r6, r4
 801a2cc:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a2d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a2d2:	4410      	add	r0, r2
 801a2d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2d6:	f108 0801 	add.w	r8, r8, #1
 801a2da:	4411      	add	r1, r2
 801a2dc:	e7d1      	b.n	801a282 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a2de:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a2e2:	fa1f fa82 	uxth.w	sl, r2
 801a2e6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a2ea:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a2ee:	43d2      	mvns	r2, r2
 801a2f0:	b2d2      	uxtb	r2, r2
 801a2f2:	fb17 f70a 	smulbb	r7, r7, sl
 801a2f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a2fa:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a2fe:	b2e4      	uxtb	r4, r4
 801a300:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a304:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a308:	fa5f fe8e 	uxtb.w	lr, lr
 801a30c:	fb14 f40a 	smulbb	r4, r4, sl
 801a310:	fb0e 4402 	mla	r4, lr, r2, r4
 801a314:	b2f6      	uxtb	r6, r6
 801a316:	fa1f fc8c 	uxth.w	ip, ip
 801a31a:	fb16 f60a 	smulbb	r6, r6, sl
 801a31e:	b2a4      	uxth	r4, r4
 801a320:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a324:	fb07 6702 	mla	r7, r7, r2, r6
 801a328:	f10c 0201 	add.w	r2, ip, #1
 801a32c:	1c66      	adds	r6, r4, #1
 801a32e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a332:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a336:	b2bf      	uxth	r7, r7
 801a338:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a33c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a340:	ea46 0c0c 	orr.w	ip, r6, ip
 801a344:	1c7e      	adds	r6, r7, #1
 801a346:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a34a:	0976      	lsrs	r6, r6, #5
 801a34c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a350:	ea4c 0c06 	orr.w	ip, ip, r6
 801a354:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a358:	e7ba      	b.n	801a2d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a35a:	b007      	add	sp, #28
 801a35c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a364:	b085      	sub	sp, #20
 801a366:	468b      	mov	fp, r1
 801a368:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a36a:	9203      	str	r2, [sp, #12]
 801a36c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a370:	6841      	ldr	r1, [r0, #4]
 801a372:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a376:	fb01 2404 	mla	r4, r1, r4, r2
 801a37a:	6802      	ldr	r2, [r0, #0]
 801a37c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a380:	f8d8 2000 	ldr.w	r2, [r8]
 801a384:	9201      	str	r2, [sp, #4]
 801a386:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a38a:	f1bb 0f00 	cmp.w	fp, #0
 801a38e:	dc03      	bgt.n	801a398 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a390:	9a03      	ldr	r2, [sp, #12]
 801a392:	2a00      	cmp	r2, #0
 801a394:	f340 814f 	ble.w	801a636 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a398:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a39a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a39e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a3a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a3a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a3a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a3ac:	2b00      	cmp	r3, #0
 801a3ae:	dd0e      	ble.n	801a3ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a3b0:	1408      	asrs	r0, r1, #16
 801a3b2:	d405      	bmi.n	801a3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a3b4:	42b8      	cmp	r0, r7
 801a3b6:	da03      	bge.n	801a3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a3b8:	1410      	asrs	r0, r2, #16
 801a3ba:	d401      	bmi.n	801a3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a3bc:	42b0      	cmp	r0, r6
 801a3be:	db07      	blt.n	801a3d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a3c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a3c2:	4401      	add	r1, r0
 801a3c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a3c6:	3b01      	subs	r3, #1
 801a3c8:	4402      	add	r2, r0
 801a3ca:	3402      	adds	r4, #2
 801a3cc:	e7ee      	b.n	801a3ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a3ce:	d017      	beq.n	801a400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a3d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a3d2:	1e58      	subs	r0, r3, #1
 801a3d4:	fb05 1500 	mla	r5, r5, r0, r1
 801a3d8:	142d      	asrs	r5, r5, #16
 801a3da:	d409      	bmi.n	801a3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a3dc:	42bd      	cmp	r5, r7
 801a3de:	da07      	bge.n	801a3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a3e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a3e2:	fb05 2000 	mla	r0, r5, r0, r2
 801a3e6:	1400      	asrs	r0, r0, #16
 801a3e8:	d402      	bmi.n	801a3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a3ea:	42b0      	cmp	r0, r6
 801a3ec:	f2c0 80ba 	blt.w	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a3f0:	2600      	movs	r6, #0
 801a3f2:	1998      	adds	r0, r3, r6
 801a3f4:	2800      	cmp	r0, #0
 801a3f6:	dc3e      	bgt.n	801a476 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a3f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a3fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a400:	f1bb 0f00 	cmp.w	fp, #0
 801a404:	f340 8117 	ble.w	801a636 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a408:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a40c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a410:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a414:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a416:	f1bb 0b01 	subs.w	fp, fp, #1
 801a41a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a41e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a422:	eeb0 6a62 	vmov.f32	s12, s5
 801a426:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a42a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a42e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a432:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a436:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a43a:	eeb0 6a43 	vmov.f32	s12, s6
 801a43e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a442:	ee12 2a90 	vmov	r2, s5
 801a446:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a44a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a44e:	ee13 2a10 	vmov	r2, s6
 801a452:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a456:	9311      	str	r3, [sp, #68]	; 0x44
 801a458:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a45a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a45e:	9a03      	ldr	r2, [sp, #12]
 801a460:	9312      	str	r3, [sp, #72]	; 0x48
 801a462:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a466:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a468:	eeb0 3a67 	vmov.f32	s6, s15
 801a46c:	bf08      	it	eq
 801a46e:	4613      	moveq	r3, r2
 801a470:	eef0 2a47 	vmov.f32	s5, s14
 801a474:	e789      	b.n	801a38a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a476:	140f      	asrs	r7, r1, #16
 801a478:	d424      	bmi.n	801a4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a47a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a47e:	42bd      	cmp	r5, r7
 801a480:	dd20      	ble.n	801a4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a482:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a486:	d41d      	bmi.n	801a4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a488:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a48c:	4560      	cmp	r0, ip
 801a48e:	dd19      	ble.n	801a4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a490:	b22d      	sxth	r5, r5
 801a492:	fb0c 7505 	mla	r5, ip, r5, r7
 801a496:	9801      	ldr	r0, [sp, #4]
 801a498:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a49c:	0e07      	lsrs	r7, r0, #24
 801a49e:	2fff      	cmp	r7, #255	; 0xff
 801a4a0:	d116      	bne.n	801a4d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4a2:	f06f 0501 	mvn.w	r5, #1
 801a4a6:	fb05 f706 	mul.w	r7, r5, r6
 801a4aa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a4ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a4b2:	0945      	lsrs	r5, r0, #5
 801a4b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a4b8:	ea4c 0505 	orr.w	r5, ip, r5
 801a4bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a4c0:	4305      	orrs	r5, r0
 801a4c2:	53e5      	strh	r5, [r4, r7]
 801a4c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a4c6:	4401      	add	r1, r0
 801a4c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a4ca:	3e01      	subs	r6, #1
 801a4cc:	4402      	add	r2, r0
 801a4ce:	e790      	b.n	801a3f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a4d0:	b2fd      	uxtb	r5, r7
 801a4d2:	2f00      	cmp	r7, #0
 801a4d4:	d0f6      	beq.n	801a4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4d6:	f06f 0701 	mvn.w	r7, #1
 801a4da:	4377      	muls	r7, r6
 801a4dc:	fa1f f985 	uxth.w	r9, r5
 801a4e0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a4e4:	9702      	str	r7, [sp, #8]
 801a4e6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a4ea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a4ee:	43ed      	mvns	r5, r5
 801a4f0:	b2ed      	uxtb	r5, r5
 801a4f2:	fb17 f709 	smulbb	r7, r7, r9
 801a4f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4fa:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a4fe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a502:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a506:	b2c0      	uxtb	r0, r0
 801a508:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a50c:	fa5f fe8e 	uxtb.w	lr, lr
 801a510:	fb10 f009 	smulbb	r0, r0, r9
 801a514:	fb0e 0005 	mla	r0, lr, r5, r0
 801a518:	b280      	uxth	r0, r0
 801a51a:	fa1f fc8c 	uxth.w	ip, ip
 801a51e:	fb1a fa09 	smulbb	sl, sl, r9
 801a522:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a526:	fb07 a705 	mla	r7, r7, r5, sl
 801a52a:	f100 0a01 	add.w	sl, r0, #1
 801a52e:	f10c 0501 	add.w	r5, ip, #1
 801a532:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a536:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a53a:	b2bf      	uxth	r7, r7
 801a53c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a540:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a544:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a548:	f107 0a01 	add.w	sl, r7, #1
 801a54c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a550:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a554:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a558:	9802      	ldr	r0, [sp, #8]
 801a55a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a55e:	f824 c000 	strh.w	ip, [r4, r0]
 801a562:	e7af      	b.n	801a4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a564:	f04f 0e00 	mov.w	lr, #0
 801a568:	eba3 000e 	sub.w	r0, r3, lr
 801a56c:	2800      	cmp	r0, #0
 801a56e:	f77f af43 	ble.w	801a3f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a572:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a576:	140d      	asrs	r5, r1, #16
 801a578:	1410      	asrs	r0, r2, #16
 801a57a:	fb06 5000 	mla	r0, r6, r0, r5
 801a57e:	9d01      	ldr	r5, [sp, #4]
 801a580:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a584:	0e2e      	lsrs	r6, r5, #24
 801a586:	2eff      	cmp	r6, #255	; 0xff
 801a588:	d112      	bne.n	801a5b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a58a:	482c      	ldr	r0, [pc, #176]	; (801a63c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a58c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a590:	0968      	lsrs	r0, r5, #5
 801a592:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a596:	4330      	orrs	r0, r6
 801a598:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a59c:	4328      	orrs	r0, r5
 801a59e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a5a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5a4:	4401      	add	r1, r0
 801a5a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5a8:	f10e 0e01 	add.w	lr, lr, #1
 801a5ac:	4402      	add	r2, r0
 801a5ae:	e7db      	b.n	801a568 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a5b0:	b2f0      	uxtb	r0, r6
 801a5b2:	2e00      	cmp	r6, #0
 801a5b4:	d0f5      	beq.n	801a5a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a5b6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a5ba:	fa1f f980 	uxth.w	r9, r0
 801a5be:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a5c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a5c6:	43c0      	mvns	r0, r0
 801a5c8:	b2c0      	uxtb	r0, r0
 801a5ca:	fb16 f609 	smulbb	r6, r6, r9
 801a5ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a5d2:	fb07 6700 	mla	r7, r7, r0, r6
 801a5d6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a5da:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a5de:	b2ed      	uxtb	r5, r5
 801a5e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a5e4:	fa5f fc8c 	uxtb.w	ip, ip
 801a5e8:	fb15 f509 	smulbb	r5, r5, r9
 801a5ec:	fb0c 5500 	mla	r5, ip, r0, r5
 801a5f0:	b2bf      	uxth	r7, r7
 801a5f2:	fb1a fa09 	smulbb	sl, sl, r9
 801a5f6:	b2ad      	uxth	r5, r5
 801a5f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a5fc:	fb06 a600 	mla	r6, r6, r0, sl
 801a600:	1c78      	adds	r0, r7, #1
 801a602:	f105 0a01 	add.w	sl, r5, #1
 801a606:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a60a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a60e:	b2b6      	uxth	r6, r6
 801a610:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a614:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a618:	ea4a 0707 	orr.w	r7, sl, r7
 801a61c:	f106 0a01 	add.w	sl, r6, #1
 801a620:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a624:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a628:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a62c:	ea47 070a 	orr.w	r7, r7, sl
 801a630:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a634:	e7b5      	b.n	801a5a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a636:	b005      	add	sp, #20
 801a638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a63c:	fffff800 	.word	0xfffff800

0801a640 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a644:	b087      	sub	sp, #28
 801a646:	468b      	mov	fp, r1
 801a648:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a64a:	9203      	str	r2, [sp, #12]
 801a64c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a650:	9204      	str	r2, [sp, #16]
 801a652:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a656:	6841      	ldr	r1, [r0, #4]
 801a658:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a65c:	fb01 2404 	mla	r4, r1, r4, r2
 801a660:	6802      	ldr	r2, [r0, #0]
 801a662:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a666:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a66a:	3201      	adds	r2, #1
 801a66c:	f022 0201 	bic.w	r2, r2, #1
 801a670:	9200      	str	r2, [sp, #0]
 801a672:	f8d9 2000 	ldr.w	r2, [r9]
 801a676:	9201      	str	r2, [sp, #4]
 801a678:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a67c:	f1bb 0f00 	cmp.w	fp, #0
 801a680:	dc03      	bgt.n	801a68a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a682:	9a03      	ldr	r2, [sp, #12]
 801a684:	2a00      	cmp	r2, #0
 801a686:	f340 8169 	ble.w	801a95c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a68a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a68c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a690:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a694:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a698:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a69a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a69e:	2b00      	cmp	r3, #0
 801a6a0:	dd0e      	ble.n	801a6c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a6a2:	1402      	asrs	r2, r0, #16
 801a6a4:	d405      	bmi.n	801a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a6a6:	42ba      	cmp	r2, r7
 801a6a8:	da03      	bge.n	801a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a6aa:	140a      	asrs	r2, r1, #16
 801a6ac:	d401      	bmi.n	801a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a6ae:	42b2      	cmp	r2, r6
 801a6b0:	db07      	blt.n	801a6c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a6b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6b4:	4410      	add	r0, r2
 801a6b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6b8:	3b01      	subs	r3, #1
 801a6ba:	4411      	add	r1, r2
 801a6bc:	3402      	adds	r4, #2
 801a6be:	e7ee      	b.n	801a69e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a6c0:	d017      	beq.n	801a6f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a6c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a6c4:	1e5a      	subs	r2, r3, #1
 801a6c6:	fb05 0502 	mla	r5, r5, r2, r0
 801a6ca:	142d      	asrs	r5, r5, #16
 801a6cc:	d409      	bmi.n	801a6e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a6ce:	42bd      	cmp	r5, r7
 801a6d0:	da07      	bge.n	801a6e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a6d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a6d4:	fb05 1202 	mla	r2, r5, r2, r1
 801a6d8:	1412      	asrs	r2, r2, #16
 801a6da:	d402      	bmi.n	801a6e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a6dc:	42b2      	cmp	r2, r6
 801a6de:	f2c0 80c7 	blt.w	801a870 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a6e2:	2700      	movs	r7, #0
 801a6e4:	19da      	adds	r2, r3, r7
 801a6e6:	2a00      	cmp	r2, #0
 801a6e8:	dc3e      	bgt.n	801a768 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a6ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a6f2:	f1bb 0f00 	cmp.w	fp, #0
 801a6f6:	f340 8131 	ble.w	801a95c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a6fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a702:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a706:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a708:	f1bb 0b01 	subs.w	fp, fp, #1
 801a70c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a710:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a714:	eeb0 6a62 	vmov.f32	s12, s5
 801a718:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a71c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a720:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a724:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a728:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a72c:	eeb0 6a43 	vmov.f32	s12, s6
 801a730:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a734:	ee12 2a90 	vmov	r2, s5
 801a738:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a73c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a740:	ee13 2a10 	vmov	r2, s6
 801a744:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a748:	9313      	str	r3, [sp, #76]	; 0x4c
 801a74a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a74c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a750:	9a03      	ldr	r2, [sp, #12]
 801a752:	9314      	str	r3, [sp, #80]	; 0x50
 801a754:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a758:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a75a:	eeb0 3a67 	vmov.f32	s6, s15
 801a75e:	bf08      	it	eq
 801a760:	4613      	moveq	r3, r2
 801a762:	eef0 2a47 	vmov.f32	s5, s14
 801a766:	e789      	b.n	801a67c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a768:	1405      	asrs	r5, r0, #16
 801a76a:	d435      	bmi.n	801a7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a76c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a770:	42aa      	cmp	r2, r5
 801a772:	dd31      	ble.n	801a7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a774:	140e      	asrs	r6, r1, #16
 801a776:	d42f      	bmi.n	801a7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a778:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a77c:	42b2      	cmp	r2, r6
 801a77e:	dd2b      	ble.n	801a7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a780:	9a00      	ldr	r2, [sp, #0]
 801a782:	fb06 5502 	mla	r5, r6, r2, r5
 801a786:	086a      	lsrs	r2, r5, #1
 801a788:	9e01      	ldr	r6, [sp, #4]
 801a78a:	5cb2      	ldrb	r2, [r6, r2]
 801a78c:	07ee      	lsls	r6, r5, #31
 801a78e:	bf54      	ite	pl
 801a790:	f002 020f 	andpl.w	r2, r2, #15
 801a794:	1112      	asrmi	r2, r2, #4
 801a796:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a79a:	b2d2      	uxtb	r2, r2
 801a79c:	b1e2      	cbz	r2, 801a7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a79e:	9d04      	ldr	r5, [sp, #16]
 801a7a0:	436a      	muls	r2, r5
 801a7a2:	1c55      	adds	r5, r2, #1
 801a7a4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a7a8:	4d6e      	ldr	r5, [pc, #440]	; (801a964 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a7aa:	682d      	ldr	r5, [r5, #0]
 801a7ac:	1212      	asrs	r2, r2, #8
 801a7ae:	0a2e      	lsrs	r6, r5, #8
 801a7b0:	2aff      	cmp	r2, #255	; 0xff
 801a7b2:	9605      	str	r6, [sp, #20]
 801a7b4:	d116      	bne.n	801a7e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a7b6:	f06f 0201 	mvn.w	r2, #1
 801a7ba:	fb02 fc07 	mul.w	ip, r2, r7
 801a7be:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a7c2:	096a      	lsrs	r2, r5, #5
 801a7c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a7c8:	f026 0607 	bic.w	r6, r6, #7
 801a7cc:	4316      	orrs	r6, r2
 801a7ce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a7d2:	432e      	orrs	r6, r5
 801a7d4:	f824 600c 	strh.w	r6, [r4, ip]
 801a7d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a7da:	4410      	add	r0, r2
 801a7dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7de:	3f01      	subs	r7, #1
 801a7e0:	4411      	add	r1, r2
 801a7e2:	e77f      	b.n	801a6e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a7e4:	f06f 0601 	mvn.w	r6, #1
 801a7e8:	437e      	muls	r6, r7
 801a7ea:	fa1f fa82 	uxth.w	sl, r2
 801a7ee:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a7f2:	9602      	str	r6, [sp, #8]
 801a7f4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a7f8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a7fc:	43d2      	mvns	r2, r2
 801a7fe:	b2d2      	uxtb	r2, r2
 801a800:	fb1c fc0a 	smulbb	ip, ip, sl
 801a804:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a808:	fb0e ce02 	mla	lr, lr, r2, ip
 801a80c:	b2ed      	uxtb	r5, r5
 801a80e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a812:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a816:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a81a:	fa5f f888 	uxtb.w	r8, r8
 801a81e:	fb15 f50a 	smulbb	r5, r5, sl
 801a822:	fb08 5502 	mla	r5, r8, r2, r5
 801a826:	fa1f fe8e 	uxth.w	lr, lr
 801a82a:	fb16 f60a 	smulbb	r6, r6, sl
 801a82e:	b2ad      	uxth	r5, r5
 801a830:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a834:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a838:	f10e 0201 	add.w	r2, lr, #1
 801a83c:	1c6e      	adds	r6, r5, #1
 801a83e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a842:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a846:	fa1f fc8c 	uxth.w	ip, ip
 801a84a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a84e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a852:	ea46 0e0e 	orr.w	lr, r6, lr
 801a856:	f10c 0601 	add.w	r6, ip, #1
 801a85a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a85e:	0976      	lsrs	r6, r6, #5
 801a860:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a864:	9a02      	ldr	r2, [sp, #8]
 801a866:	ea4e 0e06 	orr.w	lr, lr, r6
 801a86a:	f824 e002 	strh.w	lr, [r4, r2]
 801a86e:	e7b3      	b.n	801a7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a870:	f04f 0800 	mov.w	r8, #0
 801a874:	eba3 0208 	sub.w	r2, r3, r8
 801a878:	2a00      	cmp	r2, #0
 801a87a:	f77f af36 	ble.w	801a6ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a87e:	9e00      	ldr	r6, [sp, #0]
 801a880:	1402      	asrs	r2, r0, #16
 801a882:	140d      	asrs	r5, r1, #16
 801a884:	fb06 2505 	mla	r5, r6, r5, r2
 801a888:	086a      	lsrs	r2, r5, #1
 801a88a:	9e01      	ldr	r6, [sp, #4]
 801a88c:	5cb2      	ldrb	r2, [r6, r2]
 801a88e:	07ed      	lsls	r5, r5, #31
 801a890:	bf54      	ite	pl
 801a892:	f002 020f 	andpl.w	r2, r2, #15
 801a896:	1112      	asrmi	r2, r2, #4
 801a898:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a89c:	b2d2      	uxtb	r2, r2
 801a89e:	b1c2      	cbz	r2, 801a8d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a8a0:	9d04      	ldr	r5, [sp, #16]
 801a8a2:	436a      	muls	r2, r5
 801a8a4:	1c55      	adds	r5, r2, #1
 801a8a6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a8aa:	4d2e      	ldr	r5, [pc, #184]	; (801a964 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a8ac:	1212      	asrs	r2, r2, #8
 801a8ae:	682e      	ldr	r6, [r5, #0]
 801a8b0:	2aff      	cmp	r2, #255	; 0xff
 801a8b2:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a8b6:	d113      	bne.n	801a8e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a8b8:	0972      	lsrs	r2, r6, #5
 801a8ba:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a8be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8c2:	f025 0507 	bic.w	r5, r5, #7
 801a8c6:	4315      	orrs	r5, r2
 801a8c8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a8cc:	4335      	orrs	r5, r6
 801a8ce:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a8d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a8d4:	4410      	add	r0, r2
 801a8d6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a8d8:	f108 0801 	add.w	r8, r8, #1
 801a8dc:	4411      	add	r1, r2
 801a8de:	e7c9      	b.n	801a874 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a8e0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a8e4:	fa1f fa82 	uxth.w	sl, r2
 801a8e8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a8ec:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a8f0:	43d2      	mvns	r2, r2
 801a8f2:	b2d2      	uxtb	r2, r2
 801a8f4:	fb17 f70a 	smulbb	r7, r7, sl
 801a8f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8fc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a900:	b2f6      	uxtb	r6, r6
 801a902:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a906:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a90a:	fa5f fe8e 	uxtb.w	lr, lr
 801a90e:	fb16 f60a 	smulbb	r6, r6, sl
 801a912:	fb0e 6602 	mla	r6, lr, r2, r6
 801a916:	b2ed      	uxtb	r5, r5
 801a918:	fa1f fc8c 	uxth.w	ip, ip
 801a91c:	fb15 f50a 	smulbb	r5, r5, sl
 801a920:	b2b6      	uxth	r6, r6
 801a922:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a926:	fb07 5702 	mla	r7, r7, r2, r5
 801a92a:	f10c 0201 	add.w	r2, ip, #1
 801a92e:	1c75      	adds	r5, r6, #1
 801a930:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a934:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a938:	b2bf      	uxth	r7, r7
 801a93a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a93e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a942:	ea45 0c0c 	orr.w	ip, r5, ip
 801a946:	1c7d      	adds	r5, r7, #1
 801a948:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a94c:	096d      	lsrs	r5, r5, #5
 801a94e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a952:	ea4c 0c05 	orr.w	ip, ip, r5
 801a956:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a95a:	e7ba      	b.n	801a8d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a95c:	b007      	add	sp, #28
 801a95e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a962:	bf00      	nop
 801a964:	20012db4 	.word	0x20012db4

0801a968 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a96c:	b087      	sub	sp, #28
 801a96e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ac7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a972:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a974:	9205      	str	r2, [sp, #20]
 801a976:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a97a:	9101      	str	r1, [sp, #4]
 801a97c:	6841      	ldr	r1, [r0, #4]
 801a97e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a982:	fb01 2404 	mla	r4, r1, r4, r2
 801a986:	6802      	ldr	r2, [r0, #0]
 801a988:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a98c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a990:	3201      	adds	r2, #1
 801a992:	f022 0201 	bic.w	r2, r2, #1
 801a996:	9202      	str	r2, [sp, #8]
 801a998:	f8db 2000 	ldr.w	r2, [fp]
 801a99c:	9203      	str	r2, [sp, #12]
 801a99e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a9a2:	9a01      	ldr	r2, [sp, #4]
 801a9a4:	2a00      	cmp	r2, #0
 801a9a6:	dc03      	bgt.n	801a9b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a9a8:	9a05      	ldr	r2, [sp, #20]
 801a9aa:	2a00      	cmp	r2, #0
 801a9ac:	f340 8162 	ble.w	801ac74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a9b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a9b2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a9b6:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a9ba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a9be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a9c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	dd0e      	ble.n	801a9e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a9c8:	1402      	asrs	r2, r0, #16
 801a9ca:	d405      	bmi.n	801a9d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a9cc:	42ba      	cmp	r2, r7
 801a9ce:	da03      	bge.n	801a9d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a9d0:	140a      	asrs	r2, r1, #16
 801a9d2:	d401      	bmi.n	801a9d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a9d4:	42b2      	cmp	r2, r6
 801a9d6:	db07      	blt.n	801a9e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a9d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9da:	4410      	add	r0, r2
 801a9dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9de:	3b01      	subs	r3, #1
 801a9e0:	4411      	add	r1, r2
 801a9e2:	3402      	adds	r4, #2
 801a9e4:	e7ee      	b.n	801a9c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a9e6:	d017      	beq.n	801aa18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a9e8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9ea:	1e5a      	subs	r2, r3, #1
 801a9ec:	fb05 0502 	mla	r5, r5, r2, r0
 801a9f0:	142d      	asrs	r5, r5, #16
 801a9f2:	d409      	bmi.n	801aa08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9f4:	42bd      	cmp	r5, r7
 801a9f6:	da07      	bge.n	801aa08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9fa:	fb05 1202 	mla	r2, r5, r2, r1
 801a9fe:	1412      	asrs	r2, r2, #16
 801aa00:	d402      	bmi.n	801aa08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa02:	42b2      	cmp	r2, r6
 801aa04:	f2c0 80c3 	blt.w	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801aa08:	2500      	movs	r5, #0
 801aa0a:	195a      	adds	r2, r3, r5
 801aa0c:	2a00      	cmp	r2, #0
 801aa0e:	dc3f      	bgt.n	801aa90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801aa10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aa18:	9b01      	ldr	r3, [sp, #4]
 801aa1a:	2b00      	cmp	r3, #0
 801aa1c:	f340 812a 	ble.w	801ac74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aa20:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa28:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa36:	eeb0 6a62 	vmov.f32	s12, s5
 801aa3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa46:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aa4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa4e:	eeb0 6a43 	vmov.f32	s12, s6
 801aa52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa56:	ee12 2a90 	vmov	r2, s5
 801aa5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa62:	ee13 2a10 	vmov	r2, s6
 801aa66:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa6e:	9314      	str	r3, [sp, #80]	; 0x50
 801aa70:	9b01      	ldr	r3, [sp, #4]
 801aa72:	9a05      	ldr	r2, [sp, #20]
 801aa74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa78:	3b01      	subs	r3, #1
 801aa7a:	9301      	str	r3, [sp, #4]
 801aa7c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa82:	eeb0 3a67 	vmov.f32	s6, s15
 801aa86:	bf08      	it	eq
 801aa88:	4613      	moveq	r3, r2
 801aa8a:	eef0 2a47 	vmov.f32	s5, s14
 801aa8e:	e788      	b.n	801a9a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aa90:	1406      	asrs	r6, r0, #16
 801aa92:	d42c      	bmi.n	801aaee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa94:	f8db 2008 	ldr.w	r2, [fp, #8]
 801aa98:	42b2      	cmp	r2, r6
 801aa9a:	dd28      	ble.n	801aaee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa9c:	140f      	asrs	r7, r1, #16
 801aa9e:	d426      	bmi.n	801aaee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaa0:	f8db 200c 	ldr.w	r2, [fp, #12]
 801aaa4:	42ba      	cmp	r2, r7
 801aaa6:	dd22      	ble.n	801aaee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaa8:	9a02      	ldr	r2, [sp, #8]
 801aaaa:	fb07 6602 	mla	r6, r7, r2, r6
 801aaae:	0872      	lsrs	r2, r6, #1
 801aab0:	9f03      	ldr	r7, [sp, #12]
 801aab2:	5cba      	ldrb	r2, [r7, r2]
 801aab4:	07f6      	lsls	r6, r6, #31
 801aab6:	bf54      	ite	pl
 801aab8:	f002 020f 	andpl.w	r2, r2, #15
 801aabc:	1112      	asrmi	r2, r2, #4
 801aabe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aac2:	b2d2      	uxtb	r2, r2
 801aac4:	2aff      	cmp	r2, #255	; 0xff
 801aac6:	d118      	bne.n	801aafa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801aac8:	f8d8 2000 	ldr.w	r2, [r8]
 801aacc:	f06f 0601 	mvn.w	r6, #1
 801aad0:	fb06 f705 	mul.w	r7, r6, r5
 801aad4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801aad8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801aadc:	0956      	lsrs	r6, r2, #5
 801aade:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aae2:	ea4c 0606 	orr.w	r6, ip, r6
 801aae6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801aaea:	4316      	orrs	r6, r2
 801aaec:	53e6      	strh	r6, [r4, r7]
 801aaee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aaf0:	4410      	add	r0, r2
 801aaf2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aaf4:	3d01      	subs	r5, #1
 801aaf6:	4411      	add	r1, r2
 801aaf8:	e787      	b.n	801aa0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aafa:	2a00      	cmp	r2, #0
 801aafc:	d0f7      	beq.n	801aaee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aafe:	f06f 0601 	mvn.w	r6, #1
 801ab02:	436e      	muls	r6, r5
 801ab04:	f8d8 c000 	ldr.w	ip, [r8]
 801ab08:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ab0c:	9604      	str	r6, [sp, #16]
 801ab0e:	fa1f f982 	uxth.w	r9, r2
 801ab12:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ab16:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ab1a:	43d2      	mvns	r2, r2
 801ab1c:	b2d2      	uxtb	r2, r2
 801ab1e:	fb16 f609 	smulbb	r6, r6, r9
 801ab22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ab26:	fb07 6702 	mla	r7, r7, r2, r6
 801ab2a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ab2e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ab32:	fa5f fc8c 	uxtb.w	ip, ip
 801ab36:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab3a:	fa5f fe8e 	uxtb.w	lr, lr
 801ab3e:	fb1c fc09 	smulbb	ip, ip, r9
 801ab42:	fb0e cc02 	mla	ip, lr, r2, ip
 801ab46:	b2bf      	uxth	r7, r7
 801ab48:	fb1a fa09 	smulbb	sl, sl, r9
 801ab4c:	fa1f fc8c 	uxth.w	ip, ip
 801ab50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab54:	fb06 a602 	mla	r6, r6, r2, sl
 801ab58:	1c7a      	adds	r2, r7, #1
 801ab5a:	f10c 0a01 	add.w	sl, ip, #1
 801ab5e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ab62:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ab66:	b2b6      	uxth	r6, r6
 801ab68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ab70:	ea4a 0707 	orr.w	r7, sl, r7
 801ab74:	f106 0a01 	add.w	sl, r6, #1
 801ab78:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab80:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab84:	9a04      	ldr	r2, [sp, #16]
 801ab86:	ea47 070a 	orr.w	r7, r7, sl
 801ab8a:	52a7      	strh	r7, [r4, r2]
 801ab8c:	e7af      	b.n	801aaee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab8e:	f04f 0e00 	mov.w	lr, #0
 801ab92:	eba3 020e 	sub.w	r2, r3, lr
 801ab96:	2a00      	cmp	r2, #0
 801ab98:	f77f af3a 	ble.w	801aa10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ab9c:	9e02      	ldr	r6, [sp, #8]
 801ab9e:	1402      	asrs	r2, r0, #16
 801aba0:	140d      	asrs	r5, r1, #16
 801aba2:	fb06 2505 	mla	r5, r6, r5, r2
 801aba6:	086a      	lsrs	r2, r5, #1
 801aba8:	9e03      	ldr	r6, [sp, #12]
 801abaa:	5cb2      	ldrb	r2, [r6, r2]
 801abac:	07ed      	lsls	r5, r5, #31
 801abae:	bf54      	ite	pl
 801abb0:	f002 020f 	andpl.w	r2, r2, #15
 801abb4:	1112      	asrmi	r2, r2, #4
 801abb6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801abba:	b2d2      	uxtb	r2, r2
 801abbc:	2aff      	cmp	r2, #255	; 0xff
 801abbe:	d115      	bne.n	801abec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801abc0:	f8d8 5000 	ldr.w	r5, [r8]
 801abc4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801abc8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801abcc:	096a      	lsrs	r2, r5, #5
 801abce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abd2:	4332      	orrs	r2, r6
 801abd4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801abd8:	432a      	orrs	r2, r5
 801abda:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801abde:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801abe0:	4410      	add	r0, r2
 801abe2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abe4:	f10e 0e01 	add.w	lr, lr, #1
 801abe8:	4411      	add	r1, r2
 801abea:	e7d2      	b.n	801ab92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801abec:	2a00      	cmp	r2, #0
 801abee:	d0f6      	beq.n	801abde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801abf0:	f8d8 7000 	ldr.w	r7, [r8]
 801abf4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801abf8:	fa1f f982 	uxth.w	r9, r2
 801abfc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ac00:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ac04:	43d2      	mvns	r2, r2
 801ac06:	b2d2      	uxtb	r2, r2
 801ac08:	fb15 f509 	smulbb	r5, r5, r9
 801ac0c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac10:	fb06 5602 	mla	r6, r6, r2, r5
 801ac14:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ac18:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ac1c:	b2ff      	uxtb	r7, r7
 801ac1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ac22:	fa5f fc8c 	uxtb.w	ip, ip
 801ac26:	fb17 f709 	smulbb	r7, r7, r9
 801ac2a:	fb0c 7702 	mla	r7, ip, r2, r7
 801ac2e:	b2b6      	uxth	r6, r6
 801ac30:	fb1a fa09 	smulbb	sl, sl, r9
 801ac34:	b2bf      	uxth	r7, r7
 801ac36:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ac3a:	fb05 a502 	mla	r5, r5, r2, sl
 801ac3e:	1c72      	adds	r2, r6, #1
 801ac40:	f107 0a01 	add.w	sl, r7, #1
 801ac44:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ac48:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ac4c:	b2ad      	uxth	r5, r5
 801ac4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac52:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ac56:	ea4a 0606 	orr.w	r6, sl, r6
 801ac5a:	f105 0a01 	add.w	sl, r5, #1
 801ac5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac6a:	ea46 060a 	orr.w	r6, r6, sl
 801ac6e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ac72:	e7b4      	b.n	801abde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ac74:	b007      	add	sp, #28
 801ac76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac7a:	bf00      	nop
 801ac7c:	20012db4 	.word	0x20012db4

0801ac80 <_ZN8touchgfx8LCD16bppD1Ev>:
 801ac80:	4770      	bx	lr

0801ac82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ac82:	4770      	bx	lr

0801ac84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ac84:	4770      	bx	lr

0801ac86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ac86:	4770      	bx	lr

0801ac88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ac88:	4770      	bx	lr

0801ac8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ac8a:	4770      	bx	lr

0801ac8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ac8c:	4770      	bx	lr

0801ac8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ac8e:	4770      	bx	lr

0801ac90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac90:	4770      	bx	lr

0801ac92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac92:	4770      	bx	lr

0801ac94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac94:	4770      	bx	lr

0801ac96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac96:	4770      	bx	lr

0801ac98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac98:	4770      	bx	lr

0801ac9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac9a:	4770      	bx	lr

0801ac9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac9c:	4770      	bx	lr

0801ac9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac9e:	4770      	bx	lr

0801aca0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801aca0:	4770      	bx	lr

0801aca2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801aca2:	4770      	bx	lr

0801aca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801aca4:	4770      	bx	lr

0801aca6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801aca6:	4770      	bx	lr

0801aca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801aca8:	4770      	bx	lr

0801acaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801acaa:	4770      	bx	lr

0801acac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801acac:	4770      	bx	lr

0801acae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801acae:	4770      	bx	lr

0801acb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801acb0:	4770      	bx	lr

0801acb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801acb2:	4770      	bx	lr

0801acb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801acb4:	4770      	bx	lr

0801acb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801acb6:	4770      	bx	lr

0801acb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801acb8:	4770      	bx	lr

0801acba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801acba:	4770      	bx	lr

0801acbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801acbc:	4770      	bx	lr

0801acbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801acbe:	4770      	bx	lr

0801acc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801acc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801acc4:	b088      	sub	sp, #32
 801acc6:	ac08      	add	r4, sp, #32
 801acc8:	4606      	mov	r6, r0
 801acca:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801acce:	4620      	mov	r0, r4
 801acd0:	4688      	mov	r8, r1
 801acd2:	4691      	mov	r9, r2
 801acd4:	f7fd fc62 	bl	801859c <_ZNK8touchgfx6Bitmap7getDataEv>
 801acd8:	6833      	ldr	r3, [r6, #0]
 801acda:	4605      	mov	r5, r0
 801acdc:	4620      	mov	r0, r4
 801acde:	699f      	ldr	r7, [r3, #24]
 801ace0:	f7fd fb70 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ace4:	4682      	mov	sl, r0
 801ace6:	4620      	mov	r0, r4
 801ace8:	f7fd fba0 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801acec:	9500      	str	r5, [sp, #0]
 801acee:	e9cd a001 	strd	sl, r0, [sp, #4]
 801acf2:	464b      	mov	r3, r9
 801acf4:	a806      	add	r0, sp, #24
 801acf6:	4642      	mov	r2, r8
 801acf8:	4631      	mov	r1, r6
 801acfa:	47b8      	blx	r7
 801acfc:	4628      	mov	r0, r5
 801acfe:	b008      	add	sp, #32
 801ad00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ad04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ad04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ad08:	2300      	movs	r3, #0
 801ad0a:	9300      	str	r3, [sp, #0]
 801ad0c:	4b3d      	ldr	r3, [pc, #244]	; (801ae04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ad0e:	781b      	ldrb	r3, [r3, #0]
 801ad10:	2b00      	cmp	r3, #0
 801ad12:	d137      	bne.n	801ad84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ad14:	4a3c      	ldr	r2, [pc, #240]	; (801ae08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ad16:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ad1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ad1e:	2b00      	cmp	r3, #0
 801ad20:	d132      	bne.n	801ad88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ad22:	4b3a      	ldr	r3, [pc, #232]	; (801ae0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ad24:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ad28:	6808      	ldr	r0, [r1, #0]
 801ad2a:	6849      	ldr	r1, [r1, #4]
 801ad2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ad30:	ac02      	add	r4, sp, #8
 801ad32:	ab02      	add	r3, sp, #8
 801ad34:	c303      	stmia	r3!, {r0, r1}
 801ad36:	4669      	mov	r1, sp
 801ad38:	4620      	mov	r0, r4
 801ad3a:	f7f9 fdc1 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad3e:	4668      	mov	r0, sp
 801ad40:	f7f9 fd7a 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad44:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ad48:	f8bd 2000 	ldrh.w	r2, [sp]
 801ad4c:	4d30      	ldr	r5, [pc, #192]	; (801ae10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ad4e:	4413      	add	r3, r2
 801ad50:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ad54:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ad58:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ad5c:	6828      	ldr	r0, [r5, #0]
 801ad5e:	4413      	add	r3, r2
 801ad60:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ad64:	6803      	ldr	r3, [r0, #0]
 801ad66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ad68:	4798      	blx	r3
 801ad6a:	f010 0f01 	tst.w	r0, #1
 801ad6e:	462f      	mov	r7, r5
 801ad70:	d00c      	beq.n	801ad8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ad72:	6828      	ldr	r0, [r5, #0]
 801ad74:	6803      	ldr	r3, [r0, #0]
 801ad76:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ad7a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ad7c:	4798      	blx	r3
 801ad7e:	b004      	add	sp, #16
 801ad80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ad84:	4a21      	ldr	r2, [pc, #132]	; (801ae0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ad86:	e7c6      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ad88:	4b1f      	ldr	r3, [pc, #124]	; (801ae08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ad8a:	e7cb      	b.n	801ad24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ad8c:	6838      	ldr	r0, [r7, #0]
 801ad8e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ad92:	6803      	ldr	r3, [r0, #0]
 801ad94:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ad98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ad9a:	4798      	blx	r3
 801ad9c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ada0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ada4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ada8:	fb16 3602 	smlabb	r6, r6, r2, r3
 801adac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801adb0:	6838      	ldr	r0, [r7, #0]
 801adb2:	6803      	ldr	r3, [r0, #0]
 801adb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801adb6:	4798      	blx	r3
 801adb8:	4a13      	ldr	r2, [pc, #76]	; (801ae08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801adba:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801adbe:	8813      	ldrh	r3, [r2, #0]
 801adc0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801adc4:	fb03 1404 	mla	r4, r3, r4, r1
 801adc8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801adcc:	435d      	muls	r5, r3
 801adce:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801add2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801add6:	4691      	mov	r9, r2
 801add8:	6838      	ldr	r0, [r7, #0]
 801adda:	42ac      	cmp	r4, r5
 801addc:	6803      	ldr	r3, [r0, #0]
 801adde:	d20e      	bcs.n	801adfe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ade0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ade4:	4632      	mov	r2, r6
 801ade6:	4643      	mov	r3, r8
 801ade8:	4621      	mov	r1, r4
 801adea:	47d0      	blx	sl
 801adec:	f8b9 3000 	ldrh.w	r3, [r9]
 801adf0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801adf4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801adf8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801adfc:	e7ec      	b.n	801add8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801adfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ae00:	4798      	blx	r3
 801ae02:	e7bc      	b.n	801ad7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ae04:	20012d9c 	.word	0x20012d9c
 801ae08:	20012d9e 	.word	0x20012d9e
 801ae0c:	20012da0 	.word	0x20012da0
 801ae10:	20012da4 	.word	0x20012da4

0801ae14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ae14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae18:	b08b      	sub	sp, #44	; 0x2c
 801ae1a:	460f      	mov	r7, r1
 801ae1c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ae20:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ae24:	4616      	mov	r6, r2
 801ae26:	f1bb 0f00 	cmp.w	fp, #0
 801ae2a:	d04a      	beq.n	801aec2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ae2c:	6810      	ldr	r0, [r2, #0]
 801ae2e:	6851      	ldr	r1, [r2, #4]
 801ae30:	ad06      	add	r5, sp, #24
 801ae32:	c503      	stmia	r5!, {r0, r1}
 801ae34:	6818      	ldr	r0, [r3, #0]
 801ae36:	6859      	ldr	r1, [r3, #4]
 801ae38:	ad08      	add	r5, sp, #32
 801ae3a:	c503      	stmia	r5!, {r0, r1}
 801ae3c:	a806      	add	r0, sp, #24
 801ae3e:	f7f9 fcfb 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ae42:	4631      	mov	r1, r6
 801ae44:	a808      	add	r0, sp, #32
 801ae46:	f7f9 fd3b 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ae4a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ae4e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ae52:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ae56:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ae5a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ae5e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ae62:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ae66:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ae6a:	4f5f      	ldr	r7, [pc, #380]	; (801afe8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ae6c:	440a      	add	r2, r1
 801ae6e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ae72:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ae76:	6838      	ldr	r0, [r7, #0]
 801ae78:	4413      	add	r3, r2
 801ae7a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ae7e:	6803      	ldr	r3, [r0, #0]
 801ae80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ae82:	4798      	blx	r3
 801ae84:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ae88:	46b9      	mov	r9, r7
 801ae8a:	d11d      	bne.n	801aec8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ae8c:	b9fc      	cbnz	r4, 801aece <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ae8e:	f010 0f01 	tst.w	r0, #1
 801ae92:	d01c      	beq.n	801aece <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ae94:	f8d9 0000 	ldr.w	r0, [r9]
 801ae98:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ae9c:	6801      	ldr	r1, [r0, #0]
 801ae9e:	f8cd b00c 	str.w	fp, [sp, #12]
 801aea2:	2700      	movs	r7, #0
 801aea4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801aea8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801aeac:	9402      	str	r4, [sp, #8]
 801aeae:	b2ad      	uxth	r5, r5
 801aeb0:	fa1f f488 	uxth.w	r4, r8
 801aeb4:	9501      	str	r5, [sp, #4]
 801aeb6:	9400      	str	r4, [sp, #0]
 801aeb8:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801aeba:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801aebe:	4631      	mov	r1, r6
 801aec0:	47a0      	blx	r4
 801aec2:	b00b      	add	sp, #44	; 0x2c
 801aec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aec8:	f010 0f04 	tst.w	r0, #4
 801aecc:	e7e1      	b.n	801ae92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801aece:	f8d9 0000 	ldr.w	r0, [r9]
 801aed2:	6803      	ldr	r3, [r0, #0]
 801aed4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aed6:	4798      	blx	r3
 801aed8:	4b44      	ldr	r3, [pc, #272]	; (801afec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801aeda:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801aede:	881a      	ldrh	r2, [r3, #0]
 801aee0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801aee4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801aee8:	fb02 1404 	mla	r4, r2, r4, r1
 801aeec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801aef0:	469a      	mov	sl, r3
 801aef2:	fb05 f502 	mul.w	r5, r5, r2
 801aef6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801aefa:	d059      	beq.n	801afb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801aefc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801af00:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801af04:	fa1f f28b 	uxth.w	r2, fp
 801af08:	fa1f f989 	uxth.w	r9, r9
 801af0c:	469e      	mov	lr, r3
 801af0e:	42ac      	cmp	r4, r5
 801af10:	d264      	bcs.n	801afdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801af12:	eb04 0a07 	add.w	sl, r4, r7
 801af16:	4554      	cmp	r4, sl
 801af18:	d23d      	bcs.n	801af96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801af1a:	8821      	ldrh	r1, [r4, #0]
 801af1c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801af20:	1208      	asrs	r0, r1, #8
 801af22:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801af26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af2a:	fb10 f009 	smulbb	r0, r0, r9
 801af2e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801af32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af36:	00c9      	lsls	r1, r1, #3
 801af38:	fb0c 0c02 	mla	ip, ip, r2, r0
 801af3c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801af40:	10d8      	asrs	r0, r3, #3
 801af42:	b2c9      	uxtb	r1, r1
 801af44:	00db      	lsls	r3, r3, #3
 801af46:	fa1f fc8c 	uxth.w	ip, ip
 801af4a:	fb1b fb09 	smulbb	fp, fp, r9
 801af4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801af52:	b2db      	uxtb	r3, r3
 801af54:	fb11 f109 	smulbb	r1, r1, r9
 801af58:	fb00 b002 	mla	r0, r0, r2, fp
 801af5c:	fb03 1302 	mla	r3, r3, r2, r1
 801af60:	f10c 0b01 	add.w	fp, ip, #1
 801af64:	b29b      	uxth	r3, r3
 801af66:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801af6a:	b280      	uxth	r0, r0
 801af6c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801af70:	f103 0c01 	add.w	ip, r3, #1
 801af74:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801af78:	1c43      	adds	r3, r0, #1
 801af7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801af7e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801af82:	0940      	lsrs	r0, r0, #5
 801af84:	ea4c 0c0b 	orr.w	ip, ip, fp
 801af88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801af8c:	ea4c 0c00 	orr.w	ip, ip, r0
 801af90:	f824 cb02 	strh.w	ip, [r4], #2
 801af94:	e7bf      	b.n	801af16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801af96:	f8be 3000 	ldrh.w	r3, [lr]
 801af9a:	eba3 0308 	sub.w	r3, r3, r8
 801af9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afa2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801afa6:	eba3 0308 	sub.w	r3, r3, r8
 801afaa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801afae:	e7ae      	b.n	801af0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801afb0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801afb4:	f8d9 0000 	ldr.w	r0, [r9]
 801afb8:	42ac      	cmp	r4, r5
 801afba:	6803      	ldr	r3, [r0, #0]
 801afbc:	d20e      	bcs.n	801afdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801afbe:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801afc2:	4632      	mov	r2, r6
 801afc4:	463b      	mov	r3, r7
 801afc6:	4621      	mov	r1, r4
 801afc8:	47c0      	blx	r8
 801afca:	f8ba 3000 	ldrh.w	r3, [sl]
 801afce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afd2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801afd6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801afda:	e7eb      	b.n	801afb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801afdc:	4b02      	ldr	r3, [pc, #8]	; (801afe8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801afde:	6818      	ldr	r0, [r3, #0]
 801afe0:	6803      	ldr	r3, [r0, #0]
 801afe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801afe4:	4798      	blx	r3
 801afe6:	e76c      	b.n	801aec2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801afe8:	20012da4 	.word	0x20012da4
 801afec:	20012d9e 	.word	0x20012d9e

0801aff0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801aff0:	b510      	push	{r4, lr}
 801aff2:	2184      	movs	r1, #132	; 0x84
 801aff4:	4604      	mov	r4, r0
 801aff6:	f00d fe4a 	bl	8028c8e <_ZdlPvj>
 801affa:	4620      	mov	r0, r4
 801affc:	bd10      	pop	{r4, pc}

0801affe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801affe:	b510      	push	{r4, lr}
 801b000:	2104      	movs	r1, #4
 801b002:	4604      	mov	r4, r0
 801b004:	f00d fe43 	bl	8028c8e <_ZdlPvj>
 801b008:	4620      	mov	r0, r4
 801b00a:	bd10      	pop	{r4, pc}

0801b00c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b00c:	b510      	push	{r4, lr}
 801b00e:	2104      	movs	r1, #4
 801b010:	4604      	mov	r4, r0
 801b012:	f00d fe3c 	bl	8028c8e <_ZdlPvj>
 801b016:	4620      	mov	r0, r4
 801b018:	bd10      	pop	{r4, pc}

0801b01a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b01a:	b510      	push	{r4, lr}
 801b01c:	f640 0144 	movw	r1, #2116	; 0x844
 801b020:	4604      	mov	r4, r0
 801b022:	f00d fe34 	bl	8028c8e <_ZdlPvj>
 801b026:	4620      	mov	r0, r4
 801b028:	bd10      	pop	{r4, pc}

0801b02a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b02a:	b510      	push	{r4, lr}
 801b02c:	2104      	movs	r1, #4
 801b02e:	4604      	mov	r4, r0
 801b030:	f00d fe2d 	bl	8028c8e <_ZdlPvj>
 801b034:	4620      	mov	r0, r4
 801b036:	bd10      	pop	{r4, pc}

0801b038 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b038:	b510      	push	{r4, lr}
 801b03a:	2104      	movs	r1, #4
 801b03c:	4604      	mov	r4, r0
 801b03e:	f00d fe26 	bl	8028c8e <_ZdlPvj>
 801b042:	4620      	mov	r0, r4
 801b044:	bd10      	pop	{r4, pc}

0801b046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b046:	b510      	push	{r4, lr}
 801b048:	2104      	movs	r1, #4
 801b04a:	4604      	mov	r4, r0
 801b04c:	f00d fe1f 	bl	8028c8e <_ZdlPvj>
 801b050:	4620      	mov	r0, r4
 801b052:	bd10      	pop	{r4, pc}

0801b054 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b054:	b510      	push	{r4, lr}
 801b056:	2104      	movs	r1, #4
 801b058:	4604      	mov	r4, r0
 801b05a:	f00d fe18 	bl	8028c8e <_ZdlPvj>
 801b05e:	4620      	mov	r0, r4
 801b060:	bd10      	pop	{r4, pc}

0801b062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b062:	b510      	push	{r4, lr}
 801b064:	2104      	movs	r1, #4
 801b066:	4604      	mov	r4, r0
 801b068:	f00d fe11 	bl	8028c8e <_ZdlPvj>
 801b06c:	4620      	mov	r0, r4
 801b06e:	bd10      	pop	{r4, pc}

0801b070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b070:	b510      	push	{r4, lr}
 801b072:	2104      	movs	r1, #4
 801b074:	4604      	mov	r4, r0
 801b076:	f00d fe0a 	bl	8028c8e <_ZdlPvj>
 801b07a:	4620      	mov	r0, r4
 801b07c:	bd10      	pop	{r4, pc}

0801b07e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b07e:	b510      	push	{r4, lr}
 801b080:	2104      	movs	r1, #4
 801b082:	4604      	mov	r4, r0
 801b084:	f00d fe03 	bl	8028c8e <_ZdlPvj>
 801b088:	4620      	mov	r0, r4
 801b08a:	bd10      	pop	{r4, pc}

0801b08c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b08c:	b510      	push	{r4, lr}
 801b08e:	2104      	movs	r1, #4
 801b090:	4604      	mov	r4, r0
 801b092:	f00d fdfc 	bl	8028c8e <_ZdlPvj>
 801b096:	4620      	mov	r0, r4
 801b098:	bd10      	pop	{r4, pc}

0801b09a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b09a:	b510      	push	{r4, lr}
 801b09c:	2104      	movs	r1, #4
 801b09e:	4604      	mov	r4, r0
 801b0a0:	f00d fdf5 	bl	8028c8e <_ZdlPvj>
 801b0a4:	4620      	mov	r0, r4
 801b0a6:	bd10      	pop	{r4, pc}

0801b0a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b0a8:	b510      	push	{r4, lr}
 801b0aa:	2104      	movs	r1, #4
 801b0ac:	4604      	mov	r4, r0
 801b0ae:	f00d fdee 	bl	8028c8e <_ZdlPvj>
 801b0b2:	4620      	mov	r0, r4
 801b0b4:	bd10      	pop	{r4, pc}

0801b0b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b0b6:	b510      	push	{r4, lr}
 801b0b8:	2104      	movs	r1, #4
 801b0ba:	4604      	mov	r4, r0
 801b0bc:	f00d fde7 	bl	8028c8e <_ZdlPvj>
 801b0c0:	4620      	mov	r0, r4
 801b0c2:	bd10      	pop	{r4, pc}

0801b0c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b0c4:	b510      	push	{r4, lr}
 801b0c6:	2104      	movs	r1, #4
 801b0c8:	4604      	mov	r4, r0
 801b0ca:	f00d fde0 	bl	8028c8e <_ZdlPvj>
 801b0ce:	4620      	mov	r0, r4
 801b0d0:	bd10      	pop	{r4, pc}

0801b0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b0d2:	b510      	push	{r4, lr}
 801b0d4:	2104      	movs	r1, #4
 801b0d6:	4604      	mov	r4, r0
 801b0d8:	f00d fdd9 	bl	8028c8e <_ZdlPvj>
 801b0dc:	4620      	mov	r0, r4
 801b0de:	bd10      	pop	{r4, pc}

0801b0e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b0e0:	b510      	push	{r4, lr}
 801b0e2:	2104      	movs	r1, #4
 801b0e4:	4604      	mov	r4, r0
 801b0e6:	f00d fdd2 	bl	8028c8e <_ZdlPvj>
 801b0ea:	4620      	mov	r0, r4
 801b0ec:	bd10      	pop	{r4, pc}

0801b0ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b0ee:	b510      	push	{r4, lr}
 801b0f0:	2104      	movs	r1, #4
 801b0f2:	4604      	mov	r4, r0
 801b0f4:	f00d fdcb 	bl	8028c8e <_ZdlPvj>
 801b0f8:	4620      	mov	r0, r4
 801b0fa:	bd10      	pop	{r4, pc}

0801b0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b0fc:	b510      	push	{r4, lr}
 801b0fe:	2104      	movs	r1, #4
 801b100:	4604      	mov	r4, r0
 801b102:	f00d fdc4 	bl	8028c8e <_ZdlPvj>
 801b106:	4620      	mov	r0, r4
 801b108:	bd10      	pop	{r4, pc}

0801b10a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b10a:	b510      	push	{r4, lr}
 801b10c:	2104      	movs	r1, #4
 801b10e:	4604      	mov	r4, r0
 801b110:	f00d fdbd 	bl	8028c8e <_ZdlPvj>
 801b114:	4620      	mov	r0, r4
 801b116:	bd10      	pop	{r4, pc}

0801b118 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b118:	b510      	push	{r4, lr}
 801b11a:	2104      	movs	r1, #4
 801b11c:	4604      	mov	r4, r0
 801b11e:	f00d fdb6 	bl	8028c8e <_ZdlPvj>
 801b122:	4620      	mov	r0, r4
 801b124:	bd10      	pop	{r4, pc}

0801b126 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b126:	b510      	push	{r4, lr}
 801b128:	2104      	movs	r1, #4
 801b12a:	4604      	mov	r4, r0
 801b12c:	f00d fdaf 	bl	8028c8e <_ZdlPvj>
 801b130:	4620      	mov	r0, r4
 801b132:	bd10      	pop	{r4, pc}

0801b134 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b134:	b510      	push	{r4, lr}
 801b136:	2104      	movs	r1, #4
 801b138:	4604      	mov	r4, r0
 801b13a:	f00d fda8 	bl	8028c8e <_ZdlPvj>
 801b13e:	4620      	mov	r0, r4
 801b140:	bd10      	pop	{r4, pc}

0801b142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b142:	b510      	push	{r4, lr}
 801b144:	2104      	movs	r1, #4
 801b146:	4604      	mov	r4, r0
 801b148:	f00d fda1 	bl	8028c8e <_ZdlPvj>
 801b14c:	4620      	mov	r0, r4
 801b14e:	bd10      	pop	{r4, pc}

0801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b150:	b510      	push	{r4, lr}
 801b152:	2104      	movs	r1, #4
 801b154:	4604      	mov	r4, r0
 801b156:	f00d fd9a 	bl	8028c8e <_ZdlPvj>
 801b15a:	4620      	mov	r0, r4
 801b15c:	bd10      	pop	{r4, pc}

0801b15e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b15e:	b510      	push	{r4, lr}
 801b160:	2104      	movs	r1, #4
 801b162:	4604      	mov	r4, r0
 801b164:	f00d fd93 	bl	8028c8e <_ZdlPvj>
 801b168:	4620      	mov	r0, r4
 801b16a:	bd10      	pop	{r4, pc}

0801b16c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b16c:	b510      	push	{r4, lr}
 801b16e:	2104      	movs	r1, #4
 801b170:	4604      	mov	r4, r0
 801b172:	f00d fd8c 	bl	8028c8e <_ZdlPvj>
 801b176:	4620      	mov	r0, r4
 801b178:	bd10      	pop	{r4, pc}

0801b17a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b17a:	b510      	push	{r4, lr}
 801b17c:	2104      	movs	r1, #4
 801b17e:	4604      	mov	r4, r0
 801b180:	f00d fd85 	bl	8028c8e <_ZdlPvj>
 801b184:	4620      	mov	r0, r4
 801b186:	bd10      	pop	{r4, pc}

0801b188 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b188:	b510      	push	{r4, lr}
 801b18a:	2104      	movs	r1, #4
 801b18c:	4604      	mov	r4, r0
 801b18e:	f00d fd7e 	bl	8028c8e <_ZdlPvj>
 801b192:	4620      	mov	r0, r4
 801b194:	bd10      	pop	{r4, pc}

0801b196 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b196:	b510      	push	{r4, lr}
 801b198:	2104      	movs	r1, #4
 801b19a:	4604      	mov	r4, r0
 801b19c:	f00d fd77 	bl	8028c8e <_ZdlPvj>
 801b1a0:	4620      	mov	r0, r4
 801b1a2:	bd10      	pop	{r4, pc}

0801b1a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b1a4:	b510      	push	{r4, lr}
 801b1a6:	2104      	movs	r1, #4
 801b1a8:	4604      	mov	r4, r0
 801b1aa:	f00d fd70 	bl	8028c8e <_ZdlPvj>
 801b1ae:	4620      	mov	r0, r4
 801b1b0:	bd10      	pop	{r4, pc}
	...

0801b1b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1b8:	b08f      	sub	sp, #60	; 0x3c
 801b1ba:	461c      	mov	r4, r3
 801b1bc:	9205      	str	r2, [sp, #20]
 801b1be:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b1c2:	9100      	str	r1, [sp, #0]
 801b1c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b1c6:	9201      	str	r2, [sp, #4]
 801b1c8:	2a00      	cmp	r2, #0
 801b1ca:	f000 8115 	beq.w	801b3f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b1ce:	6820      	ldr	r0, [r4, #0]
 801b1d0:	6861      	ldr	r1, [r4, #4]
 801b1d2:	aa0a      	add	r2, sp, #40	; 0x28
 801b1d4:	c203      	stmia	r2!, {r0, r1}
 801b1d6:	6818      	ldr	r0, [r3, #0]
 801b1d8:	6859      	ldr	r1, [r3, #4]
 801b1da:	aa0c      	add	r2, sp, #48	; 0x30
 801b1dc:	c203      	stmia	r2!, {r0, r1}
 801b1de:	a80a      	add	r0, sp, #40	; 0x28
 801b1e0:	f7f9 fb2a 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b1e4:	4621      	mov	r1, r4
 801b1e6:	a80c      	add	r0, sp, #48	; 0x30
 801b1e8:	f7f9 fb6a 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b1ec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b1f0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b1f4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b1f8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b1fc:	bfde      	ittt	le
 801b1fe:	b2b3      	uxthle	r3, r6
 801b200:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b204:	fb92 f3f3 	sdivle	r3, r2, r3
 801b208:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b20c:	bfc8      	it	gt
 801b20e:	2301      	movgt	r3, #1
 801b210:	fb92 f1f3 	sdiv	r1, r2, r3
 801b214:	fa1f fc81 	uxth.w	ip, r1
 801b218:	fb0c 2413 	mls	r4, ip, r3, r2
 801b21c:	fb14 f406 	smulbb	r4, r4, r6
 801b220:	441d      	add	r5, r3
 801b222:	4404      	add	r4, r0
 801b224:	4661      	mov	r1, ip
 801b226:	3d01      	subs	r5, #1
 801b228:	b2a4      	uxth	r4, r4
 801b22a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b22e:	b131      	cbz	r1, 801b23e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b230:	9b05      	ldr	r3, [sp, #20]
 801b232:	9900      	ldr	r1, [sp, #0]
 801b234:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b238:	ba1b      	rev	r3, r3
 801b23a:	4419      	add	r1, r3
 801b23c:	9100      	str	r1, [sp, #0]
 801b23e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b242:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b246:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b24a:	4418      	add	r0, r3
 801b24c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b250:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b254:	441a      	add	r2, r3
 801b256:	4b6a      	ldr	r3, [pc, #424]	; (801b400 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b258:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b25c:	6818      	ldr	r0, [r3, #0]
 801b25e:	6803      	ldr	r3, [r0, #0]
 801b260:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b262:	4798      	blx	r3
 801b264:	4967      	ldr	r1, [pc, #412]	; (801b404 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b266:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b26a:	880b      	ldrh	r3, [r1, #0]
 801b26c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b270:	9109      	str	r1, [sp, #36]	; 0x24
 801b272:	fb03 c202 	mla	r2, r3, r2, ip
 801b276:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b27a:	4373      	muls	r3, r6
 801b27c:	b2ad      	uxth	r5, r5
 801b27e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b282:	00ad      	lsls	r5, r5, #2
 801b284:	9306      	str	r3, [sp, #24]
 801b286:	1d2b      	adds	r3, r5, #4
 801b288:	9307      	str	r3, [sp, #28]
 801b28a:	9b01      	ldr	r3, [sp, #4]
 801b28c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b290:	9103      	str	r1, [sp, #12]
 801b292:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b296:	2c00      	cmp	r4, #0
 801b298:	bf0c      	ite	eq
 801b29a:	46c6      	moveq	lr, r8
 801b29c:	f04f 0e00 	movne.w	lr, #0
 801b2a0:	2300      	movs	r3, #0
 801b2a2:	b292      	uxth	r2, r2
 801b2a4:	fa1f fe8e 	uxth.w	lr, lr
 801b2a8:	9302      	str	r3, [sp, #8]
 801b2aa:	9204      	str	r2, [sp, #16]
 801b2ac:	9a06      	ldr	r2, [sp, #24]
 801b2ae:	4282      	cmp	r2, r0
 801b2b0:	f240 809d 	bls.w	801b3ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b2b4:	b963      	cbnz	r3, 801b2d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b2b6:	9b00      	ldr	r3, [sp, #0]
 801b2b8:	781a      	ldrb	r2, [r3, #0]
 801b2ba:	0993      	lsrs	r3, r2, #6
 801b2bc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b2c0:	9202      	str	r2, [sp, #8]
 801b2c2:	1e5a      	subs	r2, r3, #1
 801b2c4:	2a02      	cmp	r2, #2
 801b2c6:	d815      	bhi.n	801b2f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b2c8:	9a00      	ldr	r2, [sp, #0]
 801b2ca:	3201      	adds	r2, #1
 801b2cc:	9200      	str	r2, [sp, #0]
 801b2ce:	b29b      	uxth	r3, r3
 801b2d0:	b1b4      	cbz	r4, 801b300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b2d2:	429c      	cmp	r4, r3
 801b2d4:	bf95      	itete	ls
 801b2d6:	1b1c      	subls	r4, r3, r4
 801b2d8:	1ae4      	subhi	r4, r4, r3
 801b2da:	fa1f fa84 	uxthls.w	sl, r4
 801b2de:	b2a4      	uxthhi	r4, r4
 801b2e0:	bf87      	ittee	hi
 801b2e2:	4671      	movhi	r1, lr
 801b2e4:	f04f 0a00 	movhi.w	sl, #0
 801b2e8:	fa1f f188 	uxthls.w	r1, r8
 801b2ec:	2400      	movls	r4, #0
 801b2ee:	4653      	mov	r3, sl
 801b2f0:	468e      	mov	lr, r1
 801b2f2:	e7db      	b.n	801b2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b2f4:	9a00      	ldr	r2, [sp, #0]
 801b2f6:	9b00      	ldr	r3, [sp, #0]
 801b2f8:	3202      	adds	r2, #2
 801b2fa:	785b      	ldrb	r3, [r3, #1]
 801b2fc:	9200      	str	r2, [sp, #0]
 801b2fe:	e7e7      	b.n	801b2d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b300:	2202      	movs	r2, #2
 801b302:	4615      	mov	r5, r2
 801b304:	9907      	ldr	r1, [sp, #28]
 801b306:	9a02      	ldr	r2, [sp, #8]
 801b308:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b30c:	9905      	ldr	r1, [sp, #20]
 801b30e:	4573      	cmp	r3, lr
 801b310:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b314:	9a01      	ldr	r2, [sp, #4]
 801b316:	bf2b      	itete	cs
 801b318:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b31c:	ebae 0103 	subcc.w	r1, lr, r3
 801b320:	46f1      	movcs	r9, lr
 801b322:	4699      	movcc	r9, r3
 801b324:	bf27      	ittee	cs
 801b326:	fa1f fa8a 	uxthcs.w	sl, sl
 801b32a:	4621      	movcs	r1, r4
 801b32c:	b289      	uxthcc	r1, r1
 801b32e:	46a2      	movcc	sl, r4
 801b330:	2aff      	cmp	r2, #255	; 0xff
 801b332:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b336:	d105      	bne.n	801b344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b338:	4481      	add	r9, r0
 801b33a:	4581      	cmp	r9, r0
 801b33c:	d045      	beq.n	801b3ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b33e:	f820 cb02 	strh.w	ip, [r0], #2
 801b342:	e7fa      	b.n	801b33a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b344:	9d03      	ldr	r5, [sp, #12]
 801b346:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b34a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b34e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b352:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b356:	436a      	muls	r2, r5
 801b358:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b35c:	fa5f fc8c 	uxtb.w	ip, ip
 801b360:	9208      	str	r2, [sp, #32]
 801b362:	fb0b fb05 	mul.w	fp, fp, r5
 801b366:	fb0c fc05 	mul.w	ip, ip, r5
 801b36a:	4481      	add	r9, r0
 801b36c:	4581      	cmp	r9, r0
 801b36e:	d02c      	beq.n	801b3ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b370:	8802      	ldrh	r2, [r0, #0]
 801b372:	9d04      	ldr	r5, [sp, #16]
 801b374:	9f04      	ldr	r7, [sp, #16]
 801b376:	1216      	asrs	r6, r2, #8
 801b378:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b37c:	fb16 f605 	smulbb	r6, r6, r5
 801b380:	9d08      	ldr	r5, [sp, #32]
 801b382:	442e      	add	r6, r5
 801b384:	10d5      	asrs	r5, r2, #3
 801b386:	00d2      	lsls	r2, r2, #3
 801b388:	b2d2      	uxtb	r2, r2
 801b38a:	fb12 f207 	smulbb	r2, r2, r7
 801b38e:	b2b6      	uxth	r6, r6
 801b390:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b394:	4462      	add	r2, ip
 801b396:	fb15 f507 	smulbb	r5, r5, r7
 801b39a:	b292      	uxth	r2, r2
 801b39c:	1c77      	adds	r7, r6, #1
 801b39e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b3a2:	1c57      	adds	r7, r2, #1
 801b3a4:	445d      	add	r5, fp
 801b3a6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b3aa:	b2ad      	uxth	r5, r5
 801b3ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b3b0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b3b4:	4316      	orrs	r6, r2
 801b3b6:	1c6a      	adds	r2, r5, #1
 801b3b8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b3bc:	096d      	lsrs	r5, r5, #5
 801b3be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b3c2:	432e      	orrs	r6, r5
 801b3c4:	f820 6b02 	strh.w	r6, [r0], #2
 801b3c8:	e7d0      	b.n	801b36c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b3ca:	4573      	cmp	r3, lr
 801b3cc:	d38f      	bcc.n	801b2ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b3ce:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b3d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b3d4:	fa1f f188 	uxth.w	r1, r8
 801b3d8:	1a64      	subs	r4, r4, r1
 801b3da:	881b      	ldrh	r3, [r3, #0]
 801b3dc:	b2a4      	uxth	r4, r4
 801b3de:	2c00      	cmp	r4, #0
 801b3e0:	eba3 0308 	sub.w	r3, r3, r8
 801b3e4:	bf18      	it	ne
 801b3e6:	2100      	movne	r1, #0
 801b3e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b3ec:	e77f      	b.n	801b2ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b3ee:	4b04      	ldr	r3, [pc, #16]	; (801b400 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b3f0:	6818      	ldr	r0, [r3, #0]
 801b3f2:	6803      	ldr	r3, [r0, #0]
 801b3f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b3f6:	4798      	blx	r3
 801b3f8:	b00f      	add	sp, #60	; 0x3c
 801b3fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3fe:	bf00      	nop
 801b400:	20012da4 	.word	0x20012da4
 801b404:	20012d9e 	.word	0x20012d9e

0801b408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b40c:	b09f      	sub	sp, #124	; 0x7c
 801b40e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b412:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b416:	9209      	str	r2, [sp, #36]	; 0x24
 801b418:	461d      	mov	r5, r3
 801b41a:	4604      	mov	r4, r0
 801b41c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b41e:	2a00      	cmp	r2, #0
 801b420:	f000 81eb 	beq.w	801b7fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b424:	6828      	ldr	r0, [r5, #0]
 801b426:	6869      	ldr	r1, [r5, #4]
 801b428:	aa1a      	add	r2, sp, #104	; 0x68
 801b42a:	c203      	stmia	r2!, {r0, r1}
 801b42c:	6818      	ldr	r0, [r3, #0]
 801b42e:	6859      	ldr	r1, [r3, #4]
 801b430:	aa1c      	add	r2, sp, #112	; 0x70
 801b432:	c203      	stmia	r2!, {r0, r1}
 801b434:	a81a      	add	r0, sp, #104	; 0x68
 801b436:	f7f9 f9ff 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b43a:	4629      	mov	r1, r5
 801b43c:	a81c      	add	r0, sp, #112	; 0x70
 801b43e:	f7f9 fa3f 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b442:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b446:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b44a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b44e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b452:	bfd7      	itett	le
 801b454:	b29a      	uxthle	r2, r3
 801b456:	2201      	movgt	r2, #1
 801b458:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b45c:	fb91 f2f2 	sdivle	r2, r1, r2
 801b460:	9202      	str	r2, [sp, #8]
 801b462:	9802      	ldr	r0, [sp, #8]
 801b464:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b468:	fb92 f0f0 	sdiv	r0, r2, r0
 801b46c:	b280      	uxth	r0, r0
 801b46e:	9010      	str	r0, [sp, #64]	; 0x40
 801b470:	9902      	ldr	r1, [sp, #8]
 801b472:	9802      	ldr	r0, [sp, #8]
 801b474:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b476:	4488      	add	r8, r1
 801b478:	fb05 2510 	mls	r5, r5, r0, r2
 801b47c:	fb15 f503 	smulbb	r5, r5, r3
 801b480:	f108 38ff 	add.w	r8, r8, #4294967295
 801b484:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b488:	fb98 f8f1 	sdiv	r8, r8, r1
 801b48c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b490:	440d      	add	r5, r1
 801b492:	4419      	add	r1, r3
 801b494:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b498:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b49c:	441a      	add	r2, r3
 801b49e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b4a2:	9304      	str	r3, [sp, #16]
 801b4a4:	4b95      	ldr	r3, [pc, #596]	; (801b6fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b4a6:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b4aa:	6818      	ldr	r0, [r3, #0]
 801b4ac:	6803      	ldr	r3, [r0, #0]
 801b4ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b4b0:	4798      	blx	r3
 801b4b2:	4b93      	ldr	r3, [pc, #588]	; (801b700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b4b4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b4b8:	881a      	ldrh	r2, [r3, #0]
 801b4ba:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b4be:	9318      	str	r3, [sp, #96]	; 0x60
 801b4c0:	fb02 7101 	mla	r1, r2, r1, r7
 801b4c4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b4c8:	4356      	muls	r6, r2
 801b4ca:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b4ce:	f108 0801 	add.w	r8, r8, #1
 801b4d2:	920a      	str	r2, [sp, #40]	; 0x28
 801b4d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4d6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b4da:	930f      	str	r3, [sp, #60]	; 0x3c
 801b4dc:	fa1f f888 	uxth.w	r8, r8
 801b4e0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b4e4:	f108 0204 	add.w	r2, r8, #4
 801b4e8:	9211      	str	r2, [sp, #68]	; 0x44
 801b4ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b4ec:	4b85      	ldr	r3, [pc, #532]	; (801b704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b4ee:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b4f2:	b2ad      	uxth	r5, r5
 801b4f4:	9215      	str	r2, [sp, #84]	; 0x54
 801b4f6:	2d00      	cmp	r5, #0
 801b4f8:	9a04      	ldr	r2, [sp, #16]
 801b4fa:	f04f 0100 	mov.w	r1, #0
 801b4fe:	bf18      	it	ne
 801b500:	2200      	movne	r2, #0
 801b502:	1b1b      	subs	r3, r3, r4
 801b504:	b292      	uxth	r2, r2
 801b506:	910d      	str	r1, [sp, #52]	; 0x34
 801b508:	9319      	str	r3, [sp, #100]	; 0x64
 801b50a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b50c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b50e:	fa11 f383 	uxtah	r3, r1, r3
 801b512:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b514:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b518:	3304      	adds	r3, #4
 801b51a:	9306      	str	r3, [sp, #24]
 801b51c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b51e:	4283      	cmp	r3, r0
 801b520:	f240 8166 	bls.w	801b7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b524:	9902      	ldr	r1, [sp, #8]
 801b526:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b52a:	fbb5 f3f3 	udiv	r3, r5, r3
 801b52e:	1acb      	subs	r3, r1, r3
 801b530:	b29b      	uxth	r3, r3
 801b532:	9316      	str	r3, [sp, #88]	; 0x58
 801b534:	9b06      	ldr	r3, [sp, #24]
 801b536:	9e06      	ldr	r6, [sp, #24]
 801b538:	7859      	ldrb	r1, [r3, #1]
 801b53a:	789b      	ldrb	r3, [r3, #2]
 801b53c:	7836      	ldrb	r6, [r6, #0]
 801b53e:	9612      	str	r6, [sp, #72]	; 0x48
 801b540:	021b      	lsls	r3, r3, #8
 801b542:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b546:	9906      	ldr	r1, [sp, #24]
 801b548:	78c9      	ldrb	r1, [r1, #3]
 801b54a:	430b      	orrs	r3, r1
 801b54c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b54e:	3601      	adds	r6, #1
 801b550:	4419      	add	r1, r3
 801b552:	9605      	str	r6, [sp, #20]
 801b554:	1c4e      	adds	r6, r1, #1
 801b556:	9603      	str	r6, [sp, #12]
 801b558:	7849      	ldrb	r1, [r1, #1]
 801b55a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b55c:	0209      	lsls	r1, r1, #8
 801b55e:	5cf3      	ldrb	r3, [r6, r3]
 801b560:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b564:	4319      	orrs	r1, r3
 801b566:	b28b      	uxth	r3, r1
 801b568:	930c      	str	r3, [sp, #48]	; 0x30
 801b56a:	2300      	movs	r3, #0
 801b56c:	f04f 0a01 	mov.w	sl, #1
 801b570:	9307      	str	r3, [sp, #28]
 801b572:	469c      	mov	ip, r3
 801b574:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b578:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b57c:	46d3      	mov	fp, sl
 801b57e:	4657      	mov	r7, sl
 801b580:	930e      	str	r3, [sp, #56]	; 0x38
 801b582:	2d00      	cmp	r5, #0
 801b584:	d07e      	beq.n	801b684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b586:	42af      	cmp	r7, r5
 801b588:	d26e      	bcs.n	801b668 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b58a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b58c:	9201      	str	r2, [sp, #4]
 801b58e:	1bed      	subs	r5, r5, r7
 801b590:	4283      	cmp	r3, r0
 801b592:	b2ad      	uxth	r5, r5
 801b594:	d802      	bhi.n	801b59c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b596:	e073      	b.n	801b680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b598:	2b00      	cmp	r3, #0
 801b59a:	d15f      	bne.n	801b65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b59c:	9b03      	ldr	r3, [sp, #12]
 801b59e:	785b      	ldrb	r3, [r3, #1]
 801b5a0:	f1cb 0207 	rsb	r2, fp, #7
 801b5a4:	4093      	lsls	r3, r2
 801b5a6:	005b      	lsls	r3, r3, #1
 801b5a8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b5ac:	9b03      	ldr	r3, [sp, #12]
 801b5ae:	781b      	ldrb	r3, [r3, #0]
 801b5b0:	fa43 f30b 	asr.w	r3, r3, fp
 801b5b4:	b2db      	uxtb	r3, r3
 801b5b6:	4313      	orrs	r3, r2
 801b5b8:	f10b 0201 	add.w	r2, fp, #1
 801b5bc:	fa5f fb82 	uxtb.w	fp, r2
 801b5c0:	9a03      	ldr	r2, [sp, #12]
 801b5c2:	f1bb 0f08 	cmp.w	fp, #8
 801b5c6:	bf15      	itete	ne
 801b5c8:	3201      	addne	r2, #1
 801b5ca:	3202      	addeq	r2, #2
 801b5cc:	9203      	strne	r2, [sp, #12]
 801b5ce:	9203      	streq	r2, [sp, #12]
 801b5d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b5d2:	b29f      	uxth	r7, r3
 801b5d4:	bf08      	it	eq
 801b5d6:	f04f 0b00 	moveq.w	fp, #0
 801b5da:	42ba      	cmp	r2, r7
 801b5dc:	d309      	bcc.n	801b5f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b5de:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b5e2:	2301      	movs	r3, #1
 801b5e4:	9a05      	ldr	r2, [sp, #20]
 801b5e6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b5ea:	d30e      	bcc.n	801b60a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b5ec:	469a      	mov	sl, r3
 801b5ee:	2600      	movs	r6, #0
 801b5f0:	e035      	b.n	801b65e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b5f2:	9b05      	ldr	r3, [sp, #20]
 801b5f4:	429f      	cmp	r7, r3
 801b5f6:	d318      	bcc.n	801b62a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b5f8:	eb04 030a 	add.w	r3, r4, sl
 801b5fc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b600:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b604:	f10a 0301 	add.w	r3, sl, #1
 801b608:	b29b      	uxth	r3, r3
 801b60a:	9a05      	ldr	r2, [sp, #20]
 801b60c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b610:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b612:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b616:	7116      	strb	r6, [r2, #4]
 801b618:	f10a 0601 	add.w	r6, sl, #1
 801b61c:	80d1      	strh	r1, [r2, #6]
 801b61e:	7156      	strb	r6, [r2, #5]
 801b620:	9a05      	ldr	r2, [sp, #20]
 801b622:	3201      	adds	r2, #1
 801b624:	b292      	uxth	r2, r2
 801b626:	9205      	str	r2, [sp, #20]
 801b628:	e7e0      	b.n	801b5ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b62a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b62e:	463a      	mov	r2, r7
 801b630:	795b      	ldrb	r3, [r3, #5]
 801b632:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b636:	4426      	add	r6, r4
 801b638:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b63a:	eb01 0c06 	add.w	ip, r1, r6
 801b63e:	f1bc 0f00 	cmp.w	ip, #0
 801b642:	dd07      	ble.n	801b654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b644:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b648:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b64c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b650:	88d2      	ldrh	r2, [r2, #6]
 801b652:	e7f1      	b.n	801b638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b654:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b658:	b29b      	uxth	r3, r3
 801b65a:	e7c3      	b.n	801b5e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b65c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b65e:	970c      	str	r7, [sp, #48]	; 0x30
 801b660:	9a01      	ldr	r2, [sp, #4]
 801b662:	46b4      	mov	ip, r6
 801b664:	461f      	mov	r7, r3
 801b666:	e78c      	b.n	801b582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b668:	1b7b      	subs	r3, r7, r5
 801b66a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b66e:	9201      	str	r2, [sp, #4]
 801b670:	eb0c 0605 	add.w	r6, ip, r5
 801b674:	b29b      	uxth	r3, r3
 801b676:	b2b6      	uxth	r6, r6
 801b678:	2500      	movs	r5, #0
 801b67a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b67c:	4282      	cmp	r2, r0
 801b67e:	d88b      	bhi.n	801b598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b680:	9a01      	ldr	r2, [sp, #4]
 801b682:	e74b      	b.n	801b51c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b684:	4297      	cmp	r7, r2
 801b686:	d332      	bcc.n	801b6ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b688:	1abb      	subs	r3, r7, r2
 801b68a:	b29b      	uxth	r3, r3
 801b68c:	9208      	str	r2, [sp, #32]
 801b68e:	9501      	str	r5, [sp, #4]
 801b690:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b692:	29ff      	cmp	r1, #255	; 0xff
 801b694:	9908      	ldr	r1, [sp, #32]
 801b696:	eb0c 0601 	add.w	r6, ip, r1
 801b69a:	d135      	bne.n	801b708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b69c:	f1a0 0e02 	sub.w	lr, r0, #2
 801b6a0:	b2b6      	uxth	r6, r6
 801b6a2:	45b4      	cmp	ip, r6
 801b6a4:	f040 808c 	bne.w	801b7c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b6a8:	9908      	ldr	r1, [sp, #32]
 801b6aa:	4297      	cmp	r7, r2
 801b6ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b6b0:	d3e2      	bcc.n	801b678 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b6b2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b6b4:	9904      	ldr	r1, [sp, #16]
 801b6b6:	8812      	ldrh	r2, [r2, #0]
 801b6b8:	1a52      	subs	r2, r2, r1
 801b6ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b6be:	9a07      	ldr	r2, [sp, #28]
 801b6c0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b6c2:	3201      	adds	r2, #1
 801b6c4:	428a      	cmp	r2, r1
 801b6c6:	9207      	str	r2, [sp, #28]
 801b6c8:	f040 8087 	bne.w	801b7da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b6cc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b6d0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b6d4:	9b04      	ldr	r3, [sp, #16]
 801b6d6:	1bed      	subs	r5, r5, r7
 801b6d8:	b2ad      	uxth	r5, r5
 801b6da:	2d00      	cmp	r5, #0
 801b6dc:	bf08      	it	eq
 801b6de:	461a      	moveq	r2, r3
 801b6e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b6e2:	bf18      	it	ne
 801b6e4:	2200      	movne	r2, #0
 801b6e6:	3301      	adds	r3, #1
 801b6e8:	930d      	str	r3, [sp, #52]	; 0x34
 801b6ea:	b292      	uxth	r2, r2
 801b6ec:	e70d      	b.n	801b50a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b6ee:	1bd1      	subs	r1, r2, r7
 801b6f0:	b28b      	uxth	r3, r1
 801b6f2:	9301      	str	r3, [sp, #4]
 801b6f4:	9708      	str	r7, [sp, #32]
 801b6f6:	462b      	mov	r3, r5
 801b6f8:	e7ca      	b.n	801b690 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b6fa:	bf00      	nop
 801b6fc:	20012da4 	.word	0x20012da4
 801b700:	20012d9e 	.word	0x20012d9e
 801b704:	fffff7fb 	.word	0xfffff7fb
 801b708:	b2b6      	uxth	r6, r6
 801b70a:	900b      	str	r0, [sp, #44]	; 0x2c
 801b70c:	45b4      	cmp	ip, r6
 801b70e:	d0cb      	beq.n	801b6a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b710:	f10c 0101 	add.w	r1, ip, #1
 801b714:	44a4      	add	ip, r4
 801b716:	9117      	str	r1, [sp, #92]	; 0x5c
 801b718:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b71c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b71e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b722:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b724:	f8b1 c000 	ldrh.w	ip, [r1]
 801b728:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b72a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b72e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b732:	fb1e fe01 	smulbb	lr, lr, r1
 801b736:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b73a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b73c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b740:	fb08 e801 	mla	r8, r8, r1, lr
 801b744:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b748:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b74a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b74e:	fb19 f901 	smulbb	r9, r9, r1
 801b752:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b756:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b758:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b75c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b760:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b764:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b766:	fa5f fc8c 	uxtb.w	ip, ip
 801b76a:	fb1c fc01 	smulbb	ip, ip, r1
 801b76e:	00ed      	lsls	r5, r5, #3
 801b770:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b772:	b2ed      	uxtb	r5, r5
 801b774:	fb05 c501 	mla	r5, r5, r1, ip
 801b778:	fa1f f888 	uxth.w	r8, r8
 801b77c:	fa1f fe8e 	uxth.w	lr, lr
 801b780:	b2ad      	uxth	r5, r5
 801b782:	f108 0c01 	add.w	ip, r8, #1
 801b786:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b78a:	f10e 0901 	add.w	r9, lr, #1
 801b78e:	f105 0c01 	add.w	ip, r5, #1
 801b792:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b796:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b79a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b79e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b7a2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b7a6:	ea4c 0808 	orr.w	r8, ip, r8
 801b7aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b7ac:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b7b0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b7b4:	ea48 0809 	orr.w	r8, r8, r9
 801b7b8:	f821 8b02 	strh.w	r8, [r1], #2
 801b7bc:	910b      	str	r1, [sp, #44]	; 0x2c
 801b7be:	e7a5      	b.n	801b70c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b7c0:	f10c 0801 	add.w	r8, ip, #1
 801b7c4:	44a4      	add	ip, r4
 801b7c6:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b7c8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b7cc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b7d0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b7d4:	fa1f fc88 	uxth.w	ip, r8
 801b7d8:	e763      	b.n	801b6a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b7da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b7de:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b7e2:	1aad      	subs	r5, r5, r2
 801b7e4:	b2ad      	uxth	r5, r5
 801b7e6:	2d00      	cmp	r5, #0
 801b7e8:	bf18      	it	ne
 801b7ea:	2200      	movne	r2, #0
 801b7ec:	9201      	str	r2, [sp, #4]
 801b7ee:	e744      	b.n	801b67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b7f0:	4b03      	ldr	r3, [pc, #12]	; (801b800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b7f2:	6818      	ldr	r0, [r3, #0]
 801b7f4:	6803      	ldr	r3, [r0, #0]
 801b7f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b7f8:	4798      	blx	r3
 801b7fa:	b01f      	add	sp, #124	; 0x7c
 801b7fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b800:	20012da4 	.word	0x20012da4

0801b804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b808:	b08f      	sub	sp, #60	; 0x3c
 801b80a:	461c      	mov	r4, r3
 801b80c:	9203      	str	r2, [sp, #12]
 801b80e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b812:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b814:	9202      	str	r2, [sp, #8]
 801b816:	460f      	mov	r7, r1
 801b818:	2a00      	cmp	r2, #0
 801b81a:	f000 8128 	beq.w	801ba6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b81e:	6820      	ldr	r0, [r4, #0]
 801b820:	6861      	ldr	r1, [r4, #4]
 801b822:	aa0a      	add	r2, sp, #40	; 0x28
 801b824:	c203      	stmia	r2!, {r0, r1}
 801b826:	6818      	ldr	r0, [r3, #0]
 801b828:	6859      	ldr	r1, [r3, #4]
 801b82a:	aa0c      	add	r2, sp, #48	; 0x30
 801b82c:	c203      	stmia	r2!, {r0, r1}
 801b82e:	a80a      	add	r0, sp, #40	; 0x28
 801b830:	f7f9 f802 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b834:	4621      	mov	r1, r4
 801b836:	a80c      	add	r0, sp, #48	; 0x30
 801b838:	f7f9 f842 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b83c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b840:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b844:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b848:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b84c:	bfde      	ittt	le
 801b84e:	b2b3      	uxthle	r3, r6
 801b850:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b854:	fb92 f3f3 	sdivle	r3, r2, r3
 801b858:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b85c:	bfc8      	it	gt
 801b85e:	2301      	movgt	r3, #1
 801b860:	fb92 f1f3 	sdiv	r1, r2, r3
 801b864:	fa1f fc81 	uxth.w	ip, r1
 801b868:	fb0c 2413 	mls	r4, ip, r3, r2
 801b86c:	fb14 f406 	smulbb	r4, r4, r6
 801b870:	441d      	add	r5, r3
 801b872:	4404      	add	r4, r0
 801b874:	4661      	mov	r1, ip
 801b876:	3d01      	subs	r5, #1
 801b878:	b2a4      	uxth	r4, r4
 801b87a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b87e:	b121      	cbz	r1, 801b88a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b880:	9b03      	ldr	r3, [sp, #12]
 801b882:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b886:	ba1b      	rev	r3, r3
 801b888:	441f      	add	r7, r3
 801b88a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b88e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b892:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b896:	4418      	add	r0, r3
 801b898:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b89c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b8a0:	441a      	add	r2, r3
 801b8a2:	4b74      	ldr	r3, [pc, #464]	; (801ba74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b8a4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b8a8:	6818      	ldr	r0, [r3, #0]
 801b8aa:	6803      	ldr	r3, [r0, #0]
 801b8ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b8ae:	4798      	blx	r3
 801b8b0:	4a71      	ldr	r2, [pc, #452]	; (801ba78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b8b2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b8b6:	8813      	ldrh	r3, [r2, #0]
 801b8b8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b8bc:	9209      	str	r2, [sp, #36]	; 0x24
 801b8be:	fb03 c101 	mla	r1, r3, r1, ip
 801b8c2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b8c6:	4373      	muls	r3, r6
 801b8c8:	b2ad      	uxth	r5, r5
 801b8ca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b8ce:	00ad      	lsls	r5, r5, #2
 801b8d0:	2c00      	cmp	r4, #0
 801b8d2:	9304      	str	r3, [sp, #16]
 801b8d4:	f105 0304 	add.w	r3, r5, #4
 801b8d8:	9305      	str	r3, [sp, #20]
 801b8da:	bf0c      	ite	eq
 801b8dc:	46c8      	moveq	r8, r9
 801b8de:	f04f 0800 	movne.w	r8, #0
 801b8e2:	2300      	movs	r3, #0
 801b8e4:	fa1f f888 	uxth.w	r8, r8
 801b8e8:	9301      	str	r3, [sp, #4]
 801b8ea:	9a04      	ldr	r2, [sp, #16]
 801b8ec:	4282      	cmp	r2, r0
 801b8ee:	f240 80b9 	bls.w	801ba64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b8f2:	b95b      	cbnz	r3, 801b90c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b8f4:	783a      	ldrb	r2, [r7, #0]
 801b8f6:	0993      	lsrs	r3, r2, #6
 801b8f8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b8fc:	9201      	str	r2, [sp, #4]
 801b8fe:	1e5a      	subs	r2, r3, #1
 801b900:	2a02      	cmp	r2, #2
 801b902:	bf8d      	iteet	hi
 801b904:	787b      	ldrbhi	r3, [r7, #1]
 801b906:	3701      	addls	r7, #1
 801b908:	b29b      	uxthls	r3, r3
 801b90a:	3702      	addhi	r7, #2
 801b90c:	b184      	cbz	r4, 801b930 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b90e:	429c      	cmp	r4, r3
 801b910:	bf95      	itete	ls
 801b912:	1b1c      	subls	r4, r3, r4
 801b914:	1ae4      	subhi	r4, r4, r3
 801b916:	fa1f fa84 	uxthls.w	sl, r4
 801b91a:	b2a4      	uxthhi	r4, r4
 801b91c:	bf87      	ittee	hi
 801b91e:	46c4      	movhi	ip, r8
 801b920:	f04f 0a00 	movhi.w	sl, #0
 801b924:	fa1f fc89 	uxthls.w	ip, r9
 801b928:	2400      	movls	r4, #0
 801b92a:	4653      	mov	r3, sl
 801b92c:	46e0      	mov	r8, ip
 801b92e:	e7dc      	b.n	801b8ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b930:	2204      	movs	r2, #4
 801b932:	4615      	mov	r5, r2
 801b934:	9905      	ldr	r1, [sp, #20]
 801b936:	9a01      	ldr	r2, [sp, #4]
 801b938:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b93c:	9903      	ldr	r1, [sp, #12]
 801b93e:	588a      	ldr	r2, [r1, r2]
 801b940:	4543      	cmp	r3, r8
 801b942:	bf27      	ittee	cs
 801b944:	eba3 0a08 	subcs.w	sl, r3, r8
 801b948:	46c6      	movcs	lr, r8
 801b94a:	eba8 0c03 	subcc.w	ip, r8, r3
 801b94e:	469e      	movcc	lr, r3
 801b950:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b954:	bf27      	ittee	cs
 801b956:	fa1f fa8a 	uxthcs.w	sl, sl
 801b95a:	46a4      	movcs	ip, r4
 801b95c:	fa1f fc8c 	uxthcc.w	ip, ip
 801b960:	46a2      	movcc	sl, r4
 801b962:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b966:	2900      	cmp	r1, #0
 801b968:	d066      	beq.n	801ba38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b96a:	29ff      	cmp	r1, #255	; 0xff
 801b96c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b970:	d114      	bne.n	801b99c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b972:	9d02      	ldr	r5, [sp, #8]
 801b974:	2dff      	cmp	r5, #255	; 0xff
 801b976:	d111      	bne.n	801b99c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b978:	0951      	lsrs	r1, r2, #5
 801b97a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b97e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b982:	f026 0607 	bic.w	r6, r6, #7
 801b986:	430e      	orrs	r6, r1
 801b988:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b98c:	4316      	orrs	r6, r2
 801b98e:	b2b6      	uxth	r6, r6
 801b990:	4486      	add	lr, r0
 801b992:	4586      	cmp	lr, r0
 801b994:	d051      	beq.n	801ba3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b996:	f820 6b02 	strh.w	r6, [r0], #2
 801b99a:	e7fa      	b.n	801b992 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b99c:	9d02      	ldr	r5, [sp, #8]
 801b99e:	4369      	muls	r1, r5
 801b9a0:	1c4d      	adds	r5, r1, #1
 801b9a2:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b9a6:	122d      	asrs	r5, r5, #8
 801b9a8:	ea6f 0b05 	mvn.w	fp, r5
 801b9ac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b9b0:	b2ad      	uxth	r5, r5
 801b9b2:	b2f6      	uxtb	r6, r6
 801b9b4:	b2d2      	uxtb	r2, r2
 801b9b6:	fb11 f105 	smulbb	r1, r1, r5
 801b9ba:	fb16 f605 	smulbb	r6, r6, r5
 801b9be:	fb12 f205 	smulbb	r2, r2, r5
 801b9c2:	b289      	uxth	r1, r1
 801b9c4:	b2b6      	uxth	r6, r6
 801b9c6:	b292      	uxth	r2, r2
 801b9c8:	9106      	str	r1, [sp, #24]
 801b9ca:	9607      	str	r6, [sp, #28]
 801b9cc:	9208      	str	r2, [sp, #32]
 801b9ce:	4486      	add	lr, r0
 801b9d0:	fa5f fb8b 	uxtb.w	fp, fp
 801b9d4:	4586      	cmp	lr, r0
 801b9d6:	d030      	beq.n	801ba3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b9d8:	8802      	ldrh	r2, [r0, #0]
 801b9da:	9906      	ldr	r1, [sp, #24]
 801b9dc:	1216      	asrs	r6, r2, #8
 801b9de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9e2:	10d5      	asrs	r5, r2, #3
 801b9e4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b9e8:	fb06 160b 	mla	r6, r6, fp, r1
 801b9ec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b9f0:	9907      	ldr	r1, [sp, #28]
 801b9f2:	00d2      	lsls	r2, r2, #3
 801b9f4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b9f8:	fb05 150b 	mla	r5, r5, fp, r1
 801b9fc:	b2d2      	uxtb	r2, r2
 801b9fe:	9908      	ldr	r1, [sp, #32]
 801ba00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ba04:	b2b6      	uxth	r6, r6
 801ba06:	fb02 120b 	mla	r2, r2, fp, r1
 801ba0a:	b292      	uxth	r2, r2
 801ba0c:	1c71      	adds	r1, r6, #1
 801ba0e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801ba12:	1c51      	adds	r1, r2, #1
 801ba14:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ba18:	b2ad      	uxth	r5, r5
 801ba1a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ba1e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ba22:	4316      	orrs	r6, r2
 801ba24:	1c6a      	adds	r2, r5, #1
 801ba26:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ba2a:	096d      	lsrs	r5, r5, #5
 801ba2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ba30:	432e      	orrs	r6, r5
 801ba32:	f820 6b02 	strh.w	r6, [r0], #2
 801ba36:	e7cd      	b.n	801b9d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ba38:	4470      	add	r0, lr
 801ba3a:	4543      	cmp	r3, r8
 801ba3c:	f4ff af75 	bcc.w	801b92a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ba40:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ba44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba46:	fa1f fc89 	uxth.w	ip, r9
 801ba4a:	eba4 040c 	sub.w	r4, r4, ip
 801ba4e:	881b      	ldrh	r3, [r3, #0]
 801ba50:	b2a4      	uxth	r4, r4
 801ba52:	2c00      	cmp	r4, #0
 801ba54:	eba3 0309 	sub.w	r3, r3, r9
 801ba58:	bf18      	it	ne
 801ba5a:	f04f 0c00 	movne.w	ip, #0
 801ba5e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ba62:	e762      	b.n	801b92a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ba64:	4b03      	ldr	r3, [pc, #12]	; (801ba74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ba66:	6818      	ldr	r0, [r3, #0]
 801ba68:	6803      	ldr	r3, [r0, #0]
 801ba6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba6c:	4798      	blx	r3
 801ba6e:	b00f      	add	sp, #60	; 0x3c
 801ba70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba74:	20012da4 	.word	0x20012da4
 801ba78:	20012d9e 	.word	0x20012d9e

0801ba7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ba7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba80:	b093      	sub	sp, #76	; 0x4c
 801ba82:	461c      	mov	r4, r3
 801ba84:	9205      	str	r2, [sp, #20]
 801ba86:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ba8a:	9101      	str	r1, [sp, #4]
 801ba8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ba8e:	9202      	str	r2, [sp, #8]
 801ba90:	2a00      	cmp	r2, #0
 801ba92:	f000 812c 	beq.w	801bcee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ba96:	6820      	ldr	r0, [r4, #0]
 801ba98:	6861      	ldr	r1, [r4, #4]
 801ba9a:	aa0e      	add	r2, sp, #56	; 0x38
 801ba9c:	c203      	stmia	r2!, {r0, r1}
 801ba9e:	6818      	ldr	r0, [r3, #0]
 801baa0:	6859      	ldr	r1, [r3, #4]
 801baa2:	aa10      	add	r2, sp, #64	; 0x40
 801baa4:	c203      	stmia	r2!, {r0, r1}
 801baa6:	a80e      	add	r0, sp, #56	; 0x38
 801baa8:	f7f8 fec6 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801baac:	4621      	mov	r1, r4
 801baae:	a810      	add	r0, sp, #64	; 0x40
 801bab0:	f7f8 ff06 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bab4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bab8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801babc:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bac0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bac4:	bfde      	ittt	le
 801bac6:	b2b3      	uxthle	r3, r6
 801bac8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bacc:	fb92 f3f3 	sdivle	r3, r2, r3
 801bad0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bad4:	bfc8      	it	gt
 801bad6:	2301      	movgt	r3, #1
 801bad8:	fb92 f1f3 	sdiv	r1, r2, r3
 801badc:	fa1f fc81 	uxth.w	ip, r1
 801bae0:	fb0c 2413 	mls	r4, ip, r3, r2
 801bae4:	fb14 f406 	smulbb	r4, r4, r6
 801bae8:	441d      	add	r5, r3
 801baea:	4404      	add	r4, r0
 801baec:	4661      	mov	r1, ip
 801baee:	3d01      	subs	r5, #1
 801baf0:	b2a4      	uxth	r4, r4
 801baf2:	fb95 f5f3 	sdiv	r5, r5, r3
 801baf6:	b131      	cbz	r1, 801bb06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801baf8:	9b05      	ldr	r3, [sp, #20]
 801bafa:	9901      	ldr	r1, [sp, #4]
 801bafc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bb00:	ba1b      	rev	r3, r3
 801bb02:	4419      	add	r1, r3
 801bb04:	9101      	str	r1, [sp, #4]
 801bb06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801bb0a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801bb0e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801bb12:	4418      	add	r0, r3
 801bb14:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801bb18:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801bb1c:	441a      	add	r2, r3
 801bb1e:	4b75      	ldr	r3, [pc, #468]	; (801bcf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bb20:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801bb24:	6818      	ldr	r0, [r3, #0]
 801bb26:	6803      	ldr	r3, [r0, #0]
 801bb28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bb2a:	4798      	blx	r3
 801bb2c:	4972      	ldr	r1, [pc, #456]	; (801bcf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bb2e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801bb32:	880b      	ldrh	r3, [r1, #0]
 801bb34:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bb38:	910d      	str	r1, [sp, #52]	; 0x34
 801bb3a:	fb03 c202 	mla	r2, r3, r2, ip
 801bb3e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb42:	4373      	muls	r3, r6
 801bb44:	b2ad      	uxth	r5, r5
 801bb46:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bb4a:	00ad      	lsls	r5, r5, #2
 801bb4c:	9308      	str	r3, [sp, #32]
 801bb4e:	1d2b      	adds	r3, r5, #4
 801bb50:	9309      	str	r3, [sp, #36]	; 0x24
 801bb52:	9b02      	ldr	r3, [sp, #8]
 801bb54:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bb58:	9106      	str	r1, [sp, #24]
 801bb5a:	43da      	mvns	r2, r3
 801bb5c:	2c00      	cmp	r4, #0
 801bb5e:	bf0c      	ite	eq
 801bb60:	46dc      	moveq	ip, fp
 801bb62:	f04f 0c00 	movne.w	ip, #0
 801bb66:	2300      	movs	r3, #0
 801bb68:	b2d2      	uxtb	r2, r2
 801bb6a:	fa1f fc8c 	uxth.w	ip, ip
 801bb6e:	9303      	str	r3, [sp, #12]
 801bb70:	9207      	str	r2, [sp, #28]
 801bb72:	9a08      	ldr	r2, [sp, #32]
 801bb74:	4282      	cmp	r2, r0
 801bb76:	f240 80b5 	bls.w	801bce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bb7a:	b963      	cbnz	r3, 801bb96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bb7c:	9b01      	ldr	r3, [sp, #4]
 801bb7e:	781a      	ldrb	r2, [r3, #0]
 801bb80:	0993      	lsrs	r3, r2, #6
 801bb82:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bb86:	9203      	str	r2, [sp, #12]
 801bb88:	1e5a      	subs	r2, r3, #1
 801bb8a:	2a02      	cmp	r2, #2
 801bb8c:	d815      	bhi.n	801bbba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801bb8e:	9a01      	ldr	r2, [sp, #4]
 801bb90:	3201      	adds	r2, #1
 801bb92:	9201      	str	r2, [sp, #4]
 801bb94:	b29b      	uxth	r3, r3
 801bb96:	b1b4      	cbz	r4, 801bbc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bb98:	429c      	cmp	r4, r3
 801bb9a:	bf95      	itete	ls
 801bb9c:	1b1c      	subls	r4, r3, r4
 801bb9e:	1ae4      	subhi	r4, r4, r3
 801bba0:	fa1f f884 	uxthls.w	r8, r4
 801bba4:	b2a4      	uxthhi	r4, r4
 801bba6:	bf87      	ittee	hi
 801bba8:	4666      	movhi	r6, ip
 801bbaa:	f04f 0800 	movhi.w	r8, #0
 801bbae:	fa1f f68b 	uxthls.w	r6, fp
 801bbb2:	2400      	movls	r4, #0
 801bbb4:	4643      	mov	r3, r8
 801bbb6:	46b4      	mov	ip, r6
 801bbb8:	e7db      	b.n	801bb72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bbba:	9a01      	ldr	r2, [sp, #4]
 801bbbc:	9b01      	ldr	r3, [sp, #4]
 801bbbe:	3202      	adds	r2, #2
 801bbc0:	785b      	ldrb	r3, [r3, #1]
 801bbc2:	9201      	str	r2, [sp, #4]
 801bbc4:	e7e7      	b.n	801bb96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bbc6:	2203      	movs	r2, #3
 801bbc8:	4615      	mov	r5, r2
 801bbca:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bbcc:	9a03      	ldr	r2, [sp, #12]
 801bbce:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bbd2:	9905      	ldr	r1, [sp, #20]
 801bbd4:	4563      	cmp	r3, ip
 801bbd6:	eb01 0502 	add.w	r5, r1, r2
 801bbda:	9902      	ldr	r1, [sp, #8]
 801bbdc:	bf29      	itett	cs
 801bbde:	eba3 080c 	subcs.w	r8, r3, ip
 801bbe2:	ebac 0603 	subcc.w	r6, ip, r3
 801bbe6:	fa1f f888 	uxthcs.w	r8, r8
 801bbea:	46e1      	movcs	r9, ip
 801bbec:	bf2f      	iteee	cs
 801bbee:	4626      	movcs	r6, r4
 801bbf0:	b2b6      	uxthcc	r6, r6
 801bbf2:	4699      	movcc	r9, r3
 801bbf4:	46a0      	movcc	r8, r4
 801bbf6:	29ff      	cmp	r1, #255	; 0xff
 801bbf8:	d04a      	beq.n	801bc90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bbfa:	9f06      	ldr	r7, [sp, #24]
 801bbfc:	78a9      	ldrb	r1, [r5, #2]
 801bbfe:	9004      	str	r0, [sp, #16]
 801bc00:	4379      	muls	r1, r7
 801bc02:	910a      	str	r1, [sp, #40]	; 0x28
 801bc04:	7869      	ldrb	r1, [r5, #1]
 801bc06:	4379      	muls	r1, r7
 801bc08:	910b      	str	r1, [sp, #44]	; 0x2c
 801bc0a:	9905      	ldr	r1, [sp, #20]
 801bc0c:	5c8a      	ldrb	r2, [r1, r2]
 801bc0e:	437a      	muls	r2, r7
 801bc10:	920c      	str	r2, [sp, #48]	; 0x30
 801bc12:	46ca      	mov	sl, r9
 801bc14:	f1ba 0f00 	cmp.w	sl, #0
 801bc18:	d03d      	beq.n	801bc96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bc1a:	9a04      	ldr	r2, [sp, #16]
 801bc1c:	9f07      	ldr	r7, [sp, #28]
 801bc1e:	8812      	ldrh	r2, [r2, #0]
 801bc20:	1215      	asrs	r5, r2, #8
 801bc22:	46be      	mov	lr, r7
 801bc24:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bc28:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bc2a:	10d1      	asrs	r1, r2, #3
 801bc2c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bc30:	fb05 750e 	mla	r5, r5, lr, r7
 801bc34:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bc38:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bc3a:	00d2      	lsls	r2, r2, #3
 801bc3c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bc40:	fb01 710e 	mla	r1, r1, lr, r7
 801bc44:	b2d2      	uxtb	r2, r2
 801bc46:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bc48:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bc4c:	b2ad      	uxth	r5, r5
 801bc4e:	fb02 720e 	mla	r2, r2, lr, r7
 801bc52:	b292      	uxth	r2, r2
 801bc54:	f105 0e01 	add.w	lr, r5, #1
 801bc58:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bc5c:	f102 0e01 	add.w	lr, r2, #1
 801bc60:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bc64:	b289      	uxth	r1, r1
 801bc66:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bc6a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bc6e:	4315      	orrs	r5, r2
 801bc70:	1c4a      	adds	r2, r1, #1
 801bc72:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc76:	0949      	lsrs	r1, r1, #5
 801bc78:	9a04      	ldr	r2, [sp, #16]
 801bc7a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc7e:	430d      	orrs	r5, r1
 801bc80:	f822 5b02 	strh.w	r5, [r2], #2
 801bc84:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bc88:	9204      	str	r2, [sp, #16]
 801bc8a:	fa1f fa8a 	uxth.w	sl, sl
 801bc8e:	e7c1      	b.n	801bc14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc90:	4649      	mov	r1, r9
 801bc92:	4686      	mov	lr, r0
 801bc94:	b999      	cbnz	r1, 801bcbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bc96:	4563      	cmp	r3, ip
 801bc98:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bc9c:	d38a      	bcc.n	801bbb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bc9e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bca2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bca4:	fa1f f68b 	uxth.w	r6, fp
 801bca8:	1ba4      	subs	r4, r4, r6
 801bcaa:	881b      	ldrh	r3, [r3, #0]
 801bcac:	b2a4      	uxth	r4, r4
 801bcae:	2c00      	cmp	r4, #0
 801bcb0:	eba3 030b 	sub.w	r3, r3, fp
 801bcb4:	bf18      	it	ne
 801bcb6:	2600      	movne	r6, #0
 801bcb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bcbc:	e77a      	b.n	801bbb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bcbe:	78aa      	ldrb	r2, [r5, #2]
 801bcc0:	4f0e      	ldr	r7, [pc, #56]	; (801bcfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bcc2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bcc6:	786a      	ldrb	r2, [r5, #1]
 801bcc8:	00d2      	lsls	r2, r2, #3
 801bcca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bcce:	ea4a 0202 	orr.w	r2, sl, r2
 801bcd2:	f895 a000 	ldrb.w	sl, [r5]
 801bcd6:	3901      	subs	r1, #1
 801bcd8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bcdc:	f82e 2b02 	strh.w	r2, [lr], #2
 801bce0:	b289      	uxth	r1, r1
 801bce2:	e7d7      	b.n	801bc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bce4:	4b03      	ldr	r3, [pc, #12]	; (801bcf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bce6:	6818      	ldr	r0, [r3, #0]
 801bce8:	6803      	ldr	r3, [r0, #0]
 801bcea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bcec:	4798      	blx	r3
 801bcee:	b013      	add	sp, #76	; 0x4c
 801bcf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcf4:	20012da4 	.word	0x20012da4
 801bcf8:	20012d9e 	.word	0x20012d9e
 801bcfc:	fffff800 	.word	0xfffff800

0801bd00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bd00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd04:	b09d      	sub	sp, #116	; 0x74
 801bd06:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801bd0a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801bd0e:	920e      	str	r2, [sp, #56]	; 0x38
 801bd10:	461c      	mov	r4, r3
 801bd12:	4683      	mov	fp, r0
 801bd14:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bd16:	2a00      	cmp	r2, #0
 801bd18:	f000 81e0 	beq.w	801c0dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801bd1c:	6820      	ldr	r0, [r4, #0]
 801bd1e:	6861      	ldr	r1, [r4, #4]
 801bd20:	aa18      	add	r2, sp, #96	; 0x60
 801bd22:	c203      	stmia	r2!, {r0, r1}
 801bd24:	6818      	ldr	r0, [r3, #0]
 801bd26:	6859      	ldr	r1, [r3, #4]
 801bd28:	aa1a      	add	r2, sp, #104	; 0x68
 801bd2a:	c203      	stmia	r2!, {r0, r1}
 801bd2c:	a818      	add	r0, sp, #96	; 0x60
 801bd2e:	f7f8 fd83 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd32:	4621      	mov	r1, r4
 801bd34:	a81a      	add	r0, sp, #104	; 0x68
 801bd36:	f7f8 fdc3 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd3a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801bd3e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801bd42:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bd46:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bd4a:	bfd7      	itett	le
 801bd4c:	b29a      	uxthle	r2, r3
 801bd4e:	2201      	movgt	r2, #1
 801bd50:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bd54:	fb91 f2f2 	sdivle	r2, r1, r2
 801bd58:	9202      	str	r2, [sp, #8]
 801bd5a:	9802      	ldr	r0, [sp, #8]
 801bd5c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801bd60:	fb92 f0f0 	sdiv	r0, r2, r0
 801bd64:	b280      	uxth	r0, r0
 801bd66:	900f      	str	r0, [sp, #60]	; 0x3c
 801bd68:	9902      	ldr	r1, [sp, #8]
 801bd6a:	9802      	ldr	r0, [sp, #8]
 801bd6c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bd6e:	440c      	add	r4, r1
 801bd70:	fb05 2510 	mls	r5, r5, r0, r2
 801bd74:	fb15 f503 	smulbb	r5, r5, r3
 801bd78:	3c01      	subs	r4, #1
 801bd7a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801bd7e:	fb94 f4f1 	sdiv	r4, r4, r1
 801bd82:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801bd86:	440d      	add	r5, r1
 801bd88:	4419      	add	r1, r3
 801bd8a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801bd8e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801bd92:	441a      	add	r2, r3
 801bd94:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bd98:	9306      	str	r3, [sp, #24]
 801bd9a:	4bb3      	ldr	r3, [pc, #716]	; (801c068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bd9c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801bda0:	6818      	ldr	r0, [r3, #0]
 801bda2:	6803      	ldr	r3, [r0, #0]
 801bda4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bda6:	4798      	blx	r3
 801bda8:	4bb0      	ldr	r3, [pc, #704]	; (801c06c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801bdaa:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801bdae:	881a      	ldrh	r2, [r3, #0]
 801bdb0:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801bdb4:	9316      	str	r3, [sp, #88]	; 0x58
 801bdb6:	fb02 7101 	mla	r1, r2, r1, r7
 801bdba:	3401      	adds	r4, #1
 801bdbc:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bdc0:	b2a4      	uxth	r4, r4
 801bdc2:	4356      	muls	r6, r2
 801bdc4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801bdc8:	00a4      	lsls	r4, r4, #2
 801bdca:	920a      	str	r2, [sp, #40]	; 0x28
 801bdcc:	1d22      	adds	r2, r4, #4
 801bdce:	b2ad      	uxth	r5, r5
 801bdd0:	9213      	str	r2, [sp, #76]	; 0x4c
 801bdd2:	4ba7      	ldr	r3, [pc, #668]	; (801c070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bdd4:	9a06      	ldr	r2, [sp, #24]
 801bdd6:	2d00      	cmp	r5, #0
 801bdd8:	bf0c      	ite	eq
 801bdda:	4611      	moveq	r1, r2
 801bddc:	2100      	movne	r1, #0
 801bdde:	2200      	movs	r2, #0
 801bde0:	eba3 030b 	sub.w	r3, r3, fp
 801bde4:	b289      	uxth	r1, r1
 801bde6:	920d      	str	r2, [sp, #52]	; 0x34
 801bde8:	9317      	str	r3, [sp, #92]	; 0x5c
 801bdea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bdec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bdee:	fa12 f383 	uxtah	r3, r2, r3
 801bdf2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bdf4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bdf8:	3304      	adds	r3, #4
 801bdfa:	9308      	str	r3, [sp, #32]
 801bdfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bdfe:	4543      	cmp	r3, r8
 801be00:	f240 8167 	bls.w	801c0d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801be04:	9a02      	ldr	r2, [sp, #8]
 801be06:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801be0a:	fbb5 f3f3 	udiv	r3, r5, r3
 801be0e:	1ad3      	subs	r3, r2, r3
 801be10:	b29b      	uxth	r3, r3
 801be12:	9314      	str	r3, [sp, #80]	; 0x50
 801be14:	9b08      	ldr	r3, [sp, #32]
 801be16:	9808      	ldr	r0, [sp, #32]
 801be18:	785a      	ldrb	r2, [r3, #1]
 801be1a:	789b      	ldrb	r3, [r3, #2]
 801be1c:	7800      	ldrb	r0, [r0, #0]
 801be1e:	9010      	str	r0, [sp, #64]	; 0x40
 801be20:	021b      	lsls	r3, r3, #8
 801be22:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801be26:	9a08      	ldr	r2, [sp, #32]
 801be28:	78d2      	ldrb	r2, [r2, #3]
 801be2a:	4313      	orrs	r3, r2
 801be2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801be2e:	3001      	adds	r0, #1
 801be30:	441a      	add	r2, r3
 801be32:	9007      	str	r0, [sp, #28]
 801be34:	1c50      	adds	r0, r2, #1
 801be36:	9005      	str	r0, [sp, #20]
 801be38:	7852      	ldrb	r2, [r2, #1]
 801be3a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be3c:	0212      	lsls	r2, r2, #8
 801be3e:	5cc3      	ldrb	r3, [r0, r3]
 801be40:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801be44:	431a      	orrs	r2, r3
 801be46:	b293      	uxth	r3, r2
 801be48:	930b      	str	r3, [sp, #44]	; 0x2c
 801be4a:	2300      	movs	r3, #0
 801be4c:	9309      	str	r3, [sp, #36]	; 0x24
 801be4e:	2301      	movs	r3, #1
 801be50:	9301      	str	r3, [sp, #4]
 801be52:	9304      	str	r3, [sp, #16]
 801be54:	2300      	movs	r3, #0
 801be56:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801be5a:	9303      	str	r3, [sp, #12]
 801be5c:	f04f 0e01 	mov.w	lr, #1
 801be60:	2d00      	cmp	r5, #0
 801be62:	d07c      	beq.n	801bf5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801be64:	45ae      	cmp	lr, r5
 801be66:	d26b      	bcs.n	801bf40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801be68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be6a:	eba5 050e 	sub.w	r5, r5, lr
 801be6e:	4543      	cmp	r3, r8
 801be70:	b2ad      	uxth	r5, r5
 801be72:	460c      	mov	r4, r1
 801be74:	d802      	bhi.n	801be7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801be76:	e070      	b.n	801bf5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801be78:	2b00      	cmp	r3, #0
 801be7a:	d15c      	bne.n	801bf36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801be7c:	9b05      	ldr	r3, [sp, #20]
 801be7e:	9a04      	ldr	r2, [sp, #16]
 801be80:	785b      	ldrb	r3, [r3, #1]
 801be82:	9904      	ldr	r1, [sp, #16]
 801be84:	f1c2 0207 	rsb	r2, r2, #7
 801be88:	4093      	lsls	r3, r2
 801be8a:	005b      	lsls	r3, r3, #1
 801be8c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801be90:	9b05      	ldr	r3, [sp, #20]
 801be92:	781b      	ldrb	r3, [r3, #0]
 801be94:	410b      	asrs	r3, r1
 801be96:	3101      	adds	r1, #1
 801be98:	b2c9      	uxtb	r1, r1
 801be9a:	2908      	cmp	r1, #8
 801be9c:	9104      	str	r1, [sp, #16]
 801be9e:	9905      	ldr	r1, [sp, #20]
 801bea0:	bf0a      	itet	eq
 801bea2:	3102      	addeq	r1, #2
 801bea4:	3101      	addne	r1, #1
 801bea6:	9105      	streq	r1, [sp, #20]
 801bea8:	b2db      	uxtb	r3, r3
 801beaa:	bf0a      	itet	eq
 801beac:	2100      	moveq	r1, #0
 801beae:	9105      	strne	r1, [sp, #20]
 801beb0:	9104      	streq	r1, [sp, #16]
 801beb2:	4313      	orrs	r3, r2
 801beb4:	9910      	ldr	r1, [sp, #64]	; 0x40
 801beb6:	b29a      	uxth	r2, r3
 801beb8:	4291      	cmp	r1, r2
 801beba:	d30a      	bcc.n	801bed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bebc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801bec0:	2301      	movs	r3, #1
 801bec2:	9907      	ldr	r1, [sp, #28]
 801bec4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bec8:	d30f      	bcc.n	801beea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801beca:	2100      	movs	r1, #0
 801becc:	9301      	str	r3, [sp, #4]
 801bece:	9103      	str	r1, [sp, #12]
 801bed0:	e032      	b.n	801bf38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801bed2:	9b07      	ldr	r3, [sp, #28]
 801bed4:	429a      	cmp	r2, r3
 801bed6:	d318      	bcc.n	801bf0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bed8:	9b01      	ldr	r3, [sp, #4]
 801beda:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801bede:	445b      	add	r3, fp
 801bee0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bee4:	9b01      	ldr	r3, [sp, #4]
 801bee6:	3301      	adds	r3, #1
 801bee8:	b29b      	uxth	r3, r3
 801beea:	9907      	ldr	r1, [sp, #28]
 801beec:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801bef0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bef4:	7108      	strb	r0, [r1, #4]
 801bef6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bef8:	80c8      	strh	r0, [r1, #6]
 801befa:	9801      	ldr	r0, [sp, #4]
 801befc:	3001      	adds	r0, #1
 801befe:	7148      	strb	r0, [r1, #5]
 801bf00:	9907      	ldr	r1, [sp, #28]
 801bf02:	3101      	adds	r1, #1
 801bf04:	b289      	uxth	r1, r1
 801bf06:	9107      	str	r1, [sp, #28]
 801bf08:	e7df      	b.n	801beca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bf0a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bf0e:	4611      	mov	r1, r2
 801bf10:	795b      	ldrb	r3, [r3, #5]
 801bf12:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801bf16:	4458      	add	r0, fp
 801bf18:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801bf1a:	4406      	add	r6, r0
 801bf1c:	2e00      	cmp	r6, #0
 801bf1e:	dd06      	ble.n	801bf2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801bf20:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bf24:	790e      	ldrb	r6, [r1, #4]
 801bf26:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bf2a:	88c9      	ldrh	r1, [r1, #6]
 801bf2c:	e7f4      	b.n	801bf18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bf2e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801bf32:	b29b      	uxth	r3, r3
 801bf34:	e7c5      	b.n	801bec2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bf36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bf38:	920b      	str	r2, [sp, #44]	; 0x2c
 801bf3a:	4621      	mov	r1, r4
 801bf3c:	469e      	mov	lr, r3
 801bf3e:	e78f      	b.n	801be60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bf40:	9a03      	ldr	r2, [sp, #12]
 801bf42:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bf46:	442a      	add	r2, r5
 801bf48:	ebae 0305 	sub.w	r3, lr, r5
 801bf4c:	b292      	uxth	r2, r2
 801bf4e:	b29b      	uxth	r3, r3
 801bf50:	9203      	str	r2, [sp, #12]
 801bf52:	2500      	movs	r5, #0
 801bf54:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bf56:	4542      	cmp	r2, r8
 801bf58:	d88e      	bhi.n	801be78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bf5a:	4621      	mov	r1, r4
 801bf5c:	e74e      	b.n	801bdfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bf5e:	458e      	cmp	lr, r1
 801bf60:	bf29      	itett	cs
 801bf62:	ebae 0301 	subcs.w	r3, lr, r1
 801bf66:	eba1 040e 	subcc.w	r4, r1, lr
 801bf6a:	b29b      	uxthcs	r3, r3
 801bf6c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801bf6e:	bf2f      	iteee	cs
 801bf70:	462c      	movcs	r4, r5
 801bf72:	b2a4      	uxthcc	r4, r4
 801bf74:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801bf78:	462b      	movcc	r3, r5
 801bf7a:	f04f 0900 	mov.w	r9, #0
 801bf7e:	9a03      	ldr	r2, [sp, #12]
 801bf80:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bf82:	444a      	add	r2, r9
 801bf84:	4548      	cmp	r0, r9
 801bf86:	b292      	uxth	r2, r2
 801bf88:	d074      	beq.n	801c074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bf8a:	445a      	add	r2, fp
 801bf8c:	2004      	movs	r0, #4
 801bf8e:	4605      	mov	r5, r0
 801bf90:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801bf94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bf96:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bf9a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bf9c:	5880      	ldr	r0, [r0, r2]
 801bf9e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bfa2:	d014      	beq.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bfa4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bfa8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bfac:	d112      	bne.n	801bfd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bfae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bfb0:	2aff      	cmp	r2, #255	; 0xff
 801bfb2:	d10f      	bne.n	801bfd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bfb4:	0942      	lsrs	r2, r0, #5
 801bfb6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bfba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfbe:	f025 0507 	bic.w	r5, r5, #7
 801bfc2:	4315      	orrs	r5, r2
 801bfc4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bfc8:	4305      	orrs	r5, r0
 801bfca:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bfce:	f109 0901 	add.w	r9, r9, #1
 801bfd2:	e7d4      	b.n	801bf7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bfd4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bfd8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bfdc:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801bfe0:	9215      	str	r2, [sp, #84]	; 0x54
 801bfe2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bfe4:	fb02 fa0a 	mul.w	sl, r2, sl
 801bfe8:	f10a 0201 	add.w	r2, sl, #1
 801bfec:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bff0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bff4:	1212      	asrs	r2, r2, #8
 801bff6:	fa1f fa82 	uxth.w	sl, r2
 801bffa:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bffe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c002:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c006:	43d2      	mvns	r2, r2
 801c008:	b2d2      	uxtb	r2, r2
 801c00a:	fb16 f60a 	smulbb	r6, r6, sl
 801c00e:	fa5f fc8c 	uxtb.w	ip, ip
 801c012:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c016:	b2c0      	uxtb	r0, r0
 801c018:	fb07 6702 	mla	r7, r7, r2, r6
 801c01c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c020:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c022:	fb10 f00a 	smulbb	r0, r0, sl
 801c026:	fb0c 0002 	mla	r0, ip, r2, r0
 801c02a:	b2ed      	uxtb	r5, r5
 801c02c:	b2bf      	uxth	r7, r7
 801c02e:	fb15 f50a 	smulbb	r5, r5, sl
 801c032:	b280      	uxth	r0, r0
 801c034:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c038:	fb06 5602 	mla	r6, r6, r2, r5
 801c03c:	1c7a      	adds	r2, r7, #1
 801c03e:	1c45      	adds	r5, r0, #1
 801c040:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c044:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c048:	b2b6      	uxth	r6, r6
 801c04a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c04e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c052:	432f      	orrs	r7, r5
 801c054:	1c75      	adds	r5, r6, #1
 801c056:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c05a:	096d      	lsrs	r5, r5, #5
 801c05c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c060:	432f      	orrs	r7, r5
 801c062:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c066:	e7b2      	b.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c068:	20012da4 	.word	0x20012da4
 801c06c:	20012d9e 	.word	0x20012d9e
 801c070:	fffff7fb 	.word	0xfffff7fb
 801c074:	9203      	str	r2, [sp, #12]
 801c076:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c078:	458e      	cmp	lr, r1
 801c07a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c07e:	f4ff af68 	bcc.w	801bf52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c082:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c084:	9906      	ldr	r1, [sp, #24]
 801c086:	8812      	ldrh	r2, [r2, #0]
 801c088:	1a52      	subs	r2, r2, r1
 801c08a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c08e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c090:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c092:	3201      	adds	r2, #1
 801c094:	428a      	cmp	r2, r1
 801c096:	9209      	str	r2, [sp, #36]	; 0x24
 801c098:	d111      	bne.n	801c0be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c09a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c09e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c0a2:	9b06      	ldr	r3, [sp, #24]
 801c0a4:	eba5 0509 	sub.w	r5, r5, r9
 801c0a8:	b2ad      	uxth	r5, r5
 801c0aa:	2d00      	cmp	r5, #0
 801c0ac:	bf08      	it	eq
 801c0ae:	4619      	moveq	r1, r3
 801c0b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c0b2:	bf18      	it	ne
 801c0b4:	2100      	movne	r1, #0
 801c0b6:	3301      	adds	r3, #1
 801c0b8:	930d      	str	r3, [sp, #52]	; 0x34
 801c0ba:	b289      	uxth	r1, r1
 801c0bc:	e695      	b.n	801bdea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c0be:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c0c2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c0c6:	1b2d      	subs	r5, r5, r4
 801c0c8:	b2ad      	uxth	r5, r5
 801c0ca:	2d00      	cmp	r5, #0
 801c0cc:	bf18      	it	ne
 801c0ce:	2400      	movne	r4, #0
 801c0d0:	e740      	b.n	801bf54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c0d2:	4b04      	ldr	r3, [pc, #16]	; (801c0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c0d4:	6818      	ldr	r0, [r3, #0]
 801c0d6:	6803      	ldr	r3, [r0, #0]
 801c0d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c0da:	4798      	blx	r3
 801c0dc:	b01d      	add	sp, #116	; 0x74
 801c0de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0e2:	bf00      	nop
 801c0e4:	20012da4 	.word	0x20012da4

0801c0e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0ec:	b09f      	sub	sp, #124	; 0x7c
 801c0ee:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c0f2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c0f6:	920a      	str	r2, [sp, #40]	; 0x28
 801c0f8:	461d      	mov	r5, r3
 801c0fa:	4604      	mov	r4, r0
 801c0fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0fe:	2a00      	cmp	r2, #0
 801c100:	f000 81fa 	beq.w	801c4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c104:	6828      	ldr	r0, [r5, #0]
 801c106:	6869      	ldr	r1, [r5, #4]
 801c108:	aa1a      	add	r2, sp, #104	; 0x68
 801c10a:	c203      	stmia	r2!, {r0, r1}
 801c10c:	6818      	ldr	r0, [r3, #0]
 801c10e:	6859      	ldr	r1, [r3, #4]
 801c110:	aa1c      	add	r2, sp, #112	; 0x70
 801c112:	c203      	stmia	r2!, {r0, r1}
 801c114:	a81a      	add	r0, sp, #104	; 0x68
 801c116:	f7f8 fb8f 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c11a:	4629      	mov	r1, r5
 801c11c:	a81c      	add	r0, sp, #112	; 0x70
 801c11e:	f7f8 fbcf 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c122:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c126:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c12a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c12e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c132:	bfd7      	itett	le
 801c134:	b29a      	uxthle	r2, r3
 801c136:	2201      	movgt	r2, #1
 801c138:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c13c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c140:	9201      	str	r2, [sp, #4]
 801c142:	9801      	ldr	r0, [sp, #4]
 801c144:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c148:	fb92 f0f0 	sdiv	r0, r2, r0
 801c14c:	b280      	uxth	r0, r0
 801c14e:	9010      	str	r0, [sp, #64]	; 0x40
 801c150:	9901      	ldr	r1, [sp, #4]
 801c152:	9801      	ldr	r0, [sp, #4]
 801c154:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c156:	440e      	add	r6, r1
 801c158:	fb05 2510 	mls	r5, r5, r0, r2
 801c15c:	fb15 f503 	smulbb	r5, r5, r3
 801c160:	3e01      	subs	r6, #1
 801c162:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c166:	fb96 f6f1 	sdiv	r6, r6, r1
 801c16a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c16e:	440d      	add	r5, r1
 801c170:	4419      	add	r1, r3
 801c172:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c176:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c17a:	441a      	add	r2, r3
 801c17c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c180:	9304      	str	r3, [sp, #16]
 801c182:	4b96      	ldr	r3, [pc, #600]	; (801c3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c184:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c188:	6818      	ldr	r0, [r3, #0]
 801c18a:	6803      	ldr	r3, [r0, #0]
 801c18c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c18e:	4798      	blx	r3
 801c190:	4b93      	ldr	r3, [pc, #588]	; (801c3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c192:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c196:	881a      	ldrh	r2, [r3, #0]
 801c198:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c19c:	9318      	str	r3, [sp, #96]	; 0x60
 801c19e:	fb02 c101 	mla	r1, r2, r1, ip
 801c1a2:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c1a6:	4357      	muls	r7, r2
 801c1a8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c1ac:	3601      	adds	r6, #1
 801c1ae:	920b      	str	r2, [sp, #44]	; 0x2c
 801c1b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c1b2:	4b8c      	ldr	r3, [pc, #560]	; (801c3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c1b4:	b2b6      	uxth	r6, r6
 801c1b6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c1ba:	1d32      	adds	r2, r6, #4
 801c1bc:	9206      	str	r2, [sp, #24]
 801c1be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c1c0:	43d2      	mvns	r2, r2
 801c1c2:	b2d2      	uxtb	r2, r2
 801c1c4:	b2ad      	uxth	r5, r5
 801c1c6:	9215      	str	r2, [sp, #84]	; 0x54
 801c1c8:	9a04      	ldr	r2, [sp, #16]
 801c1ca:	2d00      	cmp	r5, #0
 801c1cc:	bf0c      	ite	eq
 801c1ce:	4611      	moveq	r1, r2
 801c1d0:	2100      	movne	r1, #0
 801c1d2:	2200      	movs	r2, #0
 801c1d4:	1b1b      	subs	r3, r3, r4
 801c1d6:	b289      	uxth	r1, r1
 801c1d8:	920d      	str	r2, [sp, #52]	; 0x34
 801c1da:	9319      	str	r3, [sp, #100]	; 0x64
 801c1dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c1de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c1e0:	fa12 f383 	uxtah	r3, r2, r3
 801c1e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c1e6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c1ea:	3304      	adds	r3, #4
 801c1ec:	9307      	str	r3, [sp, #28]
 801c1ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c1f0:	455b      	cmp	r3, fp
 801c1f2:	f240 817c 	bls.w	801c4ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c1f6:	9a01      	ldr	r2, [sp, #4]
 801c1f8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c1fc:	fbb5 f3f3 	udiv	r3, r5, r3
 801c200:	1ad3      	subs	r3, r2, r3
 801c202:	b29b      	uxth	r3, r3
 801c204:	9316      	str	r3, [sp, #88]	; 0x58
 801c206:	9b07      	ldr	r3, [sp, #28]
 801c208:	9807      	ldr	r0, [sp, #28]
 801c20a:	785a      	ldrb	r2, [r3, #1]
 801c20c:	789b      	ldrb	r3, [r3, #2]
 801c20e:	7800      	ldrb	r0, [r0, #0]
 801c210:	9011      	str	r0, [sp, #68]	; 0x44
 801c212:	021b      	lsls	r3, r3, #8
 801c214:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c218:	9a07      	ldr	r2, [sp, #28]
 801c21a:	78d2      	ldrb	r2, [r2, #3]
 801c21c:	4313      	orrs	r3, r2
 801c21e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c220:	3001      	adds	r0, #1
 801c222:	441a      	add	r2, r3
 801c224:	9005      	str	r0, [sp, #20]
 801c226:	1c50      	adds	r0, r2, #1
 801c228:	9003      	str	r0, [sp, #12]
 801c22a:	7852      	ldrb	r2, [r2, #1]
 801c22c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c22e:	0212      	lsls	r2, r2, #8
 801c230:	5cc3      	ldrb	r3, [r0, r3]
 801c232:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c236:	431a      	orrs	r2, r3
 801c238:	b293      	uxth	r3, r2
 801c23a:	930c      	str	r3, [sp, #48]	; 0x30
 801c23c:	2300      	movs	r3, #0
 801c23e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c242:	9308      	str	r3, [sp, #32]
 801c244:	461a      	mov	r2, r3
 801c246:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c24a:	930e      	str	r3, [sp, #56]	; 0x38
 801c24c:	f04f 0801 	mov.w	r8, #1
 801c250:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c254:	f8cd 8008 	str.w	r8, [sp, #8]
 801c258:	46c4      	mov	ip, r8
 801c25a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c25c:	2d00      	cmp	r5, #0
 801c25e:	d07c      	beq.n	801c35a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c260:	45ac      	cmp	ip, r5
 801c262:	d26c      	bcs.n	801c33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c264:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c266:	eba5 050c 	sub.w	r5, r5, ip
 801c26a:	455b      	cmp	r3, fp
 801c26c:	b2ad      	uxth	r5, r5
 801c26e:	4608      	mov	r0, r1
 801c270:	d802      	bhi.n	801c278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c272:	e070      	b.n	801c356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c274:	2b00      	cmp	r3, #0
 801c276:	d15c      	bne.n	801c332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c278:	9b03      	ldr	r3, [sp, #12]
 801c27a:	9a02      	ldr	r2, [sp, #8]
 801c27c:	785b      	ldrb	r3, [r3, #1]
 801c27e:	9902      	ldr	r1, [sp, #8]
 801c280:	f1c2 0207 	rsb	r2, r2, #7
 801c284:	4093      	lsls	r3, r2
 801c286:	005b      	lsls	r3, r3, #1
 801c288:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c28c:	9b03      	ldr	r3, [sp, #12]
 801c28e:	781b      	ldrb	r3, [r3, #0]
 801c290:	410b      	asrs	r3, r1
 801c292:	3101      	adds	r1, #1
 801c294:	b2c9      	uxtb	r1, r1
 801c296:	2908      	cmp	r1, #8
 801c298:	9102      	str	r1, [sp, #8]
 801c29a:	9903      	ldr	r1, [sp, #12]
 801c29c:	bf0a      	itet	eq
 801c29e:	3102      	addeq	r1, #2
 801c2a0:	3101      	addne	r1, #1
 801c2a2:	9103      	streq	r1, [sp, #12]
 801c2a4:	b2db      	uxtb	r3, r3
 801c2a6:	bf0a      	itet	eq
 801c2a8:	2100      	moveq	r1, #0
 801c2aa:	9103      	strne	r1, [sp, #12]
 801c2ac:	9102      	streq	r1, [sp, #8]
 801c2ae:	4313      	orrs	r3, r2
 801c2b0:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c2b2:	b29a      	uxth	r2, r3
 801c2b4:	4291      	cmp	r1, r2
 801c2b6:	d30a      	bcc.n	801c2ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c2b8:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c2bc:	2301      	movs	r3, #1
 801c2be:	9905      	ldr	r1, [sp, #20]
 801c2c0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c2c4:	d30f      	bcc.n	801c2e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c2c6:	2100      	movs	r1, #0
 801c2c8:	4698      	mov	r8, r3
 801c2ca:	9100      	str	r1, [sp, #0]
 801c2cc:	e032      	b.n	801c334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c2ce:	9b05      	ldr	r3, [sp, #20]
 801c2d0:	429a      	cmp	r2, r3
 801c2d2:	d318      	bcc.n	801c306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c2d4:	eb04 0308 	add.w	r3, r4, r8
 801c2d8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c2dc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c2e0:	f108 0301 	add.w	r3, r8, #1
 801c2e4:	b29b      	uxth	r3, r3
 801c2e6:	9905      	ldr	r1, [sp, #20]
 801c2e8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c2ec:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c2f0:	710e      	strb	r6, [r1, #4]
 801c2f2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c2f4:	80ce      	strh	r6, [r1, #6]
 801c2f6:	f108 0601 	add.w	r6, r8, #1
 801c2fa:	714e      	strb	r6, [r1, #5]
 801c2fc:	9905      	ldr	r1, [sp, #20]
 801c2fe:	3101      	adds	r1, #1
 801c300:	b289      	uxth	r1, r1
 801c302:	9105      	str	r1, [sp, #20]
 801c304:	e7df      	b.n	801c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c306:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c30a:	4611      	mov	r1, r2
 801c30c:	795b      	ldrb	r3, [r3, #5]
 801c30e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c312:	4426      	add	r6, r4
 801c314:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c316:	4437      	add	r7, r6
 801c318:	2f00      	cmp	r7, #0
 801c31a:	dd06      	ble.n	801c32a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c31c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c320:	790f      	ldrb	r7, [r1, #4]
 801c322:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c326:	88c9      	ldrh	r1, [r1, #6]
 801c328:	e7f4      	b.n	801c314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c32a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c32e:	b29b      	uxth	r3, r3
 801c330:	e7c5      	b.n	801c2be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c332:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c334:	920c      	str	r2, [sp, #48]	; 0x30
 801c336:	4601      	mov	r1, r0
 801c338:	9a00      	ldr	r2, [sp, #0]
 801c33a:	469c      	mov	ip, r3
 801c33c:	e78e      	b.n	801c25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c33e:	1957      	adds	r7, r2, r5
 801c340:	ebac 0305 	sub.w	r3, ip, r5
 801c344:	b2ba      	uxth	r2, r7
 801c346:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c34a:	9200      	str	r2, [sp, #0]
 801c34c:	b29b      	uxth	r3, r3
 801c34e:	2500      	movs	r5, #0
 801c350:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c352:	455a      	cmp	r2, fp
 801c354:	d88e      	bhi.n	801c274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c356:	4601      	mov	r1, r0
 801c358:	e749      	b.n	801c1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c35a:	458c      	cmp	ip, r1
 801c35c:	bf2c      	ite	cs
 801c35e:	4628      	movcs	r0, r5
 801c360:	462b      	movcc	r3, r5
 801c362:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c364:	bf27      	ittee	cs
 801c366:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c368:	ebac 0301 	subcs.w	r3, ip, r1
 801c36c:	eba1 000c 	subcc.w	r0, r1, ip
 801c370:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c374:	bf2c      	ite	cs
 801c376:	b29b      	uxthcs	r3, r3
 801c378:	b280      	uxthcc	r0, r0
 801c37a:	2dff      	cmp	r5, #255	; 0xff
 801c37c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c37e:	eb02 0705 	add.w	r7, r2, r5
 801c382:	b2bd      	uxth	r5, r7
 801c384:	9500      	str	r5, [sp, #0]
 801c386:	d12f      	bne.n	801c3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c388:	465e      	mov	r6, fp
 801c38a:	9d00      	ldr	r5, [sp, #0]
 801c38c:	42aa      	cmp	r2, r5
 801c38e:	f040 8084 	bne.w	801c49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c392:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c394:	458c      	cmp	ip, r1
 801c396:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c39a:	d3d8      	bcc.n	801c34e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c39c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c39e:	9904      	ldr	r1, [sp, #16]
 801c3a0:	8812      	ldrh	r2, [r2, #0]
 801c3a2:	1a52      	subs	r2, r2, r1
 801c3a4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c3a8:	9a08      	ldr	r2, [sp, #32]
 801c3aa:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c3ac:	3201      	adds	r2, #1
 801c3ae:	428a      	cmp	r2, r1
 801c3b0:	9208      	str	r2, [sp, #32]
 801c3b2:	f040 8092 	bne.w	801c4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c3b6:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c3ba:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c3be:	9b04      	ldr	r3, [sp, #16]
 801c3c0:	eba5 050c 	sub.w	r5, r5, ip
 801c3c4:	b2ad      	uxth	r5, r5
 801c3c6:	2d00      	cmp	r5, #0
 801c3c8:	bf08      	it	eq
 801c3ca:	4619      	moveq	r1, r3
 801c3cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3ce:	bf18      	it	ne
 801c3d0:	2100      	movne	r1, #0
 801c3d2:	3301      	adds	r3, #1
 801c3d4:	930d      	str	r3, [sp, #52]	; 0x34
 801c3d6:	b289      	uxth	r1, r1
 801c3d8:	e700      	b.n	801c1dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c3da:	bf00      	nop
 801c3dc:	20012da4 	.word	0x20012da4
 801c3e0:	20012d9e 	.word	0x20012d9e
 801c3e4:	fffff7fb 	.word	0xfffff7fb
 801c3e8:	46d9      	mov	r9, fp
 801c3ea:	9d00      	ldr	r5, [sp, #0]
 801c3ec:	42aa      	cmp	r2, r5
 801c3ee:	d0d0      	beq.n	801c392 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c3f0:	1c55      	adds	r5, r2, #1
 801c3f2:	4422      	add	r2, r4
 801c3f4:	9517      	str	r5, [sp, #92]	; 0x5c
 801c3f6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c3fa:	9a06      	ldr	r2, [sp, #24]
 801c3fc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c400:	4472      	add	r2, lr
 801c402:	9212      	str	r2, [sp, #72]	; 0x48
 801c404:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c406:	f8b9 2000 	ldrh.w	r2, [r9]
 801c40a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c40e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c410:	1216      	asrs	r6, r2, #8
 801c412:	fb1a fa07 	smulbb	sl, sl, r7
 801c416:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c41a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c41c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c420:	fb06 a607 	mla	r6, r6, r7, sl
 801c424:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c426:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c42a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c42c:	10d5      	asrs	r5, r2, #3
 801c42e:	fb1a fa07 	smulbb	sl, sl, r7
 801c432:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c436:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c438:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c43c:	fb05 a507 	mla	r5, r5, r7, sl
 801c440:	9f06      	ldr	r7, [sp, #24]
 801c442:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c446:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c448:	00d2      	lsls	r2, r2, #3
 801c44a:	fb1e fe07 	smulbb	lr, lr, r7
 801c44e:	b2d2      	uxtb	r2, r2
 801c450:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c452:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c456:	b2b6      	uxth	r6, r6
 801c458:	fb02 e207 	mla	r2, r2, r7, lr
 801c45c:	b292      	uxth	r2, r2
 801c45e:	b2ad      	uxth	r5, r5
 801c460:	f106 0a01 	add.w	sl, r6, #1
 801c464:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c468:	f102 0e01 	add.w	lr, r2, #1
 801c46c:	f105 0a01 	add.w	sl, r5, #1
 801c470:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c474:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c478:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c47c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c480:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c484:	ea4e 0606 	orr.w	r6, lr, r6
 801c488:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c48c:	ea46 060a 	orr.w	r6, r6, sl
 801c490:	f829 6b02 	strh.w	r6, [r9], #2
 801c494:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c498:	e7a7      	b.n	801c3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c49a:	f102 0e01 	add.w	lr, r2, #1
 801c49e:	4422      	add	r2, r4
 801c4a0:	9f06      	ldr	r7, [sp, #24]
 801c4a2:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c4a6:	9a06      	ldr	r2, [sp, #24]
 801c4a8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c4ac:	eb02 0a05 	add.w	sl, r2, r5
 801c4b0:	4a13      	ldr	r2, [pc, #76]	; (801c500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c4b2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c4b6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c4ba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c4be:	00d2      	lsls	r2, r2, #3
 801c4c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4c4:	ea49 0202 	orr.w	r2, r9, r2
 801c4c8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c4cc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c4d0:	f826 2b02 	strh.w	r2, [r6], #2
 801c4d4:	fa1f f28e 	uxth.w	r2, lr
 801c4d8:	e757      	b.n	801c38a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c4da:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c4de:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c4e2:	1a2d      	subs	r5, r5, r0
 801c4e4:	b2ad      	uxth	r5, r5
 801c4e6:	2d00      	cmp	r5, #0
 801c4e8:	bf18      	it	ne
 801c4ea:	2000      	movne	r0, #0
 801c4ec:	e730      	b.n	801c350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c4ee:	4b05      	ldr	r3, [pc, #20]	; (801c504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c4f0:	6818      	ldr	r0, [r3, #0]
 801c4f2:	6803      	ldr	r3, [r0, #0]
 801c4f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c4f6:	4798      	blx	r3
 801c4f8:	b01f      	add	sp, #124	; 0x7c
 801c4fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4fe:	bf00      	nop
 801c500:	fffff800 	.word	0xfffff800
 801c504:	20012da4 	.word	0x20012da4

0801c508 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c50c:	b091      	sub	sp, #68	; 0x44
 801c50e:	469b      	mov	fp, r3
 801c510:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c514:	4616      	mov	r6, r2
 801c516:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c51a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c51e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c522:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c526:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c52a:	4604      	mov	r4, r0
 801c52c:	460d      	mov	r5, r1
 801c52e:	4640      	mov	r0, r8
 801c530:	4659      	mov	r1, fp
 801c532:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c536:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c53a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c53e:	f7f3 fa1d 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 801c542:	4631      	mov	r1, r6
 801c544:	4640      	mov	r0, r8
 801c546:	f7f3 fa19 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 801c54a:	4b74      	ldr	r3, [pc, #464]	; (801c71c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c54c:	8818      	ldrh	r0, [r3, #0]
 801c54e:	4b74      	ldr	r3, [pc, #464]	; (801c720 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c550:	8819      	ldrh	r1, [r3, #0]
 801c552:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c556:	2b00      	cmp	r3, #0
 801c558:	b202      	sxth	r2, r0
 801c55a:	b20e      	sxth	r6, r1
 801c55c:	da07      	bge.n	801c56e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c55e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c562:	4463      	add	r3, ip
 801c564:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c568:	2300      	movs	r3, #0
 801c56a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c56e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c572:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c576:	1ad2      	subs	r2, r2, r3
 801c578:	4594      	cmp	ip, r2
 801c57a:	bfc4      	itt	gt
 801c57c:	1ac2      	subgt	r2, r0, r3
 801c57e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c582:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c586:	2a00      	cmp	r2, #0
 801c588:	da07      	bge.n	801c59a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c58a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c58e:	4462      	add	r2, ip
 801c590:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c594:	2200      	movs	r2, #0
 801c596:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c59a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c59e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c5a2:	eba6 060a 	sub.w	r6, r6, sl
 801c5a6:	42b2      	cmp	r2, r6
 801c5a8:	bfc4      	itt	gt
 801c5aa:	eba1 020a 	subgt.w	r2, r1, sl
 801c5ae:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c5b2:	4a5c      	ldr	r2, [pc, #368]	; (801c724 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c5b4:	7812      	ldrb	r2, [r2, #0]
 801c5b6:	b9a2      	cbnz	r2, 801c5e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c5b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c5bc:	4286      	cmp	r6, r0
 801c5be:	4640      	mov	r0, r8
 801c5c0:	9303      	str	r3, [sp, #12]
 801c5c2:	bf14      	ite	ne
 801c5c4:	2600      	movne	r6, #0
 801c5c6:	2601      	moveq	r6, #1
 801c5c8:	f7f3 fa1b 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c5cc:	9b03      	ldr	r3, [sp, #12]
 801c5ce:	b160      	cbz	r0, 801c5ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c5d0:	2300      	movs	r3, #0
 801c5d2:	8023      	strh	r3, [r4, #0]
 801c5d4:	8063      	strh	r3, [r4, #2]
 801c5d6:	80a3      	strh	r3, [r4, #4]
 801c5d8:	4620      	mov	r0, r4
 801c5da:	80e3      	strh	r3, [r4, #6]
 801c5dc:	b011      	add	sp, #68	; 0x44
 801c5de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5e2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c5e6:	428e      	cmp	r6, r1
 801c5e8:	e7e9      	b.n	801c5be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c5ea:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c5ee:	9205      	str	r2, [sp, #20]
 801c5f0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c5f4:	9206      	str	r2, [sp, #24]
 801c5f6:	f8bb 2000 	ldrh.w	r2, [fp]
 801c5fa:	900e      	str	r0, [sp, #56]	; 0x38
 801c5fc:	1a9b      	subs	r3, r3, r2
 801c5fe:	b21b      	sxth	r3, r3
 801c600:	9303      	str	r3, [sp, #12]
 801c602:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c606:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c60a:	ebaa 0a03 	sub.w	sl, sl, r3
 801c60e:	fa0f f38a 	sxth.w	r3, sl
 801c612:	9304      	str	r3, [sp, #16]
 801c614:	9b03      	ldr	r3, [sp, #12]
 801c616:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c61a:	9b04      	ldr	r3, [sp, #16]
 801c61c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c620:	9b05      	ldr	r3, [sp, #20]
 801c622:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c626:	a90e      	add	r1, sp, #56	; 0x38
 801c628:	9b06      	ldr	r3, [sp, #24]
 801c62a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c62e:	a80c      	add	r0, sp, #48	; 0x30
 801c630:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c634:	f7f8 f944 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c638:	4640      	mov	r0, r8
 801c63a:	f7f8 f8fd 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c63e:	a80e      	add	r0, sp, #56	; 0x38
 801c640:	f7f8 f8fa 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c644:	4b38      	ldr	r3, [pc, #224]	; (801c728 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c646:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c64a:	881b      	ldrh	r3, [r3, #0]
 801c64c:	9307      	str	r3, [sp, #28]
 801c64e:	682b      	ldr	r3, [r5, #0]
 801c650:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c72c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c656:	4628      	mov	r0, r5
 801c658:	4798      	blx	r3
 801c65a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c65e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c662:	4681      	mov	r9, r0
 801c664:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c668:	f8db 0000 	ldr.w	r0, [fp]
 801c66c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c66e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c672:	6803      	ldr	r3, [r0, #0]
 801c674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c676:	4798      	blx	r3
 801c678:	4607      	mov	r7, r0
 801c67a:	f8db 0000 	ldr.w	r0, [fp]
 801c67e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c682:	6803      	ldr	r3, [r0, #0]
 801c684:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c688:	9109      	str	r1, [sp, #36]	; 0x24
 801c68a:	9208      	str	r2, [sp, #32]
 801c68c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c68e:	4798      	blx	r3
 801c690:	f010 0f01 	tst.w	r0, #1
 801c694:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c698:	d012      	beq.n	801c6c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c69a:	f8db 0000 	ldr.w	r0, [fp]
 801c69e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c6a2:	6803      	ldr	r3, [r0, #0]
 801c6a4:	9200      	str	r2, [sp, #0]
 801c6a6:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c6a8:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c6ac:	462b      	mov	r3, r5
 801c6ae:	47b0      	blx	r6
 801c6b0:	9b03      	ldr	r3, [sp, #12]
 801c6b2:	8023      	strh	r3, [r4, #0]
 801c6b4:	9b04      	ldr	r3, [sp, #16]
 801c6b6:	8063      	strh	r3, [r4, #2]
 801c6b8:	9b05      	ldr	r3, [sp, #20]
 801c6ba:	80a3      	strh	r3, [r4, #4]
 801c6bc:	9b06      	ldr	r3, [sp, #24]
 801c6be:	e78b      	b.n	801c5d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c6c0:	fb09 f202 	mul.w	r2, r9, r2
 801c6c4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c6c8:	440f      	add	r7, r1
 801c6ca:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c6ce:	b166      	cbz	r6, 801c6ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c6d0:	9a07      	ldr	r2, [sp, #28]
 801c6d2:	4592      	cmp	sl, r2
 801c6d4:	d109      	bne.n	801c6ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c6d6:	f8db 0000 	ldr.w	r0, [fp]
 801c6da:	6802      	ldr	r2, [r0, #0]
 801c6dc:	fb09 f303 	mul.w	r3, r9, r3
 801c6e0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c6e2:	4629      	mov	r1, r5
 801c6e4:	463a      	mov	r2, r7
 801c6e6:	47b0      	blx	r6
 801c6e8:	e7e2      	b.n	801c6b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c6ea:	fb0a f303 	mul.w	r3, sl, r3
 801c6ee:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c72c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c6f2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c6f6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c6fa:	4545      	cmp	r5, r8
 801c6fc:	d2d8      	bcs.n	801c6b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c6fe:	f8db 0000 	ldr.w	r0, [fp]
 801c702:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c706:	6802      	ldr	r2, [r0, #0]
 801c708:	4629      	mov	r1, r5
 801c70a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c70e:	005b      	lsls	r3, r3, #1
 801c710:	463a      	mov	r2, r7
 801c712:	47d0      	blx	sl
 801c714:	444f      	add	r7, r9
 801c716:	4435      	add	r5, r6
 801c718:	e7ef      	b.n	801c6fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c71a:	bf00      	nop
 801c71c:	20012d98 	.word	0x20012d98
 801c720:	20012d9a 	.word	0x20012d9a
 801c724:	20012d9c 	.word	0x20012d9c
 801c728:	20012d9e 	.word	0x20012d9e
 801c72c:	20012da4 	.word	0x20012da4

0801c730 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c730:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c732:	4606      	mov	r6, r0
 801c734:	b087      	sub	sp, #28
 801c736:	460c      	mov	r4, r1
 801c738:	4617      	mov	r7, r2
 801c73a:	461d      	mov	r5, r3
 801c73c:	b333      	cbz	r3, 801c78c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c73e:	4608      	mov	r0, r1
 801c740:	f7f3 f95f 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c744:	bb10      	cbnz	r0, 801c78c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c746:	6820      	ldr	r0, [r4, #0]
 801c748:	6861      	ldr	r1, [r4, #4]
 801c74a:	4c1c      	ldr	r4, [pc, #112]	; (801c7bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c74c:	ab04      	add	r3, sp, #16
 801c74e:	c303      	stmia	r3!, {r0, r1}
 801c750:	a804      	add	r0, sp, #16
 801c752:	f7f8 f871 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c756:	6820      	ldr	r0, [r4, #0]
 801c758:	6803      	ldr	r3, [r0, #0]
 801c75a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c75c:	4798      	blx	r3
 801c75e:	2dff      	cmp	r5, #255	; 0xff
 801c760:	d016      	beq.n	801c790 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c762:	f010 0f08 	tst.w	r0, #8
 801c766:	6820      	ldr	r0, [r4, #0]
 801c768:	d015      	beq.n	801c796 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c76a:	2400      	movs	r4, #0
 801c76c:	6801      	ldr	r1, [r0, #0]
 801c76e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c772:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c776:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c77a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c77e:	9401      	str	r4, [sp, #4]
 801c780:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c784:	9400      	str	r4, [sp, #0]
 801c786:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c788:	4639      	mov	r1, r7
 801c78a:	47a0      	blx	r4
 801c78c:	b007      	add	sp, #28
 801c78e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c790:	f010 0f02 	tst.w	r0, #2
 801c794:	e7e7      	b.n	801c766 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c796:	6803      	ldr	r3, [r0, #0]
 801c798:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c79a:	4798      	blx	r3
 801c79c:	4b08      	ldr	r3, [pc, #32]	; (801c7c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c79e:	881a      	ldrh	r2, [r3, #0]
 801c7a0:	6833      	ldr	r3, [r6, #0]
 801c7a2:	e9cd 7500 	strd	r7, r5, [sp]
 801c7a6:	4601      	mov	r1, r0
 801c7a8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c7aa:	4630      	mov	r0, r6
 801c7ac:	ab04      	add	r3, sp, #16
 801c7ae:	47a8      	blx	r5
 801c7b0:	6820      	ldr	r0, [r4, #0]
 801c7b2:	6803      	ldr	r3, [r0, #0]
 801c7b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7b6:	4798      	blx	r3
 801c7b8:	e7e8      	b.n	801c78c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c7ba:	bf00      	nop
 801c7bc:	20012da4 	.word	0x20012da4
 801c7c0:	20012d9e 	.word	0x20012d9e

0801c7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c7c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c7c8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c7cc:	9e08      	ldr	r6, [sp, #32]
 801c7ce:	4688      	mov	r8, r1
 801c7d0:	4614      	mov	r4, r2
 801c7d2:	461d      	mov	r5, r3
 801c7d4:	2f00      	cmp	r7, #0
 801c7d6:	f000 80a9 	beq.w	801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7da:	4618      	mov	r0, r3
 801c7dc:	f7f3 f911 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c7e0:	2800      	cmp	r0, #0
 801c7e2:	f040 80a3 	bne.w	801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7e6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c7ea:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c7ee:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c7f2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c7f6:	fb04 1303 	mla	r3, r4, r3, r1
 801c7fa:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c7fe:	4365      	muls	r5, r4
 801c800:	2fff      	cmp	r7, #255	; 0xff
 801c802:	eba4 0200 	sub.w	r2, r4, r0
 801c806:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c80a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c80e:	d04a      	beq.n	801c8a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c810:	b2bc      	uxth	r4, r7
 801c812:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c816:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c81a:	fa5f f788 	uxtb.w	r7, r8
 801c81e:	b2f3      	uxtb	r3, r6
 801c820:	0040      	lsls	r0, r0, #1
 801c822:	fb0e fe04 	mul.w	lr, lr, r4
 801c826:	4367      	muls	r7, r4
 801c828:	4363      	muls	r3, r4
 801c82a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c82e:	fa1f fc8c 	uxth.w	ip, ip
 801c832:	42a9      	cmp	r1, r5
 801c834:	d27a      	bcs.n	801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c836:	eb01 0900 	add.w	r9, r1, r0
 801c83a:	4549      	cmp	r1, r9
 801c83c:	d231      	bcs.n	801c8a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c83e:	880a      	ldrh	r2, [r1, #0]
 801c840:	1214      	asrs	r4, r2, #8
 801c842:	10d6      	asrs	r6, r2, #3
 801c844:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c848:	00d2      	lsls	r2, r2, #3
 801c84a:	b2d2      	uxtb	r2, r2
 801c84c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c850:	fb14 f40c 	smulbb	r4, r4, ip
 801c854:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c858:	4474      	add	r4, lr
 801c85a:	fb12 f20c 	smulbb	r2, r2, ip
 801c85e:	b2a4      	uxth	r4, r4
 801c860:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c864:	441a      	add	r2, r3
 801c866:	b292      	uxth	r2, r2
 801c868:	f104 0a01 	add.w	sl, r4, #1
 801c86c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c870:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c874:	fb16 f60c 	smulbb	r6, r6, ip
 801c878:	f102 0a01 	add.w	sl, r2, #1
 801c87c:	443e      	add	r6, r7
 801c87e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c882:	b2b6      	uxth	r6, r6
 801c884:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c888:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c88c:	4322      	orrs	r2, r4
 801c88e:	1c74      	adds	r4, r6, #1
 801c890:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c894:	0976      	lsrs	r6, r6, #5
 801c896:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c89a:	4332      	orrs	r2, r6
 801c89c:	f821 2b02 	strh.w	r2, [r1], #2
 801c8a0:	e7cb      	b.n	801c83a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c8a2:	4441      	add	r1, r8
 801c8a4:	e7c5      	b.n	801c832 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c8a6:	4f22      	ldr	r7, [pc, #136]	; (801c930 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c8a8:	0973      	lsrs	r3, r6, #5
 801c8aa:	ea08 0707 	and.w	r7, r8, r7
 801c8ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8b2:	433b      	orrs	r3, r7
 801c8b4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c8b8:	4333      	orrs	r3, r6
 801c8ba:	07e7      	lsls	r7, r4, #31
 801c8bc:	b29b      	uxth	r3, r3
 801c8be:	d50b      	bpl.n	801c8d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c8c0:	0040      	lsls	r0, r0, #1
 801c8c2:	0052      	lsls	r2, r2, #1
 801c8c4:	42a9      	cmp	r1, r5
 801c8c6:	d231      	bcs.n	801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8c8:	180c      	adds	r4, r1, r0
 801c8ca:	42a1      	cmp	r1, r4
 801c8cc:	d202      	bcs.n	801c8d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c8ce:	f821 3b02 	strh.w	r3, [r1], #2
 801c8d2:	e7fa      	b.n	801c8ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c8d4:	4411      	add	r1, r2
 801c8d6:	e7f5      	b.n	801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c8d8:	078e      	lsls	r6, r1, #30
 801c8da:	d008      	beq.n	801c8ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c8dc:	0066      	lsls	r6, r4, #1
 801c8de:	460a      	mov	r2, r1
 801c8e0:	42aa      	cmp	r2, r5
 801c8e2:	d202      	bcs.n	801c8ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c8e4:	8013      	strh	r3, [r2, #0]
 801c8e6:	4432      	add	r2, r6
 801c8e8:	e7fa      	b.n	801c8e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c8ea:	3102      	adds	r1, #2
 801c8ec:	3801      	subs	r0, #1
 801c8ee:	07c2      	lsls	r2, r0, #31
 801c8f0:	d50b      	bpl.n	801c90a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c8f2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c8f6:	3a01      	subs	r2, #1
 801c8f8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c8fc:	0066      	lsls	r6, r4, #1
 801c8fe:	42aa      	cmp	r2, r5
 801c900:	d202      	bcs.n	801c908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c902:	8013      	strh	r3, [r2, #0]
 801c904:	4432      	add	r2, r6
 801c906:	e7fa      	b.n	801c8fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c908:	3801      	subs	r0, #1
 801c90a:	b178      	cbz	r0, 801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c90c:	1040      	asrs	r0, r0, #1
 801c90e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c912:	0080      	lsls	r0, r0, #2
 801c914:	0064      	lsls	r4, r4, #1
 801c916:	42a9      	cmp	r1, r5
 801c918:	d208      	bcs.n	801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c91a:	180e      	adds	r6, r1, r0
 801c91c:	460a      	mov	r2, r1
 801c91e:	42b2      	cmp	r2, r6
 801c920:	d202      	bcs.n	801c928 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c922:	f842 3b04 	str.w	r3, [r2], #4
 801c926:	e7fa      	b.n	801c91e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c928:	4421      	add	r1, r4
 801c92a:	e7f4      	b.n	801c916 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c92c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c930:	00fff800 	.word	0x00fff800

0801c934 <_ZN8touchgfx8LCD16bppC1Ev>:
 801c934:	2200      	movs	r2, #0
 801c936:	4912      	ldr	r1, [pc, #72]	; (801c980 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c938:	6042      	str	r2, [r0, #4]
 801c93a:	6001      	str	r1, [r0, #0]
 801c93c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c940:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c944:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c948:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c94c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c950:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c954:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c958:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c95c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c960:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c964:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c968:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c96c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c970:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c974:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c978:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c97c:	4770      	bx	lr
 801c97e:	bf00      	nop
 801c980:	0802e498 	.word	0x0802e498

0801c984 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c988:	460d      	mov	r5, r1
 801c98a:	b08d      	sub	sp, #52	; 0x34
 801c98c:	4604      	mov	r4, r0
 801c98e:	6808      	ldr	r0, [r1, #0]
 801c990:	6849      	ldr	r1, [r1, #4]
 801c992:	4699      	mov	r9, r3
 801c994:	ab08      	add	r3, sp, #32
 801c996:	c303      	stmia	r3!, {r0, r1}
 801c998:	6810      	ldr	r0, [r2, #0]
 801c99a:	6851      	ldr	r1, [r2, #4]
 801c99c:	ab0a      	add	r3, sp, #40	; 0x28
 801c99e:	c303      	stmia	r3!, {r0, r1}
 801c9a0:	a808      	add	r0, sp, #32
 801c9a2:	f7f7 ff49 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9a6:	4629      	mov	r1, r5
 801c9a8:	a80a      	add	r0, sp, #40	; 0x28
 801c9aa:	f7f7 ff89 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9ae:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c9b2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c9b6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c9ba:	4d63      	ldr	r5, [pc, #396]	; (801cb48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c9bc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c9c0:	6828      	ldr	r0, [r5, #0]
 801c9c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c9c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c9ca:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c9ce:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c9d2:	440a      	add	r2, r1
 801c9d4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c9d8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c9dc:	4413      	add	r3, r2
 801c9de:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c9e2:	6803      	ldr	r3, [r0, #0]
 801c9e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c9e6:	4798      	blx	r3
 801c9e8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c9ec:	d119      	bne.n	801ca22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c9ee:	f010 0f20 	tst.w	r0, #32
 801c9f2:	6828      	ldr	r0, [r5, #0]
 801c9f4:	d018      	beq.n	801ca28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c9f6:	2500      	movs	r5, #0
 801c9f8:	6801      	ldr	r1, [r0, #0]
 801c9fa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c9fe:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ca02:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ca06:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801ca0a:	9502      	str	r5, [sp, #8]
 801ca0c:	b2b6      	uxth	r6, r6
 801ca0e:	fa1f f588 	uxth.w	r5, r8
 801ca12:	9601      	str	r6, [sp, #4]
 801ca14:	9500      	str	r5, [sp, #0]
 801ca16:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801ca18:	4621      	mov	r1, r4
 801ca1a:	47a8      	blx	r5
 801ca1c:	b00d      	add	sp, #52	; 0x34
 801ca1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca22:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ca26:	e7e4      	b.n	801c9f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ca28:	6803      	ldr	r3, [r0, #0]
 801ca2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca2c:	4798      	blx	r3
 801ca2e:	4947      	ldr	r1, [pc, #284]	; (801cb4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ca30:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ca34:	880b      	ldrh	r3, [r1, #0]
 801ca36:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ca3a:	fb03 5202 	mla	r2, r3, r2, r5
 801ca3e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca42:	4373      	muls	r3, r6
 801ca44:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ca48:	9307      	str	r3, [sp, #28]
 801ca4a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ca4e:	9306      	str	r3, [sp, #24]
 801ca50:	468a      	mov	sl, r1
 801ca52:	9b07      	ldr	r3, [sp, #28]
 801ca54:	4298      	cmp	r0, r3
 801ca56:	d270      	bcs.n	801cb3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ca58:	9b06      	ldr	r3, [sp, #24]
 801ca5a:	4621      	mov	r1, r4
 801ca5c:	eb00 0b03 	add.w	fp, r0, r3
 801ca60:	4558      	cmp	r0, fp
 801ca62:	d25d      	bcs.n	801cb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ca64:	f851 4b04 	ldr.w	r4, [r1], #4
 801ca68:	0e23      	lsrs	r3, r4, #24
 801ca6a:	d014      	beq.n	801ca96 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ca6c:	2bff      	cmp	r3, #255	; 0xff
 801ca6e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ca72:	d112      	bne.n	801ca9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca78:	d10f      	bne.n	801ca9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca7a:	0963      	lsrs	r3, r4, #5
 801ca7c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ca80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca84:	f02c 0c07 	bic.w	ip, ip, #7
 801ca88:	ea43 0c0c 	orr.w	ip, r3, ip
 801ca8c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ca90:	ea4c 0404 	orr.w	r4, ip, r4
 801ca94:	8004      	strh	r4, [r0, #0]
 801ca96:	3002      	adds	r0, #2
 801ca98:	e7e2      	b.n	801ca60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ca9a:	fb09 f303 	mul.w	r3, r9, r3
 801ca9e:	8807      	ldrh	r7, [r0, #0]
 801caa0:	1c5a      	adds	r2, r3, #1
 801caa2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801caa6:	1212      	asrs	r2, r2, #8
 801caa8:	123e      	asrs	r6, r7, #8
 801caaa:	b293      	uxth	r3, r2
 801caac:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cab0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cab4:	43d2      	mvns	r2, r2
 801cab6:	b2d2      	uxtb	r2, r2
 801cab8:	10fd      	asrs	r5, r7, #3
 801caba:	fb1e fe03 	smulbb	lr, lr, r3
 801cabe:	00ff      	lsls	r7, r7, #3
 801cac0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cac4:	fb06 e602 	mla	r6, r6, r2, lr
 801cac8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cacc:	b2ff      	uxtb	r7, r7
 801cace:	fa5f fc8c 	uxtb.w	ip, ip
 801cad2:	b2e4      	uxtb	r4, r4
 801cad4:	b2b6      	uxth	r6, r6
 801cad6:	fb1c fc03 	smulbb	ip, ip, r3
 801cada:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cade:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cae2:	fb14 f403 	smulbb	r4, r4, r3
 801cae6:	fb05 c502 	mla	r5, r5, r2, ip
 801caea:	f106 0e01 	add.w	lr, r6, #1
 801caee:	fb07 4702 	mla	r7, r7, r2, r4
 801caf2:	b2ad      	uxth	r5, r5
 801caf4:	b2bf      	uxth	r7, r7
 801caf6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cafa:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801cafe:	f105 0c01 	add.w	ip, r5, #1
 801cb02:	1c7e      	adds	r6, r7, #1
 801cb04:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cb08:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cb0c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cb10:	096d      	lsrs	r5, r5, #5
 801cb12:	ea46 060e 	orr.w	r6, r6, lr
 801cb16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb1a:	432e      	orrs	r6, r5
 801cb1c:	8006      	strh	r6, [r0, #0]
 801cb1e:	e7ba      	b.n	801ca96 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cb20:	f8ba 3000 	ldrh.w	r3, [sl]
 801cb24:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cb28:	eba3 0308 	sub.w	r3, r3, r8
 801cb2c:	eba4 0408 	sub.w	r4, r4, r8
 801cb30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cb34:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cb38:	e78b      	b.n	801ca52 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cb3a:	4b03      	ldr	r3, [pc, #12]	; (801cb48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cb3c:	6818      	ldr	r0, [r3, #0]
 801cb3e:	6803      	ldr	r3, [r0, #0]
 801cb40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb42:	4798      	blx	r3
 801cb44:	e76a      	b.n	801ca1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cb46:	bf00      	nop
 801cb48:	20012da4 	.word	0x20012da4
 801cb4c:	20012d9e 	.word	0x20012d9e

0801cb50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cb50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cb54:	460c      	mov	r4, r1
 801cb56:	b085      	sub	sp, #20
 801cb58:	6810      	ldr	r0, [r2, #0]
 801cb5a:	6851      	ldr	r1, [r2, #4]
 801cb5c:	466d      	mov	r5, sp
 801cb5e:	c503      	stmia	r5!, {r0, r1}
 801cb60:	6818      	ldr	r0, [r3, #0]
 801cb62:	6859      	ldr	r1, [r3, #4]
 801cb64:	4616      	mov	r6, r2
 801cb66:	c503      	stmia	r5!, {r0, r1}
 801cb68:	4668      	mov	r0, sp
 801cb6a:	f7f7 fe65 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb6e:	4631      	mov	r1, r6
 801cb70:	a802      	add	r0, sp, #8
 801cb72:	f7f7 fea5 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb76:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cb7a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cb7e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cb82:	4d28      	ldr	r5, [pc, #160]	; (801cc24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cb84:	4e28      	ldr	r6, [pc, #160]	; (801cc28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cb86:	6828      	ldr	r0, [r5, #0]
 801cb88:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cb8c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cb90:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb94:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cb98:	f8bd 1000 	ldrh.w	r1, [sp]
 801cb9c:	440a      	add	r2, r1
 801cb9e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cba2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cba6:	4413      	add	r3, r2
 801cba8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cbac:	6803      	ldr	r3, [r0, #0]
 801cbae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cbb0:	4798      	blx	r3
 801cbb2:	8833      	ldrh	r3, [r6, #0]
 801cbb4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cbb8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cbbc:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cc2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cbc0:	fb03 1202 	mla	r2, r3, r2, r1
 801cbc4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbc8:	fb08 f303 	mul.w	r3, r8, r3
 801cbcc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cbd0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cbd4:	4298      	cmp	r0, r3
 801cbd6:	d21d      	bcs.n	801cc14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cbd8:	eb00 080c 	add.w	r8, r0, ip
 801cbdc:	4540      	cmp	r0, r8
 801cbde:	d20f      	bcs.n	801cc00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cbe0:	f854 1b04 	ldr.w	r1, [r4], #4
 801cbe4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cbe8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cbec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cbf0:	ea42 0209 	orr.w	r2, r2, r9
 801cbf4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cbf8:	430a      	orrs	r2, r1
 801cbfa:	f820 2b02 	strh.w	r2, [r0], #2
 801cbfe:	e7ed      	b.n	801cbdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cc00:	8832      	ldrh	r2, [r6, #0]
 801cc02:	1bd2      	subs	r2, r2, r7
 801cc04:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc08:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cc0c:	1bd2      	subs	r2, r2, r7
 801cc0e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cc12:	e7df      	b.n	801cbd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cc14:	6828      	ldr	r0, [r5, #0]
 801cc16:	6803      	ldr	r3, [r0, #0]
 801cc18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc1a:	4798      	blx	r3
 801cc1c:	b005      	add	sp, #20
 801cc1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cc22:	bf00      	nop
 801cc24:	20012da4 	.word	0x20012da4
 801cc28:	20012d9e 	.word	0x20012d9e
 801cc2c:	fffff800 	.word	0xfffff800

0801cc30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cc30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cc34:	460e      	mov	r6, r1
 801cc36:	b08e      	sub	sp, #56	; 0x38
 801cc38:	4604      	mov	r4, r0
 801cc3a:	6808      	ldr	r0, [r1, #0]
 801cc3c:	6849      	ldr	r1, [r1, #4]
 801cc3e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801ce18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cc42:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801ce1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cc46:	461d      	mov	r5, r3
 801cc48:	ab0a      	add	r3, sp, #40	; 0x28
 801cc4a:	c303      	stmia	r3!, {r0, r1}
 801cc4c:	6810      	ldr	r0, [r2, #0]
 801cc4e:	6851      	ldr	r1, [r2, #4]
 801cc50:	ab0c      	add	r3, sp, #48	; 0x30
 801cc52:	c303      	stmia	r3!, {r0, r1}
 801cc54:	a80a      	add	r0, sp, #40	; 0x28
 801cc56:	f7f7 fdef 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc5a:	4631      	mov	r1, r6
 801cc5c:	a80c      	add	r0, sp, #48	; 0x30
 801cc5e:	f7f7 fe2f 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc62:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cc66:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cc6a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cc6e:	f8d8 0000 	ldr.w	r0, [r8]
 801cc72:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cc76:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cc7a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cc7e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cc82:	440c      	add	r4, r1
 801cc84:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cc88:	440a      	add	r2, r1
 801cc8a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cc8e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cc92:	4413      	add	r3, r2
 801cc94:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cc98:	6803      	ldr	r3, [r0, #0]
 801cc9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc9c:	4798      	blx	r3
 801cc9e:	2dff      	cmp	r5, #255	; 0xff
 801cca0:	d124      	bne.n	801ccec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cca2:	f010 0f01 	tst.w	r0, #1
 801cca6:	f8d8 0000 	ldr.w	r0, [r8]
 801ccaa:	d022      	beq.n	801ccf2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ccac:	2100      	movs	r1, #0
 801ccae:	f8d0 c000 	ldr.w	ip, [r0]
 801ccb2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801ccb6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801ccba:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ccbe:	f04f 0e01 	mov.w	lr, #1
 801ccc2:	f8cd e018 	str.w	lr, [sp, #24]
 801ccc6:	f8b9 e000 	ldrh.w	lr, [r9]
 801ccca:	9503      	str	r5, [sp, #12]
 801cccc:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ccd0:	b2b6      	uxth	r6, r6
 801ccd2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ccd6:	9102      	str	r1, [sp, #8]
 801ccd8:	b2bf      	uxth	r7, r7
 801ccda:	9601      	str	r6, [sp, #4]
 801ccdc:	9700      	str	r7, [sp, #0]
 801ccde:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cce2:	4621      	mov	r1, r4
 801cce4:	47a8      	blx	r5
 801cce6:	b00e      	add	sp, #56	; 0x38
 801cce8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ccec:	f010 0f04 	tst.w	r0, #4
 801ccf0:	e7d9      	b.n	801cca6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ccf2:	6803      	ldr	r3, [r0, #0]
 801ccf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ccf6:	4798      	blx	r3
 801ccf8:	f8b9 3000 	ldrh.w	r3, [r9]
 801ccfc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cd00:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cd04:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cd08:	fb03 1202 	mla	r2, r3, r2, r1
 801cd0c:	ebac 0c07 	sub.w	ip, ip, r7
 801cd10:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd14:	435e      	muls	r6, r3
 801cd16:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cd1a:	2dff      	cmp	r5, #255	; 0xff
 801cd1c:	eba3 0707 	sub.w	r7, r3, r7
 801cd20:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cd24:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cd28:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cd2c:	d049      	beq.n	801cdc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cd2e:	43eb      	mvns	r3, r5
 801cd30:	fa1f f985 	uxth.w	r9, r5
 801cd34:	b2db      	uxtb	r3, r3
 801cd36:	42b0      	cmp	r0, r6
 801cd38:	d266      	bcs.n	801ce08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cd3a:	eb00 0a0e 	add.w	sl, r0, lr
 801cd3e:	4550      	cmp	r0, sl
 801cd40:	4621      	mov	r1, r4
 801cd42:	f104 0403 	add.w	r4, r4, #3
 801cd46:	d25b      	bcs.n	801ce00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cd48:	8802      	ldrh	r2, [r0, #0]
 801cd4a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cd4e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cd52:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cd56:	fb11 f109 	smulbb	r1, r1, r9
 801cd5a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cd5e:	10d5      	asrs	r5, r2, #3
 801cd60:	fb08 1803 	mla	r8, r8, r3, r1
 801cd64:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cd68:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cd6c:	fb11 f109 	smulbb	r1, r1, r9
 801cd70:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cd74:	fb05 1503 	mla	r5, r5, r3, r1
 801cd78:	00d2      	lsls	r2, r2, #3
 801cd7a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cd7e:	b2d2      	uxtb	r2, r2
 801cd80:	fb11 f109 	smulbb	r1, r1, r9
 801cd84:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cd88:	fa1f f888 	uxth.w	r8, r8
 801cd8c:	fb02 1203 	mla	r2, r2, r3, r1
 801cd90:	b292      	uxth	r2, r2
 801cd92:	f108 0101 	add.w	r1, r8, #1
 801cd96:	b2ad      	uxth	r5, r5
 801cd98:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cd9c:	1c51      	adds	r1, r2, #1
 801cd9e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cda2:	1c69      	adds	r1, r5, #1
 801cda4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cda8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cdac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cdb0:	096d      	lsrs	r5, r5, #5
 801cdb2:	ea42 0208 	orr.w	r2, r2, r8
 801cdb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdba:	432a      	orrs	r2, r5
 801cdbc:	f820 2b02 	strh.w	r2, [r0], #2
 801cdc0:	e7bd      	b.n	801cd3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801cdc2:	4a14      	ldr	r2, [pc, #80]	; (801ce14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cdc4:	42b0      	cmp	r0, r6
 801cdc6:	d21f      	bcs.n	801ce08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cdc8:	eb00 050e 	add.w	r5, r0, lr
 801cdcc:	42a8      	cmp	r0, r5
 801cdce:	4621      	mov	r1, r4
 801cdd0:	f104 0403 	add.w	r4, r4, #3
 801cdd4:	d210      	bcs.n	801cdf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cdd6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cdda:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cdde:	00db      	lsls	r3, r3, #3
 801cde0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cde4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cde8:	430b      	orrs	r3, r1
 801cdea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cdee:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cdf2:	f820 3b02 	strh.w	r3, [r0], #2
 801cdf6:	e7e9      	b.n	801cdcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cdf8:	4438      	add	r0, r7
 801cdfa:	eb01 040c 	add.w	r4, r1, ip
 801cdfe:	e7e1      	b.n	801cdc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ce00:	4438      	add	r0, r7
 801ce02:	eb01 040c 	add.w	r4, r1, ip
 801ce06:	e796      	b.n	801cd36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ce08:	4b03      	ldr	r3, [pc, #12]	; (801ce18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ce0a:	6818      	ldr	r0, [r3, #0]
 801ce0c:	6803      	ldr	r3, [r0, #0]
 801ce0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce10:	4798      	blx	r3
 801ce12:	e768      	b.n	801cce6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ce14:	fffff800 	.word	0xfffff800
 801ce18:	20012da4 	.word	0x20012da4
 801ce1c:	20012d9e 	.word	0x20012d9e

0801ce20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ce20:	b4f0      	push	{r4, r5, r6, r7}
 801ce22:	4616      	mov	r6, r2
 801ce24:	2e01      	cmp	r6, #1
 801ce26:	461c      	mov	r4, r3
 801ce28:	460d      	mov	r5, r1
 801ce2a:	9a04      	ldr	r2, [sp, #16]
 801ce2c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ce30:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ce34:	d012      	beq.n	801ce5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ce36:	d303      	bcc.n	801ce40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ce38:	2e02      	cmp	r6, #2
 801ce3a:	d00a      	beq.n	801ce52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ce3c:	bcf0      	pop	{r4, r5, r6, r7}
 801ce3e:	4770      	bx	lr
 801ce40:	6805      	ldr	r5, [r0, #0]
 801ce42:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ce46:	68ed      	ldr	r5, [r5, #12]
 801ce48:	4613      	mov	r3, r2
 801ce4a:	46ac      	mov	ip, r5
 801ce4c:	4622      	mov	r2, r4
 801ce4e:	bcf0      	pop	{r4, r5, r6, r7}
 801ce50:	4760      	bx	ip
 801ce52:	4621      	mov	r1, r4
 801ce54:	4628      	mov	r0, r5
 801ce56:	bcf0      	pop	{r4, r5, r6, r7}
 801ce58:	f7ff bd94 	b.w	801c984 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ce5c:	4621      	mov	r1, r4
 801ce5e:	4628      	mov	r0, r5
 801ce60:	bcf0      	pop	{r4, r5, r6, r7}
 801ce62:	f7ff bee5 	b.w	801cc30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ce68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ce68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce6c:	4681      	mov	r9, r0
 801ce6e:	b093      	sub	sp, #76	; 0x4c
 801ce70:	6810      	ldr	r0, [r2, #0]
 801ce72:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ce76:	4f6d      	ldr	r7, [pc, #436]	; (801d02c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ce78:	4688      	mov	r8, r1
 801ce7a:	6851      	ldr	r1, [r2, #4]
 801ce7c:	ac0e      	add	r4, sp, #56	; 0x38
 801ce7e:	c403      	stmia	r4!, {r0, r1}
 801ce80:	6818      	ldr	r0, [r3, #0]
 801ce82:	6859      	ldr	r1, [r3, #4]
 801ce84:	ac10      	add	r4, sp, #64	; 0x40
 801ce86:	4616      	mov	r6, r2
 801ce88:	c403      	stmia	r4!, {r0, r1}
 801ce8a:	a80e      	add	r0, sp, #56	; 0x38
 801ce8c:	f7f7 fcd4 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce90:	4631      	mov	r1, r6
 801ce92:	a810      	add	r0, sp, #64	; 0x40
 801ce94:	f7f7 fd14 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce98:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ce9c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801cea0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801cea4:	4e62      	ldr	r6, [pc, #392]	; (801d030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cea6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ceaa:	6830      	ldr	r0, [r6, #0]
 801ceac:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ceb0:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ceb4:	4489      	add	r9, r1
 801ceb6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ceba:	440a      	add	r2, r1
 801cebc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801cec0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cec4:	4413      	add	r3, r2
 801cec6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801ceca:	6803      	ldr	r3, [r0, #0]
 801cecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cece:	4798      	blx	r3
 801ced0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ced4:	6830      	ldr	r0, [r6, #0]
 801ced6:	d01d      	beq.n	801cf14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801ced8:	2200      	movs	r2, #0
 801ceda:	6801      	ldr	r1, [r0, #0]
 801cedc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801cee0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cee4:	220b      	movs	r2, #11
 801cee6:	9207      	str	r2, [sp, #28]
 801cee8:	883a      	ldrh	r2, [r7, #0]
 801ceea:	9206      	str	r2, [sp, #24]
 801ceec:	2201      	movs	r2, #1
 801ceee:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cef2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801cef6:	9203      	str	r2, [sp, #12]
 801cef8:	b2a4      	uxth	r4, r4
 801cefa:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801cefe:	9200      	str	r2, [sp, #0]
 801cf00:	b2ad      	uxth	r5, r5
 801cf02:	9502      	str	r5, [sp, #8]
 801cf04:	9401      	str	r4, [sp, #4]
 801cf06:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801cf08:	4642      	mov	r2, r8
 801cf0a:	4649      	mov	r1, r9
 801cf0c:	47a0      	blx	r4
 801cf0e:	b013      	add	sp, #76	; 0x4c
 801cf10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf14:	6803      	ldr	r3, [r0, #0]
 801cf16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf18:	4798      	blx	r3
 801cf1a:	883b      	ldrh	r3, [r7, #0]
 801cf1c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cf20:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801cf24:	fb03 1202 	mla	r2, r3, r2, r1
 801cf28:	435d      	muls	r5, r3
 801cf2a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf2e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cf32:	920c      	str	r2, [sp, #48]	; 0x30
 801cf34:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801cf38:	1b12      	subs	r2, r2, r4
 801cf3a:	920d      	str	r2, [sp, #52]	; 0x34
 801cf3c:	0062      	lsls	r2, r4, #1
 801cf3e:	1b1c      	subs	r4, r3, r4
 801cf40:	0063      	lsls	r3, r4, #1
 801cf42:	920a      	str	r2, [sp, #40]	; 0x28
 801cf44:	930b      	str	r3, [sp, #44]	; 0x2c
 801cf46:	f04f 0e04 	mov.w	lr, #4
 801cf4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cf4c:	4298      	cmp	r0, r3
 801cf4e:	d266      	bcs.n	801d01e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cf50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf52:	eb00 0b03 	add.w	fp, r0, r3
 801cf56:	4558      	cmp	r0, fp
 801cf58:	d25c      	bcs.n	801d014 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cf5a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cf5e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cf62:	f858 2003 	ldr.w	r2, [r8, r3]
 801cf66:	0e11      	lsrs	r1, r2, #24
 801cf68:	d012      	beq.n	801cf90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cf6a:	29ff      	cmp	r1, #255	; 0xff
 801cf6c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cf70:	d110      	bne.n	801cf94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf72:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cf76:	d10d      	bne.n	801cf94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf78:	0953      	lsrs	r3, r2, #5
 801cf7a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cf7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cf82:	f027 0707 	bic.w	r7, r7, #7
 801cf86:	431f      	orrs	r7, r3
 801cf88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf8c:	433a      	orrs	r2, r7
 801cf8e:	8002      	strh	r2, [r0, #0]
 801cf90:	3002      	adds	r0, #2
 801cf92:	e7e0      	b.n	801cf56 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cf94:	fb0a f101 	mul.w	r1, sl, r1
 801cf98:	8806      	ldrh	r6, [r0, #0]
 801cf9a:	1c4b      	adds	r3, r1, #1
 801cf9c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cfa0:	1235      	asrs	r5, r6, #8
 801cfa2:	10f4      	asrs	r4, r6, #3
 801cfa4:	121b      	asrs	r3, r3, #8
 801cfa6:	00f6      	lsls	r6, r6, #3
 801cfa8:	b299      	uxth	r1, r3
 801cfaa:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cfae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cfb2:	b2f6      	uxtb	r6, r6
 801cfb4:	43db      	mvns	r3, r3
 801cfb6:	b2d2      	uxtb	r2, r2
 801cfb8:	b2db      	uxtb	r3, r3
 801cfba:	fb1c fc01 	smulbb	ip, ip, r1
 801cfbe:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cfc2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cfc6:	fb12 f201 	smulbb	r2, r2, r1
 801cfca:	fb05 c503 	mla	r5, r5, r3, ip
 801cfce:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cfd2:	b2ff      	uxtb	r7, r7
 801cfd4:	fb06 2203 	mla	r2, r6, r3, r2
 801cfd8:	b2ad      	uxth	r5, r5
 801cfda:	fb17 f701 	smulbb	r7, r7, r1
 801cfde:	b292      	uxth	r2, r2
 801cfe0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cfe4:	fb04 7403 	mla	r4, r4, r3, r7
 801cfe8:	f105 0c01 	add.w	ip, r5, #1
 801cfec:	1c57      	adds	r7, r2, #1
 801cfee:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cff2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cff6:	b2a4      	uxth	r4, r4
 801cff8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cffc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d000:	433d      	orrs	r5, r7
 801d002:	1c67      	adds	r7, r4, #1
 801d004:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d008:	0964      	lsrs	r4, r4, #5
 801d00a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d00e:	4325      	orrs	r5, r4
 801d010:	8005      	strh	r5, [r0, #0]
 801d012:	e7bd      	b.n	801cf90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d014:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d016:	4418      	add	r0, r3
 801d018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d01a:	4499      	add	r9, r3
 801d01c:	e795      	b.n	801cf4a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d01e:	4b04      	ldr	r3, [pc, #16]	; (801d030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d020:	6818      	ldr	r0, [r3, #0]
 801d022:	6803      	ldr	r3, [r0, #0]
 801d024:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d026:	4798      	blx	r3
 801d028:	e771      	b.n	801cf0e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d02a:	bf00      	nop
 801d02c:	20012d9e 	.word	0x20012d9e
 801d030:	20012da4 	.word	0x20012da4

0801d034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d038:	b087      	sub	sp, #28
 801d03a:	4680      	mov	r8, r0
 801d03c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d040:	460d      	mov	r5, r1
 801d042:	4614      	mov	r4, r2
 801d044:	2e00      	cmp	r6, #0
 801d046:	f000 80b9 	beq.w	801d1bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d04a:	6810      	ldr	r0, [r2, #0]
 801d04c:	6851      	ldr	r1, [r2, #4]
 801d04e:	af02      	add	r7, sp, #8
 801d050:	c703      	stmia	r7!, {r0, r1}
 801d052:	6818      	ldr	r0, [r3, #0]
 801d054:	6859      	ldr	r1, [r3, #4]
 801d056:	af04      	add	r7, sp, #16
 801d058:	c703      	stmia	r7!, {r0, r1}
 801d05a:	a802      	add	r0, sp, #8
 801d05c:	f7f7 fbec 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d060:	4621      	mov	r1, r4
 801d062:	a804      	add	r0, sp, #16
 801d064:	f7f7 fc2c 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d068:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d06c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d070:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d074:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d078:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d07c:	eb08 0401 	add.w	r4, r8, r1
 801d080:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d084:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d088:	440a      	add	r2, r1
 801d08a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d08e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d092:	4413      	add	r3, r2
 801d094:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d098:	4b4a      	ldr	r3, [pc, #296]	; (801d1c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d09a:	6818      	ldr	r0, [r3, #0]
 801d09c:	6803      	ldr	r3, [r0, #0]
 801d09e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d0a0:	4798      	blx	r3
 801d0a2:	4b49      	ldr	r3, [pc, #292]	; (801d1c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d0a4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d0a8:	881a      	ldrh	r2, [r3, #0]
 801d0aa:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d0ae:	2eff      	cmp	r6, #255	; 0xff
 801d0b0:	fb02 c101 	mla	r1, r2, r1, ip
 801d0b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d0b8:	fb02 f207 	mul.w	r2, r2, r7
 801d0bc:	f105 0104 	add.w	r1, r5, #4
 801d0c0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d0c4:	461d      	mov	r5, r3
 801d0c6:	d05a      	beq.n	801d17e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d0c8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d0cc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d0d0:	b2b6      	uxth	r6, r6
 801d0d2:	fa1f fe8e 	uxth.w	lr, lr
 801d0d6:	9301      	str	r3, [sp, #4]
 801d0d8:	4282      	cmp	r2, r0
 801d0da:	d96a      	bls.n	801d1b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d0dc:	eb00 0b0a 	add.w	fp, r0, sl
 801d0e0:	4583      	cmp	fp, r0
 801d0e2:	d940      	bls.n	801d166 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d0e4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d0e8:	8805      	ldrh	r5, [r0, #0]
 801d0ea:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d0ee:	122f      	asrs	r7, r5, #8
 801d0f0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d0f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d0f8:	fb17 f70e 	smulbb	r7, r7, lr
 801d0fc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d100:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d104:	00ed      	lsls	r5, r5, #3
 801d106:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d10a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d10e:	10df      	asrs	r7, r3, #3
 801d110:	b2ed      	uxtb	r5, r5
 801d112:	00db      	lsls	r3, r3, #3
 801d114:	fa1f fc8c 	uxth.w	ip, ip
 801d118:	fb19 f90e 	smulbb	r9, r9, lr
 801d11c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d120:	b2db      	uxtb	r3, r3
 801d122:	fb15 f50e 	smulbb	r5, r5, lr
 801d126:	fb07 9706 	mla	r7, r7, r6, r9
 801d12a:	fb03 5306 	mla	r3, r3, r6, r5
 801d12e:	f10c 0901 	add.w	r9, ip, #1
 801d132:	b29b      	uxth	r3, r3
 801d134:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d138:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d13c:	f103 0c01 	add.w	ip, r3, #1
 801d140:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d144:	b2bf      	uxth	r7, r7
 801d146:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d14a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d14e:	f107 0901 	add.w	r9, r7, #1
 801d152:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d156:	097f      	lsrs	r7, r7, #5
 801d158:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d15c:	ea4c 0c07 	orr.w	ip, ip, r7
 801d160:	f820 cb02 	strh.w	ip, [r0], #2
 801d164:	e7bc      	b.n	801d0e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d166:	9b01      	ldr	r3, [sp, #4]
 801d168:	881b      	ldrh	r3, [r3, #0]
 801d16a:	eba3 0308 	sub.w	r3, r3, r8
 801d16e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d172:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d176:	eba3 0308 	sub.w	r3, r3, r8
 801d17a:	441c      	add	r4, r3
 801d17c:	e7ac      	b.n	801d0d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d17e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d182:	4282      	cmp	r2, r0
 801d184:	d915      	bls.n	801d1b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d186:	eb00 060a 	add.w	r6, r0, sl
 801d18a:	4286      	cmp	r6, r0
 801d18c:	d906      	bls.n	801d19c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d18e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d192:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d196:	f820 3b02 	strh.w	r3, [r0], #2
 801d19a:	e7f6      	b.n	801d18a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d19c:	882b      	ldrh	r3, [r5, #0]
 801d19e:	eba3 0308 	sub.w	r3, r3, r8
 801d1a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d1aa:	eba3 0308 	sub.w	r3, r3, r8
 801d1ae:	441c      	add	r4, r3
 801d1b0:	e7e7      	b.n	801d182 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d1b2:	4b04      	ldr	r3, [pc, #16]	; (801d1c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d1b4:	6818      	ldr	r0, [r3, #0]
 801d1b6:	6803      	ldr	r3, [r0, #0]
 801d1b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1ba:	4798      	blx	r3
 801d1bc:	b007      	add	sp, #28
 801d1be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1c2:	bf00      	nop
 801d1c4:	20012da4 	.word	0x20012da4
 801d1c8:	20012d9e 	.word	0x20012d9e

0801d1cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1d0:	b091      	sub	sp, #68	; 0x44
 801d1d2:	4680      	mov	r8, r0
 801d1d4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d1d8:	460f      	mov	r7, r1
 801d1da:	4614      	mov	r4, r2
 801d1dc:	2d00      	cmp	r5, #0
 801d1de:	d051      	beq.n	801d284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1e0:	6810      	ldr	r0, [r2, #0]
 801d1e2:	6851      	ldr	r1, [r2, #4]
 801d1e4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d3e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d1e8:	ae0c      	add	r6, sp, #48	; 0x30
 801d1ea:	c603      	stmia	r6!, {r0, r1}
 801d1ec:	6818      	ldr	r0, [r3, #0]
 801d1ee:	6859      	ldr	r1, [r3, #4]
 801d1f0:	ae0e      	add	r6, sp, #56	; 0x38
 801d1f2:	c603      	stmia	r6!, {r0, r1}
 801d1f4:	a80c      	add	r0, sp, #48	; 0x30
 801d1f6:	f7f7 fb1f 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1fa:	4621      	mov	r1, r4
 801d1fc:	a80e      	add	r0, sp, #56	; 0x38
 801d1fe:	f7f7 fb5f 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d202:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d206:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d20a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d20e:	f8d9 0000 	ldr.w	r0, [r9]
 801d212:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d216:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d21a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d21e:	eb08 0401 	add.w	r4, r8, r1
 801d222:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d226:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d3ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d22a:	440a      	add	r2, r1
 801d22c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d230:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d234:	4413      	add	r3, r2
 801d236:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d23a:	6803      	ldr	r3, [r0, #0]
 801d23c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d23e:	4798      	blx	r3
 801d240:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d244:	f8d9 0000 	ldr.w	r0, [r9]
 801d248:	d01f      	beq.n	801d28a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d24a:	2200      	movs	r2, #0
 801d24c:	6801      	ldr	r1, [r0, #0]
 801d24e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d252:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d256:	220b      	movs	r2, #11
 801d258:	9207      	str	r2, [sp, #28]
 801d25a:	f8b8 2000 	ldrh.w	r2, [r8]
 801d25e:	9206      	str	r2, [sp, #24]
 801d260:	2201      	movs	r2, #1
 801d262:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d266:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d26a:	9203      	str	r2, [sp, #12]
 801d26c:	fa1f f28a 	uxth.w	r2, sl
 801d270:	9202      	str	r2, [sp, #8]
 801d272:	b2b6      	uxth	r6, r6
 801d274:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d278:	9200      	str	r2, [sp, #0]
 801d27a:	9601      	str	r6, [sp, #4]
 801d27c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d27e:	463a      	mov	r2, r7
 801d280:	4621      	mov	r1, r4
 801d282:	47a8      	blx	r5
 801d284:	b011      	add	sp, #68	; 0x44
 801d286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d28a:	6803      	ldr	r3, [r0, #0]
 801d28c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d28e:	4798      	blx	r3
 801d290:	f8b8 2000 	ldrh.w	r2, [r8]
 801d294:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d298:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d29c:	2dff      	cmp	r5, #255	; 0xff
 801d29e:	fb02 1303 	mla	r3, r2, r3, r1
 801d2a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d2a6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d2aa:	fb0a fa02 	mul.w	sl, sl, r2
 801d2ae:	d062      	beq.n	801d376 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d2b0:	ea6f 0c05 	mvn.w	ip, r5
 801d2b4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d2b8:	930a      	str	r3, [sp, #40]	; 0x28
 801d2ba:	b2ad      	uxth	r5, r5
 801d2bc:	fa5f fc8c 	uxtb.w	ip, ip
 801d2c0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d2c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2c6:	4298      	cmp	r0, r3
 801d2c8:	f080 8085 	bcs.w	801d3d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d2cc:	eb00 0b09 	add.w	fp, r0, r9
 801d2d0:	4558      	cmp	r0, fp
 801d2d2:	d246      	bcs.n	801d362 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d2d4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d2d8:	2303      	movs	r3, #3
 801d2da:	2204      	movs	r2, #4
 801d2dc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d2e0:	eb07 0a0e 	add.w	sl, r7, lr
 801d2e4:	8803      	ldrh	r3, [r0, #0]
 801d2e6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d2ea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d2ee:	1219      	asrs	r1, r3, #8
 801d2f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d2f4:	fb18 f805 	smulbb	r8, r8, r5
 801d2f8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d2fc:	10da      	asrs	r2, r3, #3
 801d2fe:	fb01 810c 	mla	r1, r1, ip, r8
 801d302:	00db      	lsls	r3, r3, #3
 801d304:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d308:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d30c:	b2db      	uxtb	r3, r3
 801d30e:	fb18 f805 	smulbb	r8, r8, r5
 801d312:	fb1e fe05 	smulbb	lr, lr, r5
 801d316:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d31a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d31e:	b289      	uxth	r1, r1
 801d320:	fb02 820c 	mla	r2, r2, ip, r8
 801d324:	fb03 e30c 	mla	r3, r3, ip, lr
 801d328:	b292      	uxth	r2, r2
 801d32a:	b29b      	uxth	r3, r3
 801d32c:	f101 0801 	add.w	r8, r1, #1
 801d330:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d334:	f103 0e01 	add.w	lr, r3, #1
 801d338:	f102 0801 	add.w	r8, r2, #1
 801d33c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d340:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d344:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d348:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d34c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d350:	ea4e 0101 	orr.w	r1, lr, r1
 801d354:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d358:	ea41 0108 	orr.w	r1, r1, r8
 801d35c:	f820 1b02 	strh.w	r1, [r0], #2
 801d360:	e7b6      	b.n	801d2d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d362:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d364:	881b      	ldrh	r3, [r3, #0]
 801d366:	1b9b      	subs	r3, r3, r6
 801d368:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d36c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d370:	1b9b      	subs	r3, r3, r6
 801d372:	441c      	add	r4, r3
 801d374:	e7a6      	b.n	801d2c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d376:	491b      	ldr	r1, [pc, #108]	; (801d3e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d378:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d37c:	2203      	movs	r2, #3
 801d37e:	2504      	movs	r5, #4
 801d380:	4550      	cmp	r0, sl
 801d382:	d228      	bcs.n	801d3d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d384:	eb00 0c09 	add.w	ip, r0, r9
 801d388:	4560      	cmp	r0, ip
 801d38a:	4623      	mov	r3, r4
 801d38c:	d219      	bcs.n	801d3c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d38e:	f893 e000 	ldrb.w	lr, [r3]
 801d392:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d396:	eb07 0b0e 	add.w	fp, r7, lr
 801d39a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d39e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d3a2:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d3a6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d3aa:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d3ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d3b2:	ea43 030b 	orr.w	r3, r3, fp
 801d3b6:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d3ba:	3401      	adds	r4, #1
 801d3bc:	f820 3b02 	strh.w	r3, [r0], #2
 801d3c0:	e7e2      	b.n	801d388 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d3c2:	f8b8 3000 	ldrh.w	r3, [r8]
 801d3c6:	1b9b      	subs	r3, r3, r6
 801d3c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d3cc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d3d0:	1b9b      	subs	r3, r3, r6
 801d3d2:	441c      	add	r4, r3
 801d3d4:	e7d4      	b.n	801d380 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d3d6:	4b04      	ldr	r3, [pc, #16]	; (801d3e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d3d8:	6818      	ldr	r0, [r3, #0]
 801d3da:	6803      	ldr	r3, [r0, #0]
 801d3dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3de:	4798      	blx	r3
 801d3e0:	e750      	b.n	801d284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d3e2:	bf00      	nop
 801d3e4:	fffff800 	.word	0xfffff800
 801d3e8:	20012da4 	.word	0x20012da4
 801d3ec:	20012d9e 	.word	0x20012d9e

0801d3f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d3f0:	b4f0      	push	{r4, r5, r6, r7}
 801d3f2:	460c      	mov	r4, r1
 801d3f4:	4611      	mov	r1, r2
 801d3f6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d3fa:	780f      	ldrb	r7, [r1, #0]
 801d3fc:	784e      	ldrb	r6, [r1, #1]
 801d3fe:	2f01      	cmp	r7, #1
 801d400:	461a      	mov	r2, r3
 801d402:	9b04      	ldr	r3, [sp, #16]
 801d404:	d036      	beq.n	801d474 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d406:	d31e      	bcc.n	801d446 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d408:	2f02      	cmp	r7, #2
 801d40a:	d14a      	bne.n	801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d40c:	2e03      	cmp	r6, #3
 801d40e:	d848      	bhi.n	801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d410:	e8df f006 	tbb	[pc, r6]
 801d414:	16140702 	.word	0x16140702
 801d418:	9504      	str	r5, [sp, #16]
 801d41a:	4620      	mov	r0, r4
 801d41c:	bcf0      	pop	{r4, r5, r6, r7}
 801d41e:	f7ff be09 	b.w	801d034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d422:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d424:	2800      	cmp	r0, #0
 801d426:	d03c      	beq.n	801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d428:	6806      	ldr	r6, [r0, #0]
 801d42a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d42e:	68b5      	ldr	r5, [r6, #8]
 801d430:	4613      	mov	r3, r2
 801d432:	46ac      	mov	ip, r5
 801d434:	460a      	mov	r2, r1
 801d436:	4621      	mov	r1, r4
 801d438:	bcf0      	pop	{r4, r5, r6, r7}
 801d43a:	4760      	bx	ip
 801d43c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d43e:	e7f1      	b.n	801d424 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d440:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d444:	e7ee      	b.n	801d424 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d446:	2e03      	cmp	r6, #3
 801d448:	d82b      	bhi.n	801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d44a:	e8df f006 	tbb	[pc, r6]
 801d44e:	0702      	.short	0x0702
 801d450:	100e      	.short	0x100e
 801d452:	9504      	str	r5, [sp, #16]
 801d454:	4620      	mov	r0, r4
 801d456:	bcf0      	pop	{r4, r5, r6, r7}
 801d458:	f7ff bd06 	b.w	801ce68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d45c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d45e:	b300      	cbz	r0, 801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d460:	6806      	ldr	r6, [r0, #0]
 801d462:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d466:	68f5      	ldr	r5, [r6, #12]
 801d468:	e7e2      	b.n	801d430 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d46a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d46c:	e7f7      	b.n	801d45e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d46e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d472:	e7f4      	b.n	801d45e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d474:	2e03      	cmp	r6, #3
 801d476:	d814      	bhi.n	801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d478:	e8df f006 	tbb	[pc, r6]
 801d47c:	100e0702 	.word	0x100e0702
 801d480:	9504      	str	r5, [sp, #16]
 801d482:	4620      	mov	r0, r4
 801d484:	bcf0      	pop	{r4, r5, r6, r7}
 801d486:	f7ff bea1 	b.w	801d1cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d48a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d48c:	b148      	cbz	r0, 801d4a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d48e:	6806      	ldr	r6, [r0, #0]
 801d490:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d494:	6935      	ldr	r5, [r6, #16]
 801d496:	e7cb      	b.n	801d430 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d498:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d49a:	e7f7      	b.n	801d48c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d49c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d4a0:	e7f4      	b.n	801d48c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d4a2:	bcf0      	pop	{r4, r5, r6, r7}
 801d4a4:	4770      	bx	lr
	...

0801d4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4ac:	4604      	mov	r4, r0
 801d4ae:	b087      	sub	sp, #28
 801d4b0:	6810      	ldr	r0, [r2, #0]
 801d4b2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d4b6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d6f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d4ba:	460e      	mov	r6, r1
 801d4bc:	6851      	ldr	r1, [r2, #4]
 801d4be:	ad02      	add	r5, sp, #8
 801d4c0:	c503      	stmia	r5!, {r0, r1}
 801d4c2:	6818      	ldr	r0, [r3, #0]
 801d4c4:	6859      	ldr	r1, [r3, #4]
 801d4c6:	ad04      	add	r5, sp, #16
 801d4c8:	4617      	mov	r7, r2
 801d4ca:	c503      	stmia	r5!, {r0, r1}
 801d4cc:	a802      	add	r0, sp, #8
 801d4ce:	f7f7 f9b3 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d4d2:	4639      	mov	r1, r7
 801d4d4:	a804      	add	r0, sp, #16
 801d4d6:	f7f7 f9f3 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d4da:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4de:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4e2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d4e6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d4ea:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d4ee:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d4f2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d4f6:	440e      	add	r6, r1
 801d4f8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d4fc:	440a      	add	r2, r1
 801d4fe:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d502:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d506:	4413      	add	r3, r2
 801d508:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d50c:	4b77      	ldr	r3, [pc, #476]	; (801d6ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d50e:	6818      	ldr	r0, [r3, #0]
 801d510:	6803      	ldr	r3, [r0, #0]
 801d512:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d514:	4798      	blx	r3
 801d516:	f8b9 b000 	ldrh.w	fp, [r9]
 801d51a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d51e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d522:	fb0b 2303 	mla	r3, fp, r3, r2
 801d526:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d52a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d52e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d532:	fb05 f50b 	mul.w	r5, r5, fp
 801d536:	9300      	str	r3, [sp, #0]
 801d538:	d069      	beq.n	801d60e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d53a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d53e:	4558      	cmp	r0, fp
 801d540:	f080 80cc 	bcs.w	801d6dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d544:	9b00      	ldr	r3, [sp, #0]
 801d546:	18c3      	adds	r3, r0, r3
 801d548:	9301      	str	r3, [sp, #4]
 801d54a:	4631      	mov	r1, r6
 801d54c:	9b01      	ldr	r3, [sp, #4]
 801d54e:	4298      	cmp	r0, r3
 801d550:	d24f      	bcs.n	801d5f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d552:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d556:	2a00      	cmp	r2, #0
 801d558:	d048      	beq.n	801d5ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d55a:	fb0a f202 	mul.w	r2, sl, r2
 801d55e:	1c53      	adds	r3, r2, #1
 801d560:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d564:	121b      	asrs	r3, r3, #8
 801d566:	d041      	beq.n	801d5ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d568:	8802      	ldrh	r2, [r0, #0]
 801d56a:	f8b4 c000 	ldrh.w	ip, [r4]
 801d56e:	b29e      	uxth	r6, r3
 801d570:	1215      	asrs	r5, r2, #8
 801d572:	43db      	mvns	r3, r3
 801d574:	b2db      	uxtb	r3, r3
 801d576:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d57a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d57e:	fb15 f503 	smulbb	r5, r5, r3
 801d582:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d586:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d58a:	00d2      	lsls	r2, r2, #3
 801d58c:	fb07 5706 	mla	r7, r7, r6, r5
 801d590:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d594:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d598:	b2d2      	uxtb	r2, r2
 801d59a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d59e:	b2bf      	uxth	r7, r7
 801d5a0:	fb1e fe03 	smulbb	lr, lr, r3
 801d5a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d5a8:	fa5f fc8c 	uxtb.w	ip, ip
 801d5ac:	fb12 f203 	smulbb	r2, r2, r3
 801d5b0:	fb05 e506 	mla	r5, r5, r6, lr
 801d5b4:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d5b8:	f107 0e01 	add.w	lr, r7, #1
 801d5bc:	fa1f fc8c 	uxth.w	ip, ip
 801d5c0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d5c4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d5c8:	f10c 0701 	add.w	r7, ip, #1
 801d5cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d5d0:	b2ad      	uxth	r5, r5
 801d5d2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d5d6:	ea47 070e 	orr.w	r7, r7, lr
 801d5da:	f105 0e01 	add.w	lr, r5, #1
 801d5de:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d5e2:	096d      	lsrs	r5, r5, #5
 801d5e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d5e8:	432f      	orrs	r7, r5
 801d5ea:	8007      	strh	r7, [r0, #0]
 801d5ec:	3002      	adds	r0, #2
 801d5ee:	3402      	adds	r4, #2
 801d5f0:	e7ac      	b.n	801d54c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d5f2:	f8b9 3000 	ldrh.w	r3, [r9]
 801d5f6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d5fa:	eba3 0308 	sub.w	r3, r3, r8
 801d5fe:	eba6 0608 	sub.w	r6, r6, r8
 801d602:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d606:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d60a:	440e      	add	r6, r1
 801d60c:	e797      	b.n	801d53e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d60e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d612:	42a8      	cmp	r0, r5
 801d614:	d262      	bcs.n	801d6dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d616:	9b00      	ldr	r3, [sp, #0]
 801d618:	4631      	mov	r1, r6
 801d61a:	eb00 0b03 	add.w	fp, r0, r3
 801d61e:	4558      	cmp	r0, fp
 801d620:	d24e      	bcs.n	801d6c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d622:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d626:	b12b      	cbz	r3, 801d634 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d628:	2bff      	cmp	r3, #255	; 0xff
 801d62a:	f8b4 e000 	ldrh.w	lr, [r4]
 801d62e:	d104      	bne.n	801d63a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d630:	f8a0 e000 	strh.w	lr, [r0]
 801d634:	3002      	adds	r0, #2
 801d636:	3402      	adds	r4, #2
 801d638:	e7f1      	b.n	801d61e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d63a:	8802      	ldrh	r2, [r0, #0]
 801d63c:	b29f      	uxth	r7, r3
 801d63e:	1216      	asrs	r6, r2, #8
 801d640:	43db      	mvns	r3, r3
 801d642:	b2db      	uxtb	r3, r3
 801d644:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d648:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d64c:	fb16 f603 	smulbb	r6, r6, r3
 801d650:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d654:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d658:	00d2      	lsls	r2, r2, #3
 801d65a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d65e:	b2d2      	uxtb	r2, r2
 801d660:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d664:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d668:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d66c:	fb1a fa03 	smulbb	sl, sl, r3
 801d670:	fa1f fc8c 	uxth.w	ip, ip
 801d674:	fb12 f303 	smulbb	r3, r2, r3
 801d678:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d67c:	fa5f fe8e 	uxtb.w	lr, lr
 801d680:	fb06 a607 	mla	r6, r6, r7, sl
 801d684:	f10c 0201 	add.w	r2, ip, #1
 801d688:	fb0e 3307 	mla	r3, lr, r7, r3
 801d68c:	b2b6      	uxth	r6, r6
 801d68e:	b29b      	uxth	r3, r3
 801d690:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d694:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d698:	f106 0a01 	add.w	sl, r6, #1
 801d69c:	f103 0c01 	add.w	ip, r3, #1
 801d6a0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d6a4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d6a8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d6ac:	0976      	lsrs	r6, r6, #5
 801d6ae:	ea4c 0c02 	orr.w	ip, ip, r2
 801d6b2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d6b6:	ea4c 0c06 	orr.w	ip, ip, r6
 801d6ba:	f8a0 c000 	strh.w	ip, [r0]
 801d6be:	e7b9      	b.n	801d634 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d6c0:	f8b9 3000 	ldrh.w	r3, [r9]
 801d6c4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d6c8:	eba3 0308 	sub.w	r3, r3, r8
 801d6cc:	eba6 0608 	sub.w	r6, r6, r8
 801d6d0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d6d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6d8:	440e      	add	r6, r1
 801d6da:	e79a      	b.n	801d612 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d6dc:	4b03      	ldr	r3, [pc, #12]	; (801d6ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d6de:	6818      	ldr	r0, [r3, #0]
 801d6e0:	6803      	ldr	r3, [r0, #0]
 801d6e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d6e4:	4798      	blx	r3
 801d6e6:	b007      	add	sp, #28
 801d6e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6ec:	20012da4 	.word	0x20012da4
 801d6f0:	20012d9e 	.word	0x20012d9e

0801d6f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6f8:	b089      	sub	sp, #36	; 0x24
 801d6fa:	4682      	mov	sl, r0
 801d6fc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d700:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d702:	460f      	mov	r7, r1
 801d704:	4691      	mov	r9, r2
 801d706:	4698      	mov	r8, r3
 801d708:	2e00      	cmp	r6, #0
 801d70a:	d03d      	beq.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d70c:	4608      	mov	r0, r1
 801d70e:	f7fa fe59 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d712:	4605      	mov	r5, r0
 801d714:	4638      	mov	r0, r7
 801d716:	f7fa fe89 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d71a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d71e:	4638      	mov	r0, r7
 801d720:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d724:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d728:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d72c:	f7fa ff36 	bl	801859c <_ZNK8touchgfx6Bitmap7getDataEv>
 801d730:	4605      	mov	r5, r0
 801d732:	4638      	mov	r0, r7
 801d734:	f7fa ff62 	bl	80185fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d738:	4681      	mov	r9, r0
 801d73a:	4638      	mov	r0, r7
 801d73c:	f7fa ffb2 	bl	80186a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d740:	280b      	cmp	r0, #11
 801d742:	d821      	bhi.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d744:	e8df f000 	tbb	[pc, r0]
 801d748:	2006aebe 	.word	0x2006aebe
 801d74c:	20202020 	.word	0x20202020
 801d750:	b5202020 	.word	0xb5202020
 801d754:	4bb0      	ldr	r3, [pc, #704]	; (801da18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d756:	6818      	ldr	r0, [r3, #0]
 801d758:	6803      	ldr	r3, [r0, #0]
 801d75a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d75c:	4798      	blx	r3
 801d75e:	2eff      	cmp	r6, #255	; 0xff
 801d760:	d101      	bne.n	801d766 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d762:	0683      	lsls	r3, r0, #26
 801d764:	d506      	bpl.n	801d774 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d766:	4633      	mov	r3, r6
 801d768:	4622      	mov	r2, r4
 801d76a:	a902      	add	r1, sp, #8
 801d76c:	4628      	mov	r0, r5
 801d76e:	f7ff f909 	bl	801c984 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d772:	e009      	b.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d774:	4638      	mov	r0, r7
 801d776:	f7fa fed9 	bl	801852c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d77a:	b940      	cbnz	r0, 801d78e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d77c:	4623      	mov	r3, r4
 801d77e:	aa02      	add	r2, sp, #8
 801d780:	4629      	mov	r1, r5
 801d782:	4650      	mov	r0, sl
 801d784:	f7ff f9e4 	bl	801cb50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d788:	b009      	add	sp, #36	; 0x24
 801d78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d78e:	f10d 0818 	add.w	r8, sp, #24
 801d792:	4639      	mov	r1, r7
 801d794:	4640      	mov	r0, r8
 801d796:	f7fa fe7d 	bl	8018494 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d79a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d79e:	af04      	add	r7, sp, #16
 801d7a0:	e887 0003 	stmia.w	r7, {r0, r1}
 801d7a4:	4638      	mov	r0, r7
 801d7a6:	4621      	mov	r1, r4
 801d7a8:	f7f2 f8e8 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 801d7ac:	4638      	mov	r0, r7
 801d7ae:	f7f2 f928 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d7b2:	2800      	cmp	r0, #0
 801d7b4:	d1d7      	bne.n	801d766 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d7b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d7ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d7be:	4293      	cmp	r3, r2
 801d7c0:	dd12      	ble.n	801d7e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d7c2:	1a9b      	subs	r3, r3, r2
 801d7c4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d7c8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d7cc:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d7d0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d7d4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d7d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d7dc:	4642      	mov	r2, r8
 801d7de:	4633      	mov	r3, r6
 801d7e0:	a902      	add	r1, sp, #8
 801d7e2:	4628      	mov	r0, r5
 801d7e4:	f7ff f8ce 	bl	801c984 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d7e8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d7ec:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d7f0:	4293      	cmp	r3, r2
 801d7f2:	dd12      	ble.n	801d81a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d7f4:	1a9b      	subs	r3, r3, r2
 801d7f6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d7fa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d7fe:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d802:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d806:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d80a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d80e:	23ff      	movs	r3, #255	; 0xff
 801d810:	4642      	mov	r2, r8
 801d812:	a902      	add	r1, sp, #8
 801d814:	4628      	mov	r0, r5
 801d816:	f7ff f8b5 	bl	801c984 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d81a:	463b      	mov	r3, r7
 801d81c:	aa02      	add	r2, sp, #8
 801d81e:	4629      	mov	r1, r5
 801d820:	4650      	mov	r0, sl
 801d822:	f7ff f995 	bl	801cb50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d826:	88a2      	ldrh	r2, [r4, #4]
 801d828:	8823      	ldrh	r3, [r4, #0]
 801d82a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d82e:	4413      	add	r3, r2
 801d830:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d834:	440a      	add	r2, r1
 801d836:	b29b      	uxth	r3, r3
 801d838:	b292      	uxth	r2, r2
 801d83a:	b211      	sxth	r1, r2
 801d83c:	b218      	sxth	r0, r3
 801d83e:	4288      	cmp	r0, r1
 801d840:	dd12      	ble.n	801d868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d842:	1a9b      	subs	r3, r3, r2
 801d844:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d848:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d84c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d850:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d854:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d858:	23ff      	movs	r3, #255	; 0xff
 801d85a:	4642      	mov	r2, r8
 801d85c:	a902      	add	r1, sp, #8
 801d85e:	4628      	mov	r0, r5
 801d860:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d864:	f7ff f88e 	bl	801c984 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d868:	88e2      	ldrh	r2, [r4, #6]
 801d86a:	8863      	ldrh	r3, [r4, #2]
 801d86c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d870:	4413      	add	r3, r2
 801d872:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d876:	440a      	add	r2, r1
 801d878:	b29b      	uxth	r3, r3
 801d87a:	b292      	uxth	r2, r2
 801d87c:	b211      	sxth	r1, r2
 801d87e:	b218      	sxth	r0, r3
 801d880:	4288      	cmp	r0, r1
 801d882:	dd81      	ble.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d884:	1a9b      	subs	r3, r3, r2
 801d886:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d88a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d88e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d892:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d896:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d89a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d89e:	23ff      	movs	r3, #255	; 0xff
 801d8a0:	4642      	mov	r2, r8
 801d8a2:	e762      	b.n	801d76a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d8a4:	4633      	mov	r3, r6
 801d8a6:	4622      	mov	r2, r4
 801d8a8:	a902      	add	r1, sp, #8
 801d8aa:	4628      	mov	r0, r5
 801d8ac:	f7ff f9c0 	bl	801cc30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d8b0:	e76a      	b.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8b2:	e9cd 4600 	strd	r4, r6, [sp]
 801d8b6:	ab02      	add	r3, sp, #8
 801d8b8:	464a      	mov	r2, r9
 801d8ba:	4629      	mov	r1, r5
 801d8bc:	4650      	mov	r0, sl
 801d8be:	f7ff fd97 	bl	801d3f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d8c2:	e761      	b.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8c4:	4638      	mov	r0, r7
 801d8c6:	f7fa fe31 	bl	801852c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d8ca:	b950      	cbnz	r0, 801d8e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d8cc:	e9cd 6000 	strd	r6, r0, [sp]
 801d8d0:	f8da 3000 	ldr.w	r3, [sl]
 801d8d4:	aa02      	add	r2, sp, #8
 801d8d6:	68de      	ldr	r6, [r3, #12]
 801d8d8:	4629      	mov	r1, r5
 801d8da:	4623      	mov	r3, r4
 801d8dc:	4650      	mov	r0, sl
 801d8de:	47b0      	blx	r6
 801d8e0:	e752      	b.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8e2:	f10d 0818 	add.w	r8, sp, #24
 801d8e6:	4639      	mov	r1, r7
 801d8e8:	4640      	mov	r0, r8
 801d8ea:	f7fa fdd3 	bl	8018494 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d8ee:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d8f2:	af04      	add	r7, sp, #16
 801d8f4:	e887 0003 	stmia.w	r7, {r0, r1}
 801d8f8:	4638      	mov	r0, r7
 801d8fa:	4621      	mov	r1, r4
 801d8fc:	f7f2 f83e 	bl	800f97c <_ZN8touchgfx4RectaNERKS0_>
 801d900:	4638      	mov	r0, r7
 801d902:	f7f2 f87e 	bl	800fa02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d906:	b138      	cbz	r0, 801d918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d908:	9600      	str	r6, [sp, #0]
 801d90a:	4623      	mov	r3, r4
 801d90c:	aa02      	add	r2, sp, #8
 801d90e:	4649      	mov	r1, r9
 801d910:	4628      	mov	r0, r5
 801d912:	f7ff fdc9 	bl	801d4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d916:	e737      	b.n	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d918:	e9cd 6000 	strd	r6, r0, [sp]
 801d91c:	f8da 3000 	ldr.w	r3, [sl]
 801d920:	aa02      	add	r2, sp, #8
 801d922:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d926:	4629      	mov	r1, r5
 801d928:	463b      	mov	r3, r7
 801d92a:	4650      	mov	r0, sl
 801d92c:	47d8      	blx	fp
 801d92e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d932:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d936:	4293      	cmp	r3, r2
 801d938:	dd13      	ble.n	801d962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d93a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d93e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d942:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d946:	1a9b      	subs	r3, r3, r2
 801d948:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d94c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d950:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d954:	9600      	str	r6, [sp, #0]
 801d956:	4643      	mov	r3, r8
 801d958:	aa02      	add	r2, sp, #8
 801d95a:	4649      	mov	r1, r9
 801d95c:	4628      	mov	r0, r5
 801d95e:	f7ff fda3 	bl	801d4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d962:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d966:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d96a:	4293      	cmp	r3, r2
 801d96c:	dd13      	ble.n	801d996 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d96e:	1a9b      	subs	r3, r3, r2
 801d970:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d974:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d978:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d97c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d980:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d984:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d988:	9600      	str	r6, [sp, #0]
 801d98a:	4643      	mov	r3, r8
 801d98c:	aa02      	add	r2, sp, #8
 801d98e:	4649      	mov	r1, r9
 801d990:	4628      	mov	r0, r5
 801d992:	f7ff fd89 	bl	801d4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d996:	88a2      	ldrh	r2, [r4, #4]
 801d998:	8823      	ldrh	r3, [r4, #0]
 801d99a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d99e:	4413      	add	r3, r2
 801d9a0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d9a4:	440a      	add	r2, r1
 801d9a6:	b29b      	uxth	r3, r3
 801d9a8:	b292      	uxth	r2, r2
 801d9aa:	b211      	sxth	r1, r2
 801d9ac:	b218      	sxth	r0, r3
 801d9ae:	4288      	cmp	r0, r1
 801d9b0:	dd13      	ble.n	801d9da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801d9b2:	1a9b      	subs	r3, r3, r2
 801d9b4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d9b8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d9bc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d9c0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d9c4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d9c8:	9600      	str	r6, [sp, #0]
 801d9ca:	4643      	mov	r3, r8
 801d9cc:	aa02      	add	r2, sp, #8
 801d9ce:	4649      	mov	r1, r9
 801d9d0:	4628      	mov	r0, r5
 801d9d2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d9d6:	f7ff fd67 	bl	801d4a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d9da:	88e2      	ldrh	r2, [r4, #6]
 801d9dc:	8863      	ldrh	r3, [r4, #2]
 801d9de:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d9e2:	4413      	add	r3, r2
 801d9e4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d9e8:	440a      	add	r2, r1
 801d9ea:	b29b      	uxth	r3, r3
 801d9ec:	b292      	uxth	r2, r2
 801d9ee:	b211      	sxth	r1, r2
 801d9f0:	b218      	sxth	r0, r3
 801d9f2:	4288      	cmp	r0, r1
 801d9f4:	f77f aec8 	ble.w	801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d9f8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d9fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801da00:	f8ad 7018 	strh.w	r7, [sp, #24]
 801da04:	1a9b      	subs	r3, r3, r2
 801da06:	f8ad 301e 	strh.w	r3, [sp, #30]
 801da0a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801da0e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801da12:	9600      	str	r6, [sp, #0]
 801da14:	4643      	mov	r3, r8
 801da16:	e779      	b.n	801d90c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801da18:	20012da4 	.word	0x20012da4

0801da1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801da1c:	b180      	cbz	r0, 801da40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801da1e:	2903      	cmp	r1, #3
 801da20:	d81c      	bhi.n	801da5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801da22:	e8df f001 	tbb	[pc, r1]
 801da26:	1d02      	.short	0x1d02
 801da28:	1f08      	.short	0x1f08
 801da2a:	4b10      	ldr	r3, [pc, #64]	; (801da6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801da2c:	8818      	ldrh	r0, [r3, #0]
 801da2e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da32:	4240      	negs	r0, r0
 801da34:	4770      	bx	lr
 801da36:	4b0d      	ldr	r3, [pc, #52]	; (801da6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801da38:	8818      	ldrh	r0, [r3, #0]
 801da3a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da3e:	4770      	bx	lr
 801da40:	2903      	cmp	r1, #3
 801da42:	d80b      	bhi.n	801da5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801da44:	a301      	add	r3, pc, #4	; (adr r3, 801da4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801da46:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801da4a:	bf00      	nop
 801da4c:	0801da61 	.word	0x0801da61
 801da50:	0801da37 	.word	0x0801da37
 801da54:	0801da65 	.word	0x0801da65
 801da58:	0801da2b 	.word	0x0801da2b
 801da5c:	2000      	movs	r0, #0
 801da5e:	4770      	bx	lr
 801da60:	2001      	movs	r0, #1
 801da62:	4770      	bx	lr
 801da64:	f04f 30ff 	mov.w	r0, #4294967295
 801da68:	4770      	bx	lr
 801da6a:	bf00      	nop
 801da6c:	20012d9e 	.word	0x20012d9e

0801da70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801da70:	b180      	cbz	r0, 801da94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801da72:	2903      	cmp	r1, #3
 801da74:	d81c      	bhi.n	801dab0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801da76:	e8df f001 	tbb	[pc, r1]
 801da7a:	021d      	.short	0x021d
 801da7c:	071f      	.short	0x071f
 801da7e:	4b10      	ldr	r3, [pc, #64]	; (801dac0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801da80:	8818      	ldrh	r0, [r3, #0]
 801da82:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da86:	4770      	bx	lr
 801da88:	4b0d      	ldr	r3, [pc, #52]	; (801dac0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801da8a:	8818      	ldrh	r0, [r3, #0]
 801da8c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da90:	4240      	negs	r0, r0
 801da92:	4770      	bx	lr
 801da94:	2903      	cmp	r1, #3
 801da96:	d80b      	bhi.n	801dab0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801da98:	a301      	add	r3, pc, #4	; (adr r3, 801daa0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801da9a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801da9e:	bf00      	nop
 801daa0:	0801da7f 	.word	0x0801da7f
 801daa4:	0801dab9 	.word	0x0801dab9
 801daa8:	0801da89 	.word	0x0801da89
 801daac:	0801dab5 	.word	0x0801dab5
 801dab0:	2000      	movs	r0, #0
 801dab2:	4770      	bx	lr
 801dab4:	2001      	movs	r0, #1
 801dab6:	4770      	bx	lr
 801dab8:	f04f 30ff 	mov.w	r0, #4294967295
 801dabc:	4770      	bx	lr
 801dabe:	bf00      	nop
 801dac0:	20012d9e 	.word	0x20012d9e

0801dac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801dac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dac8:	b099      	sub	sp, #100	; 0x64
 801daca:	910b      	str	r1, [sp, #44]	; 0x2c
 801dacc:	a914      	add	r1, sp, #80	; 0x50
 801dace:	e881 000c 	stmia.w	r1, {r2, r3}
 801dad2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801dad6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801dada:	f891 900d 	ldrb.w	r9, [r1, #13]
 801dade:	9309      	str	r3, [sp, #36]	; 0x24
 801dae0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801dae4:	9310      	str	r3, [sp, #64]	; 0x40
 801dae6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801daea:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801daee:	930c      	str	r3, [sp, #48]	; 0x30
 801daf0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801daf4:	798f      	ldrb	r7, [r1, #6]
 801daf6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801dafa:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801dafe:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801db02:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801db06:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801db0a:	431f      	orrs	r7, r3
 801db0c:	f000 8195 	beq.w	801de3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db10:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801db14:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801db18:	f891 9007 	ldrb.w	r9, [r1, #7]
 801db1c:	ea59 0903 	orrs.w	r9, r9, r3
 801db20:	f000 818b 	beq.w	801de3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db24:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801db28:	b29b      	uxth	r3, r3
 801db2a:	2d00      	cmp	r5, #0
 801db2c:	f000 812e 	beq.w	801dd8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801db30:	1aed      	subs	r5, r5, r3
 801db32:	b2ad      	uxth	r5, r5
 801db34:	042b      	lsls	r3, r5, #16
 801db36:	d502      	bpl.n	801db3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801db38:	1b64      	subs	r4, r4, r5
 801db3a:	b224      	sxth	r4, r4
 801db3c:	2500      	movs	r5, #0
 801db3e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801db42:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801db46:	428c      	cmp	r4, r1
 801db48:	b28b      	uxth	r3, r1
 801db4a:	bfbf      	itttt	lt
 801db4c:	18ed      	addlt	r5, r5, r3
 801db4e:	1b2c      	sublt	r4, r5, r4
 801db50:	b2a5      	uxthlt	r5, r4
 801db52:	460c      	movlt	r4, r1
 801db54:	8891      	ldrh	r1, [r2, #4]
 801db56:	440b      	add	r3, r1
 801db58:	b21b      	sxth	r3, r3
 801db5a:	930f      	str	r3, [sp, #60]	; 0x3c
 801db5c:	88d3      	ldrh	r3, [r2, #6]
 801db5e:	8852      	ldrh	r2, [r2, #2]
 801db60:	4413      	add	r3, r2
 801db62:	b21b      	sxth	r3, r3
 801db64:	930d      	str	r3, [sp, #52]	; 0x34
 801db66:	4bbe      	ldr	r3, [pc, #760]	; (801de60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801db68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db6a:	f893 b000 	ldrb.w	fp, [r3]
 801db6e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801db72:	f1dc 0300 	rsbs	r3, ip, #0
 801db76:	eb43 030c 	adc.w	r3, r3, ip
 801db7a:	930e      	str	r3, [sp, #56]	; 0x38
 801db7c:	4621      	mov	r1, r4
 801db7e:	4653      	mov	r3, sl
 801db80:	a814      	add	r0, sp, #80	; 0x50
 801db82:	f7f6 fcce 	bl	8014522 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801db86:	4621      	mov	r1, r4
 801db88:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801db8c:	4653      	mov	r3, sl
 801db8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db90:	a814      	add	r0, sp, #80	; 0x50
 801db92:	f7f6 fce3 	bl	801455c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801db96:	a918      	add	r1, sp, #96	; 0x60
 801db98:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801db9c:	a817      	add	r0, sp, #92	; 0x5c
 801db9e:	f7f6 fe09 	bl	80147b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dba2:	f1ba 0f00 	cmp.w	sl, #0
 801dba6:	f040 80f4 	bne.w	801dd92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dbaa:	f1bb 0f01 	cmp.w	fp, #1
 801dbae:	f040 80f8 	bne.w	801dda2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801dbb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dbb4:	2b00      	cmp	r3, #0
 801dbb6:	f040 8145 	bne.w	801de44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dbba:	b2ba      	uxth	r2, r7
 801dbbc:	b905      	cbnz	r5, 801dbc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dbbe:	b16e      	cbz	r6, 801dbdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dbc0:	fb06 5302 	mla	r3, r6, r2, r5
 801dbc4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801dbc6:	fb08 f303 	mul.w	r3, r8, r3
 801dbca:	4631      	mov	r1, r6
 801dbcc:	f003 0607 	and.w	r6, r3, #7
 801dbd0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dbd4:	9328      	str	r3, [sp, #160]	; 0xa0
 801dbd6:	eba9 0301 	sub.w	r3, r9, r1
 801dbda:	930a      	str	r3, [sp, #40]	; 0x28
 801dbdc:	4651      	mov	r1, sl
 801dbde:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dbe0:	f7ff ff1c 	bl	801da1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dbe4:	4681      	mov	r9, r0
 801dbe6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dbe8:	f7ff ff42 	bl	801da70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801dbec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dbee:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dbf0:	eba3 0a01 	sub.w	sl, r3, r1
 801dbf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dbf6:	459a      	cmp	sl, r3
 801dbf8:	bfa8      	it	ge
 801dbfa:	469a      	movge	sl, r3
 801dbfc:	f1ba 0f00 	cmp.w	sl, #0
 801dc00:	4683      	mov	fp, r0
 801dc02:	f340 811a 	ble.w	801de3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dc08:	1b64      	subs	r4, r4, r5
 801dc0a:	1b1c      	subs	r4, r3, r4
 801dc0c:	42bc      	cmp	r4, r7
 801dc0e:	bfd4      	ite	le
 801dc10:	ebc5 0504 	rsble	r5, r5, r4
 801dc14:	ebc5 0507 	rsbgt	r5, r5, r7
 801dc18:	2d00      	cmp	r5, #0
 801dc1a:	f340 810e 	ble.w	801de3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc1e:	1b52      	subs	r2, r2, r5
 801dc20:	fb08 f302 	mul.w	r3, r8, r2
 801dc24:	930f      	str	r3, [sp, #60]	; 0x3c
 801dc26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dc28:	2b00      	cmp	r3, #0
 801dc2a:	f040 8116 	bne.w	801de5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dc2e:	4b8d      	ldr	r3, [pc, #564]	; (801de64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dc30:	6818      	ldr	r0, [r3, #0]
 801dc32:	6803      	ldr	r3, [r0, #0]
 801dc34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc36:	4798      	blx	r3
 801dc38:	2301      	movs	r3, #1
 801dc3a:	fa03 f308 	lsl.w	r3, r3, r8
 801dc3e:	4a8a      	ldr	r2, [pc, #552]	; (801de68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801dc40:	3b01      	subs	r3, #1
 801dc42:	b2db      	uxtb	r3, r3
 801dc44:	8811      	ldrh	r1, [r2, #0]
 801dc46:	930e      	str	r3, [sp, #56]	; 0x38
 801dc48:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801dc4c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801dc50:	fb01 2303 	mla	r3, r1, r3, r2
 801dc54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dc58:	930a      	str	r3, [sp, #40]	; 0x28
 801dc5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dc5c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801dc60:	9313      	str	r3, [sp, #76]	; 0x4c
 801dc62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dc64:	0a19      	lsrs	r1, r3, #8
 801dc66:	b2cb      	uxtb	r3, r1
 801dc68:	9312      	str	r3, [sp, #72]	; 0x48
 801dc6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dc6c:	b2db      	uxtb	r3, r3
 801dc6e:	9311      	str	r3, [sp, #68]	; 0x44
 801dc70:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dc72:	095a      	lsrs	r2, r3, #5
 801dc74:	4b7d      	ldr	r3, [pc, #500]	; (801de6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dc76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc7a:	400b      	ands	r3, r1
 801dc7c:	4313      	orrs	r3, r2
 801dc7e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801dc80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dc84:	4313      	orrs	r3, r2
 801dc86:	b29b      	uxth	r3, r3
 801dc88:	9310      	str	r3, [sp, #64]	; 0x40
 801dc8a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dc8c:	781a      	ldrb	r2, [r3, #0]
 801dc8e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dc92:	4132      	asrs	r2, r6
 801dc94:	fb05 b919 	mls	r9, r5, r9, fp
 801dc98:	fb03 fb05 	mul.w	fp, r3, r5
 801dc9c:	b2d2      	uxtb	r2, r2
 801dc9e:	930d      	str	r3, [sp, #52]	; 0x34
 801dca0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dca4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dca8:	f0c0 80f5 	bcc.w	801de96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dcac:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dcb0:	46ae      	mov	lr, r5
 801dcb2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dcb6:	f0c0 80dd 	bcc.w	801de74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dcba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dcbc:	4013      	ands	r3, r2
 801dcbe:	d055      	beq.n	801dd6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dcc0:	20ff      	movs	r0, #255	; 0xff
 801dcc2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dcc4:	fb90 f1f1 	sdiv	r1, r0, r1
 801dcc8:	434b      	muls	r3, r1
 801dcca:	2bfe      	cmp	r3, #254	; 0xfe
 801dccc:	dd03      	ble.n	801dcd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dcce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dcd0:	4281      	cmp	r1, r0
 801dcd2:	f000 80cd 	beq.w	801de70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dcd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dcd8:	f8bc 4000 	ldrh.w	r4, [ip]
 801dcdc:	fb11 f303 	smulbb	r3, r1, r3
 801dce0:	b29b      	uxth	r3, r3
 801dce2:	1c59      	adds	r1, r3, #1
 801dce4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dce8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dcec:	b29f      	uxth	r7, r3
 801dcee:	43db      	mvns	r3, r3
 801dcf0:	b2db      	uxtb	r3, r3
 801dcf2:	9309      	str	r3, [sp, #36]	; 0x24
 801dcf4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dcf6:	1220      	asrs	r0, r4, #8
 801dcf8:	fb13 f907 	smulbb	r9, r3, r7
 801dcfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dd00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd02:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dd06:	fb00 9003 	mla	r0, r0, r3, r9
 801dd0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dd0c:	10e1      	asrs	r1, r4, #3
 801dd0e:	fb13 f907 	smulbb	r9, r3, r7
 801dd12:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dd16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd18:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dd1c:	fb01 9103 	mla	r1, r1, r3, r9
 801dd20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dd22:	00e4      	lsls	r4, r4, #3
 801dd24:	fb13 f707 	smulbb	r7, r3, r7
 801dd28:	b2e4      	uxtb	r4, r4
 801dd2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd2c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dd30:	fb04 7403 	mla	r4, r4, r3, r7
 801dd34:	b280      	uxth	r0, r0
 801dd36:	b2a4      	uxth	r4, r4
 801dd38:	1c43      	adds	r3, r0, #1
 801dd3a:	f104 0901 	add.w	r9, r4, #1
 801dd3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dd42:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dd46:	b289      	uxth	r1, r1
 801dd48:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dd4c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dd50:	ea49 0000 	orr.w	r0, r9, r0
 801dd54:	f101 0901 	add.w	r9, r1, #1
 801dd58:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dd5c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd60:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd64:	ea40 0009 	orr.w	r0, r0, r9
 801dd68:	f8ac 0000 	strh.w	r0, [ip]
 801dd6c:	4446      	add	r6, r8
 801dd6e:	b2b6      	uxth	r6, r6
 801dd70:	2e07      	cmp	r6, #7
 801dd72:	bf81      	itttt	hi
 801dd74:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801dd76:	785a      	ldrbhi	r2, [r3, #1]
 801dd78:	3301      	addhi	r3, #1
 801dd7a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801dd7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dd7e:	bf9a      	itte	ls
 801dd80:	fa42 f208 	asrls.w	r2, r2, r8
 801dd84:	b2d2      	uxtbls	r2, r2
 801dd86:	2600      	movhi	r6, #0
 801dd88:	449c      	add	ip, r3
 801dd8a:	e792      	b.n	801dcb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801dd8c:	441c      	add	r4, r3
 801dd8e:	b224      	sxth	r4, r4
 801dd90:	e6d5      	b.n	801db3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dd92:	f1ba 0f01 	cmp.w	sl, #1
 801dd96:	f47f af0c 	bne.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd9a:	f1bb 0f01 	cmp.w	fp, #1
 801dd9e:	f47f af08 	bne.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dda2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801de64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801dda6:	f8db 0000 	ldr.w	r0, [fp]
 801ddaa:	6803      	ldr	r3, [r0, #0]
 801ddac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ddae:	4798      	blx	r3
 801ddb0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ddb4:	465a      	mov	r2, fp
 801ddb6:	d006      	beq.n	801ddc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ddb8:	f1b8 0f04 	cmp.w	r8, #4
 801ddbc:	d140      	bne.n	801de40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ddbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ddc0:	3300      	adds	r3, #0
 801ddc2:	bf18      	it	ne
 801ddc4:	2301      	movne	r3, #1
 801ddc6:	0580      	lsls	r0, r0, #22
 801ddc8:	d56e      	bpl.n	801dea8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ddca:	f1b8 0f08 	cmp.w	r8, #8
 801ddce:	d16b      	bne.n	801dea8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ddd0:	2b00      	cmp	r3, #0
 801ddd2:	bf0c      	ite	eq
 801ddd4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ddd8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801dddc:	2d00      	cmp	r5, #0
 801ddde:	f47f aee8 	bne.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dde2:	2e00      	cmp	r6, #0
 801dde4:	f47f aee5 	bne.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dde8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ddea:	19e3      	adds	r3, r4, r7
 801ddec:	4283      	cmp	r3, r0
 801ddee:	f73f aee0 	bgt.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ddf4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ddf6:	444b      	add	r3, r9
 801ddf8:	4283      	cmp	r3, r0
 801ddfa:	f73f aeda 	bgt.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddfe:	6810      	ldr	r0, [r2, #0]
 801de00:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801de04:	6804      	ldr	r4, [r0, #0]
 801de06:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801de0a:	b2bf      	uxth	r7, r7
 801de0c:	f1b8 0f08 	cmp.w	r8, #8
 801de10:	f04f 0500 	mov.w	r5, #0
 801de14:	bf18      	it	ne
 801de16:	3701      	addne	r7, #1
 801de18:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801de1c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801de1e:	9104      	str	r1, [sp, #16]
 801de20:	bf18      	it	ne
 801de22:	f027 0701 	bicne.w	r7, r7, #1
 801de26:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801de28:	bf18      	it	ne
 801de2a:	b2bf      	uxthne	r7, r7
 801de2c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801de30:	e9cd 7900 	strd	r7, r9, [sp]
 801de34:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801de36:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801de38:	47a0      	blx	r4
 801de3a:	b019      	add	sp, #100	; 0x64
 801de3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de40:	2300      	movs	r3, #0
 801de42:	e7c0      	b.n	801ddc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801de44:	2208      	movs	r2, #8
 801de46:	fb92 f3f8 	sdiv	r3, r2, r8
 801de4a:	1e5a      	subs	r2, r3, #1
 801de4c:	443a      	add	r2, r7
 801de4e:	fb92 f2f3 	sdiv	r2, r2, r3
 801de52:	fb12 f203 	smulbb	r2, r2, r3
 801de56:	b292      	uxth	r2, r2
 801de58:	e6b0      	b.n	801dbbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801de5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801de5c:	e6ec      	b.n	801dc38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801de5e:	bf00      	nop
 801de60:	20012d9c 	.word	0x20012d9c
 801de64:	20012da4 	.word	0x20012da4
 801de68:	20012d9e 	.word	0x20012d9e
 801de6c:	00fff800 	.word	0x00fff800
 801de70:	9810      	ldr	r0, [sp, #64]	; 0x40
 801de72:	e779      	b.n	801dd68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801de74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801de76:	b153      	cbz	r3, 801de8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801de78:	441e      	add	r6, r3
 801de7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801de7c:	b2b6      	uxth	r6, r6
 801de7e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801de82:	f006 0607 	and.w	r6, r6, #7
 801de86:	781a      	ldrb	r2, [r3, #0]
 801de88:	9328      	str	r3, [sp, #160]	; 0xa0
 801de8a:	4132      	asrs	r2, r6
 801de8c:	b2d2      	uxtb	r2, r2
 801de8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801de90:	445b      	add	r3, fp
 801de92:	930a      	str	r3, [sp, #40]	; 0x28
 801de94:	e706      	b.n	801dca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801de96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801de98:	2b00      	cmp	r3, #0
 801de9a:	d1ce      	bne.n	801de3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de9c:	4b05      	ldr	r3, [pc, #20]	; (801deb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801de9e:	6818      	ldr	r0, [r3, #0]
 801dea0:	6803      	ldr	r3, [r0, #0]
 801dea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dea4:	4798      	blx	r3
 801dea6:	e7c8      	b.n	801de3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dea8:	2b00      	cmp	r3, #0
 801deaa:	f43f ae82 	beq.w	801dbb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801deae:	f44f 7180 	mov.w	r1, #256	; 0x100
 801deb2:	e793      	b.n	801dddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801deb4:	20012da4 	.word	0x20012da4

0801deb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801deb8:	b538      	push	{r3, r4, r5, lr}
 801deba:	4c15      	ldr	r4, [pc, #84]	; (801df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801debc:	7823      	ldrb	r3, [r4, #0]
 801debe:	f3bf 8f5b 	dmb	ish
 801dec2:	07da      	lsls	r2, r3, #31
 801dec4:	4605      	mov	r5, r0
 801dec6:	d40b      	bmi.n	801dee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801dec8:	4620      	mov	r0, r4
 801deca:	f00a fee2 	bl	8028c92 <__cxa_guard_acquire>
 801dece:	b138      	cbz	r0, 801dee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ded0:	4620      	mov	r0, r4
 801ded2:	f00a feea 	bl	8028caa <__cxa_guard_release>
 801ded6:	4a0f      	ldr	r2, [pc, #60]	; (801df14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ded8:	490f      	ldr	r1, [pc, #60]	; (801df18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801deda:	4810      	ldr	r0, [pc, #64]	; (801df1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dedc:	f00a fed2 	bl	8028c84 <__aeabi_atexit>
 801dee0:	4c0f      	ldr	r4, [pc, #60]	; (801df20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801dee2:	7823      	ldrb	r3, [r4, #0]
 801dee4:	f3bf 8f5b 	dmb	ish
 801dee8:	07db      	lsls	r3, r3, #31
 801deea:	d40b      	bmi.n	801df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801deec:	4620      	mov	r0, r4
 801deee:	f00a fed0 	bl	8028c92 <__cxa_guard_acquire>
 801def2:	b138      	cbz	r0, 801df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801def4:	4620      	mov	r0, r4
 801def6:	f00a fed8 	bl	8028caa <__cxa_guard_release>
 801defa:	4a06      	ldr	r2, [pc, #24]	; (801df14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801defc:	4909      	ldr	r1, [pc, #36]	; (801df24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801defe:	480a      	ldr	r0, [pc, #40]	; (801df28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801df00:	f00a fec0 	bl	8028c84 <__aeabi_atexit>
 801df04:	4b05      	ldr	r3, [pc, #20]	; (801df1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801df06:	612b      	str	r3, [r5, #16]
 801df08:	4b07      	ldr	r3, [pc, #28]	; (801df28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801df0a:	616b      	str	r3, [r5, #20]
 801df0c:	bd38      	pop	{r3, r4, r5, pc}
 801df0e:	bf00      	nop
 801df10:	20012e84 	.word	0x20012e84
 801df14:	20000000 	.word	0x20000000
 801df18:	0801acbb 	.word	0x0801acbb
 801df1c:	200000d4 	.word	0x200000d4
 801df20:	20012e88 	.word	0x20012e88
 801df24:	0801acb9 	.word	0x0801acb9
 801df28:	200000d8 	.word	0x200000d8

0801df2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801df2c:	b538      	push	{r3, r4, r5, lr}
 801df2e:	4c15      	ldr	r4, [pc, #84]	; (801df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801df30:	7823      	ldrb	r3, [r4, #0]
 801df32:	f3bf 8f5b 	dmb	ish
 801df36:	07da      	lsls	r2, r3, #31
 801df38:	4605      	mov	r5, r0
 801df3a:	d40b      	bmi.n	801df54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801df3c:	4620      	mov	r0, r4
 801df3e:	f00a fea8 	bl	8028c92 <__cxa_guard_acquire>
 801df42:	b138      	cbz	r0, 801df54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801df44:	4620      	mov	r0, r4
 801df46:	f00a feb0 	bl	8028caa <__cxa_guard_release>
 801df4a:	4a0f      	ldr	r2, [pc, #60]	; (801df88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801df4c:	490f      	ldr	r1, [pc, #60]	; (801df8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801df4e:	4810      	ldr	r0, [pc, #64]	; (801df90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801df50:	f00a fe98 	bl	8028c84 <__aeabi_atexit>
 801df54:	4c0f      	ldr	r4, [pc, #60]	; (801df94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801df56:	7823      	ldrb	r3, [r4, #0]
 801df58:	f3bf 8f5b 	dmb	ish
 801df5c:	07db      	lsls	r3, r3, #31
 801df5e:	d40b      	bmi.n	801df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801df60:	4620      	mov	r0, r4
 801df62:	f00a fe96 	bl	8028c92 <__cxa_guard_acquire>
 801df66:	b138      	cbz	r0, 801df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801df68:	4620      	mov	r0, r4
 801df6a:	f00a fe9e 	bl	8028caa <__cxa_guard_release>
 801df6e:	4a06      	ldr	r2, [pc, #24]	; (801df88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801df70:	4909      	ldr	r1, [pc, #36]	; (801df98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801df72:	480a      	ldr	r0, [pc, #40]	; (801df9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801df74:	f00a fe86 	bl	8028c84 <__aeabi_atexit>
 801df78:	4b05      	ldr	r3, [pc, #20]	; (801df90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801df7a:	60ab      	str	r3, [r5, #8]
 801df7c:	4b07      	ldr	r3, [pc, #28]	; (801df9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801df7e:	60eb      	str	r3, [r5, #12]
 801df80:	bd38      	pop	{r3, r4, r5, pc}
 801df82:	bf00      	nop
 801df84:	20012e5c 	.word	0x20012e5c
 801df88:	20000000 	.word	0x20000000
 801df8c:	0801acbf 	.word	0x0801acbf
 801df90:	200000ac 	.word	0x200000ac
 801df94:	20012e60 	.word	0x20012e60
 801df98:	0801acbd 	.word	0x0801acbd
 801df9c:	200000b0 	.word	0x200000b0

0801dfa0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dfa0:	b510      	push	{r4, lr}
 801dfa2:	4604      	mov	r4, r0
 801dfa4:	f7ff ff88 	bl	801deb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dfa8:	4620      	mov	r0, r4
 801dfaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dfae:	f7ff bfbd 	b.w	801df2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dfb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dfb4:	b538      	push	{r3, r4, r5, lr}
 801dfb6:	4c15      	ldr	r4, [pc, #84]	; (801e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dfb8:	7823      	ldrb	r3, [r4, #0]
 801dfba:	f3bf 8f5b 	dmb	ish
 801dfbe:	07da      	lsls	r2, r3, #31
 801dfc0:	4605      	mov	r5, r0
 801dfc2:	d40b      	bmi.n	801dfdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dfc4:	4620      	mov	r0, r4
 801dfc6:	f00a fe64 	bl	8028c92 <__cxa_guard_acquire>
 801dfca:	b138      	cbz	r0, 801dfdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dfcc:	4620      	mov	r0, r4
 801dfce:	f00a fe6c 	bl	8028caa <__cxa_guard_release>
 801dfd2:	4a0f      	ldr	r2, [pc, #60]	; (801e010 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dfd4:	490f      	ldr	r1, [pc, #60]	; (801e014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801dfd6:	4810      	ldr	r0, [pc, #64]	; (801e018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dfd8:	f00a fe54 	bl	8028c84 <__aeabi_atexit>
 801dfdc:	4c0f      	ldr	r4, [pc, #60]	; (801e01c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801dfde:	7823      	ldrb	r3, [r4, #0]
 801dfe0:	f3bf 8f5b 	dmb	ish
 801dfe4:	07db      	lsls	r3, r3, #31
 801dfe6:	d40b      	bmi.n	801e000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dfe8:	4620      	mov	r0, r4
 801dfea:	f00a fe52 	bl	8028c92 <__cxa_guard_acquire>
 801dfee:	b138      	cbz	r0, 801e000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dff0:	4620      	mov	r0, r4
 801dff2:	f00a fe5a 	bl	8028caa <__cxa_guard_release>
 801dff6:	4a06      	ldr	r2, [pc, #24]	; (801e010 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dff8:	4909      	ldr	r1, [pc, #36]	; (801e020 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801dffa:	480a      	ldr	r0, [pc, #40]	; (801e024 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801dffc:	f00a fe42 	bl	8028c84 <__aeabi_atexit>
 801e000:	4b05      	ldr	r3, [pc, #20]	; (801e018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e002:	622b      	str	r3, [r5, #32]
 801e004:	4b07      	ldr	r3, [pc, #28]	; (801e024 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e006:	626b      	str	r3, [r5, #36]	; 0x24
 801e008:	bd38      	pop	{r3, r4, r5, pc}
 801e00a:	bf00      	nop
 801e00c:	20012e8c 	.word	0x20012e8c
 801e010:	20000000 	.word	0x20000000
 801e014:	0801acb3 	.word	0x0801acb3
 801e018:	200000dc 	.word	0x200000dc
 801e01c:	20012e90 	.word	0x20012e90
 801e020:	0801acb1 	.word	0x0801acb1
 801e024:	200000e0 	.word	0x200000e0

0801e028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e028:	b538      	push	{r3, r4, r5, lr}
 801e02a:	4c15      	ldr	r4, [pc, #84]	; (801e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e02c:	7823      	ldrb	r3, [r4, #0]
 801e02e:	f3bf 8f5b 	dmb	ish
 801e032:	07da      	lsls	r2, r3, #31
 801e034:	4605      	mov	r5, r0
 801e036:	d40b      	bmi.n	801e050 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e038:	4620      	mov	r0, r4
 801e03a:	f00a fe2a 	bl	8028c92 <__cxa_guard_acquire>
 801e03e:	b138      	cbz	r0, 801e050 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e040:	4620      	mov	r0, r4
 801e042:	f00a fe32 	bl	8028caa <__cxa_guard_release>
 801e046:	4a0f      	ldr	r2, [pc, #60]	; (801e084 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e048:	490f      	ldr	r1, [pc, #60]	; (801e088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e04a:	4810      	ldr	r0, [pc, #64]	; (801e08c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e04c:	f00a fe1a 	bl	8028c84 <__aeabi_atexit>
 801e050:	4c0f      	ldr	r4, [pc, #60]	; (801e090 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e052:	7823      	ldrb	r3, [r4, #0]
 801e054:	f3bf 8f5b 	dmb	ish
 801e058:	07db      	lsls	r3, r3, #31
 801e05a:	d40b      	bmi.n	801e074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e05c:	4620      	mov	r0, r4
 801e05e:	f00a fe18 	bl	8028c92 <__cxa_guard_acquire>
 801e062:	b138      	cbz	r0, 801e074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e064:	4620      	mov	r0, r4
 801e066:	f00a fe20 	bl	8028caa <__cxa_guard_release>
 801e06a:	4a06      	ldr	r2, [pc, #24]	; (801e084 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e06c:	4909      	ldr	r1, [pc, #36]	; (801e094 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e06e:	480a      	ldr	r0, [pc, #40]	; (801e098 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e070:	f00a fe08 	bl	8028c84 <__aeabi_atexit>
 801e074:	4b05      	ldr	r3, [pc, #20]	; (801e08c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e076:	61ab      	str	r3, [r5, #24]
 801e078:	4b07      	ldr	r3, [pc, #28]	; (801e098 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e07a:	61eb      	str	r3, [r5, #28]
 801e07c:	bd38      	pop	{r3, r4, r5, pc}
 801e07e:	bf00      	nop
 801e080:	20012e64 	.word	0x20012e64
 801e084:	20000000 	.word	0x20000000
 801e088:	0801acb7 	.word	0x0801acb7
 801e08c:	200000b4 	.word	0x200000b4
 801e090:	20012e68 	.word	0x20012e68
 801e094:	0801acb5 	.word	0x0801acb5
 801e098:	200000b8 	.word	0x200000b8

0801e09c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e09c:	b510      	push	{r4, lr}
 801e09e:	4604      	mov	r4, r0
 801e0a0:	f7ff ff88 	bl	801dfb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e0a4:	4620      	mov	r0, r4
 801e0a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0aa:	f7ff bfbd 	b.w	801e028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e0b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e0b0:	b538      	push	{r3, r4, r5, lr}
 801e0b2:	4c15      	ldr	r4, [pc, #84]	; (801e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e0b4:	7823      	ldrb	r3, [r4, #0]
 801e0b6:	f3bf 8f5b 	dmb	ish
 801e0ba:	07da      	lsls	r2, r3, #31
 801e0bc:	4605      	mov	r5, r0
 801e0be:	d40b      	bmi.n	801e0d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e0c0:	4620      	mov	r0, r4
 801e0c2:	f00a fde6 	bl	8028c92 <__cxa_guard_acquire>
 801e0c6:	b138      	cbz	r0, 801e0d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e0c8:	4620      	mov	r0, r4
 801e0ca:	f00a fdee 	bl	8028caa <__cxa_guard_release>
 801e0ce:	4a0f      	ldr	r2, [pc, #60]	; (801e10c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e0d0:	490f      	ldr	r1, [pc, #60]	; (801e110 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e0d2:	4810      	ldr	r0, [pc, #64]	; (801e114 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e0d4:	f00a fdd6 	bl	8028c84 <__aeabi_atexit>
 801e0d8:	4c0f      	ldr	r4, [pc, #60]	; (801e118 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e0da:	7823      	ldrb	r3, [r4, #0]
 801e0dc:	f3bf 8f5b 	dmb	ish
 801e0e0:	07db      	lsls	r3, r3, #31
 801e0e2:	d40b      	bmi.n	801e0fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e0e4:	4620      	mov	r0, r4
 801e0e6:	f00a fdd4 	bl	8028c92 <__cxa_guard_acquire>
 801e0ea:	b138      	cbz	r0, 801e0fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e0ec:	4620      	mov	r0, r4
 801e0ee:	f00a fddc 	bl	8028caa <__cxa_guard_release>
 801e0f2:	4a06      	ldr	r2, [pc, #24]	; (801e10c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e0f4:	4909      	ldr	r1, [pc, #36]	; (801e11c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e0f6:	480a      	ldr	r0, [pc, #40]	; (801e120 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e0f8:	f00a fdc4 	bl	8028c84 <__aeabi_atexit>
 801e0fc:	4b05      	ldr	r3, [pc, #20]	; (801e114 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e0fe:	632b      	str	r3, [r5, #48]	; 0x30
 801e100:	4b07      	ldr	r3, [pc, #28]	; (801e120 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e102:	636b      	str	r3, [r5, #52]	; 0x34
 801e104:	bd38      	pop	{r3, r4, r5, pc}
 801e106:	bf00      	nop
 801e108:	20012e9c 	.word	0x20012e9c
 801e10c:	20000000 	.word	0x20000000
 801e110:	0801acab 	.word	0x0801acab
 801e114:	200000ec 	.word	0x200000ec
 801e118:	20012ea0 	.word	0x20012ea0
 801e11c:	0801aca9 	.word	0x0801aca9
 801e120:	200000f0 	.word	0x200000f0

0801e124 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e124:	b538      	push	{r3, r4, r5, lr}
 801e126:	4c15      	ldr	r4, [pc, #84]	; (801e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e128:	7823      	ldrb	r3, [r4, #0]
 801e12a:	f3bf 8f5b 	dmb	ish
 801e12e:	07da      	lsls	r2, r3, #31
 801e130:	4605      	mov	r5, r0
 801e132:	d40b      	bmi.n	801e14c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e134:	4620      	mov	r0, r4
 801e136:	f00a fdac 	bl	8028c92 <__cxa_guard_acquire>
 801e13a:	b138      	cbz	r0, 801e14c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e13c:	4620      	mov	r0, r4
 801e13e:	f00a fdb4 	bl	8028caa <__cxa_guard_release>
 801e142:	4a0f      	ldr	r2, [pc, #60]	; (801e180 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e144:	490f      	ldr	r1, [pc, #60]	; (801e184 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e146:	4810      	ldr	r0, [pc, #64]	; (801e188 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e148:	f00a fd9c 	bl	8028c84 <__aeabi_atexit>
 801e14c:	4c0f      	ldr	r4, [pc, #60]	; (801e18c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e14e:	7823      	ldrb	r3, [r4, #0]
 801e150:	f3bf 8f5b 	dmb	ish
 801e154:	07db      	lsls	r3, r3, #31
 801e156:	d40b      	bmi.n	801e170 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e158:	4620      	mov	r0, r4
 801e15a:	f00a fd9a 	bl	8028c92 <__cxa_guard_acquire>
 801e15e:	b138      	cbz	r0, 801e170 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e160:	4620      	mov	r0, r4
 801e162:	f00a fda2 	bl	8028caa <__cxa_guard_release>
 801e166:	4a06      	ldr	r2, [pc, #24]	; (801e180 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e168:	4909      	ldr	r1, [pc, #36]	; (801e190 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e16a:	480a      	ldr	r0, [pc, #40]	; (801e194 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e16c:	f00a fd8a 	bl	8028c84 <__aeabi_atexit>
 801e170:	4b05      	ldr	r3, [pc, #20]	; (801e188 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e172:	62ab      	str	r3, [r5, #40]	; 0x28
 801e174:	4b07      	ldr	r3, [pc, #28]	; (801e194 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e176:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e178:	bd38      	pop	{r3, r4, r5, pc}
 801e17a:	bf00      	nop
 801e17c:	20012e6c 	.word	0x20012e6c
 801e180:	20000000 	.word	0x20000000
 801e184:	0801acaf 	.word	0x0801acaf
 801e188:	200000bc 	.word	0x200000bc
 801e18c:	20012e70 	.word	0x20012e70
 801e190:	0801acad 	.word	0x0801acad
 801e194:	200000c0 	.word	0x200000c0

0801e198 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e198:	b510      	push	{r4, lr}
 801e19a:	4604      	mov	r4, r0
 801e19c:	f7ff ff88 	bl	801e0b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e1a0:	4620      	mov	r0, r4
 801e1a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e1a6:	f7ff bfbd 	b.w	801e124 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e1ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e1ac:	b538      	push	{r3, r4, r5, lr}
 801e1ae:	4c15      	ldr	r4, [pc, #84]	; (801e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e1b0:	7823      	ldrb	r3, [r4, #0]
 801e1b2:	f3bf 8f5b 	dmb	ish
 801e1b6:	07da      	lsls	r2, r3, #31
 801e1b8:	4605      	mov	r5, r0
 801e1ba:	d40b      	bmi.n	801e1d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e1bc:	4620      	mov	r0, r4
 801e1be:	f00a fd68 	bl	8028c92 <__cxa_guard_acquire>
 801e1c2:	b138      	cbz	r0, 801e1d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e1c4:	4620      	mov	r0, r4
 801e1c6:	f00a fd70 	bl	8028caa <__cxa_guard_release>
 801e1ca:	4a0f      	ldr	r2, [pc, #60]	; (801e208 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e1cc:	490f      	ldr	r1, [pc, #60]	; (801e20c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e1ce:	4810      	ldr	r0, [pc, #64]	; (801e210 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e1d0:	f00a fd58 	bl	8028c84 <__aeabi_atexit>
 801e1d4:	4c0f      	ldr	r4, [pc, #60]	; (801e214 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e1d6:	7823      	ldrb	r3, [r4, #0]
 801e1d8:	f3bf 8f5b 	dmb	ish
 801e1dc:	07db      	lsls	r3, r3, #31
 801e1de:	d40b      	bmi.n	801e1f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e1e0:	4620      	mov	r0, r4
 801e1e2:	f00a fd56 	bl	8028c92 <__cxa_guard_acquire>
 801e1e6:	b138      	cbz	r0, 801e1f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e1e8:	4620      	mov	r0, r4
 801e1ea:	f00a fd5e 	bl	8028caa <__cxa_guard_release>
 801e1ee:	4a06      	ldr	r2, [pc, #24]	; (801e208 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e1f0:	4909      	ldr	r1, [pc, #36]	; (801e218 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e1f2:	480a      	ldr	r0, [pc, #40]	; (801e21c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e1f4:	f00a fd46 	bl	8028c84 <__aeabi_atexit>
 801e1f8:	4b05      	ldr	r3, [pc, #20]	; (801e210 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e1fa:	652b      	str	r3, [r5, #80]	; 0x50
 801e1fc:	4b07      	ldr	r3, [pc, #28]	; (801e21c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e1fe:	656b      	str	r3, [r5, #84]	; 0x54
 801e200:	bd38      	pop	{r3, r4, r5, pc}
 801e202:	bf00      	nop
 801e204:	20012ea4 	.word	0x20012ea4
 801e208:	20000000 	.word	0x20000000
 801e20c:	0801ac9b 	.word	0x0801ac9b
 801e210:	200000f4 	.word	0x200000f4
 801e214:	20012ea8 	.word	0x20012ea8
 801e218:	0801ac99 	.word	0x0801ac99
 801e21c:	200000f8 	.word	0x200000f8

0801e220 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e220:	b538      	push	{r3, r4, r5, lr}
 801e222:	4c15      	ldr	r4, [pc, #84]	; (801e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e224:	7823      	ldrb	r3, [r4, #0]
 801e226:	f3bf 8f5b 	dmb	ish
 801e22a:	07da      	lsls	r2, r3, #31
 801e22c:	4605      	mov	r5, r0
 801e22e:	d40b      	bmi.n	801e248 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e230:	4620      	mov	r0, r4
 801e232:	f00a fd2e 	bl	8028c92 <__cxa_guard_acquire>
 801e236:	b138      	cbz	r0, 801e248 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e238:	4620      	mov	r0, r4
 801e23a:	f00a fd36 	bl	8028caa <__cxa_guard_release>
 801e23e:	4a0f      	ldr	r2, [pc, #60]	; (801e27c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e240:	490f      	ldr	r1, [pc, #60]	; (801e280 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e242:	4810      	ldr	r0, [pc, #64]	; (801e284 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e244:	f00a fd1e 	bl	8028c84 <__aeabi_atexit>
 801e248:	4c0f      	ldr	r4, [pc, #60]	; (801e288 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e24a:	7823      	ldrb	r3, [r4, #0]
 801e24c:	f3bf 8f5b 	dmb	ish
 801e250:	07db      	lsls	r3, r3, #31
 801e252:	d40b      	bmi.n	801e26c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e254:	4620      	mov	r0, r4
 801e256:	f00a fd1c 	bl	8028c92 <__cxa_guard_acquire>
 801e25a:	b138      	cbz	r0, 801e26c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e25c:	4620      	mov	r0, r4
 801e25e:	f00a fd24 	bl	8028caa <__cxa_guard_release>
 801e262:	4a06      	ldr	r2, [pc, #24]	; (801e27c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e264:	4909      	ldr	r1, [pc, #36]	; (801e28c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e266:	480a      	ldr	r0, [pc, #40]	; (801e290 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e268:	f00a fd0c 	bl	8028c84 <__aeabi_atexit>
 801e26c:	4b05      	ldr	r3, [pc, #20]	; (801e284 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e26e:	64ab      	str	r3, [r5, #72]	; 0x48
 801e270:	4b07      	ldr	r3, [pc, #28]	; (801e290 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e272:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e274:	bd38      	pop	{r3, r4, r5, pc}
 801e276:	bf00      	nop
 801e278:	20012eac 	.word	0x20012eac
 801e27c:	20000000 	.word	0x20000000
 801e280:	0801ac9f 	.word	0x0801ac9f
 801e284:	200000fc 	.word	0x200000fc
 801e288:	20012eb0 	.word	0x20012eb0
 801e28c:	0801ac9d 	.word	0x0801ac9d
 801e290:	20000100 	.word	0x20000100

0801e294 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e294:	b538      	push	{r3, r4, r5, lr}
 801e296:	4c15      	ldr	r4, [pc, #84]	; (801e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e298:	7823      	ldrb	r3, [r4, #0]
 801e29a:	f3bf 8f5b 	dmb	ish
 801e29e:	07da      	lsls	r2, r3, #31
 801e2a0:	4605      	mov	r5, r0
 801e2a2:	d40b      	bmi.n	801e2bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e2a4:	4620      	mov	r0, r4
 801e2a6:	f00a fcf4 	bl	8028c92 <__cxa_guard_acquire>
 801e2aa:	b138      	cbz	r0, 801e2bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e2ac:	4620      	mov	r0, r4
 801e2ae:	f00a fcfc 	bl	8028caa <__cxa_guard_release>
 801e2b2:	4a0f      	ldr	r2, [pc, #60]	; (801e2f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e2b4:	490f      	ldr	r1, [pc, #60]	; (801e2f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e2b6:	4810      	ldr	r0, [pc, #64]	; (801e2f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e2b8:	f00a fce4 	bl	8028c84 <__aeabi_atexit>
 801e2bc:	4c0f      	ldr	r4, [pc, #60]	; (801e2fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e2be:	7823      	ldrb	r3, [r4, #0]
 801e2c0:	f3bf 8f5b 	dmb	ish
 801e2c4:	07db      	lsls	r3, r3, #31
 801e2c6:	d40b      	bmi.n	801e2e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e2c8:	4620      	mov	r0, r4
 801e2ca:	f00a fce2 	bl	8028c92 <__cxa_guard_acquire>
 801e2ce:	b138      	cbz	r0, 801e2e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e2d0:	4620      	mov	r0, r4
 801e2d2:	f00a fcea 	bl	8028caa <__cxa_guard_release>
 801e2d6:	4a06      	ldr	r2, [pc, #24]	; (801e2f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e2d8:	4909      	ldr	r1, [pc, #36]	; (801e300 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e2da:	480a      	ldr	r0, [pc, #40]	; (801e304 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e2dc:	f00a fcd2 	bl	8028c84 <__aeabi_atexit>
 801e2e0:	4b05      	ldr	r3, [pc, #20]	; (801e2f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e2e2:	642b      	str	r3, [r5, #64]	; 0x40
 801e2e4:	4b07      	ldr	r3, [pc, #28]	; (801e304 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e2e6:	646b      	str	r3, [r5, #68]	; 0x44
 801e2e8:	bd38      	pop	{r3, r4, r5, pc}
 801e2ea:	bf00      	nop
 801e2ec:	20012e74 	.word	0x20012e74
 801e2f0:	20000000 	.word	0x20000000
 801e2f4:	0801aca3 	.word	0x0801aca3
 801e2f8:	200000c4 	.word	0x200000c4
 801e2fc:	20012e78 	.word	0x20012e78
 801e300:	0801aca1 	.word	0x0801aca1
 801e304:	200000c8 	.word	0x200000c8

0801e308 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e308:	b538      	push	{r3, r4, r5, lr}
 801e30a:	4c15      	ldr	r4, [pc, #84]	; (801e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e30c:	7823      	ldrb	r3, [r4, #0]
 801e30e:	f3bf 8f5b 	dmb	ish
 801e312:	07da      	lsls	r2, r3, #31
 801e314:	4605      	mov	r5, r0
 801e316:	d40b      	bmi.n	801e330 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e318:	4620      	mov	r0, r4
 801e31a:	f00a fcba 	bl	8028c92 <__cxa_guard_acquire>
 801e31e:	b138      	cbz	r0, 801e330 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e320:	4620      	mov	r0, r4
 801e322:	f00a fcc2 	bl	8028caa <__cxa_guard_release>
 801e326:	4a0f      	ldr	r2, [pc, #60]	; (801e364 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e328:	490f      	ldr	r1, [pc, #60]	; (801e368 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e32a:	4810      	ldr	r0, [pc, #64]	; (801e36c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e32c:	f00a fcaa 	bl	8028c84 <__aeabi_atexit>
 801e330:	4c0f      	ldr	r4, [pc, #60]	; (801e370 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e332:	7823      	ldrb	r3, [r4, #0]
 801e334:	f3bf 8f5b 	dmb	ish
 801e338:	07db      	lsls	r3, r3, #31
 801e33a:	d40b      	bmi.n	801e354 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e33c:	4620      	mov	r0, r4
 801e33e:	f00a fca8 	bl	8028c92 <__cxa_guard_acquire>
 801e342:	b138      	cbz	r0, 801e354 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e344:	4620      	mov	r0, r4
 801e346:	f00a fcb0 	bl	8028caa <__cxa_guard_release>
 801e34a:	4a06      	ldr	r2, [pc, #24]	; (801e364 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e34c:	4909      	ldr	r1, [pc, #36]	; (801e374 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e34e:	480a      	ldr	r0, [pc, #40]	; (801e378 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e350:	f00a fc98 	bl	8028c84 <__aeabi_atexit>
 801e354:	4b05      	ldr	r3, [pc, #20]	; (801e36c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e356:	63ab      	str	r3, [r5, #56]	; 0x38
 801e358:	4b07      	ldr	r3, [pc, #28]	; (801e378 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e35a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e35c:	bd38      	pop	{r3, r4, r5, pc}
 801e35e:	bf00      	nop
 801e360:	20012e94 	.word	0x20012e94
 801e364:	20000000 	.word	0x20000000
 801e368:	0801aca7 	.word	0x0801aca7
 801e36c:	200000e4 	.word	0x200000e4
 801e370:	20012e98 	.word	0x20012e98
 801e374:	0801aca5 	.word	0x0801aca5
 801e378:	200000e8 	.word	0x200000e8

0801e37c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e37c:	b510      	push	{r4, lr}
 801e37e:	4604      	mov	r4, r0
 801e380:	f7ff ff14 	bl	801e1ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e384:	4620      	mov	r0, r4
 801e386:	f7ff ff85 	bl	801e294 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e38a:	4620      	mov	r0, r4
 801e38c:	f7ff ff48 	bl	801e220 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e390:	4620      	mov	r0, r4
 801e392:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e396:	f7ff bfb7 	b.w	801e308 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e39c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e39c:	b538      	push	{r3, r4, r5, lr}
 801e39e:	4c15      	ldr	r4, [pc, #84]	; (801e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e3a0:	7823      	ldrb	r3, [r4, #0]
 801e3a2:	f3bf 8f5b 	dmb	ish
 801e3a6:	07da      	lsls	r2, r3, #31
 801e3a8:	4605      	mov	r5, r0
 801e3aa:	d40b      	bmi.n	801e3c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e3ac:	4620      	mov	r0, r4
 801e3ae:	f00a fc70 	bl	8028c92 <__cxa_guard_acquire>
 801e3b2:	b138      	cbz	r0, 801e3c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e3b4:	4620      	mov	r0, r4
 801e3b6:	f00a fc78 	bl	8028caa <__cxa_guard_release>
 801e3ba:	4a0f      	ldr	r2, [pc, #60]	; (801e3f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e3bc:	490f      	ldr	r1, [pc, #60]	; (801e3fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e3be:	4810      	ldr	r0, [pc, #64]	; (801e400 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e3c0:	f00a fc60 	bl	8028c84 <__aeabi_atexit>
 801e3c4:	4c0f      	ldr	r4, [pc, #60]	; (801e404 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e3c6:	7823      	ldrb	r3, [r4, #0]
 801e3c8:	f3bf 8f5b 	dmb	ish
 801e3cc:	07db      	lsls	r3, r3, #31
 801e3ce:	d40b      	bmi.n	801e3e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e3d0:	4620      	mov	r0, r4
 801e3d2:	f00a fc5e 	bl	8028c92 <__cxa_guard_acquire>
 801e3d6:	b138      	cbz	r0, 801e3e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e3d8:	4620      	mov	r0, r4
 801e3da:	f00a fc66 	bl	8028caa <__cxa_guard_release>
 801e3de:	4a06      	ldr	r2, [pc, #24]	; (801e3f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e3e0:	4909      	ldr	r1, [pc, #36]	; (801e408 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e3e2:	480a      	ldr	r0, [pc, #40]	; (801e40c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e3e4:	f00a fc4e 	bl	8028c84 <__aeabi_atexit>
 801e3e8:	4b05      	ldr	r3, [pc, #20]	; (801e400 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e3ea:	662b      	str	r3, [r5, #96]	; 0x60
 801e3ec:	4b07      	ldr	r3, [pc, #28]	; (801e40c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e3ee:	666b      	str	r3, [r5, #100]	; 0x64
 801e3f0:	bd38      	pop	{r3, r4, r5, pc}
 801e3f2:	bf00      	nop
 801e3f4:	20012e7c 	.word	0x20012e7c
 801e3f8:	20000000 	.word	0x20000000
 801e3fc:	0801ac93 	.word	0x0801ac93
 801e400:	200000cc 	.word	0x200000cc
 801e404:	20012e80 	.word	0x20012e80
 801e408:	0801ac91 	.word	0x0801ac91
 801e40c:	200000d0 	.word	0x200000d0

0801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e410:	b538      	push	{r3, r4, r5, lr}
 801e412:	4c15      	ldr	r4, [pc, #84]	; (801e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e414:	7823      	ldrb	r3, [r4, #0]
 801e416:	f3bf 8f5b 	dmb	ish
 801e41a:	07da      	lsls	r2, r3, #31
 801e41c:	4605      	mov	r5, r0
 801e41e:	d40b      	bmi.n	801e438 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e420:	4620      	mov	r0, r4
 801e422:	f00a fc36 	bl	8028c92 <__cxa_guard_acquire>
 801e426:	b138      	cbz	r0, 801e438 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e428:	4620      	mov	r0, r4
 801e42a:	f00a fc3e 	bl	8028caa <__cxa_guard_release>
 801e42e:	4a0f      	ldr	r2, [pc, #60]	; (801e46c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e430:	490f      	ldr	r1, [pc, #60]	; (801e470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e432:	4810      	ldr	r0, [pc, #64]	; (801e474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e434:	f00a fc26 	bl	8028c84 <__aeabi_atexit>
 801e438:	4c0f      	ldr	r4, [pc, #60]	; (801e478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e43a:	7823      	ldrb	r3, [r4, #0]
 801e43c:	f3bf 8f5b 	dmb	ish
 801e440:	07db      	lsls	r3, r3, #31
 801e442:	d40b      	bmi.n	801e45c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e444:	4620      	mov	r0, r4
 801e446:	f00a fc24 	bl	8028c92 <__cxa_guard_acquire>
 801e44a:	b138      	cbz	r0, 801e45c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e44c:	4620      	mov	r0, r4
 801e44e:	f00a fc2c 	bl	8028caa <__cxa_guard_release>
 801e452:	4a06      	ldr	r2, [pc, #24]	; (801e46c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e454:	4909      	ldr	r1, [pc, #36]	; (801e47c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e456:	480a      	ldr	r0, [pc, #40]	; (801e480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e458:	f00a fc14 	bl	8028c84 <__aeabi_atexit>
 801e45c:	4b05      	ldr	r3, [pc, #20]	; (801e474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e45e:	65ab      	str	r3, [r5, #88]	; 0x58
 801e460:	4b07      	ldr	r3, [pc, #28]	; (801e480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e462:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e464:	bd38      	pop	{r3, r4, r5, pc}
 801e466:	bf00      	nop
 801e468:	20012e54 	.word	0x20012e54
 801e46c:	20000000 	.word	0x20000000
 801e470:	0801ac97 	.word	0x0801ac97
 801e474:	200000a4 	.word	0x200000a4
 801e478:	20012e58 	.word	0x20012e58
 801e47c:	0801ac95 	.word	0x0801ac95
 801e480:	200000a8 	.word	0x200000a8

0801e484 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e484:	b510      	push	{r4, lr}
 801e486:	4604      	mov	r4, r0
 801e488:	f7ff ff88 	bl	801e39c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e48c:	4620      	mov	r0, r4
 801e48e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e492:	f7ff bfbd 	b.w	801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e498 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e498:	b538      	push	{r3, r4, r5, lr}
 801e49a:	4c15      	ldr	r4, [pc, #84]	; (801e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e49c:	7823      	ldrb	r3, [r4, #0]
 801e49e:	f3bf 8f5b 	dmb	ish
 801e4a2:	07da      	lsls	r2, r3, #31
 801e4a4:	4605      	mov	r5, r0
 801e4a6:	d40b      	bmi.n	801e4c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e4a8:	4620      	mov	r0, r4
 801e4aa:	f00a fbf2 	bl	8028c92 <__cxa_guard_acquire>
 801e4ae:	b138      	cbz	r0, 801e4c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e4b0:	4620      	mov	r0, r4
 801e4b2:	f00a fbfa 	bl	8028caa <__cxa_guard_release>
 801e4b6:	4a0f      	ldr	r2, [pc, #60]	; (801e4f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e4b8:	490f      	ldr	r1, [pc, #60]	; (801e4f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e4ba:	4810      	ldr	r0, [pc, #64]	; (801e4fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e4bc:	f00a fbe2 	bl	8028c84 <__aeabi_atexit>
 801e4c0:	4c0f      	ldr	r4, [pc, #60]	; (801e500 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e4c2:	7823      	ldrb	r3, [r4, #0]
 801e4c4:	f3bf 8f5b 	dmb	ish
 801e4c8:	07db      	lsls	r3, r3, #31
 801e4ca:	d40b      	bmi.n	801e4e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e4cc:	4620      	mov	r0, r4
 801e4ce:	f00a fbe0 	bl	8028c92 <__cxa_guard_acquire>
 801e4d2:	b138      	cbz	r0, 801e4e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e4d4:	4620      	mov	r0, r4
 801e4d6:	f00a fbe8 	bl	8028caa <__cxa_guard_release>
 801e4da:	4a06      	ldr	r2, [pc, #24]	; (801e4f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e4dc:	4909      	ldr	r1, [pc, #36]	; (801e504 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e4de:	480a      	ldr	r0, [pc, #40]	; (801e508 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e4e0:	f00a fbd0 	bl	8028c84 <__aeabi_atexit>
 801e4e4:	4b05      	ldr	r3, [pc, #20]	; (801e4fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e4e6:	672b      	str	r3, [r5, #112]	; 0x70
 801e4e8:	4b07      	ldr	r3, [pc, #28]	; (801e508 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e4ea:	676b      	str	r3, [r5, #116]	; 0x74
 801e4ec:	bd38      	pop	{r3, r4, r5, pc}
 801e4ee:	bf00      	nop
 801e4f0:	20012e4c 	.word	0x20012e4c
 801e4f4:	20000000 	.word	0x20000000
 801e4f8:	0801ac8b 	.word	0x0801ac8b
 801e4fc:	2000009c 	.word	0x2000009c
 801e500:	20012e50 	.word	0x20012e50
 801e504:	0801ac89 	.word	0x0801ac89
 801e508:	200000a0 	.word	0x200000a0

0801e50c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e50c:	b538      	push	{r3, r4, r5, lr}
 801e50e:	4c15      	ldr	r4, [pc, #84]	; (801e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e510:	7823      	ldrb	r3, [r4, #0]
 801e512:	f3bf 8f5b 	dmb	ish
 801e516:	07da      	lsls	r2, r3, #31
 801e518:	4605      	mov	r5, r0
 801e51a:	d40b      	bmi.n	801e534 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e51c:	4620      	mov	r0, r4
 801e51e:	f00a fbb8 	bl	8028c92 <__cxa_guard_acquire>
 801e522:	b138      	cbz	r0, 801e534 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e524:	4620      	mov	r0, r4
 801e526:	f00a fbc0 	bl	8028caa <__cxa_guard_release>
 801e52a:	4a0f      	ldr	r2, [pc, #60]	; (801e568 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e52c:	490f      	ldr	r1, [pc, #60]	; (801e56c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e52e:	4810      	ldr	r0, [pc, #64]	; (801e570 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e530:	f00a fba8 	bl	8028c84 <__aeabi_atexit>
 801e534:	4c0f      	ldr	r4, [pc, #60]	; (801e574 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e536:	7823      	ldrb	r3, [r4, #0]
 801e538:	f3bf 8f5b 	dmb	ish
 801e53c:	07db      	lsls	r3, r3, #31
 801e53e:	d40b      	bmi.n	801e558 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e540:	4620      	mov	r0, r4
 801e542:	f00a fba6 	bl	8028c92 <__cxa_guard_acquire>
 801e546:	b138      	cbz	r0, 801e558 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e548:	4620      	mov	r0, r4
 801e54a:	f00a fbae 	bl	8028caa <__cxa_guard_release>
 801e54e:	4a06      	ldr	r2, [pc, #24]	; (801e568 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e550:	4909      	ldr	r1, [pc, #36]	; (801e578 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e552:	480a      	ldr	r0, [pc, #40]	; (801e57c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e554:	f00a fb96 	bl	8028c84 <__aeabi_atexit>
 801e558:	4b05      	ldr	r3, [pc, #20]	; (801e570 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e55a:	66ab      	str	r3, [r5, #104]	; 0x68
 801e55c:	4b07      	ldr	r3, [pc, #28]	; (801e57c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e55e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e560:	bd38      	pop	{r3, r4, r5, pc}
 801e562:	bf00      	nop
 801e564:	20012e44 	.word	0x20012e44
 801e568:	20000000 	.word	0x20000000
 801e56c:	0801ac8f 	.word	0x0801ac8f
 801e570:	20000094 	.word	0x20000094
 801e574:	20012e48 	.word	0x20012e48
 801e578:	0801ac8d 	.word	0x0801ac8d
 801e57c:	20000098 	.word	0x20000098

0801e580 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e580:	b510      	push	{r4, lr}
 801e582:	4604      	mov	r4, r0
 801e584:	f7ff ff88 	bl	801e498 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e588:	4620      	mov	r0, r4
 801e58a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e58e:	f7ff bfbd 	b.w	801e50c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e592 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e592:	b510      	push	{r4, lr}
 801e594:	4604      	mov	r4, r0
 801e596:	f7ff fff3 	bl	801e580 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e59a:	4620      	mov	r0, r4
 801e59c:	f7ff ff72 	bl	801e484 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e5a0:	4620      	mov	r0, r4
 801e5a2:	f7ff fdf9 	bl	801e198 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e5a6:	4620      	mov	r0, r4
 801e5a8:	f7ff fcfa 	bl	801dfa0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e5ac:	4620      	mov	r0, r4
 801e5ae:	f7ff fd75 	bl	801e09c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e5b2:	4620      	mov	r0, r4
 801e5b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e5b8:	f7ff bee0 	b.w	801e37c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e5bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e5bc:	b538      	push	{r3, r4, r5, lr}
 801e5be:	4c0b      	ldr	r4, [pc, #44]	; (801e5ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e5c0:	7823      	ldrb	r3, [r4, #0]
 801e5c2:	f3bf 8f5b 	dmb	ish
 801e5c6:	07db      	lsls	r3, r3, #31
 801e5c8:	4605      	mov	r5, r0
 801e5ca:	d40b      	bmi.n	801e5e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e5cc:	4620      	mov	r0, r4
 801e5ce:	f00a fb60 	bl	8028c92 <__cxa_guard_acquire>
 801e5d2:	b138      	cbz	r0, 801e5e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e5d4:	4620      	mov	r0, r4
 801e5d6:	f00a fb68 	bl	8028caa <__cxa_guard_release>
 801e5da:	4a05      	ldr	r2, [pc, #20]	; (801e5f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e5dc:	4905      	ldr	r1, [pc, #20]	; (801e5f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e5de:	4806      	ldr	r0, [pc, #24]	; (801e5f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e5e0:	f00a fb50 	bl	8028c84 <__aeabi_atexit>
 801e5e4:	4b04      	ldr	r3, [pc, #16]	; (801e5f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e5e6:	67ab      	str	r3, [r5, #120]	; 0x78
 801e5e8:	bd38      	pop	{r3, r4, r5, pc}
 801e5ea:	bf00      	nop
 801e5ec:	20012e38 	.word	0x20012e38
 801e5f0:	20000000 	.word	0x20000000
 801e5f4:	0801ac87 	.word	0x0801ac87
 801e5f8:	2000008c 	.word	0x2000008c

0801e5fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e5fc:	b538      	push	{r3, r4, r5, lr}
 801e5fe:	4c0b      	ldr	r4, [pc, #44]	; (801e62c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e600:	7823      	ldrb	r3, [r4, #0]
 801e602:	f3bf 8f5b 	dmb	ish
 801e606:	07db      	lsls	r3, r3, #31
 801e608:	4605      	mov	r5, r0
 801e60a:	d40b      	bmi.n	801e624 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e60c:	4620      	mov	r0, r4
 801e60e:	f00a fb40 	bl	8028c92 <__cxa_guard_acquire>
 801e612:	b138      	cbz	r0, 801e624 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e614:	4620      	mov	r0, r4
 801e616:	f00a fb48 	bl	8028caa <__cxa_guard_release>
 801e61a:	4a05      	ldr	r2, [pc, #20]	; (801e630 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e61c:	4905      	ldr	r1, [pc, #20]	; (801e634 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e61e:	4806      	ldr	r0, [pc, #24]	; (801e638 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e620:	f00a fb30 	bl	8028c84 <__aeabi_atexit>
 801e624:	4b04      	ldr	r3, [pc, #16]	; (801e638 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e626:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e628:	bd38      	pop	{r3, r4, r5, pc}
 801e62a:	bf00      	nop
 801e62c:	20012e3c 	.word	0x20012e3c
 801e630:	20000000 	.word	0x20000000
 801e634:	0801ac85 	.word	0x0801ac85
 801e638:	20000090 	.word	0x20000090

0801e63c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e63c:	b570      	push	{r4, r5, r6, lr}
 801e63e:	4d0d      	ldr	r5, [pc, #52]	; (801e674 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e640:	4c0d      	ldr	r4, [pc, #52]	; (801e678 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e642:	782b      	ldrb	r3, [r5, #0]
 801e644:	f3bf 8f5b 	dmb	ish
 801e648:	f013 0f01 	tst.w	r3, #1
 801e64c:	4606      	mov	r6, r0
 801e64e:	d10d      	bne.n	801e66c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e650:	4628      	mov	r0, r5
 801e652:	f00a fb1e 	bl	8028c92 <__cxa_guard_acquire>
 801e656:	b148      	cbz	r0, 801e66c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e658:	4b08      	ldr	r3, [pc, #32]	; (801e67c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e65a:	6023      	str	r3, [r4, #0]
 801e65c:	4628      	mov	r0, r5
 801e65e:	f00a fb24 	bl	8028caa <__cxa_guard_release>
 801e662:	4a07      	ldr	r2, [pc, #28]	; (801e680 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e664:	4907      	ldr	r1, [pc, #28]	; (801e684 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e666:	4620      	mov	r0, r4
 801e668:	f00a fb0c 	bl	8028c84 <__aeabi_atexit>
 801e66c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e670:	bd70      	pop	{r4, r5, r6, pc}
 801e672:	bf00      	nop
 801e674:	20012e40 	.word	0x20012e40
 801e678:	20012eb4 	.word	0x20012eb4
 801e67c:	0802e24c 	.word	0x0802e24c
 801e680:	20000000 	.word	0x20000000
 801e684:	0801ac83 	.word	0x0801ac83

0801e688 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e688:	b510      	push	{r4, lr}
 801e68a:	4604      	mov	r4, r0
 801e68c:	f7ff ff96 	bl	801e5bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e690:	4620      	mov	r0, r4
 801e692:	f7ff ffb3 	bl	801e5fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e696:	4620      	mov	r0, r4
 801e698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e69c:	f7ff bfce 	b.w	801e63c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e6a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e6a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6a4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e6a8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e6ac:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e6b0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e6b4:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e6b8:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e6bc:	8808      	ldrh	r0, [r1, #0]
 801e6be:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e6c2:	2d00      	cmp	r5, #0
 801e6c4:	eb02 0a0c 	add.w	sl, r2, ip
 801e6c8:	f2c0 80b0 	blt.w	801e82c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e6cc:	45ab      	cmp	fp, r5
 801e6ce:	f340 80ad 	ble.w	801e82c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e6d2:	2c00      	cmp	r4, #0
 801e6d4:	f2c0 80a8 	blt.w	801e828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e6d8:	45a6      	cmp	lr, r4
 801e6da:	f340 80a5 	ble.w	801e828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e6de:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e6e2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e6e6:	1c62      	adds	r2, r4, #1
 801e6e8:	f100 80a3 	bmi.w	801e832 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e6ec:	4596      	cmp	lr, r2
 801e6ee:	f340 80a0 	ble.w	801e832 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e6f2:	f1b9 0f00 	cmp.w	r9, #0
 801e6f6:	f000 809c 	beq.w	801e832 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e6fa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e6fe:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e702:	3501      	adds	r5, #1
 801e704:	f100 8099 	bmi.w	801e83a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e708:	45ab      	cmp	fp, r5
 801e70a:	f340 8096 	ble.w	801e83a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e70e:	2f00      	cmp	r7, #0
 801e710:	f000 8093 	beq.w	801e83a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e714:	2c00      	cmp	r4, #0
 801e716:	f2c0 808e 	blt.w	801e836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e71a:	45a6      	cmp	lr, r4
 801e71c:	f340 808b 	ble.w	801e836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e720:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e724:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e728:	3401      	adds	r4, #1
 801e72a:	f100 8089 	bmi.w	801e840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e72e:	45a6      	cmp	lr, r4
 801e730:	f340 8086 	ble.w	801e840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e734:	f1b9 0f00 	cmp.w	r9, #0
 801e738:	f000 8082 	beq.w	801e840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e73c:	44d6      	add	lr, sl
 801e73e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e742:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e746:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e74a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e74e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e752:	fb19 fe07 	smulbb	lr, r9, r7
 801e756:	ea44 0808 	orr.w	r8, r4, r8
 801e75a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e75e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e762:	f1c7 0210 	rsb	r2, r7, #16
 801e766:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e76a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e76e:	ea44 0c0c 	orr.w	ip, r4, ip
 801e772:	eba2 0209 	sub.w	r2, r2, r9
 801e776:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e77a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e77e:	fb04 f40c 	mul.w	r4, r4, ip
 801e782:	fb02 4808 	mla	r8, r2, r8, r4
 801e786:	041a      	lsls	r2, r3, #16
 801e788:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e78c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e790:	4313      	orrs	r3, r2
 801e792:	042a      	lsls	r2, r5, #16
 801e794:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e798:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e79c:	fb0e 8303 	mla	r3, lr, r3, r8
 801e7a0:	432a      	orrs	r2, r5
 801e7a2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e7a6:	fb07 3202 	mla	r2, r7, r2, r3
 801e7aa:	0d53      	lsrs	r3, r2, #21
 801e7ac:	0952      	lsrs	r2, r2, #5
 801e7ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e7b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e7b6:	431a      	orrs	r2, r3
 801e7b8:	b293      	uxth	r3, r2
 801e7ba:	b2b4      	uxth	r4, r6
 801e7bc:	1202      	asrs	r2, r0, #8
 801e7be:	43f6      	mvns	r6, r6
 801e7c0:	b2f6      	uxtb	r6, r6
 801e7c2:	121d      	asrs	r5, r3, #8
 801e7c4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e7c8:	fb12 f206 	smulbb	r2, r2, r6
 801e7cc:	10c7      	asrs	r7, r0, #3
 801e7ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e7d2:	00c0      	lsls	r0, r0, #3
 801e7d4:	fb05 2504 	mla	r5, r5, r4, r2
 801e7d8:	b2c0      	uxtb	r0, r0
 801e7da:	10da      	asrs	r2, r3, #3
 801e7dc:	00db      	lsls	r3, r3, #3
 801e7de:	b2db      	uxtb	r3, r3
 801e7e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e7e4:	fb10 f006 	smulbb	r0, r0, r6
 801e7e8:	b2ad      	uxth	r5, r5
 801e7ea:	fb03 0004 	mla	r0, r3, r4, r0
 801e7ee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e7f2:	fb17 f706 	smulbb	r7, r7, r6
 801e7f6:	b280      	uxth	r0, r0
 801e7f8:	1c6b      	adds	r3, r5, #1
 801e7fa:	fb02 7204 	mla	r2, r2, r4, r7
 801e7fe:	b292      	uxth	r2, r2
 801e800:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e804:	1c43      	adds	r3, r0, #1
 801e806:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e80a:	1c50      	adds	r0, r2, #1
 801e80c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e810:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e814:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e818:	0952      	lsrs	r2, r2, #5
 801e81a:	432b      	orrs	r3, r5
 801e81c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e820:	4313      	orrs	r3, r2
 801e822:	800b      	strh	r3, [r1, #0]
 801e824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e828:	4680      	mov	r8, r0
 801e82a:	e75c      	b.n	801e6e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e82c:	4684      	mov	ip, r0
 801e82e:	4680      	mov	r8, r0
 801e830:	e767      	b.n	801e702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e832:	4684      	mov	ip, r0
 801e834:	e765      	b.n	801e702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e836:	4605      	mov	r5, r0
 801e838:	e776      	b.n	801e728 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e83a:	4603      	mov	r3, r0
 801e83c:	4605      	mov	r5, r0
 801e83e:	e782      	b.n	801e746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e840:	4603      	mov	r3, r0
 801e842:	e780      	b.n	801e746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e844 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e848:	b099      	sub	sp, #100	; 0x64
 801e84a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e84e:	9215      	str	r2, [sp, #84]	; 0x54
 801e850:	9309      	str	r3, [sp, #36]	; 0x24
 801e852:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e854:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e858:	930d      	str	r3, [sp, #52]	; 0x34
 801e85a:	910c      	str	r1, [sp, #48]	; 0x30
 801e85c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e860:	9016      	str	r0, [sp, #88]	; 0x58
 801e862:	6850      	ldr	r0, [r2, #4]
 801e864:	6812      	ldr	r2, [r2, #0]
 801e866:	fb00 1303 	mla	r3, r0, r3, r1
 801e86a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e86e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e870:	681b      	ldr	r3, [r3, #0]
 801e872:	930b      	str	r3, [sp, #44]	; 0x2c
 801e874:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e876:	685e      	ldr	r6, [r3, #4]
 801e878:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e87a:	43db      	mvns	r3, r3
 801e87c:	b2db      	uxtb	r3, r3
 801e87e:	3604      	adds	r6, #4
 801e880:	930a      	str	r3, [sp, #40]	; 0x28
 801e882:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e884:	2b00      	cmp	r3, #0
 801e886:	dc03      	bgt.n	801e890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e888:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e88a:	2b00      	cmp	r3, #0
 801e88c:	f340 8225 	ble.w	801ecda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e890:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e892:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e896:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e89a:	1e48      	subs	r0, r1, #1
 801e89c:	1e57      	subs	r7, r2, #1
 801e89e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8a0:	2b00      	cmp	r3, #0
 801e8a2:	f340 80e3 	ble.w	801ea6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e8a6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e8aa:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e8ae:	d406      	bmi.n	801e8be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e8b0:	4584      	cmp	ip, r0
 801e8b2:	da04      	bge.n	801e8be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e8b4:	2b00      	cmp	r3, #0
 801e8b6:	db02      	blt.n	801e8be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e8b8:	42bb      	cmp	r3, r7
 801e8ba:	f2c0 80d8 	blt.w	801ea6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e8be:	f11c 0c01 	adds.w	ip, ip, #1
 801e8c2:	f100 80c9 	bmi.w	801ea58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e8c6:	4561      	cmp	r1, ip
 801e8c8:	f2c0 80c6 	blt.w	801ea58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e8cc:	3301      	adds	r3, #1
 801e8ce:	f100 80c3 	bmi.w	801ea58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e8d2:	429a      	cmp	r2, r3
 801e8d4:	f2c0 80c0 	blt.w	801ea58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e8d8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e8dc:	4647      	mov	r7, r8
 801e8de:	f1bb 0f00 	cmp.w	fp, #0
 801e8e2:	f340 80e3 	ble.w	801eaac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e8e6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e8e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8ea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e8ee:	689b      	ldr	r3, [r3, #8]
 801e8f0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e8f4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e8f8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e8fc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e900:	f100 8121 	bmi.w	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e904:	f103 39ff 	add.w	r9, r3, #4294967295
 801e908:	454a      	cmp	r2, r9
 801e90a:	f280 811c 	bge.w	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e90e:	f1bc 0f00 	cmp.w	ip, #0
 801e912:	f2c0 8118 	blt.w	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e916:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e91a:	45cc      	cmp	ip, r9
 801e91c:	f280 8113 	bge.w	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e920:	b21b      	sxth	r3, r3
 801e922:	fb0c 2203 	mla	r2, ip, r3, r2
 801e926:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e928:	eb04 0902 	add.w	r9, r4, r2
 801e92c:	5ca2      	ldrb	r2, [r4, r2]
 801e92e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e932:	2800      	cmp	r0, #0
 801e934:	f000 80fe 	beq.w	801eb34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e938:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e93c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e940:	9211      	str	r2, [sp, #68]	; 0x44
 801e942:	b151      	cbz	r1, 801e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e944:	eb09 0203 	add.w	r2, r9, r3
 801e948:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e94c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e950:	930f      	str	r3, [sp, #60]	; 0x3c
 801e952:	7853      	ldrb	r3, [r2, #1]
 801e954:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e958:	9312      	str	r3, [sp, #72]	; 0x48
 801e95a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e95c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e95e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e962:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e966:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e96a:	ea4c 0c03 	orr.w	ip, ip, r3
 801e96e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e970:	041b      	lsls	r3, r3, #16
 801e972:	fb10 f201 	smulbb	r2, r0, r1
 801e976:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e97a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e97e:	10d2      	asrs	r2, r2, #3
 801e980:	4323      	orrs	r3, r4
 801e982:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e986:	4353      	muls	r3, r2
 801e988:	fb09 330c 	mla	r3, r9, ip, r3
 801e98c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e990:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e994:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e998:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e99c:	f1c1 0c10 	rsb	ip, r1, #16
 801e9a0:	ebac 0c00 	sub.w	ip, ip, r0
 801e9a4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e9a8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e9ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e9ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e9b0:	0418      	lsls	r0, r3, #16
 801e9b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e9b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e9ba:	4318      	orrs	r0, r3
 801e9bc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e9c0:	fb02 c200 	mla	r2, r2, r0, ip
 801e9c4:	0d53      	lsrs	r3, r2, #21
 801e9c6:	0952      	lsrs	r2, r2, #5
 801e9c8:	8838      	ldrh	r0, [r7, #0]
 801e9ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e9ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e9d2:	431a      	orrs	r2, r3
 801e9d4:	b292      	uxth	r2, r2
 801e9d6:	1201      	asrs	r1, r0, #8
 801e9d8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e9dc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e9e0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e9e4:	fb11 f104 	smulbb	r1, r1, r4
 801e9e8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e9ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e9f0:	00c0      	lsls	r0, r0, #3
 801e9f2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e9f6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e9fa:	10d1      	asrs	r1, r2, #3
 801e9fc:	b2c0      	uxtb	r0, r0
 801e9fe:	00d2      	lsls	r2, r2, #3
 801ea00:	b2d2      	uxtb	r2, r2
 801ea02:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ea06:	fb1e fe04 	smulbb	lr, lr, r4
 801ea0a:	fb10 f004 	smulbb	r0, r0, r4
 801ea0e:	fa1f fc8c 	uxth.w	ip, ip
 801ea12:	fb01 e103 	mla	r1, r1, r3, lr
 801ea16:	fb02 0303 	mla	r3, r2, r3, r0
 801ea1a:	b29a      	uxth	r2, r3
 801ea1c:	f10c 0301 	add.w	r3, ip, #1
 801ea20:	b289      	uxth	r1, r1
 801ea22:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ea26:	1c53      	adds	r3, r2, #1
 801ea28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ea2c:	1c4a      	adds	r2, r1, #1
 801ea2e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ea32:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ea36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea3a:	0949      	lsrs	r1, r1, #5
 801ea3c:	ea43 030c 	orr.w	r3, r3, ip
 801ea40:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ea44:	430b      	orrs	r3, r1
 801ea46:	803b      	strh	r3, [r7, #0]
 801ea48:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ea4a:	449a      	add	sl, r3
 801ea4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ea4e:	3702      	adds	r7, #2
 801ea50:	441d      	add	r5, r3
 801ea52:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ea56:	e742      	b.n	801e8de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ea58:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ea5a:	449a      	add	sl, r3
 801ea5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ea5e:	441d      	add	r5, r3
 801ea60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea62:	3b01      	subs	r3, #1
 801ea64:	9309      	str	r3, [sp, #36]	; 0x24
 801ea66:	f108 0802 	add.w	r8, r8, #2
 801ea6a:	e718      	b.n	801e89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ea6c:	d023      	beq.n	801eab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ea6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea70:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ea72:	3b01      	subs	r3, #1
 801ea74:	fb00 a003 	mla	r0, r0, r3, sl
 801ea78:	1400      	asrs	r0, r0, #16
 801ea7a:	f53f af2d 	bmi.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea7e:	3901      	subs	r1, #1
 801ea80:	4288      	cmp	r0, r1
 801ea82:	f6bf af29 	bge.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea86:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ea88:	fb01 5303 	mla	r3, r1, r3, r5
 801ea8c:	141b      	asrs	r3, r3, #16
 801ea8e:	f53f af23 	bmi.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea92:	3a01      	subs	r2, #1
 801ea94:	4293      	cmp	r3, r2
 801ea96:	f6bf af1f 	bge.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea9a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ea9e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801eaa2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801eaa6:	f1be 0f00 	cmp.w	lr, #0
 801eaaa:	dc6c      	bgt.n	801eb86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eaac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eaae:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eab2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801eab6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eab8:	2b00      	cmp	r3, #0
 801eaba:	f340 810e 	ble.w	801ecda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eabe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eac2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eac6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eaca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eacc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ead0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ead4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ead8:	eef0 6a62 	vmov.f32	s13, s5
 801eadc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eae0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eae4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eae8:	ee16 aa90 	vmov	sl, s13
 801eaec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eaf0:	eef0 6a43 	vmov.f32	s13, s6
 801eaf4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eaf8:	ee12 2a90 	vmov	r2, s5
 801eafc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb00:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb04:	ee13 2a10 	vmov	r2, s6
 801eb08:	9325      	str	r3, [sp, #148]	; 0x94
 801eb0a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eb0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb10:	9326      	str	r3, [sp, #152]	; 0x98
 801eb12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb14:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801eb16:	3b01      	subs	r3, #1
 801eb18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb1c:	930c      	str	r3, [sp, #48]	; 0x30
 801eb1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eb20:	bf08      	it	eq
 801eb22:	4613      	moveq	r3, r2
 801eb24:	ee16 5a90 	vmov	r5, s13
 801eb28:	9309      	str	r3, [sp, #36]	; 0x24
 801eb2a:	eeb0 3a67 	vmov.f32	s6, s15
 801eb2e:	eef0 2a47 	vmov.f32	s5, s14
 801eb32:	e6a6      	b.n	801e882 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801eb34:	2900      	cmp	r1, #0
 801eb36:	f43f af10 	beq.w	801e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eb3a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801eb3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb42:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb44:	e709      	b.n	801e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eb46:	f112 0901 	adds.w	r9, r2, #1
 801eb4a:	f53f af7d 	bmi.w	801ea48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eb4e:	454b      	cmp	r3, r9
 801eb50:	f6ff af7a 	blt.w	801ea48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eb54:	f11c 0901 	adds.w	r9, ip, #1
 801eb58:	f53f af76 	bmi.w	801ea48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eb5c:	45ce      	cmp	lr, r9
 801eb5e:	f6ff af73 	blt.w	801ea48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eb62:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801eb64:	9202      	str	r2, [sp, #8]
 801eb66:	b21b      	sxth	r3, r3
 801eb68:	fa0f f28e 	sxth.w	r2, lr
 801eb6c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801eb70:	e9cd c003 	strd	ip, r0, [sp, #12]
 801eb74:	9201      	str	r2, [sp, #4]
 801eb76:	9300      	str	r3, [sp, #0]
 801eb78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eb7a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801eb7c:	4633      	mov	r3, r6
 801eb7e:	4639      	mov	r1, r7
 801eb80:	f7ff fd8e 	bl	801e6a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801eb84:	e760      	b.n	801ea48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eb86:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb88:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eb8a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801eb8e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801eb92:	1429      	asrs	r1, r5, #16
 801eb94:	fb03 2101 	mla	r1, r3, r1, r2
 801eb98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eb9a:	440a      	add	r2, r1
 801eb9c:	5c61      	ldrb	r1, [r4, r1]
 801eb9e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801eba2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801eba6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ebaa:	f1bc 0f00 	cmp.w	ip, #0
 801ebae:	f000 808c 	beq.w	801ecca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ebb2:	7857      	ldrb	r7, [r2, #1]
 801ebb4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ebb8:	9413      	str	r4, [sp, #76]	; 0x4c
 801ebba:	b140      	cbz	r0, 801ebce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ebbc:	18d7      	adds	r7, r2, r3
 801ebbe:	5cd3      	ldrb	r3, [r2, r3]
 801ebc0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ebc4:	9310      	str	r3, [sp, #64]	; 0x40
 801ebc6:	787b      	ldrb	r3, [r7, #1]
 801ebc8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ebcc:	9314      	str	r3, [sp, #80]	; 0x50
 801ebce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ebd0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ebd2:	fb1c f200 	smulbb	r2, ip, r0
 801ebd6:	041f      	lsls	r7, r3, #16
 801ebd8:	10d2      	asrs	r2, r2, #3
 801ebda:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ebde:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ebe2:	431f      	orrs	r7, r3
 801ebe4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ebe8:	9317      	str	r3, [sp, #92]	; 0x5c
 801ebea:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ebec:	041b      	lsls	r3, r3, #16
 801ebee:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ebf2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ebf6:	ea43 030b 	orr.w	r3, r3, fp
 801ebfa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ebfc:	4353      	muls	r3, r2
 801ebfe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec02:	fb04 3707 	mla	r7, r4, r7, r3
 801ec06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ec0a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ec0e:	ea43 0b01 	orr.w	fp, r3, r1
 801ec12:	f1c0 0110 	rsb	r1, r0, #16
 801ec16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec18:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ec1a:	eba1 0c0c 	sub.w	ip, r1, ip
 801ec1e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ec22:	fb0c 770b 	mla	r7, ip, fp, r7
 801ec26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec2a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ec2e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec32:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ec36:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ec3a:	fb02 770c 	mla	r7, r2, ip, r7
 801ec3e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ec40:	0d79      	lsrs	r1, r7, #21
 801ec42:	097f      	lsrs	r7, r7, #5
 801ec44:	8812      	ldrh	r2, [r2, #0]
 801ec46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ec4a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ec4e:	430f      	orrs	r7, r1
 801ec50:	b2bb      	uxth	r3, r7
 801ec52:	1211      	asrs	r1, r2, #8
 801ec54:	1218      	asrs	r0, r3, #8
 801ec56:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ec5a:	fb11 f104 	smulbb	r1, r1, r4
 801ec5e:	10d7      	asrs	r7, r2, #3
 801ec60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ec64:	00d2      	lsls	r2, r2, #3
 801ec66:	fb00 1009 	mla	r0, r0, r9, r1
 801ec6a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ec6e:	10d9      	asrs	r1, r3, #3
 801ec70:	b2d2      	uxtb	r2, r2
 801ec72:	00db      	lsls	r3, r3, #3
 801ec74:	fb17 f704 	smulbb	r7, r7, r4
 801ec78:	fb12 f204 	smulbb	r2, r2, r4
 801ec7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ec80:	b2db      	uxtb	r3, r3
 801ec82:	b280      	uxth	r0, r0
 801ec84:	fb01 7109 	mla	r1, r1, r9, r7
 801ec88:	fb03 2309 	mla	r3, r3, r9, r2
 801ec8c:	b29b      	uxth	r3, r3
 801ec8e:	b289      	uxth	r1, r1
 801ec90:	1c42      	adds	r2, r0, #1
 801ec92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ec96:	1c4f      	adds	r7, r1, #1
 801ec98:	1c5a      	adds	r2, r3, #1
 801ec9a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ec9e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801eca2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eca6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ecaa:	0949      	lsrs	r1, r1, #5
 801ecac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ecae:	4310      	orrs	r0, r2
 801ecb0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ecb4:	4308      	orrs	r0, r1
 801ecb6:	f823 0b02 	strh.w	r0, [r3], #2
 801ecba:	930e      	str	r3, [sp, #56]	; 0x38
 801ecbc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ecbe:	449a      	add	sl, r3
 801ecc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ecc2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ecc6:	441d      	add	r5, r3
 801ecc8:	e6ed      	b.n	801eaa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ecca:	2800      	cmp	r0, #0
 801eccc:	f43f af7f 	beq.w	801ebce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ecd0:	5cd3      	ldrb	r3, [r2, r3]
 801ecd2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ecd6:	9310      	str	r3, [sp, #64]	; 0x40
 801ecd8:	e779      	b.n	801ebce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ecda:	b019      	add	sp, #100	; 0x64
 801ecdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ece0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ece0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ece4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ece8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ecec:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ecf0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ecf4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ecf8:	8808      	ldrh	r0, [r1, #0]
 801ecfa:	fb08 470e 	mla	r7, r8, lr, r4
 801ecfe:	f1b8 0f00 	cmp.w	r8, #0
 801ed02:	eb02 0907 	add.w	r9, r2, r7
 801ed06:	db67      	blt.n	801edd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ed08:	45c2      	cmp	sl, r8
 801ed0a:	dd65      	ble.n	801edd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ed0c:	2c00      	cmp	r4, #0
 801ed0e:	db61      	blt.n	801edd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ed10:	45a6      	cmp	lr, r4
 801ed12:	dd5f      	ble.n	801edd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ed14:	5dd2      	ldrb	r2, [r2, r7]
 801ed16:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ed1a:	1c62      	adds	r2, r4, #1
 801ed1c:	d45f      	bmi.n	801edde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed1e:	4596      	cmp	lr, r2
 801ed20:	dd5d      	ble.n	801edde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed22:	2d00      	cmp	r5, #0
 801ed24:	d05b      	beq.n	801edde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed26:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ed2a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ed2e:	f118 0801 	adds.w	r8, r8, #1
 801ed32:	d458      	bmi.n	801ede6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ed34:	45c2      	cmp	sl, r8
 801ed36:	dd56      	ble.n	801ede6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ed38:	2e00      	cmp	r6, #0
 801ed3a:	d054      	beq.n	801ede6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ed3c:	2c00      	cmp	r4, #0
 801ed3e:	db50      	blt.n	801ede2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ed40:	45a6      	cmp	lr, r4
 801ed42:	dd4e      	ble.n	801ede2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ed44:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ed48:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ed4c:	3401      	adds	r4, #1
 801ed4e:	d407      	bmi.n	801ed60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ed50:	45a6      	cmp	lr, r4
 801ed52:	dd05      	ble.n	801ed60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ed54:	b125      	cbz	r5, 801ed60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ed56:	44ce      	add	lr, r9
 801ed58:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ed5c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ed60:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ed64:	fb15 f406 	smulbb	r4, r5, r6
 801ed68:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ed6c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ed70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ed74:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ed78:	ea43 0c0c 	orr.w	ip, r3, ip
 801ed7c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ed80:	f1c6 0310 	rsb	r3, r6, #16
 801ed84:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ed88:	1b5b      	subs	r3, r3, r5
 801ed8a:	ea4e 0707 	orr.w	r7, lr, r7
 801ed8e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ed92:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ed96:	437d      	muls	r5, r7
 801ed98:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ed9c:	0403      	lsls	r3, r0, #16
 801ed9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eda2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801eda6:	4318      	orrs	r0, r3
 801eda8:	0413      	lsls	r3, r2, #16
 801edaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801edae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801edb2:	4313      	orrs	r3, r2
 801edb4:	fb04 c000 	mla	r0, r4, r0, ip
 801edb8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801edbc:	fb06 0003 	mla	r0, r6, r3, r0
 801edc0:	0d43      	lsrs	r3, r0, #21
 801edc2:	0940      	lsrs	r0, r0, #5
 801edc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801edc8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801edcc:	4318      	orrs	r0, r3
 801edce:	8008      	strh	r0, [r1, #0]
 801edd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801edd4:	4684      	mov	ip, r0
 801edd6:	e7a0      	b.n	801ed1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801edd8:	4607      	mov	r7, r0
 801edda:	4684      	mov	ip, r0
 801eddc:	e7a7      	b.n	801ed2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801edde:	4607      	mov	r7, r0
 801ede0:	e7a5      	b.n	801ed2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ede2:	4602      	mov	r2, r0
 801ede4:	e7b2      	b.n	801ed4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ede6:	4602      	mov	r2, r0
 801ede8:	e7ba      	b.n	801ed60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801edea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801edea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edee:	b093      	sub	sp, #76	; 0x4c
 801edf0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801edf4:	920f      	str	r2, [sp, #60]	; 0x3c
 801edf6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801edf8:	9108      	str	r1, [sp, #32]
 801edfa:	9306      	str	r3, [sp, #24]
 801edfc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ee00:	9010      	str	r0, [sp, #64]	; 0x40
 801ee02:	6850      	ldr	r0, [r2, #4]
 801ee04:	6812      	ldr	r2, [r2, #0]
 801ee06:	fb00 1303 	mla	r3, r0, r3, r1
 801ee0a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ee0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee10:	681b      	ldr	r3, [r3, #0]
 801ee12:	9307      	str	r3, [sp, #28]
 801ee14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee16:	685f      	ldr	r7, [r3, #4]
 801ee18:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ee1c:	3704      	adds	r7, #4
 801ee1e:	9b08      	ldr	r3, [sp, #32]
 801ee20:	2b00      	cmp	r3, #0
 801ee22:	dc03      	bgt.n	801ee2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ee24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee26:	2b00      	cmp	r3, #0
 801ee28:	f340 81b2 	ble.w	801f190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ee2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee36:	1e48      	subs	r0, r1, #1
 801ee38:	f102 3cff 	add.w	ip, r2, #4294967295
 801ee3c:	9b06      	ldr	r3, [sp, #24]
 801ee3e:	2b00      	cmp	r3, #0
 801ee40:	f340 80a9 	ble.w	801ef96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ee44:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ee48:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ee4c:	d406      	bmi.n	801ee5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ee4e:	4586      	cmp	lr, r0
 801ee50:	da04      	bge.n	801ee5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ee52:	2b00      	cmp	r3, #0
 801ee54:	db02      	blt.n	801ee5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ee56:	4563      	cmp	r3, ip
 801ee58:	f2c0 809e 	blt.w	801ef98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ee5c:	f11e 0e01 	adds.w	lr, lr, #1
 801ee60:	f100 808f 	bmi.w	801ef82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee64:	4571      	cmp	r1, lr
 801ee66:	f2c0 808c 	blt.w	801ef82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee6a:	3301      	adds	r3, #1
 801ee6c:	f100 8089 	bmi.w	801ef82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee70:	429a      	cmp	r2, r3
 801ee72:	f2c0 8086 	blt.w	801ef82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee76:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ee7a:	46c8      	mov	r8, r9
 801ee7c:	f1bb 0f00 	cmp.w	fp, #0
 801ee80:	f340 80a6 	ble.w	801efd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ee84:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ee86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee88:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ee8c:	689b      	ldr	r3, [r3, #8]
 801ee8e:	1422      	asrs	r2, r4, #16
 801ee90:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ee94:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ee98:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ee9c:	f100 80e3 	bmi.w	801f066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eea0:	f103 3aff 	add.w	sl, r3, #4294967295
 801eea4:	4552      	cmp	r2, sl
 801eea6:	f280 80de 	bge.w	801f066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eeaa:	f1bc 0f00 	cmp.w	ip, #0
 801eeae:	f2c0 80da 	blt.w	801f066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eeb2:	f10e 3aff 	add.w	sl, lr, #4294967295
 801eeb6:	45d4      	cmp	ip, sl
 801eeb8:	f280 80d5 	bge.w	801f066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eebc:	b21b      	sxth	r3, r3
 801eebe:	fb0c 2203 	mla	r2, ip, r3, r2
 801eec2:	9d07      	ldr	r5, [sp, #28]
 801eec4:	eb05 0a02 	add.w	sl, r5, r2
 801eec8:	5caa      	ldrb	r2, [r5, r2]
 801eeca:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801eece:	2800      	cmp	r0, #0
 801eed0:	f000 80c0 	beq.w	801f054 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801eed4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801eed8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801eedc:	920b      	str	r2, [sp, #44]	; 0x2c
 801eede:	b151      	cbz	r1, 801eef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eee0:	eb0a 0203 	add.w	r2, sl, r3
 801eee4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eee8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eeec:	9309      	str	r3, [sp, #36]	; 0x24
 801eeee:	7853      	ldrb	r3, [r2, #1]
 801eef0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eef4:	930c      	str	r3, [sp, #48]	; 0x30
 801eef6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eef8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eefa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eefe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef02:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef06:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ef0c:	041b      	lsls	r3, r3, #16
 801ef0e:	fb10 f201 	smulbb	r2, r0, r1
 801ef12:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef16:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ef1a:	10d2      	asrs	r2, r2, #3
 801ef1c:	432b      	orrs	r3, r5
 801ef1e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ef22:	4353      	muls	r3, r2
 801ef24:	fb0a 330c 	mla	r3, sl, ip, r3
 801ef28:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ef2c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef30:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ef34:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ef38:	f1c1 0c10 	rsb	ip, r1, #16
 801ef3c:	ebac 0c00 	sub.w	ip, ip, r0
 801ef40:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef44:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ef48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef4a:	0418      	lsls	r0, r3, #16
 801ef4c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ef50:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef54:	4318      	orrs	r0, r3
 801ef56:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ef5a:	fb02 c200 	mla	r2, r2, r0, ip
 801ef5e:	0d53      	lsrs	r3, r2, #21
 801ef60:	0952      	lsrs	r2, r2, #5
 801ef62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef66:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ef6a:	431a      	orrs	r2, r3
 801ef6c:	f8a8 2000 	strh.w	r2, [r8]
 801ef70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ef72:	441c      	add	r4, r3
 801ef74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef76:	f108 0802 	add.w	r8, r8, #2
 801ef7a:	441e      	add	r6, r3
 801ef7c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ef80:	e77c      	b.n	801ee7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ef82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ef84:	441c      	add	r4, r3
 801ef86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef88:	441e      	add	r6, r3
 801ef8a:	9b06      	ldr	r3, [sp, #24]
 801ef8c:	3b01      	subs	r3, #1
 801ef8e:	9306      	str	r3, [sp, #24]
 801ef90:	f109 0902 	add.w	r9, r9, #2
 801ef94:	e752      	b.n	801ee3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ef96:	d020      	beq.n	801efda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ef98:	9b06      	ldr	r3, [sp, #24]
 801ef9a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ef9c:	3b01      	subs	r3, #1
 801ef9e:	fb00 4003 	mla	r0, r0, r3, r4
 801efa2:	1400      	asrs	r0, r0, #16
 801efa4:	f53f af67 	bmi.w	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801efa8:	3901      	subs	r1, #1
 801efaa:	4288      	cmp	r0, r1
 801efac:	f6bf af63 	bge.w	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801efb0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801efb2:	fb01 6303 	mla	r3, r1, r3, r6
 801efb6:	141b      	asrs	r3, r3, #16
 801efb8:	f53f af5d 	bmi.w	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801efbc:	3a01      	subs	r2, #1
 801efbe:	4293      	cmp	r3, r2
 801efc0:	f6bf af59 	bge.w	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801efc4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801efc8:	46ca      	mov	sl, r9
 801efca:	f1b8 0f00 	cmp.w	r8, #0
 801efce:	dc67      	bgt.n	801f0a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801efd0:	9b06      	ldr	r3, [sp, #24]
 801efd2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801efd6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801efda:	9b08      	ldr	r3, [sp, #32]
 801efdc:	2b00      	cmp	r3, #0
 801efde:	f340 80d7 	ble.w	801f190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801efe2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801efe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801efea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801efee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eff0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eff4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eff8:	eeb0 6a62 	vmov.f32	s12, s5
 801effc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f000:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f004:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f008:	ee16 4a10 	vmov	r4, s12
 801f00c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f010:	eeb0 6a43 	vmov.f32	s12, s6
 801f014:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f018:	ee12 2a90 	vmov	r2, s5
 801f01c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f020:	fb92 f3f3 	sdiv	r3, r2, r3
 801f024:	ee13 2a10 	vmov	r2, s6
 801f028:	931f      	str	r3, [sp, #124]	; 0x7c
 801f02a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f02c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f030:	9320      	str	r3, [sp, #128]	; 0x80
 801f032:	9b08      	ldr	r3, [sp, #32]
 801f034:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f036:	3b01      	subs	r3, #1
 801f038:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f03c:	9308      	str	r3, [sp, #32]
 801f03e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f040:	bf08      	it	eq
 801f042:	4613      	moveq	r3, r2
 801f044:	ee16 6a10 	vmov	r6, s12
 801f048:	9306      	str	r3, [sp, #24]
 801f04a:	eeb0 3a67 	vmov.f32	s6, s15
 801f04e:	eef0 2a47 	vmov.f32	s5, s14
 801f052:	e6e4      	b.n	801ee1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f054:	2900      	cmp	r1, #0
 801f056:	f43f af4e 	beq.w	801eef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f05a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f05e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f062:	9309      	str	r3, [sp, #36]	; 0x24
 801f064:	e747      	b.n	801eef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f066:	f112 0a01 	adds.w	sl, r2, #1
 801f06a:	d481      	bmi.n	801ef70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f06c:	4553      	cmp	r3, sl
 801f06e:	f6ff af7f 	blt.w	801ef70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f072:	f11c 0a01 	adds.w	sl, ip, #1
 801f076:	f53f af7b 	bmi.w	801ef70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f07a:	45d6      	cmp	lr, sl
 801f07c:	f6ff af78 	blt.w	801ef70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f080:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f084:	b21b      	sxth	r3, r3
 801f086:	fa0f f28e 	sxth.w	r2, lr
 801f08a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f08e:	9201      	str	r2, [sp, #4]
 801f090:	9300      	str	r3, [sp, #0]
 801f092:	9a07      	ldr	r2, [sp, #28]
 801f094:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f096:	463b      	mov	r3, r7
 801f098:	4641      	mov	r1, r8
 801f09a:	f7ff fe21 	bl	801ece0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f09e:	e767      	b.n	801ef70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f0a2:	9d07      	ldr	r5, [sp, #28]
 801f0a4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f0a8:	1422      	asrs	r2, r4, #16
 801f0aa:	1431      	asrs	r1, r6, #16
 801f0ac:	fb03 2101 	mla	r1, r3, r1, r2
 801f0b0:	9a07      	ldr	r2, [sp, #28]
 801f0b2:	440a      	add	r2, r1
 801f0b4:	5c69      	ldrb	r1, [r5, r1]
 801f0b6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f0ba:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f0be:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f0c2:	f1be 0f00 	cmp.w	lr, #0
 801f0c6:	d05c      	beq.n	801f182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f0c8:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f0cc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f0d0:	950d      	str	r5, [sp, #52]	; 0x34
 801f0d2:	b150      	cbz	r0, 801f0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f0d4:	eb02 0c03 	add.w	ip, r2, r3
 801f0d8:	5cd3      	ldrb	r3, [r2, r3]
 801f0da:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f0de:	930a      	str	r3, [sp, #40]	; 0x28
 801f0e0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f0e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f0e8:	930e      	str	r3, [sp, #56]	; 0x38
 801f0ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f0ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f0ee:	fb1e f200 	smulbb	r2, lr, r0
 801f0f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f0f6:	10d2      	asrs	r2, r2, #3
 801f0f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f0fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f100:	ea4c 0c03 	orr.w	ip, ip, r3
 801f104:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f108:	9311      	str	r3, [sp, #68]	; 0x44
 801f10a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f10c:	041b      	lsls	r3, r3, #16
 801f10e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f112:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f116:	ea43 030b 	orr.w	r3, r3, fp
 801f11a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f11c:	4353      	muls	r3, r2
 801f11e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f122:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f126:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f12a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f12e:	ea43 0b01 	orr.w	fp, r3, r1
 801f132:	f1c0 0110 	rsb	r1, r0, #16
 801f136:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f138:	eba1 0e0e 	sub.w	lr, r1, lr
 801f13c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f140:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f144:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f148:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f14c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f150:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f154:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f158:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f15c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f160:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f164:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f168:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f16c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f170:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f172:	f82a cb02 	strh.w	ip, [sl], #2
 801f176:	441c      	add	r4, r3
 801f178:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f17a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f17e:	441e      	add	r6, r3
 801f180:	e723      	b.n	801efca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f182:	2800      	cmp	r0, #0
 801f184:	d0b1      	beq.n	801f0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f186:	5cd3      	ldrb	r3, [r2, r3]
 801f188:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f18c:	930a      	str	r3, [sp, #40]	; 0x28
 801f18e:	e7ac      	b.n	801f0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f190:	b013      	add	sp, #76	; 0x4c
 801f192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f196:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f19a:	880d      	ldrh	r5, [r1, #0]
 801f19c:	b087      	sub	sp, #28
 801f19e:	10ef      	asrs	r7, r5, #3
 801f1a0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f1a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f1a8:	00ed      	lsls	r5, r5, #3
 801f1aa:	9701      	str	r7, [sp, #4]
 801f1ac:	b2ed      	uxtb	r5, r5
 801f1ae:	9502      	str	r5, [sp, #8]
 801f1b0:	9d01      	ldr	r5, [sp, #4]
 801f1b2:	9103      	str	r1, [sp, #12]
 801f1b4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f1b8:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f1bc:	9902      	ldr	r1, [sp, #8]
 801f1be:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f1c2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f1c6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f1ca:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f1ce:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f1d2:	022d      	lsls	r5, r5, #8
 801f1d4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f1d8:	fb06 0709 	mla	r7, r6, r9, r0
 801f1dc:	430d      	orrs	r5, r1
 801f1de:	2e00      	cmp	r6, #0
 801f1e0:	eb02 0c07 	add.w	ip, r2, r7
 801f1e4:	9505      	str	r5, [sp, #20]
 801f1e6:	f2c0 80b6 	blt.w	801f356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f1ea:	45b3      	cmp	fp, r6
 801f1ec:	f340 80b3 	ble.w	801f356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f1f0:	2800      	cmp	r0, #0
 801f1f2:	f2c0 80ae 	blt.w	801f352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f1f6:	4581      	cmp	r9, r0
 801f1f8:	f340 80ab 	ble.w	801f352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f1fc:	5dd7      	ldrb	r7, [r2, r7]
 801f1fe:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f202:	441f      	add	r7, r3
 801f204:	1c42      	adds	r2, r0, #1
 801f206:	f100 80a9 	bmi.w	801f35c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f20a:	4591      	cmp	r9, r2
 801f20c:	f340 80a6 	ble.w	801f35c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f210:	2c00      	cmp	r4, #0
 801f212:	f000 80a3 	beq.w	801f35c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f216:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f21a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f21e:	441d      	add	r5, r3
 801f220:	3601      	adds	r6, #1
 801f222:	f100 809f 	bmi.w	801f364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f226:	45b3      	cmp	fp, r6
 801f228:	f340 809c 	ble.w	801f364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f22c:	f1be 0f00 	cmp.w	lr, #0
 801f230:	f000 8098 	beq.w	801f364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f234:	2800      	cmp	r0, #0
 801f236:	f2c0 8093 	blt.w	801f360 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f23a:	4581      	cmp	r9, r0
 801f23c:	f340 8090 	ble.w	801f360 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f240:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f244:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f248:	441e      	add	r6, r3
 801f24a:	3001      	adds	r0, #1
 801f24c:	f100 808d 	bmi.w	801f36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f250:	4581      	cmp	r9, r0
 801f252:	f340 808a 	ble.w	801f36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f256:	2c00      	cmp	r4, #0
 801f258:	f000 8087 	beq.w	801f36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f25c:	44e1      	add	r9, ip
 801f25e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f262:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f266:	4413      	add	r3, r2
 801f268:	b2a4      	uxth	r4, r4
 801f26a:	fa1f fe8e 	uxth.w	lr, lr
 801f26e:	fb04 fb0e 	mul.w	fp, r4, lr
 801f272:	0124      	lsls	r4, r4, #4
 801f274:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f278:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f27c:	eba4 040b 	sub.w	r4, r4, fp
 801f280:	fa1f f08e 	uxth.w	r0, lr
 801f284:	b2a2      	uxth	r2, r4
 801f286:	78ac      	ldrb	r4, [r5, #2]
 801f288:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f28c:	9901      	ldr	r1, [sp, #4]
 801f28e:	eba9 0900 	sub.w	r9, r9, r0
 801f292:	fa1f f989 	uxth.w	r9, r9
 801f296:	4354      	muls	r4, r2
 801f298:	fb09 440c 	mla	r4, r9, ip, r4
 801f29c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f2a0:	fb00 440c 	mla	r4, r0, ip, r4
 801f2a4:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f2a8:	fa1f fe88 	uxth.w	lr, r8
 801f2ac:	ea6f 0808 	mvn.w	r8, r8
 801f2b0:	fa5f f888 	uxtb.w	r8, r8
 801f2b4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f2b8:	fb1a fa08 	smulbb	sl, sl, r8
 801f2bc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f2c0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f2c4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f2c8:	787c      	ldrb	r4, [r7, #1]
 801f2ca:	782d      	ldrb	r5, [r5, #0]
 801f2cc:	783f      	ldrb	r7, [r7, #0]
 801f2ce:	fb02 fa0a 	mul.w	sl, r2, sl
 801f2d2:	fb09 aa04 	mla	sl, r9, r4, sl
 801f2d6:	7874      	ldrb	r4, [r6, #1]
 801f2d8:	436a      	muls	r2, r5
 801f2da:	7835      	ldrb	r5, [r6, #0]
 801f2dc:	fb00 aa04 	mla	sl, r0, r4, sl
 801f2e0:	fb09 2207 	mla	r2, r9, r7, r2
 801f2e4:	785c      	ldrb	r4, [r3, #1]
 801f2e6:	781b      	ldrb	r3, [r3, #0]
 801f2e8:	fb00 2005 	mla	r0, r0, r5, r2
 801f2ec:	fb0b a404 	mla	r4, fp, r4, sl
 801f2f0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f2f4:	9b02      	ldr	r3, [sp, #8]
 801f2f6:	fb11 fa08 	smulbb	sl, r1, r8
 801f2fa:	fa1f fc8c 	uxth.w	ip, ip
 801f2fe:	fb13 f808 	smulbb	r8, r3, r8
 801f302:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f306:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f30a:	fb04 a40e 	mla	r4, r4, lr, sl
 801f30e:	f10c 0301 	add.w	r3, ip, #1
 801f312:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f316:	fa1f fe8e 	uxth.w	lr, lr
 801f31a:	b2a4      	uxth	r4, r4
 801f31c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f320:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f324:	f104 0a01 	add.w	sl, r4, #1
 801f328:	f10e 0c01 	add.w	ip, lr, #1
 801f32c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f330:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f334:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f338:	0964      	lsrs	r4, r4, #5
 801f33a:	ea4c 0c03 	orr.w	ip, ip, r3
 801f33e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f342:	9b03      	ldr	r3, [sp, #12]
 801f344:	ea4c 0c04 	orr.w	ip, ip, r4
 801f348:	f8a3 c000 	strh.w	ip, [r3]
 801f34c:	b007      	add	sp, #28
 801f34e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f352:	af05      	add	r7, sp, #20
 801f354:	e756      	b.n	801f204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f356:	ad05      	add	r5, sp, #20
 801f358:	462f      	mov	r7, r5
 801f35a:	e761      	b.n	801f220 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f35c:	ad05      	add	r5, sp, #20
 801f35e:	e75f      	b.n	801f220 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f360:	ae05      	add	r6, sp, #20
 801f362:	e772      	b.n	801f24a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f364:	ab05      	add	r3, sp, #20
 801f366:	461e      	mov	r6, r3
 801f368:	e77e      	b.n	801f268 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f36a:	ab05      	add	r3, sp, #20
 801f36c:	e77c      	b.n	801f268 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f36e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f36e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f372:	b095      	sub	sp, #84	; 0x54
 801f374:	9212      	str	r2, [sp, #72]	; 0x48
 801f376:	9309      	str	r3, [sp, #36]	; 0x24
 801f378:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f37a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f37e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f380:	910e      	str	r1, [sp, #56]	; 0x38
 801f382:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f386:	9013      	str	r0, [sp, #76]	; 0x4c
 801f388:	6850      	ldr	r0, [r2, #4]
 801f38a:	6812      	ldr	r2, [r2, #0]
 801f38c:	fb00 1303 	mla	r3, r0, r3, r1
 801f390:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f394:	930a      	str	r3, [sp, #40]	; 0x28
 801f396:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f398:	681b      	ldr	r3, [r3, #0]
 801f39a:	930d      	str	r3, [sp, #52]	; 0x34
 801f39c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f39e:	685c      	ldr	r4, [r3, #4]
 801f3a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f3a2:	43db      	mvns	r3, r3
 801f3a4:	b2db      	uxtb	r3, r3
 801f3a6:	3404      	adds	r4, #4
 801f3a8:	930b      	str	r3, [sp, #44]	; 0x2c
 801f3aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f3ac:	2b00      	cmp	r3, #0
 801f3ae:	dc03      	bgt.n	801f3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f3b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f3b2:	2b00      	cmp	r3, #0
 801f3b4:	f340 8255 	ble.w	801f862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f3b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f3ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f3be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f3c2:	1e48      	subs	r0, r1, #1
 801f3c4:	1e55      	subs	r5, r2, #1
 801f3c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3c8:	2b00      	cmp	r3, #0
 801f3ca:	f340 80f9 	ble.w	801f5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f3ce:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f3d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f3d2:	1436      	asrs	r6, r6, #16
 801f3d4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f3d8:	d406      	bmi.n	801f3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f3da:	4286      	cmp	r6, r0
 801f3dc:	da04      	bge.n	801f3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f3de:	2b00      	cmp	r3, #0
 801f3e0:	db02      	blt.n	801f3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f3e2:	42ab      	cmp	r3, r5
 801f3e4:	f2c0 80ed 	blt.w	801f5c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f3e8:	3601      	adds	r6, #1
 801f3ea:	f100 80da 	bmi.w	801f5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f3ee:	42b1      	cmp	r1, r6
 801f3f0:	f2c0 80d7 	blt.w	801f5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f3f4:	3301      	adds	r3, #1
 801f3f6:	f100 80d4 	bmi.w	801f5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f3fa:	429a      	cmp	r2, r3
 801f3fc:	f2c0 80d1 	blt.w	801f5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f400:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f402:	9311      	str	r3, [sp, #68]	; 0x44
 801f404:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f406:	930c      	str	r3, [sp, #48]	; 0x30
 801f408:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f40a:	2b00      	cmp	r3, #0
 801f40c:	f340 80fa 	ble.w	801f604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f410:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f412:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f414:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f416:	68c6      	ldr	r6, [r0, #12]
 801f418:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f41a:	141d      	asrs	r5, r3, #16
 801f41c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f420:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f422:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f424:	1400      	asrs	r0, r0, #16
 801f426:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f42a:	6892      	ldr	r2, [r2, #8]
 801f42c:	f100 813e 	bmi.w	801f6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f430:	1e57      	subs	r7, r2, #1
 801f432:	42b8      	cmp	r0, r7
 801f434:	f280 813a 	bge.w	801f6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f438:	2d00      	cmp	r5, #0
 801f43a:	f2c0 8137 	blt.w	801f6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f43e:	1e77      	subs	r7, r6, #1
 801f440:	42bd      	cmp	r5, r7
 801f442:	f280 8133 	bge.w	801f6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f446:	b212      	sxth	r2, r2
 801f448:	fb05 0002 	mla	r0, r5, r2, r0
 801f44c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f44e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f452:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f456:	182e      	adds	r6, r5, r0
 801f458:	eb04 050a 	add.w	r5, r4, sl
 801f45c:	2b00      	cmp	r3, #0
 801f45e:	f000 8117 	beq.w	801f690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f462:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f466:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f46a:	44a4      	add	ip, r4
 801f46c:	2900      	cmp	r1, #0
 801f46e:	f000 8117 	beq.w	801f6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f472:	18b0      	adds	r0, r6, r2
 801f474:	5cb2      	ldrb	r2, [r6, r2]
 801f476:	7840      	ldrb	r0, [r0, #1]
 801f478:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f47c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f480:	4422      	add	r2, r4
 801f482:	4420      	add	r0, r4
 801f484:	b29b      	uxth	r3, r3
 801f486:	b289      	uxth	r1, r1
 801f488:	fb03 f901 	mul.w	r9, r3, r1
 801f48c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f490:	011b      	lsls	r3, r3, #4
 801f492:	b289      	uxth	r1, r1
 801f494:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f498:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f49c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f49e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f4a2:	f8b6 e000 	ldrh.w	lr, [r6]
 801f4a6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f4aa:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f4ae:	eba3 0309 	sub.w	r3, r3, r9
 801f4b2:	b29b      	uxth	r3, r3
 801f4b4:	eba8 0801 	sub.w	r8, r8, r1
 801f4b8:	fa1f f888 	uxth.w	r8, r8
 801f4bc:	435f      	muls	r7, r3
 801f4be:	fb08 770b 	mla	r7, r8, fp, r7
 801f4c2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f4c6:	9310      	str	r3, [sp, #64]	; 0x40
 801f4c8:	fb01 770b 	mla	r7, r1, fp, r7
 801f4cc:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f4d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f4d2:	fb09 770b 	mla	r7, r9, fp, r7
 801f4d6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f4da:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f4de:	fb1b fb03 	smulbb	fp, fp, r3
 801f4e2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f4e6:	fb07 b706 	mla	r7, r7, r6, fp
 801f4ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f4ec:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f4f0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f4f4:	f89c c000 	ldrb.w	ip, [ip]
 801f4f8:	435d      	muls	r5, r3
 801f4fa:	fb08 550b 	mla	r5, r8, fp, r5
 801f4fe:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f502:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f504:	fb01 550b 	mla	r5, r1, fp, r5
 801f508:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f50c:	fb09 550b 	mla	r5, r9, fp, r5
 801f510:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f514:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f518:	fb1b fb03 	smulbb	fp, fp, r3
 801f51c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f51e:	fb03 f30c 	mul.w	r3, r3, ip
 801f522:	f892 c000 	ldrb.w	ip, [r2]
 801f526:	fb08 330a 	mla	r3, r8, sl, r3
 801f52a:	fb01 330c 	mla	r3, r1, ip, r3
 801f52e:	f890 c000 	ldrb.w	ip, [r0]
 801f532:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f536:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f53a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f53c:	fa5f fe8e 	uxtb.w	lr, lr
 801f540:	b2bf      	uxth	r7, r7
 801f542:	fb1e fe03 	smulbb	lr, lr, r3
 801f546:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f54a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f54e:	fb05 b506 	mla	r5, r5, r6, fp
 801f552:	1c7b      	adds	r3, r7, #1
 801f554:	fb0c e606 	mla	r6, ip, r6, lr
 801f558:	b2ad      	uxth	r5, r5
 801f55a:	b2b6      	uxth	r6, r6
 801f55c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f560:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f564:	f105 0b01 	add.w	fp, r5, #1
 801f568:	1c77      	adds	r7, r6, #1
 801f56a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f56e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f572:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f576:	096d      	lsrs	r5, r5, #5
 801f578:	431f      	orrs	r7, r3
 801f57a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f57e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f580:	433d      	orrs	r5, r7
 801f582:	801d      	strh	r5, [r3, #0]
 801f584:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f586:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f588:	3302      	adds	r3, #2
 801f58a:	930c      	str	r3, [sp, #48]	; 0x30
 801f58c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f58e:	4413      	add	r3, r2
 801f590:	931f      	str	r3, [sp, #124]	; 0x7c
 801f592:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f594:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f596:	4413      	add	r3, r2
 801f598:	9320      	str	r3, [sp, #128]	; 0x80
 801f59a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f59c:	3b01      	subs	r3, #1
 801f59e:	9311      	str	r3, [sp, #68]	; 0x44
 801f5a0:	e732      	b.n	801f408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f5a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f5a4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f5a6:	4433      	add	r3, r6
 801f5a8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f5aa:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f5ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5ae:	4433      	add	r3, r6
 801f5b0:	9320      	str	r3, [sp, #128]	; 0x80
 801f5b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f5b4:	3b01      	subs	r3, #1
 801f5b6:	9309      	str	r3, [sp, #36]	; 0x24
 801f5b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f5ba:	3302      	adds	r3, #2
 801f5bc:	930a      	str	r3, [sp, #40]	; 0x28
 801f5be:	e702      	b.n	801f3c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f5c0:	d027      	beq.n	801f612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f5c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f5c4:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f5c6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f5c8:	3b01      	subs	r3, #1
 801f5ca:	fb00 5003 	mla	r0, r0, r3, r5
 801f5ce:	1400      	asrs	r0, r0, #16
 801f5d0:	f53f af16 	bmi.w	801f400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f5d4:	3901      	subs	r1, #1
 801f5d6:	4288      	cmp	r0, r1
 801f5d8:	f6bf af12 	bge.w	801f400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f5dc:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f5de:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f5e0:	fb01 0303 	mla	r3, r1, r3, r0
 801f5e4:	141b      	asrs	r3, r3, #16
 801f5e6:	f53f af0b 	bmi.w	801f400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f5ea:	3a01      	subs	r2, #1
 801f5ec:	4293      	cmp	r3, r2
 801f5ee:	f6bf af07 	bge.w	801f400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f5f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f5f4:	9311      	str	r3, [sp, #68]	; 0x44
 801f5f6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f5fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f5fc:	930c      	str	r3, [sp, #48]	; 0x30
 801f5fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f600:	2b00      	cmp	r3, #0
 801f602:	dc70      	bgt.n	801f6e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f604:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f606:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f60c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f610:	930a      	str	r3, [sp, #40]	; 0x28
 801f612:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f614:	2b00      	cmp	r3, #0
 801f616:	f340 8124 	ble.w	801f862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f61a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f61e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f622:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f626:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f628:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f62c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f630:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f634:	eef0 6a62 	vmov.f32	s13, s5
 801f638:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f63c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f640:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f644:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f648:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f64c:	eef0 6a43 	vmov.f32	s13, s6
 801f650:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f654:	ee12 2a90 	vmov	r2, s5
 801f658:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f65c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f660:	ee13 2a10 	vmov	r2, s6
 801f664:	9321      	str	r3, [sp, #132]	; 0x84
 801f666:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f668:	fb92 f3f3 	sdiv	r3, r2, r3
 801f66c:	9322      	str	r3, [sp, #136]	; 0x88
 801f66e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f670:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f672:	3b01      	subs	r3, #1
 801f674:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f678:	930e      	str	r3, [sp, #56]	; 0x38
 801f67a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f67c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f680:	bf08      	it	eq
 801f682:	4613      	moveq	r3, r2
 801f684:	9309      	str	r3, [sp, #36]	; 0x24
 801f686:	eeb0 3a67 	vmov.f32	s6, s15
 801f68a:	eef0 2a47 	vmov.f32	s5, s14
 801f68e:	e68c      	b.n	801f3aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f690:	b149      	cbz	r1, 801f6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f692:	5cb2      	ldrb	r2, [r6, r2]
 801f694:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f698:	4422      	add	r2, r4
 801f69a:	4628      	mov	r0, r5
 801f69c:	46ac      	mov	ip, r5
 801f69e:	e6f1      	b.n	801f484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f6a0:	4628      	mov	r0, r5
 801f6a2:	462a      	mov	r2, r5
 801f6a4:	e6ee      	b.n	801f484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f6a6:	4628      	mov	r0, r5
 801f6a8:	462a      	mov	r2, r5
 801f6aa:	e7f7      	b.n	801f69c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f6ac:	1c47      	adds	r7, r0, #1
 801f6ae:	f53f af69 	bmi.w	801f584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f6b2:	42ba      	cmp	r2, r7
 801f6b4:	f6ff af66 	blt.w	801f584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f6b8:	1c6f      	adds	r7, r5, #1
 801f6ba:	f53f af63 	bmi.w	801f584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f6be:	42be      	cmp	r6, r7
 801f6c0:	f6ff af60 	blt.w	801f584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f6c4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f6c6:	9002      	str	r0, [sp, #8]
 801f6c8:	b236      	sxth	r6, r6
 801f6ca:	b212      	sxth	r2, r2
 801f6cc:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f6d0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f6d4:	9200      	str	r2, [sp, #0]
 801f6d6:	9601      	str	r6, [sp, #4]
 801f6d8:	4623      	mov	r3, r4
 801f6da:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f6de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f6e0:	f7ff fd59 	bl	801f196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f6e4:	e74e      	b.n	801f584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f6e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f6e8:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f6ea:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f6ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f6ee:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f6f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f6f4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f6f8:	142d      	asrs	r5, r5, #16
 801f6fa:	1400      	asrs	r0, r0, #16
 801f6fc:	fb02 5000 	mla	r0, r2, r0, r5
 801f700:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f702:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f706:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f70a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f70e:	182e      	adds	r6, r5, r0
 801f710:	eb04 0509 	add.w	r5, r4, r9
 801f714:	2b00      	cmp	r3, #0
 801f716:	f000 8096 	beq.w	801f846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f71a:	7877      	ldrb	r7, [r6, #1]
 801f71c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f720:	4427      	add	r7, r4
 801f722:	2900      	cmp	r1, #0
 801f724:	f000 8097 	beq.w	801f856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f728:	18b0      	adds	r0, r6, r2
 801f72a:	5cb2      	ldrb	r2, [r6, r2]
 801f72c:	7840      	ldrb	r0, [r0, #1]
 801f72e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f732:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f736:	4422      	add	r2, r4
 801f738:	4420      	add	r0, r4
 801f73a:	b29b      	uxth	r3, r3
 801f73c:	b289      	uxth	r1, r1
 801f73e:	fb03 f801 	mul.w	r8, r3, r1
 801f742:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f744:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f748:	f8b6 c000 	ldrh.w	ip, [r6]
 801f74c:	78be      	ldrb	r6, [r7, #2]
 801f74e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f752:	011b      	lsls	r3, r3, #4
 801f754:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f758:	b289      	uxth	r1, r1
 801f75a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f75e:	eba3 0308 	sub.w	r3, r3, r8
 801f762:	b29b      	uxth	r3, r3
 801f764:	ebae 0e01 	sub.w	lr, lr, r1
 801f768:	fa1f fe8e 	uxth.w	lr, lr
 801f76c:	435e      	muls	r6, r3
 801f76e:	fb0e 660b 	mla	r6, lr, fp, r6
 801f772:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f776:	9310      	str	r3, [sp, #64]	; 0x40
 801f778:	fb01 660b 	mla	r6, r1, fp, r6
 801f77c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f780:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f782:	fb08 660b 	mla	r6, r8, fp, r6
 801f786:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f78a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f78e:	fb1b fb03 	smulbb	fp, fp, r3
 801f792:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f796:	fb06 b60a 	mla	r6, r6, sl, fp
 801f79a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f79c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f7a0:	787d      	ldrb	r5, [r7, #1]
 801f7a2:	783f      	ldrb	r7, [r7, #0]
 801f7a4:	435d      	muls	r5, r3
 801f7a6:	fb0e 550b 	mla	r5, lr, fp, r5
 801f7aa:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f7ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7b0:	fb01 550b 	mla	r5, r1, fp, r5
 801f7b4:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f7b8:	fb08 550b 	mla	r5, r8, fp, r5
 801f7bc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f7c0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f7c4:	fb1b fb03 	smulbb	fp, fp, r3
 801f7c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f7ca:	437b      	muls	r3, r7
 801f7cc:	7817      	ldrb	r7, [r2, #0]
 801f7ce:	fb0e 3309 	mla	r3, lr, r9, r3
 801f7d2:	fb01 3307 	mla	r3, r1, r7, r3
 801f7d6:	7807      	ldrb	r7, [r0, #0]
 801f7d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f7dc:	fb08 3707 	mla	r7, r8, r7, r3
 801f7e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7e2:	fa5f fc8c 	uxtb.w	ip, ip
 801f7e6:	fb1c fc03 	smulbb	ip, ip, r3
 801f7ea:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f7ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f7f2:	fb05 b50a 	mla	r5, r5, sl, fp
 801f7f6:	fb07 c70a 	mla	r7, r7, sl, ip
 801f7fa:	b2b6      	uxth	r6, r6
 801f7fc:	b2ad      	uxth	r5, r5
 801f7fe:	b2bf      	uxth	r7, r7
 801f800:	1c73      	adds	r3, r6, #1
 801f802:	1c7a      	adds	r2, r7, #1
 801f804:	f105 0b01 	add.w	fp, r5, #1
 801f808:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f80c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f810:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f814:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f818:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f81c:	096d      	lsrs	r5, r5, #5
 801f81e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f820:	4316      	orrs	r6, r2
 801f822:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f826:	432e      	orrs	r6, r5
 801f828:	f823 6b02 	strh.w	r6, [r3], #2
 801f82c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f82e:	930c      	str	r3, [sp, #48]	; 0x30
 801f830:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f832:	4413      	add	r3, r2
 801f834:	931f      	str	r3, [sp, #124]	; 0x7c
 801f836:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f838:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f83a:	4413      	add	r3, r2
 801f83c:	9320      	str	r3, [sp, #128]	; 0x80
 801f83e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f840:	3b01      	subs	r3, #1
 801f842:	9311      	str	r3, [sp, #68]	; 0x44
 801f844:	e6db      	b.n	801f5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f846:	b149      	cbz	r1, 801f85c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f848:	5cb2      	ldrb	r2, [r6, r2]
 801f84a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f84e:	4422      	add	r2, r4
 801f850:	4628      	mov	r0, r5
 801f852:	462f      	mov	r7, r5
 801f854:	e771      	b.n	801f73a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f856:	4628      	mov	r0, r5
 801f858:	462a      	mov	r2, r5
 801f85a:	e76e      	b.n	801f73a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f85c:	4628      	mov	r0, r5
 801f85e:	462a      	mov	r2, r5
 801f860:	e7f7      	b.n	801f852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f862:	b015      	add	sp, #84	; 0x54
 801f864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f868:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f86c:	880f      	ldrh	r7, [r1, #0]
 801f86e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f872:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f876:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f87a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f87e:	023c      	lsls	r4, r7, #8
 801f880:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f884:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f888:	017c      	lsls	r4, r7, #5
 801f88a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f88e:	00ff      	lsls	r7, r7, #3
 801f890:	ea4b 0404 	orr.w	r4, fp, r4
 801f894:	b2ff      	uxtb	r7, r7
 801f896:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f89a:	4327      	orrs	r7, r4
 801f89c:	2d00      	cmp	r5, #0
 801f89e:	eb02 080a 	add.w	r8, r2, sl
 801f8a2:	9701      	str	r7, [sp, #4]
 801f8a4:	db7e      	blt.n	801f9a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f8a6:	45a9      	cmp	r9, r5
 801f8a8:	dd7c      	ble.n	801f9a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f8aa:	f1bc 0f00 	cmp.w	ip, #0
 801f8ae:	db77      	blt.n	801f9a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f8b0:	45e6      	cmp	lr, ip
 801f8b2:	dd75      	ble.n	801f9a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f8b4:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f8b8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f8bc:	441f      	add	r7, r3
 801f8be:	f11c 0201 	adds.w	r2, ip, #1
 801f8c2:	d472      	bmi.n	801f9aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f8c4:	4596      	cmp	lr, r2
 801f8c6:	dd70      	ble.n	801f9aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f8c8:	2800      	cmp	r0, #0
 801f8ca:	d06e      	beq.n	801f9aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f8cc:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f8d0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f8d4:	441c      	add	r4, r3
 801f8d6:	3501      	adds	r5, #1
 801f8d8:	d46b      	bmi.n	801f9b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f8da:	45a9      	cmp	r9, r5
 801f8dc:	dd69      	ble.n	801f9b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f8de:	2e00      	cmp	r6, #0
 801f8e0:	d067      	beq.n	801f9b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f8e2:	f1bc 0f00 	cmp.w	ip, #0
 801f8e6:	db62      	blt.n	801f9ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f8e8:	45e6      	cmp	lr, ip
 801f8ea:	dd60      	ble.n	801f9ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f8ec:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f8f0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f8f4:	441d      	add	r5, r3
 801f8f6:	f11c 0201 	adds.w	r2, ip, #1
 801f8fa:	d45d      	bmi.n	801f9b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f8fc:	4596      	cmp	lr, r2
 801f8fe:	dd5b      	ble.n	801f9b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f900:	2800      	cmp	r0, #0
 801f902:	d059      	beq.n	801f9b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f904:	44c6      	add	lr, r8
 801f906:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f90a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f90e:	4413      	add	r3, r2
 801f910:	b280      	uxth	r0, r0
 801f912:	b2b2      	uxth	r2, r6
 801f914:	fb00 f602 	mul.w	r6, r0, r2
 801f918:	0100      	lsls	r0, r0, #4
 801f91a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f91e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f922:	1b80      	subs	r0, r0, r6
 801f924:	fa1f fc82 	uxth.w	ip, r2
 801f928:	b282      	uxth	r2, r0
 801f92a:	78a0      	ldrb	r0, [r4, #2]
 801f92c:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f930:	f897 9000 	ldrb.w	r9, [r7]
 801f934:	787f      	ldrb	r7, [r7, #1]
 801f936:	eba8 080c 	sub.w	r8, r8, ip
 801f93a:	fa1f f888 	uxth.w	r8, r8
 801f93e:	4350      	muls	r0, r2
 801f940:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f944:	78a8      	ldrb	r0, [r5, #2]
 801f946:	fb0c e000 	mla	r0, ip, r0, lr
 801f94a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f94e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f952:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f956:	f894 e000 	ldrb.w	lr, [r4]
 801f95a:	fb02 fe0e 	mul.w	lr, r2, lr
 801f95e:	fb08 e909 	mla	r9, r8, r9, lr
 801f962:	f895 e000 	ldrb.w	lr, [r5]
 801f966:	fb0c 990e 	mla	r9, ip, lr, r9
 801f96a:	f893 e000 	ldrb.w	lr, [r3]
 801f96e:	785b      	ldrb	r3, [r3, #1]
 801f970:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f974:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f978:	ea4e 0e00 	orr.w	lr, lr, r0
 801f97c:	7860      	ldrb	r0, [r4, #1]
 801f97e:	4350      	muls	r0, r2
 801f980:	786a      	ldrb	r2, [r5, #1]
 801f982:	fb08 0007 	mla	r0, r8, r7, r0
 801f986:	fb0c 0202 	mla	r2, ip, r2, r0
 801f98a:	fb06 2303 	mla	r3, r6, r3, r2
 801f98e:	095b      	lsrs	r3, r3, #5
 801f990:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f994:	ea4e 0303 	orr.w	r3, lr, r3
 801f998:	800b      	strh	r3, [r1, #0]
 801f99a:	b003      	add	sp, #12
 801f99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9a0:	af01      	add	r7, sp, #4
 801f9a2:	e78c      	b.n	801f8be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f9a4:	ac01      	add	r4, sp, #4
 801f9a6:	4627      	mov	r7, r4
 801f9a8:	e795      	b.n	801f8d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f9aa:	ac01      	add	r4, sp, #4
 801f9ac:	e793      	b.n	801f8d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f9ae:	ad01      	add	r5, sp, #4
 801f9b0:	e7a1      	b.n	801f8f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f9b2:	ab01      	add	r3, sp, #4
 801f9b4:	461d      	mov	r5, r3
 801f9b6:	e7ab      	b.n	801f910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f9b8:	ab01      	add	r3, sp, #4
 801f9ba:	e7a9      	b.n	801f910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f9bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9c0:	b08f      	sub	sp, #60	; 0x3c
 801f9c2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f9c6:	920c      	str	r2, [sp, #48]	; 0x30
 801f9c8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f9ca:	910a      	str	r1, [sp, #40]	; 0x28
 801f9cc:	9306      	str	r3, [sp, #24]
 801f9ce:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f9d2:	900d      	str	r0, [sp, #52]	; 0x34
 801f9d4:	6850      	ldr	r0, [r2, #4]
 801f9d6:	6812      	ldr	r2, [r2, #0]
 801f9d8:	fb00 1303 	mla	r3, r0, r3, r1
 801f9dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f9e0:	9307      	str	r3, [sp, #28]
 801f9e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9e4:	681b      	ldr	r3, [r3, #0]
 801f9e6:	9308      	str	r3, [sp, #32]
 801f9e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9ea:	685c      	ldr	r4, [r3, #4]
 801f9ec:	3404      	adds	r4, #4
 801f9ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f9f0:	2b00      	cmp	r3, #0
 801f9f2:	dc03      	bgt.n	801f9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f9f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9f6:	2b00      	cmp	r3, #0
 801f9f8:	f340 81d6 	ble.w	801fda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f9fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa06:	1e48      	subs	r0, r1, #1
 801fa08:	1e56      	subs	r6, r2, #1
 801fa0a:	9b06      	ldr	r3, [sp, #24]
 801fa0c:	2b00      	cmp	r3, #0
 801fa0e:	f340 80b7 	ble.w	801fb80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fa12:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fa16:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fa1a:	d406      	bmi.n	801fa2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa1c:	4287      	cmp	r7, r0
 801fa1e:	da04      	bge.n	801fa2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa20:	2b00      	cmp	r3, #0
 801fa22:	db02      	blt.n	801fa2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa24:	42b3      	cmp	r3, r6
 801fa26:	f2c0 80ac 	blt.w	801fb82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fa2a:	3701      	adds	r7, #1
 801fa2c:	f100 809d 	bmi.w	801fb6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa30:	42b9      	cmp	r1, r7
 801fa32:	f2c0 809a 	blt.w	801fb6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa36:	3301      	adds	r3, #1
 801fa38:	f100 8097 	bmi.w	801fb6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa3c:	429a      	cmp	r2, r3
 801fa3e:	f2c0 8094 	blt.w	801fb6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa42:	9b06      	ldr	r3, [sp, #24]
 801fa44:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa46:	9b07      	ldr	r3, [sp, #28]
 801fa48:	9309      	str	r3, [sp, #36]	; 0x24
 801fa4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa4c:	2b00      	cmp	r3, #0
 801fa4e:	f340 80b5 	ble.w	801fbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801fa52:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fa54:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fa56:	68c7      	ldr	r7, [r0, #12]
 801fa58:	6892      	ldr	r2, [r2, #8]
 801fa5a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fa5e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fa62:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fa66:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fa6a:	f100 80fb 	bmi.w	801fc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa6e:	f102 3cff 	add.w	ip, r2, #4294967295
 801fa72:	4560      	cmp	r0, ip
 801fa74:	f280 80f6 	bge.w	801fc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa78:	2e00      	cmp	r6, #0
 801fa7a:	f2c0 80f3 	blt.w	801fc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa7e:	f107 3cff 	add.w	ip, r7, #4294967295
 801fa82:	4566      	cmp	r6, ip
 801fa84:	f280 80ee 	bge.w	801fc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa88:	b212      	sxth	r2, r2
 801fa8a:	fb06 0002 	mla	r0, r6, r2, r0
 801fa8e:	9e08      	ldr	r6, [sp, #32]
 801fa90:	1837      	adds	r7, r6, r0
 801fa92:	5c30      	ldrb	r0, [r6, r0]
 801fa94:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fa98:	eb04 0c08 	add.w	ip, r4, r8
 801fa9c:	2b00      	cmp	r3, #0
 801fa9e:	f000 80d3 	beq.w	801fc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801faa2:	787e      	ldrb	r6, [r7, #1]
 801faa4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801faa8:	4426      	add	r6, r4
 801faaa:	2900      	cmp	r1, #0
 801faac:	f000 80d4 	beq.w	801fc58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fab0:	18b8      	adds	r0, r7, r2
 801fab2:	5cba      	ldrb	r2, [r7, r2]
 801fab4:	7840      	ldrb	r0, [r0, #1]
 801fab6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801faba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fabe:	4422      	add	r2, r4
 801fac0:	4420      	add	r0, r4
 801fac2:	b29b      	uxth	r3, r3
 801fac4:	b289      	uxth	r1, r1
 801fac6:	fb03 f901 	mul.w	r9, r3, r1
 801faca:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801face:	011b      	lsls	r3, r3, #4
 801fad0:	b289      	uxth	r1, r1
 801fad2:	78b7      	ldrb	r7, [r6, #2]
 801fad4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fad8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fadc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fae0:	eba3 0309 	sub.w	r3, r3, r9
 801fae4:	b29b      	uxth	r3, r3
 801fae6:	ebae 0e01 	sub.w	lr, lr, r1
 801faea:	fa1f fe8e 	uxth.w	lr, lr
 801faee:	435f      	muls	r7, r3
 801faf0:	fb0e 770a 	mla	r7, lr, sl, r7
 801faf4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801faf8:	fb01 770a 	mla	r7, r1, sl, r7
 801fafc:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fb00:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fb04:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fb08:	f896 8000 	ldrb.w	r8, [r6]
 801fb0c:	7876      	ldrb	r6, [r6, #1]
 801fb0e:	fb03 f808 	mul.w	r8, r3, r8
 801fb12:	fb0e 8807 	mla	r8, lr, r7, r8
 801fb16:	7817      	ldrb	r7, [r2, #0]
 801fb18:	fb01 8807 	mla	r8, r1, r7, r8
 801fb1c:	7807      	ldrb	r7, [r0, #0]
 801fb1e:	fb09 8707 	mla	r7, r9, r7, r8
 801fb22:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fb26:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fb2a:	ea47 070a 	orr.w	r7, r7, sl
 801fb2e:	4373      	muls	r3, r6
 801fb30:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fb34:	fb0e 330c 	mla	r3, lr, ip, r3
 801fb38:	fb01 310a 	mla	r1, r1, sl, r3
 801fb3c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fb40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb42:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fb46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fb4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fb4e:	ea47 070a 	orr.w	r7, r7, sl
 801fb52:	801f      	strh	r7, [r3, #0]
 801fb54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb56:	3302      	adds	r3, #2
 801fb58:	9309      	str	r3, [sp, #36]	; 0x24
 801fb5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fb5c:	449b      	add	fp, r3
 801fb5e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb60:	441d      	add	r5, r3
 801fb62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb64:	3b01      	subs	r3, #1
 801fb66:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb68:	e76f      	b.n	801fa4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fb6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fb6c:	449b      	add	fp, r3
 801fb6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb70:	441d      	add	r5, r3
 801fb72:	9b06      	ldr	r3, [sp, #24]
 801fb74:	3b01      	subs	r3, #1
 801fb76:	9306      	str	r3, [sp, #24]
 801fb78:	9b07      	ldr	r3, [sp, #28]
 801fb7a:	3302      	adds	r3, #2
 801fb7c:	9307      	str	r3, [sp, #28]
 801fb7e:	e744      	b.n	801fa0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fb80:	d023      	beq.n	801fbca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fb82:	9b06      	ldr	r3, [sp, #24]
 801fb84:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fb86:	3b01      	subs	r3, #1
 801fb88:	fb00 b003 	mla	r0, r0, r3, fp
 801fb8c:	1400      	asrs	r0, r0, #16
 801fb8e:	f53f af58 	bmi.w	801fa42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fb92:	3901      	subs	r1, #1
 801fb94:	4288      	cmp	r0, r1
 801fb96:	f6bf af54 	bge.w	801fa42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fb9a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fb9c:	fb01 5303 	mla	r3, r1, r3, r5
 801fba0:	141b      	asrs	r3, r3, #16
 801fba2:	f53f af4e 	bmi.w	801fa42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fba6:	3a01      	subs	r2, #1
 801fba8:	4293      	cmp	r3, r2
 801fbaa:	f6bf af4a 	bge.w	801fa42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fbae:	9b06      	ldr	r3, [sp, #24]
 801fbb0:	9309      	str	r3, [sp, #36]	; 0x24
 801fbb2:	9b07      	ldr	r3, [sp, #28]
 801fbb4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fbb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbb8:	2b00      	cmp	r3, #0
 801fbba:	dc70      	bgt.n	801fc9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fbbc:	9b06      	ldr	r3, [sp, #24]
 801fbbe:	9a07      	ldr	r2, [sp, #28]
 801fbc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fbc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fbc8:	9307      	str	r3, [sp, #28]
 801fbca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fbcc:	2b00      	cmp	r3, #0
 801fbce:	f340 80eb 	ble.w	801fda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fbd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fbd6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fbda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fbde:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fbe0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbe4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbe8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbec:	eef0 6a62 	vmov.f32	s13, s5
 801fbf0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fbfc:	ee16 ba90 	vmov	fp, s13
 801fc00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc04:	eef0 6a43 	vmov.f32	s13, s6
 801fc08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc0c:	ee12 2a90 	vmov	r2, s5
 801fc10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc14:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc18:	ee13 2a10 	vmov	r2, s6
 801fc1c:	931b      	str	r3, [sp, #108]	; 0x6c
 801fc1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fc20:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc24:	931c      	str	r3, [sp, #112]	; 0x70
 801fc26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fc2a:	3b01      	subs	r3, #1
 801fc2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc30:	930a      	str	r3, [sp, #40]	; 0x28
 801fc32:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fc34:	bf08      	it	eq
 801fc36:	4613      	moveq	r3, r2
 801fc38:	ee16 5a90 	vmov	r5, s13
 801fc3c:	9306      	str	r3, [sp, #24]
 801fc3e:	eeb0 3a67 	vmov.f32	s6, s15
 801fc42:	eef0 2a47 	vmov.f32	s5, s14
 801fc46:	e6d2      	b.n	801f9ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fc48:	b149      	cbz	r1, 801fc5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fc4a:	5cba      	ldrb	r2, [r7, r2]
 801fc4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc50:	4422      	add	r2, r4
 801fc52:	4660      	mov	r0, ip
 801fc54:	4666      	mov	r6, ip
 801fc56:	e734      	b.n	801fac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fc58:	4660      	mov	r0, ip
 801fc5a:	4662      	mov	r2, ip
 801fc5c:	e731      	b.n	801fac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fc5e:	4660      	mov	r0, ip
 801fc60:	4662      	mov	r2, ip
 801fc62:	e7f7      	b.n	801fc54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fc64:	f110 0c01 	adds.w	ip, r0, #1
 801fc68:	f53f af74 	bmi.w	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc6c:	4562      	cmp	r2, ip
 801fc6e:	f6ff af71 	blt.w	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc72:	f116 0c01 	adds.w	ip, r6, #1
 801fc76:	f53f af6d 	bmi.w	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc7a:	4567      	cmp	r7, ip
 801fc7c:	f6ff af6a 	blt.w	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc80:	b23f      	sxth	r7, r7
 801fc82:	b212      	sxth	r2, r2
 801fc84:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fc88:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fc8c:	9200      	str	r2, [sp, #0]
 801fc8e:	9701      	str	r7, [sp, #4]
 801fc90:	4623      	mov	r3, r4
 801fc92:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fc96:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fc98:	f7ff fde6 	bl	801f868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fc9c:	e75a      	b.n	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc9e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fca0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fca4:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fca8:	1428      	asrs	r0, r5, #16
 801fcaa:	fb02 6000 	mla	r0, r2, r0, r6
 801fcae:	9e08      	ldr	r6, [sp, #32]
 801fcb0:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fcb4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fcb8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fcbc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fcc0:	1837      	adds	r7, r6, r0
 801fcc2:	eb04 0c08 	add.w	ip, r4, r8
 801fcc6:	2b00      	cmp	r3, #0
 801fcc8:	d060      	beq.n	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fcca:	787e      	ldrb	r6, [r7, #1]
 801fccc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fcd0:	4426      	add	r6, r4
 801fcd2:	2900      	cmp	r1, #0
 801fcd4:	d062      	beq.n	801fd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fcd6:	18b8      	adds	r0, r7, r2
 801fcd8:	5cba      	ldrb	r2, [r7, r2]
 801fcda:	7840      	ldrb	r0, [r0, #1]
 801fcdc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fce0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fce4:	4422      	add	r2, r4
 801fce6:	4420      	add	r0, r4
 801fce8:	b29b      	uxth	r3, r3
 801fcea:	b289      	uxth	r1, r1
 801fcec:	fb03 f901 	mul.w	r9, r3, r1
 801fcf0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fcf4:	011b      	lsls	r3, r3, #4
 801fcf6:	b289      	uxth	r1, r1
 801fcf8:	78b7      	ldrb	r7, [r6, #2]
 801fcfa:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fcfe:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fd02:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fd06:	eba3 0309 	sub.w	r3, r3, r9
 801fd0a:	b29b      	uxth	r3, r3
 801fd0c:	ebae 0e01 	sub.w	lr, lr, r1
 801fd10:	fa1f fe8e 	uxth.w	lr, lr
 801fd14:	435f      	muls	r7, r3
 801fd16:	fb0e 770a 	mla	r7, lr, sl, r7
 801fd1a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fd1e:	fb01 770a 	mla	r7, r1, sl, r7
 801fd22:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fd26:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fd2a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fd2e:	f896 8000 	ldrb.w	r8, [r6]
 801fd32:	7876      	ldrb	r6, [r6, #1]
 801fd34:	fb03 f808 	mul.w	r8, r3, r8
 801fd38:	fb0e 8807 	mla	r8, lr, r7, r8
 801fd3c:	7817      	ldrb	r7, [r2, #0]
 801fd3e:	fb01 8807 	mla	r8, r1, r7, r8
 801fd42:	7807      	ldrb	r7, [r0, #0]
 801fd44:	fb09 8707 	mla	r7, r9, r7, r8
 801fd48:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fd4c:	4373      	muls	r3, r6
 801fd4e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fd52:	7856      	ldrb	r6, [r2, #1]
 801fd54:	ea47 070a 	orr.w	r7, r7, sl
 801fd58:	fb0e 330c 	mla	r3, lr, ip, r3
 801fd5c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fd60:	fb01 3306 	mla	r3, r1, r6, r3
 801fd64:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fd68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fd6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fd72:	ea47 070a 	orr.w	r7, r7, sl
 801fd76:	f823 7b02 	strh.w	r7, [r3], #2
 801fd7a:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd7e:	449b      	add	fp, r3
 801fd80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fd82:	441d      	add	r5, r3
 801fd84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd86:	3b01      	subs	r3, #1
 801fd88:	9309      	str	r3, [sp, #36]	; 0x24
 801fd8a:	e714      	b.n	801fbb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fd8c:	b149      	cbz	r1, 801fda2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fd8e:	5cba      	ldrb	r2, [r7, r2]
 801fd90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd94:	4422      	add	r2, r4
 801fd96:	4660      	mov	r0, ip
 801fd98:	4666      	mov	r6, ip
 801fd9a:	e7a5      	b.n	801fce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fd9c:	4660      	mov	r0, ip
 801fd9e:	4662      	mov	r2, ip
 801fda0:	e7a2      	b.n	801fce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fda2:	4660      	mov	r0, ip
 801fda4:	4662      	mov	r2, ip
 801fda6:	e7f7      	b.n	801fd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fda8:	b00f      	add	sp, #60	; 0x3c
 801fdaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fdae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fdae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fdb2:	b085      	sub	sp, #20
 801fdb4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fdb8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fdbc:	9102      	str	r1, [sp, #8]
 801fdbe:	2c00      	cmp	r4, #0
 801fdc0:	fb04 710c 	mla	r1, r4, ip, r7
 801fdc4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fdc8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fdcc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fdd0:	eb02 0e01 	add.w	lr, r2, r1
 801fdd4:	f2c0 8122 	blt.w	802001c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fdd8:	45a0      	cmp	r8, r4
 801fdda:	f340 811f 	ble.w	802001c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fdde:	2f00      	cmp	r7, #0
 801fde0:	f2c0 811a 	blt.w	8020018 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fde4:	45bc      	cmp	ip, r7
 801fde6:	f340 8117 	ble.w	8020018 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fdea:	5c52      	ldrb	r2, [r2, r1]
 801fdec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fdf0:	1c7a      	adds	r2, r7, #1
 801fdf2:	f100 8116 	bmi.w	8020022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fdf6:	4594      	cmp	ip, r2
 801fdf8:	f340 8113 	ble.w	8020022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fdfc:	2e00      	cmp	r6, #0
 801fdfe:	f000 8112 	beq.w	8020026 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fe02:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fe06:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fe0a:	3401      	adds	r4, #1
 801fe0c:	f100 810f 	bmi.w	802002e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fe10:	45a0      	cmp	r8, r4
 801fe12:	f340 810c 	ble.w	802002e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fe16:	2800      	cmp	r0, #0
 801fe18:	f000 810c 	beq.w	8020034 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fe1c:	2f00      	cmp	r7, #0
 801fe1e:	f2c0 8104 	blt.w	802002a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fe22:	45bc      	cmp	ip, r7
 801fe24:	f340 8101 	ble.w	802002a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fe28:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fe2c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fe30:	3701      	adds	r7, #1
 801fe32:	f100 8102 	bmi.w	802003a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fe36:	45bc      	cmp	ip, r7
 801fe38:	f340 80ff 	ble.w	802003a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fe3c:	2e00      	cmp	r6, #0
 801fe3e:	f000 80fe 	beq.w	802003e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fe42:	44f4      	add	ip, lr
 801fe44:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fe48:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fe4c:	b2b6      	uxth	r6, r6
 801fe4e:	b280      	uxth	r0, r0
 801fe50:	fb00 fe06 	mul.w	lr, r0, r6
 801fe54:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fe58:	0136      	lsls	r6, r6, #4
 801fe5a:	eba6 070e 	sub.w	r7, r6, lr
 801fe5e:	b280      	uxth	r0, r0
 801fe60:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fe64:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fe68:	b2bf      	uxth	r7, r7
 801fe6a:	1a1b      	subs	r3, r3, r0
 801fe6c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fe70:	b29b      	uxth	r3, r3
 801fe72:	fb0a f607 	mul.w	r6, sl, r7
 801fe76:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fe7a:	fb0b 6603 	mla	r6, fp, r3, r6
 801fe7e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fe82:	fb00 6609 	mla	r6, r0, r9, r6
 801fe86:	fb0e 6608 	mla	r6, lr, r8, r6
 801fe8a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fe8e:	9600      	str	r6, [sp, #0]
 801fe90:	2e00      	cmp	r6, #0
 801fe92:	f000 80be 	beq.w	8020012 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fe96:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fe9a:	fb0b fc0c 	mul.w	ip, fp, ip
 801fe9e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fea2:	fb0b f505 	mul.w	r5, fp, r5
 801fea6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801feaa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801feae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801feb2:	44dc      	add	ip, fp
 801feb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801feb8:	9501      	str	r5, [sp, #4]
 801feba:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801febe:	9503      	str	r5, [sp, #12]
 801fec0:	9d01      	ldr	r5, [sp, #4]
 801fec2:	9e02      	ldr	r6, [sp, #8]
 801fec4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fec8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fecc:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fed0:	fb0a fc0c 	mul.w	ip, sl, ip
 801fed4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fed8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fedc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fee0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fee4:	4465      	add	r5, ip
 801fee6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801feea:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801feee:	fb09 fc0c 	mul.w	ip, r9, ip
 801fef2:	fb09 f904 	mul.w	r9, r9, r4
 801fef6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fefa:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fefe:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ff02:	fb08 f404 	mul.w	r4, r8, r4
 801ff06:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ff0a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ff0e:	fb08 f802 	mul.w	r8, r8, r2
 801ff12:	fb0a fa01 	mul.w	sl, sl, r1
 801ff16:	0a22      	lsrs	r2, r4, #8
 801ff18:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ff1c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ff20:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ff24:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ff28:	4414      	add	r4, r2
 801ff2a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ff2e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ff32:	0a2d      	lsrs	r5, r5, #8
 801ff34:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ff38:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ff3c:	9a03      	ldr	r2, [sp, #12]
 801ff3e:	8836      	ldrh	r6, [r6, #0]
 801ff40:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ff44:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ff48:	437d      	muls	r5, r7
 801ff4a:	4461      	add	r1, ip
 801ff4c:	0a24      	lsrs	r4, r4, #8
 801ff4e:	fb02 5503 	mla	r5, r2, r3, r5
 801ff52:	0a09      	lsrs	r1, r1, #8
 801ff54:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ff58:	fb04 540e 	mla	r4, r4, lr, r5
 801ff5c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ff60:	fb01 4100 	mla	r1, r1, r0, r4
 801ff64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ff68:	0a09      	lsrs	r1, r1, #8
 801ff6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ff6e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ff72:	fb07 f70a 	mul.w	r7, r7, sl
 801ff76:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ff7a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ff7e:	fb03 7101 	mla	r1, r3, r1, r7
 801ff82:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ff86:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ff8a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ff8e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ff92:	fb00 e101 	mla	r1, r0, r1, lr
 801ff96:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ff9a:	9a00      	ldr	r2, [sp, #0]
 801ff9c:	b287      	uxth	r7, r0
 801ff9e:	437a      	muls	r2, r7
 801ffa0:	0a09      	lsrs	r1, r1, #8
 801ffa2:	1c53      	adds	r3, r2, #1
 801ffa4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ffa8:	4321      	orrs	r1, r4
 801ffaa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ffae:	1235      	asrs	r5, r6, #8
 801ffb0:	0c0a      	lsrs	r2, r1, #16
 801ffb2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ffb6:	b2db      	uxtb	r3, r3
 801ffb8:	fb12 f207 	smulbb	r2, r2, r7
 801ffbc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ffc0:	fb05 2503 	mla	r5, r5, r3, r2
 801ffc4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ffc8:	10f2      	asrs	r2, r6, #3
 801ffca:	b2c8      	uxtb	r0, r1
 801ffcc:	00f6      	lsls	r6, r6, #3
 801ffce:	fb14 f407 	smulbb	r4, r4, r7
 801ffd2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ffd6:	b2f6      	uxtb	r6, r6
 801ffd8:	fb10 f007 	smulbb	r0, r0, r7
 801ffdc:	fb02 4203 	mla	r2, r2, r3, r4
 801ffe0:	b2ad      	uxth	r5, r5
 801ffe2:	fb06 0303 	mla	r3, r6, r3, r0
 801ffe6:	b299      	uxth	r1, r3
 801ffe8:	b294      	uxth	r4, r2
 801ffea:	1c6b      	adds	r3, r5, #1
 801ffec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fff0:	1c62      	adds	r2, r4, #1
 801fff2:	1c4b      	adds	r3, r1, #1
 801fff4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fff8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fffc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020000:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020004:	0952      	lsrs	r2, r2, #5
 8020006:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802000a:	432b      	orrs	r3, r5
 802000c:	4313      	orrs	r3, r2
 802000e:	9a02      	ldr	r2, [sp, #8]
 8020010:	8013      	strh	r3, [r2, #0]
 8020012:	b005      	add	sp, #20
 8020014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020018:	2500      	movs	r5, #0
 802001a:	e6e9      	b.n	801fdf0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 802001c:	2100      	movs	r1, #0
 802001e:	460d      	mov	r5, r1
 8020020:	e6f3      	b.n	801fe0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020022:	2100      	movs	r1, #0
 8020024:	e6f1      	b.n	801fe0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020026:	4631      	mov	r1, r6
 8020028:	e6ef      	b.n	801fe0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802002a:	2400      	movs	r4, #0
 802002c:	e700      	b.n	801fe30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802002e:	2200      	movs	r2, #0
 8020030:	4614      	mov	r4, r2
 8020032:	e70b      	b.n	801fe4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020034:	4602      	mov	r2, r0
 8020036:	4604      	mov	r4, r0
 8020038:	e708      	b.n	801fe4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802003a:	2200      	movs	r2, #0
 802003c:	e706      	b.n	801fe4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802003e:	4632      	mov	r2, r6
 8020040:	e704      	b.n	801fe4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08020042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020042:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020046:	b09f      	sub	sp, #124	; 0x7c
 8020048:	921b      	str	r2, [sp, #108]	; 0x6c
 802004a:	9309      	str	r3, [sp, #36]	; 0x24
 802004c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802004e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020052:	931c      	str	r3, [sp, #112]	; 0x70
 8020054:	9119      	str	r1, [sp, #100]	; 0x64
 8020056:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802005a:	901d      	str	r0, [sp, #116]	; 0x74
 802005c:	6850      	ldr	r0, [r2, #4]
 802005e:	6812      	ldr	r2, [r2, #0]
 8020060:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020062:	fb00 1303 	mla	r3, r0, r3, r1
 8020066:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802006a:	930c      	str	r3, [sp, #48]	; 0x30
 802006c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802006e:	681b      	ldr	r3, [r3, #0]
 8020070:	9312      	str	r3, [sp, #72]	; 0x48
 8020072:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020074:	685e      	ldr	r6, [r3, #4]
 8020076:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802007a:	930d      	str	r3, [sp, #52]	; 0x34
 802007c:	3604      	adds	r6, #4
 802007e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020080:	2b00      	cmp	r3, #0
 8020082:	dc03      	bgt.n	802008c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020084:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020086:	2b00      	cmp	r3, #0
 8020088:	f340 8388 	ble.w	802079c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802008c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802008e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020092:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020096:	1e48      	subs	r0, r1, #1
 8020098:	1e57      	subs	r7, r2, #1
 802009a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802009c:	2b00      	cmp	r3, #0
 802009e:	f340 8195 	ble.w	80203cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80200a2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80200a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80200a8:	ea4f 4325 	mov.w	r3, r5, asr #16
 80200ac:	d406      	bmi.n	80200bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80200ae:	4584      	cmp	ip, r0
 80200b0:	da04      	bge.n	80200bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80200b2:	2b00      	cmp	r3, #0
 80200b4:	db02      	blt.n	80200bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80200b6:	42bb      	cmp	r3, r7
 80200b8:	f2c0 8189 	blt.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80200bc:	f11c 0c01 	adds.w	ip, ip, #1
 80200c0:	f100 8177 	bmi.w	80203b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80200c4:	4561      	cmp	r1, ip
 80200c6:	f2c0 8174 	blt.w	80203b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80200ca:	3301      	adds	r3, #1
 80200cc:	f100 8171 	bmi.w	80203b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80200d0:	429a      	cmp	r2, r3
 80200d2:	f2c0 816e 	blt.w	80203b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80200d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200d8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80200da:	931a      	str	r3, [sp, #104]	; 0x68
 80200dc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80200de:	2b00      	cmp	r3, #0
 80200e0:	f340 8193 	ble.w	802040a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80200e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80200e6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80200ea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80200ec:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80200f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80200f2:	141b      	asrs	r3, r3, #16
 80200f4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80200f8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80200fc:	f100 81d6 	bmi.w	80204ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020100:	f100 38ff 	add.w	r8, r0, #4294967295
 8020104:	4543      	cmp	r3, r8
 8020106:	f280 81d1 	bge.w	80204ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802010a:	f1bc 0f00 	cmp.w	ip, #0
 802010e:	f2c0 81cd 	blt.w	80204ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020112:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020116:	45c4      	cmp	ip, r8
 8020118:	f280 81c8 	bge.w	80204ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802011c:	b200      	sxth	r0, r0
 802011e:	fb0c 3300 	mla	r3, ip, r0, r3
 8020122:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020124:	eb04 0803 	add.w	r8, r4, r3
 8020128:	5ce3      	ldrb	r3, [r4, r3]
 802012a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802012e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020132:	2a00      	cmp	r2, #0
 8020134:	f000 81af 	beq.w	8020496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020138:	f898 c001 	ldrb.w	ip, [r8, #1]
 802013c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020140:	940e      	str	r4, [sp, #56]	; 0x38
 8020142:	0e24      	lsrs	r4, r4, #24
 8020144:	9415      	str	r4, [sp, #84]	; 0x54
 8020146:	b179      	cbz	r1, 8020168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020148:	eb08 0c00 	add.w	ip, r8, r0
 802014c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020150:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020154:	900a      	str	r0, [sp, #40]	; 0x28
 8020156:	0e00      	lsrs	r0, r0, #24
 8020158:	9013      	str	r0, [sp, #76]	; 0x4c
 802015a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802015e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020162:	900f      	str	r0, [sp, #60]	; 0x3c
 8020164:	0e00      	lsrs	r0, r0, #24
 8020166:	9016      	str	r0, [sp, #88]	; 0x58
 8020168:	b292      	uxth	r2, r2
 802016a:	b289      	uxth	r1, r1
 802016c:	fb02 f901 	mul.w	r9, r2, r1
 8020170:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020174:	0112      	lsls	r2, r2, #4
 8020176:	eba2 0809 	sub.w	r8, r2, r9
 802017a:	b289      	uxth	r1, r1
 802017c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020180:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020182:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020184:	fa1f f888 	uxth.w	r8, r8
 8020188:	1a52      	subs	r2, r2, r1
 802018a:	b292      	uxth	r2, r2
 802018c:	fb08 f000 	mul.w	r0, r8, r0
 8020190:	fb02 000e 	mla	r0, r2, lr, r0
 8020194:	fb01 0004 	mla	r0, r1, r4, r0
 8020198:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802019a:	fb09 0004 	mla	r0, r9, r4, r0
 802019e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80201a2:	2800      	cmp	r0, #0
 80201a4:	f000 80fa 	beq.w	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80201a8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80201ac:	d01b      	beq.n	80201e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80201ae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80201b2:	fb0e fa0a 	mul.w	sl, lr, sl
 80201b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80201ba:	fb0e fe03 	mul.w	lr, lr, r3
 80201be:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80201c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80201c6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80201ca:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80201ce:	4453      	add	r3, sl
 80201d0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80201d4:	0a1b      	lsrs	r3, r3, #8
 80201d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80201de:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80201e2:	ea43 030c 	orr.w	r3, r3, ip
 80201e6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80201e8:	2cff      	cmp	r4, #255	; 0xff
 80201ea:	d021      	beq.n	8020230 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80201ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80201ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80201f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80201f4:	fb04 fb0b 	mul.w	fp, r4, fp
 80201f8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80201fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80201fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020200:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020204:	fb04 fa0a 	mul.w	sl, r4, sl
 8020208:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802020c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020210:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020214:	44de      	add	lr, fp
 8020216:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802021a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802021e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020222:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020226:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802022a:	ea4e 040a 	orr.w	r4, lr, sl
 802022e:	940e      	str	r4, [sp, #56]	; 0x38
 8020230:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020232:	2cff      	cmp	r4, #255	; 0xff
 8020234:	d021      	beq.n	802027a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020236:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020238:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802023c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802023e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020242:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020244:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020248:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802024a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802024e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020252:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020256:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802025a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802025e:	44de      	add	lr, fp
 8020260:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020264:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020268:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802026c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020270:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020274:	ea4e 040a 	orr.w	r4, lr, sl
 8020278:	940a      	str	r4, [sp, #40]	; 0x28
 802027a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802027c:	2cff      	cmp	r4, #255	; 0xff
 802027e:	d021      	beq.n	80202c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020280:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020282:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020286:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020288:	fb04 fb0b 	mul.w	fp, r4, fp
 802028c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802028e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020292:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020294:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020298:	fb04 fa0a 	mul.w	sl, r4, sl
 802029c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80202a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80202a8:	44de      	add	lr, fp
 80202aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80202ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80202b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80202b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80202be:	ea4e 040a 	orr.w	r4, lr, sl
 80202c2:	940f      	str	r4, [sp, #60]	; 0x3c
 80202c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80202c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80202ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80202cc:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80202d0:	fb08 fc0c 	mul.w	ip, r8, ip
 80202d4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80202d8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80202dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80202de:	fb01 cc0e 	mla	ip, r1, lr, ip
 80202e2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80202e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80202e8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80202ec:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80202f0:	fb08 f80e 	mul.w	r8, r8, lr
 80202f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80202f8:	fb02 8303 	mla	r3, r2, r3, r8
 80202fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80202fe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020300:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020304:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020306:	fb01 330a 	mla	r3, r1, sl, r3
 802030a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802030e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020310:	fb09 3901 	mla	r9, r9, r1, r3
 8020314:	4342      	muls	r2, r0
 8020316:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802031a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802031e:	883b      	ldrh	r3, [r7, #0]
 8020320:	1c50      	adds	r0, r2, #1
 8020322:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020326:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802032a:	ea4c 0c09 	orr.w	ip, ip, r9
 802032e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020332:	1219      	asrs	r1, r3, #8
 8020334:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020338:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802033c:	b2c0      	uxtb	r0, r0
 802033e:	fb12 f204 	smulbb	r2, r2, r4
 8020342:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020346:	fb01 2100 	mla	r1, r1, r0, r2
 802034a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802034e:	10da      	asrs	r2, r3, #3
 8020350:	fa5f fc8c 	uxtb.w	ip, ip
 8020354:	00db      	lsls	r3, r3, #3
 8020356:	fb1c fc04 	smulbb	ip, ip, r4
 802035a:	b2db      	uxtb	r3, r3
 802035c:	b289      	uxth	r1, r1
 802035e:	fb03 c300 	mla	r3, r3, r0, ip
 8020362:	fa1f fc83 	uxth.w	ip, r3
 8020366:	1c4b      	adds	r3, r1, #1
 8020368:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802036c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020370:	fb1e fe04 	smulbb	lr, lr, r4
 8020374:	f10c 0301 	add.w	r3, ip, #1
 8020378:	fb02 e200 	mla	r2, r2, r0, lr
 802037c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020380:	b292      	uxth	r2, r2
 8020382:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020386:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802038a:	430b      	orrs	r3, r1
 802038c:	1c51      	adds	r1, r2, #1
 802038e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020392:	0952      	lsrs	r2, r2, #5
 8020394:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020398:	4313      	orrs	r3, r2
 802039a:	803b      	strh	r3, [r7, #0]
 802039c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802039e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80203a0:	441a      	add	r2, r3
 80203a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80203a4:	9229      	str	r2, [sp, #164]	; 0xa4
 80203a6:	441d      	add	r5, r3
 80203a8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80203aa:	3b01      	subs	r3, #1
 80203ac:	3702      	adds	r7, #2
 80203ae:	931a      	str	r3, [sp, #104]	; 0x68
 80203b0:	e694      	b.n	80200dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80203b2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80203b4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80203b6:	441c      	add	r4, r3
 80203b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80203ba:	9429      	str	r4, [sp, #164]	; 0xa4
 80203bc:	441d      	add	r5, r3
 80203be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203c0:	3b01      	subs	r3, #1
 80203c2:	9309      	str	r3, [sp, #36]	; 0x24
 80203c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80203c6:	3302      	adds	r3, #2
 80203c8:	930c      	str	r3, [sp, #48]	; 0x30
 80203ca:	e666      	b.n	802009a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80203cc:	d024      	beq.n	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80203ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203d0:	982b      	ldr	r0, [sp, #172]	; 0xac
 80203d2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80203d4:	3b01      	subs	r3, #1
 80203d6:	fb00 4003 	mla	r0, r0, r3, r4
 80203da:	1400      	asrs	r0, r0, #16
 80203dc:	f53f ae7b 	bmi.w	80200d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203e0:	3901      	subs	r1, #1
 80203e2:	4288      	cmp	r0, r1
 80203e4:	f6bf ae77 	bge.w	80200d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203e8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80203ea:	fb01 5303 	mla	r3, r1, r3, r5
 80203ee:	141b      	asrs	r3, r3, #16
 80203f0:	f53f ae71 	bmi.w	80200d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203f4:	3a01      	subs	r2, #1
 80203f6:	4293      	cmp	r3, r2
 80203f8:	f6bf ae6d 	bge.w	80200d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203fc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020400:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020404:	f1bb 0f00 	cmp.w	fp, #0
 8020408:	dc70      	bgt.n	80204ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802040a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802040c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020410:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020412:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020416:	930c      	str	r3, [sp, #48]	; 0x30
 8020418:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802041a:	2b00      	cmp	r3, #0
 802041c:	f340 81be 	ble.w	802079c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020420:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020424:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020428:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802042c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802042e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020432:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020436:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802043a:	eef0 6a62 	vmov.f32	s13, s5
 802043e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020442:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020446:	ee77 2a62 	vsub.f32	s5, s14, s5
 802044a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802044e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020452:	eef0 6a43 	vmov.f32	s13, s6
 8020456:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802045a:	ee12 2a90 	vmov	r2, s5
 802045e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020462:	fb92 f3f3 	sdiv	r3, r2, r3
 8020466:	ee13 2a10 	vmov	r2, s6
 802046a:	932b      	str	r3, [sp, #172]	; 0xac
 802046c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802046e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020472:	932c      	str	r3, [sp, #176]	; 0xb0
 8020474:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020476:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020478:	3b01      	subs	r3, #1
 802047a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802047e:	9319      	str	r3, [sp, #100]	; 0x64
 8020480:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020482:	bf08      	it	eq
 8020484:	4613      	moveq	r3, r2
 8020486:	ee16 5a90 	vmov	r5, s13
 802048a:	9309      	str	r3, [sp, #36]	; 0x24
 802048c:	eeb0 3a67 	vmov.f32	s6, s15
 8020490:	eef0 2a47 	vmov.f32	s5, s14
 8020494:	e5f3      	b.n	802007e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020496:	2900      	cmp	r1, #0
 8020498:	f43f ae66 	beq.w	8020168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802049c:	f818 0000 	ldrb.w	r0, [r8, r0]
 80204a0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80204a4:	900a      	str	r0, [sp, #40]	; 0x28
 80204a6:	0e00      	lsrs	r0, r0, #24
 80204a8:	9013      	str	r0, [sp, #76]	; 0x4c
 80204aa:	e65d      	b.n	8020168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80204ac:	f113 0801 	adds.w	r8, r3, #1
 80204b0:	f53f af74 	bmi.w	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204b4:	4540      	cmp	r0, r8
 80204b6:	f6ff af71 	blt.w	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204ba:	f11c 0801 	adds.w	r8, ip, #1
 80204be:	f53f af6d 	bmi.w	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204c2:	45c6      	cmp	lr, r8
 80204c4:	f6ff af6a 	blt.w	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204c8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80204ca:	9302      	str	r3, [sp, #8]
 80204cc:	b200      	sxth	r0, r0
 80204ce:	fa0f f38e 	sxth.w	r3, lr
 80204d2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80204d6:	e9cd c203 	strd	ip, r2, [sp, #12]
 80204da:	9301      	str	r3, [sp, #4]
 80204dc:	9000      	str	r0, [sp, #0]
 80204de:	4633      	mov	r3, r6
 80204e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80204e2:	981d      	ldr	r0, [sp, #116]	; 0x74
 80204e4:	4639      	mov	r1, r7
 80204e6:	f7ff fc62 	bl	801fdae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80204ea:	e757      	b.n	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80204ee:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80204f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80204f4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80204f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80204fa:	1427      	asrs	r7, r4, #16
 80204fc:	142b      	asrs	r3, r5, #16
 80204fe:	fb01 7303 	mla	r3, r1, r3, r7
 8020502:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020504:	18e7      	adds	r7, r4, r3
 8020506:	5ce3      	ldrb	r3, [r4, r3]
 8020508:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802050c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020510:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020514:	2a00      	cmp	r2, #0
 8020516:	f000 8137 	beq.w	8020788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802051a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802051e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020522:	9410      	str	r4, [sp, #64]	; 0x40
 8020524:	0e24      	lsrs	r4, r4, #24
 8020526:	9417      	str	r4, [sp, #92]	; 0x5c
 8020528:	b170      	cbz	r0, 8020548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802052a:	eb07 0e01 	add.w	lr, r7, r1
 802052e:	5c79      	ldrb	r1, [r7, r1]
 8020530:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020534:	910b      	str	r1, [sp, #44]	; 0x2c
 8020536:	0e09      	lsrs	r1, r1, #24
 8020538:	9114      	str	r1, [sp, #80]	; 0x50
 802053a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802053e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020542:	9111      	str	r1, [sp, #68]	; 0x44
 8020544:	0e09      	lsrs	r1, r1, #24
 8020546:	9118      	str	r1, [sp, #96]	; 0x60
 8020548:	b292      	uxth	r2, r2
 802054a:	b280      	uxth	r0, r0
 802054c:	fb02 f800 	mul.w	r8, r2, r0
 8020550:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020554:	0112      	lsls	r2, r2, #4
 8020556:	eba2 0e08 	sub.w	lr, r2, r8
 802055a:	b280      	uxth	r0, r0
 802055c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020560:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020562:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020564:	fa1f fe8e 	uxth.w	lr, lr
 8020568:	1a12      	subs	r2, r2, r0
 802056a:	b292      	uxth	r2, r2
 802056c:	fb0e f101 	mul.w	r1, lr, r1
 8020570:	fb02 110c 	mla	r1, r2, ip, r1
 8020574:	fb00 1104 	mla	r1, r0, r4, r1
 8020578:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802057a:	fb08 1104 	mla	r1, r8, r4, r1
 802057e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020582:	2900      	cmp	r1, #0
 8020584:	f000 80f5 	beq.w	8020772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020588:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802058c:	d019      	beq.n	80205c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802058e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020592:	fb0c fa0a 	mul.w	sl, ip, sl
 8020596:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802059a:	fb0c fc03 	mul.w	ip, ip, r3
 802059e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80205a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80205a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80205aa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80205ae:	4453      	add	r3, sl
 80205b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80205b4:	0a1b      	lsrs	r3, r3, #8
 80205b6:	0a3f      	lsrs	r7, r7, #8
 80205b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80205bc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80205c0:	433b      	orrs	r3, r7
 80205c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80205c4:	2cff      	cmp	r4, #255	; 0xff
 80205c6:	d020      	beq.n	802060a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80205c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80205ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80205d0:	4367      	muls	r7, r4
 80205d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80205d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205d8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80205da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80205de:	fb04 fa0a 	mul.w	sl, r4, sl
 80205e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80205e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205ea:	44bc      	add	ip, r7
 80205ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80205f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80205f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020600:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020604:	ea4c 040a 	orr.w	r4, ip, sl
 8020608:	9410      	str	r4, [sp, #64]	; 0x40
 802060a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802060c:	2cff      	cmp	r4, #255	; 0xff
 802060e:	d020      	beq.n	8020652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020610:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020612:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020616:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020618:	4367      	muls	r7, r4
 802061a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802061c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020620:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020622:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020626:	fb04 fa0a 	mul.w	sl, r4, sl
 802062a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802062e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020632:	44bc      	add	ip, r7
 8020634:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020638:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802063c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020644:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020648:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802064c:	ea4c 040a 	orr.w	r4, ip, sl
 8020650:	940b      	str	r4, [sp, #44]	; 0x2c
 8020652:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020654:	2cff      	cmp	r4, #255	; 0xff
 8020656:	d020      	beq.n	802069a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020658:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802065a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802065e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020660:	4367      	muls	r7, r4
 8020662:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020664:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020668:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802066a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802066e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020672:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020676:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802067a:	44bc      	add	ip, r7
 802067c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020680:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020684:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802068c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020690:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020694:	ea4c 040a 	orr.w	r4, ip, sl
 8020698:	9411      	str	r4, [sp, #68]	; 0x44
 802069a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802069c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80206a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206a2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80206a6:	fb0e f707 	mul.w	r7, lr, r7
 80206aa:	fb02 770c 	mla	r7, r2, ip, r7
 80206ae:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80206b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80206b4:	fb00 770c 	mla	r7, r0, ip, r7
 80206b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80206bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80206be:	fb08 770c 	mla	r7, r8, ip, r7
 80206c2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80206c6:	fb0e fe0c 	mul.w	lr, lr, ip
 80206ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80206ce:	fb02 e303 	mla	r3, r2, r3, lr
 80206d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80206d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80206d6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80206da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80206dc:	fb00 330a 	mla	r3, r0, sl, r3
 80206e0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80206e4:	fb08 3c0c 	mla	ip, r8, ip, r3
 80206e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80206ea:	f8b9 0000 	ldrh.w	r0, [r9]
 80206ee:	434b      	muls	r3, r1
 80206f0:	0a3f      	lsrs	r7, r7, #8
 80206f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206f6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80206fa:	1c59      	adds	r1, r3, #1
 80206fc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020700:	ea47 070c 	orr.w	r7, r7, ip
 8020704:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020708:	1202      	asrs	r2, r0, #8
 802070a:	0c3b      	lsrs	r3, r7, #16
 802070c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020710:	b2c9      	uxtb	r1, r1
 8020712:	fb13 f304 	smulbb	r3, r3, r4
 8020716:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802071a:	fb02 3201 	mla	r2, r2, r1, r3
 802071e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020722:	10c3      	asrs	r3, r0, #3
 8020724:	b2ff      	uxtb	r7, r7
 8020726:	00c0      	lsls	r0, r0, #3
 8020728:	b292      	uxth	r2, r2
 802072a:	fb1c fc04 	smulbb	ip, ip, r4
 802072e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020732:	b2c0      	uxtb	r0, r0
 8020734:	fb17 f704 	smulbb	r7, r7, r4
 8020738:	fb03 c301 	mla	r3, r3, r1, ip
 802073c:	fb00 7001 	mla	r0, r0, r1, r7
 8020740:	f102 0c01 	add.w	ip, r2, #1
 8020744:	b280      	uxth	r0, r0
 8020746:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802074a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802074e:	1c42      	adds	r2, r0, #1
 8020750:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020754:	b29b      	uxth	r3, r3
 8020756:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802075a:	ea42 020c 	orr.w	r2, r2, ip
 802075e:	f103 0c01 	add.w	ip, r3, #1
 8020762:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020766:	095b      	lsrs	r3, r3, #5
 8020768:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802076c:	431a      	orrs	r2, r3
 802076e:	f8a9 2000 	strh.w	r2, [r9]
 8020772:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020774:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020776:	441a      	add	r2, r3
 8020778:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802077a:	9229      	str	r2, [sp, #164]	; 0xa4
 802077c:	f109 0902 	add.w	r9, r9, #2
 8020780:	441d      	add	r5, r3
 8020782:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020786:	e63d      	b.n	8020404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020788:	2800      	cmp	r0, #0
 802078a:	f43f aedd 	beq.w	8020548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802078e:	5c79      	ldrb	r1, [r7, r1]
 8020790:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020794:	910b      	str	r1, [sp, #44]	; 0x2c
 8020796:	0e09      	lsrs	r1, r1, #24
 8020798:	9114      	str	r1, [sp, #80]	; 0x50
 802079a:	e6d5      	b.n	8020548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802079c:	b01f      	add	sp, #124	; 0x7c
 802079e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080207a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80207a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207a6:	b089      	sub	sp, #36	; 0x24
 80207a8:	9101      	str	r1, [sp, #4]
 80207aa:	9801      	ldr	r0, [sp, #4]
 80207ac:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80207b0:	8800      	ldrh	r0, [r0, #0]
 80207b2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80207b6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80207ba:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80207be:	1206      	asrs	r6, r0, #8
 80207c0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80207c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80207c8:	9602      	str	r6, [sp, #8]
 80207ca:	10c6      	asrs	r6, r0, #3
 80207cc:	00c0      	lsls	r0, r0, #3
 80207ce:	b2c0      	uxtb	r0, r0
 80207d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80207d4:	9004      	str	r0, [sp, #16]
 80207d6:	2f00      	cmp	r7, #0
 80207d8:	fb07 100c 	mla	r0, r7, ip, r1
 80207dc:	9603      	str	r6, [sp, #12]
 80207de:	eb02 0e00 	add.w	lr, r2, r0
 80207e2:	f2c0 810a 	blt.w	80209fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80207e6:	45b8      	cmp	r8, r7
 80207e8:	f340 8107 	ble.w	80209fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80207ec:	2900      	cmp	r1, #0
 80207ee:	f2c0 8102 	blt.w	80209f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80207f2:	458c      	cmp	ip, r1
 80207f4:	f340 80ff 	ble.w	80209f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80207f8:	5c12      	ldrb	r2, [r2, r0]
 80207fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80207fe:	1c4a      	adds	r2, r1, #1
 8020800:	f100 80fe 	bmi.w	8020a00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020804:	4594      	cmp	ip, r2
 8020806:	f340 80fb 	ble.w	8020a00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802080a:	2d00      	cmp	r5, #0
 802080c:	f000 80fa 	beq.w	8020a04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020810:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020814:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020818:	3701      	adds	r7, #1
 802081a:	f100 80f7 	bmi.w	8020a0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802081e:	45b8      	cmp	r8, r7
 8020820:	f340 80f4 	ble.w	8020a0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020824:	2c00      	cmp	r4, #0
 8020826:	f000 80f4 	beq.w	8020a12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802082a:	2900      	cmp	r1, #0
 802082c:	eb0e 020c 	add.w	r2, lr, ip
 8020830:	f2c0 80ea 	blt.w	8020a08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020834:	458c      	cmp	ip, r1
 8020836:	f340 80e7 	ble.w	8020a08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802083a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802083e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020842:	3101      	adds	r1, #1
 8020844:	f100 80e8 	bmi.w	8020a18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020848:	458c      	cmp	ip, r1
 802084a:	f340 80e5 	ble.w	8020a18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802084e:	2d00      	cmp	r5, #0
 8020850:	f000 80e4 	beq.w	8020a1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020854:	7852      	ldrb	r2, [r2, #1]
 8020856:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802085a:	0e0b      	lsrs	r3, r1, #24
 802085c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020860:	9300      	str	r3, [sp, #0]
 8020862:	b2a4      	uxth	r4, r4
 8020864:	b2ab      	uxth	r3, r5
 8020866:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802086a:	fb03 f904 	mul.w	r9, r3, r4
 802086e:	fb0a f505 	mul.w	r5, sl, r5
 8020872:	011b      	lsls	r3, r3, #4
 8020874:	eba3 0e09 	sub.w	lr, r3, r9
 8020878:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802087c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020880:	0a28      	lsrs	r0, r5, #8
 8020882:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020886:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802088a:	4405      	add	r5, r0
 802088c:	0a2d      	lsrs	r5, r5, #8
 802088e:	fb0a f303 	mul.w	r3, sl, r3
 8020892:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020896:	9005      	str	r0, [sp, #20]
 8020898:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802089c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80208a0:	0a1b      	lsrs	r3, r3, #8
 80208a2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80208a6:	9306      	str	r3, [sp, #24]
 80208a8:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80208ac:	fb0b f303 	mul.w	r3, fp, r3
 80208b0:	0a1d      	lsrs	r5, r3, #8
 80208b2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80208b6:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80208ba:	fb0b f606 	mul.w	r6, fp, r6
 80208be:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80208c2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80208c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80208ca:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80208ce:	fb08 f707 	mul.w	r7, r8, r7
 80208d2:	441d      	add	r5, r3
 80208d4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80208d8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80208dc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80208e0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80208e4:	fb08 fc0c 	mul.w	ip, r8, ip
 80208e8:	0a1b      	lsrs	r3, r3, #8
 80208ea:	9307      	str	r3, [sp, #28]
 80208ec:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80208f0:	0e0b      	lsrs	r3, r1, #24
 80208f2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80208f6:	435f      	muls	r7, r3
 80208f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80208fc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020900:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020904:	4460      	add	r0, ip
 8020906:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802090a:	b2a4      	uxth	r4, r4
 802090c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020910:	0a2d      	lsrs	r5, r5, #8
 8020912:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020916:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802091a:	fa1f fe8e 	uxth.w	lr, lr
 802091e:	4359      	muls	r1, r3
 8020920:	1b12      	subs	r2, r2, r4
 8020922:	9b05      	ldr	r3, [sp, #20]
 8020924:	44bc      	add	ip, r7
 8020926:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802092a:	b292      	uxth	r2, r2
 802092c:	fb05 f50e 	mul.w	r5, r5, lr
 8020930:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020934:	fb03 5502 	mla	r5, r3, r2, r5
 8020938:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802093c:	9b06      	ldr	r3, [sp, #24]
 802093e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020942:	0a36      	lsrs	r6, r6, #8
 8020944:	0a00      	lsrs	r0, r0, #8
 8020946:	fb0c 5509 	mla	r5, ip, r9, r5
 802094a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802094e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020952:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020956:	fb00 5504 	mla	r5, r0, r4, r5
 802095a:	fb0e f606 	mul.w	r6, lr, r6
 802095e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020962:	0a09      	lsrs	r1, r1, #8
 8020964:	9b07      	ldr	r3, [sp, #28]
 8020966:	fb02 6000 	mla	r0, r2, r0, r6
 802096a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802096e:	fb09 0001 	mla	r0, r9, r1, r0
 8020972:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020976:	fb0e fe0b 	mul.w	lr, lr, fp
 802097a:	fb04 0003 	mla	r0, r4, r3, r0
 802097e:	fb02 e20a 	mla	r2, r2, sl, lr
 8020982:	9b00      	ldr	r3, [sp, #0]
 8020984:	fb04 2408 	mla	r4, r4, r8, r2
 8020988:	fb09 4903 	mla	r9, r9, r3, r4
 802098c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020990:	9b02      	ldr	r3, [sp, #8]
 8020992:	9a04      	ldr	r2, [sp, #16]
 8020994:	fa5f f989 	uxtb.w	r9, r9
 8020998:	fb03 f109 	mul.w	r1, r3, r9
 802099c:	9b03      	ldr	r3, [sp, #12]
 802099e:	0a2d      	lsrs	r5, r5, #8
 80209a0:	0a00      	lsrs	r0, r0, #8
 80209a2:	fb03 f309 	mul.w	r3, r3, r9
 80209a6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80209aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80209ae:	4305      	orrs	r5, r0
 80209b0:	fb02 f909 	mul.w	r9, r2, r9
 80209b4:	1c58      	adds	r0, r3, #1
 80209b6:	1c4a      	adds	r2, r1, #1
 80209b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80209bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80209c0:	0a2b      	lsrs	r3, r5, #8
 80209c2:	0c2a      	lsrs	r2, r5, #16
 80209c4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80209c8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80209cc:	00db      	lsls	r3, r3, #3
 80209ce:	0212      	lsls	r2, r2, #8
 80209d0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80209d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209d8:	4313      	orrs	r3, r2
 80209da:	f109 0201 	add.w	r2, r9, #1
 80209de:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80209e2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80209e6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80209ea:	431d      	orrs	r5, r3
 80209ec:	9b01      	ldr	r3, [sp, #4]
 80209ee:	801d      	strh	r5, [r3, #0]
 80209f0:	b009      	add	sp, #36	; 0x24
 80209f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209f6:	2000      	movs	r0, #0
 80209f8:	e701      	b.n	80207fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80209fa:	2600      	movs	r6, #0
 80209fc:	4630      	mov	r0, r6
 80209fe:	e70b      	b.n	8020818 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a00:	2600      	movs	r6, #0
 8020a02:	e709      	b.n	8020818 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a04:	462e      	mov	r6, r5
 8020a06:	e707      	b.n	8020818 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a08:	2700      	movs	r7, #0
 8020a0a:	e71a      	b.n	8020842 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020a0c:	2100      	movs	r1, #0
 8020a0e:	460f      	mov	r7, r1
 8020a10:	e723      	b.n	802085a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a12:	4621      	mov	r1, r4
 8020a14:	4627      	mov	r7, r4
 8020a16:	e720      	b.n	802085a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a18:	2100      	movs	r1, #0
 8020a1a:	e71e      	b.n	802085a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a1c:	4629      	mov	r1, r5
 8020a1e:	e71c      	b.n	802085a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020a20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a24:	b09b      	sub	sp, #108	; 0x6c
 8020a26:	9218      	str	r2, [sp, #96]	; 0x60
 8020a28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020a2a:	9116      	str	r1, [sp, #88]	; 0x58
 8020a2c:	9307      	str	r3, [sp, #28]
 8020a2e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020a32:	9019      	str	r0, [sp, #100]	; 0x64
 8020a34:	6850      	ldr	r0, [r2, #4]
 8020a36:	6812      	ldr	r2, [r2, #0]
 8020a38:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020a3a:	fb00 1303 	mla	r3, r0, r3, r1
 8020a3e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020a42:	930a      	str	r3, [sp, #40]	; 0x28
 8020a44:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a46:	681b      	ldr	r3, [r3, #0]
 8020a48:	930f      	str	r3, [sp, #60]	; 0x3c
 8020a4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a4c:	685e      	ldr	r6, [r3, #4]
 8020a4e:	3604      	adds	r6, #4
 8020a50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020a52:	2b00      	cmp	r3, #0
 8020a54:	dc03      	bgt.n	8020a5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020a56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020a58:	2b00      	cmp	r3, #0
 8020a5a:	f340 8373 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020a5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a68:	1e48      	subs	r0, r1, #1
 8020a6a:	1e57      	subs	r7, r2, #1
 8020a6c:	9b07      	ldr	r3, [sp, #28]
 8020a6e:	2b00      	cmp	r3, #0
 8020a70:	f340 8190 	ble.w	8020d94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020a74:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020a76:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020a7a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a7e:	d406      	bmi.n	8020a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a80:	4584      	cmp	ip, r0
 8020a82:	da04      	bge.n	8020a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a84:	2b00      	cmp	r3, #0
 8020a86:	db02      	blt.n	8020a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a88:	42bb      	cmp	r3, r7
 8020a8a:	f2c0 8184 	blt.w	8020d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020a8e:	f11c 0c01 	adds.w	ip, ip, #1
 8020a92:	f100 8172 	bmi.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a96:	4561      	cmp	r1, ip
 8020a98:	f2c0 816f 	blt.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a9c:	3301      	adds	r3, #1
 8020a9e:	f100 816c 	bmi.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020aa2:	429a      	cmp	r2, r3
 8020aa4:	f2c0 8169 	blt.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020aa8:	9b07      	ldr	r3, [sp, #28]
 8020aaa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020aac:	9317      	str	r3, [sp, #92]	; 0x5c
 8020aae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020ab0:	2b00      	cmp	r3, #0
 8020ab2:	f340 818e 	ble.w	8020dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020ab6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020ab8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020abc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020abe:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020ac2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020ac4:	141b      	asrs	r3, r3, #16
 8020ac6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020aca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ace:	f100 81d1 	bmi.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020ad2:	f101 38ff 	add.w	r8, r1, #4294967295
 8020ad6:	4543      	cmp	r3, r8
 8020ad8:	f280 81cc 	bge.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020adc:	f1bc 0f00 	cmp.w	ip, #0
 8020ae0:	f2c0 81c8 	blt.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020ae4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020ae8:	45c4      	cmp	ip, r8
 8020aea:	f280 81c3 	bge.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020aee:	b209      	sxth	r1, r1
 8020af0:	fb0c 3301 	mla	r3, ip, r1, r3
 8020af4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020af6:	eb04 0803 	add.w	r8, r4, r3
 8020afa:	5ce3      	ldrb	r3, [r4, r3]
 8020afc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020b00:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020b04:	2a00      	cmp	r2, #0
 8020b06:	f000 81aa 	beq.w	8020e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020b0a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020b0e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020b12:	940b      	str	r4, [sp, #44]	; 0x2c
 8020b14:	0e24      	lsrs	r4, r4, #24
 8020b16:	9412      	str	r4, [sp, #72]	; 0x48
 8020b18:	b178      	cbz	r0, 8020b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020b1a:	eb08 0c01 	add.w	ip, r8, r1
 8020b1e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020b22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b26:	9108      	str	r1, [sp, #32]
 8020b28:	0e09      	lsrs	r1, r1, #24
 8020b2a:	9110      	str	r1, [sp, #64]	; 0x40
 8020b2c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020b30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b34:	910c      	str	r1, [sp, #48]	; 0x30
 8020b36:	0e09      	lsrs	r1, r1, #24
 8020b38:	9113      	str	r1, [sp, #76]	; 0x4c
 8020b3a:	b292      	uxth	r2, r2
 8020b3c:	b280      	uxth	r0, r0
 8020b3e:	fb02 f900 	mul.w	r9, r2, r0
 8020b42:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020b46:	0112      	lsls	r2, r2, #4
 8020b48:	eba2 0809 	sub.w	r8, r2, r9
 8020b4c:	b280      	uxth	r0, r0
 8020b4e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020b52:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020b54:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b56:	fa1f f888 	uxth.w	r8, r8
 8020b5a:	1a12      	subs	r2, r2, r0
 8020b5c:	b292      	uxth	r2, r2
 8020b5e:	fb08 f101 	mul.w	r1, r8, r1
 8020b62:	fb02 110e 	mla	r1, r2, lr, r1
 8020b66:	fb00 1104 	mla	r1, r0, r4, r1
 8020b6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b6c:	fb09 1104 	mla	r1, r9, r4, r1
 8020b70:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020b74:	2900      	cmp	r1, #0
 8020b76:	f000 80f5 	beq.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020b7a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020b7e:	d01b      	beq.n	8020bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020b80:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020b84:	fb0e fa0a 	mul.w	sl, lr, sl
 8020b88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b8c:	fb0e fe03 	mul.w	lr, lr, r3
 8020b90:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020b94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b98:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020b9c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020ba0:	4453      	add	r3, sl
 8020ba2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020ba6:	0a1b      	lsrs	r3, r3, #8
 8020ba8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020bb0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020bb4:	ea43 030c 	orr.w	r3, r3, ip
 8020bb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020bba:	2cff      	cmp	r4, #255	; 0xff
 8020bbc:	d021      	beq.n	8020c02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020bbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bc0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020bc4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020bc6:	fb04 fb0b 	mul.w	fp, r4, fp
 8020bca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bcc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020bd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020bd2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020bd6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020bda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020bde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020be2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020be6:	44de      	add	lr, fp
 8020be8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020bec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020bf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020bf4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020bf8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020bfc:	ea4e 040a 	orr.w	r4, lr, sl
 8020c00:	940b      	str	r4, [sp, #44]	; 0x2c
 8020c02:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c04:	2cff      	cmp	r4, #255	; 0xff
 8020c06:	d021      	beq.n	8020c4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020c08:	9c08      	ldr	r4, [sp, #32]
 8020c0a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c0e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c10:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c14:	9c08      	ldr	r4, [sp, #32]
 8020c16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c20:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c30:	44de      	add	lr, fp
 8020c32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c46:	ea4e 040a 	orr.w	r4, lr, sl
 8020c4a:	9408      	str	r4, [sp, #32]
 8020c4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c4e:	2cff      	cmp	r4, #255	; 0xff
 8020c50:	d021      	beq.n	8020c96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020c52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020c54:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c5a:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020c60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c6a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c72:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c7a:	44de      	add	lr, fp
 8020c7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c90:	ea4e 040a 	orr.w	r4, lr, sl
 8020c94:	940c      	str	r4, [sp, #48]	; 0x30
 8020c96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020c9c:	9c08      	ldr	r4, [sp, #32]
 8020c9e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020ca2:	fb08 fc0c 	mul.w	ip, r8, ip
 8020ca6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020caa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020cae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020cb0:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020cb4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020cb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020cba:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020cbe:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020cc2:	fb08 f80e 	mul.w	r8, r8, lr
 8020cc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020cca:	fb02 8303 	mla	r3, r2, r3, r8
 8020cce:	9a08      	ldr	r2, [sp, #32]
 8020cd0:	f8b7 8000 	ldrh.w	r8, [r7]
 8020cd4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020cd8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020cda:	fb00 330a 	mla	r3, r0, sl, r3
 8020cde:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020ce2:	fb09 3900 	mla	r9, r9, r0, r3
 8020ce6:	43c9      	mvns	r1, r1
 8020ce8:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020cec:	fa5f fe81 	uxtb.w	lr, r1
 8020cf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020cf4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020cf8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020cfc:	fb02 f20e 	mul.w	r2, r2, lr
 8020d00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020d04:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020d08:	ea4c 0c09 	orr.w	ip, ip, r9
 8020d0c:	1c53      	adds	r3, r2, #1
 8020d0e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020d12:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020d16:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020d1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020d22:	4a63      	ldr	r2, [pc, #396]	; (8020eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020d24:	fb00 f00e 	mul.w	r0, r0, lr
 8020d28:	b2db      	uxtb	r3, r3
 8020d2a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020d2e:	1c43      	adds	r3, r0, #1
 8020d30:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020d34:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020d38:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020d3c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020d40:	b2c9      	uxtb	r1, r1
 8020d42:	00db      	lsls	r3, r3, #3
 8020d44:	fb01 f10e 	mul.w	r1, r1, lr
 8020d48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d4c:	4313      	orrs	r3, r2
 8020d4e:	1c4a      	adds	r2, r1, #1
 8020d50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d54:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020d58:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020d5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020d60:	f8a7 c000 	strh.w	ip, [r7]
 8020d64:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020d66:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020d68:	441a      	add	r2, r3
 8020d6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d6c:	9225      	str	r2, [sp, #148]	; 0x94
 8020d6e:	441d      	add	r5, r3
 8020d70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020d72:	3b01      	subs	r3, #1
 8020d74:	3702      	adds	r7, #2
 8020d76:	9317      	str	r3, [sp, #92]	; 0x5c
 8020d78:	e699      	b.n	8020aae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020d7a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020d7c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d7e:	441c      	add	r4, r3
 8020d80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d82:	9425      	str	r4, [sp, #148]	; 0x94
 8020d84:	441d      	add	r5, r3
 8020d86:	9b07      	ldr	r3, [sp, #28]
 8020d88:	3b01      	subs	r3, #1
 8020d8a:	9307      	str	r3, [sp, #28]
 8020d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d8e:	3302      	adds	r3, #2
 8020d90:	930a      	str	r3, [sp, #40]	; 0x28
 8020d92:	e66b      	b.n	8020a6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020d94:	d024      	beq.n	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020d96:	9b07      	ldr	r3, [sp, #28]
 8020d98:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020d9a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d9c:	3b01      	subs	r3, #1
 8020d9e:	fb00 4003 	mla	r0, r0, r3, r4
 8020da2:	1400      	asrs	r0, r0, #16
 8020da4:	f53f ae80 	bmi.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020da8:	3901      	subs	r1, #1
 8020daa:	4288      	cmp	r0, r1
 8020dac:	f6bf ae7c 	bge.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020db0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020db2:	fb01 5303 	mla	r3, r1, r3, r5
 8020db6:	141b      	asrs	r3, r3, #16
 8020db8:	f53f ae76 	bmi.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020dbc:	3a01      	subs	r2, #1
 8020dbe:	4293      	cmp	r3, r2
 8020dc0:	f6bf ae72 	bge.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020dc4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020dc8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020dcc:	f1bb 0f00 	cmp.w	fp, #0
 8020dd0:	dc70      	bgt.n	8020eb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020dd2:	9b07      	ldr	r3, [sp, #28]
 8020dd4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020dd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dda:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020dde:	930a      	str	r3, [sp, #40]	; 0x28
 8020de0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020de2:	2b00      	cmp	r3, #0
 8020de4:	f340 81ae 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020de8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020dec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020df0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020df4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020df6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020dfa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020dfe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020e02:	eef0 6a62 	vmov.f32	s13, s5
 8020e06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e12:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020e16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e1a:	eef0 6a43 	vmov.f32	s13, s6
 8020e1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e22:	ee12 2a90 	vmov	r2, s5
 8020e26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e2e:	ee13 2a10 	vmov	r2, s6
 8020e32:	9327      	str	r3, [sp, #156]	; 0x9c
 8020e34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e36:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e3a:	9328      	str	r3, [sp, #160]	; 0xa0
 8020e3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020e3e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020e40:	3b01      	subs	r3, #1
 8020e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e46:	9316      	str	r3, [sp, #88]	; 0x58
 8020e48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e4a:	bf08      	it	eq
 8020e4c:	4613      	moveq	r3, r2
 8020e4e:	ee16 5a90 	vmov	r5, s13
 8020e52:	9307      	str	r3, [sp, #28]
 8020e54:	eeb0 3a67 	vmov.f32	s6, s15
 8020e58:	eef0 2a47 	vmov.f32	s5, s14
 8020e5c:	e5f8      	b.n	8020a50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020e5e:	2800      	cmp	r0, #0
 8020e60:	f43f ae6b 	beq.w	8020b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020e64:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020e68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e6c:	9108      	str	r1, [sp, #32]
 8020e6e:	0e09      	lsrs	r1, r1, #24
 8020e70:	9110      	str	r1, [sp, #64]	; 0x40
 8020e72:	e662      	b.n	8020b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020e74:	f113 0801 	adds.w	r8, r3, #1
 8020e78:	f53f af74 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e7c:	4541      	cmp	r1, r8
 8020e7e:	f6ff af71 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e82:	f11c 0801 	adds.w	r8, ip, #1
 8020e86:	f53f af6d 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e8a:	45c6      	cmp	lr, r8
 8020e8c:	f6ff af6a 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e90:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020e94:	b209      	sxth	r1, r1
 8020e96:	fa0f f38e 	sxth.w	r3, lr
 8020e9a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020e9e:	9301      	str	r3, [sp, #4]
 8020ea0:	9100      	str	r1, [sp, #0]
 8020ea2:	4633      	mov	r3, r6
 8020ea4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020ea6:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020ea8:	4639      	mov	r1, r7
 8020eaa:	f7ff fc7a 	bl	80207a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020eae:	e759      	b.n	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020eb0:	fffff800 	.word	0xfffff800
 8020eb4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020eb6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020eb8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020ebc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020ebe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ec2:	1427      	asrs	r7, r4, #16
 8020ec4:	142b      	asrs	r3, r5, #16
 8020ec6:	fb01 7303 	mla	r3, r1, r3, r7
 8020eca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020ecc:	18e7      	adds	r7, r4, r3
 8020ece:	5ce3      	ldrb	r3, [r4, r3]
 8020ed0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020ed4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ed8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020edc:	2a00      	cmp	r2, #0
 8020ede:	f000 8127 	beq.w	8021130 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020ee2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020ee6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020eea:	940d      	str	r4, [sp, #52]	; 0x34
 8020eec:	0e24      	lsrs	r4, r4, #24
 8020eee:	9414      	str	r4, [sp, #80]	; 0x50
 8020ef0:	b170      	cbz	r0, 8020f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020ef2:	eb07 0e01 	add.w	lr, r7, r1
 8020ef6:	5c79      	ldrb	r1, [r7, r1]
 8020ef8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020efc:	9109      	str	r1, [sp, #36]	; 0x24
 8020efe:	0e09      	lsrs	r1, r1, #24
 8020f00:	9111      	str	r1, [sp, #68]	; 0x44
 8020f02:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020f06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f0a:	910e      	str	r1, [sp, #56]	; 0x38
 8020f0c:	0e09      	lsrs	r1, r1, #24
 8020f0e:	9115      	str	r1, [sp, #84]	; 0x54
 8020f10:	b292      	uxth	r2, r2
 8020f12:	b280      	uxth	r0, r0
 8020f14:	fb02 f800 	mul.w	r8, r2, r0
 8020f18:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020f1c:	0112      	lsls	r2, r2, #4
 8020f1e:	eba2 0e08 	sub.w	lr, r2, r8
 8020f22:	b280      	uxth	r0, r0
 8020f24:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020f28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020f2a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f2c:	fa1f fe8e 	uxth.w	lr, lr
 8020f30:	1a09      	subs	r1, r1, r0
 8020f32:	b289      	uxth	r1, r1
 8020f34:	fb0e f202 	mul.w	r2, lr, r2
 8020f38:	fb01 220c 	mla	r2, r1, ip, r2
 8020f3c:	fb00 2204 	mla	r2, r0, r4, r2
 8020f40:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020f42:	fb08 2204 	mla	r2, r8, r4, r2
 8020f46:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020f4a:	2a00      	cmp	r2, #0
 8020f4c:	f000 80e5 	beq.w	802111a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020f50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020f54:	d019      	beq.n	8020f8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020f56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020f5a:	fb0c fa0a 	mul.w	sl, ip, sl
 8020f5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f62:	fb0c fc03 	mul.w	ip, ip, r3
 8020f66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020f6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f6e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020f72:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020f76:	4453      	add	r3, sl
 8020f78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020f7c:	0a1b      	lsrs	r3, r3, #8
 8020f7e:	0a3f      	lsrs	r7, r7, #8
 8020f80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f84:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020f88:	433b      	orrs	r3, r7
 8020f8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f8c:	2cff      	cmp	r4, #255	; 0xff
 8020f8e:	d020      	beq.n	8020fd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020f90:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f92:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f98:	4367      	muls	r7, r4
 8020f9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f9c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020fa0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020fa2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020fa6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020faa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020fae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020fb2:	44bc      	add	ip, r7
 8020fb4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020fb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020fbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fc4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020fc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020fcc:	ea4c 040a 	orr.w	r4, ip, sl
 8020fd0:	940d      	str	r4, [sp, #52]	; 0x34
 8020fd2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fd4:	2cff      	cmp	r4, #255	; 0xff
 8020fd6:	d020      	beq.n	802101a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020fd8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020fda:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020fde:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fe0:	4367      	muls	r7, r4
 8020fe2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020fe4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020fe8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020fee:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ff2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ff6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ffa:	44bc      	add	ip, r7
 8020ffc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021000:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802100c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021010:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021014:	ea4c 040a 	orr.w	r4, ip, sl
 8021018:	9409      	str	r4, [sp, #36]	; 0x24
 802101a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802101c:	2cff      	cmp	r4, #255	; 0xff
 802101e:	d020      	beq.n	8021062 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021020:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021022:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021026:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021028:	4367      	muls	r7, r4
 802102a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802102c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021030:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021032:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021036:	fb04 fa0a 	mul.w	sl, r4, sl
 802103a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802103e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021042:	44bc      	add	ip, r7
 8021044:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021048:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802104c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021050:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021054:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021058:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802105c:	ea4c 040a 	orr.w	r4, ip, sl
 8021060:	940e      	str	r4, [sp, #56]	; 0x38
 8021062:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021064:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021068:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802106a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802106e:	fb0e f707 	mul.w	r7, lr, r7
 8021072:	fb01 770c 	mla	r7, r1, ip, r7
 8021076:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802107a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802107c:	fb00 770c 	mla	r7, r0, ip, r7
 8021080:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021084:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021086:	fb08 770c 	mla	r7, r8, ip, r7
 802108a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802108e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021092:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021096:	fb01 e303 	mla	r3, r1, r3, lr
 802109a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802109c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80210a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80210a2:	fb00 330a 	mla	r3, r0, sl, r3
 80210a6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80210aa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80210ae:	f8b9 3000 	ldrh.w	r3, [r9]
 80210b2:	43d2      	mvns	r2, r2
 80210b4:	1218      	asrs	r0, r3, #8
 80210b6:	b2d2      	uxtb	r2, r2
 80210b8:	10d9      	asrs	r1, r3, #3
 80210ba:	0a3f      	lsrs	r7, r7, #8
 80210bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80210c4:	00db      	lsls	r3, r3, #3
 80210c6:	4350      	muls	r0, r2
 80210c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80210cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80210d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80210d4:	b2db      	uxtb	r3, r3
 80210d6:	ea47 070c 	orr.w	r7, r7, ip
 80210da:	4351      	muls	r1, r2
 80210dc:	4353      	muls	r3, r2
 80210de:	1c42      	adds	r2, r0, #1
 80210e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80210e4:	0c3a      	lsrs	r2, r7, #16
 80210e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80210ea:	4a18      	ldr	r2, [pc, #96]	; (802114c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80210ec:	b2c0      	uxtb	r0, r0
 80210ee:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80210f2:	1c4a      	adds	r2, r1, #1
 80210f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80210f8:	0a3a      	lsrs	r2, r7, #8
 80210fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80210fe:	00c9      	lsls	r1, r1, #3
 8021100:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021104:	4301      	orrs	r1, r0
 8021106:	1c58      	adds	r0, r3, #1
 8021108:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802110c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021110:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8021114:	4308      	orrs	r0, r1
 8021116:	f8a9 0000 	strh.w	r0, [r9]
 802111a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802111c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802111e:	441a      	add	r2, r3
 8021120:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021122:	9225      	str	r2, [sp, #148]	; 0x94
 8021124:	f109 0902 	add.w	r9, r9, #2
 8021128:	441d      	add	r5, r3
 802112a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802112e:	e64d      	b.n	8020dcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021130:	2800      	cmp	r0, #0
 8021132:	f43f aeed 	beq.w	8020f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021136:	5c79      	ldrb	r1, [r7, r1]
 8021138:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802113c:	9109      	str	r1, [sp, #36]	; 0x24
 802113e:	0e09      	lsrs	r1, r1, #24
 8021140:	9111      	str	r1, [sp, #68]	; 0x44
 8021142:	e6e5      	b.n	8020f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021144:	b01b      	add	sp, #108	; 0x6c
 8021146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802114a:	bf00      	nop
 802114c:	fffff800 	.word	0xfffff800

08021150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021154:	b085      	sub	sp, #20
 8021156:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802115a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802115e:	9103      	str	r1, [sp, #12]
 8021160:	fb00 7406 	mla	r4, r0, r6, r7
 8021164:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021168:	2800      	cmp	r0, #0
 802116a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802116e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021172:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021176:	9501      	str	r5, [sp, #4]
 8021178:	eb03 0904 	add.w	r9, r3, r4
 802117c:	f2c0 8150 	blt.w	8021420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021180:	4583      	cmp	fp, r0
 8021182:	f340 814d 	ble.w	8021420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021186:	2f00      	cmp	r7, #0
 8021188:	f2c0 8146 	blt.w	8021418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802118c:	42be      	cmp	r6, r7
 802118e:	f340 8143 	ble.w	8021418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021192:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021196:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802119a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802119e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80211a2:	4355      	muls	r5, r2
 80211a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80211a8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80211ac:	fb0c f203 	mul.w	r2, ip, r3
 80211b0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80211b4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80211b8:	441d      	add	r5, r3
 80211ba:	f102 0320 	add.w	r3, r2, #32
 80211be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80211c2:	0a1b      	lsrs	r3, r3, #8
 80211c4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80211c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80211cc:	431c      	orrs	r4, r3
 80211ce:	1c7b      	adds	r3, r7, #1
 80211d0:	f100 812b 	bmi.w	802142a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80211d4:	429e      	cmp	r6, r3
 80211d6:	f340 8128 	ble.w	802142a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80211da:	2900      	cmp	r1, #0
 80211dc:	f000 8128 	beq.w	8021430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80211e0:	9a01      	ldr	r2, [sp, #4]
 80211e2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80211e6:	8855      	ldrh	r5, [r2, #2]
 80211e8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80211ec:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80211f0:	fb08 f802 	mul.w	r8, r8, r2
 80211f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80211f8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80211fc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021200:	435d      	muls	r5, r3
 8021202:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021206:	44d0      	add	r8, sl
 8021208:	f105 0a20 	add.w	sl, r5, #32
 802120c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021210:	0a2d      	lsrs	r5, r5, #8
 8021212:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021216:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802121a:	432a      	orrs	r2, r5
 802121c:	3001      	adds	r0, #1
 802121e:	f100 810d 	bmi.w	802143c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021222:	4583      	cmp	fp, r0
 8021224:	f340 810a 	ble.w	802143c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021228:	f1be 0f00 	cmp.w	lr, #0
 802122c:	f000 810b 	beq.w	8021446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021230:	2f00      	cmp	r7, #0
 8021232:	f2c0 8100 	blt.w	8021436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021236:	42be      	cmp	r6, r7
 8021238:	f340 80fd 	ble.w	8021436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802123c:	9801      	ldr	r0, [sp, #4]
 802123e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021242:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021246:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802124a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802124e:	fb0a fa00 	mul.w	sl, sl, r0
 8021252:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021256:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802125a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802125e:	fb05 f808 	mul.w	r8, r5, r8
 8021262:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021266:	4482      	add	sl, r0
 8021268:	f108 0020 	add.w	r0, r8, #32
 802126c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021270:	0a00      	lsrs	r0, r0, #8
 8021272:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021276:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802127a:	ea4b 0b00 	orr.w	fp, fp, r0
 802127e:	3701      	adds	r7, #1
 8021280:	f100 80e6 	bmi.w	8021450 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021284:	42be      	cmp	r6, r7
 8021286:	f340 80e3 	ble.w	8021450 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802128a:	2900      	cmp	r1, #0
 802128c:	f000 80e3 	beq.w	8021456 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021290:	3601      	adds	r6, #1
 8021292:	9801      	ldr	r0, [sp, #4]
 8021294:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021298:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802129c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80212a0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80212a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80212a8:	fb09 f906 	mul.w	r9, r9, r6
 80212ac:	fb07 f800 	mul.w	r8, r7, r0
 80212b0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80212b4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80212b8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80212bc:	44d1      	add	r9, sl
 80212be:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80212c2:	f108 0020 	add.w	r0, r8, #32
 80212c6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80212ca:	0a00      	lsrs	r0, r0, #8
 80212cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80212d0:	4330      	orrs	r0, r6
 80212d2:	b28e      	uxth	r6, r1
 80212d4:	fa1f f98e 	uxth.w	r9, lr
 80212d8:	fb06 f809 	mul.w	r8, r6, r9
 80212dc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80212e0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80212e4:	0136      	lsls	r6, r6, #4
 80212e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80212ea:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80212ee:	9601      	str	r6, [sp, #4]
 80212f0:	ea4a 0404 	orr.w	r4, sl, r4
 80212f4:	fa1f f689 	uxth.w	r6, r9
 80212f8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80212fc:	fb11 f90e 	smulbb	r9, r1, lr
 8021300:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021304:	9602      	str	r6, [sp, #8]
 8021306:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802130a:	4626      	mov	r6, r4
 802130c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021310:	f1ce 0410 	rsb	r4, lr, #16
 8021314:	1a64      	subs	r4, r4, r1
 8021316:	ea4a 0202 	orr.w	r2, sl, r2
 802131a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802131e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021322:	434a      	muls	r2, r1
 8021324:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021328:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802132c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021330:	fb04 2406 	mla	r4, r4, r6, r2
 8021334:	ea4a 0000 	orr.w	r0, sl, r0
 8021338:	fb09 4200 	mla	r2, r9, r0, r4
 802133c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021340:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021344:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021348:	ea44 0b0b 	orr.w	fp, r4, fp
 802134c:	9c01      	ldr	r4, [sp, #4]
 802134e:	9e02      	ldr	r6, [sp, #8]
 8021350:	9903      	ldr	r1, [sp, #12]
 8021352:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8021356:	1ba4      	subs	r4, r4, r6
 8021358:	9e01      	ldr	r6, [sp, #4]
 802135a:	8808      	ldrh	r0, [r1, #0]
 802135c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021360:	eba6 0608 	sub.w	r6, r6, r8
 8021364:	b2b6      	uxth	r6, r6
 8021366:	b2a4      	uxth	r4, r4
 8021368:	4373      	muls	r3, r6
 802136a:	fb0c 3304 	mla	r3, ip, r4, r3
 802136e:	9c02      	ldr	r4, [sp, #8]
 8021370:	fb04 3505 	mla	r5, r4, r5, r3
 8021374:	fb08 5707 	mla	r7, r8, r7, r5
 8021378:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802137c:	b289      	uxth	r1, r1
 802137e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021382:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021386:	434f      	muls	r7, r1
 8021388:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802138c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021390:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021394:	1c7b      	adds	r3, r7, #1
 8021396:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802139a:	ea42 0e0e 	orr.w	lr, r2, lr
 802139e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80213a2:	fa1f f28e 	uxth.w	r2, lr
 80213a6:	1203      	asrs	r3, r0, #8
 80213a8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80213ac:	b2ff      	uxtb	r7, r7
 80213ae:	1215      	asrs	r5, r2, #8
 80213b0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80213b4:	fb13 f307 	smulbb	r3, r3, r7
 80213b8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80213bc:	fb05 3501 	mla	r5, r5, r1, r3
 80213c0:	10c3      	asrs	r3, r0, #3
 80213c2:	10d4      	asrs	r4, r2, #3
 80213c4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80213c8:	fb13 f307 	smulbb	r3, r3, r7
 80213cc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80213d0:	fb04 3401 	mla	r4, r4, r1, r3
 80213d4:	00c3      	lsls	r3, r0, #3
 80213d6:	00d2      	lsls	r2, r2, #3
 80213d8:	b2db      	uxtb	r3, r3
 80213da:	fb13 f307 	smulbb	r3, r3, r7
 80213de:	b2d2      	uxtb	r2, r2
 80213e0:	fb02 3101 	mla	r1, r2, r1, r3
 80213e4:	b2ad      	uxth	r5, r5
 80213e6:	b289      	uxth	r1, r1
 80213e8:	b2a4      	uxth	r4, r4
 80213ea:	1c6b      	adds	r3, r5, #1
 80213ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80213f0:	1c62      	adds	r2, r4, #1
 80213f2:	1c4b      	adds	r3, r1, #1
 80213f4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80213f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80213fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021400:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021404:	0964      	lsrs	r4, r4, #5
 8021406:	432b      	orrs	r3, r5
 8021408:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802140c:	9a03      	ldr	r2, [sp, #12]
 802140e:	4323      	orrs	r3, r4
 8021410:	8013      	strh	r3, [r2, #0]
 8021412:	b005      	add	sp, #20
 8021414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021418:	f04f 0c00 	mov.w	ip, #0
 802141c:	4664      	mov	r4, ip
 802141e:	e6d6      	b.n	80211ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021420:	2300      	movs	r3, #0
 8021422:	469c      	mov	ip, r3
 8021424:	461a      	mov	r2, r3
 8021426:	461c      	mov	r4, r3
 8021428:	e6f8      	b.n	802121c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802142a:	2300      	movs	r3, #0
 802142c:	461a      	mov	r2, r3
 802142e:	e6f5      	b.n	802121c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021430:	460b      	mov	r3, r1
 8021432:	460a      	mov	r2, r1
 8021434:	e6f2      	b.n	802121c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021436:	2500      	movs	r5, #0
 8021438:	46ab      	mov	fp, r5
 802143a:	e720      	b.n	802127e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 802143c:	2700      	movs	r7, #0
 802143e:	463d      	mov	r5, r7
 8021440:	4638      	mov	r0, r7
 8021442:	46bb      	mov	fp, r7
 8021444:	e745      	b.n	80212d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021446:	4677      	mov	r7, lr
 8021448:	4675      	mov	r5, lr
 802144a:	4670      	mov	r0, lr
 802144c:	46f3      	mov	fp, lr
 802144e:	e740      	b.n	80212d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021450:	2700      	movs	r7, #0
 8021452:	4638      	mov	r0, r7
 8021454:	e73d      	b.n	80212d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021456:	460f      	mov	r7, r1
 8021458:	4608      	mov	r0, r1
 802145a:	e73a      	b.n	80212d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0802145c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802145c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021460:	b097      	sub	sp, #92	; 0x5c
 8021462:	9214      	str	r2, [sp, #80]	; 0x50
 8021464:	9308      	str	r3, [sp, #32]
 8021466:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021468:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802146c:	9312      	str	r3, [sp, #72]	; 0x48
 802146e:	9111      	str	r1, [sp, #68]	; 0x44
 8021470:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021474:	9015      	str	r0, [sp, #84]	; 0x54
 8021476:	6850      	ldr	r0, [r2, #4]
 8021478:	6812      	ldr	r2, [r2, #0]
 802147a:	fb00 1303 	mla	r3, r0, r3, r1
 802147e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021482:	9309      	str	r3, [sp, #36]	; 0x24
 8021484:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021486:	681b      	ldr	r3, [r3, #0]
 8021488:	930b      	str	r3, [sp, #44]	; 0x2c
 802148a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802148c:	685b      	ldr	r3, [r3, #4]
 802148e:	930c      	str	r3, [sp, #48]	; 0x30
 8021490:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021494:	930a      	str	r3, [sp, #40]	; 0x28
 8021496:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021498:	2b00      	cmp	r3, #0
 802149a:	dc03      	bgt.n	80214a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802149c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802149e:	2b00      	cmp	r3, #0
 80214a0:	f340 83cb 	ble.w	8021c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80214a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80214ae:	1e48      	subs	r0, r1, #1
 80214b0:	1e55      	subs	r5, r2, #1
 80214b2:	9b08      	ldr	r3, [sp, #32]
 80214b4:	2b00      	cmp	r3, #0
 80214b6:	f340 81a3 	ble.w	8021800 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80214ba:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80214bc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80214be:	1436      	asrs	r6, r6, #16
 80214c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80214c4:	d406      	bmi.n	80214d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80214c6:	4286      	cmp	r6, r0
 80214c8:	da04      	bge.n	80214d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80214ca:	2b00      	cmp	r3, #0
 80214cc:	db02      	blt.n	80214d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80214ce:	42ab      	cmp	r3, r5
 80214d0:	f2c0 8197 	blt.w	8021802 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80214d4:	3601      	adds	r6, #1
 80214d6:	f100 8184 	bmi.w	80217e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80214da:	42b1      	cmp	r1, r6
 80214dc:	f2c0 8181 	blt.w	80217e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80214e0:	3301      	adds	r3, #1
 80214e2:	f100 817e 	bmi.w	80217e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80214e6:	429a      	cmp	r2, r3
 80214e8:	f2c0 817b 	blt.w	80217e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80214ec:	9b08      	ldr	r3, [sp, #32]
 80214ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80214f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80214f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80214f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80214f8:	2b00      	cmp	r3, #0
 80214fa:	f340 81a4 	ble.w	8021846 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80214fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021500:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021502:	1418      	asrs	r0, r3, #16
 8021504:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021506:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802150a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802150c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021510:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021512:	142d      	asrs	r5, r5, #16
 8021514:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021518:	f100 81f8 	bmi.w	802190c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802151c:	f102 3eff 	add.w	lr, r2, #4294967295
 8021520:	4575      	cmp	r5, lr
 8021522:	f280 81f3 	bge.w	802190c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021526:	2800      	cmp	r0, #0
 8021528:	f2c0 81f0 	blt.w	802190c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802152c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021530:	4570      	cmp	r0, lr
 8021532:	f280 81eb 	bge.w	802190c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021536:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021538:	b212      	sxth	r2, r2
 802153a:	fb00 5002 	mla	r0, r0, r2, r5
 802153e:	fa1f fe81 	uxth.w	lr, r1
 8021542:	eb03 0a00 	add.w	sl, r3, r0
 8021546:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802154a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802154e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021552:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021556:	b29b      	uxth	r3, r3
 8021558:	f1bc 0f00 	cmp.w	ip, #0
 802155c:	f000 81b9 	beq.w	80218d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021560:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021564:	940d      	str	r4, [sp, #52]	; 0x34
 8021566:	eb0a 0b02 	add.w	fp, sl, r2
 802156a:	fa1f fa8c 	uxth.w	sl, ip
 802156e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021572:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021576:	fa1f fa8a 	uxth.w	sl, sl
 802157a:	eba5 050e 	sub.w	r5, r5, lr
 802157e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021582:	940e      	str	r4, [sp, #56]	; 0x38
 8021584:	eba3 030a 	sub.w	r3, r3, sl
 8021588:	b2ad      	uxth	r5, r5
 802158a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802158c:	b29b      	uxth	r3, r3
 802158e:	fb08 f505 	mul.w	r5, r8, r5
 8021592:	fb09 5303 	mla	r3, r9, r3, r5
 8021596:	fb0a 3304 	mla	r3, sl, r4, r3
 802159a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802159c:	fb0e 3304 	mla	r3, lr, r4, r3
 80215a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80215a4:	2b00      	cmp	r3, #0
 80215a6:	f000 810f 	beq.w	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80215aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80215ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80215b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80215b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80215b8:	f000 8190 	beq.w	80218dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80215bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80215c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80215c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215c8:	fb09 f000 	mul.w	r0, r9, r0
 80215cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80215d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80215d4:	f100 0b20 	add.w	fp, r0, #32
 80215d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80215dc:	44ce      	add	lr, r9
 80215de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80215e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80215e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80215ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80215ee:	ea4e 0909 	orr.w	r9, lr, r9
 80215f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80215f6:	8868      	ldrh	r0, [r5, #2]
 80215f8:	d019      	beq.n	802162e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80215fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80215fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021602:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021606:	fb08 f800 	mul.w	r8, r8, r0
 802160a:	fb0a fe0e 	mul.w	lr, sl, lr
 802160e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021612:	f108 0b20 	add.w	fp, r8, #32
 8021616:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802161a:	4486      	add	lr, r0
 802161c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021620:	0a00      	lsrs	r0, r0, #8
 8021622:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021626:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802162a:	ea4e 0000 	orr.w	r0, lr, r0
 802162e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021632:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021636:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802163a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802163e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021642:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021646:	ea4e 0909 	orr.w	r9, lr, r9
 802164a:	ea4a 0000 	orr.w	r0, sl, r0
 802164e:	f1bc 0f00 	cmp.w	ip, #0
 8021652:	f000 8145 	beq.w	80218e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021656:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802165a:	3a01      	subs	r2, #1
 802165c:	0052      	lsls	r2, r2, #1
 802165e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021660:	3202      	adds	r2, #2
 8021662:	2cff      	cmp	r4, #255	; 0xff
 8021664:	eb05 0e02 	add.w	lr, r5, r2
 8021668:	5aaa      	ldrh	r2, [r5, r2]
 802166a:	d018      	beq.n	802169e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802166c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021670:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021674:	fb04 fa02 	mul.w	sl, r4, r2
 8021678:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802167c:	fb08 f805 	mul.w	r8, r8, r5
 8021680:	f10a 0520 	add.w	r5, sl, #32
 8021684:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021688:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802168c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021690:	4442      	add	r2, r8
 8021692:	0a2d      	lsrs	r5, r5, #8
 8021694:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021698:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802169c:	432a      	orrs	r2, r5
 802169e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80216a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80216a4:	2cff      	cmp	r4, #255	; 0xff
 80216a6:	d01a      	beq.n	80216de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80216a8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80216ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80216b0:	fb04 fa05 	mul.w	sl, r4, r5
 80216b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80216b8:	fb08 f80e 	mul.w	r8, r8, lr
 80216bc:	f10a 0e20 	add.w	lr, sl, #32
 80216c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80216c4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80216c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80216cc:	4445      	add	r5, r8
 80216ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80216d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80216d6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80216da:	ea45 050e 	orr.w	r5, r5, lr
 80216de:	fb1c fe01 	smulbb	lr, ip, r1
 80216e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80216e6:	f1cc 0810 	rsb	r8, ip, #16
 80216ea:	eba8 0801 	sub.w	r8, r8, r1
 80216ee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80216f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80216f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80216fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80216fe:	4341      	muls	r1, r0
 8021700:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021704:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021708:	ea4a 0202 	orr.w	r2, sl, r2
 802170c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021710:	fb09 1108 	mla	r1, r9, r8, r1
 8021714:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021718:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802171c:	fb0c 1102 	mla	r1, ip, r2, r1
 8021720:	ea4b 0505 	orr.w	r5, fp, r5
 8021724:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021728:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802172c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021730:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021734:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021738:	ea42 0e0e 	orr.w	lr, r2, lr
 802173c:	fa1f f28e 	uxth.w	r2, lr
 8021740:	2bff      	cmp	r3, #255	; 0xff
 8021742:	d103      	bne.n	802174c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021744:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021746:	29ff      	cmp	r1, #255	; 0xff
 8021748:	f000 80de 	beq.w	8021908 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 802174c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802174e:	8838      	ldrh	r0, [r7, #0]
 8021750:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021752:	434b      	muls	r3, r1
 8021754:	f103 0c01 	add.w	ip, r3, #1
 8021758:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 802175c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021760:	fa5f fc83 	uxtb.w	ip, r3
 8021764:	1203      	asrs	r3, r0, #8
 8021766:	1215      	asrs	r5, r2, #8
 8021768:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802176c:	fb13 f30c 	smulbb	r3, r3, ip
 8021770:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021774:	fb05 3501 	mla	r5, r5, r1, r3
 8021778:	10c3      	asrs	r3, r0, #3
 802177a:	10d1      	asrs	r1, r2, #3
 802177c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021780:	fb13 f30c 	smulbb	r3, r3, ip
 8021784:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021788:	fb01 3104 	mla	r1, r1, r4, r3
 802178c:	00c3      	lsls	r3, r0, #3
 802178e:	00d2      	lsls	r2, r2, #3
 8021790:	b2db      	uxtb	r3, r3
 8021792:	b2d2      	uxtb	r2, r2
 8021794:	fb13 f30c 	smulbb	r3, r3, ip
 8021798:	b2ad      	uxth	r5, r5
 802179a:	fb02 3304 	mla	r3, r2, r4, r3
 802179e:	b29a      	uxth	r2, r3
 80217a0:	1c6b      	adds	r3, r5, #1
 80217a2:	b289      	uxth	r1, r1
 80217a4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80217a8:	1c53      	adds	r3, r2, #1
 80217aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80217ae:	1c4a      	adds	r2, r1, #1
 80217b0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80217b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80217b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80217bc:	0949      	lsrs	r1, r1, #5
 80217be:	432b      	orrs	r3, r5
 80217c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80217c4:	430b      	orrs	r3, r1
 80217c6:	803b      	strh	r3, [r7, #0]
 80217c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80217ca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80217cc:	4413      	add	r3, r2
 80217ce:	9321      	str	r3, [sp, #132]	; 0x84
 80217d0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80217d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80217d4:	441a      	add	r2, r3
 80217d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80217d8:	9222      	str	r2, [sp, #136]	; 0x88
 80217da:	3b01      	subs	r3, #1
 80217dc:	3702      	adds	r7, #2
 80217de:	9313      	str	r3, [sp, #76]	; 0x4c
 80217e0:	e689      	b.n	80214f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80217e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80217e4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80217e6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80217e8:	4433      	add	r3, r6
 80217ea:	9321      	str	r3, [sp, #132]	; 0x84
 80217ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80217ee:	441c      	add	r4, r3
 80217f0:	9b08      	ldr	r3, [sp, #32]
 80217f2:	9422      	str	r4, [sp, #136]	; 0x88
 80217f4:	3b01      	subs	r3, #1
 80217f6:	9308      	str	r3, [sp, #32]
 80217f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217fa:	3302      	adds	r3, #2
 80217fc:	9309      	str	r3, [sp, #36]	; 0x24
 80217fe:	e658      	b.n	80214b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021800:	d028      	beq.n	8021854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021802:	9b08      	ldr	r3, [sp, #32]
 8021804:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021806:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021808:	3b01      	subs	r3, #1
 802180a:	fb00 5003 	mla	r0, r0, r3, r5
 802180e:	1400      	asrs	r0, r0, #16
 8021810:	f53f ae6c 	bmi.w	80214ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021814:	3901      	subs	r1, #1
 8021816:	4288      	cmp	r0, r1
 8021818:	f6bf ae68 	bge.w	80214ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802181c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802181e:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021820:	fb01 0303 	mla	r3, r1, r3, r0
 8021824:	141b      	asrs	r3, r3, #16
 8021826:	f53f ae61 	bmi.w	80214ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802182a:	3a01      	subs	r2, #1
 802182c:	4293      	cmp	r3, r2
 802182e:	f6bf ae5d 	bge.w	80214ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021832:	9b08      	ldr	r3, [sp, #32]
 8021834:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021838:	9313      	str	r3, [sp, #76]	; 0x4c
 802183a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802183e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021840:	2b00      	cmp	r3, #0
 8021842:	f300 8082 	bgt.w	802194a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021846:	9b08      	ldr	r3, [sp, #32]
 8021848:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802184c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802184e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021852:	9309      	str	r3, [sp, #36]	; 0x24
 8021854:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021856:	2b00      	cmp	r3, #0
 8021858:	f340 81ef 	ble.w	8021c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802185c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021860:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021864:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021868:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802186a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802186e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021872:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021876:	eef0 6a62 	vmov.f32	s13, s5
 802187a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802187e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021882:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021886:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802188a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802188e:	eef0 6a43 	vmov.f32	s13, s6
 8021892:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021896:	ee12 2a90 	vmov	r2, s5
 802189a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802189e:	fb92 f3f3 	sdiv	r3, r2, r3
 80218a2:	ee13 2a10 	vmov	r2, s6
 80218a6:	9323      	str	r3, [sp, #140]	; 0x8c
 80218a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80218ae:	9324      	str	r3, [sp, #144]	; 0x90
 80218b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80218b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80218b4:	3b01      	subs	r3, #1
 80218b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218ba:	9311      	str	r3, [sp, #68]	; 0x44
 80218bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218be:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80218c2:	bf08      	it	eq
 80218c4:	4613      	moveq	r3, r2
 80218c6:	9308      	str	r3, [sp, #32]
 80218c8:	eeb0 3a67 	vmov.f32	s6, s15
 80218cc:	eef0 2a47 	vmov.f32	s5, s14
 80218d0:	e5e1      	b.n	8021496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80218d2:	fb08 f505 	mul.w	r5, r8, r5
 80218d6:	fb09 5303 	mla	r3, r9, r3, r5
 80218da:	e661      	b.n	80215a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80218dc:	4681      	mov	r9, r0
 80218de:	e688      	b.n	80215f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80218e0:	f1c1 0210 	rsb	r2, r1, #16
 80218e4:	4341      	muls	r1, r0
 80218e6:	fb09 1902 	mla	r9, r9, r2, r1
 80218ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80218ee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80218f2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80218f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80218fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80218fe:	ea42 0909 	orr.w	r9, r2, r9
 8021902:	fa1f f289 	uxth.w	r2, r9
 8021906:	e71b      	b.n	8021740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021908:	803a      	strh	r2, [r7, #0]
 802190a:	e75d      	b.n	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802190c:	f115 0e01 	adds.w	lr, r5, #1
 8021910:	f53f af5a 	bmi.w	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021914:	4572      	cmp	r2, lr
 8021916:	f6ff af57 	blt.w	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802191a:	f110 0e01 	adds.w	lr, r0, #1
 802191e:	f53f af53 	bmi.w	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021922:	4573      	cmp	r3, lr
 8021924:	f6ff af50 	blt.w	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021928:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802192a:	9502      	str	r5, [sp, #8]
 802192c:	b21b      	sxth	r3, r3
 802192e:	b212      	sxth	r2, r2
 8021930:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021934:	9301      	str	r3, [sp, #4]
 8021936:	9200      	str	r2, [sp, #0]
 8021938:	e9cd c405 	strd	ip, r4, [sp, #20]
 802193c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021940:	4639      	mov	r1, r7
 8021942:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021944:	f7ff fc04 	bl	8021150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021948:	e73e      	b.n	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802194a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802194c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021950:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021952:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021956:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021958:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802195c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802195e:	141f      	asrs	r7, r3, #16
 8021960:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021962:	141b      	asrs	r3, r3, #16
 8021964:	fb01 3707 	mla	r7, r1, r7, r3
 8021968:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802196a:	fa1f fc82 	uxth.w	ip, r2
 802196e:	eb03 0a07 	add.w	sl, r3, r7
 8021972:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021976:	f813 9007 	ldrb.w	r9, [r3, r7]
 802197a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802197e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021982:	b29b      	uxth	r3, r3
 8021984:	2d00      	cmp	r5, #0
 8021986:	f000 813d 	beq.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802198a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802198e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021990:	eb0a 0b01 	add.w	fp, sl, r1
 8021994:	fa1f fa85 	uxth.w	sl, r5
 8021998:	fb0a fc0c 	mul.w	ip, sl, ip
 802199c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80219a0:	fa1f fa8a 	uxth.w	sl, sl
 80219a4:	eba0 000c 	sub.w	r0, r0, ip
 80219a8:	eba3 030a 	sub.w	r3, r3, sl
 80219ac:	b280      	uxth	r0, r0
 80219ae:	fb08 f000 	mul.w	r0, r8, r0
 80219b2:	b29b      	uxth	r3, r3
 80219b4:	fb09 0303 	mla	r3, r9, r3, r0
 80219b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80219ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80219be:	9410      	str	r4, [sp, #64]	; 0x40
 80219c0:	fb0a 3300 	mla	r3, sl, r0, r3
 80219c4:	fb0c 3304 	mla	r3, ip, r4, r3
 80219c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80219cc:	2b00      	cmp	r3, #0
 80219ce:	f000 810b 	beq.w	8021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80219d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80219d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80219d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80219da:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80219de:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80219e2:	f000 8114 	beq.w	8021c0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80219e6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80219ea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80219ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80219f2:	fb09 f707 	mul.w	r7, r9, r7
 80219f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80219fa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80219fe:	f107 0b20 	add.w	fp, r7, #32
 8021a02:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021a06:	44cc      	add	ip, r9
 8021a08:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021a0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021a10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021a14:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021a18:	ea4c 0909 	orr.w	r9, ip, r9
 8021a1c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021a20:	8847      	ldrh	r7, [r0, #2]
 8021a22:	d019      	beq.n	8021a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021a24:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a28:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021a2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a30:	fb08 f807 	mul.w	r8, r8, r7
 8021a34:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a38:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021a3c:	f108 0b20 	add.w	fp, r8, #32
 8021a40:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021a44:	44bc      	add	ip, r7
 8021a46:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021a4a:	0a3f      	lsrs	r7, r7, #8
 8021a4c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021a50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a54:	ea4c 0707 	orr.w	r7, ip, r7
 8021a58:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021a5c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021a60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021a64:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021a68:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a6c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021a70:	ea4c 0909 	orr.w	r9, ip, r9
 8021a74:	ea4a 0707 	orr.w	r7, sl, r7
 8021a78:	2d00      	cmp	r5, #0
 8021a7a:	f000 80ca 	beq.w	8021c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021a7e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021a82:	3901      	subs	r1, #1
 8021a84:	0049      	lsls	r1, r1, #1
 8021a86:	3102      	adds	r1, #2
 8021a88:	eb00 0c01 	add.w	ip, r0, r1
 8021a8c:	5a41      	ldrh	r1, [r0, r1]
 8021a8e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021a90:	28ff      	cmp	r0, #255	; 0xff
 8021a92:	d019      	beq.n	8021ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021a94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021a96:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021a9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021a9e:	fb04 fa01 	mul.w	sl, r4, r1
 8021aa2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021aa6:	fb08 f800 	mul.w	r8, r8, r0
 8021aaa:	f10a 0020 	add.w	r0, sl, #32
 8021aae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021ab2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021ab6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021aba:	4441      	add	r1, r8
 8021abc:	0a00      	lsrs	r0, r0, #8
 8021abe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021ac2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ac6:	4301      	orrs	r1, r0
 8021ac8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021aca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021ace:	2cff      	cmp	r4, #255	; 0xff
 8021ad0:	d01a      	beq.n	8021b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021ad2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021ad6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ada:	fb04 fa00 	mul.w	sl, r4, r0
 8021ade:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021ae2:	fb08 f80c 	mul.w	r8, r8, ip
 8021ae6:	f10a 0c20 	add.w	ip, sl, #32
 8021aea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021aee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021af2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021af6:	4440      	add	r0, r8
 8021af8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021afc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021b00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021b04:	ea40 000c 	orr.w	r0, r0, ip
 8021b08:	fb15 fc02 	smulbb	ip, r5, r2
 8021b0c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021b10:	f1c5 0810 	rsb	r8, r5, #16
 8021b14:	eba8 0802 	sub.w	r8, r8, r2
 8021b18:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021b1c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021b20:	437a      	muls	r2, r7
 8021b22:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021b26:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021b2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b2e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021b32:	fb09 2208 	mla	r2, r9, r8, r2
 8021b36:	ea4a 0101 	orr.w	r1, sl, r1
 8021b3a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021b3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021b42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b46:	fb05 2201 	mla	r2, r5, r1, r2
 8021b4a:	ea4b 0000 	orr.w	r0, fp, r0
 8021b4e:	fb0c 2200 	mla	r2, ip, r0, r2
 8021b52:	0d57      	lsrs	r7, r2, #21
 8021b54:	0952      	lsrs	r2, r2, #5
 8021b56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021b5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021b5e:	433a      	orrs	r2, r7
 8021b60:	2bff      	cmp	r3, #255	; 0xff
 8021b62:	b292      	uxth	r2, r2
 8021b64:	d102      	bne.n	8021b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021b66:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021b68:	29ff      	cmp	r1, #255	; 0xff
 8021b6a:	d063      	beq.n	8021c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021b6c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021b6e:	f8be 1000 	ldrh.w	r1, [lr]
 8021b72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b74:	4343      	muls	r3, r0
 8021b76:	1c58      	adds	r0, r3, #1
 8021b78:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021b7c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021b80:	1208      	asrs	r0, r1, #8
 8021b82:	b2db      	uxtb	r3, r3
 8021b84:	1215      	asrs	r5, r2, #8
 8021b86:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b8a:	fb10 f003 	smulbb	r0, r0, r3
 8021b8e:	10cf      	asrs	r7, r1, #3
 8021b90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021b94:	00c9      	lsls	r1, r1, #3
 8021b96:	fb05 0504 	mla	r5, r5, r4, r0
 8021b9a:	b2c9      	uxtb	r1, r1
 8021b9c:	10d0      	asrs	r0, r2, #3
 8021b9e:	00d2      	lsls	r2, r2, #3
 8021ba0:	fb11 f103 	smulbb	r1, r1, r3
 8021ba4:	b2d2      	uxtb	r2, r2
 8021ba6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021baa:	fb02 1204 	mla	r2, r2, r4, r1
 8021bae:	fb17 f703 	smulbb	r7, r7, r3
 8021bb2:	b2ad      	uxth	r5, r5
 8021bb4:	b292      	uxth	r2, r2
 8021bb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021bba:	fb00 7004 	mla	r0, r0, r4, r7
 8021bbe:	1c6b      	adds	r3, r5, #1
 8021bc0:	1c57      	adds	r7, r2, #1
 8021bc2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021bc6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021bca:	b280      	uxth	r0, r0
 8021bcc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021bd0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021bd4:	433d      	orrs	r5, r7
 8021bd6:	1c47      	adds	r7, r0, #1
 8021bd8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021bdc:	097f      	lsrs	r7, r7, #5
 8021bde:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021be2:	433d      	orrs	r5, r7
 8021be4:	f8ae 5000 	strh.w	r5, [lr]
 8021be8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021bea:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021bec:	4413      	add	r3, r2
 8021bee:	9321      	str	r3, [sp, #132]	; 0x84
 8021bf0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021bf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021bf4:	441a      	add	r2, r3
 8021bf6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021bf8:	9222      	str	r2, [sp, #136]	; 0x88
 8021bfa:	3b01      	subs	r3, #1
 8021bfc:	f10e 0e02 	add.w	lr, lr, #2
 8021c00:	9313      	str	r3, [sp, #76]	; 0x4c
 8021c02:	e61c      	b.n	802183e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021c04:	fb08 f000 	mul.w	r0, r8, r0
 8021c08:	fb09 0303 	mla	r3, r9, r3, r0
 8021c0c:	e6dc      	b.n	80219c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021c0e:	46b9      	mov	r9, r7
 8021c10:	e704      	b.n	8021a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021c12:	f1c2 0110 	rsb	r1, r2, #16
 8021c16:	437a      	muls	r2, r7
 8021c18:	fb09 2901 	mla	r9, r9, r1, r2
 8021c1c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021c20:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021c24:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021c28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c30:	4302      	orrs	r2, r0
 8021c32:	e795      	b.n	8021b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021c34:	f8ae 2000 	strh.w	r2, [lr]
 8021c38:	e7d6      	b.n	8021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021c3a:	b017      	add	sp, #92	; 0x5c
 8021c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021c40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c44:	b085      	sub	sp, #20
 8021c46:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021c4a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021c4e:	9103      	str	r1, [sp, #12]
 8021c50:	fb00 7406 	mla	r4, r0, r6, r7
 8021c54:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021c58:	2800      	cmp	r0, #0
 8021c5a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021c5e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021c62:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021c66:	9501      	str	r5, [sp, #4]
 8021c68:	eb02 0904 	add.w	r9, r2, r4
 8021c6c:	f2c0 8141 	blt.w	8021ef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021c70:	4583      	cmp	fp, r0
 8021c72:	f340 813e 	ble.w	8021ef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021c76:	2f00      	cmp	r7, #0
 8021c78:	f2c0 8137 	blt.w	8021eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021c7c:	42be      	cmp	r6, r7
 8021c7e:	f340 8134 	ble.w	8021eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021c82:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021c86:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021c8a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021c8e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021c92:	4355      	muls	r5, r2
 8021c94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021c98:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021c9c:	fb0c f203 	mul.w	r2, ip, r3
 8021ca0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021ca4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021ca8:	441d      	add	r5, r3
 8021caa:	f102 0320 	add.w	r3, r2, #32
 8021cae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021cb2:	0a1b      	lsrs	r3, r3, #8
 8021cb4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021cb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021cbc:	431c      	orrs	r4, r3
 8021cbe:	1c7b      	adds	r3, r7, #1
 8021cc0:	f100 811c 	bmi.w	8021efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021cc4:	429e      	cmp	r6, r3
 8021cc6:	f340 8119 	ble.w	8021efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021cca:	2900      	cmp	r1, #0
 8021ccc:	f000 8119 	beq.w	8021f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021cd0:	9a01      	ldr	r2, [sp, #4]
 8021cd2:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021cd6:	8855      	ldrh	r5, [r2, #2]
 8021cd8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021cdc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021ce0:	fb08 f802 	mul.w	r8, r8, r2
 8021ce4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ce8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021cec:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021cf0:	435d      	muls	r5, r3
 8021cf2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021cf6:	44d0      	add	r8, sl
 8021cf8:	f105 0a20 	add.w	sl, r5, #32
 8021cfc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021d00:	0a2d      	lsrs	r5, r5, #8
 8021d02:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021d06:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021d0a:	432a      	orrs	r2, r5
 8021d0c:	3001      	adds	r0, #1
 8021d0e:	f100 80fe 	bmi.w	8021f0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021d12:	4583      	cmp	fp, r0
 8021d14:	f340 80fb 	ble.w	8021f0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021d18:	f1be 0f00 	cmp.w	lr, #0
 8021d1c:	f000 80fc 	beq.w	8021f18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021d20:	2f00      	cmp	r7, #0
 8021d22:	f2c0 80f1 	blt.w	8021f08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021d26:	42be      	cmp	r6, r7
 8021d28:	f340 80ee 	ble.w	8021f08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021d2c:	9801      	ldr	r0, [sp, #4]
 8021d2e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021d32:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021d36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021d3a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021d3e:	fb0a fa00 	mul.w	sl, sl, r0
 8021d42:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021d46:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021d4a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021d4e:	fb05 f808 	mul.w	r8, r5, r8
 8021d52:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021d56:	4482      	add	sl, r0
 8021d58:	f108 0020 	add.w	r0, r8, #32
 8021d5c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021d60:	0a00      	lsrs	r0, r0, #8
 8021d62:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021d66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d6a:	ea4b 0b00 	orr.w	fp, fp, r0
 8021d6e:	3701      	adds	r7, #1
 8021d70:	f100 80d7 	bmi.w	8021f22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021d74:	42be      	cmp	r6, r7
 8021d76:	f340 80d4 	ble.w	8021f22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021d7a:	2900      	cmp	r1, #0
 8021d7c:	f000 80d4 	beq.w	8021f28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021d80:	3601      	adds	r6, #1
 8021d82:	9801      	ldr	r0, [sp, #4]
 8021d84:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021d88:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021d8c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021d90:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021d94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d98:	fb09 f906 	mul.w	r9, r9, r6
 8021d9c:	fb07 f800 	mul.w	r8, r7, r0
 8021da0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021da4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021da8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021dac:	44d1      	add	r9, sl
 8021dae:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021db2:	f108 0020 	add.w	r0, r8, #32
 8021db6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021dba:	0a00      	lsrs	r0, r0, #8
 8021dbc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dc0:	4330      	orrs	r0, r6
 8021dc2:	b28e      	uxth	r6, r1
 8021dc4:	fa1f f98e 	uxth.w	r9, lr
 8021dc8:	fb06 f809 	mul.w	r8, r6, r9
 8021dcc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021dd0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021dd4:	0136      	lsls	r6, r6, #4
 8021dd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021dda:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021dde:	9601      	str	r6, [sp, #4]
 8021de0:	ea4a 0404 	orr.w	r4, sl, r4
 8021de4:	fa1f f689 	uxth.w	r6, r9
 8021de8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021dec:	fb11 f90e 	smulbb	r9, r1, lr
 8021df0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021df4:	9602      	str	r6, [sp, #8]
 8021df6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021dfa:	4626      	mov	r6, r4
 8021dfc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e00:	f1ce 0410 	rsb	r4, lr, #16
 8021e04:	1a64      	subs	r4, r4, r1
 8021e06:	ea4a 0202 	orr.w	r2, sl, r2
 8021e0a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021e0e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021e12:	434a      	muls	r2, r1
 8021e14:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021e18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e1c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e20:	fb04 2406 	mla	r4, r4, r6, r2
 8021e24:	ea4a 0000 	orr.w	r0, sl, r0
 8021e28:	fb09 4200 	mla	r2, r9, r0, r4
 8021e2c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021e30:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021e34:	9801      	ldr	r0, [sp, #4]
 8021e36:	9903      	ldr	r1, [sp, #12]
 8021e38:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021e3c:	ea44 0b0b 	orr.w	fp, r4, fp
 8021e40:	9c02      	ldr	r4, [sp, #8]
 8021e42:	8809      	ldrh	r1, [r1, #0]
 8021e44:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021e48:	1b00      	subs	r0, r0, r4
 8021e4a:	9c01      	ldr	r4, [sp, #4]
 8021e4c:	eba4 0608 	sub.w	r6, r4, r8
 8021e50:	b2b6      	uxth	r6, r6
 8021e52:	b280      	uxth	r0, r0
 8021e54:	4373      	muls	r3, r6
 8021e56:	fb0c 3300 	mla	r3, ip, r0, r3
 8021e5a:	9802      	ldr	r0, [sp, #8]
 8021e5c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021e60:	fb00 3505 	mla	r5, r0, r5, r3
 8021e64:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021e68:	fb08 5707 	mla	r7, r8, r7, r5
 8021e6c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021e70:	120b      	asrs	r3, r1, #8
 8021e72:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021e76:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021e7a:	b2ff      	uxtb	r7, r7
 8021e7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e80:	10c8      	asrs	r0, r1, #3
 8021e82:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021e86:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021e8a:	00c9      	lsls	r1, r1, #3
 8021e8c:	437b      	muls	r3, r7
 8021e8e:	ea42 0e0e 	orr.w	lr, r2, lr
 8021e92:	b2c9      	uxtb	r1, r1
 8021e94:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021e98:	fa1f f28e 	uxth.w	r2, lr
 8021e9c:	4378      	muls	r0, r7
 8021e9e:	434f      	muls	r7, r1
 8021ea0:	1c59      	adds	r1, r3, #1
 8021ea2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021ea6:	1213      	asrs	r3, r2, #8
 8021ea8:	f023 0307 	bic.w	r3, r3, #7
 8021eac:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021eb0:	1c41      	adds	r1, r0, #1
 8021eb2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021eb6:	10d1      	asrs	r1, r2, #3
 8021eb8:	f021 0103 	bic.w	r1, r1, #3
 8021ebc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021ec0:	021b      	lsls	r3, r3, #8
 8021ec2:	00c9      	lsls	r1, r1, #3
 8021ec4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021ec8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021ecc:	430b      	orrs	r3, r1
 8021ece:	1c79      	adds	r1, r7, #1
 8021ed0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021ed4:	00d2      	lsls	r2, r2, #3
 8021ed6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021eda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021ede:	431a      	orrs	r2, r3
 8021ee0:	9b03      	ldr	r3, [sp, #12]
 8021ee2:	801a      	strh	r2, [r3, #0]
 8021ee4:	b005      	add	sp, #20
 8021ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021eea:	f04f 0c00 	mov.w	ip, #0
 8021eee:	4664      	mov	r4, ip
 8021ef0:	e6e5      	b.n	8021cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021ef2:	2300      	movs	r3, #0
 8021ef4:	469c      	mov	ip, r3
 8021ef6:	461a      	mov	r2, r3
 8021ef8:	461c      	mov	r4, r3
 8021efa:	e707      	b.n	8021d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021efc:	2300      	movs	r3, #0
 8021efe:	461a      	mov	r2, r3
 8021f00:	e704      	b.n	8021d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f02:	460b      	mov	r3, r1
 8021f04:	460a      	mov	r2, r1
 8021f06:	e701      	b.n	8021d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f08:	2500      	movs	r5, #0
 8021f0a:	46ab      	mov	fp, r5
 8021f0c:	e72f      	b.n	8021d6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021f0e:	2700      	movs	r7, #0
 8021f10:	463d      	mov	r5, r7
 8021f12:	4638      	mov	r0, r7
 8021f14:	46bb      	mov	fp, r7
 8021f16:	e754      	b.n	8021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f18:	4677      	mov	r7, lr
 8021f1a:	4675      	mov	r5, lr
 8021f1c:	4670      	mov	r0, lr
 8021f1e:	46f3      	mov	fp, lr
 8021f20:	e74f      	b.n	8021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f22:	2700      	movs	r7, #0
 8021f24:	4638      	mov	r0, r7
 8021f26:	e74c      	b.n	8021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f28:	460f      	mov	r7, r1
 8021f2a:	4608      	mov	r0, r1
 8021f2c:	e749      	b.n	8021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f34:	b093      	sub	sp, #76	; 0x4c
 8021f36:	9210      	str	r2, [sp, #64]	; 0x40
 8021f38:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021f3a:	910e      	str	r1, [sp, #56]	; 0x38
 8021f3c:	9306      	str	r3, [sp, #24]
 8021f3e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021f42:	9011      	str	r0, [sp, #68]	; 0x44
 8021f44:	6850      	ldr	r0, [r2, #4]
 8021f46:	6812      	ldr	r2, [r2, #0]
 8021f48:	fb00 1303 	mla	r3, r0, r3, r1
 8021f4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021f50:	9307      	str	r3, [sp, #28]
 8021f52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f54:	681b      	ldr	r3, [r3, #0]
 8021f56:	9308      	str	r3, [sp, #32]
 8021f58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f5a:	685b      	ldr	r3, [r3, #4]
 8021f5c:	9309      	str	r3, [sp, #36]	; 0x24
 8021f5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021f60:	2b00      	cmp	r3, #0
 8021f62:	dc03      	bgt.n	8021f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021f64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021f66:	2b00      	cmp	r3, #0
 8021f68:	f340 83b4 	ble.w	80226d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021f76:	1e48      	subs	r0, r1, #1
 8021f78:	1e55      	subs	r5, r2, #1
 8021f7a:	9b06      	ldr	r3, [sp, #24]
 8021f7c:	2b00      	cmp	r3, #0
 8021f7e:	f340 8163 	ble.w	8022248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021f82:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021f84:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f86:	1436      	asrs	r6, r6, #16
 8021f88:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021f8c:	d406      	bmi.n	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021f8e:	4286      	cmp	r6, r0
 8021f90:	da04      	bge.n	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021f92:	2b00      	cmp	r3, #0
 8021f94:	db02      	blt.n	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021f96:	42ab      	cmp	r3, r5
 8021f98:	f2c0 8157 	blt.w	802224a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021f9c:	3601      	adds	r6, #1
 8021f9e:	f100 8144 	bmi.w	802222a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021fa2:	42b1      	cmp	r1, r6
 8021fa4:	f2c0 8141 	blt.w	802222a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021fa8:	3301      	adds	r3, #1
 8021faa:	f100 813e 	bmi.w	802222a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021fae:	429a      	cmp	r2, r3
 8021fb0:	f2c0 813b 	blt.w	802222a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021fb4:	9b06      	ldr	r3, [sp, #24]
 8021fb6:	9f07      	ldr	r7, [sp, #28]
 8021fb8:	930f      	str	r3, [sp, #60]	; 0x3c
 8021fba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021fbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021fc0:	2b00      	cmp	r3, #0
 8021fc2:	f340 8164 	ble.w	802228e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021fc6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021fc8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021fca:	1418      	asrs	r0, r3, #16
 8021fcc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021fce:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021fd2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021fd4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021fd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fda:	142d      	asrs	r5, r5, #16
 8021fdc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021fe0:	f100 81ee 	bmi.w	80223c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021fe4:	f102 3eff 	add.w	lr, r2, #4294967295
 8021fe8:	4575      	cmp	r5, lr
 8021fea:	f280 81e9 	bge.w	80223c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021fee:	2800      	cmp	r0, #0
 8021ff0:	f2c0 81e6 	blt.w	80223c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021ff4:	f103 3eff 	add.w	lr, r3, #4294967295
 8021ff8:	4570      	cmp	r0, lr
 8021ffa:	f280 81e1 	bge.w	80223c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021ffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022000:	b212      	sxth	r2, r2
 8022002:	fb00 5002 	mla	r0, r0, r2, r5
 8022006:	fa1f fe81 	uxth.w	lr, r1
 802200a:	eb03 0a00 	add.w	sl, r3, r0
 802200e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022012:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022016:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802201a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802201e:	b29b      	uxth	r3, r3
 8022020:	f1bc 0f00 	cmp.w	ip, #0
 8022024:	f000 8179 	beq.w	802231a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022028:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802202c:	940a      	str	r4, [sp, #40]	; 0x28
 802202e:	eb0a 0b02 	add.w	fp, sl, r2
 8022032:	fa1f fa8c 	uxth.w	sl, ip
 8022036:	fb0a fe0e 	mul.w	lr, sl, lr
 802203a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802203e:	fa1f fa8a 	uxth.w	sl, sl
 8022042:	eba5 050e 	sub.w	r5, r5, lr
 8022046:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802204a:	940b      	str	r4, [sp, #44]	; 0x2c
 802204c:	eba3 030a 	sub.w	r3, r3, sl
 8022050:	b2ad      	uxth	r5, r5
 8022052:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022054:	b29b      	uxth	r3, r3
 8022056:	fb08 f505 	mul.w	r5, r8, r5
 802205a:	fb09 5303 	mla	r3, r9, r3, r5
 802205e:	fb0a 3304 	mla	r3, sl, r4, r3
 8022062:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022064:	fb0e 3304 	mla	r3, lr, r4, r3
 8022068:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802206c:	2b00      	cmp	r3, #0
 802206e:	f000 80cf 	beq.w	8022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022072:	9c08      	ldr	r4, [sp, #32]
 8022074:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022078:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802207c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022080:	f000 8150 	beq.w	8022324 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022084:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022088:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802208c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022090:	fb09 f000 	mul.w	r0, r9, r0
 8022094:	fb0a fe0e 	mul.w	lr, sl, lr
 8022098:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802209c:	f100 0b20 	add.w	fp, r0, #32
 80220a0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80220a4:	44ce      	add	lr, r9
 80220a6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80220aa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80220ae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80220b2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80220b6:	ea4e 0909 	orr.w	r9, lr, r9
 80220ba:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80220be:	8868      	ldrh	r0, [r5, #2]
 80220c0:	d019      	beq.n	80220f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80220c2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80220c6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80220ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220ce:	fb08 f800 	mul.w	r8, r8, r0
 80220d2:	fb0a fe0e 	mul.w	lr, sl, lr
 80220d6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80220da:	f108 0b20 	add.w	fp, r8, #32
 80220de:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80220e2:	4486      	add	lr, r0
 80220e4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80220e8:	0a00      	lsrs	r0, r0, #8
 80220ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80220ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220f2:	ea4e 0000 	orr.w	r0, lr, r0
 80220f6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80220fa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80220fe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022102:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022106:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802210a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802210e:	ea4e 0909 	orr.w	r9, lr, r9
 8022112:	ea4a 0000 	orr.w	r0, sl, r0
 8022116:	f1bc 0f00 	cmp.w	ip, #0
 802211a:	f000 8105 	beq.w	8022328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802211e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022122:	3a01      	subs	r2, #1
 8022124:	0052      	lsls	r2, r2, #1
 8022126:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022128:	3202      	adds	r2, #2
 802212a:	2cff      	cmp	r4, #255	; 0xff
 802212c:	eb05 0e02 	add.w	lr, r5, r2
 8022130:	5aaa      	ldrh	r2, [r5, r2]
 8022132:	d018      	beq.n	8022166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022134:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802213c:	fb04 fa02 	mul.w	sl, r4, r2
 8022140:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022144:	fb08 f805 	mul.w	r8, r8, r5
 8022148:	f10a 0520 	add.w	r5, sl, #32
 802214c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022150:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022154:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022158:	4442      	add	r2, r8
 802215a:	0a2d      	lsrs	r5, r5, #8
 802215c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022160:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022164:	432a      	orrs	r2, r5
 8022166:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022168:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802216c:	2cff      	cmp	r4, #255	; 0xff
 802216e:	d01a      	beq.n	80221a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022170:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022174:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022178:	fb04 fa05 	mul.w	sl, r4, r5
 802217c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022180:	fb08 f80e 	mul.w	r8, r8, lr
 8022184:	f10a 0e20 	add.w	lr, sl, #32
 8022188:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802218c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022190:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022194:	4445      	add	r5, r8
 8022196:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802219a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802219e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80221a2:	ea45 050e 	orr.w	r5, r5, lr
 80221a6:	fb1c fe01 	smulbb	lr, ip, r1
 80221aa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80221ae:	f1cc 0810 	rsb	r8, ip, #16
 80221b2:	eba8 0801 	sub.w	r8, r8, r1
 80221b6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80221ba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80221be:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80221c2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80221c6:	4341      	muls	r1, r0
 80221c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80221d0:	ea4a 0202 	orr.w	r2, sl, r2
 80221d4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80221d8:	fb09 1108 	mla	r1, r9, r8, r1
 80221dc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80221e0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80221e4:	fb0c 1102 	mla	r1, ip, r2, r1
 80221e8:	ea4b 0505 	orr.w	r5, fp, r5
 80221ec:	fb0e 1e05 	mla	lr, lr, r5, r1
 80221f0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80221f4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80221f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221fc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022200:	ea42 0e0e 	orr.w	lr, r2, lr
 8022204:	fa1f f28e 	uxth.w	r2, lr
 8022208:	2bff      	cmp	r3, #255	; 0xff
 802220a:	f040 80a1 	bne.w	8022350 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802220e:	803a      	strh	r2, [r7, #0]
 8022210:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022212:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022214:	4413      	add	r3, r2
 8022216:	931d      	str	r3, [sp, #116]	; 0x74
 8022218:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802221a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802221c:	441a      	add	r2, r3
 802221e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022220:	921e      	str	r2, [sp, #120]	; 0x78
 8022222:	3b01      	subs	r3, #1
 8022224:	3702      	adds	r7, #2
 8022226:	930f      	str	r3, [sp, #60]	; 0x3c
 8022228:	e6c9      	b.n	8021fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802222a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802222c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802222e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022230:	4433      	add	r3, r6
 8022232:	931d      	str	r3, [sp, #116]	; 0x74
 8022234:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022236:	441c      	add	r4, r3
 8022238:	9b06      	ldr	r3, [sp, #24]
 802223a:	941e      	str	r4, [sp, #120]	; 0x78
 802223c:	3b01      	subs	r3, #1
 802223e:	9306      	str	r3, [sp, #24]
 8022240:	9b07      	ldr	r3, [sp, #28]
 8022242:	3302      	adds	r3, #2
 8022244:	9307      	str	r3, [sp, #28]
 8022246:	e698      	b.n	8021f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022248:	d028      	beq.n	802229c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802224a:	9b06      	ldr	r3, [sp, #24]
 802224c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802224e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022250:	3b01      	subs	r3, #1
 8022252:	fb00 5003 	mla	r0, r0, r3, r5
 8022256:	1400      	asrs	r0, r0, #16
 8022258:	f53f aeac 	bmi.w	8021fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802225c:	3901      	subs	r1, #1
 802225e:	4288      	cmp	r0, r1
 8022260:	f6bf aea8 	bge.w	8021fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022264:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022266:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022268:	fb01 0303 	mla	r3, r1, r3, r0
 802226c:	141b      	asrs	r3, r3, #16
 802226e:	f53f aea1 	bmi.w	8021fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022272:	3a01      	subs	r2, #1
 8022274:	4293      	cmp	r3, r2
 8022276:	f6bf ae9d 	bge.w	8021fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802227a:	9b06      	ldr	r3, [sp, #24]
 802227c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022280:	930f      	str	r3, [sp, #60]	; 0x3c
 8022282:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022286:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022288:	2b00      	cmp	r3, #0
 802228a:	f300 80b6 	bgt.w	80223fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802228e:	9b06      	ldr	r3, [sp, #24]
 8022290:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022294:	9b07      	ldr	r3, [sp, #28]
 8022296:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802229a:	9307      	str	r3, [sp, #28]
 802229c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802229e:	2b00      	cmp	r3, #0
 80222a0:	f340 8218 	ble.w	80226d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80222a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80222a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80222ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80222b0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80222b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80222b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80222ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80222be:	eef0 6a62 	vmov.f32	s13, s5
 80222c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80222c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80222ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80222ce:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80222d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80222d6:	eef0 6a43 	vmov.f32	s13, s6
 80222da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80222de:	ee12 2a90 	vmov	r2, s5
 80222e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80222e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80222ea:	ee13 2a10 	vmov	r2, s6
 80222ee:	931f      	str	r3, [sp, #124]	; 0x7c
 80222f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80222f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80222f6:	9320      	str	r3, [sp, #128]	; 0x80
 80222f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80222fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80222fc:	3b01      	subs	r3, #1
 80222fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022302:	930e      	str	r3, [sp, #56]	; 0x38
 8022304:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022306:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802230a:	bf08      	it	eq
 802230c:	4613      	moveq	r3, r2
 802230e:	9306      	str	r3, [sp, #24]
 8022310:	eeb0 3a67 	vmov.f32	s6, s15
 8022314:	eef0 2a47 	vmov.f32	s5, s14
 8022318:	e621      	b.n	8021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802231a:	fb08 f505 	mul.w	r5, r8, r5
 802231e:	fb09 5303 	mla	r3, r9, r3, r5
 8022322:	e6a1      	b.n	8022068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022324:	4681      	mov	r9, r0
 8022326:	e6c8      	b.n	80220ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022328:	f1c1 0210 	rsb	r2, r1, #16
 802232c:	4341      	muls	r1, r0
 802232e:	fb09 1902 	mla	r9, r9, r2, r1
 8022332:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022336:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802233a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802233e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022342:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022346:	ea42 0909 	orr.w	r9, r2, r9
 802234a:	fa1f f289 	uxth.w	r2, r9
 802234e:	e75b      	b.n	8022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022350:	f8b7 c000 	ldrh.w	ip, [r7]
 8022354:	43db      	mvns	r3, r3
 8022356:	ea4f 202c 	mov.w	r0, ip, asr #8
 802235a:	fa5f fe83 	uxtb.w	lr, r3
 802235e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022362:	fb00 f00e 	mul.w	r0, r0, lr
 8022366:	1c41      	adds	r1, r0, #1
 8022368:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802236c:	1211      	asrs	r1, r2, #8
 802236e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022372:	f021 0107 	bic.w	r1, r1, #7
 8022376:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802237a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802237e:	48d7      	ldr	r0, [pc, #860]	; (80226dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022380:	fb05 f50e 	mul.w	r5, r5, lr
 8022384:	b2c9      	uxtb	r1, r1
 8022386:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802238a:	1c69      	adds	r1, r5, #1
 802238c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022390:	10d1      	asrs	r1, r2, #3
 8022392:	f021 0103 	bic.w	r1, r1, #3
 8022396:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802239a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802239e:	b2db      	uxtb	r3, r3
 80223a0:	00c9      	lsls	r1, r1, #3
 80223a2:	fb03 f30e 	mul.w	r3, r3, lr
 80223a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80223aa:	4301      	orrs	r1, r0
 80223ac:	1c58      	adds	r0, r3, #1
 80223ae:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80223b2:	00d2      	lsls	r2, r2, #3
 80223b4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80223b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80223bc:	430a      	orrs	r2, r1
 80223be:	e726      	b.n	802220e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80223c0:	f115 0e01 	adds.w	lr, r5, #1
 80223c4:	f53f af24 	bmi.w	8022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80223c8:	4572      	cmp	r2, lr
 80223ca:	f6ff af21 	blt.w	8022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80223ce:	f110 0e01 	adds.w	lr, r0, #1
 80223d2:	f53f af1d 	bmi.w	8022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80223d6:	4573      	cmp	r3, lr
 80223d8:	f6ff af1a 	blt.w	8022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80223dc:	b21b      	sxth	r3, r3
 80223de:	b212      	sxth	r2, r2
 80223e0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80223e4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80223e8:	9301      	str	r3, [sp, #4]
 80223ea:	9200      	str	r2, [sp, #0]
 80223ec:	4639      	mov	r1, r7
 80223ee:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80223f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80223f4:	f7ff fc24 	bl	8021c40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80223f8:	e70a      	b.n	8022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80223fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80223fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022400:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022402:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022406:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022408:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802240c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802240e:	141f      	asrs	r7, r3, #16
 8022410:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022412:	141b      	asrs	r3, r3, #16
 8022414:	fb01 3707 	mla	r7, r1, r7, r3
 8022418:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802241a:	fa1f fc82 	uxth.w	ip, r2
 802241e:	eb03 0a07 	add.w	sl, r3, r7
 8022422:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022426:	f813 9007 	ldrb.w	r9, [r3, r7]
 802242a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802242e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022432:	b29b      	uxth	r3, r3
 8022434:	2d00      	cmp	r5, #0
 8022436:	f000 80fe 	beq.w	8022636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802243a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802243e:	940c      	str	r4, [sp, #48]	; 0x30
 8022440:	eb0a 0b01 	add.w	fp, sl, r1
 8022444:	fa1f fa85 	uxth.w	sl, r5
 8022448:	fb0a fc0c 	mul.w	ip, sl, ip
 802244c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022450:	fa1f fa8a 	uxth.w	sl, sl
 8022454:	eba0 000c 	sub.w	r0, r0, ip
 8022458:	eba3 030a 	sub.w	r3, r3, sl
 802245c:	b280      	uxth	r0, r0
 802245e:	fb08 f000 	mul.w	r0, r8, r0
 8022462:	b29b      	uxth	r3, r3
 8022464:	fb09 0303 	mla	r3, r9, r3, r0
 8022468:	980c      	ldr	r0, [sp, #48]	; 0x30
 802246a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802246e:	940d      	str	r4, [sp, #52]	; 0x34
 8022470:	fb0a 3300 	mla	r3, sl, r0, r3
 8022474:	fb0c 3304 	mla	r3, ip, r4, r3
 8022478:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802247c:	2b00      	cmp	r3, #0
 802247e:	f000 80cc 	beq.w	802261a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022482:	9808      	ldr	r0, [sp, #32]
 8022484:	9c08      	ldr	r4, [sp, #32]
 8022486:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802248a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802248e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022492:	f000 80d5 	beq.w	8022640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022496:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802249a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802249e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80224a2:	fb09 f707 	mul.w	r7, r9, r7
 80224a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80224aa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80224ae:	f107 0b20 	add.w	fp, r7, #32
 80224b2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80224b6:	44cc      	add	ip, r9
 80224b8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80224bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80224c0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80224c4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80224c8:	ea4c 0909 	orr.w	r9, ip, r9
 80224cc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80224d0:	8847      	ldrh	r7, [r0, #2]
 80224d2:	d019      	beq.n	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80224d4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80224d8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80224dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80224e0:	fb08 f807 	mul.w	r8, r8, r7
 80224e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80224e8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80224ec:	f108 0b20 	add.w	fp, r8, #32
 80224f0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80224f4:	44bc      	add	ip, r7
 80224f6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80224fa:	0a3f      	lsrs	r7, r7, #8
 80224fc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022500:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022504:	ea4c 0707 	orr.w	r7, ip, r7
 8022508:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802250c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022510:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022514:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022518:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802251c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022520:	ea4c 0909 	orr.w	r9, ip, r9
 8022524:	ea4a 0707 	orr.w	r7, sl, r7
 8022528:	2d00      	cmp	r5, #0
 802252a:	f000 808b 	beq.w	8022644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802252e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022532:	3901      	subs	r1, #1
 8022534:	0049      	lsls	r1, r1, #1
 8022536:	3102      	adds	r1, #2
 8022538:	eb00 0c01 	add.w	ip, r0, r1
 802253c:	5a41      	ldrh	r1, [r0, r1]
 802253e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022540:	28ff      	cmp	r0, #255	; 0xff
 8022542:	d019      	beq.n	8022578 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022544:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022546:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802254a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802254e:	fb04 fa01 	mul.w	sl, r4, r1
 8022552:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022556:	fb08 f800 	mul.w	r8, r8, r0
 802255a:	f10a 0020 	add.w	r0, sl, #32
 802255e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022562:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022566:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802256a:	4441      	add	r1, r8
 802256c:	0a00      	lsrs	r0, r0, #8
 802256e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022572:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022576:	4301      	orrs	r1, r0
 8022578:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802257a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802257e:	2cff      	cmp	r4, #255	; 0xff
 8022580:	d01a      	beq.n	80225b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022582:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022586:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802258a:	fb04 fa00 	mul.w	sl, r4, r0
 802258e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022592:	fb08 f80c 	mul.w	r8, r8, ip
 8022596:	f10a 0c20 	add.w	ip, sl, #32
 802259a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802259e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80225a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80225a6:	4440      	add	r0, r8
 80225a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80225ac:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80225b0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80225b4:	ea40 000c 	orr.w	r0, r0, ip
 80225b8:	fb15 fc02 	smulbb	ip, r5, r2
 80225bc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80225c0:	f1c5 0810 	rsb	r8, r5, #16
 80225c4:	eba8 0802 	sub.w	r8, r8, r2
 80225c8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80225cc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80225d0:	437a      	muls	r2, r7
 80225d2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80225d6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80225da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80225e2:	fb09 2208 	mla	r2, r9, r8, r2
 80225e6:	ea4a 0101 	orr.w	r1, sl, r1
 80225ea:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80225ee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80225f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80225f6:	fb05 2201 	mla	r2, r5, r1, r2
 80225fa:	ea4b 0000 	orr.w	r0, fp, r0
 80225fe:	fb0c 2200 	mla	r2, ip, r0, r2
 8022602:	0d57      	lsrs	r7, r2, #21
 8022604:	0952      	lsrs	r2, r2, #5
 8022606:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802260a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802260e:	433a      	orrs	r2, r7
 8022610:	2bff      	cmp	r3, #255	; 0xff
 8022612:	b292      	uxth	r2, r2
 8022614:	d127      	bne.n	8022666 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022616:	f8ae 2000 	strh.w	r2, [lr]
 802261a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802261c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802261e:	4413      	add	r3, r2
 8022620:	931d      	str	r3, [sp, #116]	; 0x74
 8022622:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022624:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022626:	441a      	add	r2, r3
 8022628:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802262a:	921e      	str	r2, [sp, #120]	; 0x78
 802262c:	3b01      	subs	r3, #1
 802262e:	f10e 0e02 	add.w	lr, lr, #2
 8022632:	930f      	str	r3, [sp, #60]	; 0x3c
 8022634:	e627      	b.n	8022286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022636:	fb08 f000 	mul.w	r0, r8, r0
 802263a:	fb09 0303 	mla	r3, r9, r3, r0
 802263e:	e71b      	b.n	8022478 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022640:	46b9      	mov	r9, r7
 8022642:	e743      	b.n	80224cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022644:	f1c2 0110 	rsb	r1, r2, #16
 8022648:	437a      	muls	r2, r7
 802264a:	fb09 2901 	mla	r9, r9, r1, r2
 802264e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022652:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022656:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802265a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802265e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022662:	4302      	orrs	r2, r0
 8022664:	e7d4      	b.n	8022610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022666:	f8be 7000 	ldrh.w	r7, [lr]
 802266a:	4c1c      	ldr	r4, [pc, #112]	; (80226dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802266c:	43db      	mvns	r3, r3
 802266e:	1238      	asrs	r0, r7, #8
 8022670:	fa5f fc83 	uxtb.w	ip, r3
 8022674:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022678:	10fd      	asrs	r5, r7, #3
 802267a:	fb00 f00c 	mul.w	r0, r0, ip
 802267e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022682:	fb05 f10c 	mul.w	r1, r5, ip
 8022686:	1c45      	adds	r5, r0, #1
 8022688:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802268c:	1215      	asrs	r5, r2, #8
 802268e:	f025 0507 	bic.w	r5, r5, #7
 8022692:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022696:	1c4d      	adds	r5, r1, #1
 8022698:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802269c:	10d1      	asrs	r1, r2, #3
 802269e:	f021 0103 	bic.w	r1, r1, #3
 80226a2:	00fb      	lsls	r3, r7, #3
 80226a4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80226a8:	b2db      	uxtb	r3, r3
 80226aa:	b2c0      	uxtb	r0, r0
 80226ac:	00c9      	lsls	r1, r1, #3
 80226ae:	fb03 f30c 	mul.w	r3, r3, ip
 80226b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80226b6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80226ba:	4308      	orrs	r0, r1
 80226bc:	1c59      	adds	r1, r3, #1
 80226be:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80226c2:	00d2      	lsls	r2, r2, #3
 80226c4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80226c8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80226cc:	4318      	orrs	r0, r3
 80226ce:	f8ae 0000 	strh.w	r0, [lr]
 80226d2:	e7a2      	b.n	802261a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80226d4:	b013      	add	sp, #76	; 0x4c
 80226d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80226da:	bf00      	nop
 80226dc:	fffff800 	.word	0xfffff800

080226e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80226e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80226e4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80226e8:	fb05 4c03 	mla	ip, r5, r3, r4
 80226ec:	2d00      	cmp	r5, #0
 80226ee:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80226f2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80226f6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80226fa:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80226fe:	8808      	ldrh	r0, [r1, #0]
 8022700:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022704:	f2c0 80a7 	blt.w	8022856 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022708:	45aa      	cmp	sl, r5
 802270a:	f340 80a4 	ble.w	8022856 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802270e:	2c00      	cmp	r4, #0
 8022710:	f2c0 809f 	blt.w	8022852 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022714:	42a3      	cmp	r3, r4
 8022716:	f340 809c 	ble.w	8022852 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802271a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802271e:	1c62      	adds	r2, r4, #1
 8022720:	f100 809c 	bmi.w	802285c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022724:	4293      	cmp	r3, r2
 8022726:	f340 8099 	ble.w	802285c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802272a:	f1b9 0f00 	cmp.w	r9, #0
 802272e:	f000 8095 	beq.w	802285c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022732:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022736:	3501      	adds	r5, #1
 8022738:	f100 8094 	bmi.w	8022864 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802273c:	45aa      	cmp	sl, r5
 802273e:	f340 8091 	ble.w	8022864 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022742:	2f00      	cmp	r7, #0
 8022744:	f000 808e 	beq.w	8022864 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022748:	2c00      	cmp	r4, #0
 802274a:	f2c0 8089 	blt.w	8022860 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802274e:	42a3      	cmp	r3, r4
 8022750:	f340 8086 	ble.w	8022860 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022754:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022758:	3401      	adds	r4, #1
 802275a:	f100 8086 	bmi.w	802286a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802275e:	42a3      	cmp	r3, r4
 8022760:	f340 8083 	ble.w	802286a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022764:	f1b9 0f00 	cmp.w	r9, #0
 8022768:	d07f      	beq.n	802286a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802276a:	3301      	adds	r3, #1
 802276c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022770:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022774:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022778:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802277c:	fb19 fe07 	smulbb	lr, r9, r7
 8022780:	ea44 0808 	orr.w	r8, r4, r8
 8022784:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022788:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802278c:	f1c7 0210 	rsb	r2, r7, #16
 8022790:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022794:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022798:	ea44 0c0c 	orr.w	ip, r4, ip
 802279c:	eba2 0209 	sub.w	r2, r2, r9
 80227a0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80227a4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80227a8:	fb04 f40c 	mul.w	r4, r4, ip
 80227ac:	fb02 4808 	mla	r8, r2, r8, r4
 80227b0:	041a      	lsls	r2, r3, #16
 80227b2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80227b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80227ba:	4313      	orrs	r3, r2
 80227bc:	042a      	lsls	r2, r5, #16
 80227be:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80227c2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80227c6:	fb0e 8303 	mla	r3, lr, r3, r8
 80227ca:	432a      	orrs	r2, r5
 80227cc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80227d0:	fb07 3202 	mla	r2, r7, r2, r3
 80227d4:	0d53      	lsrs	r3, r2, #21
 80227d6:	0952      	lsrs	r2, r2, #5
 80227d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80227dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80227e0:	431a      	orrs	r2, r3
 80227e2:	b293      	uxth	r3, r2
 80227e4:	b2b4      	uxth	r4, r6
 80227e6:	1202      	asrs	r2, r0, #8
 80227e8:	43f6      	mvns	r6, r6
 80227ea:	b2f6      	uxtb	r6, r6
 80227ec:	121d      	asrs	r5, r3, #8
 80227ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80227f2:	fb12 f206 	smulbb	r2, r2, r6
 80227f6:	10c7      	asrs	r7, r0, #3
 80227f8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80227fc:	00c0      	lsls	r0, r0, #3
 80227fe:	fb05 2504 	mla	r5, r5, r4, r2
 8022802:	b2c0      	uxtb	r0, r0
 8022804:	10da      	asrs	r2, r3, #3
 8022806:	00db      	lsls	r3, r3, #3
 8022808:	b2db      	uxtb	r3, r3
 802280a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802280e:	fb10 f006 	smulbb	r0, r0, r6
 8022812:	b2ad      	uxth	r5, r5
 8022814:	fb03 0004 	mla	r0, r3, r4, r0
 8022818:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802281c:	fb17 f706 	smulbb	r7, r7, r6
 8022820:	b280      	uxth	r0, r0
 8022822:	1c6b      	adds	r3, r5, #1
 8022824:	fb02 7204 	mla	r2, r2, r4, r7
 8022828:	b292      	uxth	r2, r2
 802282a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802282e:	1c43      	adds	r3, r0, #1
 8022830:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022834:	1c50      	adds	r0, r2, #1
 8022836:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802283a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802283e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022842:	0952      	lsrs	r2, r2, #5
 8022844:	432b      	orrs	r3, r5
 8022846:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802284a:	4313      	orrs	r3, r2
 802284c:	800b      	strh	r3, [r1, #0]
 802284e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022852:	4680      	mov	r8, r0
 8022854:	e763      	b.n	802271e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022856:	4684      	mov	ip, r0
 8022858:	4680      	mov	r8, r0
 802285a:	e76c      	b.n	8022736 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802285c:	4684      	mov	ip, r0
 802285e:	e76a      	b.n	8022736 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022860:	4605      	mov	r5, r0
 8022862:	e779      	b.n	8022758 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022864:	4603      	mov	r3, r0
 8022866:	4605      	mov	r5, r0
 8022868:	e782      	b.n	8022770 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802286a:	4603      	mov	r3, r0
 802286c:	e780      	b.n	8022770 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802286e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802286e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022872:	b093      	sub	sp, #76	; 0x4c
 8022874:	461d      	mov	r5, r3
 8022876:	9210      	str	r2, [sp, #64]	; 0x40
 8022878:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802287a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802287e:	920b      	str	r2, [sp, #44]	; 0x2c
 8022880:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022884:	910a      	str	r1, [sp, #40]	; 0x28
 8022886:	6859      	ldr	r1, [r3, #4]
 8022888:	681b      	ldr	r3, [r3, #0]
 802288a:	9011      	str	r0, [sp, #68]	; 0x44
 802288c:	fb01 2707 	mla	r7, r1, r7, r2
 8022890:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022894:	9307      	str	r3, [sp, #28]
 8022896:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022898:	681b      	ldr	r3, [r3, #0]
 802289a:	9309      	str	r3, [sp, #36]	; 0x24
 802289c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802289e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80228a2:	43db      	mvns	r3, r3
 80228a4:	b2db      	uxtb	r3, r3
 80228a6:	9308      	str	r3, [sp, #32]
 80228a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80228aa:	2b00      	cmp	r3, #0
 80228ac:	dc03      	bgt.n	80228b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80228ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80228b0:	2b00      	cmp	r3, #0
 80228b2:	f340 8203 	ble.w	8022cbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80228b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80228bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80228c0:	1e48      	subs	r0, r1, #1
 80228c2:	f102 3cff 	add.w	ip, r2, #4294967295
 80228c6:	2d00      	cmp	r5, #0
 80228c8:	f340 80da 	ble.w	8022a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80228cc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80228d0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80228d4:	d406      	bmi.n	80228e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80228d6:	4586      	cmp	lr, r0
 80228d8:	da04      	bge.n	80228e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80228da:	2b00      	cmp	r3, #0
 80228dc:	db02      	blt.n	80228e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80228de:	4563      	cmp	r3, ip
 80228e0:	f2c0 80cf 	blt.w	8022a82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80228e4:	f11e 0e01 	adds.w	lr, lr, #1
 80228e8:	f100 80c1 	bmi.w	8022a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80228ec:	4571      	cmp	r1, lr
 80228ee:	f2c0 80be 	blt.w	8022a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80228f2:	3301      	adds	r3, #1
 80228f4:	f100 80bb 	bmi.w	8022a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80228f8:	429a      	cmp	r2, r3
 80228fa:	f2c0 80b8 	blt.w	8022a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80228fe:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022902:	46a9      	mov	r9, r5
 8022904:	f1b9 0f00 	cmp.w	r9, #0
 8022908:	f340 80d8 	ble.w	8022abc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802290c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802290e:	1421      	asrs	r1, r4, #16
 8022910:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022914:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022918:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802291c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022920:	f100 8111 	bmi.w	8022b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022924:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022928:	4551      	cmp	r1, sl
 802292a:	f280 810c 	bge.w	8022b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802292e:	2800      	cmp	r0, #0
 8022930:	f2c0 8109 	blt.w	8022b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022934:	f103 3aff 	add.w	sl, r3, #4294967295
 8022938:	4550      	cmp	r0, sl
 802293a:	f280 8104 	bge.w	8022b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802293e:	fa0f f38e 	sxth.w	r3, lr
 8022942:	fb00 1103 	mla	r1, r0, r3, r1
 8022946:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022948:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802294c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022950:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022954:	f1bc 0f00 	cmp.w	ip, #0
 8022958:	d007      	beq.n	802296a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802295a:	005b      	lsls	r3, r3, #1
 802295c:	eb0a 0003 	add.w	r0, sl, r3
 8022960:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022964:	930c      	str	r3, [sp, #48]	; 0x30
 8022966:	8843      	ldrh	r3, [r0, #2]
 8022968:	930d      	str	r3, [sp, #52]	; 0x34
 802296a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802296e:	fb12 f30c 	smulbb	r3, r2, ip
 8022972:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022976:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802297a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802297e:	10db      	asrs	r3, r3, #3
 8022980:	ea40 000e 	orr.w	r0, r0, lr
 8022984:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022988:	f1cc 0e10 	rsb	lr, ip, #16
 802298c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022990:	ebae 0e02 	sub.w	lr, lr, r2
 8022994:	ea4a 0101 	orr.w	r1, sl, r1
 8022998:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802299c:	4351      	muls	r1, r2
 802299e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80229a0:	9f08      	ldr	r7, [sp, #32]
 80229a2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80229a6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80229aa:	0410      	lsls	r0, r2, #16
 80229ac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80229b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80229b4:	4310      	orrs	r0, r2
 80229b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80229b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80229ba:	0412      	lsls	r2, r2, #16
 80229bc:	fb03 e000 	mla	r0, r3, r0, lr
 80229c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80229c4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80229c8:	ea42 020e 	orr.w	r2, r2, lr
 80229cc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80229d0:	fb03 0302 	mla	r3, r3, r2, r0
 80229d4:	0d5a      	lsrs	r2, r3, #21
 80229d6:	095b      	lsrs	r3, r3, #5
 80229d8:	f8b8 0000 	ldrh.w	r0, [r8]
 80229dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80229e0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80229e4:	4313      	orrs	r3, r2
 80229e6:	b29b      	uxth	r3, r3
 80229e8:	1201      	asrs	r1, r0, #8
 80229ea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80229ee:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80229f2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80229f6:	fb11 f107 	smulbb	r1, r1, r7
 80229fa:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80229fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022a02:	00c0      	lsls	r0, r0, #3
 8022a04:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022a08:	b2c0      	uxtb	r0, r0
 8022a0a:	10d9      	asrs	r1, r3, #3
 8022a0c:	00db      	lsls	r3, r3, #3
 8022a0e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022a12:	b2db      	uxtb	r3, r3
 8022a14:	fb10 f007 	smulbb	r0, r0, r7
 8022a18:	fa1f fc8c 	uxth.w	ip, ip
 8022a1c:	fb03 0302 	mla	r3, r3, r2, r0
 8022a20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022a24:	fb1e fe07 	smulbb	lr, lr, r7
 8022a28:	fb01 e102 	mla	r1, r1, r2, lr
 8022a2c:	b29a      	uxth	r2, r3
 8022a2e:	f10c 0301 	add.w	r3, ip, #1
 8022a32:	b289      	uxth	r1, r1
 8022a34:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022a38:	1c53      	adds	r3, r2, #1
 8022a3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022a3e:	1c4a      	adds	r2, r1, #1
 8022a40:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022a44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022a48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022a4c:	0949      	lsrs	r1, r1, #5
 8022a4e:	ea43 030c 	orr.w	r3, r3, ip
 8022a52:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022a56:	430b      	orrs	r3, r1
 8022a58:	f8a8 3000 	strh.w	r3, [r8]
 8022a5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022a5e:	441c      	add	r4, r3
 8022a60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a62:	f108 0802 	add.w	r8, r8, #2
 8022a66:	441e      	add	r6, r3
 8022a68:	f109 39ff 	add.w	r9, r9, #4294967295
 8022a6c:	e74a      	b.n	8022904 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022a6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022a70:	441c      	add	r4, r3
 8022a72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a74:	441e      	add	r6, r3
 8022a76:	9b07      	ldr	r3, [sp, #28]
 8022a78:	3302      	adds	r3, #2
 8022a7a:	3d01      	subs	r5, #1
 8022a7c:	9307      	str	r3, [sp, #28]
 8022a7e:	e722      	b.n	80228c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022a80:	d022      	beq.n	8022ac8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022a82:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022a84:	1e6b      	subs	r3, r5, #1
 8022a86:	fb00 4003 	mla	r0, r0, r3, r4
 8022a8a:	1400      	asrs	r0, r0, #16
 8022a8c:	f53f af37 	bmi.w	80228fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a90:	3901      	subs	r1, #1
 8022a92:	4288      	cmp	r0, r1
 8022a94:	f6bf af33 	bge.w	80228fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a98:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022a9a:	fb01 6303 	mla	r3, r1, r3, r6
 8022a9e:	141b      	asrs	r3, r3, #16
 8022aa0:	f53f af2d 	bmi.w	80228fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022aa4:	3a01      	subs	r2, #1
 8022aa6:	4293      	cmp	r3, r2
 8022aa8:	f6bf af29 	bge.w	80228fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022aac:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022ab0:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022ab4:	46a8      	mov	r8, r5
 8022ab6:	f1b8 0f00 	cmp.w	r8, #0
 8022aba:	dc5e      	bgt.n	8022b7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022abc:	9b07      	ldr	r3, [sp, #28]
 8022abe:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022ac2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022ac6:	9307      	str	r3, [sp, #28]
 8022ac8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022aca:	2b00      	cmp	r3, #0
 8022acc:	f340 80f6 	ble.w	8022cbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022ad0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ad4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022ad8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022adc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ade:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ae2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ae6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022aea:	eef0 6a62 	vmov.f32	s13, s5
 8022aee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022af2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022af6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022afa:	ee16 4a90 	vmov	r4, s13
 8022afe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b02:	eef0 6a43 	vmov.f32	s13, s6
 8022b06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b0a:	ee12 2a90 	vmov	r2, s5
 8022b0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b16:	ee13 2a10 	vmov	r2, s6
 8022b1a:	931f      	str	r3, [sp, #124]	; 0x7c
 8022b1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b22:	9320      	str	r3, [sp, #128]	; 0x80
 8022b24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022b28:	3b01      	subs	r3, #1
 8022b2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b2e:	930a      	str	r3, [sp, #40]	; 0x28
 8022b30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b32:	ee16 6a90 	vmov	r6, s13
 8022b36:	bf14      	ite	ne
 8022b38:	461d      	movne	r5, r3
 8022b3a:	4615      	moveq	r5, r2
 8022b3c:	eeb0 3a67 	vmov.f32	s6, s15
 8022b40:	eef0 2a47 	vmov.f32	s5, s14
 8022b44:	e6b0      	b.n	80228a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022b46:	f111 0a01 	adds.w	sl, r1, #1
 8022b4a:	d487      	bmi.n	8022a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022b4c:	45d6      	cmp	lr, sl
 8022b4e:	db85      	blt.n	8022a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022b50:	f110 0a01 	adds.w	sl, r0, #1
 8022b54:	d482      	bmi.n	8022a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022b56:	4553      	cmp	r3, sl
 8022b58:	db80      	blt.n	8022a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022b5a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022b5c:	9101      	str	r1, [sp, #4]
 8022b5e:	b21b      	sxth	r3, r3
 8022b60:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022b64:	9300      	str	r3, [sp, #0]
 8022b66:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022b6a:	fa0f f38e 	sxth.w	r3, lr
 8022b6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022b70:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022b72:	4641      	mov	r1, r8
 8022b74:	f7ff fdb4 	bl	80226e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022b78:	e770      	b.n	8022a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022b7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b7c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022b7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b82:	1430      	asrs	r0, r6, #16
 8022b84:	1423      	asrs	r3, r4, #16
 8022b86:	fb01 3000 	mla	r0, r1, r0, r3
 8022b8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022b8c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022b90:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022b94:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022b98:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022b9c:	8858      	ldrh	r0, [r3, #2]
 8022b9e:	f1be 0f00 	cmp.w	lr, #0
 8022ba2:	d00b      	beq.n	8022bbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022ba4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022ba8:	3901      	subs	r1, #1
 8022baa:	0049      	lsls	r1, r1, #1
 8022bac:	3102      	adds	r1, #2
 8022bae:	eb03 0b01 	add.w	fp, r3, r1
 8022bb2:	5a5b      	ldrh	r3, [r3, r1]
 8022bb4:	930e      	str	r3, [sp, #56]	; 0x38
 8022bb6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022bba:	930f      	str	r3, [sp, #60]	; 0x3c
 8022bbc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022bc0:	fb12 f30e 	smulbb	r3, r2, lr
 8022bc4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022bc8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022bcc:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022bd0:	10db      	asrs	r3, r3, #3
 8022bd2:	ea41 010c 	orr.w	r1, r1, ip
 8022bd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022bda:	f1ce 0c10 	rsb	ip, lr, #16
 8022bde:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022be2:	ebac 0c02 	sub.w	ip, ip, r2
 8022be6:	ea4b 0000 	orr.w	r0, fp, r0
 8022bea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022bee:	4350      	muls	r0, r2
 8022bf0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022bf2:	9f08      	ldr	r7, [sp, #32]
 8022bf4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022bf8:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022bfc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022c00:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022c04:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022c06:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022c08:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022c0c:	0412      	lsls	r2, r2, #16
 8022c0e:	ea4b 0101 	orr.w	r1, fp, r1
 8022c12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c16:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022c1a:	fb03 c101 	mla	r1, r3, r1, ip
 8022c1e:	4302      	orrs	r2, r0
 8022c20:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022c24:	fb03 1202 	mla	r2, r3, r2, r1
 8022c28:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022c2c:	0952      	lsrs	r2, r2, #5
 8022c2e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022c32:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022c36:	f8b9 2000 	ldrh.w	r2, [r9]
 8022c3a:	ea4b 0303 	orr.w	r3, fp, r3
 8022c3e:	b29b      	uxth	r3, r3
 8022c40:	1211      	asrs	r1, r2, #8
 8022c42:	1218      	asrs	r0, r3, #8
 8022c44:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022c48:	fb11 f107 	smulbb	r1, r1, r7
 8022c4c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022c50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022c54:	00d2      	lsls	r2, r2, #3
 8022c56:	fb00 100a 	mla	r0, r0, sl, r1
 8022c5a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022c5e:	10d9      	asrs	r1, r3, #3
 8022c60:	b2d2      	uxtb	r2, r2
 8022c62:	00db      	lsls	r3, r3, #3
 8022c64:	fb1c fc07 	smulbb	ip, ip, r7
 8022c68:	fb12 f207 	smulbb	r2, r2, r7
 8022c6c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022c70:	b2db      	uxtb	r3, r3
 8022c72:	b280      	uxth	r0, r0
 8022c74:	fb01 c10a 	mla	r1, r1, sl, ip
 8022c78:	fb03 230a 	mla	r3, r3, sl, r2
 8022c7c:	b29b      	uxth	r3, r3
 8022c7e:	b289      	uxth	r1, r1
 8022c80:	1c42      	adds	r2, r0, #1
 8022c82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022c86:	f101 0c01 	add.w	ip, r1, #1
 8022c8a:	1c5a      	adds	r2, r3, #1
 8022c8c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022c90:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022c94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c96:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022c9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022c9e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022ca2:	4310      	orrs	r0, r2
 8022ca4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022ca8:	441c      	add	r4, r3
 8022caa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022cac:	ea40 000c 	orr.w	r0, r0, ip
 8022cb0:	f829 0b02 	strh.w	r0, [r9], #2
 8022cb4:	441e      	add	r6, r3
 8022cb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8022cba:	e6fc      	b.n	8022ab6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022cbc:	b013      	add	sp, #76	; 0x4c
 8022cbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022cc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022cc2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022cc6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022cca:	fb0e 4703 	mla	r7, lr, r3, r4
 8022cce:	f1be 0f00 	cmp.w	lr, #0
 8022cd2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022cd6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022cda:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022cde:	8808      	ldrh	r0, [r1, #0]
 8022ce0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022ce4:	db60      	blt.n	8022da8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022ce6:	45f1      	cmp	r9, lr
 8022ce8:	dd5e      	ble.n	8022da8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022cea:	2c00      	cmp	r4, #0
 8022cec:	db5a      	blt.n	8022da4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022cee:	42a3      	cmp	r3, r4
 8022cf0:	dd58      	ble.n	8022da4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022cf2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022cf6:	1c62      	adds	r2, r4, #1
 8022cf8:	d459      	bmi.n	8022dae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022cfa:	4293      	cmp	r3, r2
 8022cfc:	dd57      	ble.n	8022dae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022cfe:	2d00      	cmp	r5, #0
 8022d00:	d055      	beq.n	8022dae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d02:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022d06:	f11e 0e01 	adds.w	lr, lr, #1
 8022d0a:	d454      	bmi.n	8022db6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d0c:	45f1      	cmp	r9, lr
 8022d0e:	dd52      	ble.n	8022db6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d10:	2e00      	cmp	r6, #0
 8022d12:	d050      	beq.n	8022db6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d14:	2c00      	cmp	r4, #0
 8022d16:	db4c      	blt.n	8022db2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022d18:	42a3      	cmp	r3, r4
 8022d1a:	dd4a      	ble.n	8022db2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022d1c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022d20:	3401      	adds	r4, #1
 8022d22:	d405      	bmi.n	8022d30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022d24:	42a3      	cmp	r3, r4
 8022d26:	dd03      	ble.n	8022d30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022d28:	b115      	cbz	r5, 8022d30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022d2a:	3301      	adds	r3, #1
 8022d2c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022d30:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022d34:	fb15 f406 	smulbb	r4, r5, r6
 8022d38:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d3c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022d40:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022d44:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022d48:	ea43 0c0c 	orr.w	ip, r3, ip
 8022d4c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022d50:	f1c6 0310 	rsb	r3, r6, #16
 8022d54:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022d58:	1b5b      	subs	r3, r3, r5
 8022d5a:	ea4e 0707 	orr.w	r7, lr, r7
 8022d5e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022d62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022d66:	437d      	muls	r5, r7
 8022d68:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022d6c:	0403      	lsls	r3, r0, #16
 8022d6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d76:	4318      	orrs	r0, r3
 8022d78:	0413      	lsls	r3, r2, #16
 8022d7a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d82:	4313      	orrs	r3, r2
 8022d84:	fb04 c000 	mla	r0, r4, r0, ip
 8022d88:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022d8c:	fb06 0003 	mla	r0, r6, r3, r0
 8022d90:	0d43      	lsrs	r3, r0, #21
 8022d92:	0940      	lsrs	r0, r0, #5
 8022d94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d9c:	4318      	orrs	r0, r3
 8022d9e:	8008      	strh	r0, [r1, #0]
 8022da0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022da4:	4684      	mov	ip, r0
 8022da6:	e7a6      	b.n	8022cf6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022da8:	4607      	mov	r7, r0
 8022daa:	4684      	mov	ip, r0
 8022dac:	e7ab      	b.n	8022d06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022dae:	4607      	mov	r7, r0
 8022db0:	e7a9      	b.n	8022d06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022db2:	4602      	mov	r2, r0
 8022db4:	e7b4      	b.n	8022d20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022db6:	4602      	mov	r2, r0
 8022db8:	e7ba      	b.n	8022d30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022dba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022dbe:	b08f      	sub	sp, #60	; 0x3c
 8022dc0:	461d      	mov	r5, r3
 8022dc2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022dc4:	920c      	str	r2, [sp, #48]	; 0x30
 8022dc6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022dca:	9107      	str	r1, [sp, #28]
 8022dcc:	6859      	ldr	r1, [r3, #4]
 8022dce:	681b      	ldr	r3, [r3, #0]
 8022dd0:	900d      	str	r0, [sp, #52]	; 0x34
 8022dd2:	fb01 2707 	mla	r7, r1, r7, r2
 8022dd6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022dda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ddc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022de0:	f8d3 8000 	ldr.w	r8, [r3]
 8022de4:	9b07      	ldr	r3, [sp, #28]
 8022de6:	2b00      	cmp	r3, #0
 8022de8:	dc03      	bgt.n	8022df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022dea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022dec:	2b00      	cmp	r3, #0
 8022dee:	f340 8181 	ble.w	80230f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022df2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022df4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022df8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022dfc:	1e48      	subs	r0, r1, #1
 8022dfe:	f102 3cff 	add.w	ip, r2, #4294967295
 8022e02:	2d00      	cmp	r5, #0
 8022e04:	f340 809b 	ble.w	8022f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022e08:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022e0c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022e10:	d406      	bmi.n	8022e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e12:	4586      	cmp	lr, r0
 8022e14:	da04      	bge.n	8022e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e16:	2b00      	cmp	r3, #0
 8022e18:	db02      	blt.n	8022e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e1a:	4563      	cmp	r3, ip
 8022e1c:	f2c0 8090 	blt.w	8022f40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022e20:	f11e 0e01 	adds.w	lr, lr, #1
 8022e24:	f100 8084 	bmi.w	8022f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e28:	4571      	cmp	r1, lr
 8022e2a:	f2c0 8081 	blt.w	8022f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e2e:	3301      	adds	r3, #1
 8022e30:	d47e      	bmi.n	8022f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e32:	429a      	cmp	r2, r3
 8022e34:	db7c      	blt.n	8022f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e36:	46aa      	mov	sl, r5
 8022e38:	46b9      	mov	r9, r7
 8022e3a:	f1ba 0f00 	cmp.w	sl, #0
 8022e3e:	f340 8099 	ble.w	8022f74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022e42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e44:	1421      	asrs	r1, r4, #16
 8022e46:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022e4a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022e4e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022e52:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022e56:	f100 80d0 	bmi.w	8022ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022e5a:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022e5e:	4559      	cmp	r1, fp
 8022e60:	f280 80cb 	bge.w	8022ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022e64:	2800      	cmp	r0, #0
 8022e66:	f2c0 80c8 	blt.w	8022ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022e6a:	f103 3bff 	add.w	fp, r3, #4294967295
 8022e6e:	4558      	cmp	r0, fp
 8022e70:	f280 80c3 	bge.w	8022ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022e74:	fa0f fe8e 	sxth.w	lr, lr
 8022e78:	fb00 110e 	mla	r1, r0, lr, r1
 8022e7c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022e80:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022e84:	8841      	ldrh	r1, [r0, #2]
 8022e86:	f1bc 0f00 	cmp.w	ip, #0
 8022e8a:	d00b      	beq.n	8022ea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022e8c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022e90:	3b01      	subs	r3, #1
 8022e92:	005b      	lsls	r3, r3, #1
 8022e94:	3302      	adds	r3, #2
 8022e96:	eb00 0e03 	add.w	lr, r0, r3
 8022e9a:	5ac3      	ldrh	r3, [r0, r3]
 8022e9c:	9308      	str	r3, [sp, #32]
 8022e9e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022ea2:	9309      	str	r3, [sp, #36]	; 0x24
 8022ea4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022ea8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022eac:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022eb0:	ea40 000b 	orr.w	r0, r0, fp
 8022eb4:	fb12 f30c 	smulbb	r3, r2, ip
 8022eb8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022ebc:	10db      	asrs	r3, r3, #3
 8022ebe:	f1cc 0e10 	rsb	lr, ip, #16
 8022ec2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ec6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022eca:	ebae 0e02 	sub.w	lr, lr, r2
 8022ece:	ea4b 0101 	orr.w	r1, fp, r1
 8022ed2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022ed6:	4351      	muls	r1, r2
 8022ed8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022eda:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022ede:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022ee2:	0410      	lsls	r0, r2, #16
 8022ee4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ee8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022eec:	4310      	orrs	r0, r2
 8022eee:	9a08      	ldr	r2, [sp, #32]
 8022ef0:	9908      	ldr	r1, [sp, #32]
 8022ef2:	0412      	lsls	r2, r2, #16
 8022ef4:	fb03 e000 	mla	r0, r3, r0, lr
 8022ef8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022efc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022f00:	ea42 020e 	orr.w	r2, r2, lr
 8022f04:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022f08:	fb03 0302 	mla	r3, r3, r2, r0
 8022f0c:	0d5a      	lsrs	r2, r3, #21
 8022f0e:	095b      	lsrs	r3, r3, #5
 8022f10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f14:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f18:	4313      	orrs	r3, r2
 8022f1a:	f8a9 3000 	strh.w	r3, [r9]
 8022f1e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022f20:	441c      	add	r4, r3
 8022f22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f24:	f109 0902 	add.w	r9, r9, #2
 8022f28:	441e      	add	r6, r3
 8022f2a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022f2e:	e784      	b.n	8022e3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022f30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022f32:	441c      	add	r4, r3
 8022f34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f36:	3d01      	subs	r5, #1
 8022f38:	441e      	add	r6, r3
 8022f3a:	3702      	adds	r7, #2
 8022f3c:	e761      	b.n	8022e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022f3e:	d01d      	beq.n	8022f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022f40:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022f42:	1e6b      	subs	r3, r5, #1
 8022f44:	fb00 4003 	mla	r0, r0, r3, r4
 8022f48:	1400      	asrs	r0, r0, #16
 8022f4a:	f53f af74 	bmi.w	8022e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022f4e:	3901      	subs	r1, #1
 8022f50:	4288      	cmp	r0, r1
 8022f52:	f6bf af70 	bge.w	8022e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022f56:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022f58:	fb01 6303 	mla	r3, r1, r3, r6
 8022f5c:	141b      	asrs	r3, r3, #16
 8022f5e:	f53f af6a 	bmi.w	8022e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022f62:	3a01      	subs	r2, #1
 8022f64:	4293      	cmp	r3, r2
 8022f66:	f6bf af66 	bge.w	8022e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022f6a:	46a9      	mov	r9, r5
 8022f6c:	46ba      	mov	sl, r7
 8022f6e:	f1b9 0f00 	cmp.w	r9, #0
 8022f72:	dc5a      	bgt.n	802302a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022f74:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022f78:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022f7c:	9b07      	ldr	r3, [sp, #28]
 8022f7e:	2b00      	cmp	r3, #0
 8022f80:	f340 80b8 	ble.w	80230f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022f84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022f90:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f9e:	eef0 6a62 	vmov.f32	s13, s5
 8022fa2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022fa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022faa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022fae:	ee16 4a90 	vmov	r4, s13
 8022fb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022fb6:	eef0 6a43 	vmov.f32	s13, s6
 8022fba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022fbe:	ee12 2a90 	vmov	r2, s5
 8022fc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022fc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fca:	ee13 2a10 	vmov	r2, s6
 8022fce:	931b      	str	r3, [sp, #108]	; 0x6c
 8022fd0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022fd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fd6:	931c      	str	r3, [sp, #112]	; 0x70
 8022fd8:	9b07      	ldr	r3, [sp, #28]
 8022fda:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022fdc:	3b01      	subs	r3, #1
 8022fde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022fe2:	9307      	str	r3, [sp, #28]
 8022fe4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022fe6:	ee16 6a90 	vmov	r6, s13
 8022fea:	bf14      	ite	ne
 8022fec:	461d      	movne	r5, r3
 8022fee:	4615      	moveq	r5, r2
 8022ff0:	eeb0 3a67 	vmov.f32	s6, s15
 8022ff4:	eef0 2a47 	vmov.f32	s5, s14
 8022ff8:	e6f4      	b.n	8022de4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022ffa:	f111 0b01 	adds.w	fp, r1, #1
 8022ffe:	d48e      	bmi.n	8022f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023000:	45de      	cmp	lr, fp
 8023002:	db8c      	blt.n	8022f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023004:	f110 0b01 	adds.w	fp, r0, #1
 8023008:	d489      	bmi.n	8022f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802300a:	455b      	cmp	r3, fp
 802300c:	db87      	blt.n	8022f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802300e:	b21b      	sxth	r3, r3
 8023010:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8023014:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023018:	9300      	str	r3, [sp, #0]
 802301a:	4642      	mov	r2, r8
 802301c:	fa0f f38e 	sxth.w	r3, lr
 8023020:	4649      	mov	r1, r9
 8023022:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023024:	f7ff fe4d 	bl	8022cc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023028:	e779      	b.n	8022f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802302a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802302c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023030:	1420      	asrs	r0, r4, #16
 8023032:	1431      	asrs	r1, r6, #16
 8023034:	fb03 0101 	mla	r1, r3, r1, r0
 8023038:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802303c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023040:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8023044:	8841      	ldrh	r1, [r0, #2]
 8023046:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802304a:	f1be 0f00 	cmp.w	lr, #0
 802304e:	d00b      	beq.n	8023068 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023050:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023054:	3b01      	subs	r3, #1
 8023056:	005b      	lsls	r3, r3, #1
 8023058:	3302      	adds	r3, #2
 802305a:	eb00 0b03 	add.w	fp, r0, r3
 802305e:	5ac3      	ldrh	r3, [r0, r3]
 8023060:	930a      	str	r3, [sp, #40]	; 0x28
 8023062:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023066:	930b      	str	r3, [sp, #44]	; 0x2c
 8023068:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802306c:	fb12 f30e 	smulbb	r3, r2, lr
 8023070:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023074:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023078:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802307c:	10db      	asrs	r3, r3, #3
 802307e:	ea40 000c 	orr.w	r0, r0, ip
 8023082:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023086:	f1ce 0c10 	rsb	ip, lr, #16
 802308a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802308e:	ebac 0c02 	sub.w	ip, ip, r2
 8023092:	ea4b 0101 	orr.w	r1, fp, r1
 8023096:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802309a:	4351      	muls	r1, r2
 802309c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802309e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80230a2:	fb0c 1c00 	mla	ip, ip, r0, r1
 80230a6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80230aa:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80230ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80230b0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80230b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80230b6:	0412      	lsls	r2, r2, #16
 80230b8:	ea4b 0000 	orr.w	r0, fp, r0
 80230bc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80230c0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80230c4:	fb03 c000 	mla	r0, r3, r0, ip
 80230c8:	ea42 0b0b 	orr.w	fp, r2, fp
 80230cc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80230d0:	fb03 000b 	mla	r0, r3, fp, r0
 80230d4:	0d43      	lsrs	r3, r0, #21
 80230d6:	0940      	lsrs	r0, r0, #5
 80230d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80230e0:	4318      	orrs	r0, r3
 80230e2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80230e4:	f82a 0b02 	strh.w	r0, [sl], #2
 80230e8:	441c      	add	r4, r3
 80230ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80230ec:	f109 39ff 	add.w	r9, r9, #4294967295
 80230f0:	441e      	add	r6, r3
 80230f2:	e73c      	b.n	8022f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80230f4:	b00f      	add	sp, #60	; 0x3c
 80230f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080230fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80230fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230fe:	b085      	sub	sp, #20
 8023100:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023104:	9102      	str	r1, [sp, #8]
 8023106:	2c00      	cmp	r4, #0
 8023108:	fb04 7103 	mla	r1, r4, r3, r7
 802310c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023110:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023114:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023118:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802311c:	f2c0 811b 	blt.w	8023356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023120:	45a6      	cmp	lr, r4
 8023122:	f340 8118 	ble.w	8023356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023126:	2f00      	cmp	r7, #0
 8023128:	f2c0 8113 	blt.w	8023352 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802312c:	42bb      	cmp	r3, r7
 802312e:	f340 8110 	ble.w	8023352 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023132:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023136:	1c7a      	adds	r2, r7, #1
 8023138:	f100 8110 	bmi.w	802335c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802313c:	4293      	cmp	r3, r2
 802313e:	f340 810d 	ble.w	802335c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023142:	2e00      	cmp	r6, #0
 8023144:	f000 810c 	beq.w	8023360 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023148:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802314c:	3401      	adds	r4, #1
 802314e:	f100 810b 	bmi.w	8023368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023152:	45a6      	cmp	lr, r4
 8023154:	f340 8108 	ble.w	8023368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023158:	2800      	cmp	r0, #0
 802315a:	f000 8108 	beq.w	802336e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802315e:	2f00      	cmp	r7, #0
 8023160:	f2c0 8100 	blt.w	8023364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023164:	42bb      	cmp	r3, r7
 8023166:	f340 80fd 	ble.w	8023364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802316a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802316e:	3701      	adds	r7, #1
 8023170:	f100 8100 	bmi.w	8023374 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023174:	42bb      	cmp	r3, r7
 8023176:	f340 80fd 	ble.w	8023374 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802317a:	2e00      	cmp	r6, #0
 802317c:	f000 80fc 	beq.w	8023378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023180:	3301      	adds	r3, #1
 8023182:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023186:	b2b6      	uxth	r6, r6
 8023188:	b280      	uxth	r0, r0
 802318a:	fb00 fe06 	mul.w	lr, r0, r6
 802318e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023192:	0136      	lsls	r6, r6, #4
 8023194:	eba6 070e 	sub.w	r7, r6, lr
 8023198:	b280      	uxth	r0, r0
 802319a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802319e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80231a2:	b2bf      	uxth	r7, r7
 80231a4:	1a1b      	subs	r3, r3, r0
 80231a6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80231aa:	b29b      	uxth	r3, r3
 80231ac:	fb0a f607 	mul.w	r6, sl, r7
 80231b0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80231b4:	fb0b 6603 	mla	r6, fp, r3, r6
 80231b8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80231bc:	fb00 6609 	mla	r6, r0, r9, r6
 80231c0:	fb0e 6608 	mla	r6, lr, r8, r6
 80231c4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80231c8:	9600      	str	r6, [sp, #0]
 80231ca:	2e00      	cmp	r6, #0
 80231cc:	f000 80be 	beq.w	802334c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80231d0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80231d4:	fb0b fc0c 	mul.w	ip, fp, ip
 80231d8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80231dc:	fb0b f505 	mul.w	r5, fp, r5
 80231e0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80231e4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80231e8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80231ec:	44dc      	add	ip, fp
 80231ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231f2:	9501      	str	r5, [sp, #4]
 80231f4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80231f8:	9503      	str	r5, [sp, #12]
 80231fa:	9d01      	ldr	r5, [sp, #4]
 80231fc:	9e02      	ldr	r6, [sp, #8]
 80231fe:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023202:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023206:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802320a:	fb0a fc0c 	mul.w	ip, sl, ip
 802320e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023212:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023216:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802321a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802321e:	4465      	add	r5, ip
 8023220:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023224:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023228:	fb09 fc0c 	mul.w	ip, r9, ip
 802322c:	fb09 f904 	mul.w	r9, r9, r4
 8023230:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023234:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023238:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802323c:	fb08 f404 	mul.w	r4, r8, r4
 8023240:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023244:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023248:	fb08 f802 	mul.w	r8, r8, r2
 802324c:	fb0a fa01 	mul.w	sl, sl, r1
 8023250:	0a22      	lsrs	r2, r4, #8
 8023252:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023256:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802325a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802325e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023262:	4414      	add	r4, r2
 8023264:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023268:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802326c:	0a2d      	lsrs	r5, r5, #8
 802326e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023272:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023276:	9a03      	ldr	r2, [sp, #12]
 8023278:	8836      	ldrh	r6, [r6, #0]
 802327a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802327e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023282:	437d      	muls	r5, r7
 8023284:	4461      	add	r1, ip
 8023286:	0a24      	lsrs	r4, r4, #8
 8023288:	fb02 5503 	mla	r5, r2, r3, r5
 802328c:	0a09      	lsrs	r1, r1, #8
 802328e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023292:	fb04 540e 	mla	r4, r4, lr, r5
 8023296:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802329a:	fb01 4100 	mla	r1, r1, r0, r4
 802329e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80232a2:	0a09      	lsrs	r1, r1, #8
 80232a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80232a8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80232ac:	fb07 f70a 	mul.w	r7, r7, sl
 80232b0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80232b4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80232b8:	fb03 7101 	mla	r1, r3, r1, r7
 80232bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80232c0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80232c4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80232c8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80232cc:	fb00 e101 	mla	r1, r0, r1, lr
 80232d0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80232d4:	9a00      	ldr	r2, [sp, #0]
 80232d6:	b287      	uxth	r7, r0
 80232d8:	437a      	muls	r2, r7
 80232da:	0a09      	lsrs	r1, r1, #8
 80232dc:	1c53      	adds	r3, r2, #1
 80232de:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80232e2:	4321      	orrs	r1, r4
 80232e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80232e8:	1235      	asrs	r5, r6, #8
 80232ea:	0c0a      	lsrs	r2, r1, #16
 80232ec:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80232f0:	b2db      	uxtb	r3, r3
 80232f2:	fb12 f207 	smulbb	r2, r2, r7
 80232f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80232fa:	fb05 2503 	mla	r5, r5, r3, r2
 80232fe:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023302:	10f2      	asrs	r2, r6, #3
 8023304:	b2c8      	uxtb	r0, r1
 8023306:	00f6      	lsls	r6, r6, #3
 8023308:	fb14 f407 	smulbb	r4, r4, r7
 802330c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023310:	b2f6      	uxtb	r6, r6
 8023312:	fb10 f007 	smulbb	r0, r0, r7
 8023316:	fb02 4203 	mla	r2, r2, r3, r4
 802331a:	b2ad      	uxth	r5, r5
 802331c:	fb06 0303 	mla	r3, r6, r3, r0
 8023320:	b299      	uxth	r1, r3
 8023322:	b294      	uxth	r4, r2
 8023324:	1c6b      	adds	r3, r5, #1
 8023326:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802332a:	1c62      	adds	r2, r4, #1
 802332c:	1c4b      	adds	r3, r1, #1
 802332e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023332:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023336:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802333a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802333e:	0952      	lsrs	r2, r2, #5
 8023340:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023344:	432b      	orrs	r3, r5
 8023346:	4313      	orrs	r3, r2
 8023348:	9a02      	ldr	r2, [sp, #8]
 802334a:	8013      	strh	r3, [r2, #0]
 802334c:	b005      	add	sp, #20
 802334e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023352:	2500      	movs	r5, #0
 8023354:	e6ef      	b.n	8023136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023356:	2100      	movs	r1, #0
 8023358:	460d      	mov	r5, r1
 802335a:	e6f7      	b.n	802314c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802335c:	2100      	movs	r1, #0
 802335e:	e6f5      	b.n	802314c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023360:	4631      	mov	r1, r6
 8023362:	e6f3      	b.n	802314c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023364:	2400      	movs	r4, #0
 8023366:	e702      	b.n	802316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023368:	2200      	movs	r2, #0
 802336a:	4614      	mov	r4, r2
 802336c:	e70b      	b.n	8023186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802336e:	4602      	mov	r2, r0
 8023370:	4604      	mov	r4, r0
 8023372:	e708      	b.n	8023186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023374:	2200      	movs	r2, #0
 8023376:	e706      	b.n	8023186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023378:	4632      	mov	r2, r6
 802337a:	e704      	b.n	8023186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802337c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023380:	b09d      	sub	sp, #116	; 0x74
 8023382:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023386:	9219      	str	r2, [sp, #100]	; 0x64
 8023388:	9307      	str	r3, [sp, #28]
 802338a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802338c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023390:	931a      	str	r3, [sp, #104]	; 0x68
 8023392:	9117      	str	r1, [sp, #92]	; 0x5c
 8023394:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023398:	901b      	str	r0, [sp, #108]	; 0x6c
 802339a:	6850      	ldr	r0, [r2, #4]
 802339c:	6812      	ldr	r2, [r2, #0]
 802339e:	fb00 1303 	mla	r3, r0, r3, r1
 80233a2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80233a6:	930a      	str	r3, [sp, #40]	; 0x28
 80233a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80233aa:	681b      	ldr	r3, [r3, #0]
 80233ac:	9310      	str	r3, [sp, #64]	; 0x40
 80233ae:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80233b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80233b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80233b6:	2b00      	cmp	r3, #0
 80233b8:	dc03      	bgt.n	80233c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80233ba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80233bc:	2b00      	cmp	r3, #0
 80233be:	f340 8375 	ble.w	8023aac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80233c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80233c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80233c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80233cc:	1e48      	subs	r0, r1, #1
 80233ce:	1e57      	subs	r7, r2, #1
 80233d0:	9b07      	ldr	r3, [sp, #28]
 80233d2:	2b00      	cmp	r3, #0
 80233d4:	f340 818e 	ble.w	80236f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80233d8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80233dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80233e0:	d406      	bmi.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80233e2:	4584      	cmp	ip, r0
 80233e4:	da04      	bge.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80233e6:	2b00      	cmp	r3, #0
 80233e8:	db02      	blt.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80233ea:	42bb      	cmp	r3, r7
 80233ec:	f2c0 8183 	blt.w	80236f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80233f0:	f11c 0c01 	adds.w	ip, ip, #1
 80233f4:	f100 8173 	bmi.w	80236de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80233f8:	4561      	cmp	r1, ip
 80233fa:	f2c0 8170 	blt.w	80236de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80233fe:	3301      	adds	r3, #1
 8023400:	f100 816d 	bmi.w	80236de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023404:	429a      	cmp	r2, r3
 8023406:	f2c0 816a 	blt.w	80236de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802340a:	9b07      	ldr	r3, [sp, #28]
 802340c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802340e:	9318      	str	r3, [sp, #96]	; 0x60
 8023410:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023412:	2b00      	cmp	r3, #0
 8023414:	f340 818c 	ble.w	8023730 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023418:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802341a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802341c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023420:	689b      	ldr	r3, [r3, #8]
 8023422:	1422      	asrs	r2, r4, #16
 8023424:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023428:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802342c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023430:	f100 81cd 	bmi.w	80237ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023434:	f103 38ff 	add.w	r8, r3, #4294967295
 8023438:	4542      	cmp	r2, r8
 802343a:	f280 81c8 	bge.w	80237ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802343e:	f1bc 0f00 	cmp.w	ip, #0
 8023442:	f2c0 81c4 	blt.w	80237ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023446:	f10e 38ff 	add.w	r8, lr, #4294967295
 802344a:	45c4      	cmp	ip, r8
 802344c:	f280 81bf 	bge.w	80237ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023450:	b21b      	sxth	r3, r3
 8023452:	fb0c 2203 	mla	r2, ip, r3, r2
 8023456:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023458:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802345c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023460:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023464:	2800      	cmp	r0, #0
 8023466:	f000 81a9 	beq.w	80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802346a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802346e:	950c      	str	r5, [sp, #48]	; 0x30
 8023470:	0e2d      	lsrs	r5, r5, #24
 8023472:	9513      	str	r5, [sp, #76]	; 0x4c
 8023474:	b181      	cbz	r1, 8023498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023476:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802347a:	3b01      	subs	r3, #1
 802347c:	009b      	lsls	r3, r3, #2
 802347e:	3304      	adds	r3, #4
 8023480:	eb08 0c03 	add.w	ip, r8, r3
 8023484:	f858 3003 	ldr.w	r3, [r8, r3]
 8023488:	9308      	str	r3, [sp, #32]
 802348a:	0e1b      	lsrs	r3, r3, #24
 802348c:	9311      	str	r3, [sp, #68]	; 0x44
 802348e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023492:	930d      	str	r3, [sp, #52]	; 0x34
 8023494:	0e1b      	lsrs	r3, r3, #24
 8023496:	9314      	str	r3, [sp, #80]	; 0x50
 8023498:	b280      	uxth	r0, r0
 802349a:	b289      	uxth	r1, r1
 802349c:	fb00 f901 	mul.w	r9, r0, r1
 80234a0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80234a4:	0100      	lsls	r0, r0, #4
 80234a6:	eba0 0809 	sub.w	r8, r0, r9
 80234aa:	b289      	uxth	r1, r1
 80234ac:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80234b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80234b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80234b4:	fa1f f888 	uxth.w	r8, r8
 80234b8:	1a5b      	subs	r3, r3, r1
 80234ba:	b29b      	uxth	r3, r3
 80234bc:	fb08 f000 	mul.w	r0, r8, r0
 80234c0:	fb03 000e 	mla	r0, r3, lr, r0
 80234c4:	fb01 0005 	mla	r0, r1, r5, r0
 80234c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80234ca:	fb09 0005 	mla	r0, r9, r5, r0
 80234ce:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80234d2:	2800      	cmp	r0, #0
 80234d4:	f000 80fa 	beq.w	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80234d8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80234dc:	d01b      	beq.n	8023516 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80234de:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80234e2:	fb0e fa0a 	mul.w	sl, lr, sl
 80234e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80234ea:	fb0e fe02 	mul.w	lr, lr, r2
 80234ee:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80234f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80234f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80234fa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80234fe:	4452      	add	r2, sl
 8023500:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023504:	0a12      	lsrs	r2, r2, #8
 8023506:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802350a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802350e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023512:	ea42 020c 	orr.w	r2, r2, ip
 8023516:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023518:	2dff      	cmp	r5, #255	; 0xff
 802351a:	d021      	beq.n	8023560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802351c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802351e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023522:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023524:	fb05 fb0b 	mul.w	fp, r5, fp
 8023528:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802352a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802352e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023530:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023534:	fb05 fa0a 	mul.w	sl, r5, sl
 8023538:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802353c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023540:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023544:	44de      	add	lr, fp
 8023546:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802354a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802354e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023552:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023556:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802355a:	ea4e 050a 	orr.w	r5, lr, sl
 802355e:	950c      	str	r5, [sp, #48]	; 0x30
 8023560:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023562:	2dff      	cmp	r5, #255	; 0xff
 8023564:	d021      	beq.n	80235aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023566:	9d08      	ldr	r5, [sp, #32]
 8023568:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802356c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802356e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023572:	9d08      	ldr	r5, [sp, #32]
 8023574:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023578:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802357a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802357e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023582:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023586:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802358a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802358e:	44de      	add	lr, fp
 8023590:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023594:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023598:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802359c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235a4:	ea4e 050a 	orr.w	r5, lr, sl
 80235a8:	9508      	str	r5, [sp, #32]
 80235aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80235ac:	2dff      	cmp	r5, #255	; 0xff
 80235ae:	d021      	beq.n	80235f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80235b0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80235b2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80235b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80235b8:	fb05 fb0b 	mul.w	fp, r5, fp
 80235bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80235be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80235c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80235c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80235c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80235cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80235d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80235d8:	44de      	add	lr, fp
 80235da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80235de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80235e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235ee:	ea4e 050a 	orr.w	r5, lr, sl
 80235f2:	950d      	str	r5, [sp, #52]	; 0x34
 80235f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80235f6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80235fa:	9d08      	ldr	r5, [sp, #32]
 80235fc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023600:	fb08 fc0c 	mul.w	ip, r8, ip
 8023604:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023608:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802360c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802360e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023612:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023616:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023618:	fb09 cc0e 	mla	ip, r9, lr, ip
 802361c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023620:	fb08 f80e 	mul.w	r8, r8, lr
 8023624:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023628:	fb03 8202 	mla	r2, r3, r2, r8
 802362c:	9b08      	ldr	r3, [sp, #32]
 802362e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023630:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023634:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023636:	fb01 220a 	mla	r2, r1, sl, r2
 802363a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802363e:	fb09 2901 	mla	r9, r9, r1, r2
 8023642:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023644:	883b      	ldrh	r3, [r7, #0]
 8023646:	4342      	muls	r2, r0
 8023648:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802364c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023650:	1c50      	adds	r0, r2, #1
 8023652:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023656:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802365a:	ea4c 0c09 	orr.w	ip, ip, r9
 802365e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023662:	1219      	asrs	r1, r3, #8
 8023664:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023668:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802366c:	b2c0      	uxtb	r0, r0
 802366e:	fb12 f205 	smulbb	r2, r2, r5
 8023672:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023676:	fb01 2100 	mla	r1, r1, r0, r2
 802367a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802367e:	10da      	asrs	r2, r3, #3
 8023680:	fa5f fc8c 	uxtb.w	ip, ip
 8023684:	00db      	lsls	r3, r3, #3
 8023686:	fb1c fc05 	smulbb	ip, ip, r5
 802368a:	b2db      	uxtb	r3, r3
 802368c:	b289      	uxth	r1, r1
 802368e:	fb03 c300 	mla	r3, r3, r0, ip
 8023692:	fa1f fc83 	uxth.w	ip, r3
 8023696:	1c4b      	adds	r3, r1, #1
 8023698:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802369c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80236a0:	fb1e fe05 	smulbb	lr, lr, r5
 80236a4:	f10c 0301 	add.w	r3, ip, #1
 80236a8:	fb02 e200 	mla	r2, r2, r0, lr
 80236ac:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80236b0:	b292      	uxth	r2, r2
 80236b2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80236b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80236ba:	430b      	orrs	r3, r1
 80236bc:	1c51      	adds	r1, r2, #1
 80236be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80236c2:	0952      	lsrs	r2, r2, #5
 80236c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80236c8:	4313      	orrs	r3, r2
 80236ca:	803b      	strh	r3, [r7, #0]
 80236cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80236ce:	441c      	add	r4, r3
 80236d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80236d2:	441e      	add	r6, r3
 80236d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80236d6:	3b01      	subs	r3, #1
 80236d8:	3702      	adds	r7, #2
 80236da:	9318      	str	r3, [sp, #96]	; 0x60
 80236dc:	e698      	b.n	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80236de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80236e0:	441c      	add	r4, r3
 80236e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80236e4:	441e      	add	r6, r3
 80236e6:	9b07      	ldr	r3, [sp, #28]
 80236e8:	3b01      	subs	r3, #1
 80236ea:	9307      	str	r3, [sp, #28]
 80236ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80236ee:	3302      	adds	r3, #2
 80236f0:	930a      	str	r3, [sp, #40]	; 0x28
 80236f2:	e66d      	b.n	80233d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80236f4:	d023      	beq.n	802373e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80236f6:	9b07      	ldr	r3, [sp, #28]
 80236f8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80236fa:	3b01      	subs	r3, #1
 80236fc:	fb00 4003 	mla	r0, r0, r3, r4
 8023700:	1400      	asrs	r0, r0, #16
 8023702:	f53f ae82 	bmi.w	802340a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023706:	3901      	subs	r1, #1
 8023708:	4288      	cmp	r0, r1
 802370a:	f6bf ae7e 	bge.w	802340a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802370e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023710:	fb01 6303 	mla	r3, r1, r3, r6
 8023714:	141b      	asrs	r3, r3, #16
 8023716:	f53f ae78 	bmi.w	802340a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802371a:	3a01      	subs	r2, #1
 802371c:	4293      	cmp	r3, r2
 802371e:	f6bf ae74 	bge.w	802340a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023722:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023726:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802372a:	f1bb 0f00 	cmp.w	fp, #0
 802372e:	dc6c      	bgt.n	802380a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023730:	9b07      	ldr	r3, [sp, #28]
 8023732:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023736:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023738:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802373c:	930a      	str	r3, [sp, #40]	; 0x28
 802373e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023740:	2b00      	cmp	r3, #0
 8023742:	f340 81b3 	ble.w	8023aac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023746:	ee30 0a04 	vadd.f32	s0, s0, s8
 802374a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802374e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023752:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023754:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023758:	ee31 1a05 	vadd.f32	s2, s2, s10
 802375c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023760:	eef0 6a62 	vmov.f32	s13, s5
 8023764:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023768:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802376c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023770:	ee16 4a90 	vmov	r4, s13
 8023774:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023778:	eef0 6a43 	vmov.f32	s13, s6
 802377c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023780:	ee12 2a90 	vmov	r2, s5
 8023784:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023788:	fb92 f3f3 	sdiv	r3, r2, r3
 802378c:	ee13 2a10 	vmov	r2, s6
 8023790:	9329      	str	r3, [sp, #164]	; 0xa4
 8023792:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023794:	fb92 f3f3 	sdiv	r3, r2, r3
 8023798:	932a      	str	r3, [sp, #168]	; 0xa8
 802379a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802379c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802379e:	3b01      	subs	r3, #1
 80237a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237a4:	9317      	str	r3, [sp, #92]	; 0x5c
 80237a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80237a8:	bf08      	it	eq
 80237aa:	4613      	moveq	r3, r2
 80237ac:	ee16 6a90 	vmov	r6, s13
 80237b0:	9307      	str	r3, [sp, #28]
 80237b2:	eeb0 3a67 	vmov.f32	s6, s15
 80237b6:	eef0 2a47 	vmov.f32	s5, s14
 80237ba:	e5fb      	b.n	80233b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80237bc:	2900      	cmp	r1, #0
 80237be:	f43f ae6b 	beq.w	8023498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80237c2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80237c6:	9308      	str	r3, [sp, #32]
 80237c8:	0e1b      	lsrs	r3, r3, #24
 80237ca:	9311      	str	r3, [sp, #68]	; 0x44
 80237cc:	e664      	b.n	8023498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80237ce:	f112 0801 	adds.w	r8, r2, #1
 80237d2:	f53f af7b 	bmi.w	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237d6:	4543      	cmp	r3, r8
 80237d8:	f6ff af78 	blt.w	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237dc:	f11c 0801 	adds.w	r8, ip, #1
 80237e0:	f53f af74 	bmi.w	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237e4:	45c6      	cmp	lr, r8
 80237e6:	f6ff af71 	blt.w	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237ea:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80237ec:	9201      	str	r2, [sp, #4]
 80237ee:	fa0f f28e 	sxth.w	r2, lr
 80237f2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80237f6:	e9cd c002 	strd	ip, r0, [sp, #8]
 80237fa:	9200      	str	r2, [sp, #0]
 80237fc:	b21b      	sxth	r3, r3
 80237fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023800:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023802:	4639      	mov	r1, r7
 8023804:	f7ff fc79 	bl	80230fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023808:	e760      	b.n	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802380a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802380c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802380e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023812:	1427      	asrs	r7, r4, #16
 8023814:	1433      	asrs	r3, r6, #16
 8023816:	fb01 7303 	mla	r3, r1, r3, r7
 802381a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802381e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023822:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023826:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802382a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802382e:	2a00      	cmp	r2, #0
 8023830:	f000 8133 	beq.w	8023a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023834:	687d      	ldr	r5, [r7, #4]
 8023836:	950e      	str	r5, [sp, #56]	; 0x38
 8023838:	0e2d      	lsrs	r5, r5, #24
 802383a:	9515      	str	r5, [sp, #84]	; 0x54
 802383c:	b178      	cbz	r0, 802385e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802383e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023842:	3901      	subs	r1, #1
 8023844:	0089      	lsls	r1, r1, #2
 8023846:	3104      	adds	r1, #4
 8023848:	eb07 0e01 	add.w	lr, r7, r1
 802384c:	5879      	ldr	r1, [r7, r1]
 802384e:	9109      	str	r1, [sp, #36]	; 0x24
 8023850:	0e09      	lsrs	r1, r1, #24
 8023852:	9112      	str	r1, [sp, #72]	; 0x48
 8023854:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023858:	910f      	str	r1, [sp, #60]	; 0x3c
 802385a:	0e09      	lsrs	r1, r1, #24
 802385c:	9116      	str	r1, [sp, #88]	; 0x58
 802385e:	b292      	uxth	r2, r2
 8023860:	b280      	uxth	r0, r0
 8023862:	fb02 f800 	mul.w	r8, r2, r0
 8023866:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802386a:	0112      	lsls	r2, r2, #4
 802386c:	eba2 0e08 	sub.w	lr, r2, r8
 8023870:	b280      	uxth	r0, r0
 8023872:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023876:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023878:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802387a:	fa1f fe8e 	uxth.w	lr, lr
 802387e:	1a12      	subs	r2, r2, r0
 8023880:	b292      	uxth	r2, r2
 8023882:	fb0e f101 	mul.w	r1, lr, r1
 8023886:	fb02 110c 	mla	r1, r2, ip, r1
 802388a:	fb00 1105 	mla	r1, r0, r5, r1
 802388e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023890:	fb08 1105 	mla	r1, r8, r5, r1
 8023894:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023898:	2900      	cmp	r1, #0
 802389a:	f000 80f5 	beq.w	8023a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802389e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80238a2:	d019      	beq.n	80238d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80238a4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80238a8:	fb0c fa0a 	mul.w	sl, ip, sl
 80238ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80238b0:	fb0c fc03 	mul.w	ip, ip, r3
 80238b4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80238b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80238bc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80238c0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80238c4:	4453      	add	r3, sl
 80238c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80238ca:	0a1b      	lsrs	r3, r3, #8
 80238cc:	0a3f      	lsrs	r7, r7, #8
 80238ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80238d2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80238d6:	433b      	orrs	r3, r7
 80238d8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80238da:	2dff      	cmp	r5, #255	; 0xff
 80238dc:	d020      	beq.n	8023920 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80238de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238e0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80238e4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80238e6:	436f      	muls	r7, r5
 80238e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238ea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80238f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80238f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80238f8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80238fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023900:	44bc      	add	ip, r7
 8023902:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023906:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802390a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802390e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023912:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023916:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802391a:	ea4c 050a 	orr.w	r5, ip, sl
 802391e:	950e      	str	r5, [sp, #56]	; 0x38
 8023920:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023922:	2dff      	cmp	r5, #255	; 0xff
 8023924:	d020      	beq.n	8023968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023926:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023928:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802392c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802392e:	436f      	muls	r7, r5
 8023930:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023932:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023936:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023938:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802393c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023940:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023944:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023948:	44bc      	add	ip, r7
 802394a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802394e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023952:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023956:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802395a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802395e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023962:	ea4c 050a 	orr.w	r5, ip, sl
 8023966:	9509      	str	r5, [sp, #36]	; 0x24
 8023968:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802396a:	2dff      	cmp	r5, #255	; 0xff
 802396c:	d020      	beq.n	80239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802396e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023970:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023974:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023976:	436f      	muls	r7, r5
 8023978:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802397a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802397e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023980:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023984:	fb05 fa0a 	mul.w	sl, r5, sl
 8023988:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802398c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023990:	44bc      	add	ip, r7
 8023992:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023996:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802399a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802399e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80239aa:	ea4c 050a 	orr.w	r5, ip, sl
 80239ae:	950f      	str	r5, [sp, #60]	; 0x3c
 80239b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80239b2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80239b6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80239b8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80239bc:	fb0e f707 	mul.w	r7, lr, r7
 80239c0:	fb02 770c 	mla	r7, r2, ip, r7
 80239c4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80239c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80239ca:	fb00 770c 	mla	r7, r0, ip, r7
 80239ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80239d2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80239d4:	fb08 770c 	mla	r7, r8, ip, r7
 80239d8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80239dc:	fb0e fe0c 	mul.w	lr, lr, ip
 80239e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80239e4:	fb02 e303 	mla	r3, r2, r3, lr
 80239e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80239ea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80239ec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80239f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80239f2:	fb00 330a 	mla	r3, r0, sl, r3
 80239f6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80239fa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80239fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a00:	f8b9 0000 	ldrh.w	r0, [r9]
 8023a04:	4359      	muls	r1, r3
 8023a06:	0a3f      	lsrs	r7, r7, #8
 8023a08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023a10:	1c4b      	adds	r3, r1, #1
 8023a12:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023a16:	ea47 070c 	orr.w	r7, r7, ip
 8023a1a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023a1e:	1202      	asrs	r2, r0, #8
 8023a20:	0c3b      	lsrs	r3, r7, #16
 8023a22:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023a26:	b2c9      	uxtb	r1, r1
 8023a28:	fb13 f305 	smulbb	r3, r3, r5
 8023a2c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023a30:	fb02 3201 	mla	r2, r2, r1, r3
 8023a34:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023a38:	10c3      	asrs	r3, r0, #3
 8023a3a:	b2ff      	uxtb	r7, r7
 8023a3c:	00c0      	lsls	r0, r0, #3
 8023a3e:	b2c0      	uxtb	r0, r0
 8023a40:	fb17 f705 	smulbb	r7, r7, r5
 8023a44:	fb00 7001 	mla	r0, r0, r1, r7
 8023a48:	b292      	uxth	r2, r2
 8023a4a:	fb1c fc05 	smulbb	ip, ip, r5
 8023a4e:	b280      	uxth	r0, r0
 8023a50:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023a54:	fb03 c301 	mla	r3, r3, r1, ip
 8023a58:	1c51      	adds	r1, r2, #1
 8023a5a:	f100 0c01 	add.w	ip, r0, #1
 8023a5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023a62:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023a66:	b29b      	uxth	r3, r3
 8023a68:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023a6c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023a70:	ea4c 0202 	orr.w	r2, ip, r2
 8023a74:	f103 0c01 	add.w	ip, r3, #1
 8023a78:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023a7c:	095b      	lsrs	r3, r3, #5
 8023a7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023a82:	431a      	orrs	r2, r3
 8023a84:	f8a9 2000 	strh.w	r2, [r9]
 8023a88:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023a8a:	441c      	add	r4, r3
 8023a8c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023a8e:	f109 0902 	add.w	r9, r9, #2
 8023a92:	441e      	add	r6, r3
 8023a94:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023a98:	e647      	b.n	802372a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023a9a:	2800      	cmp	r0, #0
 8023a9c:	f43f aedf 	beq.w	802385e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023aa0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023aa4:	9109      	str	r1, [sp, #36]	; 0x24
 8023aa6:	0e09      	lsrs	r1, r1, #24
 8023aa8:	9112      	str	r1, [sp, #72]	; 0x48
 8023aaa:	e6d8      	b.n	802385e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023aac:	b01d      	add	sp, #116	; 0x74
 8023aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023ab2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023ab2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ab6:	b085      	sub	sp, #20
 8023ab8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023abc:	9102      	str	r1, [sp, #8]
 8023abe:	2c00      	cmp	r4, #0
 8023ac0:	fb04 7103 	mla	r1, r4, r3, r7
 8023ac4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023ac8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023acc:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023ad0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023ad4:	f2c0 810c 	blt.w	8023cf0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023ad8:	45a6      	cmp	lr, r4
 8023ada:	f340 8109 	ble.w	8023cf0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023ade:	2f00      	cmp	r7, #0
 8023ae0:	f2c0 8104 	blt.w	8023cec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023ae4:	42bb      	cmp	r3, r7
 8023ae6:	f340 8101 	ble.w	8023cec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023aea:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023aee:	1c7a      	adds	r2, r7, #1
 8023af0:	f100 8101 	bmi.w	8023cf6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023af4:	4293      	cmp	r3, r2
 8023af6:	f340 80fe 	ble.w	8023cf6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023afa:	2e00      	cmp	r6, #0
 8023afc:	f000 80fd 	beq.w	8023cfa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023b00:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023b04:	3401      	adds	r4, #1
 8023b06:	f100 80fc 	bmi.w	8023d02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023b0a:	45a6      	cmp	lr, r4
 8023b0c:	f340 80f9 	ble.w	8023d02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023b10:	2800      	cmp	r0, #0
 8023b12:	f000 80f9 	beq.w	8023d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023b16:	2f00      	cmp	r7, #0
 8023b18:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023b1c:	f2c0 80ef 	blt.w	8023cfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023b20:	42bb      	cmp	r3, r7
 8023b22:	f340 80ec 	ble.w	8023cfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023b26:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023b2a:	3701      	adds	r7, #1
 8023b2c:	f100 80ef 	bmi.w	8023d0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023b30:	42bb      	cmp	r3, r7
 8023b32:	f340 80ec 	ble.w	8023d0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023b36:	2e00      	cmp	r6, #0
 8023b38:	f000 80eb 	beq.w	8023d12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023b3c:	6852      	ldr	r2, [r2, #4]
 8023b3e:	b2b6      	uxth	r6, r6
 8023b40:	b280      	uxth	r0, r0
 8023b42:	fb00 fe06 	mul.w	lr, r0, r6
 8023b46:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023b4a:	0136      	lsls	r6, r6, #4
 8023b4c:	eba6 070e 	sub.w	r7, r6, lr
 8023b50:	b280      	uxth	r0, r0
 8023b52:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023b56:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023b5a:	b2bf      	uxth	r7, r7
 8023b5c:	1a1b      	subs	r3, r3, r0
 8023b5e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023b62:	b29b      	uxth	r3, r3
 8023b64:	fb07 f60a 	mul.w	r6, r7, sl
 8023b68:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023b6c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023b70:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023b74:	fb00 6609 	mla	r6, r0, r9, r6
 8023b78:	fb0e 6608 	mla	r6, lr, r8, r6
 8023b7c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023b80:	9600      	str	r6, [sp, #0]
 8023b82:	2e00      	cmp	r6, #0
 8023b84:	f000 80af 	beq.w	8023ce6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023b88:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023b8c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023b90:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023b94:	fb0b f505 	mul.w	r5, fp, r5
 8023b98:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023b9c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023ba0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ba4:	44dc      	add	ip, fp
 8023ba6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023baa:	9501      	str	r5, [sp, #4]
 8023bac:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023bb0:	9503      	str	r5, [sp, #12]
 8023bb2:	9d01      	ldr	r5, [sp, #4]
 8023bb4:	9e02      	ldr	r6, [sp, #8]
 8023bb6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023bba:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023bbe:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023bc2:	fb0a fc0c 	mul.w	ip, sl, ip
 8023bc6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023bca:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023bce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023bd2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023bd6:	4465      	add	r5, ip
 8023bd8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023bdc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023be0:	fb09 fc0c 	mul.w	ip, r9, ip
 8023be4:	fb09 f904 	mul.w	r9, r9, r4
 8023be8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023bec:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023bf0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023bf4:	fb08 f404 	mul.w	r4, r8, r4
 8023bf8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023bfc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023c00:	fb08 f802 	mul.w	r8, r8, r2
 8023c04:	fb0a fa01 	mul.w	sl, sl, r1
 8023c08:	0a22      	lsrs	r2, r4, #8
 8023c0a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023c0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023c12:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023c16:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023c1a:	4414      	add	r4, r2
 8023c1c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023c20:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023c24:	0a2d      	lsrs	r5, r5, #8
 8023c26:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023c2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023c2e:	9a03      	ldr	r2, [sp, #12]
 8023c30:	8836      	ldrh	r6, [r6, #0]
 8023c32:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023c36:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023c3a:	437d      	muls	r5, r7
 8023c3c:	4461      	add	r1, ip
 8023c3e:	0a24      	lsrs	r4, r4, #8
 8023c40:	fb02 5503 	mla	r5, r2, r3, r5
 8023c44:	0a09      	lsrs	r1, r1, #8
 8023c46:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023c4a:	fb04 540e 	mla	r4, r4, lr, r5
 8023c4e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023c52:	fb01 4100 	mla	r1, r1, r0, r4
 8023c56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c5a:	0a09      	lsrs	r1, r1, #8
 8023c5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c60:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023c64:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023c68:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023c6c:	fb07 f70a 	mul.w	r7, r7, sl
 8023c70:	fb03 7101 	mla	r1, r3, r1, r7
 8023c74:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c78:	9b00      	ldr	r3, [sp, #0]
 8023c7a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023c7e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023c82:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023c86:	fb00 e101 	mla	r1, r0, r1, lr
 8023c8a:	43da      	mvns	r2, r3
 8023c8c:	1233      	asrs	r3, r6, #8
 8023c8e:	b2d2      	uxtb	r2, r2
 8023c90:	10f0      	asrs	r0, r6, #3
 8023c92:	0a09      	lsrs	r1, r1, #8
 8023c94:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023c98:	00f6      	lsls	r6, r6, #3
 8023c9a:	4353      	muls	r3, r2
 8023c9c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ca0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023ca4:	b2f6      	uxtb	r6, r6
 8023ca6:	4321      	orrs	r1, r4
 8023ca8:	4350      	muls	r0, r2
 8023caa:	4356      	muls	r6, r2
 8023cac:	1c5a      	adds	r2, r3, #1
 8023cae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023cb2:	0c0b      	lsrs	r3, r1, #16
 8023cb4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023cb8:	1c42      	adds	r2, r0, #1
 8023cba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023cbe:	0a0a      	lsrs	r2, r1, #8
 8023cc0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023cc4:	021b      	lsls	r3, r3, #8
 8023cc6:	00d2      	lsls	r2, r2, #3
 8023cc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ccc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023cd0:	4313      	orrs	r3, r2
 8023cd2:	1c72      	adds	r2, r6, #1
 8023cd4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023cd8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023cdc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023ce0:	4319      	orrs	r1, r3
 8023ce2:	9b02      	ldr	r3, [sp, #8]
 8023ce4:	8019      	strh	r1, [r3, #0]
 8023ce6:	b005      	add	sp, #20
 8023ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023cec:	2500      	movs	r5, #0
 8023cee:	e6fe      	b.n	8023aee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023cf0:	2100      	movs	r1, #0
 8023cf2:	460d      	mov	r5, r1
 8023cf4:	e706      	b.n	8023b04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023cf6:	2100      	movs	r1, #0
 8023cf8:	e704      	b.n	8023b04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023cfa:	4631      	mov	r1, r6
 8023cfc:	e702      	b.n	8023b04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023cfe:	2400      	movs	r4, #0
 8023d00:	e713      	b.n	8023b2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023d02:	2200      	movs	r2, #0
 8023d04:	4614      	mov	r4, r2
 8023d06:	e71a      	b.n	8023b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d08:	4602      	mov	r2, r0
 8023d0a:	4604      	mov	r4, r0
 8023d0c:	e717      	b.n	8023b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d0e:	2200      	movs	r2, #0
 8023d10:	e715      	b.n	8023b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d12:	4632      	mov	r2, r6
 8023d14:	e713      	b.n	8023b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023d18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d1c:	b09b      	sub	sp, #108	; 0x6c
 8023d1e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023d22:	9218      	str	r2, [sp, #96]	; 0x60
 8023d24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023d26:	9116      	str	r1, [sp, #88]	; 0x58
 8023d28:	9307      	str	r3, [sp, #28]
 8023d2a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023d2e:	9019      	str	r0, [sp, #100]	; 0x64
 8023d30:	6850      	ldr	r0, [r2, #4]
 8023d32:	6812      	ldr	r2, [r2, #0]
 8023d34:	fb00 1303 	mla	r3, r0, r3, r1
 8023d38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023d3c:	930a      	str	r3, [sp, #40]	; 0x28
 8023d3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023d40:	681b      	ldr	r3, [r3, #0]
 8023d42:	930f      	str	r3, [sp, #60]	; 0x3c
 8023d44:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023d46:	2b00      	cmp	r3, #0
 8023d48:	dc03      	bgt.n	8023d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023d4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023d4c:	2b00      	cmp	r3, #0
 8023d4e:	f340 8386 	ble.w	802445e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023d52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023d54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023d5c:	1e48      	subs	r0, r1, #1
 8023d5e:	1e57      	subs	r7, r2, #1
 8023d60:	9b07      	ldr	r3, [sp, #28]
 8023d62:	2b00      	cmp	r3, #0
 8023d64:	f340 8166 	ble.w	8024034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023d68:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023d6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023d70:	d406      	bmi.n	8023d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023d72:	4584      	cmp	ip, r0
 8023d74:	da04      	bge.n	8023d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023d76:	2b00      	cmp	r3, #0
 8023d78:	db02      	blt.n	8023d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023d7a:	42bb      	cmp	r3, r7
 8023d7c:	f2c0 815b 	blt.w	8024036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023d80:	f11c 0c01 	adds.w	ip, ip, #1
 8023d84:	f100 814b 	bmi.w	802401e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d88:	4561      	cmp	r1, ip
 8023d8a:	f2c0 8148 	blt.w	802401e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d8e:	3301      	adds	r3, #1
 8023d90:	f100 8145 	bmi.w	802401e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d94:	429a      	cmp	r2, r3
 8023d96:	f2c0 8142 	blt.w	802401e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d9a:	9b07      	ldr	r3, [sp, #28]
 8023d9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023d9e:	9317      	str	r3, [sp, #92]	; 0x5c
 8023da0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023da2:	2b00      	cmp	r3, #0
 8023da4:	f340 8165 	ble.w	8024072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023da8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023daa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023dac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023db0:	689b      	ldr	r3, [r3, #8]
 8023db2:	1422      	asrs	r2, r4, #16
 8023db4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023db8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023dbc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023dc0:	f100 81d5 	bmi.w	802416e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023dc4:	f103 38ff 	add.w	r8, r3, #4294967295
 8023dc8:	4542      	cmp	r2, r8
 8023dca:	f280 81d0 	bge.w	802416e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023dce:	f1bc 0f00 	cmp.w	ip, #0
 8023dd2:	f2c0 81cc 	blt.w	802416e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023dd6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023dda:	45c4      	cmp	ip, r8
 8023ddc:	f280 81c7 	bge.w	802416e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023de0:	b21b      	sxth	r3, r3
 8023de2:	fb0c 2203 	mla	r2, ip, r3, r2
 8023de6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023de8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023dec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023df0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023df4:	2900      	cmp	r1, #0
 8023df6:	f000 8182 	beq.w	80240fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023dfa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023dfe:	950b      	str	r5, [sp, #44]	; 0x2c
 8023e00:	0e2d      	lsrs	r5, r5, #24
 8023e02:	9512      	str	r5, [sp, #72]	; 0x48
 8023e04:	b180      	cbz	r0, 8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023e06:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023e0a:	3b01      	subs	r3, #1
 8023e0c:	009b      	lsls	r3, r3, #2
 8023e0e:	3304      	adds	r3, #4
 8023e10:	eb08 0c03 	add.w	ip, r8, r3
 8023e14:	f858 3003 	ldr.w	r3, [r8, r3]
 8023e18:	9308      	str	r3, [sp, #32]
 8023e1a:	0e1b      	lsrs	r3, r3, #24
 8023e1c:	9310      	str	r3, [sp, #64]	; 0x40
 8023e1e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023e22:	930c      	str	r3, [sp, #48]	; 0x30
 8023e24:	0e1b      	lsrs	r3, r3, #24
 8023e26:	9313      	str	r3, [sp, #76]	; 0x4c
 8023e28:	b289      	uxth	r1, r1
 8023e2a:	b280      	uxth	r0, r0
 8023e2c:	fb01 f900 	mul.w	r9, r1, r0
 8023e30:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023e34:	0109      	lsls	r1, r1, #4
 8023e36:	eba1 0809 	sub.w	r8, r1, r9
 8023e3a:	b280      	uxth	r0, r0
 8023e3c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023e40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023e42:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023e44:	fa1f f888 	uxth.w	r8, r8
 8023e48:	1a09      	subs	r1, r1, r0
 8023e4a:	b289      	uxth	r1, r1
 8023e4c:	fb08 f303 	mul.w	r3, r8, r3
 8023e50:	fb01 330e 	mla	r3, r1, lr, r3
 8023e54:	fb00 3305 	mla	r3, r0, r5, r3
 8023e58:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e5a:	fb09 3305 	mla	r3, r9, r5, r3
 8023e5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023e62:	2b00      	cmp	r3, #0
 8023e64:	f000 80d2 	beq.w	802400c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e68:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023e6c:	d01b      	beq.n	8023ea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023e6e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023e72:	fb0e fa0a 	mul.w	sl, lr, sl
 8023e76:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e7a:	fb0e fe02 	mul.w	lr, lr, r2
 8023e7e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023e82:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023e86:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023e8a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023e8e:	4452      	add	r2, sl
 8023e90:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023e94:	0a12      	lsrs	r2, r2, #8
 8023e96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023e9e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ea2:	ea42 020c 	orr.w	r2, r2, ip
 8023ea6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023ea8:	2dff      	cmp	r5, #255	; 0xff
 8023eaa:	d021      	beq.n	8023ef0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023eac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023eae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023eb2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023eb4:	fb05 fb0b 	mul.w	fp, r5, fp
 8023eb8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023eba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023ebe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023ec0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023ec4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ec8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ecc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023ed0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023ed4:	44de      	add	lr, fp
 8023ed6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023eda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023ede:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ee2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ee6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023eea:	ea4e 050a 	orr.w	r5, lr, sl
 8023eee:	950b      	str	r5, [sp, #44]	; 0x2c
 8023ef0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ef2:	2dff      	cmp	r5, #255	; 0xff
 8023ef4:	d021      	beq.n	8023f3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023ef6:	9d08      	ldr	r5, [sp, #32]
 8023ef8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023efc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023efe:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f02:	9d08      	ldr	r5, [sp, #32]
 8023f04:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023f08:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f0a:	fb05 fa0e 	mul.w	sl, r5, lr
 8023f0e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f16:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f1a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f1e:	44de      	add	lr, fp
 8023f20:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f34:	ea4e 050a 	orr.w	r5, lr, sl
 8023f38:	9508      	str	r5, [sp, #32]
 8023f3a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023f3c:	2dff      	cmp	r5, #255	; 0xff
 8023f3e:	d021      	beq.n	8023f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023f40:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023f42:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023f46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023f48:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023f4e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023f54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f58:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f64:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f68:	44de      	add	lr, fp
 8023f6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f7e:	ea4e 050a 	orr.w	r5, lr, sl
 8023f82:	950c      	str	r5, [sp, #48]	; 0x30
 8023f84:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f86:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023f8a:	9d08      	ldr	r5, [sp, #32]
 8023f8c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023f90:	fb08 fc0c 	mul.w	ip, r8, ip
 8023f94:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023f98:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023f9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023f9e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023fa2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023fa6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023fa8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023fac:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023fb0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023fb4:	fb08 f80e 	mul.w	r8, r8, lr
 8023fb8:	fb01 8202 	mla	r2, r1, r2, r8
 8023fbc:	9908      	ldr	r1, [sp, #32]
 8023fbe:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023fc2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023fc4:	fb00 220a 	mla	r2, r0, sl, r2
 8023fc8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023fcc:	fb09 2900 	mla	r9, r9, r0, r2
 8023fd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023fd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023fdc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023fe0:	ea4c 0c09 	orr.w	ip, ip, r9
 8023fe4:	2bff      	cmp	r3, #255	; 0xff
 8023fe6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023fea:	f040 8091 	bne.w	8024110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023fee:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023ff2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023ff6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023ffa:	f022 0207 	bic.w	r2, r2, #7
 8023ffe:	431a      	orrs	r2, r3
 8024000:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024004:	ea4c 0c02 	orr.w	ip, ip, r2
 8024008:	f8a7 c000 	strh.w	ip, [r7]
 802400c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802400e:	441c      	add	r4, r3
 8024010:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024012:	441e      	add	r6, r3
 8024014:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024016:	3b01      	subs	r3, #1
 8024018:	3702      	adds	r7, #2
 802401a:	9317      	str	r3, [sp, #92]	; 0x5c
 802401c:	e6c0      	b.n	8023da0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802401e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024020:	441c      	add	r4, r3
 8024022:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024024:	441e      	add	r6, r3
 8024026:	9b07      	ldr	r3, [sp, #28]
 8024028:	3b01      	subs	r3, #1
 802402a:	9307      	str	r3, [sp, #28]
 802402c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802402e:	3302      	adds	r3, #2
 8024030:	930a      	str	r3, [sp, #40]	; 0x28
 8024032:	e695      	b.n	8023d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024034:	d024      	beq.n	8024080 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024036:	9b07      	ldr	r3, [sp, #28]
 8024038:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802403a:	3b01      	subs	r3, #1
 802403c:	fb00 4003 	mla	r0, r0, r3, r4
 8024040:	1400      	asrs	r0, r0, #16
 8024042:	f53f aeaa 	bmi.w	8023d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024046:	3901      	subs	r1, #1
 8024048:	4288      	cmp	r0, r1
 802404a:	f6bf aea6 	bge.w	8023d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802404e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024050:	fb01 6303 	mla	r3, r1, r3, r6
 8024054:	141b      	asrs	r3, r3, #16
 8024056:	f53f aea0 	bmi.w	8023d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802405a:	3a01      	subs	r2, #1
 802405c:	4293      	cmp	r3, r2
 802405e:	f6bf ae9c 	bge.w	8023d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024062:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024066:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802406a:	f1bb 0f00 	cmp.w	fp, #0
 802406e:	f300 809a 	bgt.w	80241a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024072:	9b07      	ldr	r3, [sp, #28]
 8024074:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024078:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802407a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802407e:	930a      	str	r3, [sp, #40]	; 0x28
 8024080:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024082:	2b00      	cmp	r3, #0
 8024084:	f340 81eb 	ble.w	802445e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024088:	ee30 0a04 	vadd.f32	s0, s0, s8
 802408c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024090:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024094:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024096:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802409a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802409e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80240a2:	eef0 6a62 	vmov.f32	s13, s5
 80240a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80240aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80240ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80240b2:	ee16 4a90 	vmov	r4, s13
 80240b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80240ba:	eef0 6a43 	vmov.f32	s13, s6
 80240be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80240c2:	ee12 2a90 	vmov	r2, s5
 80240c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80240ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80240ce:	ee13 2a10 	vmov	r2, s6
 80240d2:	9327      	str	r3, [sp, #156]	; 0x9c
 80240d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80240da:	9328      	str	r3, [sp, #160]	; 0xa0
 80240dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80240de:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80240e0:	3b01      	subs	r3, #1
 80240e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80240e6:	9316      	str	r3, [sp, #88]	; 0x58
 80240e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240ea:	bf08      	it	eq
 80240ec:	4613      	moveq	r3, r2
 80240ee:	ee16 6a90 	vmov	r6, s13
 80240f2:	9307      	str	r3, [sp, #28]
 80240f4:	eeb0 3a67 	vmov.f32	s6, s15
 80240f8:	eef0 2a47 	vmov.f32	s5, s14
 80240fc:	e622      	b.n	8023d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80240fe:	2800      	cmp	r0, #0
 8024100:	f43f ae92 	beq.w	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024104:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024108:	9308      	str	r3, [sp, #32]
 802410a:	0e1b      	lsrs	r3, r3, #24
 802410c:	9310      	str	r3, [sp, #64]	; 0x40
 802410e:	e68b      	b.n	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024110:	8839      	ldrh	r1, [r7, #0]
 8024112:	4dd4      	ldr	r5, [pc, #848]	; (8024464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024114:	43db      	mvns	r3, r3
 8024116:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802411a:	fa5f f883 	uxtb.w	r8, r3
 802411e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8024122:	fb0e fe08 	mul.w	lr, lr, r8
 8024126:	10c8      	asrs	r0, r1, #3
 8024128:	00cb      	lsls	r3, r1, #3
 802412a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802412e:	f10e 0101 	add.w	r1, lr, #1
 8024132:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8024136:	fb00 f008 	mul.w	r0, r0, r8
 802413a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802413e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8024142:	f100 0e01 	add.w	lr, r0, #1
 8024146:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802414a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802414e:	b2db      	uxtb	r3, r3
 8024150:	b2c9      	uxtb	r1, r1
 8024152:	00d2      	lsls	r2, r2, #3
 8024154:	fb03 f308 	mul.w	r3, r3, r8
 8024158:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802415c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024160:	430a      	orrs	r2, r1
 8024162:	1c59      	adds	r1, r3, #1
 8024164:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024168:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802416c:	e748      	b.n	8024000 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802416e:	f112 0801 	adds.w	r8, r2, #1
 8024172:	f53f af4b 	bmi.w	802400c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024176:	4543      	cmp	r3, r8
 8024178:	f6ff af48 	blt.w	802400c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802417c:	f11c 0801 	adds.w	r8, ip, #1
 8024180:	f53f af44 	bmi.w	802400c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024184:	45c6      	cmp	lr, r8
 8024186:	f6ff af41 	blt.w	802400c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802418a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802418e:	fa0f f28e 	sxth.w	r2, lr
 8024192:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024196:	9200      	str	r2, [sp, #0]
 8024198:	b21b      	sxth	r3, r3
 802419a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802419c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802419e:	4639      	mov	r1, r7
 80241a0:	f7ff fc87 	bl	8023ab2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80241a4:	e732      	b.n	802400c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80241a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80241aa:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80241ae:	1421      	asrs	r1, r4, #16
 80241b0:	1433      	asrs	r3, r6, #16
 80241b2:	fb07 1303 	mla	r3, r7, r3, r1
 80241b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80241b8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80241bc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80241c0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80241c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80241c8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80241cc:	2a00      	cmp	r2, #0
 80241ce:	f000 8107 	beq.w	80243e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80241d2:	684d      	ldr	r5, [r1, #4]
 80241d4:	950d      	str	r5, [sp, #52]	; 0x34
 80241d6:	0e2d      	lsrs	r5, r5, #24
 80241d8:	9514      	str	r5, [sp, #80]	; 0x50
 80241da:	b178      	cbz	r0, 80241fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80241dc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80241e0:	3f01      	subs	r7, #1
 80241e2:	00bf      	lsls	r7, r7, #2
 80241e4:	3704      	adds	r7, #4
 80241e6:	eb01 0e07 	add.w	lr, r1, r7
 80241ea:	59c9      	ldr	r1, [r1, r7]
 80241ec:	9109      	str	r1, [sp, #36]	; 0x24
 80241ee:	0e09      	lsrs	r1, r1, #24
 80241f0:	9111      	str	r1, [sp, #68]	; 0x44
 80241f2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80241f6:	910e      	str	r1, [sp, #56]	; 0x38
 80241f8:	0e09      	lsrs	r1, r1, #24
 80241fa:	9115      	str	r1, [sp, #84]	; 0x54
 80241fc:	b292      	uxth	r2, r2
 80241fe:	b280      	uxth	r0, r0
 8024200:	fb02 f900 	mul.w	r9, r2, r0
 8024204:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024208:	0112      	lsls	r2, r2, #4
 802420a:	eba2 0e09 	sub.w	lr, r2, r9
 802420e:	b280      	uxth	r0, r0
 8024210:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024214:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024216:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024218:	fa1f fe8e 	uxth.w	lr, lr
 802421c:	1a09      	subs	r1, r1, r0
 802421e:	b289      	uxth	r1, r1
 8024220:	fb0e f202 	mul.w	r2, lr, r2
 8024224:	fb01 220c 	mla	r2, r1, ip, r2
 8024228:	fb00 2205 	mla	r2, r0, r5, r2
 802422c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802422e:	fb09 2205 	mla	r2, r9, r5, r2
 8024232:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024236:	2a00      	cmp	r2, #0
 8024238:	f000 80c9 	beq.w	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802423c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024240:	d019      	beq.n	8024276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8024242:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024246:	fb0c fa0a 	mul.w	sl, ip, sl
 802424a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802424e:	fb0c fc03 	mul.w	ip, ip, r3
 8024252:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024256:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802425a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802425e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024262:	4453      	add	r3, sl
 8024264:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024268:	0a1b      	lsrs	r3, r3, #8
 802426a:	0a3f      	lsrs	r7, r7, #8
 802426c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024270:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024274:	433b      	orrs	r3, r7
 8024276:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024278:	2dff      	cmp	r5, #255	; 0xff
 802427a:	d020      	beq.n	80242be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802427c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802427e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024282:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024284:	436f      	muls	r7, r5
 8024286:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024288:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802428c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802428e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024292:	fb05 fa0a 	mul.w	sl, r5, sl
 8024296:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802429a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802429e:	44bc      	add	ip, r7
 80242a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80242a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80242a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80242b8:	ea4c 050a 	orr.w	r5, ip, sl
 80242bc:	950d      	str	r5, [sp, #52]	; 0x34
 80242be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80242c0:	2dff      	cmp	r5, #255	; 0xff
 80242c2:	d020      	beq.n	8024306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80242c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80242c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80242ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80242cc:	436f      	muls	r7, r5
 80242ce:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80242d0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80242d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80242d6:	fb05 fa0c 	mul.w	sl, r5, ip
 80242da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80242de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80242e6:	44bc      	add	ip, r7
 80242e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80242ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80242f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024300:	ea4c 050a 	orr.w	r5, ip, sl
 8024304:	9509      	str	r5, [sp, #36]	; 0x24
 8024306:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024308:	2dff      	cmp	r5, #255	; 0xff
 802430a:	d020      	beq.n	802434e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802430c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802430e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024312:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024314:	436f      	muls	r7, r5
 8024316:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024318:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802431c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802431e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024322:	fb05 fa0a 	mul.w	sl, r5, sl
 8024326:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802432a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802432e:	44bc      	add	ip, r7
 8024330:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024334:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024338:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802433c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024340:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024344:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024348:	ea4c 050a 	orr.w	r5, ip, sl
 802434c:	950e      	str	r5, [sp, #56]	; 0x38
 802434e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024350:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024354:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024356:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802435a:	fb0e f707 	mul.w	r7, lr, r7
 802435e:	fb01 770c 	mla	r7, r1, ip, r7
 8024362:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024366:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024368:	fb00 770c 	mla	r7, r0, ip, r7
 802436c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024370:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024372:	fb09 770c 	mla	r7, r9, ip, r7
 8024376:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802437a:	fb0e fe0c 	mul.w	lr, lr, ip
 802437e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024382:	fb01 e303 	mla	r3, r1, r3, lr
 8024386:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024388:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802438c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802438e:	fb00 330a 	mla	r3, r0, sl, r3
 8024392:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024396:	fb09 3c0c 	mla	ip, r9, ip, r3
 802439a:	0a3f      	lsrs	r7, r7, #8
 802439c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243a0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80243a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80243a8:	ea47 070c 	orr.w	r7, r7, ip
 80243ac:	2aff      	cmp	r2, #255	; 0xff
 80243ae:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80243b2:	d11e      	bne.n	80243f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80243b4:	097a      	lsrs	r2, r7, #5
 80243b6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80243ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80243be:	f023 0307 	bic.w	r3, r3, #7
 80243c2:	4313      	orrs	r3, r2
 80243c4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80243c8:	431f      	orrs	r7, r3
 80243ca:	f8a8 7000 	strh.w	r7, [r8]
 80243ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80243d0:	441c      	add	r4, r3
 80243d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243d4:	f108 0802 	add.w	r8, r8, #2
 80243d8:	441e      	add	r6, r3
 80243da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80243de:	e644      	b.n	802406a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80243e0:	2800      	cmp	r0, #0
 80243e2:	f43f af0b 	beq.w	80241fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80243e6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80243ea:	9109      	str	r1, [sp, #36]	; 0x24
 80243ec:	0e09      	lsrs	r1, r1, #24
 80243ee:	9111      	str	r1, [sp, #68]	; 0x44
 80243f0:	e704      	b.n	80241fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80243f2:	f8b8 1000 	ldrh.w	r1, [r8]
 80243f6:	43d2      	mvns	r2, r2
 80243f8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80243fc:	fa5f fe82 	uxtb.w	lr, r2
 8024400:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024404:	fb0c fc0e 	mul.w	ip, ip, lr
 8024408:	10c8      	asrs	r0, r1, #3
 802440a:	00ca      	lsls	r2, r1, #3
 802440c:	f10c 0101 	add.w	r1, ip, #1
 8024410:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024414:	0c39      	lsrs	r1, r7, #16
 8024416:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802441a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802441e:	4911      	ldr	r1, [pc, #68]	; (8024464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024420:	fb00 f00e 	mul.w	r0, r0, lr
 8024424:	fa5f fc8c 	uxtb.w	ip, ip
 8024428:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802442c:	b2d2      	uxtb	r2, r2
 802442e:	1c41      	adds	r1, r0, #1
 8024430:	fb02 f20e 	mul.w	r2, r2, lr
 8024434:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024438:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802443c:	1c51      	adds	r1, r2, #1
 802443e:	00c0      	lsls	r0, r0, #3
 8024440:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024444:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024448:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802444c:	ea4c 0c00 	orr.w	ip, ip, r0
 8024450:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024454:	ea47 0c0c 	orr.w	ip, r7, ip
 8024458:	f8a8 c000 	strh.w	ip, [r8]
 802445c:	e7b7      	b.n	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802445e:	b01b      	add	sp, #108	; 0x6c
 8024460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024464:	fffff800 	.word	0xfffff800

08024468 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024468:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802446c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024470:	2d00      	cmp	r5, #0
 8024472:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024476:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802447a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802447e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024482:	fb05 0e03 	mla	lr, r5, r3, r0
 8024486:	f2c0 808c 	blt.w	80245a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802448a:	45a9      	cmp	r9, r5
 802448c:	f340 8089 	ble.w	80245a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024490:	2800      	cmp	r0, #0
 8024492:	f2c0 8084 	blt.w	802459e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024496:	4580      	cmp	r8, r0
 8024498:	f340 8081 	ble.w	802459e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802449c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80244a0:	f01e 0f01 	tst.w	lr, #1
 80244a4:	5d16      	ldrb	r6, [r2, r4]
 80244a6:	bf0c      	ite	eq
 80244a8:	f006 060f 	andeq.w	r6, r6, #15
 80244ac:	1136      	asrne	r6, r6, #4
 80244ae:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80244b2:	b2f6      	uxtb	r6, r6
 80244b4:	1c44      	adds	r4, r0, #1
 80244b6:	d477      	bmi.n	80245a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80244b8:	45a0      	cmp	r8, r4
 80244ba:	dd75      	ble.n	80245a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80244bc:	2f00      	cmp	r7, #0
 80244be:	d075      	beq.n	80245ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80244c0:	f10e 0a01 	add.w	sl, lr, #1
 80244c4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80244c8:	f01a 0f01 	tst.w	sl, #1
 80244cc:	5d14      	ldrb	r4, [r2, r4]
 80244ce:	bf0c      	ite	eq
 80244d0:	f004 040f 	andeq.w	r4, r4, #15
 80244d4:	1124      	asrne	r4, r4, #4
 80244d6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80244da:	b2e4      	uxtb	r4, r4
 80244dc:	3501      	adds	r5, #1
 80244de:	d469      	bmi.n	80245b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80244e0:	45a9      	cmp	r9, r5
 80244e2:	dd67      	ble.n	80245b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80244e4:	f1bc 0f00 	cmp.w	ip, #0
 80244e8:	d067      	beq.n	80245ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80244ea:	2800      	cmp	r0, #0
 80244ec:	db60      	blt.n	80245b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80244ee:	4580      	cmp	r8, r0
 80244f0:	dd5e      	ble.n	80245b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80244f2:	eb03 090e 	add.w	r9, r3, lr
 80244f6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80244fa:	f019 0f01 	tst.w	r9, #1
 80244fe:	5d55      	ldrb	r5, [r2, r5]
 8024500:	bf0c      	ite	eq
 8024502:	f005 050f 	andeq.w	r5, r5, #15
 8024506:	112d      	asrne	r5, r5, #4
 8024508:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802450c:	b2ed      	uxtb	r5, r5
 802450e:	3001      	adds	r0, #1
 8024510:	d456      	bmi.n	80245c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024512:	4580      	cmp	r8, r0
 8024514:	dd54      	ble.n	80245c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024516:	2f00      	cmp	r7, #0
 8024518:	d054      	beq.n	80245c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802451a:	3301      	adds	r3, #1
 802451c:	449e      	add	lr, r3
 802451e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024522:	f01e 0f01 	tst.w	lr, #1
 8024526:	5cd0      	ldrb	r0, [r2, r3]
 8024528:	bf0c      	ite	eq
 802452a:	f000 000f 	andeq.w	r0, r0, #15
 802452e:	1100      	asrne	r0, r0, #4
 8024530:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024534:	b2c3      	uxtb	r3, r0
 8024536:	b2ba      	uxth	r2, r7
 8024538:	fa1f fc8c 	uxth.w	ip, ip
 802453c:	fb02 f00c 	mul.w	r0, r2, ip
 8024540:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024544:	0112      	lsls	r2, r2, #4
 8024546:	fa1f fc8c 	uxth.w	ip, ip
 802454a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802454e:	1a12      	subs	r2, r2, r0
 8024550:	eba7 070c 	sub.w	r7, r7, ip
 8024554:	b292      	uxth	r2, r2
 8024556:	b2bf      	uxth	r7, r7
 8024558:	4362      	muls	r2, r4
 802455a:	fb06 2207 	mla	r2, r6, r7, r2
 802455e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024562:	fb00 5303 	mla	r3, r0, r3, r5
 8024566:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802456a:	b1b3      	cbz	r3, 802459a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802456c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024570:	435a      	muls	r2, r3
 8024572:	1c53      	adds	r3, r2, #1
 8024574:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024578:	4a2d      	ldr	r2, [pc, #180]	; (8024630 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802457a:	121b      	asrs	r3, r3, #8
 802457c:	6812      	ldr	r2, [r2, #0]
 802457e:	2bff      	cmp	r3, #255	; 0xff
 8024580:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024584:	d120      	bne.n	80245c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024586:	4b2b      	ldr	r3, [pc, #172]	; (8024634 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024588:	0950      	lsrs	r0, r2, #5
 802458a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802458e:	4033      	ands	r3, r6
 8024590:	4318      	orrs	r0, r3
 8024592:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024596:	4302      	orrs	r2, r0
 8024598:	800a      	strh	r2, [r1, #0]
 802459a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802459e:	2600      	movs	r6, #0
 80245a0:	e788      	b.n	80244b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80245a2:	2400      	movs	r4, #0
 80245a4:	4626      	mov	r6, r4
 80245a6:	e799      	b.n	80244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80245a8:	2400      	movs	r4, #0
 80245aa:	e797      	b.n	80244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80245ac:	463c      	mov	r4, r7
 80245ae:	e795      	b.n	80244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80245b0:	2500      	movs	r5, #0
 80245b2:	e7ac      	b.n	802450e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80245b4:	2300      	movs	r3, #0
 80245b6:	461d      	mov	r5, r3
 80245b8:	e7bd      	b.n	8024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80245ba:	4663      	mov	r3, ip
 80245bc:	4665      	mov	r5, ip
 80245be:	e7ba      	b.n	8024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80245c0:	2300      	movs	r3, #0
 80245c2:	e7b8      	b.n	8024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80245c4:	463b      	mov	r3, r7
 80245c6:	e7b6      	b.n	8024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80245c8:	880d      	ldrh	r5, [r1, #0]
 80245ca:	b29f      	uxth	r7, r3
 80245cc:	122c      	asrs	r4, r5, #8
 80245ce:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80245d2:	43db      	mvns	r3, r3
 80245d4:	b2db      	uxtb	r3, r3
 80245d6:	fb10 f007 	smulbb	r0, r0, r7
 80245da:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80245de:	fb04 0403 	mla	r4, r4, r3, r0
 80245e2:	b2f6      	uxtb	r6, r6
 80245e4:	10e8      	asrs	r0, r5, #3
 80245e6:	b2d2      	uxtb	r2, r2
 80245e8:	00ed      	lsls	r5, r5, #3
 80245ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80245ee:	fb12 f207 	smulbb	r2, r2, r7
 80245f2:	fb16 f607 	smulbb	r6, r6, r7
 80245f6:	b2ed      	uxtb	r5, r5
 80245f8:	b2a4      	uxth	r4, r4
 80245fa:	fb00 6603 	mla	r6, r0, r3, r6
 80245fe:	fb05 2303 	mla	r3, r5, r3, r2
 8024602:	b29a      	uxth	r2, r3
 8024604:	1c63      	adds	r3, r4, #1
 8024606:	b2b0      	uxth	r0, r6
 8024608:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802460c:	1c53      	adds	r3, r2, #1
 802460e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024612:	1c42      	adds	r2, r0, #1
 8024614:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024618:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802461c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024620:	0940      	lsrs	r0, r0, #5
 8024622:	4323      	orrs	r3, r4
 8024624:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024628:	4303      	orrs	r3, r0
 802462a:	800b      	strh	r3, [r1, #0]
 802462c:	e7b5      	b.n	802459a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802462e:	bf00      	nop
 8024630:	20012db4 	.word	0x20012db4
 8024634:	00fff800 	.word	0x00fff800

08024638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802463c:	b097      	sub	sp, #92	; 0x5c
 802463e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024642:	9214      	str	r2, [sp, #80]	; 0x50
 8024644:	9309      	str	r3, [sp, #36]	; 0x24
 8024646:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024648:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802464c:	910d      	str	r1, [sp, #52]	; 0x34
 802464e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024650:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024654:	9015      	str	r0, [sp, #84]	; 0x54
 8024656:	6850      	ldr	r0, [r2, #4]
 8024658:	6812      	ldr	r2, [r2, #0]
 802465a:	fb00 1303 	mla	r3, r0, r3, r1
 802465e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024662:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024664:	689b      	ldr	r3, [r3, #8]
 8024666:	3301      	adds	r3, #1
 8024668:	f023 0301 	bic.w	r3, r3, #1
 802466c:	930a      	str	r3, [sp, #40]	; 0x28
 802466e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024670:	681f      	ldr	r7, [r3, #0]
 8024672:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024674:	2b00      	cmp	r3, #0
 8024676:	dc03      	bgt.n	8024680 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024678:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802467a:	2b00      	cmp	r3, #0
 802467c:	f340 8287 	ble.w	8024b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024680:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024682:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024686:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802468a:	1e48      	subs	r0, r1, #1
 802468c:	f102 3cff 	add.w	ip, r2, #4294967295
 8024690:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024692:	2b00      	cmp	r3, #0
 8024694:	f340 80c4 	ble.w	8024820 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024698:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802469c:	ea4f 4326 	mov.w	r3, r6, asr #16
 80246a0:	d406      	bmi.n	80246b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80246a2:	4586      	cmp	lr, r0
 80246a4:	da04      	bge.n	80246b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80246a6:	2b00      	cmp	r3, #0
 80246a8:	db02      	blt.n	80246b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80246aa:	4563      	cmp	r3, ip
 80246ac:	f2c0 80b9 	blt.w	8024822 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80246b0:	f11e 0e01 	adds.w	lr, lr, #1
 80246b4:	f100 80aa 	bmi.w	802480c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80246b8:	4571      	cmp	r1, lr
 80246ba:	f2c0 80a7 	blt.w	802480c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80246be:	3301      	adds	r3, #1
 80246c0:	f100 80a4 	bmi.w	802480c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80246c4:	429a      	cmp	r2, r3
 80246c6:	f2c0 80a1 	blt.w	802480c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80246ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80246cc:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80246d0:	930e      	str	r3, [sp, #56]	; 0x38
 80246d2:	46c8      	mov	r8, r9
 80246d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80246d6:	2b00      	cmp	r3, #0
 80246d8:	f340 80c3 	ble.w	8024862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80246dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246de:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80246e2:	1423      	asrs	r3, r4, #16
 80246e4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80246e8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80246ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80246f0:	f100 814d 	bmi.w	802498e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80246f4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80246f8:	455b      	cmp	r3, fp
 80246fa:	f280 8148 	bge.w	802498e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80246fe:	2800      	cmp	r0, #0
 8024700:	f2c0 8145 	blt.w	802498e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024704:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024708:	4558      	cmp	r0, fp
 802470a:	f280 8140 	bge.w	802498e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802470e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024710:	fb00 3305 	mla	r3, r0, r5, r3
 8024714:	0858      	lsrs	r0, r3, #1
 8024716:	07dd      	lsls	r5, r3, #31
 8024718:	f817 c000 	ldrb.w	ip, [r7, r0]
 802471c:	bf54      	ite	pl
 802471e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024722:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024726:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802472a:	fa5f fc8c 	uxtb.w	ip, ip
 802472e:	2a00      	cmp	r2, #0
 8024730:	f000 80db 	beq.w	80248ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024734:	1c58      	adds	r0, r3, #1
 8024736:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802473a:	07c0      	lsls	r0, r0, #31
 802473c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024740:	bf54      	ite	pl
 8024742:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024746:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802474a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802474e:	fa5f f08e 	uxtb.w	r0, lr
 8024752:	9010      	str	r0, [sp, #64]	; 0x40
 8024754:	b1c9      	cbz	r1, 802478a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024756:	4453      	add	r3, sl
 8024758:	0858      	lsrs	r0, r3, #1
 802475a:	07dd      	lsls	r5, r3, #31
 802475c:	5c38      	ldrb	r0, [r7, r0]
 802475e:	bf54      	ite	pl
 8024760:	f000 000f 	andpl.w	r0, r0, #15
 8024764:	1100      	asrmi	r0, r0, #4
 8024766:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802476a:	3301      	adds	r3, #1
 802476c:	b2c0      	uxtb	r0, r0
 802476e:	900b      	str	r0, [sp, #44]	; 0x2c
 8024770:	0858      	lsrs	r0, r3, #1
 8024772:	07dd      	lsls	r5, r3, #31
 8024774:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024778:	bf54      	ite	pl
 802477a:	f00e 030f 	andpl.w	r3, lr, #15
 802477e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024782:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024786:	b2db      	uxtb	r3, r3
 8024788:	9311      	str	r3, [sp, #68]	; 0x44
 802478a:	b292      	uxth	r2, r2
 802478c:	b289      	uxth	r1, r1
 802478e:	fb02 f301 	mul.w	r3, r2, r1
 8024792:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024796:	0112      	lsls	r2, r2, #4
 8024798:	b289      	uxth	r1, r1
 802479a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802479e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80247a0:	1ad2      	subs	r2, r2, r3
 80247a2:	1a40      	subs	r0, r0, r1
 80247a4:	b292      	uxth	r2, r2
 80247a6:	436a      	muls	r2, r5
 80247a8:	b280      	uxth	r0, r0
 80247aa:	fb0c 2c00 	mla	ip, ip, r0, r2
 80247ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80247b0:	fb01 c102 	mla	r1, r1, r2, ip
 80247b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80247b6:	fb03 1302 	mla	r3, r3, r2, r1
 80247ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80247be:	b1db      	cbz	r3, 80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80247c2:	4353      	muls	r3, r2
 80247c4:	1c5a      	adds	r2, r3, #1
 80247c6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80247ca:	4ac6      	ldr	r2, [pc, #792]	; (8024ae4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80247cc:	121b      	asrs	r3, r3, #8
 80247ce:	6812      	ldr	r2, [r2, #0]
 80247d0:	2bff      	cmp	r3, #255	; 0xff
 80247d2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80247d6:	f040 8099 	bne.w	802490c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80247da:	0953      	lsrs	r3, r2, #5
 80247dc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80247e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80247e4:	f02c 0c07 	bic.w	ip, ip, #7
 80247e8:	ea43 0c0c 	orr.w	ip, r3, ip
 80247ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80247f0:	ea4c 0202 	orr.w	r2, ip, r2
 80247f4:	f8a8 2000 	strh.w	r2, [r8]
 80247f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80247fa:	441c      	add	r4, r3
 80247fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80247fe:	441e      	add	r6, r3
 8024800:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024802:	3b01      	subs	r3, #1
 8024804:	f108 0802 	add.w	r8, r8, #2
 8024808:	930e      	str	r3, [sp, #56]	; 0x38
 802480a:	e763      	b.n	80246d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802480c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802480e:	441c      	add	r4, r3
 8024810:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024812:	441e      	add	r6, r3
 8024814:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024816:	3b01      	subs	r3, #1
 8024818:	9309      	str	r3, [sp, #36]	; 0x24
 802481a:	f109 0902 	add.w	r9, r9, #2
 802481e:	e737      	b.n	8024690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024820:	d024      	beq.n	802486c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024824:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024826:	3b01      	subs	r3, #1
 8024828:	fb00 4003 	mla	r0, r0, r3, r4
 802482c:	1400      	asrs	r0, r0, #16
 802482e:	f53f af4c 	bmi.w	80246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024832:	3901      	subs	r1, #1
 8024834:	4288      	cmp	r0, r1
 8024836:	f6bf af48 	bge.w	80246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802483a:	9924      	ldr	r1, [sp, #144]	; 0x90
 802483c:	fb01 6303 	mla	r3, r1, r3, r6
 8024840:	141b      	asrs	r3, r3, #16
 8024842:	f53f af42 	bmi.w	80246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024846:	3a01      	subs	r2, #1
 8024848:	4293      	cmp	r3, r2
 802484a:	f6bf af3e 	bge.w	80246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802484e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024852:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024856:	930e      	str	r3, [sp, #56]	; 0x38
 8024858:	46c8      	mov	r8, r9
 802485a:	f1bb 0f00 	cmp.w	fp, #0
 802485e:	f300 80b7 	bgt.w	80249d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024862:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024864:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024868:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802486c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802486e:	2b00      	cmp	r3, #0
 8024870:	f340 818d 	ble.w	8024b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024874:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024878:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802487c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024880:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024882:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024886:	ee31 1a05 	vadd.f32	s2, s2, s10
 802488a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802488e:	eef0 6a62 	vmov.f32	s13, s5
 8024892:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802489a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802489e:	ee16 4a90 	vmov	r4, s13
 80248a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80248a6:	eef0 6a43 	vmov.f32	s13, s6
 80248aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80248ae:	ee12 2a90 	vmov	r2, s5
 80248b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80248b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80248ba:	ee13 2a10 	vmov	r2, s6
 80248be:	9323      	str	r3, [sp, #140]	; 0x8c
 80248c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80248c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80248c6:	9324      	str	r3, [sp, #144]	; 0x90
 80248c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80248ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80248cc:	3b01      	subs	r3, #1
 80248ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248d2:	930d      	str	r3, [sp, #52]	; 0x34
 80248d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80248d6:	bf08      	it	eq
 80248d8:	4613      	moveq	r3, r2
 80248da:	ee16 6a90 	vmov	r6, s13
 80248de:	9309      	str	r3, [sp, #36]	; 0x24
 80248e0:	eeb0 3a67 	vmov.f32	s6, s15
 80248e4:	eef0 2a47 	vmov.f32	s5, s14
 80248e8:	e6c3      	b.n	8024672 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80248ea:	2900      	cmp	r1, #0
 80248ec:	f43f af4d 	beq.w	802478a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80248f0:	eb0a 0003 	add.w	r0, sl, r3
 80248f4:	0843      	lsrs	r3, r0, #1
 80248f6:	07c0      	lsls	r0, r0, #31
 80248f8:	5cfb      	ldrb	r3, [r7, r3]
 80248fa:	bf54      	ite	pl
 80248fc:	f003 030f 	andpl.w	r3, r3, #15
 8024900:	111b      	asrmi	r3, r3, #4
 8024902:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024906:	b2db      	uxtb	r3, r3
 8024908:	930b      	str	r3, [sp, #44]	; 0x2c
 802490a:	e73e      	b.n	802478a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802490c:	f8b8 e000 	ldrh.w	lr, [r8]
 8024910:	fa1f fb83 	uxth.w	fp, r3
 8024914:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024918:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802491c:	43db      	mvns	r3, r3
 802491e:	b2db      	uxtb	r3, r3
 8024920:	fb11 f10b 	smulbb	r1, r1, fp
 8024924:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024928:	fb00 1003 	mla	r0, r0, r3, r1
 802492c:	fa5f fc8c 	uxtb.w	ip, ip
 8024930:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024934:	b2d2      	uxtb	r2, r2
 8024936:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802493a:	b280      	uxth	r0, r0
 802493c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024940:	fb1c fc0b 	smulbb	ip, ip, fp
 8024944:	fa5f fe8e 	uxtb.w	lr, lr
 8024948:	fb12 fb0b 	smulbb	fp, r2, fp
 802494c:	fb01 cc03 	mla	ip, r1, r3, ip
 8024950:	fb0e bb03 	mla	fp, lr, r3, fp
 8024954:	1c43      	adds	r3, r0, #1
 8024956:	fa1f fc8c 	uxth.w	ip, ip
 802495a:	fa1f fb8b 	uxth.w	fp, fp
 802495e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024962:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024966:	f10c 0101 	add.w	r1, ip, #1
 802496a:	f10b 0001 	add.w	r0, fp, #1
 802496e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024972:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024976:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802497a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802497e:	4318      	orrs	r0, r3
 8024980:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024984:	ea40 000c 	orr.w	r0, r0, ip
 8024988:	f8a8 0000 	strh.w	r0, [r8]
 802498c:	e734      	b.n	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802498e:	f113 0b01 	adds.w	fp, r3, #1
 8024992:	f53f af31 	bmi.w	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024996:	45dc      	cmp	ip, fp
 8024998:	f6ff af2e 	blt.w	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802499c:	f110 0b01 	adds.w	fp, r0, #1
 80249a0:	f53f af2a 	bmi.w	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249a4:	45de      	cmp	lr, fp
 80249a6:	f6ff af27 	blt.w	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80249ac:	9302      	str	r3, [sp, #8]
 80249ae:	fa0f f38e 	sxth.w	r3, lr
 80249b2:	9301      	str	r3, [sp, #4]
 80249b4:	fa0f f38c 	sxth.w	r3, ip
 80249b8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80249bc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80249c0:	9300      	str	r3, [sp, #0]
 80249c2:	463a      	mov	r2, r7
 80249c4:	4653      	mov	r3, sl
 80249c6:	4641      	mov	r1, r8
 80249c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80249ca:	f7ff fd4d 	bl	8024468 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80249ce:	e713      	b.n	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249d0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80249d2:	1422      	asrs	r2, r4, #16
 80249d4:	1433      	asrs	r3, r6, #16
 80249d6:	fb05 2303 	mla	r3, r5, r3, r2
 80249da:	085a      	lsrs	r2, r3, #1
 80249dc:	07dd      	lsls	r5, r3, #31
 80249de:	5cba      	ldrb	r2, [r7, r2]
 80249e0:	bf54      	ite	pl
 80249e2:	f002 020f 	andpl.w	r2, r2, #15
 80249e6:	1112      	asrmi	r2, r2, #4
 80249e8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80249ec:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80249f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80249f4:	b2d2      	uxtb	r2, r2
 80249f6:	2900      	cmp	r1, #0
 80249f8:	d076      	beq.n	8024ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80249fa:	f103 0e01 	add.w	lr, r3, #1
 80249fe:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024a02:	f01e 0f01 	tst.w	lr, #1
 8024a06:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a0a:	bf0c      	ite	eq
 8024a0c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024a10:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024a14:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a18:	fa5f f58c 	uxtb.w	r5, ip
 8024a1c:	9512      	str	r5, [sp, #72]	; 0x48
 8024a1e:	b300      	cbz	r0, 8024a62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024a20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a22:	442b      	add	r3, r5
 8024a24:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024a28:	07dd      	lsls	r5, r3, #31
 8024a2a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a2e:	bf54      	ite	pl
 8024a30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a38:	3301      	adds	r3, #1
 8024a3a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a3e:	fa5f f58c 	uxtb.w	r5, ip
 8024a42:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024a46:	950c      	str	r5, [sp, #48]	; 0x30
 8024a48:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a4c:	07dd      	lsls	r5, r3, #31
 8024a4e:	bf54      	ite	pl
 8024a50:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a54:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a58:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a5c:	fa5f f38c 	uxtb.w	r3, ip
 8024a60:	9313      	str	r3, [sp, #76]	; 0x4c
 8024a62:	b289      	uxth	r1, r1
 8024a64:	b280      	uxth	r0, r0
 8024a66:	fb01 f300 	mul.w	r3, r1, r0
 8024a6a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024a6e:	0109      	lsls	r1, r1, #4
 8024a70:	b280      	uxth	r0, r0
 8024a72:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024a76:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a78:	1ac9      	subs	r1, r1, r3
 8024a7a:	ebac 0c00 	sub.w	ip, ip, r0
 8024a7e:	b289      	uxth	r1, r1
 8024a80:	4369      	muls	r1, r5
 8024a82:	fa1f fc8c 	uxth.w	ip, ip
 8024a86:	fb02 120c 	mla	r2, r2, ip, r1
 8024a8a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024a8c:	fb00 2001 	mla	r0, r0, r1, r2
 8024a90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024a92:	fb03 0302 	mla	r3, r3, r2, r0
 8024a96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024a9a:	b1d3      	cbz	r3, 8024ad2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024a9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024a9e:	4353      	muls	r3, r2
 8024aa0:	1c5a      	adds	r2, r3, #1
 8024aa2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024aa6:	4a0f      	ldr	r2, [pc, #60]	; (8024ae4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024aa8:	121b      	asrs	r3, r3, #8
 8024aaa:	6812      	ldr	r2, [r2, #0]
 8024aac:	2bff      	cmp	r3, #255	; 0xff
 8024aae:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024ab2:	d12d      	bne.n	8024b10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024ab4:	0953      	lsrs	r3, r2, #5
 8024ab6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024aba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024abe:	f02c 0c07 	bic.w	ip, ip, #7
 8024ac2:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ac6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024aca:	ea4c 0202 	orr.w	r2, ip, r2
 8024ace:	f8a8 2000 	strh.w	r2, [r8]
 8024ad2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024ad4:	441c      	add	r4, r3
 8024ad6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024ad8:	f108 0802 	add.w	r8, r8, #2
 8024adc:	441e      	add	r6, r3
 8024ade:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024ae2:	e6ba      	b.n	802485a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024ae4:	20012db4 	.word	0x20012db4
 8024ae8:	2800      	cmp	r0, #0
 8024aea:	d0ba      	beq.n	8024a62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024aec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024aee:	442b      	add	r3, r5
 8024af0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024af4:	07db      	lsls	r3, r3, #31
 8024af6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024afa:	bf54      	ite	pl
 8024afc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024b00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024b04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024b08:	fa5f f38c 	uxtb.w	r3, ip
 8024b0c:	930c      	str	r3, [sp, #48]	; 0x30
 8024b0e:	e7a8      	b.n	8024a62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024b10:	f8b8 e000 	ldrh.w	lr, [r8]
 8024b14:	fa1f fa83 	uxth.w	sl, r3
 8024b18:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024b1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024b20:	43db      	mvns	r3, r3
 8024b22:	b2db      	uxtb	r3, r3
 8024b24:	fb11 f10a 	smulbb	r1, r1, sl
 8024b28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024b2c:	fb00 1003 	mla	r0, r0, r3, r1
 8024b30:	b2d2      	uxtb	r2, r2
 8024b32:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024b36:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024b3a:	fa5f fe8e 	uxtb.w	lr, lr
 8024b3e:	fb12 f20a 	smulbb	r2, r2, sl
 8024b42:	fb0e 2203 	mla	r2, lr, r3, r2
 8024b46:	fa5f fc8c 	uxtb.w	ip, ip
 8024b4a:	b280      	uxth	r0, r0
 8024b4c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024b50:	b292      	uxth	r2, r2
 8024b52:	fb1c fc0a 	smulbb	ip, ip, sl
 8024b56:	fb01 cc03 	mla	ip, r1, r3, ip
 8024b5a:	1c43      	adds	r3, r0, #1
 8024b5c:	1c51      	adds	r1, r2, #1
 8024b5e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024b62:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024b66:	fa1f fc8c 	uxth.w	ip, ip
 8024b6a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024b6e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024b72:	4308      	orrs	r0, r1
 8024b74:	f10c 0101 	add.w	r1, ip, #1
 8024b78:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024b7c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024b80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024b84:	ea40 000c 	orr.w	r0, r0, ip
 8024b88:	f8a8 0000 	strh.w	r0, [r8]
 8024b8c:	e7a1      	b.n	8024ad2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024b8e:	b017      	add	sp, #92	; 0x5c
 8024b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024b98:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024b9c:	2d00      	cmp	r5, #0
 8024b9e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024ba2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024ba6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024baa:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024bae:	fb05 0e03 	mla	lr, r5, r3, r0
 8024bb2:	f2c0 80b0 	blt.w	8024d16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024bb6:	45a9      	cmp	r9, r5
 8024bb8:	f340 80ad 	ble.w	8024d16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024bbc:	2800      	cmp	r0, #0
 8024bbe:	f2c0 80a8 	blt.w	8024d12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024bc2:	4580      	cmp	r8, r0
 8024bc4:	f340 80a5 	ble.w	8024d12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024bc8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024bcc:	f01e 0f01 	tst.w	lr, #1
 8024bd0:	5d16      	ldrb	r6, [r2, r4]
 8024bd2:	bf0c      	ite	eq
 8024bd4:	f006 060f 	andeq.w	r6, r6, #15
 8024bd8:	1136      	asrne	r6, r6, #4
 8024bda:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024bde:	b2f6      	uxtb	r6, r6
 8024be0:	1c44      	adds	r4, r0, #1
 8024be2:	f100 809b 	bmi.w	8024d1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024be6:	45a0      	cmp	r8, r4
 8024be8:	f340 8098 	ble.w	8024d1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024bec:	2f00      	cmp	r7, #0
 8024bee:	f000 8097 	beq.w	8024d20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024bf2:	f10e 0a01 	add.w	sl, lr, #1
 8024bf6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024bfa:	f01a 0f01 	tst.w	sl, #1
 8024bfe:	5d14      	ldrb	r4, [r2, r4]
 8024c00:	bf0c      	ite	eq
 8024c02:	f004 040f 	andeq.w	r4, r4, #15
 8024c06:	1124      	asrne	r4, r4, #4
 8024c08:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024c0c:	b2e4      	uxtb	r4, r4
 8024c0e:	3501      	adds	r5, #1
 8024c10:	f100 808a 	bmi.w	8024d28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024c14:	45a9      	cmp	r9, r5
 8024c16:	f340 8087 	ble.w	8024d28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024c1a:	f1bc 0f00 	cmp.w	ip, #0
 8024c1e:	f000 8086 	beq.w	8024d2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024c22:	2800      	cmp	r0, #0
 8024c24:	db7e      	blt.n	8024d24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024c26:	4580      	cmp	r8, r0
 8024c28:	dd7c      	ble.n	8024d24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024c2a:	eb03 090e 	add.w	r9, r3, lr
 8024c2e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024c32:	f019 0f01 	tst.w	r9, #1
 8024c36:	5d55      	ldrb	r5, [r2, r5]
 8024c38:	bf0c      	ite	eq
 8024c3a:	f005 050f 	andeq.w	r5, r5, #15
 8024c3e:	112d      	asrne	r5, r5, #4
 8024c40:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024c44:	b2ed      	uxtb	r5, r5
 8024c46:	3001      	adds	r0, #1
 8024c48:	d474      	bmi.n	8024d34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024c4a:	4580      	cmp	r8, r0
 8024c4c:	dd72      	ble.n	8024d34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024c4e:	2f00      	cmp	r7, #0
 8024c50:	d072      	beq.n	8024d38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024c52:	3301      	adds	r3, #1
 8024c54:	449e      	add	lr, r3
 8024c56:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024c5a:	f01e 0f01 	tst.w	lr, #1
 8024c5e:	5cd0      	ldrb	r0, [r2, r3]
 8024c60:	bf0c      	ite	eq
 8024c62:	f000 000f 	andeq.w	r0, r0, #15
 8024c66:	1100      	asrne	r0, r0, #4
 8024c68:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024c6c:	b2c3      	uxtb	r3, r0
 8024c6e:	b2ba      	uxth	r2, r7
 8024c70:	fa1f fc8c 	uxth.w	ip, ip
 8024c74:	fb02 f00c 	mul.w	r0, r2, ip
 8024c78:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024c7c:	0112      	lsls	r2, r2, #4
 8024c7e:	fa1f fc8c 	uxth.w	ip, ip
 8024c82:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024c86:	1a12      	subs	r2, r2, r0
 8024c88:	eba7 070c 	sub.w	r7, r7, ip
 8024c8c:	b292      	uxth	r2, r2
 8024c8e:	b2bf      	uxth	r7, r7
 8024c90:	4362      	muls	r2, r4
 8024c92:	fb06 2207 	mla	r2, r6, r7, r2
 8024c96:	fb0c 2505 	mla	r5, ip, r5, r2
 8024c9a:	fb00 5303 	mla	r3, r0, r3, r5
 8024c9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024ca2:	b3a3      	cbz	r3, 8024d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024ca4:	4a25      	ldr	r2, [pc, #148]	; (8024d3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024ca6:	880e      	ldrh	r6, [r1, #0]
 8024ca8:	6815      	ldr	r5, [r2, #0]
 8024caa:	1234      	asrs	r4, r6, #8
 8024cac:	b29a      	uxth	r2, r3
 8024cae:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024cb2:	43db      	mvns	r3, r3
 8024cb4:	b2db      	uxtb	r3, r3
 8024cb6:	fb10 f002 	smulbb	r0, r0, r2
 8024cba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024cbe:	fb04 0403 	mla	r4, r4, r3, r0
 8024cc2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024cc6:	10f0      	asrs	r0, r6, #3
 8024cc8:	b2ed      	uxtb	r5, r5
 8024cca:	00f6      	lsls	r6, r6, #3
 8024ccc:	fb17 f702 	smulbb	r7, r7, r2
 8024cd0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024cd4:	fb15 f202 	smulbb	r2, r5, r2
 8024cd8:	b2f6      	uxtb	r6, r6
 8024cda:	b2a4      	uxth	r4, r4
 8024cdc:	fb00 7003 	mla	r0, r0, r3, r7
 8024ce0:	fb06 2303 	mla	r3, r6, r3, r2
 8024ce4:	b29a      	uxth	r2, r3
 8024ce6:	1c63      	adds	r3, r4, #1
 8024ce8:	b280      	uxth	r0, r0
 8024cea:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024cee:	1c53      	adds	r3, r2, #1
 8024cf0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024cf4:	1c42      	adds	r2, r0, #1
 8024cf6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024cfa:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024cfe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d02:	0940      	lsrs	r0, r0, #5
 8024d04:	4323      	orrs	r3, r4
 8024d06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d0a:	4303      	orrs	r3, r0
 8024d0c:	800b      	strh	r3, [r1, #0]
 8024d0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d12:	2600      	movs	r6, #0
 8024d14:	e764      	b.n	8024be0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024d16:	2400      	movs	r4, #0
 8024d18:	4626      	mov	r6, r4
 8024d1a:	e778      	b.n	8024c0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d1c:	2400      	movs	r4, #0
 8024d1e:	e776      	b.n	8024c0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d20:	463c      	mov	r4, r7
 8024d22:	e774      	b.n	8024c0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d24:	2500      	movs	r5, #0
 8024d26:	e78e      	b.n	8024c46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024d28:	2300      	movs	r3, #0
 8024d2a:	461d      	mov	r5, r3
 8024d2c:	e79f      	b.n	8024c6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d2e:	4663      	mov	r3, ip
 8024d30:	4665      	mov	r5, ip
 8024d32:	e79c      	b.n	8024c6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d34:	2300      	movs	r3, #0
 8024d36:	e79a      	b.n	8024c6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d38:	463b      	mov	r3, r7
 8024d3a:	e798      	b.n	8024c6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d3c:	20012db4 	.word	0x20012db4

08024d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d44:	b093      	sub	sp, #76	; 0x4c
 8024d46:	461d      	mov	r5, r3
 8024d48:	920c      	str	r2, [sp, #48]	; 0x30
 8024d4a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024d4c:	9107      	str	r1, [sp, #28]
 8024d4e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024d52:	9011      	str	r0, [sp, #68]	; 0x44
 8024d54:	6850      	ldr	r0, [r2, #4]
 8024d56:	6812      	ldr	r2, [r2, #0]
 8024d58:	fb00 1303 	mla	r3, r0, r3, r1
 8024d5c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024d60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d62:	689b      	ldr	r3, [r3, #8]
 8024d64:	3301      	adds	r3, #1
 8024d66:	f023 0301 	bic.w	r3, r3, #1
 8024d6a:	9306      	str	r3, [sp, #24]
 8024d6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d6e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024d72:	681f      	ldr	r7, [r3, #0]
 8024d74:	9b07      	ldr	r3, [sp, #28]
 8024d76:	2b00      	cmp	r3, #0
 8024d78:	dc03      	bgt.n	8024d82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024d7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024d7c:	2b00      	cmp	r3, #0
 8024d7e:	f340 8267 	ble.w	8025250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024d82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024d8c:	1e48      	subs	r0, r1, #1
 8024d8e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024d92:	2d00      	cmp	r5, #0
 8024d94:	f340 80b8 	ble.w	8024f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024d98:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024d9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024da0:	d406      	bmi.n	8024db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024da2:	4586      	cmp	lr, r0
 8024da4:	da04      	bge.n	8024db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024da6:	2b00      	cmp	r3, #0
 8024da8:	db02      	blt.n	8024db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024daa:	4563      	cmp	r3, ip
 8024dac:	f2c0 80ad 	blt.w	8024f0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024db0:	f11e 0e01 	adds.w	lr, lr, #1
 8024db4:	f100 80a0 	bmi.w	8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024db8:	4571      	cmp	r1, lr
 8024dba:	f2c0 809d 	blt.w	8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024dbe:	3301      	adds	r3, #1
 8024dc0:	f100 809a 	bmi.w	8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024dc4:	429a      	cmp	r2, r3
 8024dc6:	f2c0 8097 	blt.w	8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024dca:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024dce:	9509      	str	r5, [sp, #36]	; 0x24
 8024dd0:	46c8      	mov	r8, r9
 8024dd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024dd4:	2b00      	cmp	r3, #0
 8024dd6:	f340 80b6 	ble.w	8024f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024dda:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024dde:	9308      	str	r3, [sp, #32]
 8024de0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024de2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024de6:	1423      	asrs	r3, r4, #16
 8024de8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024dec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024df0:	f100 813e 	bmi.w	8025070 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024df4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024df8:	455b      	cmp	r3, fp
 8024dfa:	f280 8139 	bge.w	8025070 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024dfe:	2800      	cmp	r0, #0
 8024e00:	f2c0 8136 	blt.w	8025070 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e04:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024e08:	4558      	cmp	r0, fp
 8024e0a:	f280 8131 	bge.w	8025070 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e0e:	9a06      	ldr	r2, [sp, #24]
 8024e10:	fb00 3302 	mla	r3, r0, r2, r3
 8024e14:	0858      	lsrs	r0, r3, #1
 8024e16:	07da      	lsls	r2, r3, #31
 8024e18:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024e1c:	9a08      	ldr	r2, [sp, #32]
 8024e1e:	bf54      	ite	pl
 8024e20:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024e24:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024e28:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e2c:	fa5f fc8c 	uxtb.w	ip, ip
 8024e30:	2a00      	cmp	r2, #0
 8024e32:	f000 80cb 	beq.w	8024fcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024e36:	1c58      	adds	r0, r3, #1
 8024e38:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024e3c:	07c0      	lsls	r0, r0, #31
 8024e3e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024e42:	bf54      	ite	pl
 8024e44:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024e48:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024e4c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024e50:	fa5f fe8e 	uxtb.w	lr, lr
 8024e54:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024e58:	b1b9      	cbz	r1, 8024e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024e5a:	4453      	add	r3, sl
 8024e5c:	0858      	lsrs	r0, r3, #1
 8024e5e:	07da      	lsls	r2, r3, #31
 8024e60:	5c38      	ldrb	r0, [r7, r0]
 8024e62:	bf54      	ite	pl
 8024e64:	f000 000f 	andpl.w	r0, r0, #15
 8024e68:	1100      	asrmi	r0, r0, #4
 8024e6a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024e6e:	b2c0      	uxtb	r0, r0
 8024e70:	900a      	str	r0, [sp, #40]	; 0x28
 8024e72:	1c58      	adds	r0, r3, #1
 8024e74:	0843      	lsrs	r3, r0, #1
 8024e76:	07c2      	lsls	r2, r0, #31
 8024e78:	5cfb      	ldrb	r3, [r7, r3]
 8024e7a:	bf54      	ite	pl
 8024e7c:	f003 030f 	andpl.w	r3, r3, #15
 8024e80:	111b      	asrmi	r3, r3, #4
 8024e82:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024e86:	b2db      	uxtb	r3, r3
 8024e88:	930e      	str	r3, [sp, #56]	; 0x38
 8024e8a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024e8e:	b289      	uxth	r1, r1
 8024e90:	fb02 f301 	mul.w	r3, r2, r1
 8024e94:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024e98:	0112      	lsls	r2, r2, #4
 8024e9a:	b289      	uxth	r1, r1
 8024e9c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024ea0:	1a40      	subs	r0, r0, r1
 8024ea2:	fa1f fe80 	uxth.w	lr, r0
 8024ea6:	1ad2      	subs	r2, r2, r3
 8024ea8:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024eaa:	b292      	uxth	r2, r2
 8024eac:	4342      	muls	r2, r0
 8024eae:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024eb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024eb4:	fb01 c102 	mla	r1, r1, r2, ip
 8024eb8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024eba:	fb03 1302 	mla	r3, r3, r2, r1
 8024ebe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024ec2:	2bff      	cmp	r3, #255	; 0xff
 8024ec4:	f040 8093 	bne.w	8024fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024ec8:	4bbe      	ldr	r3, [pc, #760]	; (80251c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024eca:	681a      	ldr	r2, [r3, #0]
 8024ecc:	4bbe      	ldr	r3, [pc, #760]	; (80251c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024ece:	0951      	lsrs	r1, r2, #5
 8024ed0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024ed4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024ed8:	430b      	orrs	r3, r1
 8024eda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ede:	4313      	orrs	r3, r2
 8024ee0:	f8a8 3000 	strh.w	r3, [r8]
 8024ee4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024ee6:	441c      	add	r4, r3
 8024ee8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024eea:	441e      	add	r6, r3
 8024eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024eee:	3b01      	subs	r3, #1
 8024ef0:	f108 0802 	add.w	r8, r8, #2
 8024ef4:	9309      	str	r3, [sp, #36]	; 0x24
 8024ef6:	e76c      	b.n	8024dd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024ef8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024efa:	441c      	add	r4, r3
 8024efc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024efe:	3d01      	subs	r5, #1
 8024f00:	441e      	add	r6, r3
 8024f02:	f109 0902 	add.w	r9, r9, #2
 8024f06:	e744      	b.n	8024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024f08:	d021      	beq.n	8024f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024f0a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024f0c:	1e6b      	subs	r3, r5, #1
 8024f0e:	fb00 4003 	mla	r0, r0, r3, r4
 8024f12:	1400      	asrs	r0, r0, #16
 8024f14:	f53f af59 	bmi.w	8024dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f18:	3901      	subs	r1, #1
 8024f1a:	4288      	cmp	r0, r1
 8024f1c:	f6bf af55 	bge.w	8024dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f20:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024f22:	fb01 6303 	mla	r3, r1, r3, r6
 8024f26:	141b      	asrs	r3, r3, #16
 8024f28:	f53f af4f 	bmi.w	8024dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f2c:	3a01      	subs	r2, #1
 8024f2e:	4293      	cmp	r3, r2
 8024f30:	f6bf af4b 	bge.w	8024dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024f38:	9308      	str	r3, [sp, #32]
 8024f3a:	46a8      	mov	r8, r5
 8024f3c:	46ce      	mov	lr, r9
 8024f3e:	f1b8 0f00 	cmp.w	r8, #0
 8024f42:	f300 80b5 	bgt.w	80250b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024f46:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024f4a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024f4e:	9b07      	ldr	r3, [sp, #28]
 8024f50:	2b00      	cmp	r3, #0
 8024f52:	f340 817d 	ble.w	8025250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024f56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024f5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024f5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024f62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024f64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024f68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024f6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024f70:	eef0 6a62 	vmov.f32	s13, s5
 8024f74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024f78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024f80:	ee16 4a90 	vmov	r4, s13
 8024f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024f88:	eef0 6a43 	vmov.f32	s13, s6
 8024f8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024f90:	ee12 2a90 	vmov	r2, s5
 8024f94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024f98:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f9c:	ee13 2a10 	vmov	r2, s6
 8024fa0:	931f      	str	r3, [sp, #124]	; 0x7c
 8024fa2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024fa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8024fa8:	9320      	str	r3, [sp, #128]	; 0x80
 8024faa:	9b07      	ldr	r3, [sp, #28]
 8024fac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024fae:	3b01      	subs	r3, #1
 8024fb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024fb4:	9307      	str	r3, [sp, #28]
 8024fb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024fb8:	ee16 6a90 	vmov	r6, s13
 8024fbc:	bf14      	ite	ne
 8024fbe:	461d      	movne	r5, r3
 8024fc0:	4615      	moveq	r5, r2
 8024fc2:	eeb0 3a67 	vmov.f32	s6, s15
 8024fc6:	eef0 2a47 	vmov.f32	s5, s14
 8024fca:	e6d3      	b.n	8024d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024fcc:	2900      	cmp	r1, #0
 8024fce:	f43f af5c 	beq.w	8024e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024fd2:	eb0a 0003 	add.w	r0, sl, r3
 8024fd6:	0843      	lsrs	r3, r0, #1
 8024fd8:	07c0      	lsls	r0, r0, #31
 8024fda:	5cfb      	ldrb	r3, [r7, r3]
 8024fdc:	bf54      	ite	pl
 8024fde:	f003 030f 	andpl.w	r3, r3, #15
 8024fe2:	111b      	asrmi	r3, r3, #4
 8024fe4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024fe8:	b2db      	uxtb	r3, r3
 8024fea:	930a      	str	r3, [sp, #40]	; 0x28
 8024fec:	e74d      	b.n	8024e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024fee:	2b00      	cmp	r3, #0
 8024ff0:	f43f af78 	beq.w	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ff4:	4a73      	ldr	r2, [pc, #460]	; (80251c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024ff6:	f8b8 c000 	ldrh.w	ip, [r8]
 8024ffa:	6810      	ldr	r0, [r2, #0]
 8024ffc:	fa1f fe83 	uxth.w	lr, r3
 8025000:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025004:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025008:	43db      	mvns	r3, r3
 802500a:	b2db      	uxtb	r3, r3
 802500c:	fb12 f20e 	smulbb	r2, r2, lr
 8025010:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025014:	fb01 2103 	mla	r1, r1, r3, r2
 8025018:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802501c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025020:	b2c0      	uxtb	r0, r0
 8025022:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025026:	fb1b fb0e 	smulbb	fp, fp, lr
 802502a:	b289      	uxth	r1, r1
 802502c:	fb10 fe0e 	smulbb	lr, r0, lr
 8025030:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025034:	fa5f fc8c 	uxtb.w	ip, ip
 8025038:	fb02 b203 	mla	r2, r2, r3, fp
 802503c:	1c48      	adds	r0, r1, #1
 802503e:	fb0c e303 	mla	r3, ip, r3, lr
 8025042:	b292      	uxth	r2, r2
 8025044:	b29b      	uxth	r3, r3
 8025046:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802504a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802504e:	f102 0b01 	add.w	fp, r2, #1
 8025052:	1c59      	adds	r1, r3, #1
 8025054:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025058:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802505c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025060:	0952      	lsrs	r2, r2, #5
 8025062:	4301      	orrs	r1, r0
 8025064:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025068:	4311      	orrs	r1, r2
 802506a:	f8a8 1000 	strh.w	r1, [r8]
 802506e:	e739      	b.n	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025070:	f113 0b01 	adds.w	fp, r3, #1
 8025074:	f53f af36 	bmi.w	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025078:	45dc      	cmp	ip, fp
 802507a:	f6ff af33 	blt.w	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802507e:	f110 0b01 	adds.w	fp, r0, #1
 8025082:	f53f af2f 	bmi.w	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025086:	45de      	cmp	lr, fp
 8025088:	f6ff af2c 	blt.w	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802508c:	9a08      	ldr	r2, [sp, #32]
 802508e:	9302      	str	r3, [sp, #8]
 8025090:	fa0f f38e 	sxth.w	r3, lr
 8025094:	9301      	str	r3, [sp, #4]
 8025096:	fa0f f38c 	sxth.w	r3, ip
 802509a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802509e:	9105      	str	r1, [sp, #20]
 80250a0:	9300      	str	r3, [sp, #0]
 80250a2:	463a      	mov	r2, r7
 80250a4:	4653      	mov	r3, sl
 80250a6:	4641      	mov	r1, r8
 80250a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80250aa:	f7ff fd73 	bl	8024b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80250ae:	e719      	b.n	8024ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250b0:	9906      	ldr	r1, [sp, #24]
 80250b2:	1422      	asrs	r2, r4, #16
 80250b4:	1433      	asrs	r3, r6, #16
 80250b6:	fb01 2303 	mla	r3, r1, r3, r2
 80250ba:	085a      	lsrs	r2, r3, #1
 80250bc:	07d9      	lsls	r1, r3, #31
 80250be:	5cba      	ldrb	r2, [r7, r2]
 80250c0:	bf54      	ite	pl
 80250c2:	f002 020f 	andpl.w	r2, r2, #15
 80250c6:	1112      	asrmi	r2, r2, #4
 80250c8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80250cc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80250d0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80250d4:	b2d2      	uxtb	r2, r2
 80250d6:	2800      	cmp	r0, #0
 80250d8:	d062      	beq.n	80251a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80250da:	f103 0a01 	add.w	sl, r3, #1
 80250de:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80250e2:	f01a 0f01 	tst.w	sl, #1
 80250e6:	5c79      	ldrb	r1, [r7, r1]
 80250e8:	bf0c      	ite	eq
 80250ea:	f001 010f 	andeq.w	r1, r1, #15
 80250ee:	1109      	asrne	r1, r1, #4
 80250f0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80250f4:	b2c9      	uxtb	r1, r1
 80250f6:	910f      	str	r1, [sp, #60]	; 0x3c
 80250f8:	f1bc 0f00 	cmp.w	ip, #0
 80250fc:	d019      	beq.n	8025132 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80250fe:	9908      	ldr	r1, [sp, #32]
 8025100:	440b      	add	r3, r1
 8025102:	0859      	lsrs	r1, r3, #1
 8025104:	f013 0f01 	tst.w	r3, #1
 8025108:	5c79      	ldrb	r1, [r7, r1]
 802510a:	bf0c      	ite	eq
 802510c:	f001 010f 	andeq.w	r1, r1, #15
 8025110:	1109      	asrne	r1, r1, #4
 8025112:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025116:	b2c9      	uxtb	r1, r1
 8025118:	3301      	adds	r3, #1
 802511a:	910b      	str	r1, [sp, #44]	; 0x2c
 802511c:	0859      	lsrs	r1, r3, #1
 802511e:	07db      	lsls	r3, r3, #31
 8025120:	5c79      	ldrb	r1, [r7, r1]
 8025122:	bf54      	ite	pl
 8025124:	f001 010f 	andpl.w	r1, r1, #15
 8025128:	1109      	asrmi	r1, r1, #4
 802512a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802512e:	b2c9      	uxtb	r1, r1
 8025130:	9110      	str	r1, [sp, #64]	; 0x40
 8025132:	b280      	uxth	r0, r0
 8025134:	fa1f fc8c 	uxth.w	ip, ip
 8025138:	fb00 f30c 	mul.w	r3, r0, ip
 802513c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025140:	0100      	lsls	r0, r0, #4
 8025142:	fa1f fc8c 	uxth.w	ip, ip
 8025146:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802514a:	eba1 010c 	sub.w	r1, r1, ip
 802514e:	fa1f fa81 	uxth.w	sl, r1
 8025152:	1ac0      	subs	r0, r0, r3
 8025154:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025156:	b280      	uxth	r0, r0
 8025158:	4348      	muls	r0, r1
 802515a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802515c:	fb02 020a 	mla	r2, r2, sl, r0
 8025160:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025164:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025166:	fb03 c302 	mla	r3, r3, r2, ip
 802516a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802516e:	2bff      	cmp	r3, #255	; 0xff
 8025170:	d12c      	bne.n	80251cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025172:	4b14      	ldr	r3, [pc, #80]	; (80251c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025174:	681a      	ldr	r2, [r3, #0]
 8025176:	4b14      	ldr	r3, [pc, #80]	; (80251c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025178:	0951      	lsrs	r1, r2, #5
 802517a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802517e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025182:	430b      	orrs	r3, r1
 8025184:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025188:	4313      	orrs	r3, r2
 802518a:	f8ae 3000 	strh.w	r3, [lr]
 802518e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025190:	441c      	add	r4, r3
 8025192:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025194:	f10e 0e02 	add.w	lr, lr, #2
 8025198:	441e      	add	r6, r3
 802519a:	f108 38ff 	add.w	r8, r8, #4294967295
 802519e:	e6ce      	b.n	8024f3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80251a0:	f1bc 0f00 	cmp.w	ip, #0
 80251a4:	d0c5      	beq.n	8025132 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80251a6:	9908      	ldr	r1, [sp, #32]
 80251a8:	440b      	add	r3, r1
 80251aa:	0859      	lsrs	r1, r3, #1
 80251ac:	07db      	lsls	r3, r3, #31
 80251ae:	5c79      	ldrb	r1, [r7, r1]
 80251b0:	bf54      	ite	pl
 80251b2:	f001 010f 	andpl.w	r1, r1, #15
 80251b6:	1109      	asrmi	r1, r1, #4
 80251b8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80251bc:	b2c9      	uxtb	r1, r1
 80251be:	910b      	str	r1, [sp, #44]	; 0x2c
 80251c0:	e7b7      	b.n	8025132 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80251c2:	bf00      	nop
 80251c4:	20012db4 	.word	0x20012db4
 80251c8:	fffff800 	.word	0xfffff800
 80251cc:	2b00      	cmp	r3, #0
 80251ce:	d0de      	beq.n	802518e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80251d0:	4a21      	ldr	r2, [pc, #132]	; (8025258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80251d2:	f8be c000 	ldrh.w	ip, [lr]
 80251d6:	6810      	ldr	r0, [r2, #0]
 80251d8:	fa1f fa83 	uxth.w	sl, r3
 80251dc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80251e0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80251e4:	43db      	mvns	r3, r3
 80251e6:	b2db      	uxtb	r3, r3
 80251e8:	fb12 f20a 	smulbb	r2, r2, sl
 80251ec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80251f0:	fb01 2103 	mla	r1, r1, r3, r2
 80251f4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80251f8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80251fc:	b2c0      	uxtb	r0, r0
 80251fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025202:	fa5f fc8c 	uxtb.w	ip, ip
 8025206:	fb10 f00a 	smulbb	r0, r0, sl
 802520a:	fb0c 0003 	mla	r0, ip, r3, r0
 802520e:	b289      	uxth	r1, r1
 8025210:	fb1b fb0a 	smulbb	fp, fp, sl
 8025214:	b280      	uxth	r0, r0
 8025216:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802521a:	fb02 b203 	mla	r2, r2, r3, fp
 802521e:	1c4b      	adds	r3, r1, #1
 8025220:	f100 0b01 	add.w	fp, r0, #1
 8025224:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025228:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802522c:	b292      	uxth	r2, r2
 802522e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8025232:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025236:	ea4b 0101 	orr.w	r1, fp, r1
 802523a:	f102 0b01 	add.w	fp, r2, #1
 802523e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025242:	0952      	lsrs	r2, r2, #5
 8025244:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025248:	4311      	orrs	r1, r2
 802524a:	f8ae 1000 	strh.w	r1, [lr]
 802524e:	e79e      	b.n	802518e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025250:	b013      	add	sp, #76	; 0x4c
 8025252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025256:	bf00      	nop
 8025258:	20012db4 	.word	0x20012db4

0802525c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802525c:	b570      	push	{r4, r5, r6, lr}
 802525e:	1208      	asrs	r0, r1, #8
 8025260:	b29e      	uxth	r6, r3
 8025262:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025266:	1213      	asrs	r3, r2, #8
 8025268:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802526c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025270:	fb13 f305 	smulbb	r3, r3, r5
 8025274:	fb10 f006 	smulbb	r0, r0, r6
 8025278:	4418      	add	r0, r3
 802527a:	10cc      	asrs	r4, r1, #3
 802527c:	10d3      	asrs	r3, r2, #3
 802527e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025282:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025286:	fb13 f305 	smulbb	r3, r3, r5
 802528a:	fb14 f406 	smulbb	r4, r4, r6
 802528e:	00c9      	lsls	r1, r1, #3
 8025290:	00d2      	lsls	r2, r2, #3
 8025292:	441c      	add	r4, r3
 8025294:	b2d2      	uxtb	r2, r2
 8025296:	b2cb      	uxtb	r3, r1
 8025298:	fb12 f205 	smulbb	r2, r2, r5
 802529c:	b280      	uxth	r0, r0
 802529e:	fb13 f306 	smulbb	r3, r3, r6
 80252a2:	4413      	add	r3, r2
 80252a4:	1c42      	adds	r2, r0, #1
 80252a6:	b29b      	uxth	r3, r3
 80252a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80252ac:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80252b0:	1c58      	adds	r0, r3, #1
 80252b2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80252b6:	b2a4      	uxth	r4, r4
 80252b8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80252bc:	4310      	orrs	r0, r2
 80252be:	1c62      	adds	r2, r4, #1
 80252c0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80252c4:	0964      	lsrs	r4, r4, #5
 80252c6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80252ca:	4320      	orrs	r0, r4
 80252cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080252d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80252d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252d4:	b08f      	sub	sp, #60	; 0x3c
 80252d6:	461c      	mov	r4, r3
 80252d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80252dc:	9004      	str	r0, [sp, #16]
 80252de:	460d      	mov	r5, r1
 80252e0:	4616      	mov	r6, r2
 80252e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80252e4:	2f00      	cmp	r7, #0
 80252e6:	f000 80f6 	beq.w	80254d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80252ea:	6820      	ldr	r0, [r4, #0]
 80252ec:	6861      	ldr	r1, [r4, #4]
 80252ee:	aa0a      	add	r2, sp, #40	; 0x28
 80252f0:	c203      	stmia	r2!, {r0, r1}
 80252f2:	6818      	ldr	r0, [r3, #0]
 80252f4:	6859      	ldr	r1, [r3, #4]
 80252f6:	aa0c      	add	r2, sp, #48	; 0x30
 80252f8:	c203      	stmia	r2!, {r0, r1}
 80252fa:	a80a      	add	r0, sp, #40	; 0x28
 80252fc:	f7ef fa9c 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025300:	4621      	mov	r1, r4
 8025302:	a80c      	add	r0, sp, #48	; 0x30
 8025304:	f7ef fadc 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025308:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802530c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025310:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8025314:	f002 0301 	and.w	r3, r2, #1
 8025318:	9306      	str	r3, [sp, #24]
 802531a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802531e:	f003 0101 	and.w	r1, r3, #1
 8025322:	9105      	str	r1, [sp, #20]
 8025324:	9805      	ldr	r0, [sp, #20]
 8025326:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802532a:	4403      	add	r3, r0
 802532c:	fb01 2303 	mla	r3, r1, r3, r2
 8025330:	f04f 0802 	mov.w	r8, #2
 8025334:	fb93 f3f8 	sdiv	r3, r3, r8
 8025338:	441d      	add	r5, r3
 802533a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802533e:	441a      	add	r2, r3
 8025340:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025344:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025348:	4419      	add	r1, r3
 802534a:	4b64      	ldr	r3, [pc, #400]	; (80254dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802534c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025350:	6818      	ldr	r0, [r3, #0]
 8025352:	6803      	ldr	r3, [r0, #0]
 8025354:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025356:	4798      	blx	r3
 8025358:	4a61      	ldr	r2, [pc, #388]	; (80254e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802535a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802535e:	8813      	ldrh	r3, [r2, #0]
 8025360:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025364:	2fff      	cmp	r7, #255	; 0xff
 8025366:	fb03 a404 	mla	r4, r3, r4, sl
 802536a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802536e:	f106 0604 	add.w	r6, r6, #4
 8025372:	4611      	mov	r1, r2
 8025374:	fb03 fb0b 	mul.w	fp, r3, fp
 8025378:	d06b      	beq.n	8025452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802537a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802537e:	9303      	str	r3, [sp, #12]
 8025380:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025384:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025388:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802538c:	9b07      	ldr	r3, [sp, #28]
 802538e:	42a3      	cmp	r3, r4
 8025390:	f240 809c 	bls.w	80254cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025394:	9b06      	ldr	r3, [sp, #24]
 8025396:	2b00      	cmp	r3, #0
 8025398:	d039      	beq.n	802540e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802539a:	782b      	ldrb	r3, [r5, #0]
 802539c:	8822      	ldrh	r2, [r4, #0]
 802539e:	9804      	ldr	r0, [sp, #16]
 80253a0:	f003 030f 	and.w	r3, r3, #15
 80253a4:	f105 0801 	add.w	r8, r5, #1
 80253a8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80253ac:	9b03      	ldr	r3, [sp, #12]
 80253ae:	9300      	str	r3, [sp, #0]
 80253b0:	463b      	mov	r3, r7
 80253b2:	f7ff ff53 	bl	802525c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80253b6:	f824 0b02 	strh.w	r0, [r4], #2
 80253ba:	f109 3bff 	add.w	fp, r9, #4294967295
 80253be:	f1bb 0f01 	cmp.w	fp, #1
 80253c2:	46a2      	mov	sl, r4
 80253c4:	f104 0404 	add.w	r4, r4, #4
 80253c8:	dd24      	ble.n	8025414 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80253ca:	f898 3000 	ldrb.w	r3, [r8]
 80253ce:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80253d2:	9804      	ldr	r0, [sp, #16]
 80253d4:	091b      	lsrs	r3, r3, #4
 80253d6:	f1ab 0b02 	sub.w	fp, fp, #2
 80253da:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80253de:	9b03      	ldr	r3, [sp, #12]
 80253e0:	9300      	str	r3, [sp, #0]
 80253e2:	463b      	mov	r3, r7
 80253e4:	f7ff ff3a 	bl	802525c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80253e8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80253ec:	f818 3b01 	ldrb.w	r3, [r8], #1
 80253f0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80253f4:	9804      	ldr	r0, [sp, #16]
 80253f6:	f003 030f 	and.w	r3, r3, #15
 80253fa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80253fe:	9b03      	ldr	r3, [sp, #12]
 8025400:	9300      	str	r3, [sp, #0]
 8025402:	463b      	mov	r3, r7
 8025404:	f7ff ff2a 	bl	802525c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025408:	f824 0c02 	strh.w	r0, [r4, #-2]
 802540c:	e7d7      	b.n	80253be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802540e:	46a8      	mov	r8, r5
 8025410:	46cb      	mov	fp, r9
 8025412:	e7d4      	b.n	80253be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025414:	d10e      	bne.n	8025434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025416:	f898 3000 	ldrb.w	r3, [r8]
 802541a:	f8ba 2000 	ldrh.w	r2, [sl]
 802541e:	9804      	ldr	r0, [sp, #16]
 8025420:	091b      	lsrs	r3, r3, #4
 8025422:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025426:	9b03      	ldr	r3, [sp, #12]
 8025428:	9300      	str	r3, [sp, #0]
 802542a:	463b      	mov	r3, r7
 802542c:	f7ff ff16 	bl	802525c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025430:	f82a 0b02 	strh.w	r0, [sl], #2
 8025434:	9b08      	ldr	r3, [sp, #32]
 8025436:	9a05      	ldr	r2, [sp, #20]
 8025438:	881c      	ldrh	r4, [r3, #0]
 802543a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802543e:	eba4 0409 	sub.w	r4, r4, r9
 8025442:	4413      	add	r3, r2
 8025444:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025448:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802544a:	fb93 f3f2 	sdiv	r3, r3, r2
 802544e:	441d      	add	r5, r3
 8025450:	e79c      	b.n	802538c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025452:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025456:	45a3      	cmp	fp, r4
 8025458:	d938      	bls.n	80254cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802545a:	9b06      	ldr	r3, [sp, #24]
 802545c:	b1f3      	cbz	r3, 802549c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802545e:	782b      	ldrb	r3, [r5, #0]
 8025460:	f003 030f 	and.w	r3, r3, #15
 8025464:	1c6a      	adds	r2, r5, #1
 8025466:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802546a:	8023      	strh	r3, [r4, #0]
 802546c:	f109 30ff 	add.w	r0, r9, #4294967295
 8025470:	3402      	adds	r4, #2
 8025472:	2801      	cmp	r0, #1
 8025474:	4623      	mov	r3, r4
 8025476:	f104 0404 	add.w	r4, r4, #4
 802547a:	dd12      	ble.n	80254a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802547c:	7813      	ldrb	r3, [r2, #0]
 802547e:	091b      	lsrs	r3, r3, #4
 8025480:	3802      	subs	r0, #2
 8025482:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025486:	f824 3c04 	strh.w	r3, [r4, #-4]
 802548a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802548e:	f003 030f 	and.w	r3, r3, #15
 8025492:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025496:	f824 3c02 	strh.w	r3, [r4, #-2]
 802549a:	e7ea      	b.n	8025472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802549c:	462a      	mov	r2, r5
 802549e:	4648      	mov	r0, r9
 80254a0:	e7e7      	b.n	8025472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80254a2:	d106      	bne.n	80254b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80254a4:	7812      	ldrb	r2, [r2, #0]
 80254a6:	0912      	lsrs	r2, r2, #4
 80254a8:	3302      	adds	r3, #2
 80254aa:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80254ae:	f823 2c02 	strh.w	r2, [r3, #-2]
 80254b2:	880c      	ldrh	r4, [r1, #0]
 80254b4:	9a05      	ldr	r2, [sp, #20]
 80254b6:	eba4 0409 	sub.w	r4, r4, r9
 80254ba:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80254be:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80254c2:	4413      	add	r3, r2
 80254c4:	fb93 f3f8 	sdiv	r3, r3, r8
 80254c8:	441d      	add	r5, r3
 80254ca:	e7c4      	b.n	8025456 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80254cc:	4b03      	ldr	r3, [pc, #12]	; (80254dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80254ce:	6818      	ldr	r0, [r3, #0]
 80254d0:	6803      	ldr	r3, [r0, #0]
 80254d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80254d4:	4798      	blx	r3
 80254d6:	b00f      	add	sp, #60	; 0x3c
 80254d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254dc:	20012da4 	.word	0x20012da4
 80254e0:	20012d9e 	.word	0x20012d9e

080254e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80254e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80254e6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80254ea:	2dff      	cmp	r5, #255	; 0xff
 80254ec:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80254f0:	d10c      	bne.n	802550c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80254f2:	2bff      	cmp	r3, #255	; 0xff
 80254f4:	d10a      	bne.n	802550c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80254f6:	4b25      	ldr	r3, [pc, #148]	; (802558c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80254f8:	0948      	lsrs	r0, r1, #5
 80254fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254fe:	403b      	ands	r3, r7
 8025500:	4318      	orrs	r0, r3
 8025502:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025506:	4308      	orrs	r0, r1
 8025508:	b280      	uxth	r0, r0
 802550a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802550c:	fb15 f503 	smulbb	r5, r5, r3
 8025510:	b2ab      	uxth	r3, r5
 8025512:	1c5d      	adds	r5, r3, #1
 8025514:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025518:	1214      	asrs	r4, r2, #8
 802551a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802551e:	fa1f fc85 	uxth.w	ip, r5
 8025522:	10d6      	asrs	r6, r2, #3
 8025524:	00d0      	lsls	r0, r2, #3
 8025526:	43ed      	mvns	r5, r5
 8025528:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802552c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025530:	b2eb      	uxtb	r3, r5
 8025532:	b2c0      	uxtb	r0, r0
 8025534:	fb12 f20c 	smulbb	r2, r2, ip
 8025538:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802553c:	fb04 2403 	mla	r4, r4, r3, r2
 8025540:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025544:	b2c8      	uxtb	r0, r1
 8025546:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802554a:	b2fd      	uxtb	r5, r7
 802554c:	fb10 f00c 	smulbb	r0, r0, ip
 8025550:	b2a4      	uxth	r4, r4
 8025552:	fb02 0003 	mla	r0, r2, r3, r0
 8025556:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802555a:	fb15 f50c 	smulbb	r5, r5, ip
 802555e:	fb06 5503 	mla	r5, r6, r3, r5
 8025562:	b283      	uxth	r3, r0
 8025564:	1c60      	adds	r0, r4, #1
 8025566:	b2ad      	uxth	r5, r5
 8025568:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802556c:	1c58      	adds	r0, r3, #1
 802556e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025572:	1c6b      	adds	r3, r5, #1
 8025574:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025578:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802557c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025580:	096d      	lsrs	r5, r5, #5
 8025582:	4320      	orrs	r0, r4
 8025584:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025588:	4328      	orrs	r0, r5
 802558a:	e7be      	b.n	802550a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802558c:	00fff800 	.word	0x00fff800

08025590 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025594:	461c      	mov	r4, r3
 8025596:	b08d      	sub	sp, #52	; 0x34
 8025598:	460d      	mov	r5, r1
 802559a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802559c:	6861      	ldr	r1, [r4, #4]
 802559e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80255a2:	4680      	mov	r8, r0
 80255a4:	6820      	ldr	r0, [r4, #0]
 80255a6:	4616      	mov	r6, r2
 80255a8:	aa08      	add	r2, sp, #32
 80255aa:	c203      	stmia	r2!, {r0, r1}
 80255ac:	6818      	ldr	r0, [r3, #0]
 80255ae:	6859      	ldr	r1, [r3, #4]
 80255b0:	aa0a      	add	r2, sp, #40	; 0x28
 80255b2:	c203      	stmia	r2!, {r0, r1}
 80255b4:	a808      	add	r0, sp, #32
 80255b6:	f7ef f93f 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255ba:	4621      	mov	r1, r4
 80255bc:	a80a      	add	r0, sp, #40	; 0x28
 80255be:	f7ef f97f 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80255c2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80255c6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80255ca:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80255ce:	f002 0301 	and.w	r3, r2, #1
 80255d2:	9303      	str	r3, [sp, #12]
 80255d4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80255d8:	f003 0101 	and.w	r1, r3, #1
 80255dc:	9102      	str	r1, [sp, #8]
 80255de:	9802      	ldr	r0, [sp, #8]
 80255e0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80255e4:	4403      	add	r3, r0
 80255e6:	fb01 2303 	mla	r3, r1, r3, r2
 80255ea:	f04f 0a02 	mov.w	sl, #2
 80255ee:	fb93 f3fa 	sdiv	r3, r3, sl
 80255f2:	441d      	add	r5, r3
 80255f4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80255f8:	441a      	add	r2, r3
 80255fa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80255fe:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8025602:	4a3f      	ldr	r2, [pc, #252]	; (8025700 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025604:	9205      	str	r2, [sp, #20]
 8025606:	4419      	add	r1, r3
 8025608:	6810      	ldr	r0, [r2, #0]
 802560a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802560e:	6803      	ldr	r3, [r0, #0]
 8025610:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025612:	4798      	blx	r3
 8025614:	4b3b      	ldr	r3, [pc, #236]	; (8025704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025616:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802561a:	8819      	ldrh	r1, [r3, #0]
 802561c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025620:	fb01 c404 	mla	r4, r1, r4, ip
 8025624:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025628:	434f      	muls	r7, r1
 802562a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802562e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025632:	3604      	adds	r6, #4
 8025634:	9204      	str	r2, [sp, #16]
 8025636:	9b04      	ldr	r3, [sp, #16]
 8025638:	429c      	cmp	r4, r3
 802563a:	d258      	bcs.n	80256ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802563c:	9b03      	ldr	r3, [sp, #12]
 802563e:	2b00      	cmp	r3, #0
 8025640:	d034      	beq.n	80256ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025642:	782b      	ldrb	r3, [r5, #0]
 8025644:	f003 030f 	and.w	r3, r3, #15
 8025648:	1c6f      	adds	r7, r5, #1
 802564a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802564e:	0e0b      	lsrs	r3, r1, #24
 8025650:	d006      	beq.n	8025660 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025652:	8822      	ldrh	r2, [r4, #0]
 8025654:	9300      	str	r3, [sp, #0]
 8025656:	4640      	mov	r0, r8
 8025658:	464b      	mov	r3, r9
 802565a:	f7ff ff43 	bl	80254e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802565e:	8020      	strh	r0, [r4, #0]
 8025660:	3402      	adds	r4, #2
 8025662:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025666:	f1ba 0f01 	cmp.w	sl, #1
 802566a:	dd22      	ble.n	80256b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802566c:	783b      	ldrb	r3, [r7, #0]
 802566e:	091b      	lsrs	r3, r3, #4
 8025670:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025674:	0e0b      	lsrs	r3, r1, #24
 8025676:	d006      	beq.n	8025686 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025678:	8822      	ldrh	r2, [r4, #0]
 802567a:	9300      	str	r3, [sp, #0]
 802567c:	4640      	mov	r0, r8
 802567e:	464b      	mov	r3, r9
 8025680:	f7ff ff30 	bl	80254e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025684:	8020      	strh	r0, [r4, #0]
 8025686:	f817 3b01 	ldrb.w	r3, [r7], #1
 802568a:	f003 030f 	and.w	r3, r3, #15
 802568e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025692:	0e0b      	lsrs	r3, r1, #24
 8025694:	d006      	beq.n	80256a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025696:	8862      	ldrh	r2, [r4, #2]
 8025698:	9300      	str	r3, [sp, #0]
 802569a:	4640      	mov	r0, r8
 802569c:	464b      	mov	r3, r9
 802569e:	f7ff ff21 	bl	80254e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256a2:	8060      	strh	r0, [r4, #2]
 80256a4:	3404      	adds	r4, #4
 80256a6:	f1aa 0a02 	sub.w	sl, sl, #2
 80256aa:	e7dc      	b.n	8025666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80256ac:	462f      	mov	r7, r5
 80256ae:	46da      	mov	sl, fp
 80256b0:	e7d9      	b.n	8025666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80256b2:	d10d      	bne.n	80256d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80256b4:	783b      	ldrb	r3, [r7, #0]
 80256b6:	091b      	lsrs	r3, r3, #4
 80256b8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256bc:	0e0b      	lsrs	r3, r1, #24
 80256be:	d006      	beq.n	80256ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80256c0:	8822      	ldrh	r2, [r4, #0]
 80256c2:	9300      	str	r3, [sp, #0]
 80256c4:	4640      	mov	r0, r8
 80256c6:	464b      	mov	r3, r9
 80256c8:	f7ff ff0c 	bl	80254e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256cc:	8020      	strh	r0, [r4, #0]
 80256ce:	3402      	adds	r4, #2
 80256d0:	9b06      	ldr	r3, [sp, #24]
 80256d2:	9a02      	ldr	r2, [sp, #8]
 80256d4:	881b      	ldrh	r3, [r3, #0]
 80256d6:	eba3 030b 	sub.w	r3, r3, fp
 80256da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80256de:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80256e2:	4413      	add	r3, r2
 80256e4:	9a07      	ldr	r2, [sp, #28]
 80256e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80256ea:	441d      	add	r5, r3
 80256ec:	e7a3      	b.n	8025636 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80256ee:	9b05      	ldr	r3, [sp, #20]
 80256f0:	6818      	ldr	r0, [r3, #0]
 80256f2:	6803      	ldr	r3, [r0, #0]
 80256f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80256f6:	4798      	blx	r3
 80256f8:	b00d      	add	sp, #52	; 0x34
 80256fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256fe:	bf00      	nop
 8025700:	20012da4 	.word	0x20012da4
 8025704:	20012d9e 	.word	0x20012d9e

08025708 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025708:	b570      	push	{r4, r5, r6, lr}
 802570a:	1214      	asrs	r4, r2, #8
 802570c:	788d      	ldrb	r5, [r1, #2]
 802570e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025712:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025716:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802571a:	fb15 f503 	smulbb	r5, r5, r3
 802571e:	fb04 5506 	mla	r5, r4, r6, r5
 8025722:	10d0      	asrs	r0, r2, #3
 8025724:	784c      	ldrb	r4, [r1, #1]
 8025726:	7809      	ldrb	r1, [r1, #0]
 8025728:	00d2      	lsls	r2, r2, #3
 802572a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802572e:	b2d2      	uxtb	r2, r2
 8025730:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025734:	fb14 f403 	smulbb	r4, r4, r3
 8025738:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802573c:	fb11 f303 	smulbb	r3, r1, r3
 8025740:	fb00 4406 	mla	r4, r0, r6, r4
 8025744:	fb02 3306 	mla	r3, r2, r6, r3
 8025748:	b2ad      	uxth	r5, r5
 802574a:	b29b      	uxth	r3, r3
 802574c:	b2a4      	uxth	r4, r4
 802574e:	1c68      	adds	r0, r5, #1
 8025750:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025754:	1c62      	adds	r2, r4, #1
 8025756:	1c58      	adds	r0, r3, #1
 8025758:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802575c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025760:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025764:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025768:	0964      	lsrs	r4, r4, #5
 802576a:	4328      	orrs	r0, r5
 802576c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025770:	4320      	orrs	r0, r4
 8025772:	bd70      	pop	{r4, r5, r6, pc}

08025774 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025778:	b08f      	sub	sp, #60	; 0x3c
 802577a:	461c      	mov	r4, r3
 802577c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025780:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025782:	4682      	mov	sl, r0
 8025784:	460e      	mov	r6, r1
 8025786:	4615      	mov	r5, r2
 8025788:	2f00      	cmp	r7, #0
 802578a:	f000 8142 	beq.w	8025a12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802578e:	6820      	ldr	r0, [r4, #0]
 8025790:	6861      	ldr	r1, [r4, #4]
 8025792:	aa0a      	add	r2, sp, #40	; 0x28
 8025794:	c203      	stmia	r2!, {r0, r1}
 8025796:	6818      	ldr	r0, [r3, #0]
 8025798:	6859      	ldr	r1, [r3, #4]
 802579a:	aa0c      	add	r2, sp, #48	; 0x30
 802579c:	c203      	stmia	r2!, {r0, r1}
 802579e:	a80a      	add	r0, sp, #40	; 0x28
 80257a0:	f7ef f84a 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80257a4:	4621      	mov	r1, r4
 80257a6:	a80c      	add	r0, sp, #48	; 0x30
 80257a8:	f7ef f88a 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80257ac:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80257b0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80257b4:	f002 0301 	and.w	r3, r2, #1
 80257b8:	9306      	str	r3, [sp, #24]
 80257ba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80257be:	f003 0101 	and.w	r1, r3, #1
 80257c2:	9105      	str	r1, [sp, #20]
 80257c4:	9805      	ldr	r0, [sp, #20]
 80257c6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80257ca:	4403      	add	r3, r0
 80257cc:	fb01 2303 	mla	r3, r1, r3, r2
 80257d0:	f04f 0802 	mov.w	r8, #2
 80257d4:	fb93 f3f8 	sdiv	r3, r3, r8
 80257d8:	441e      	add	r6, r3
 80257da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80257de:	441a      	add	r2, r3
 80257e0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80257e4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80257e8:	4419      	add	r1, r3
 80257ea:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80257ee:	9303      	str	r3, [sp, #12]
 80257f0:	4b89      	ldr	r3, [pc, #548]	; (8025a18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80257f2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80257f6:	6818      	ldr	r0, [r3, #0]
 80257f8:	6803      	ldr	r3, [r0, #0]
 80257fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80257fc:	4798      	blx	r3
 80257fe:	4a87      	ldr	r2, [pc, #540]	; (8025a1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025800:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025804:	8813      	ldrh	r3, [r2, #0]
 8025806:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802580a:	2fff      	cmp	r7, #255	; 0xff
 802580c:	fb03 9404 	mla	r4, r3, r4, r9
 8025810:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025814:	f105 0504 	add.w	r5, r5, #4
 8025818:	4694      	mov	ip, r2
 802581a:	fb03 f30b 	mul.w	r3, r3, fp
 802581e:	d071      	beq.n	8025904 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025820:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025824:	43f9      	mvns	r1, r7
 8025826:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802582a:	b2c9      	uxtb	r1, r1
 802582c:	9104      	str	r1, [sp, #16]
 802582e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025832:	9b07      	ldr	r3, [sp, #28]
 8025834:	42a3      	cmp	r3, r4
 8025836:	f240 80e7 	bls.w	8025a08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802583a:	9b06      	ldr	r3, [sp, #24]
 802583c:	2b00      	cmp	r3, #0
 802583e:	d03d      	beq.n	80258bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025840:	7831      	ldrb	r1, [r6, #0]
 8025842:	9b04      	ldr	r3, [sp, #16]
 8025844:	8822      	ldrh	r2, [r4, #0]
 8025846:	9300      	str	r3, [sp, #0]
 8025848:	f001 010f 	and.w	r1, r1, #15
 802584c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025850:	463b      	mov	r3, r7
 8025852:	4429      	add	r1, r5
 8025854:	4650      	mov	r0, sl
 8025856:	f7ff ff57 	bl	8025708 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802585a:	9b03      	ldr	r3, [sp, #12]
 802585c:	f824 0b02 	strh.w	r0, [r4], #2
 8025860:	f106 0801 	add.w	r8, r6, #1
 8025864:	f103 3bff 	add.w	fp, r3, #4294967295
 8025868:	f1bb 0f01 	cmp.w	fp, #1
 802586c:	46a1      	mov	r9, r4
 802586e:	f104 0404 	add.w	r4, r4, #4
 8025872:	dd27      	ble.n	80258c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025874:	f898 1000 	ldrb.w	r1, [r8]
 8025878:	9b04      	ldr	r3, [sp, #16]
 802587a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802587e:	9300      	str	r3, [sp, #0]
 8025880:	0909      	lsrs	r1, r1, #4
 8025882:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025886:	463b      	mov	r3, r7
 8025888:	4429      	add	r1, r5
 802588a:	4650      	mov	r0, sl
 802588c:	f7ff ff3c 	bl	8025708 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025890:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025894:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025898:	9b04      	ldr	r3, [sp, #16]
 802589a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802589e:	9300      	str	r3, [sp, #0]
 80258a0:	f001 010f 	and.w	r1, r1, #15
 80258a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258a8:	463b      	mov	r3, r7
 80258aa:	4429      	add	r1, r5
 80258ac:	4650      	mov	r0, sl
 80258ae:	f7ff ff2b 	bl	8025708 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80258b2:	f1ab 0b02 	sub.w	fp, fp, #2
 80258b6:	f824 0c02 	strh.w	r0, [r4, #-2]
 80258ba:	e7d5      	b.n	8025868 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80258bc:	46b0      	mov	r8, r6
 80258be:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80258c2:	e7d1      	b.n	8025868 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80258c4:	d10f      	bne.n	80258e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80258c6:	f898 1000 	ldrb.w	r1, [r8]
 80258ca:	9b04      	ldr	r3, [sp, #16]
 80258cc:	f8b9 2000 	ldrh.w	r2, [r9]
 80258d0:	9300      	str	r3, [sp, #0]
 80258d2:	0909      	lsrs	r1, r1, #4
 80258d4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258d8:	463b      	mov	r3, r7
 80258da:	4429      	add	r1, r5
 80258dc:	4650      	mov	r0, sl
 80258de:	f7ff ff13 	bl	8025708 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80258e2:	f829 0b02 	strh.w	r0, [r9], #2
 80258e6:	9b08      	ldr	r3, [sp, #32]
 80258e8:	9a05      	ldr	r2, [sp, #20]
 80258ea:	881c      	ldrh	r4, [r3, #0]
 80258ec:	9b03      	ldr	r3, [sp, #12]
 80258ee:	1ae4      	subs	r4, r4, r3
 80258f0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80258f4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80258f8:	4413      	add	r3, r2
 80258fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80258fc:	fb93 f3f2 	sdiv	r3, r3, r2
 8025900:	441e      	add	r6, r3
 8025902:	e796      	b.n	8025832 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025904:	4f46      	ldr	r7, [pc, #280]	; (8025a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025906:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802590a:	42a3      	cmp	r3, r4
 802590c:	d97c      	bls.n	8025a08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802590e:	9a06      	ldr	r2, [sp, #24]
 8025910:	2a00      	cmp	r2, #0
 8025912:	d054      	beq.n	80259be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025914:	7830      	ldrb	r0, [r6, #0]
 8025916:	f000 000f 	and.w	r0, r0, #15
 802591a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802591e:	eb05 0e00 	add.w	lr, r5, r0
 8025922:	5c28      	ldrb	r0, [r5, r0]
 8025924:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025928:	f89e e001 	ldrb.w	lr, [lr, #1]
 802592c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025930:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025934:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025938:	ea42 020e 	orr.w	r2, r2, lr
 802593c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025940:	f824 2b02 	strh.w	r2, [r4], #2
 8025944:	9a03      	ldr	r2, [sp, #12]
 8025946:	1c71      	adds	r1, r6, #1
 8025948:	f102 3eff 	add.w	lr, r2, #4294967295
 802594c:	f1be 0f01 	cmp.w	lr, #1
 8025950:	4620      	mov	r0, r4
 8025952:	f104 0404 	add.w	r4, r4, #4
 8025956:	dd36      	ble.n	80259c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025958:	7808      	ldrb	r0, [r1, #0]
 802595a:	0900      	lsrs	r0, r0, #4
 802595c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025960:	eb05 0a00 	add.w	sl, r5, r0
 8025964:	f1ae 0e02 	sub.w	lr, lr, #2
 8025968:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802596c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025970:	00d2      	lsls	r2, r2, #3
 8025972:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025976:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802597a:	ea49 0202 	orr.w	r2, r9, r2
 802597e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025982:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025986:	f824 2c04 	strh.w	r2, [r4, #-4]
 802598a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802598e:	f000 000f 	and.w	r0, r0, #15
 8025992:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025996:	eb05 0a00 	add.w	sl, r5, r0
 802599a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802599e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80259a2:	00d2      	lsls	r2, r2, #3
 80259a4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80259a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80259ac:	ea49 0202 	orr.w	r2, r9, r2
 80259b0:	f815 9000 	ldrb.w	r9, [r5, r0]
 80259b4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80259b8:	f824 2c02 	strh.w	r2, [r4, #-2]
 80259bc:	e7c6      	b.n	802594c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80259be:	4631      	mov	r1, r6
 80259c0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80259c4:	e7c2      	b.n	802594c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80259c6:	d111      	bne.n	80259ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80259c8:	7809      	ldrb	r1, [r1, #0]
 80259ca:	0909      	lsrs	r1, r1, #4
 80259cc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80259d0:	186c      	adds	r4, r5, r1
 80259d2:	5c69      	ldrb	r1, [r5, r1]
 80259d4:	78a2      	ldrb	r2, [r4, #2]
 80259d6:	7864      	ldrb	r4, [r4, #1]
 80259d8:	00e4      	lsls	r4, r4, #3
 80259da:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80259de:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80259e2:	4322      	orrs	r2, r4
 80259e4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80259e8:	f820 2b02 	strh.w	r2, [r0], #2
 80259ec:	9a03      	ldr	r2, [sp, #12]
 80259ee:	f8bc 4000 	ldrh.w	r4, [ip]
 80259f2:	9905      	ldr	r1, [sp, #20]
 80259f4:	1aa4      	subs	r4, r4, r2
 80259f6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80259fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80259fe:	440a      	add	r2, r1
 8025a00:	fb92 f2f8 	sdiv	r2, r2, r8
 8025a04:	4416      	add	r6, r2
 8025a06:	e780      	b.n	802590a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025a08:	4b03      	ldr	r3, [pc, #12]	; (8025a18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025a0a:	6818      	ldr	r0, [r3, #0]
 8025a0c:	6803      	ldr	r3, [r0, #0]
 8025a0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025a10:	4798      	blx	r3
 8025a12:	b00f      	add	sp, #60	; 0x3c
 8025a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a18:	20012da4 	.word	0x20012da4
 8025a1c:	20012d9e 	.word	0x20012d9e
 8025a20:	fffff800 	.word	0xfffff800

08025a24 <CRC_Lock>:
 8025a24:	b530      	push	{r4, r5, lr}
 8025a26:	4a20      	ldr	r2, [pc, #128]	; (8025aa8 <CRC_Lock+0x84>)
 8025a28:	6813      	ldr	r3, [r2, #0]
 8025a2a:	f023 0301 	bic.w	r3, r3, #1
 8025a2e:	6013      	str	r3, [r2, #0]
 8025a30:	4b1e      	ldr	r3, [pc, #120]	; (8025aac <CRC_Lock+0x88>)
 8025a32:	681a      	ldr	r2, [r3, #0]
 8025a34:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025a38:	4022      	ands	r2, r4
 8025a3a:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025a3e:	42aa      	cmp	r2, r5
 8025a40:	d005      	beq.n	8025a4e <CRC_Lock+0x2a>
 8025a42:	681b      	ldr	r3, [r3, #0]
 8025a44:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025a48:	4023      	ands	r3, r4
 8025a4a:	4293      	cmp	r3, r2
 8025a4c:	d124      	bne.n	8025a98 <CRC_Lock+0x74>
 8025a4e:	4b18      	ldr	r3, [pc, #96]	; (8025ab0 <CRC_Lock+0x8c>)
 8025a50:	681b      	ldr	r3, [r3, #0]
 8025a52:	bb0b      	cbnz	r3, 8025a98 <CRC_Lock+0x74>
 8025a54:	4b17      	ldr	r3, [pc, #92]	; (8025ab4 <CRC_Lock+0x90>)
 8025a56:	681a      	ldr	r2, [r3, #0]
 8025a58:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025a5c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025a60:	d00d      	beq.n	8025a7e <CRC_Lock+0x5a>
 8025a62:	681a      	ldr	r2, [r3, #0]
 8025a64:	f240 4483 	movw	r4, #1155	; 0x483
 8025a68:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025a6c:	42a2      	cmp	r2, r4
 8025a6e:	d006      	beq.n	8025a7e <CRC_Lock+0x5a>
 8025a70:	681b      	ldr	r3, [r3, #0]
 8025a72:	f240 4285 	movw	r2, #1157	; 0x485
 8025a76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025a7a:	4293      	cmp	r3, r2
 8025a7c:	d10c      	bne.n	8025a98 <CRC_Lock+0x74>
 8025a7e:	4b0e      	ldr	r3, [pc, #56]	; (8025ab8 <CRC_Lock+0x94>)
 8025a80:	2201      	movs	r2, #1
 8025a82:	601a      	str	r2, [r3, #0]
 8025a84:	681a      	ldr	r2, [r3, #0]
 8025a86:	2a00      	cmp	r2, #0
 8025a88:	d1fc      	bne.n	8025a84 <CRC_Lock+0x60>
 8025a8a:	4b0c      	ldr	r3, [pc, #48]	; (8025abc <CRC_Lock+0x98>)
 8025a8c:	6018      	str	r0, [r3, #0]
 8025a8e:	6818      	ldr	r0, [r3, #0]
 8025a90:	1a43      	subs	r3, r0, r1
 8025a92:	4258      	negs	r0, r3
 8025a94:	4158      	adcs	r0, r3
 8025a96:	bd30      	pop	{r4, r5, pc}
 8025a98:	4b09      	ldr	r3, [pc, #36]	; (8025ac0 <CRC_Lock+0x9c>)
 8025a9a:	2201      	movs	r2, #1
 8025a9c:	601a      	str	r2, [r3, #0]
 8025a9e:	681a      	ldr	r2, [r3, #0]
 8025aa0:	2a00      	cmp	r2, #0
 8025aa2:	d1fc      	bne.n	8025a9e <CRC_Lock+0x7a>
 8025aa4:	4b07      	ldr	r3, [pc, #28]	; (8025ac4 <CRC_Lock+0xa0>)
 8025aa6:	e7f1      	b.n	8025a8c <CRC_Lock+0x68>
 8025aa8:	e0002000 	.word	0xe0002000
 8025aac:	e000ed00 	.word	0xe000ed00
 8025ab0:	e0042000 	.word	0xe0042000
 8025ab4:	5c001000 	.word	0x5c001000
 8025ab8:	58024c08 	.word	0x58024c08
 8025abc:	58024c00 	.word	0x58024c00
 8025ac0:	40023008 	.word	0x40023008
 8025ac4:	40023000 	.word	0x40023000

08025ac8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025ac8:	6101      	str	r1, [r0, #16]
 8025aca:	4770      	bx	lr

08025acc <_ZN8touchgfx8Gestures4tickEv>:
 8025acc:	7b83      	ldrb	r3, [r0, #14]
 8025ace:	b14b      	cbz	r3, 8025ae4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025ad0:	8903      	ldrh	r3, [r0, #8]
 8025ad2:	3301      	adds	r3, #1
 8025ad4:	b29b      	uxth	r3, r3
 8025ad6:	2b07      	cmp	r3, #7
 8025ad8:	8103      	strh	r3, [r0, #8]
 8025ada:	bf81      	itttt	hi
 8025adc:	2300      	movhi	r3, #0
 8025ade:	8143      	strhhi	r3, [r0, #10]
 8025ae0:	8183      	strhhi	r3, [r0, #12]
 8025ae2:	7383      	strbhi	r3, [r0, #14]
 8025ae4:	4770      	bx	lr
	...

08025ae8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025ae8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025aec:	4698      	mov	r8, r3
 8025aee:	8883      	ldrh	r3, [r0, #4]
 8025af0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025af4:	eba8 0303 	sub.w	r3, r8, r3
 8025af8:	b21b      	sxth	r3, r3
 8025afa:	4604      	mov	r4, r0
 8025afc:	2b00      	cmp	r3, #0
 8025afe:	4617      	mov	r7, r2
 8025b00:	4a18      	ldr	r2, [pc, #96]	; (8025b64 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025b02:	9200      	str	r2, [sp, #0]
 8025b04:	bfb8      	it	lt
 8025b06:	425b      	neglt	r3, r3
 8025b08:	8aa2      	ldrh	r2, [r4, #20]
 8025b0a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025b0e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025b12:	b21b      	sxth	r3, r3
 8025b14:	460e      	mov	r6, r1
 8025b16:	4293      	cmp	r3, r2
 8025b18:	88c1      	ldrh	r1, [r0, #6]
 8025b1a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025b1e:	f04f 0000 	mov.w	r0, #0
 8025b22:	f88d 0004 	strb.w	r0, [sp, #4]
 8025b26:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025b2a:	dc07      	bgt.n	8025b3c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025b2c:	1a69      	subs	r1, r5, r1
 8025b2e:	b209      	sxth	r1, r1
 8025b30:	2900      	cmp	r1, #0
 8025b32:	bfb8      	it	lt
 8025b34:	4249      	neglt	r1, r1
 8025b36:	b209      	sxth	r1, r1
 8025b38:	428a      	cmp	r2, r1
 8025b3a:	da10      	bge.n	8025b5e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025b3c:	6920      	ldr	r0, [r4, #16]
 8025b3e:	6803      	ldr	r3, [r0, #0]
 8025b40:	4669      	mov	r1, sp
 8025b42:	685b      	ldr	r3, [r3, #4]
 8025b44:	4798      	blx	r3
 8025b46:	eba8 0606 	sub.w	r6, r8, r6
 8025b4a:	2300      	movs	r3, #0
 8025b4c:	1bef      	subs	r7, r5, r7
 8025b4e:	2001      	movs	r0, #1
 8025b50:	8123      	strh	r3, [r4, #8]
 8025b52:	8166      	strh	r6, [r4, #10]
 8025b54:	81a7      	strh	r7, [r4, #12]
 8025b56:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025b5a:	80e5      	strh	r5, [r4, #6]
 8025b5c:	73a0      	strb	r0, [r4, #14]
 8025b5e:	b004      	add	sp, #16
 8025b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b64:	0802e1b8 	.word	0x0802e1b8

08025b68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025b68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025b6a:	461e      	mov	r6, r3
 8025b6c:	1e4b      	subs	r3, r1, #1
 8025b6e:	2b01      	cmp	r3, #1
 8025b70:	b085      	sub	sp, #20
 8025b72:	4604      	mov	r4, r0
 8025b74:	460d      	mov	r5, r1
 8025b76:	4617      	mov	r7, r2
 8025b78:	d84b      	bhi.n	8025c12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025b7a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025b7e:	1cd3      	adds	r3, r2, #3
 8025b80:	b29b      	uxth	r3, r3
 8025b82:	2b06      	cmp	r3, #6
 8025b84:	d916      	bls.n	8025bb4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025b86:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025c28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025b8a:	f8cd c004 	str.w	ip, [sp, #4]
 8025b8e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025b92:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025b96:	6900      	ldr	r0, [r0, #16]
 8025b98:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025b9c:	f04f 0c00 	mov.w	ip, #0
 8025ba0:	f88d c008 	strb.w	ip, [sp, #8]
 8025ba4:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025ba8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025bac:	6803      	ldr	r3, [r0, #0]
 8025bae:	a901      	add	r1, sp, #4
 8025bb0:	689b      	ldr	r3, [r3, #8]
 8025bb2:	4798      	blx	r3
 8025bb4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025bb8:	1cd3      	adds	r3, r2, #3
 8025bba:	b29b      	uxth	r3, r3
 8025bbc:	2b06      	cmp	r3, #6
 8025bbe:	d916      	bls.n	8025bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025bc0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025c28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025bc4:	f8cd c004 	str.w	ip, [sp, #4]
 8025bc8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025bcc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025bd0:	6920      	ldr	r0, [r4, #16]
 8025bd2:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025bd6:	f04f 0c01 	mov.w	ip, #1
 8025bda:	f88d c008 	strb.w	ip, [sp, #8]
 8025bde:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025be2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025be6:	6803      	ldr	r3, [r0, #0]
 8025be8:	a901      	add	r1, sp, #4
 8025bea:	689b      	ldr	r3, [r3, #8]
 8025bec:	4798      	blx	r3
 8025bee:	4b0d      	ldr	r3, [pc, #52]	; (8025c24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025bf0:	9301      	str	r3, [sp, #4]
 8025bf2:	6920      	ldr	r0, [r4, #16]
 8025bf4:	f88d 5008 	strb.w	r5, [sp, #8]
 8025bf8:	2300      	movs	r3, #0
 8025bfa:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025bfe:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025c02:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c06:	6803      	ldr	r3, [r0, #0]
 8025c08:	a901      	add	r1, sp, #4
 8025c0a:	681b      	ldr	r3, [r3, #0]
 8025c0c:	4798      	blx	r3
 8025c0e:	b005      	add	sp, #20
 8025c10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025c12:	2900      	cmp	r1, #0
 8025c14:	d1eb      	bne.n	8025bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c16:	80a2      	strh	r2, [r4, #4]
 8025c18:	80c6      	strh	r6, [r0, #6]
 8025c1a:	60a1      	str	r1, [r4, #8]
 8025c1c:	81a1      	strh	r1, [r4, #12]
 8025c1e:	73a1      	strb	r1, [r4, #14]
 8025c20:	e7e5      	b.n	8025bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c22:	bf00      	nop
 8025c24:	0802e1a4 	.word	0x0802e1a4
 8025c28:	0802e1cc 	.word	0x0802e1cc

08025c2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025c2c:	10c9      	asrs	r1, r1, #3
 8025c2e:	2900      	cmp	r1, #0
 8025c30:	bfb8      	it	lt
 8025c32:	4249      	neglt	r1, r1
 8025c34:	2801      	cmp	r0, #1
 8025c36:	d108      	bne.n	8025c4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025c38:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025c3c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025c40:	4601      	mov	r1, r0
 8025c42:	dd02      	ble.n	8025c4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025c44:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025c48:	4770      	bx	lr
 8025c4a:	29ff      	cmp	r1, #255	; 0xff
 8025c4c:	bfa8      	it	ge
 8025c4e:	21ff      	movge	r1, #255	; 0xff
 8025c50:	4608      	mov	r0, r1
 8025c52:	4770      	bx	lr

08025c54 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025c54:	b410      	push	{r4}
 8025c56:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025c5a:	429c      	cmp	r4, r3
 8025c5c:	d803      	bhi.n	8025c66 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025c5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025c62:	f7ed b8ef 	b.w	8012e44 <_ZN8touchgfx7Outline6lineToEii>
 8025c66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025c6a:	4770      	bx	lr

08025c6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c70:	b08b      	sub	sp, #44	; 0x2c
 8025c72:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025c76:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025c7a:	9308      	str	r3, [sp, #32]
 8025c7c:	4606      	mov	r6, r0
 8025c7e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025c82:	9309      	str	r3, [sp, #36]	; 0x24
 8025c84:	468a      	mov	sl, r1
 8025c86:	f7ed fa4a 	bl	801311e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025c8a:	68b5      	ldr	r5, [r6, #8]
 8025c8c:	4604      	mov	r4, r0
 8025c8e:	2d00      	cmp	r5, #0
 8025c90:	d044      	beq.n	8025d1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025c92:	6873      	ldr	r3, [r6, #4]
 8025c94:	42ab      	cmp	r3, r5
 8025c96:	d33d      	bcc.n	8025d14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025c98:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025c9c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025ca0:	eb02 0b03 	add.w	fp, r2, r3
 8025ca4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025ca8:	fb02 1203 	mla	r2, r2, r3, r1
 8025cac:	9205      	str	r2, [sp, #20]
 8025cae:	1e6a      	subs	r2, r5, #1
 8025cb0:	9204      	str	r2, [sp, #16]
 8025cb2:	f04f 0800 	mov.w	r8, #0
 8025cb6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025cba:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025cbe:	454b      	cmp	r3, r9
 8025cc0:	463a      	mov	r2, r7
 8025cc2:	d008      	beq.n	8025cd6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025cc4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025cc8:	eb03 0b09 	add.w	fp, r3, r9
 8025ccc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025cd0:	fb03 1309 	mla	r3, r3, r9, r1
 8025cd4:	9305      	str	r3, [sp, #20]
 8025cd6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025cda:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025cde:	4498      	add	r8, r3
 8025ce0:	9b04      	ldr	r3, [sp, #16]
 8025ce2:	3b01      	subs	r3, #1
 8025ce4:	9304      	str	r3, [sp, #16]
 8025ce6:	9b04      	ldr	r3, [sp, #16]
 8025ce8:	3301      	adds	r3, #1
 8025cea:	d015      	beq.n	8025d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025cec:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025cf0:	42bb      	cmp	r3, r7
 8025cf2:	d117      	bne.n	8025d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025cf4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025cf8:	9b04      	ldr	r3, [sp, #16]
 8025cfa:	4548      	cmp	r0, r9
 8025cfc:	f103 33ff 	add.w	r3, r3, #4294967295
 8025d00:	d17f      	bne.n	8025e02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025d02:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025d06:	4401      	add	r1, r0
 8025d08:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025d0c:	4480      	add	r8, r0
 8025d0e:	e7e9      	b.n	8025ce4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025d10:	461f      	mov	r7, r3
 8025d12:	e044      	b.n	8025d9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8025d14:	2000      	movs	r0, #0
 8025d16:	e002      	b.n	8025d1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025d18:	2900      	cmp	r1, #0
 8025d1a:	d16f      	bne.n	8025dfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025d1c:	2001      	movs	r0, #1
 8025d1e:	b00b      	add	sp, #44	; 0x2c
 8025d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d24:	2900      	cmp	r1, #0
 8025d26:	d030      	beq.n	8025d8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025d28:	2f00      	cmp	r7, #0
 8025d2a:	db29      	blt.n	8025d80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025d2c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025d30:	42bb      	cmp	r3, r7
 8025d32:	dd25      	ble.n	8025d80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025d34:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025d38:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025d3c:	f7ff ff76 	bl	8025c2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025d42:	fb10 f003 	smulbb	r0, r0, r3
 8025d46:	b280      	uxth	r0, r0
 8025d48:	1c41      	adds	r1, r0, #1
 8025d4a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025d4e:	1209      	asrs	r1, r1, #8
 8025d50:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025d54:	d014      	beq.n	8025d80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025d56:	9808      	ldr	r0, [sp, #32]
 8025d58:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025d5a:	b2c9      	uxtb	r1, r1
 8025d5c:	b2ba      	uxth	r2, r7
 8025d5e:	9102      	str	r1, [sp, #8]
 8025d60:	2101      	movs	r1, #1
 8025d62:	4413      	add	r3, r2
 8025d64:	9101      	str	r1, [sp, #4]
 8025d66:	4402      	add	r2, r0
 8025d68:	fa0f f18b 	sxth.w	r1, fp
 8025d6c:	f8da 0000 	ldr.w	r0, [sl]
 8025d70:	9100      	str	r1, [sp, #0]
 8025d72:	6941      	ldr	r1, [r0, #20]
 8025d74:	b21b      	sxth	r3, r3
 8025d76:	460d      	mov	r5, r1
 8025d78:	b212      	sxth	r2, r2
 8025d7a:	9905      	ldr	r1, [sp, #20]
 8025d7c:	4650      	mov	r0, sl
 8025d7e:	47a8      	blx	r5
 8025d80:	9b04      	ldr	r3, [sp, #16]
 8025d82:	3301      	adds	r3, #1
 8025d84:	f107 0201 	add.w	r2, r7, #1
 8025d88:	d0c8      	beq.n	8025d1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025d8a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025d8e:	1abb      	subs	r3, r7, r2
 8025d90:	2b00      	cmp	r3, #0
 8025d92:	dd31      	ble.n	8025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d94:	2a00      	cmp	r2, #0
 8025d96:	dabb      	bge.n	8025d10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8025d98:	2f00      	cmp	r7, #0
 8025d9a:	dd2d      	ble.n	8025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d9c:	2200      	movs	r2, #0
 8025d9e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025da2:	19d1      	adds	r1, r2, r7
 8025da4:	4299      	cmp	r1, r3
 8025da6:	db02      	blt.n	8025dae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8025da8:	1a9f      	subs	r7, r3, r2
 8025daa:	2f00      	cmp	r7, #0
 8025dac:	dd24      	ble.n	8025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025dae:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8025db2:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025db6:	f7ff ff39 	bl	8025c2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025dba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025dbc:	fb10 f003 	smulbb	r0, r0, r3
 8025dc0:	b280      	uxth	r0, r0
 8025dc2:	1c41      	adds	r1, r0, #1
 8025dc4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025dc8:	1209      	asrs	r1, r1, #8
 8025dca:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025dce:	d013      	beq.n	8025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025dd0:	9808      	ldr	r0, [sp, #32]
 8025dd2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025dd4:	b292      	uxth	r2, r2
 8025dd6:	b2c9      	uxtb	r1, r1
 8025dd8:	4413      	add	r3, r2
 8025dda:	9102      	str	r1, [sp, #8]
 8025ddc:	4402      	add	r2, r0
 8025dde:	b23f      	sxth	r7, r7
 8025de0:	f8da 0000 	ldr.w	r0, [sl]
 8025de4:	9701      	str	r7, [sp, #4]
 8025de6:	fa0f f18b 	sxth.w	r1, fp
 8025dea:	9100      	str	r1, [sp, #0]
 8025dec:	6947      	ldr	r7, [r0, #20]
 8025dee:	9905      	ldr	r1, [sp, #20]
 8025df0:	b21b      	sxth	r3, r3
 8025df2:	b212      	sxth	r2, r2
 8025df4:	4650      	mov	r0, sl
 8025df6:	47b8      	blx	r7
 8025df8:	464b      	mov	r3, r9
 8025dfa:	e75c      	b.n	8025cb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025dfc:	2f00      	cmp	r7, #0
 8025dfe:	da95      	bge.n	8025d2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025e00:	e78c      	b.n	8025d1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025e02:	2900      	cmp	r1, #0
 8025e04:	d0f8      	beq.n	8025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e06:	e78f      	b.n	8025d28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025e08 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025e08:	4b4b      	ldr	r3, [pc, #300]	; (8025f38 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025e0a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025e0e:	2500      	movs	r5, #0
 8025e10:	f100 0620 	add.w	r6, r0, #32
 8025e14:	4604      	mov	r4, r0
 8025e16:	e9c0 3100 	strd	r3, r1, [r0]
 8025e1a:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025e1e:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8025e22:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8025e26:	f100 0718 	add.w	r7, r0, #24
 8025e2a:	4630      	mov	r0, r6
 8025e2c:	4690      	mov	r8, r2
 8025e2e:	f7ec fb41 	bl	80124b4 <_ZN8touchgfx7OutlineC1Ev>
 8025e32:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8025e36:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025e3a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025e3e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8025e42:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8025e46:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025e4a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025e4e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8025e52:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8025e56:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025e5a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025e5e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025e62:	9500      	str	r5, [sp, #0]
 8025e64:	4410      	add	r0, r2
 8025e66:	b280      	uxth	r0, r0
 8025e68:	fa0f fa80 	sxth.w	sl, r0
 8025e6c:	45aa      	cmp	sl, r5
 8025e6e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025e72:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8025e76:	dd5c      	ble.n	8025f32 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e78:	4591      	cmp	r9, r2
 8025e7a:	dd5a      	ble.n	8025f32 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e7c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025e80:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8025e84:	440b      	add	r3, r1
 8025e86:	b29b      	uxth	r3, r3
 8025e88:	b21d      	sxth	r5, r3
 8025e8a:	2d00      	cmp	r5, #0
 8025e8c:	dd51      	ble.n	8025f32 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e8e:	458e      	cmp	lr, r1
 8025e90:	dd4f      	ble.n	8025f32 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e92:	45d1      	cmp	r9, sl
 8025e94:	bfb8      	it	lt
 8025e96:	fa1f f089 	uxthlt.w	r0, r9
 8025e9a:	45ae      	cmp	lr, r5
 8025e9c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025ea0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8025ea4:	bfb8      	it	lt
 8025ea6:	fa1f f38e 	uxthlt.w	r3, lr
 8025eaa:	1a80      	subs	r0, r0, r2
 8025eac:	1a5b      	subs	r3, r3, r1
 8025eae:	f8ad 0004 	strh.w	r0, [sp, #4]
 8025eb2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025eb6:	f8ad 2000 	strh.w	r2, [sp]
 8025eba:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025ebe:	466d      	mov	r5, sp
 8025ec0:	e895 0003 	ldmia.w	r5, {r0, r1}
 8025ec4:	e887 0003 	stmia.w	r7, {r0, r1}
 8025ec8:	f8dc 3000 	ldr.w	r3, [ip]
 8025ecc:	4660      	mov	r0, ip
 8025ece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025ed0:	4639      	mov	r1, r7
 8025ed2:	4798      	blx	r3
 8025ed4:	6861      	ldr	r1, [r4, #4]
 8025ed6:	4628      	mov	r0, r5
 8025ed8:	3104      	adds	r1, #4
 8025eda:	f7ee fcf1 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025ede:	4638      	mov	r0, r7
 8025ee0:	f7ee fcaa 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025ee4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025ee8:	f8bd 2000 	ldrh.w	r2, [sp]
 8025eec:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025ef0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025ef4:	4630      	mov	r0, r6
 8025ef6:	f7ec fac1 	bl	801247c <_ZN8touchgfx7Outline5resetEv>
 8025efa:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025efe:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025f02:	015b      	lsls	r3, r3, #5
 8025f04:	60a3      	str	r3, [r4, #8]
 8025f06:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025f0a:	015b      	lsls	r3, r3, #5
 8025f0c:	60e3      	str	r3, [r4, #12]
 8025f0e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025f12:	015b      	lsls	r3, r3, #5
 8025f14:	6123      	str	r3, [r4, #16]
 8025f16:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025f1a:	015b      	lsls	r3, r3, #5
 8025f1c:	6163      	str	r3, [r4, #20]
 8025f1e:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025f22:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025f26:	4620      	mov	r0, r4
 8025f28:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025f2c:	b002      	add	sp, #8
 8025f2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025f32:	2300      	movs	r3, #0
 8025f34:	9301      	str	r3, [sp, #4]
 8025f36:	e7c2      	b.n	8025ebe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025f38:	0802e4f0 	.word	0x0802e4f0

08025f3c <_ZN8touchgfx6Canvas5closeEv>:
 8025f3c:	b538      	push	{r3, r4, r5, lr}
 8025f3e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025f42:	4604      	mov	r4, r0
 8025f44:	b193      	cbz	r3, 8025f6c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025f46:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025f4a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025f4e:	4213      	tst	r3, r2
 8025f50:	d10c      	bne.n	8025f6c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025f52:	f100 0520 	add.w	r5, r0, #32
 8025f56:	b123      	cbz	r3, 8025f62 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025f58:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025f5c:	4628      	mov	r0, r5
 8025f5e:	f7ff fe79 	bl	8025c54 <_ZN8touchgfx10Rasterizer6lineToEii>
 8025f62:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8025f66:	4628      	mov	r0, r5
 8025f68:	f7ff fe74 	bl	8025c54 <_ZN8touchgfx10Rasterizer6lineToEii>
 8025f6c:	2300      	movs	r3, #0
 8025f6e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025f72:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8025f76:	4298      	cmp	r0, r3
 8025f78:	bf34      	ite	cc
 8025f7a:	2000      	movcc	r0, #0
 8025f7c:	2001      	movcs	r0, #1
 8025f7e:	bd38      	pop	{r3, r4, r5, pc}

08025f80 <_ZN8touchgfx6Canvas6renderEh>:
 8025f80:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025f84:	4604      	mov	r4, r0
 8025f86:	6840      	ldr	r0, [r0, #4]
 8025f88:	6803      	ldr	r3, [r0, #0]
 8025f8a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025f8c:	460d      	mov	r5, r1
 8025f8e:	4798      	blx	r3
 8025f90:	fb10 f105 	smulbb	r1, r0, r5
 8025f94:	b289      	uxth	r1, r1
 8025f96:	1c4d      	adds	r5, r1, #1
 8025f98:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025f9c:	122d      	asrs	r5, r5, #8
 8025f9e:	f000 809d 	beq.w	80260dc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025fa2:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025fa6:	2b00      	cmp	r3, #0
 8025fa8:	f000 8098 	beq.w	80260dc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025fac:	4620      	mov	r0, r4
 8025fae:	f7ff ffc5 	bl	8025f3c <_ZN8touchgfx6Canvas5closeEv>
 8025fb2:	4607      	mov	r7, r0
 8025fb4:	2800      	cmp	r0, #0
 8025fb6:	d048      	beq.n	802604a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025fb8:	6863      	ldr	r3, [r4, #4]
 8025fba:	4e49      	ldr	r6, [pc, #292]	; (80260e0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8025fbc:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025fbe:	6837      	ldr	r7, [r6, #0]
 8025fc0:	6803      	ldr	r3, [r0, #0]
 8025fc2:	689b      	ldr	r3, [r3, #8]
 8025fc4:	4798      	blx	r3
 8025fc6:	4601      	mov	r1, r0
 8025fc8:	4638      	mov	r0, r7
 8025fca:	f7ea fbc5 	bl	8010758 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8025fce:	4607      	mov	r7, r0
 8025fd0:	f7dd fc00 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8025fd4:	6803      	ldr	r3, [r0, #0]
 8025fd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025fd8:	4798      	blx	r3
 8025fda:	4680      	mov	r8, r0
 8025fdc:	f7dd fbfa 	bl	80037d4 <_ZN8touchgfx3HAL3lcdEv>
 8025fe0:	6803      	ldr	r3, [r0, #0]
 8025fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025fe4:	4798      	blx	r3
 8025fe6:	280b      	cmp	r0, #11
 8025fe8:	d85d      	bhi.n	80260a6 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8025fea:	e8df f000 	tbb	[pc, r0]
 8025fee:	5e53      	.short	0x5e53
 8025ff0:	325c066e 	.word	0x325c066e
 8025ff4:	67676742 	.word	0x67676742
 8025ff8:	6767      	.short	0x6767
 8025ffa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025ffe:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026002:	2208      	movs	r2, #8
 8026004:	fb91 f2f2 	sdiv	r2, r1, r2
 8026008:	fb08 2303 	mla	r3, r8, r3, r2
 802600c:	441f      	add	r7, r3
 802600e:	424b      	negs	r3, r1
 8026010:	f003 0307 	and.w	r3, r3, #7
 8026014:	f001 0107 	and.w	r1, r1, #7
 8026018:	bf58      	it	pl
 802601a:	4259      	negpl	r1, r3
 802601c:	b2c9      	uxtb	r1, r1
 802601e:	b2ed      	uxtb	r5, r5
 8026020:	e9cd 1500 	strd	r1, r5, [sp]
 8026024:	6860      	ldr	r0, [r4, #4]
 8026026:	463a      	mov	r2, r7
 8026028:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802602a:	fa0f f388 	sxth.w	r3, r8
 802602e:	f104 0020 	add.w	r0, r4, #32
 8026032:	f7ff fe1b 	bl	8025c6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8026036:	6863      	ldr	r3, [r4, #4]
 8026038:	4607      	mov	r7, r0
 802603a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802603c:	6803      	ldr	r3, [r0, #0]
 802603e:	691b      	ldr	r3, [r3, #16]
 8026040:	4798      	blx	r3
 8026042:	6830      	ldr	r0, [r6, #0]
 8026044:	6803      	ldr	r3, [r0, #0]
 8026046:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026048:	4798      	blx	r3
 802604a:	4638      	mov	r0, r7
 802604c:	b002      	add	sp, #8
 802604e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026052:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026056:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802605a:	2204      	movs	r2, #4
 802605c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026060:	fb08 2303 	mla	r3, r8, r3, r2
 8026064:	441f      	add	r7, r3
 8026066:	424b      	negs	r3, r1
 8026068:	f003 0303 	and.w	r3, r3, #3
 802606c:	f001 0103 	and.w	r1, r1, #3
 8026070:	e7d2      	b.n	8026018 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026072:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026076:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802607a:	2900      	cmp	r1, #0
 802607c:	f04f 0202 	mov.w	r2, #2
 8026080:	fb91 f2f2 	sdiv	r2, r1, r2
 8026084:	f001 0101 	and.w	r1, r1, #1
 8026088:	fb08 2303 	mla	r3, r8, r3, r2
 802608c:	441f      	add	r7, r3
 802608e:	bfb8      	it	lt
 8026090:	4249      	neglt	r1, r1
 8026092:	e7c3      	b.n	802601c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8026094:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026098:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802609c:	fb08 f303 	mul.w	r3, r8, r3
 80260a0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80260a4:	441f      	add	r7, r3
 80260a6:	2100      	movs	r1, #0
 80260a8:	e7b9      	b.n	802601e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80260aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260ae:	fb08 f203 	mul.w	r2, r8, r3
 80260b2:	8b23      	ldrh	r3, [r4, #24]
 80260b4:	2103      	movs	r1, #3
 80260b6:	fb13 2301 	smlabb	r3, r3, r1, r2
 80260ba:	e7f3      	b.n	80260a4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80260bc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260c0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80260c4:	fb08 2303 	mla	r3, r8, r3, r2
 80260c8:	e7ec      	b.n	80260a4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80260ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260ce:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80260d2:	fb08 f303 	mul.w	r3, r8, r3
 80260d6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80260da:	e7e3      	b.n	80260a4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80260dc:	2701      	movs	r7, #1
 80260de:	e7b4      	b.n	802604a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80260e0:	20012da4 	.word	0x20012da4

080260e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80260e4:	b510      	push	{r4, lr}
 80260e6:	4b07      	ldr	r3, [pc, #28]	; (8026104 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80260e8:	781b      	ldrb	r3, [r3, #0]
 80260ea:	2b01      	cmp	r3, #1
 80260ec:	d108      	bne.n	8026100 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80260ee:	6843      	ldr	r3, [r0, #4]
 80260f0:	6814      	ldr	r4, [r2, #0]
 80260f2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80260f6:	680b      	ldr	r3, [r1, #0]
 80260f8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80260fc:	6013      	str	r3, [r2, #0]
 80260fe:	600c      	str	r4, [r1, #0]
 8026100:	bd10      	pop	{r4, pc}
 8026102:	bf00      	nop
 8026104:	20012d9c 	.word	0x20012d9c

08026108 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026108:	b513      	push	{r0, r1, r4, lr}
 802610a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802610e:	4604      	mov	r4, r0
 8026110:	e9cd 2100 	strd	r2, r1, [sp]
 8026114:	b9a3      	cbnz	r3, 8026140 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8026116:	466a      	mov	r2, sp
 8026118:	a901      	add	r1, sp, #4
 802611a:	4620      	mov	r0, r4
 802611c:	f7ff ffe2 	bl	80260e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026120:	68a3      	ldr	r3, [r4, #8]
 8026122:	9901      	ldr	r1, [sp, #4]
 8026124:	9a00      	ldr	r2, [sp, #0]
 8026126:	1ac9      	subs	r1, r1, r3
 8026128:	68e3      	ldr	r3, [r4, #12]
 802612a:	9101      	str	r1, [sp, #4]
 802612c:	1ad2      	subs	r2, r2, r3
 802612e:	2a00      	cmp	r2, #0
 8026130:	9200      	str	r2, [sp, #0]
 8026132:	da0b      	bge.n	802614c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8026134:	2301      	movs	r3, #1
 8026136:	2900      	cmp	r1, #0
 8026138:	da0e      	bge.n	8026158 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802613a:	f043 0304 	orr.w	r3, r3, #4
 802613e:	e013      	b.n	8026168 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026140:	f7ff fefc 	bl	8025f3c <_ZN8touchgfx6Canvas5closeEv>
 8026144:	2800      	cmp	r0, #0
 8026146:	d1e6      	bne.n	8026116 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026148:	b002      	add	sp, #8
 802614a:	bd10      	pop	{r4, pc}
 802614c:	6963      	ldr	r3, [r4, #20]
 802614e:	429a      	cmp	r2, r3
 8026150:	bfac      	ite	ge
 8026152:	2302      	movge	r3, #2
 8026154:	2300      	movlt	r3, #0
 8026156:	e7ee      	b.n	8026136 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026158:	6920      	ldr	r0, [r4, #16]
 802615a:	4281      	cmp	r1, r0
 802615c:	bfac      	ite	ge
 802615e:	2008      	movge	r0, #8
 8026160:	2000      	movlt	r0, #0
 8026162:	4318      	orrs	r0, r3
 8026164:	b2c3      	uxtb	r3, r0
 8026166:	b158      	cbz	r0, 8026180 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026168:	2200      	movs	r2, #0
 802616a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802616e:	9901      	ldr	r1, [sp, #4]
 8026170:	9a00      	ldr	r2, [sp, #0]
 8026172:	66a1      	str	r1, [r4, #104]	; 0x68
 8026174:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026176:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802617a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802617e:	e7e3      	b.n	8026148 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026180:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026184:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026188:	4298      	cmp	r0, r3
 802618a:	d803      	bhi.n	8026194 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802618c:	f104 0020 	add.w	r0, r4, #32
 8026190:	f7ec fe72 	bl	8012e78 <_ZN8touchgfx7Outline6moveToEii>
 8026194:	2301      	movs	r3, #1
 8026196:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802619a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802619e:	2300      	movs	r3, #0
 80261a0:	e7e5      	b.n	802616e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80261a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80261a4:	ab02      	add	r3, sp, #8
 80261a6:	4604      	mov	r4, r0
 80261a8:	f843 2d08 	str.w	r2, [r3, #-8]!
 80261ac:	9101      	str	r1, [sp, #4]
 80261ae:	461a      	mov	r2, r3
 80261b0:	a901      	add	r1, sp, #4
 80261b2:	f7ff ff97 	bl	80260e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80261b6:	68a3      	ldr	r3, [r4, #8]
 80261b8:	9901      	ldr	r1, [sp, #4]
 80261ba:	9a00      	ldr	r2, [sp, #0]
 80261bc:	1ac9      	subs	r1, r1, r3
 80261be:	68e3      	ldr	r3, [r4, #12]
 80261c0:	9101      	str	r1, [sp, #4]
 80261c2:	1ad2      	subs	r2, r2, r3
 80261c4:	2a00      	cmp	r2, #0
 80261c6:	9200      	str	r2, [sp, #0]
 80261c8:	db1c      	blt.n	8026204 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80261ca:	6963      	ldr	r3, [r4, #20]
 80261cc:	429a      	cmp	r2, r3
 80261ce:	bfac      	ite	ge
 80261d0:	2002      	movge	r0, #2
 80261d2:	2000      	movlt	r0, #0
 80261d4:	2900      	cmp	r1, #0
 80261d6:	db17      	blt.n	8026208 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80261d8:	6923      	ldr	r3, [r4, #16]
 80261da:	4299      	cmp	r1, r3
 80261dc:	bfac      	ite	ge
 80261de:	2308      	movge	r3, #8
 80261e0:	2300      	movlt	r3, #0
 80261e2:	4303      	orrs	r3, r0
 80261e4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80261e8:	b2dd      	uxtb	r5, r3
 80261ea:	b978      	cbnz	r0, 802620c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80261ec:	f104 0020 	add.w	r0, r4, #32
 80261f0:	f7ff fd30 	bl	8025c54 <_ZN8touchgfx10Rasterizer6lineToEii>
 80261f4:	9b01      	ldr	r3, [sp, #4]
 80261f6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80261f8:	9b00      	ldr	r3, [sp, #0]
 80261fa:	6623      	str	r3, [r4, #96]	; 0x60
 80261fc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026200:	b002      	add	sp, #8
 8026202:	bd70      	pop	{r4, r5, r6, pc}
 8026204:	2001      	movs	r0, #1
 8026206:	e7e5      	b.n	80261d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026208:	2304      	movs	r3, #4
 802620a:	e7ea      	b.n	80261e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802620c:	b113      	cbz	r3, 8026214 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802620e:	ea10 0305 	ands.w	r3, r0, r5
 8026212:	d11c      	bne.n	802624e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8026214:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026218:	f104 0620 	add.w	r6, r4, #32
 802621c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026220:	b98b      	cbnz	r3, 8026246 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8026222:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026226:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802622a:	4298      	cmp	r0, r3
 802622c:	d802      	bhi.n	8026234 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802622e:	4630      	mov	r0, r6
 8026230:	f7ec fe22 	bl	8012e78 <_ZN8touchgfx7Outline6moveToEii>
 8026234:	2301      	movs	r3, #1
 8026236:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802623a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802623e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8026242:	4630      	mov	r0, r6
 8026244:	e7d4      	b.n	80261f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8026246:	4630      	mov	r0, r6
 8026248:	f7ff fd04 	bl	8025c54 <_ZN8touchgfx10Rasterizer6lineToEii>
 802624c:	e7f7      	b.n	802623e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802624e:	461d      	mov	r5, r3
 8026250:	e7d0      	b.n	80261f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08026254 <_ZN8touchgfx6CanvasD1Ev>:
 8026254:	b510      	push	{r4, lr}
 8026256:	4b04      	ldr	r3, [pc, #16]	; (8026268 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026258:	4604      	mov	r4, r0
 802625a:	f840 3b20 	str.w	r3, [r0], #32
 802625e:	f7ec f905 	bl	801246c <_ZN8touchgfx7OutlineD1Ev>
 8026262:	4620      	mov	r0, r4
 8026264:	bd10      	pop	{r4, pc}
 8026266:	bf00      	nop
 8026268:	0802e4f0 	.word	0x0802e4f0

0802626c <_ZN8touchgfx6CanvasD0Ev>:
 802626c:	b510      	push	{r4, lr}
 802626e:	4604      	mov	r4, r0
 8026270:	f7ff fff0 	bl	8026254 <_ZN8touchgfx6CanvasD1Ev>
 8026274:	4620      	mov	r0, r4
 8026276:	2170      	movs	r1, #112	; 0x70
 8026278:	f002 fd09 	bl	8028c8e <_ZdlPvj>
 802627c:	4620      	mov	r0, r4
 802627e:	bd10      	pop	{r4, pc}

08026280 <_ZN8touchgfx6CircleD1Ev>:
 8026280:	4770      	bx	lr

08026282 <_ZN8touchgfx6CircleD0Ev>:
 8026282:	b510      	push	{r4, lr}
 8026284:	2148      	movs	r1, #72	; 0x48
 8026286:	4604      	mov	r4, r0
 8026288:	f002 fd01 	bl	8028c8e <_ZdlPvj>
 802628c:	4620      	mov	r0, r4
 802628e:	bd10      	pop	{r4, pc}

08026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026290:	b508      	push	{r3, lr}
 8026292:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026296:	f7ea fdb5 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802629a:	bd08      	pop	{r3, pc}

0802629c <_ZN8touchgfx6CircleC1Ev>:
 802629c:	b510      	push	{r4, lr}
 802629e:	4604      	mov	r4, r0
 80262a0:	f7ea fc4c 	bl	8010b3c <_ZN8touchgfx12CanvasWidgetC1Ev>
 80262a4:	4b08      	ldr	r3, [pc, #32]	; (80262c8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80262a6:	6023      	str	r3, [r4, #0]
 80262a8:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80262ac:	2300      	movs	r3, #0
 80262ae:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80262b2:	f24b 4205 	movw	r2, #46085	; 0xb405
 80262b6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80262ba:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80262be:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80262c2:	60a3      	str	r3, [r4, #8]
 80262c4:	4620      	mov	r0, r4
 80262c6:	bd10      	pop	{r4, pc}
 80262c8:	0802e504 	.word	0x0802e504

080262cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80262cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80262d0:	428a      	cmp	r2, r1
 80262d2:	4680      	mov	r8, r0
 80262d4:	4610      	mov	r0, r2
 80262d6:	4699      	mov	r9, r3
 80262d8:	bfa6      	itte	ge
 80262da:	460a      	movge	r2, r1
 80262dc:	4603      	movge	r3, r0
 80262de:	460b      	movlt	r3, r1
 80262e0:	1a99      	subs	r1, r3, r2
 80262e2:	b085      	sub	sp, #20
 80262e4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80262e8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80262ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80262ee:	bfa4      	itt	ge
 80262f0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80262f4:	2200      	movge	r2, #0
 80262f6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80262fa:	9300      	str	r3, [sp, #0]
 80262fc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8026300:	f102 0b01 	add.w	fp, r2, #1
 8026304:	2c00      	cmp	r4, #0
 8026306:	f040 80af 	bne.w	8026468 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802630a:	4610      	mov	r0, r2
 802630c:	9201      	str	r2, [sp, #4]
 802630e:	f7ea fd79 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026312:	a903      	add	r1, sp, #12
 8026314:	9003      	str	r0, [sp, #12]
 8026316:	4650      	mov	r0, sl
 8026318:	f7ea fc3c 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802631c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026320:	9a01      	ldr	r2, [sp, #4]
 8026322:	4408      	add	r0, r1
 8026324:	f8d9 1000 	ldr.w	r1, [r9]
 8026328:	4281      	cmp	r1, r0
 802632a:	bfc8      	it	gt
 802632c:	f8c9 0000 	strgt.w	r0, [r9]
 8026330:	6839      	ldr	r1, [r7, #0]
 8026332:	4288      	cmp	r0, r1
 8026334:	bfc8      	it	gt
 8026336:	6038      	strgt	r0, [r7, #0]
 8026338:	4610      	mov	r0, r2
 802633a:	f7ff ffa9 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802633e:	a903      	add	r1, sp, #12
 8026340:	9003      	str	r0, [sp, #12]
 8026342:	4650      	mov	r0, sl
 8026344:	f7ea fc26 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026348:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802634c:	1a10      	subs	r0, r2, r0
 802634e:	6832      	ldr	r2, [r6, #0]
 8026350:	4282      	cmp	r2, r0
 8026352:	bfc8      	it	gt
 8026354:	6030      	strgt	r0, [r6, #0]
 8026356:	682a      	ldr	r2, [r5, #0]
 8026358:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802635c:	4290      	cmp	r0, r2
 802635e:	fb9b f2f1 	sdiv	r2, fp, r1
 8026362:	fb01 b212 	mls	r2, r1, r2, fp
 8026366:	eba1 0202 	sub.w	r2, r1, r2
 802636a:	bfc8      	it	gt
 802636c:	6028      	strgt	r0, [r5, #0]
 802636e:	fb92 f0f1 	sdiv	r0, r2, r1
 8026372:	fb01 2210 	mls	r2, r1, r0, r2
 8026376:	4493      	add	fp, r2
 8026378:	9b00      	ldr	r3, [sp, #0]
 802637a:	455b      	cmp	r3, fp
 802637c:	db2a      	blt.n	80263d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802637e:	4658      	mov	r0, fp
 8026380:	f7ea fd40 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026384:	a903      	add	r1, sp, #12
 8026386:	9003      	str	r0, [sp, #12]
 8026388:	4650      	mov	r0, sl
 802638a:	f7ea fc03 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802638e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026392:	4410      	add	r0, r2
 8026394:	f8d9 2000 	ldr.w	r2, [r9]
 8026398:	4282      	cmp	r2, r0
 802639a:	bfc8      	it	gt
 802639c:	f8c9 0000 	strgt.w	r0, [r9]
 80263a0:	683a      	ldr	r2, [r7, #0]
 80263a2:	4290      	cmp	r0, r2
 80263a4:	bfc8      	it	gt
 80263a6:	6038      	strgt	r0, [r7, #0]
 80263a8:	4658      	mov	r0, fp
 80263aa:	f7ff ff71 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80263ae:	a903      	add	r1, sp, #12
 80263b0:	9003      	str	r0, [sp, #12]
 80263b2:	4650      	mov	r0, sl
 80263b4:	f7ea fbee 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80263b8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80263bc:	1a10      	subs	r0, r2, r0
 80263be:	6832      	ldr	r2, [r6, #0]
 80263c0:	4282      	cmp	r2, r0
 80263c2:	bfc8      	it	gt
 80263c4:	6030      	strgt	r0, [r6, #0]
 80263c6:	682a      	ldr	r2, [r5, #0]
 80263c8:	4290      	cmp	r0, r2
 80263ca:	bfc8      	it	gt
 80263cc:	6028      	strgt	r0, [r5, #0]
 80263ce:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80263d2:	e7d1      	b.n	8026378 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80263d4:	9b00      	ldr	r3, [sp, #0]
 80263d6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80263da:	455b      	cmp	r3, fp
 80263dc:	dd27      	ble.n	802642e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80263de:	4618      	mov	r0, r3
 80263e0:	f7ea fd10 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80263e4:	a903      	add	r1, sp, #12
 80263e6:	9003      	str	r0, [sp, #12]
 80263e8:	4650      	mov	r0, sl
 80263ea:	f7ea fbd3 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80263ee:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80263f2:	4410      	add	r0, r2
 80263f4:	f8d9 2000 	ldr.w	r2, [r9]
 80263f8:	4282      	cmp	r2, r0
 80263fa:	bfc8      	it	gt
 80263fc:	f8c9 0000 	strgt.w	r0, [r9]
 8026400:	683a      	ldr	r2, [r7, #0]
 8026402:	4290      	cmp	r0, r2
 8026404:	bfc8      	it	gt
 8026406:	6038      	strgt	r0, [r7, #0]
 8026408:	9800      	ldr	r0, [sp, #0]
 802640a:	f7ff ff41 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802640e:	a903      	add	r1, sp, #12
 8026410:	9003      	str	r0, [sp, #12]
 8026412:	4650      	mov	r0, sl
 8026414:	f7ea fbbe 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026418:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802641c:	1a10      	subs	r0, r2, r0
 802641e:	6832      	ldr	r2, [r6, #0]
 8026420:	4282      	cmp	r2, r0
 8026422:	bfc8      	it	gt
 8026424:	6030      	strgt	r0, [r6, #0]
 8026426:	682a      	ldr	r2, [r5, #0]
 8026428:	4290      	cmp	r0, r2
 802642a:	bfc8      	it	gt
 802642c:	6028      	strgt	r0, [r5, #0]
 802642e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026432:	f8d9 1000 	ldr.w	r1, [r9]
 8026436:	4291      	cmp	r1, r2
 8026438:	bfc8      	it	gt
 802643a:	f8c9 2000 	strgt.w	r2, [r9]
 802643e:	683a      	ldr	r2, [r7, #0]
 8026440:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8026444:	429a      	cmp	r2, r3
 8026446:	bfb8      	it	lt
 8026448:	603b      	strlt	r3, [r7, #0]
 802644a:	6832      	ldr	r2, [r6, #0]
 802644c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026450:	429a      	cmp	r2, r3
 8026452:	bfc8      	it	gt
 8026454:	6033      	strgt	r3, [r6, #0]
 8026456:	682a      	ldr	r2, [r5, #0]
 8026458:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802645c:	429a      	cmp	r2, r3
 802645e:	da00      	bge.n	8026462 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026460:	602b      	str	r3, [r5, #0]
 8026462:	b005      	add	sp, #20
 8026464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026468:	2002      	movs	r0, #2
 802646a:	3401      	adds	r4, #1
 802646c:	fb94 f4f0 	sdiv	r4, r4, r0
 8026470:	4610      	mov	r0, r2
 8026472:	9201      	str	r2, [sp, #4]
 8026474:	f7ea fcc6 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026478:	a903      	add	r1, sp, #12
 802647a:	9003      	str	r0, [sp, #12]
 802647c:	4650      	mov	r0, sl
 802647e:	f7ea fb89 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026482:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026486:	9a01      	ldr	r2, [sp, #4]
 8026488:	4408      	add	r0, r1
 802648a:	f8d9 1000 	ldr.w	r1, [r9]
 802648e:	1b03      	subs	r3, r0, r4
 8026490:	4299      	cmp	r1, r3
 8026492:	bfc8      	it	gt
 8026494:	f8c9 3000 	strgt.w	r3, [r9]
 8026498:	6839      	ldr	r1, [r7, #0]
 802649a:	428b      	cmp	r3, r1
 802649c:	bfc8      	it	gt
 802649e:	603b      	strgt	r3, [r7, #0]
 80264a0:	f8d9 1000 	ldr.w	r1, [r9]
 80264a4:	4420      	add	r0, r4
 80264a6:	4281      	cmp	r1, r0
 80264a8:	bfc8      	it	gt
 80264aa:	f8c9 0000 	strgt.w	r0, [r9]
 80264ae:	6839      	ldr	r1, [r7, #0]
 80264b0:	4288      	cmp	r0, r1
 80264b2:	bfc8      	it	gt
 80264b4:	6038      	strgt	r0, [r7, #0]
 80264b6:	4610      	mov	r0, r2
 80264b8:	f7ff feea 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80264bc:	a903      	add	r1, sp, #12
 80264be:	9003      	str	r0, [sp, #12]
 80264c0:	4650      	mov	r0, sl
 80264c2:	f7ea fb67 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264c6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80264ca:	1a10      	subs	r0, r2, r0
 80264cc:	6832      	ldr	r2, [r6, #0]
 80264ce:	1b01      	subs	r1, r0, r4
 80264d0:	428a      	cmp	r2, r1
 80264d2:	bfc8      	it	gt
 80264d4:	6031      	strgt	r1, [r6, #0]
 80264d6:	682a      	ldr	r2, [r5, #0]
 80264d8:	4291      	cmp	r1, r2
 80264da:	bfc8      	it	gt
 80264dc:	6029      	strgt	r1, [r5, #0]
 80264de:	6832      	ldr	r2, [r6, #0]
 80264e0:	4420      	add	r0, r4
 80264e2:	4282      	cmp	r2, r0
 80264e4:	bfc8      	it	gt
 80264e6:	6030      	strgt	r0, [r6, #0]
 80264e8:	682a      	ldr	r2, [r5, #0]
 80264ea:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80264ee:	4290      	cmp	r0, r2
 80264f0:	fb9b f2f1 	sdiv	r2, fp, r1
 80264f4:	fb01 b212 	mls	r2, r1, r2, fp
 80264f8:	eba1 0202 	sub.w	r2, r1, r2
 80264fc:	bfc8      	it	gt
 80264fe:	6028      	strgt	r0, [r5, #0]
 8026500:	fb92 f0f1 	sdiv	r0, r2, r1
 8026504:	fb01 2210 	mls	r2, r1, r0, r2
 8026508:	4493      	add	fp, r2
 802650a:	9b00      	ldr	r3, [sp, #0]
 802650c:	455b      	cmp	r3, fp
 802650e:	db40      	blt.n	8026592 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026510:	4658      	mov	r0, fp
 8026512:	f7ea fc77 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026516:	a903      	add	r1, sp, #12
 8026518:	9003      	str	r0, [sp, #12]
 802651a:	4650      	mov	r0, sl
 802651c:	f7ea fb3a 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026520:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026524:	4410      	add	r0, r2
 8026526:	f8d9 2000 	ldr.w	r2, [r9]
 802652a:	1b01      	subs	r1, r0, r4
 802652c:	428a      	cmp	r2, r1
 802652e:	bfc8      	it	gt
 8026530:	f8c9 1000 	strgt.w	r1, [r9]
 8026534:	683a      	ldr	r2, [r7, #0]
 8026536:	4291      	cmp	r1, r2
 8026538:	bfc8      	it	gt
 802653a:	6039      	strgt	r1, [r7, #0]
 802653c:	f8d9 2000 	ldr.w	r2, [r9]
 8026540:	4420      	add	r0, r4
 8026542:	4282      	cmp	r2, r0
 8026544:	bfc8      	it	gt
 8026546:	f8c9 0000 	strgt.w	r0, [r9]
 802654a:	683a      	ldr	r2, [r7, #0]
 802654c:	4290      	cmp	r0, r2
 802654e:	bfc8      	it	gt
 8026550:	6038      	strgt	r0, [r7, #0]
 8026552:	4658      	mov	r0, fp
 8026554:	f7ff fe9c 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026558:	a903      	add	r1, sp, #12
 802655a:	9003      	str	r0, [sp, #12]
 802655c:	4650      	mov	r0, sl
 802655e:	f7ea fb19 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026562:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026566:	1a10      	subs	r0, r2, r0
 8026568:	6832      	ldr	r2, [r6, #0]
 802656a:	1b01      	subs	r1, r0, r4
 802656c:	428a      	cmp	r2, r1
 802656e:	bfc8      	it	gt
 8026570:	6031      	strgt	r1, [r6, #0]
 8026572:	682a      	ldr	r2, [r5, #0]
 8026574:	4291      	cmp	r1, r2
 8026576:	bfc8      	it	gt
 8026578:	6029      	strgt	r1, [r5, #0]
 802657a:	6832      	ldr	r2, [r6, #0]
 802657c:	4420      	add	r0, r4
 802657e:	4282      	cmp	r2, r0
 8026580:	bfc8      	it	gt
 8026582:	6030      	strgt	r0, [r6, #0]
 8026584:	682a      	ldr	r2, [r5, #0]
 8026586:	4290      	cmp	r0, r2
 8026588:	bfc8      	it	gt
 802658a:	6028      	strgt	r0, [r5, #0]
 802658c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026590:	e7bb      	b.n	802650a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026592:	9b00      	ldr	r3, [sp, #0]
 8026594:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026598:	455b      	cmp	r3, fp
 802659a:	f77f af62 	ble.w	8026462 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802659e:	4618      	mov	r0, r3
 80265a0:	f7ea fc30 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80265a4:	a903      	add	r1, sp, #12
 80265a6:	9003      	str	r0, [sp, #12]
 80265a8:	4650      	mov	r0, sl
 80265aa:	f7ea faf3 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265ae:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80265b2:	4410      	add	r0, r2
 80265b4:	f8d9 2000 	ldr.w	r2, [r9]
 80265b8:	1b01      	subs	r1, r0, r4
 80265ba:	428a      	cmp	r2, r1
 80265bc:	bfc8      	it	gt
 80265be:	f8c9 1000 	strgt.w	r1, [r9]
 80265c2:	683a      	ldr	r2, [r7, #0]
 80265c4:	4291      	cmp	r1, r2
 80265c6:	bfc8      	it	gt
 80265c8:	6039      	strgt	r1, [r7, #0]
 80265ca:	f8d9 2000 	ldr.w	r2, [r9]
 80265ce:	4420      	add	r0, r4
 80265d0:	4282      	cmp	r2, r0
 80265d2:	bfc8      	it	gt
 80265d4:	f8c9 0000 	strgt.w	r0, [r9]
 80265d8:	683b      	ldr	r3, [r7, #0]
 80265da:	4298      	cmp	r0, r3
 80265dc:	bfc8      	it	gt
 80265de:	6038      	strgt	r0, [r7, #0]
 80265e0:	9800      	ldr	r0, [sp, #0]
 80265e2:	f7ff fe55 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80265e6:	a903      	add	r1, sp, #12
 80265e8:	9003      	str	r0, [sp, #12]
 80265ea:	4650      	mov	r0, sl
 80265ec:	f7ea fad2 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265f0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80265f4:	6832      	ldr	r2, [r6, #0]
 80265f6:	1a18      	subs	r0, r3, r0
 80265f8:	1b03      	subs	r3, r0, r4
 80265fa:	429a      	cmp	r2, r3
 80265fc:	bfc8      	it	gt
 80265fe:	6033      	strgt	r3, [r6, #0]
 8026600:	682a      	ldr	r2, [r5, #0]
 8026602:	4293      	cmp	r3, r2
 8026604:	bfc8      	it	gt
 8026606:	602b      	strgt	r3, [r5, #0]
 8026608:	6833      	ldr	r3, [r6, #0]
 802660a:	4404      	add	r4, r0
 802660c:	42a3      	cmp	r3, r4
 802660e:	bfc8      	it	gt
 8026610:	6034      	strgt	r4, [r6, #0]
 8026612:	682b      	ldr	r3, [r5, #0]
 8026614:	429c      	cmp	r4, r3
 8026616:	bfc8      	it	gt
 8026618:	602c      	strgt	r4, [r5, #0]
 802661a:	e722      	b.n	8026462 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802661c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802661c:	b530      	push	{r4, r5, lr}
 802661e:	4604      	mov	r4, r0
 8026620:	4608      	mov	r0, r1
 8026622:	4611      	mov	r1, r2
 8026624:	461a      	mov	r2, r3
 8026626:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802662a:	b089      	sub	sp, #36	; 0x24
 802662c:	015b      	lsls	r3, r3, #5
 802662e:	9304      	str	r3, [sp, #16]
 8026630:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026634:	2500      	movs	r5, #0
 8026636:	015b      	lsls	r3, r3, #5
 8026638:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802663c:	ab07      	add	r3, sp, #28
 802663e:	9302      	str	r3, [sp, #8]
 8026640:	ab06      	add	r3, sp, #24
 8026642:	9301      	str	r3, [sp, #4]
 8026644:	ab05      	add	r3, sp, #20
 8026646:	9300      	str	r3, [sp, #0]
 8026648:	ab04      	add	r3, sp, #16
 802664a:	9505      	str	r5, [sp, #20]
 802664c:	f7ff fe3e 	bl	80262cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026650:	2520      	movs	r5, #32
 8026652:	9a04      	ldr	r2, [sp, #16]
 8026654:	9805      	ldr	r0, [sp, #20]
 8026656:	fb92 f2f5 	sdiv	r2, r2, r5
 802665a:	fb90 f0f5 	sdiv	r0, r0, r5
 802665e:	b292      	uxth	r2, r2
 8026660:	3002      	adds	r0, #2
 8026662:	1a80      	subs	r0, r0, r2
 8026664:	9b06      	ldr	r3, [sp, #24]
 8026666:	9907      	ldr	r1, [sp, #28]
 8026668:	fb93 f3f5 	sdiv	r3, r3, r5
 802666c:	fb91 f1f5 	sdiv	r1, r1, r5
 8026670:	b29b      	uxth	r3, r3
 8026672:	3102      	adds	r1, #2
 8026674:	1ac9      	subs	r1, r1, r3
 8026676:	3a01      	subs	r2, #1
 8026678:	3b01      	subs	r3, #1
 802667a:	80a0      	strh	r0, [r4, #4]
 802667c:	4620      	mov	r0, r4
 802667e:	8022      	strh	r2, [r4, #0]
 8026680:	8063      	strh	r3, [r4, #2]
 8026682:	80e1      	strh	r1, [r4, #6]
 8026684:	b009      	add	sp, #36	; 0x24
 8026686:	bd30      	pop	{r4, r5, pc}

08026688 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026688:	b510      	push	{r4, lr}
 802668a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802668e:	4604      	mov	r4, r0
 8026690:	f7ff ffc4 	bl	802661c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026694:	4620      	mov	r0, r4
 8026696:	bd10      	pop	{r4, pc}

08026698 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802669a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802669e:	4606      	mov	r6, r0
 80266a0:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80266a4:	6813      	ldr	r3, [r2, #0]
 80266a6:	42a5      	cmp	r5, r4
 80266a8:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80266ac:	da2b      	bge.n	8026706 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80266ae:	42a3      	cmp	r3, r4
 80266b0:	dd14      	ble.n	80266dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80266b2:	b168      	cbz	r0, 80266d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80266b4:	4267      	negs	r7, r4
 80266b6:	fb97 f2f0 	sdiv	r2, r7, r0
 80266ba:	fb00 7212 	mls	r2, r0, r2, r7
 80266be:	1a82      	subs	r2, r0, r2
 80266c0:	fb92 f7f0 	sdiv	r7, r2, r0
 80266c4:	fb00 2017 	mls	r0, r0, r7, r2
 80266c8:	1a24      	subs	r4, r4, r0
 80266ca:	42ac      	cmp	r4, r5
 80266cc:	bfb8      	it	lt
 80266ce:	462c      	movlt	r4, r5
 80266d0:	4630      	mov	r0, r6
 80266d2:	4622      	mov	r2, r4
 80266d4:	f7ff ffa2 	bl	802661c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80266d8:	4630      	mov	r0, r6
 80266da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80266dc:	42ab      	cmp	r3, r5
 80266de:	dd0e      	ble.n	80266fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80266e0:	b168      	cbz	r0, 80266fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80266e2:	425f      	negs	r7, r3
 80266e4:	fb97 f2f0 	sdiv	r2, r7, r0
 80266e8:	fb00 7212 	mls	r2, r0, r2, r7
 80266ec:	1a82      	subs	r2, r0, r2
 80266ee:	fb92 f7f0 	sdiv	r7, r2, r0
 80266f2:	fb00 2017 	mls	r0, r0, r7, r2
 80266f6:	1a1b      	subs	r3, r3, r0
 80266f8:	42ab      	cmp	r3, r5
 80266fa:	bfb8      	it	lt
 80266fc:	462b      	movlt	r3, r5
 80266fe:	4622      	mov	r2, r4
 8026700:	461c      	mov	r4, r3
 8026702:	4613      	mov	r3, r2
 8026704:	e7e4      	b.n	80266d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026706:	42a3      	cmp	r3, r4
 8026708:	da10      	bge.n	802672c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802670a:	b148      	cbz	r0, 8026720 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802670c:	fb94 f2f0 	sdiv	r2, r4, r0
 8026710:	fb00 4212 	mls	r2, r0, r2, r4
 8026714:	1a82      	subs	r2, r0, r2
 8026716:	fb92 f7f0 	sdiv	r7, r2, r0
 802671a:	fb00 2017 	mls	r0, r0, r7, r2
 802671e:	4404      	add	r4, r0
 8026720:	42a5      	cmp	r5, r4
 8026722:	bfa8      	it	ge
 8026724:	4625      	movge	r5, r4
 8026726:	461c      	mov	r4, r3
 8026728:	462b      	mov	r3, r5
 802672a:	e7d1      	b.n	80266d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802672c:	42ab      	cmp	r3, r5
 802672e:	dacf      	bge.n	80266d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026730:	2800      	cmp	r0, #0
 8026732:	d0cd      	beq.n	80266d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026734:	fb93 f2f0 	sdiv	r2, r3, r0
 8026738:	fb00 3212 	mls	r2, r0, r2, r3
 802673c:	1a82      	subs	r2, r0, r2
 802673e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026742:	fb00 2017 	mls	r0, r0, r7, r2
 8026746:	4403      	add	r3, r0
 8026748:	42ab      	cmp	r3, r5
 802674a:	bfa8      	it	ge
 802674c:	462b      	movge	r3, r5
 802674e:	e7bf      	b.n	80266d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026750 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026754:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026758:	42ae      	cmp	r6, r5
 802675a:	bfa2      	ittt	ge
 802675c:	4633      	movge	r3, r6
 802675e:	462e      	movge	r6, r5
 8026760:	461d      	movge	r5, r3
 8026762:	1bab      	subs	r3, r5, r6
 8026764:	468b      	mov	fp, r1
 8026766:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026768:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802676c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026770:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026774:	f04f 0220 	mov.w	r2, #32
 8026778:	b0ab      	sub	sp, #172	; 0xac
 802677a:	4604      	mov	r4, r0
 802677c:	bfa4      	itt	ge
 802677e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026782:	2600      	movge	r6, #0
 8026784:	fb99 f9f2 	sdiv	r9, r9, r2
 8026788:	fb9a faf2 	sdiv	sl, sl, r2
 802678c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802678e:	2900      	cmp	r1, #0
 8026790:	f000 80f5 	beq.w	802697e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026794:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026798:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802679c:	eba9 0700 	sub.w	r7, r9, r0
 80267a0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80267a4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80267a8:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80267ac:	ebaa 0802 	sub.w	r8, sl, r2
 80267b0:	4407      	add	r7, r0
 80267b2:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80267b6:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80267ba:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80267be:	b23f      	sxth	r7, r7
 80267c0:	4490      	add	r8, r2
 80267c2:	eba9 0707 	sub.w	r7, r9, r7
 80267c6:	fa0f f888 	sxth.w	r8, r8
 80267ca:	ebaa 0808 	sub.w	r8, sl, r8
 80267ce:	2f00      	cmp	r7, #0
 80267d0:	bfb8      	it	lt
 80267d2:	427f      	neglt	r7, r7
 80267d4:	f1b8 0f00 	cmp.w	r8, #0
 80267d8:	bfb8      	it	lt
 80267da:	f1c8 0800 	rsblt	r8, r8, #0
 80267de:	45bc      	cmp	ip, r7
 80267e0:	bfcc      	ite	gt
 80267e2:	f10c 0701 	addgt.w	r7, ip, #1
 80267e6:	3701      	addle	r7, #1
 80267e8:	4540      	cmp	r0, r8
 80267ea:	bfc8      	it	gt
 80267ec:	f100 0801 	addgt.w	r8, r0, #1
 80267f0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80267f4:	f100 0001 	add.w	r0, r0, #1
 80267f8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80267fc:	f04f 0202 	mov.w	r2, #2
 8026800:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8026804:	fb91 f1f2 	sdiv	r1, r1, r2
 8026808:	eba3 0301 	sub.w	r3, r3, r1
 802680c:	bfd8      	it	le
 802680e:	f108 0801 	addle.w	r8, r8, #1
 8026812:	9201      	str	r2, [sp, #4]
 8026814:	930d      	str	r3, [sp, #52]	; 0x34
 8026816:	f7ea fad5 	bl	8010dc4 <_ZN8touchgfx7CWRUtil4sineEi>
 802681a:	a92a      	add	r1, sp, #168	; 0xa8
 802681c:	fb08 f808 	mul.w	r8, r8, r8
 8026820:	f841 0d70 	str.w	r0, [r1, #-112]!
 8026824:	a80d      	add	r0, sp, #52	; 0x34
 8026826:	f7ea f9b5 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802682a:	fb07 8707 	mla	r7, r7, r7, r8
 802682e:	f04f 0c20 	mov.w	ip, #32
 8026832:	fb90 f0fc 	sdiv	r0, r0, ip
 8026836:	4340      	muls	r0, r0
 8026838:	4287      	cmp	r7, r0
 802683a:	9a01      	ldr	r2, [sp, #4]
 802683c:	da04      	bge.n	8026848 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802683e:	2401      	movs	r4, #1
 8026840:	4620      	mov	r0, r4
 8026842:	b02b      	add	sp, #172	; 0xac
 8026844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026848:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802684a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802684c:	fb91 f3f2 	sdiv	r3, r1, r2
 8026850:	4403      	add	r3, r0
 8026852:	fb93 f3fc 	sdiv	r3, r3, ip
 8026856:	f9bb 1000 	ldrsh.w	r1, [fp]
 802685a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802685e:	440a      	add	r2, r1
 8026860:	b212      	sxth	r2, r2
 8026862:	454a      	cmp	r2, r9
 8026864:	bfa8      	it	ge
 8026866:	464a      	movge	r2, r9
 8026868:	428a      	cmp	r2, r1
 802686a:	bfac      	ite	ge
 802686c:	eba9 0902 	subge.w	r9, r9, r2
 8026870:	eba9 0901 	sublt.w	r9, r9, r1
 8026874:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026878:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802687c:	440a      	add	r2, r1
 802687e:	b212      	sxth	r2, r2
 8026880:	4552      	cmp	r2, sl
 8026882:	bfa8      	it	ge
 8026884:	4652      	movge	r2, sl
 8026886:	428a      	cmp	r2, r1
 8026888:	bfac      	ite	ge
 802688a:	ebaa 0a02 	subge.w	sl, sl, r2
 802688e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8026892:	3301      	adds	r3, #1
 8026894:	fb0a fa0a 	mul.w	sl, sl, sl
 8026898:	fb09 a909 	mla	r9, r9, r9, sl
 802689c:	435b      	muls	r3, r3
 802689e:	4599      	cmp	r9, r3
 80268a0:	dccd      	bgt.n	802683e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80268a2:	465a      	mov	r2, fp
 80268a4:	4621      	mov	r1, r4
 80268a6:	a80e      	add	r0, sp, #56	; 0x38
 80268a8:	f7ff faae 	bl	8025e08 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80268ac:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80268ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80268b0:	9209      	str	r2, [sp, #36]	; 0x24
 80268b2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80268b6:	930a      	str	r3, [sp, #40]	; 0x28
 80268b8:	dd07      	ble.n	80268ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80268ba:	2102      	movs	r1, #2
 80268bc:	fb93 f3f1 	sdiv	r3, r3, r1
 80268c0:	4413      	add	r3, r2
 80268c2:	930a      	str	r3, [sp, #40]	; 0x28
 80268c4:	fb93 f3f1 	sdiv	r3, r3, r1
 80268c8:	9309      	str	r3, [sp, #36]	; 0x24
 80268ca:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80268ce:	4630      	mov	r0, r6
 80268d0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80268d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80268d6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80268da:	f7ea fa93 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80268de:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80268e2:	f04f 0a02 	mov.w	sl, #2
 80268e6:	f849 0d74 	str.w	r0, [r9, #-116]!
 80268ea:	a80b      	add	r0, sp, #44	; 0x2c
 80268ec:	4649      	mov	r1, r9
 80268ee:	f7ea f951 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268f2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80268f4:	fb90 f0fa 	sdiv	r0, r0, sl
 80268f8:	eb00 0b03 	add.w	fp, r0, r3
 80268fc:	4630      	mov	r0, r6
 80268fe:	f7ff fcc7 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026902:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8026906:	017f      	lsls	r7, r7, #5
 8026908:	f848 0d78 	str.w	r0, [r8, #-120]!
 802690c:	a80b      	add	r0, sp, #44	; 0x2c
 802690e:	4641      	mov	r1, r8
 8026910:	f7ea f940 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026914:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026916:	fb90 f0fa 	sdiv	r0, r0, sl
 802691a:	4659      	mov	r1, fp
 802691c:	1a12      	subs	r2, r2, r0
 802691e:	a80e      	add	r0, sp, #56	; 0x38
 8026920:	f7ff fbf2 	bl	8026108 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8026924:	f106 0a20 	add.w	sl, r6, #32
 8026928:	bb67      	cbnz	r7, 8026984 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802692a:	46b3      	mov	fp, r6
 802692c:	45aa      	cmp	sl, r5
 802692e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026930:	dc33      	bgt.n	802699a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8026932:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026934:	4650      	mov	r0, sl
 8026936:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802693a:	920b      	str	r2, [sp, #44]	; 0x2c
 802693c:	f7ea fa62 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026940:	4641      	mov	r1, r8
 8026942:	900c      	str	r0, [sp, #48]	; 0x30
 8026944:	a80b      	add	r0, sp, #44	; 0x2c
 8026946:	f7ea f925 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802694a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802694c:	2302      	movs	r3, #2
 802694e:	fb90 f0f3 	sdiv	r0, r0, r3
 8026952:	eb00 0b02 	add.w	fp, r0, r2
 8026956:	4650      	mov	r0, sl
 8026958:	f7ff fc9a 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802695c:	4649      	mov	r1, r9
 802695e:	900d      	str	r0, [sp, #52]	; 0x34
 8026960:	a80b      	add	r0, sp, #44	; 0x2c
 8026962:	f7ea f917 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026966:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026968:	2302      	movs	r3, #2
 802696a:	4659      	mov	r1, fp
 802696c:	fb90 f0f3 	sdiv	r0, r0, r3
 8026970:	1a12      	subs	r2, r2, r0
 8026972:	a80e      	add	r0, sp, #56	; 0x38
 8026974:	46d3      	mov	fp, sl
 8026976:	f7ff fc14 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802697a:	44ba      	add	sl, r7
 802697c:	e7d6      	b.n	802692c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802697e:	fb93 f3f2 	sdiv	r3, r3, r2
 8026982:	e768      	b.n	8026856 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8026984:	fb9a f2f7 	sdiv	r2, sl, r7
 8026988:	fb07 a212 	mls	r2, r7, r2, sl
 802698c:	1aba      	subs	r2, r7, r2
 802698e:	fb92 f1f7 	sdiv	r1, r2, r7
 8026992:	fb07 2211 	mls	r2, r7, r1, r2
 8026996:	4492      	add	sl, r2
 8026998:	e7c7      	b.n	802692a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802699a:	45ab      	cmp	fp, r5
 802699c:	da23      	bge.n	80269e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802699e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269a0:	4628      	mov	r0, r5
 80269a2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80269a6:	920b      	str	r2, [sp, #44]	; 0x2c
 80269a8:	f7ea fa2c 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80269ac:	4641      	mov	r1, r8
 80269ae:	900c      	str	r0, [sp, #48]	; 0x30
 80269b0:	a80b      	add	r0, sp, #44	; 0x2c
 80269b2:	f7ea f8ef 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80269b8:	f04f 0a02 	mov.w	sl, #2
 80269bc:	fb90 f0fa 	sdiv	r0, r0, sl
 80269c0:	4403      	add	r3, r0
 80269c2:	4628      	mov	r0, r5
 80269c4:	9301      	str	r3, [sp, #4]
 80269c6:	f7ff fc63 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80269ca:	4649      	mov	r1, r9
 80269cc:	900d      	str	r0, [sp, #52]	; 0x34
 80269ce:	a80b      	add	r0, sp, #44	; 0x2c
 80269d0:	f7ea f8e0 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269d4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80269d6:	9b01      	ldr	r3, [sp, #4]
 80269d8:	fb90 f0fa 	sdiv	r0, r0, sl
 80269dc:	4619      	mov	r1, r3
 80269de:	1a12      	subs	r2, r2, r0
 80269e0:	a80e      	add	r0, sp, #56	; 0x38
 80269e2:	f7ff fbde 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80269e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80269e8:	b99b      	cbnz	r3, 8026a12 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80269ea:	1bad      	subs	r5, r5, r6
 80269ec:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 80269f0:	da04      	bge.n	80269fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80269f2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80269f6:	a80e      	add	r0, sp, #56	; 0x38
 80269f8:	f7ff fbd3 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80269fc:	21ff      	movs	r1, #255	; 0xff
 80269fe:	a80e      	add	r0, sp, #56	; 0x38
 8026a00:	f7ff fabe 	bl	8025f80 <_ZN8touchgfx6Canvas6renderEh>
 8026a04:	4604      	mov	r4, r0
 8026a06:	4b8a      	ldr	r3, [pc, #552]	; (8026c30 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026a08:	930e      	str	r3, [sp, #56]	; 0x38
 8026a0a:	a816      	add	r0, sp, #88	; 0x58
 8026a0c:	f7eb fd2e 	bl	801246c <_ZN8touchgfx7OutlineD1Ev>
 8026a10:	e716      	b.n	8026840 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8026a12:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8026a16:	429a      	cmp	r2, r3
 8026a18:	f0c0 8107 	bcc.w	8026c2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026a1c:	1bab      	subs	r3, r5, r6
 8026a1e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8026a22:	9301      	str	r3, [sp, #4]
 8026a24:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026a28:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026a2c:	da43      	bge.n	8026ab6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026a2e:	4628      	mov	r0, r5
 8026a30:	f7ea f9e8 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a34:	4649      	mov	r1, r9
 8026a36:	900d      	str	r0, [sp, #52]	; 0x34
 8026a38:	a809      	add	r0, sp, #36	; 0x24
 8026a3a:	f7ea f8ab 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026a40:	18c3      	adds	r3, r0, r3
 8026a42:	4628      	mov	r0, r5
 8026a44:	9303      	str	r3, [sp, #12]
 8026a46:	f7ff fc23 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a4a:	4649      	mov	r1, r9
 8026a4c:	900d      	str	r0, [sp, #52]	; 0x34
 8026a4e:	a809      	add	r0, sp, #36	; 0x24
 8026a50:	f7ea f8a0 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026a56:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026a5a:	1a1b      	subs	r3, r3, r0
 8026a5c:	9302      	str	r3, [sp, #8]
 8026a5e:	9204      	str	r2, [sp, #16]
 8026a60:	eb0a 0305 	add.w	r3, sl, r5
 8026a64:	9a04      	ldr	r2, [sp, #16]
 8026a66:	4293      	cmp	r3, r2
 8026a68:	da25      	bge.n	8026ab6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026a6a:	4618      	mov	r0, r3
 8026a6c:	9306      	str	r3, [sp, #24]
 8026a6e:	f7ea f9c9 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a72:	4649      	mov	r1, r9
 8026a74:	900d      	str	r0, [sp, #52]	; 0x34
 8026a76:	a80a      	add	r0, sp, #40	; 0x28
 8026a78:	f7ea f88c 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a7c:	9b03      	ldr	r3, [sp, #12]
 8026a7e:	2202      	movs	r2, #2
 8026a80:	fb90 f0f2 	sdiv	r0, r0, r2
 8026a84:	18c3      	adds	r3, r0, r3
 8026a86:	9305      	str	r3, [sp, #20]
 8026a88:	9b06      	ldr	r3, [sp, #24]
 8026a8a:	9207      	str	r2, [sp, #28]
 8026a8c:	4618      	mov	r0, r3
 8026a8e:	f7ff fbff 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a92:	a92a      	add	r1, sp, #168	; 0xa8
 8026a94:	f841 0d78 	str.w	r0, [r1, #-120]!
 8026a98:	a80a      	add	r0, sp, #40	; 0x28
 8026a9a:	f7ea f87b 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a9e:	9b02      	ldr	r3, [sp, #8]
 8026aa0:	9a07      	ldr	r2, [sp, #28]
 8026aa2:	9905      	ldr	r1, [sp, #20]
 8026aa4:	fb90 f2f2 	sdiv	r2, r0, r2
 8026aa8:	a80e      	add	r0, sp, #56	; 0x38
 8026aaa:	1a9a      	subs	r2, r3, r2
 8026aac:	f7ff fb79 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026ab0:	9b06      	ldr	r3, [sp, #24]
 8026ab2:	4453      	add	r3, sl
 8026ab4:	e7d6      	b.n	8026a64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8026ab6:	45ab      	cmp	fp, r5
 8026ab8:	da25      	bge.n	8026b06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8026aba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026abe:	4628      	mov	r0, r5
 8026ac0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026ac4:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ac6:	f7ea f99d 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026aca:	4641      	mov	r1, r8
 8026acc:	900c      	str	r0, [sp, #48]	; 0x30
 8026ace:	a80b      	add	r0, sp, #44	; 0x2c
 8026ad0:	f7ea f860 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ad4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ad6:	2202      	movs	r2, #2
 8026ad8:	fb90 f0f2 	sdiv	r0, r0, r2
 8026adc:	eb00 0903 	add.w	r9, r0, r3
 8026ae0:	4628      	mov	r0, r5
 8026ae2:	9202      	str	r2, [sp, #8]
 8026ae4:	f7ff fbd4 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ae8:	a92a      	add	r1, sp, #168	; 0xa8
 8026aea:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026aee:	a80b      	add	r0, sp, #44	; 0x2c
 8026af0:	f7ea f850 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026af4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026af6:	9a02      	ldr	r2, [sp, #8]
 8026af8:	fb90 f2f2 	sdiv	r2, r0, r2
 8026afc:	4649      	mov	r1, r9
 8026afe:	1a9a      	subs	r2, r3, r2
 8026b00:	a80e      	add	r0, sp, #56	; 0x38
 8026b02:	f7ff fb4e 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026b06:	46d9      	mov	r9, fp
 8026b08:	2502      	movs	r5, #2
 8026b0a:	45b1      	cmp	r9, r6
 8026b0c:	db25      	blt.n	8026b5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026b0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026b12:	4648      	mov	r0, r9
 8026b14:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026b18:	930b      	str	r3, [sp, #44]	; 0x2c
 8026b1a:	f7ea f973 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b1e:	4641      	mov	r1, r8
 8026b20:	900c      	str	r0, [sp, #48]	; 0x30
 8026b22:	a80b      	add	r0, sp, #44	; 0x2c
 8026b24:	f7ea f836 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026b2a:	fb90 f0f5 	sdiv	r0, r0, r5
 8026b2e:	eb00 0b03 	add.w	fp, r0, r3
 8026b32:	4648      	mov	r0, r9
 8026b34:	f7ff fbac 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b38:	a90d      	add	r1, sp, #52	; 0x34
 8026b3a:	900d      	str	r0, [sp, #52]	; 0x34
 8026b3c:	a80b      	add	r0, sp, #44	; 0x2c
 8026b3e:	f7ea f829 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b42:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026b44:	fb90 f0f5 	sdiv	r0, r0, r5
 8026b48:	4659      	mov	r1, fp
 8026b4a:	1a12      	subs	r2, r2, r0
 8026b4c:	a80e      	add	r0, sp, #56	; 0x38
 8026b4e:	46cb      	mov	fp, r9
 8026b50:	f7ff fb27 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026b54:	eba9 0907 	sub.w	r9, r9, r7
 8026b58:	e7d7      	b.n	8026b0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026b5a:	455e      	cmp	r6, fp
 8026b5c:	da22      	bge.n	8026ba4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026b5e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026b62:	4630      	mov	r0, r6
 8026b64:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026b68:	930b      	str	r3, [sp, #44]	; 0x2c
 8026b6a:	f7ea f94b 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b6e:	4641      	mov	r1, r8
 8026b70:	900c      	str	r0, [sp, #48]	; 0x30
 8026b72:	a80b      	add	r0, sp, #44	; 0x2c
 8026b74:	f7ea f80e 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b78:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026b7a:	2502      	movs	r5, #2
 8026b7c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026b80:	4407      	add	r7, r0
 8026b82:	4630      	mov	r0, r6
 8026b84:	f7ff fb84 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b88:	a92a      	add	r1, sp, #168	; 0xa8
 8026b8a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026b8e:	a80b      	add	r0, sp, #44	; 0x2c
 8026b90:	f7ea f800 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b94:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026b96:	fb90 f0f5 	sdiv	r0, r0, r5
 8026b9a:	4639      	mov	r1, r7
 8026b9c:	1a12      	subs	r2, r2, r0
 8026b9e:	a80e      	add	r0, sp, #56	; 0x38
 8026ba0:	f7ff faff 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026ba4:	9b01      	ldr	r3, [sp, #4]
 8026ba6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026baa:	f6bf af27 	bge.w	80269fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026bae:	4630      	mov	r0, r6
 8026bb0:	f7ea f928 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026bb4:	ad2a      	add	r5, sp, #168	; 0xa8
 8026bb6:	f04f 0b02 	mov.w	fp, #2
 8026bba:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026bbe:	a809      	add	r0, sp, #36	; 0x24
 8026bc0:	4629      	mov	r1, r5
 8026bc2:	f7e9 ffe7 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bc6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026bc8:	eb00 0903 	add.w	r9, r0, r3
 8026bcc:	4630      	mov	r0, r6
 8026bce:	f7ff fb5f 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026bd2:	4629      	mov	r1, r5
 8026bd4:	900d      	str	r0, [sp, #52]	; 0x34
 8026bd6:	a809      	add	r0, sp, #36	; 0x24
 8026bd8:	f7e9 ffdc 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bdc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026bde:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8026be2:	eba3 0800 	sub.w	r8, r3, r0
 8026be6:	4454      	add	r4, sl
 8026be8:	42a6      	cmp	r6, r4
 8026bea:	f77f af07 	ble.w	80269fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026bee:	4620      	mov	r0, r4
 8026bf0:	f7ea f908 	bl	8010e04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026bf4:	4629      	mov	r1, r5
 8026bf6:	900d      	str	r0, [sp, #52]	; 0x34
 8026bf8:	a80a      	add	r0, sp, #40	; 0x28
 8026bfa:	f7e9 ffcb 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bfe:	fb90 f0fb 	sdiv	r0, r0, fp
 8026c02:	eb00 0709 	add.w	r7, r0, r9
 8026c06:	4620      	mov	r0, r4
 8026c08:	f7ff fb42 	bl	8026290 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c0c:	a90c      	add	r1, sp, #48	; 0x30
 8026c0e:	900c      	str	r0, [sp, #48]	; 0x30
 8026c10:	a80a      	add	r0, sp, #40	; 0x28
 8026c12:	f7e9 ffbf 	bl	8010b94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c16:	4639      	mov	r1, r7
 8026c18:	fb90 f2fb 	sdiv	r2, r0, fp
 8026c1c:	a80e      	add	r0, sp, #56	; 0x38
 8026c1e:	eba8 0202 	sub.w	r2, r8, r2
 8026c22:	f7ff fabe 	bl	80261a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026c26:	4454      	add	r4, sl
 8026c28:	e7de      	b.n	8026be8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026c2a:	2400      	movs	r4, #0
 8026c2c:	e6eb      	b.n	8026a06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026c2e:	bf00      	nop
 8026c30:	0802e4f0 	.word	0x0802e4f0

08026c34 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026c34:	b570      	push	{r4, r5, r6, lr}
 8026c36:	790b      	ldrb	r3, [r1, #4]
 8026c38:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026c3c:	2b00      	cmp	r3, #0
 8026c3e:	bf0c      	ite	eq
 8026c40:	2301      	moveq	r3, #1
 8026c42:	2300      	movne	r3, #0
 8026c44:	4604      	mov	r4, r0
 8026c46:	460e      	mov	r6, r1
 8026c48:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026c4c:	d109      	bne.n	8026c62 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026c4e:	b14d      	cbz	r5, 8026c64 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026c50:	7933      	ldrb	r3, [r6, #4]
 8026c52:	2b01      	cmp	r3, #1
 8026c54:	d10c      	bne.n	8026c70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026c56:	6823      	ldr	r3, [r4, #0]
 8026c58:	4620      	mov	r0, r4
 8026c5a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026c5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026c60:	4718      	bx	r3
 8026c62:	b12d      	cbz	r5, 8026c70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026c64:	6823      	ldr	r3, [r4, #0]
 8026c66:	4620      	mov	r0, r4
 8026c68:	695b      	ldr	r3, [r3, #20]
 8026c6a:	4798      	blx	r3
 8026c6c:	2d00      	cmp	r5, #0
 8026c6e:	d1ef      	bne.n	8026c50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026c70:	bd70      	pop	{r4, r5, r6, pc}

08026c72 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8026c72:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8026c76:	4770      	bx	lr

08026c78 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026c78:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026c7c:	4770      	bx	lr

08026c7e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026c7e:	6802      	ldr	r2, [r0, #0]
 8026c80:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026c84:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026c86:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026c8a:	4710      	bx	r2

08026c8c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8026c8c:	6802      	ldr	r2, [r0, #0]
 8026c8e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026c92:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026c94:	eef0 0a40 	vmov.f32	s1, s0
 8026c98:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026c9c:	4710      	bx	r2

08026c9e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8026c9e:	6802      	ldr	r2, [r0, #0]
 8026ca0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026ca4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026ca6:	eeb0 1a40 	vmov.f32	s2, s0
 8026caa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026cae:	4710      	bx	r2

08026cb0 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8026cb0:	6802      	ldr	r2, [r0, #0]
 8026cb2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026cb6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026cb8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026cbc:	4710      	bx	r2

08026cbe <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8026cbe:	6802      	ldr	r2, [r0, #0]
 8026cc0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026cc4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026cc6:	eef0 0a40 	vmov.f32	s1, s0
 8026cca:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026cce:	4710      	bx	r2

08026cd0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026cd0:	6802      	ldr	r2, [r0, #0]
 8026cd2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026cd6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026cd8:	eeb0 1a40 	vmov.f32	s2, s0
 8026cdc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026ce0:	4710      	bx	r2

08026ce2 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8026ce2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026ce6:	4770      	bx	lr

08026ce8 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026ce8:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026cec:	4770      	bx	lr

08026cee <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026cee:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8026cf2:	4770      	bx	lr

08026cf4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8026cf4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026cf8:	4770      	bx	lr

08026cfa <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026cfa:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026cfe:	4770      	bx	lr

08026d00 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026d00:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8026d04:	4770      	bx	lr

08026d06 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8026d06:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8026d0a:	4770      	bx	lr

08026d0c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8026d0c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8026d10:	4770      	bx	lr

08026d12 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8026d12:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8026d16:	4770      	bx	lr

08026d18 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8026d18:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8026d1c:	4770      	bx	lr

08026d1e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8026d1e:	ee07 2a90 	vmov	s15, r2
 8026d22:	6803      	ldr	r3, [r0, #0]
 8026d24:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8026d28:	ee07 1a90 	vmov	s15, r1
 8026d2c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8026d30:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8026d34:	4718      	bx	r3

08026d36 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8026d36:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026d3a:	4770      	bx	lr

08026d3c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026d3c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026d40:	4770      	bx	lr

08026d42 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8026d42:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8026d46:	4770      	bx	lr

08026d48 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026d48:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026d4c:	4770      	bx	lr

08026d4e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026d4e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8026d52:	4770      	bx	lr

08026d54 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8026d54:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026d58:	4770      	bx	lr

08026d5a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026d5a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026d5e:	4770      	bx	lr

08026d60 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026d60:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8026d64:	4770      	bx	lr

08026d66 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8026d66:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8026d6a:	4770      	bx	lr

08026d6c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8026d6c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8026d70:	4770      	bx	lr

08026d72 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8026d72:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8026d76:	4770      	bx	lr

08026d78 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8026d78:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8026d7c:	4770      	bx	lr

08026d7e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8026d7e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8026d82:	4770      	bx	lr

08026d84 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8026d84:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8026d88:	4770      	bx	lr

08026d8a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8026d8a:	b510      	push	{r4, lr}
 8026d8c:	ed2d 8b04 	vpush	{d8-d9}
 8026d90:	6803      	ldr	r3, [r0, #0]
 8026d92:	4604      	mov	r4, r0
 8026d94:	699b      	ldr	r3, [r3, #24]
 8026d96:	eeb0 8a40 	vmov.f32	s16, s0
 8026d9a:	eef0 8a60 	vmov.f32	s17, s1
 8026d9e:	eeb0 9a41 	vmov.f32	s18, s2
 8026da2:	4798      	blx	r3
 8026da4:	6823      	ldr	r3, [r4, #0]
 8026da6:	4620      	mov	r0, r4
 8026da8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8026daa:	eeb0 1a49 	vmov.f32	s2, s18
 8026dae:	eef0 0a68 	vmov.f32	s1, s17
 8026db2:	eeb0 0a48 	vmov.f32	s0, s16
 8026db6:	4798      	blx	r3
 8026db8:	ecbd 8b04 	vpop	{d8-d9}
 8026dbc:	6823      	ldr	r3, [r4, #0]
 8026dbe:	4620      	mov	r0, r4
 8026dc0:	699b      	ldr	r3, [r3, #24]
 8026dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026dc6:	4718      	bx	r3

08026dc8 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8026dc8:	b510      	push	{r4, lr}
 8026dca:	ed2d 8b02 	vpush	{d8}
 8026dce:	6803      	ldr	r3, [r0, #0]
 8026dd0:	4604      	mov	r4, r0
 8026dd2:	699b      	ldr	r3, [r3, #24]
 8026dd4:	eeb0 8a40 	vmov.f32	s16, s0
 8026dd8:	4798      	blx	r3
 8026dda:	6823      	ldr	r3, [r4, #0]
 8026ddc:	4620      	mov	r0, r4
 8026dde:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8026de2:	eeb0 0a48 	vmov.f32	s0, s16
 8026de6:	4798      	blx	r3
 8026de8:	ecbd 8b02 	vpop	{d8}
 8026dec:	6823      	ldr	r3, [r4, #0]
 8026dee:	4620      	mov	r0, r4
 8026df0:	699b      	ldr	r3, [r3, #24]
 8026df2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026df6:	4718      	bx	r3

08026df8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8026df8:	2200      	movs	r2, #0
 8026dfa:	8002      	strh	r2, [r0, #0]
 8026dfc:	8042      	strh	r2, [r0, #2]
 8026dfe:	8082      	strh	r2, [r0, #4]
 8026e00:	80c2      	strh	r2, [r0, #6]
 8026e02:	4770      	bx	lr

08026e04 <_ZN8touchgfx13TextureMapperD1Ev>:
 8026e04:	4770      	bx	lr

08026e06 <_ZN8touchgfx13TextureMapperD0Ev>:
 8026e06:	b510      	push	{r4, lr}
 8026e08:	2190      	movs	r1, #144	; 0x90
 8026e0a:	4604      	mov	r4, r0
 8026e0c:	f001 ff3f 	bl	8028c8e <_ZdlPvj>
 8026e10:	4620      	mov	r0, r4
 8026e12:	bd10      	pop	{r4, pc}

08026e14 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8026e14:	b538      	push	{r3, r4, r5, lr}
 8026e16:	2500      	movs	r5, #0
 8026e18:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8026e1c:	2301      	movs	r3, #1
 8026e1e:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8026e22:	4b1f      	ldr	r3, [pc, #124]	; (8026ea0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8026e24:	8085      	strh	r5, [r0, #4]
 8026e26:	80c5      	strh	r5, [r0, #6]
 8026e28:	8105      	strh	r5, [r0, #8]
 8026e2a:	8145      	strh	r5, [r0, #10]
 8026e2c:	8185      	strh	r5, [r0, #12]
 8026e2e:	81c5      	strh	r5, [r0, #14]
 8026e30:	8205      	strh	r5, [r0, #16]
 8026e32:	8245      	strh	r5, [r0, #18]
 8026e34:	61c5      	str	r5, [r0, #28]
 8026e36:	8405      	strh	r5, [r0, #32]
 8026e38:	8445      	strh	r5, [r0, #34]	; 0x22
 8026e3a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026e3e:	6003      	str	r3, [r0, #0]
 8026e40:	880b      	ldrh	r3, [r1, #0]
 8026e42:	84c3      	strh	r3, [r0, #38]	; 0x26
 8026e44:	23ff      	movs	r3, #255	; 0xff
 8026e46:	4604      	mov	r4, r0
 8026e48:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026e4c:	f7eb f99f 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026e50:	4b14      	ldr	r3, [pc, #80]	; (8026ea4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8026e52:	6023      	str	r3, [r4, #0]
 8026e54:	2300      	movs	r3, #0
 8026e56:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026e5a:	4913      	ldr	r1, [pc, #76]	; (8026ea8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026e5c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026e5e:	6323      	str	r3, [r4, #48]	; 0x30
 8026e60:	6363      	str	r3, [r4, #52]	; 0x34
 8026e62:	63a3      	str	r3, [r4, #56]	; 0x38
 8026e64:	63e3      	str	r3, [r4, #60]	; 0x3c
 8026e66:	6463      	str	r3, [r4, #68]	; 0x44
 8026e68:	64a3      	str	r3, [r4, #72]	; 0x48
 8026e6a:	6523      	str	r3, [r4, #80]	; 0x50
 8026e6c:	6563      	str	r3, [r4, #84]	; 0x54
 8026e6e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026e70:	6623      	str	r3, [r4, #96]	; 0x60
 8026e72:	66a3      	str	r3, [r4, #104]	; 0x68
 8026e74:	66e3      	str	r3, [r4, #108]	; 0x6c
 8026e76:	6763      	str	r3, [r4, #116]	; 0x74
 8026e78:	67a3      	str	r3, [r4, #120]	; 0x78
 8026e7a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8026e7e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8026e82:	230c      	movs	r3, #12
 8026e84:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8026e88:	6422      	str	r2, [r4, #64]	; 0x40
 8026e8a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8026e8c:	65a1      	str	r1, [r4, #88]	; 0x58
 8026e8e:	6662      	str	r2, [r4, #100]	; 0x64
 8026e90:	6722      	str	r2, [r4, #112]	; 0x70
 8026e92:	67e2      	str	r2, [r4, #124]	; 0x7c
 8026e94:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8026e98:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8026e9c:	4620      	mov	r0, r4
 8026e9e:	bd38      	pop	{r3, r4, r5, pc}
 8026ea0:	0802df98 	.word	0x0802df98
 8026ea4:	0802e57c 	.word	0x0802e57c
 8026ea8:	447a0000 	.word	0x447a0000

08026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8026eac:	b570      	push	{r4, r5, r6, lr}
 8026eae:	ed2d 8b04 	vpush	{d8-d9}
 8026eb2:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8026eb6:	add0      	add	r5, sp, #832	; 0x340
 8026eb8:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8026eba:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8026ebe:	4604      	mov	r4, r0
 8026ec0:	4628      	mov	r0, r5
 8026ec2:	f7f1 fa7f 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026ec6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8026ec8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8026ecc:	4606      	mov	r6, r0
 8026ece:	4628      	mov	r0, r5
 8026ed0:	f7f1 faac 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026ed4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8026ed8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8026edc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026ede:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8026ee2:	9312      	str	r3, [sp, #72]	; 0x48
 8026ee4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026ee8:	1c72      	adds	r2, r6, #1
 8026eea:	3001      	adds	r0, #1
 8026eec:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8026ef0:	ee07 2a90 	vmov	s15, r2
 8026ef4:	ee06 0a90 	vmov	s13, r0
 8026ef8:	ee36 6a47 	vsub.f32	s12, s12, s14
 8026efc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026f00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8026f04:	ee77 7a86 	vadd.f32	s15, s15, s12
 8026f08:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8026f0c:	9316      	str	r3, [sp, #88]	; 0x58
 8026f0e:	931a      	str	r3, [sp, #104]	; 0x68
 8026f10:	931e      	str	r3, [sp, #120]	; 0x78
 8026f12:	2300      	movs	r3, #0
 8026f14:	9320      	str	r3, [sp, #128]	; 0x80
 8026f16:	9321      	str	r3, [sp, #132]	; 0x84
 8026f18:	9322      	str	r3, [sp, #136]	; 0x88
 8026f1a:	9324      	str	r3, [sp, #144]	; 0x90
 8026f1c:	9325      	str	r3, [sp, #148]	; 0x94
 8026f1e:	9326      	str	r3, [sp, #152]	; 0x98
 8026f20:	9328      	str	r3, [sp, #160]	; 0xa0
 8026f22:	9329      	str	r3, [sp, #164]	; 0xa4
 8026f24:	932a      	str	r3, [sp, #168]	; 0xa8
 8026f26:	932c      	str	r3, [sp, #176]	; 0xb0
 8026f28:	932d      	str	r3, [sp, #180]	; 0xb4
 8026f2a:	932e      	str	r3, [sp, #184]	; 0xb8
 8026f2c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8026f30:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8026f34:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026f38:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026f3c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026f40:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8026f44:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026f48:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026f4c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026f50:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8026f54:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026f58:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026f5c:	a830      	add	r0, sp, #192	; 0xc0
 8026f5e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8026f62:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8026f66:	f000 fc43 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f6a:	eeb1 0a49 	vneg.f32	s0, s18
 8026f6e:	a830      	add	r0, sp, #192	; 0xc0
 8026f70:	f000 fd12 	bl	8027998 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026f74:	eeb1 0a68 	vneg.f32	s0, s17
 8026f78:	f000 fd1c 	bl	80279b4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026f7c:	eeb1 0a48 	vneg.f32	s0, s16
 8026f80:	f000 fd27 	bl	80279d2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026f84:	a840      	add	r0, sp, #256	; 0x100
 8026f86:	f000 fc33 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f8a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8026f8e:	a840      	add	r0, sp, #256	; 0x100
 8026f90:	f000 fc86 	bl	80278a0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8026f94:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8026f98:	f000 fcac 	bl	80278f4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8026f9c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8026fa0:	f000 fcd1 	bl	8027946 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8026fa4:	a850      	add	r0, sp, #320	; 0x140
 8026fa6:	f000 fc23 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026faa:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026fae:	a850      	add	r0, sp, #320	; 0x140
 8026fb0:	f000 fd1e 	bl	80279f0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8026fb4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026fb8:	f000 fd26 	bl	8027a08 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8026fbc:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026fc0:	f000 fd2f 	bl	8027a22 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8026fc4:	a860      	add	r0, sp, #384	; 0x180
 8026fc6:	f000 fc13 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026fca:	eeb0 0a49 	vmov.f32	s0, s18
 8026fce:	a860      	add	r0, sp, #384	; 0x180
 8026fd0:	f000 fce2 	bl	8027998 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026fd4:	eeb0 0a68 	vmov.f32	s0, s17
 8026fd8:	f000 fcec 	bl	80279b4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026fdc:	eeb0 0a48 	vmov.f32	s0, s16
 8026fe0:	f000 fcf7 	bl	80279d2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026fe4:	aa50      	add	r2, sp, #320	; 0x140
 8026fe6:	a960      	add	r1, sp, #384	; 0x180
 8026fe8:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026fea:	f000 fc1b 	bl	8027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026fee:	4628      	mov	r0, r5
 8026ff0:	aa40      	add	r2, sp, #256	; 0x100
 8026ff2:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026ff4:	f000 fc16 	bl	8027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026ff8:	4629      	mov	r1, r5
 8026ffa:	aa30      	add	r2, sp, #192	; 0xc0
 8026ffc:	a870      	add	r0, sp, #448	; 0x1c0
 8026ffe:	f000 fc11 	bl	8027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027002:	a880      	add	r0, sp, #512	; 0x200
 8027004:	f000 fbf4 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027008:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802700c:	a880      	add	r0, sp, #512	; 0x200
 802700e:	eeb1 0a40 	vneg.f32	s0, s0
 8027012:	f000 fcc1 	bl	8027998 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027016:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802701a:	a880      	add	r0, sp, #512	; 0x200
 802701c:	eeb1 0a40 	vneg.f32	s0, s0
 8027020:	f000 fcc8 	bl	80279b4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027024:	a890      	add	r0, sp, #576	; 0x240
 8027026:	f000 fbe3 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802702a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802702e:	a890      	add	r0, sp, #576	; 0x240
 8027030:	f000 fc26 	bl	8027880 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8027034:	a8a0      	add	r0, sp, #640	; 0x280
 8027036:	f000 fbdb 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802703a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802703e:	a8a0      	add	r0, sp, #640	; 0x280
 8027040:	f000 fcaa 	bl	8027998 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027044:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027048:	f000 fcb4 	bl	80279b4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802704c:	aa90      	add	r2, sp, #576	; 0x240
 802704e:	a9a0      	add	r1, sp, #640	; 0x280
 8027050:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027052:	f000 fbe7 	bl	8027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027056:	4628      	mov	r0, r5
 8027058:	aa80      	add	r2, sp, #512	; 0x200
 802705a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802705c:	f000 fbe2 	bl	8027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027060:	4629      	mov	r1, r5
 8027062:	aa70      	add	r2, sp, #448	; 0x1c0
 8027064:	4668      	mov	r0, sp
 8027066:	466d      	mov	r5, sp
 8027068:	f000 fbdc 	bl	8027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802706c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802706e:	ae70      	add	r6, sp, #448	; 0x1c0
 8027070:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027072:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027074:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027076:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027078:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802707a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802707e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8027082:	2500      	movs	r5, #0
 8027084:	0129      	lsls	r1, r5, #4
 8027086:	ab20      	add	r3, sp, #128	; 0x80
 8027088:	185e      	adds	r6, r3, r1
 802708a:	ab10      	add	r3, sp, #64	; 0x40
 802708c:	4419      	add	r1, r3
 802708e:	a870      	add	r0, sp, #448	; 0x1c0
 8027090:	f000 fb7e 	bl	8027790 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8027094:	3501      	adds	r5, #1
 8027096:	2d04      	cmp	r5, #4
 8027098:	ed86 0a00 	vstr	s0, [r6]
 802709c:	edc6 0a01 	vstr	s1, [r6, #4]
 80270a0:	ed86 1a02 	vstr	s2, [r6, #8]
 80270a4:	edc6 1a03 	vstr	s3, [r6, #12]
 80270a8:	d1ec      	bne.n	8027084 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80270aa:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80270ae:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80270b2:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80270b6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270ba:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80270be:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270c2:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80270c6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80270ca:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270ce:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270d2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80270d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80270da:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80270de:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270e2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80270e6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270ea:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80270ee:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80270f2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270f6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270fa:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80270fe:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8027102:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8027106:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802710a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802710e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027112:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8027116:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802711a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802711e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027122:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8027126:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802712a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802712e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027132:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8027136:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802713a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802713e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8027142:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027146:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802714a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802714e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8027152:	ecbd 8b04 	vpop	{d8-d9}
 8027156:	bd70      	pop	{r4, r5, r6, pc}

08027158 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027158:	b510      	push	{r4, lr}
 802715a:	4604      	mov	r4, r0
 802715c:	f7eb f817 	bl	801218e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027160:	4620      	mov	r0, r4
 8027162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027166:	f7ff bea1 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802716a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802716a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802716e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027172:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027176:	f7ff be99 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802717a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802717a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802717e:	f7ff be95 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027182 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8027182:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8027186:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802718a:	f7ff be8f 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802718e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802718e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027192:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802719a:	bfd8      	it	le
 802719c:	eeb0 0a67 	vmovle.f32	s0, s15
 80271a0:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80271a4:	f7ff be82 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080271a8 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80271a8:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80271ac:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80271b0:	f7ff be7c 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080271b4 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80271b4:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80271b8:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80271bc:	f7ff be76 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080271c0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80271c0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80271c4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80271c8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80271cc:	f7ff be6e 	b.w	8026eac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080271d0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80271d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80271d4:	ed2d 8b04 	vpush	{d8-d9}
 80271d8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80271dc:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80271e0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80271e4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80271e8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80271ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271f0:	bf54      	ite	pl
 80271f2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80271f6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80271fa:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80271fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027202:	bfd8      	it	le
 8027204:	eeb0 0a49 	vmovle.f32	s0, s18
 8027208:	eef4 8ac0 	vcmpe.f32	s17, s0
 802720c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027210:	bfd8      	it	le
 8027212:	eeb0 0a68 	vmovle.f32	s0, s17
 8027216:	460c      	mov	r4, r1
 8027218:	4607      	mov	r7, r0
 802721a:	f001 fe4f 	bl	8028ebc <floorf>
 802721e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027222:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027226:	bf58      	it	pl
 8027228:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802722c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027230:	bf56      	itet	pl
 8027232:	ee10 3a10 	vmovpl	r3, s0
 8027236:	2600      	movmi	r6, #0
 8027238:	b21e      	sxthpl	r6, r3
 802723a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802723e:	bfd8      	it	le
 8027240:	eeb0 8a69 	vmovle.f32	s16, s19
 8027244:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802724c:	bf58      	it	pl
 802724e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027252:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802725a:	bf54      	ite	pl
 802725c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027260:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027264:	f001 fde8 	bl	8028e38 <ceilf>
 8027268:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802726c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027270:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027274:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027278:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802727c:	ee07 8a90 	vmov	s15, r8
 8027280:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027284:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802728c:	bfd8      	it	le
 802728e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027292:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027296:	bfdc      	itt	le
 8027298:	ee10 3a10 	vmovle	r3, s0
 802729c:	fa0f f883 	sxthle.w	r8, r3
 80272a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272a4:	bf54      	ite	pl
 80272a6:	eeb0 0a69 	vmovpl.f32	s0, s19
 80272aa:	eeb0 0a48 	vmovmi.f32	s0, s16
 80272ae:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80272b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272b6:	bfd8      	it	le
 80272b8:	eeb0 0a49 	vmovle.f32	s0, s18
 80272bc:	eef4 8ac0 	vcmpe.f32	s17, s0
 80272c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272c4:	bfd8      	it	le
 80272c6:	eeb0 0a68 	vmovle.f32	s0, s17
 80272ca:	f001 fdf7 	bl	8028ebc <floorf>
 80272ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80272d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272d6:	bf58      	it	pl
 80272d8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80272dc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80272e0:	bf56      	itet	pl
 80272e2:	ee10 3a10 	vmovpl	r3, s0
 80272e6:	2500      	movmi	r5, #0
 80272e8:	b21d      	sxthpl	r5, r3
 80272ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272ee:	bfd8      	it	le
 80272f0:	eeb0 8a69 	vmovle.f32	s16, s19
 80272f4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80272f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272fc:	bf58      	it	pl
 80272fe:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027302:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802730a:	bf54      	ite	pl
 802730c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027310:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027314:	f001 fd90 	bl	8028e38 <ceilf>
 8027318:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802731c:	803e      	strh	r6, [r7, #0]
 802731e:	ee07 3a90 	vmov	s15, r3
 8027322:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027326:	807d      	strh	r5, [r7, #2]
 8027328:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802732c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027330:	bfd8      	it	le
 8027332:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027336:	eba8 0606 	sub.w	r6, r8, r6
 802733a:	bfdc      	itt	le
 802733c:	ee10 3a10 	vmovle	r3, s0
 8027340:	b21b      	sxthle	r3, r3
 8027342:	1b5d      	subs	r5, r3, r5
 8027344:	80be      	strh	r6, [r7, #4]
 8027346:	80fd      	strh	r5, [r7, #6]
 8027348:	ecbd 8b04 	vpop	{d8-d9}
 802734c:	4638      	mov	r0, r7
 802734e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027352 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8027352:	b513      	push	{r0, r1, r4, lr}
 8027354:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027358:	4604      	mov	r4, r0
 802735a:	b143      	cbz	r3, 802736e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802735c:	4601      	mov	r1, r0
 802735e:	4668      	mov	r0, sp
 8027360:	f7ff ff36 	bl	80271d0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027364:	6823      	ldr	r3, [r4, #0]
 8027366:	4669      	mov	r1, sp
 8027368:	691b      	ldr	r3, [r3, #16]
 802736a:	4620      	mov	r0, r4
 802736c:	4798      	blx	r3
 802736e:	b002      	add	sp, #8
 8027370:	bd10      	pop	{r4, pc}

08027372 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027372:	4603      	mov	r3, r0
 8027374:	3026      	adds	r0, #38	; 0x26
 8027376:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802737a:	b90b      	cbnz	r3, 8027380 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802737c:	f7ee be38 	b.w	8015ff0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027380:	f7ee be46 	b.w	8016010 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027384 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027388:	ed2d 8b04 	vpush	{d8-d9}
 802738c:	4604      	mov	r4, r0
 802738e:	469b      	mov	fp, r3
 8027390:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027394:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027398:	f9b1 6000 	ldrsh.w	r6, [r1]
 802739c:	8888      	ldrh	r0, [r1, #4]
 802739e:	b0b3      	sub	sp, #204	; 0xcc
 80273a0:	4430      	add	r0, r6
 80273a2:	b280      	uxth	r0, r0
 80273a4:	9206      	str	r2, [sp, #24]
 80273a6:	fa0f fe80 	sxth.w	lr, r0
 80273aa:	2200      	movs	r2, #0
 80273ac:	4596      	cmp	lr, r2
 80273ae:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80273b2:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80273b6:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80273ba:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80273bc:	9211      	str	r2, [sp, #68]	; 0x44
 80273be:	f340 8129 	ble.w	8027614 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80273c2:	45b4      	cmp	ip, r6
 80273c4:	f340 8126 	ble.w	8027614 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80273c8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80273cc:	88ca      	ldrh	r2, [r1, #6]
 80273ce:	442a      	add	r2, r5
 80273d0:	b292      	uxth	r2, r2
 80273d2:	b211      	sxth	r1, r2
 80273d4:	2900      	cmp	r1, #0
 80273d6:	f340 811d 	ble.w	8027614 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80273da:	42ab      	cmp	r3, r5
 80273dc:	f340 811a 	ble.w	8027614 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80273e0:	45f4      	cmp	ip, lr
 80273e2:	bfb8      	it	lt
 80273e4:	fa1f f08c 	uxthlt.w	r0, ip
 80273e8:	428b      	cmp	r3, r1
 80273ea:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80273ee:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80273f2:	bfb8      	it	lt
 80273f4:	b29a      	uxthlt	r2, r3
 80273f6:	1b80      	subs	r0, r0, r6
 80273f8:	1b52      	subs	r2, r2, r5
 80273fa:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80273fe:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8027402:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8027406:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802740a:	ab11      	add	r3, sp, #68	; 0x44
 802740c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027410:	6822      	ldr	r2, [r4, #0]
 8027412:	9307      	str	r3, [sp, #28]
 8027414:	ad13      	add	r5, sp, #76	; 0x4c
 8027416:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8027418:	e885 0003 	stmia.w	r5, {r0, r1}
 802741c:	4629      	mov	r1, r5
 802741e:	4620      	mov	r0, r4
 8027420:	4790      	blx	r2
 8027422:	4621      	mov	r1, r4
 8027424:	a815      	add	r0, sp, #84	; 0x54
 8027426:	f7ee fd3f 	bl	8015ea8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802742a:	a815      	add	r0, sp, #84	; 0x54
 802742c:	f7ed fa04 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027430:	9b07      	ldr	r3, [sp, #28]
 8027432:	1d26      	adds	r6, r4, #4
 8027434:	4618      	mov	r0, r3
 8027436:	4631      	mov	r1, r6
 8027438:	f7ed fa42 	bl	80148c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802743c:	4628      	mov	r0, r5
 802743e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8027442:	f7ed f9f9 	bl	8014838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027446:	4628      	mov	r0, r5
 8027448:	f7f1 f8a8 	bl	801859c <_ZNK8touchgfx6Bitmap7getDataEv>
 802744c:	9007      	str	r0, [sp, #28]
 802744e:	2800      	cmp	r0, #0
 8027450:	f000 80db 	beq.w	802760a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8027454:	f8db 2000 	ldr.w	r2, [fp]
 8027458:	9209      	str	r2, [sp, #36]	; 0x24
 802745a:	f8db 2004 	ldr.w	r2, [fp, #4]
 802745e:	920a      	str	r2, [sp, #40]	; 0x28
 8027460:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027464:	920b      	str	r2, [sp, #44]	; 0x2c
 8027466:	f8db 200c 	ldr.w	r2, [fp, #12]
 802746a:	920c      	str	r2, [sp, #48]	; 0x30
 802746c:	f8da 2000 	ldr.w	r2, [sl]
 8027470:	920d      	str	r2, [sp, #52]	; 0x34
 8027472:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027476:	920e      	str	r2, [sp, #56]	; 0x38
 8027478:	f8da 2008 	ldr.w	r2, [sl, #8]
 802747c:	920f      	str	r2, [sp, #60]	; 0x3c
 802747e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027482:	9210      	str	r2, [sp, #64]	; 0x40
 8027484:	a90d      	add	r1, sp, #52	; 0x34
 8027486:	4632      	mov	r2, r6
 8027488:	a809      	add	r0, sp, #36	; 0x24
 802748a:	f7ed f9fd 	bl	8014888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802748e:	4632      	mov	r2, r6
 8027490:	a90e      	add	r1, sp, #56	; 0x38
 8027492:	a80a      	add	r0, sp, #40	; 0x28
 8027494:	f7ed f9f8 	bl	8014888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027498:	4632      	mov	r2, r6
 802749a:	a90f      	add	r1, sp, #60	; 0x3c
 802749c:	a80b      	add	r0, sp, #44	; 0x2c
 802749e:	f7ed f9f3 	bl	8014888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80274a2:	4632      	mov	r2, r6
 80274a4:	a910      	add	r1, sp, #64	; 0x40
 80274a6:	a80c      	add	r0, sp, #48	; 0x30
 80274a8:	f7ed f9ee 	bl	8014888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80274ac:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80274b0:	edd7 4a00 	vldr	s9, [r7]
 80274b4:	edd7 5a01 	vldr	s11, [r7, #4]
 80274b8:	ed98 4a00 	vldr	s8, [r8]
 80274bc:	ed98 5a01 	vldr	s10, [r8, #4]
 80274c0:	ed99 9a00 	vldr	s18, [r9]
 80274c4:	ed99 8a01 	vldr	s16, [r9, #4]
 80274c8:	edd9 8a02 	vldr	s17, [r9, #8]
 80274cc:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80274d0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80274d4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80274d8:	eef0 6a67 	vmov.f32	s13, s15
 80274dc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80274e0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80274e4:	eeb0 7a67 	vmov.f32	s14, s15
 80274e8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80274ec:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80274f0:	eeb0 6a67 	vmov.f32	s12, s15
 80274f4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80274f8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80274fc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027500:	ee16 6a10 	vmov	r6, s12
 8027504:	eeb0 6a67 	vmov.f32	s12, s15
 8027508:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802750c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027510:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8027514:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027518:	68ff      	ldr	r7, [r7, #12]
 802751a:	9624      	str	r6, [sp, #144]	; 0x90
 802751c:	ee16 0a10 	vmov	r0, s12
 8027520:	eeb0 6a67 	vmov.f32	s12, s15
 8027524:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027528:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802752c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027530:	ee16 1a10 	vmov	r1, s12
 8027534:	eeb0 6a67 	vmov.f32	s12, s15
 8027538:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802753c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027540:	ee16 2a10 	vmov	r2, s12
 8027544:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027548:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802754c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027550:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8027554:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027558:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802755c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027560:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027564:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027568:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802756c:	922d      	str	r2, [sp, #180]	; 0xb4
 802756e:	4a2b      	ldr	r2, [pc, #172]	; (802761c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027570:	9b06      	ldr	r3, [sp, #24]
 8027572:	8812      	ldrh	r2, [r2, #0]
 8027574:	9317      	str	r3, [sp, #92]	; 0x5c
 8027576:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802757a:	9b07      	ldr	r3, [sp, #28]
 802757c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027580:	4628      	mov	r0, r5
 8027582:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027586:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802758a:	9218      	str	r2, [sp, #96]	; 0x60
 802758c:	9319      	str	r3, [sp, #100]	; 0x64
 802758e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027592:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027596:	9731      	str	r7, [sp, #196]	; 0xc4
 8027598:	f7f1 f830 	bl	80185fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802759c:	901a      	str	r0, [sp, #104]	; 0x68
 802759e:	4628      	mov	r0, r5
 80275a0:	f7f0 ff10 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80275a4:	901b      	str	r0, [sp, #108]	; 0x6c
 80275a6:	4628      	mov	r0, r5
 80275a8:	f7f0 ff40 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80275ac:	901c      	str	r0, [sp, #112]	; 0x70
 80275ae:	4628      	mov	r0, r5
 80275b0:	f7f0 ff08 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80275b4:	eeb4 9a48 	vcmp.f32	s18, s16
 80275b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275bc:	901d      	str	r0, [sp, #116]	; 0x74
 80275be:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80275c2:	d107      	bne.n	80275d4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80275c4:	eeb4 8a68 	vcmp.f32	s16, s17
 80275c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80275d0:	bf08      	it	eq
 80275d2:	461e      	moveq	r6, r3
 80275d4:	4b12      	ldr	r3, [pc, #72]	; (8027620 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80275d6:	681b      	ldr	r3, [r3, #0]
 80275d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80275dc:	b10a      	cbz	r2, 80275e2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80275de:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80275e0:	b905      	cbnz	r5, 80275e4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80275e2:	689d      	ldr	r5, [r3, #8]
 80275e4:	682b      	ldr	r3, [r5, #0]
 80275e6:	4620      	mov	r0, r4
 80275e8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80275ea:	f7ff fec2 	bl	8027372 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80275ee:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80275f2:	9604      	str	r6, [sp, #16]
 80275f4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80275f8:	ab13      	add	r3, sp, #76	; 0x4c
 80275fa:	9301      	str	r3, [sp, #4]
 80275fc:	ab15      	add	r3, sp, #84	; 0x54
 80275fe:	9300      	str	r3, [sp, #0]
 8027600:	aa1e      	add	r2, sp, #120	; 0x78
 8027602:	ab19      	add	r3, sp, #100	; 0x64
 8027604:	a917      	add	r1, sp, #92	; 0x5c
 8027606:	4628      	mov	r0, r5
 8027608:	47b8      	blx	r7
 802760a:	b033      	add	sp, #204	; 0xcc
 802760c:	ecbd 8b04 	vpop	{d8-d9}
 8027610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027614:	2300      	movs	r3, #0
 8027616:	9312      	str	r3, [sp, #72]	; 0x48
 8027618:	e6f7      	b.n	802740a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802761a:	bf00      	nop
 802761c:	20012d9e 	.word	0x20012d9e
 8027620:	20012da4 	.word	0x20012da4

08027624 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8027624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027628:	ed2d 8b02 	vpush	{d8}
 802762c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027630:	b098      	sub	sp, #96	; 0x60
 8027632:	4604      	mov	r4, r0
 8027634:	4688      	mov	r8, r1
 8027636:	2b00      	cmp	r3, #0
 8027638:	d077      	beq.n	802772a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802763a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802763e:	4628      	mov	r0, r5
 8027640:	f7f0 fec0 	bl	80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027644:	ee07 0a90 	vmov	s15, r0
 8027648:	4628      	mov	r0, r5
 802764a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802764e:	f7f0 feed 	bl	801842c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027652:	4b4e      	ldr	r3, [pc, #312]	; (802778c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8027654:	781b      	ldrb	r3, [r3, #0]
 8027656:	ee07 0a90 	vmov	s15, r0
 802765a:	2b01      	cmp	r3, #1
 802765c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027660:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027664:	d066      	beq.n	8027734 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027666:	eeb0 6a47 	vmov.f32	s12, s14
 802766a:	ee17 3a10 	vmov	r3, s14
 802766e:	eeb0 4a48 	vmov.f32	s8, s16
 8027672:	eeb0 7a48 	vmov.f32	s14, s16
 8027676:	eef0 4a67 	vmov.f32	s9, s15
 802767a:	eeb0 8a67 	vmov.f32	s16, s15
 802767e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027682:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027686:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802768a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802768e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027692:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027696:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027698:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802769a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802769c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80276a0:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80276a4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80276a8:	ee73 1a65 	vsub.f32	s3, s6, s11
 80276ac:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80276b0:	ee32 1a45 	vsub.f32	s2, s4, s10
 80276b4:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80276b8:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80276bc:	eee1 6a21 	vfma.f32	s13, s2, s3
 80276c0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80276c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80276c8:	dd3d      	ble.n	8027746 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80276ca:	ed8d 5a04 	vstr	s10, [sp, #16]
 80276ce:	ed8d 2a05 	vstr	s4, [sp, #20]
 80276d2:	edcd 2a06 	vstr	s5, [sp, #24]
 80276d6:	f8cd c01c 	str.w	ip, [sp, #28]
 80276da:	edcd 5a08 	vstr	s11, [sp, #32]
 80276de:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80276e2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80276e6:	970b      	str	r7, [sp, #44]	; 0x2c
 80276e8:	960c      	str	r6, [sp, #48]	; 0x30
 80276ea:	950d      	str	r5, [sp, #52]	; 0x34
 80276ec:	920e      	str	r2, [sp, #56]	; 0x38
 80276ee:	900f      	str	r0, [sp, #60]	; 0x3c
 80276f0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80276f4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80276f8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80276fc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027700:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8027704:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027708:	9316      	str	r3, [sp, #88]	; 0x58
 802770a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802770e:	ab14      	add	r3, sp, #80	; 0x50
 8027710:	9303      	str	r3, [sp, #12]
 8027712:	ab10      	add	r3, sp, #64	; 0x40
 8027714:	9302      	str	r3, [sp, #8]
 8027716:	ab0c      	add	r3, sp, #48	; 0x30
 8027718:	9301      	str	r3, [sp, #4]
 802771a:	ab08      	add	r3, sp, #32
 802771c:	9300      	str	r3, [sp, #0]
 802771e:	2200      	movs	r2, #0
 8027720:	ab04      	add	r3, sp, #16
 8027722:	4641      	mov	r1, r8
 8027724:	4620      	mov	r0, r4
 8027726:	f7ff fe2d 	bl	8027384 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802772a:	b018      	add	sp, #96	; 0x60
 802772c:	ecbd 8b02 	vpop	{d8}
 8027730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027734:	eeb0 6a48 	vmov.f32	s12, s16
 8027738:	eef0 4a47 	vmov.f32	s9, s14
 802773c:	ee17 3a90 	vmov	r3, s15
 8027740:	eeb0 4a67 	vmov.f32	s8, s15
 8027744:	e79b      	b.n	802767e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8027746:	ed8d 5a05 	vstr	s10, [sp, #20]
 802774a:	ed8d 2a04 	vstr	s4, [sp, #16]
 802774e:	f8cd c018 	str.w	ip, [sp, #24]
 8027752:	edcd 2a07 	vstr	s5, [sp, #28]
 8027756:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802775a:	ed8d 3a08 	vstr	s6, [sp, #32]
 802775e:	970a      	str	r7, [sp, #40]	; 0x28
 8027760:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027764:	960d      	str	r6, [sp, #52]	; 0x34
 8027766:	950c      	str	r5, [sp, #48]	; 0x30
 8027768:	900e      	str	r0, [sp, #56]	; 0x38
 802776a:	920f      	str	r2, [sp, #60]	; 0x3c
 802776c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027770:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027774:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027778:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802777c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027780:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027784:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027788:	9317      	str	r3, [sp, #92]	; 0x5c
 802778a:	e7c0      	b.n	802770e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802778c:	20012d9c 	.word	0x20012d9c

08027790 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027790:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027792:	b08d      	sub	sp, #52	; 0x34
 8027794:	2300      	movs	r3, #0
 8027796:	9304      	str	r3, [sp, #16]
 8027798:	9305      	str	r3, [sp, #20]
 802779a:	9306      	str	r3, [sp, #24]
 802779c:	aa04      	add	r2, sp, #16
 802779e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80277a2:	9307      	str	r3, [sp, #28]
 80277a4:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80277a8:	4613      	mov	r3, r2
 80277aa:	f101 0710 	add.w	r7, r1, #16
 80277ae:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80277ec <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80277b2:	460c      	mov	r4, r1
 80277b4:	4605      	mov	r5, r0
 80277b6:	ecb4 7a01 	vldmia	r4!, {s14}
 80277ba:	ecf5 6a01 	vldmia	r5!, {s13}
 80277be:	42bc      	cmp	r4, r7
 80277c0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80277c4:	d1f7      	bne.n	80277b6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80277c6:	3010      	adds	r0, #16
 80277c8:	42b0      	cmp	r0, r6
 80277ca:	ece2 7a01 	vstmia	r2!, {s15}
 80277ce:	d1ee      	bne.n	80277ae <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80277d0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80277d2:	ac0c      	add	r4, sp, #48	; 0x30
 80277d4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80277d8:	ed9d 0a08 	vldr	s0, [sp, #32]
 80277dc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80277e0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80277e4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80277e8:	b00d      	add	sp, #52	; 0x34
 80277ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80277ec:	00000000 	.word	0x00000000

080277f0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80277f0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027820 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80277f4:	2300      	movs	r3, #0
 80277f6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80277fa:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80277fe:	2200      	movs	r2, #0
 8027800:	4293      	cmp	r3, r2
 8027802:	f102 0201 	add.w	r2, r2, #1
 8027806:	bf14      	ite	ne
 8027808:	eef0 6a47 	vmovne.f32	s13, s14
 802780c:	eef0 6a67 	vmoveq.f32	s13, s15
 8027810:	2a04      	cmp	r2, #4
 8027812:	ece1 6a01 	vstmia	r1!, {s13}
 8027816:	d1f3      	bne.n	8027800 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027818:	3301      	adds	r3, #1
 802781a:	2b04      	cmp	r3, #4
 802781c:	d1ed      	bne.n	80277fa <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802781e:	4770      	bx	lr
 8027820:	00000000 	.word	0x00000000

08027824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8027824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027828:	460c      	mov	r4, r1
 802782a:	4605      	mov	r5, r0
 802782c:	4690      	mov	r8, r2
 802782e:	f7ff ffdf 	bl	80277f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027832:	4628      	mov	r0, r5
 8027834:	4621      	mov	r1, r4
 8027836:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802783a:	2300      	movs	r3, #0
 802783c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802787c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027840:	eb08 0603 	add.w	r6, r8, r3
 8027844:	460f      	mov	r7, r1
 8027846:	2400      	movs	r4, #0
 8027848:	4632      	mov	r2, r6
 802784a:	ecf7 6a01 	vldmia	r7!, {s13}
 802784e:	ed92 7a00 	vldr	s14, [r2]
 8027852:	3401      	adds	r4, #1
 8027854:	2c04      	cmp	r4, #4
 8027856:	f106 0610 	add.w	r6, r6, #16
 802785a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802785e:	d1f3      	bne.n	8027848 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027860:	18c2      	adds	r2, r0, r3
 8027862:	3304      	adds	r3, #4
 8027864:	2b10      	cmp	r3, #16
 8027866:	edc2 7a00 	vstr	s15, [r2]
 802786a:	d1e7      	bne.n	802783c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802786c:	3110      	adds	r1, #16
 802786e:	4561      	cmp	r1, ip
 8027870:	f100 0010 	add.w	r0, r0, #16
 8027874:	d1e1      	bne.n	802783a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8027876:	4628      	mov	r0, r5
 8027878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802787c:	00000000 	.word	0x00000000

08027880 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027880:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027884:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027888:	f100 0320 	add.w	r3, r0, #32
 802788c:	3030      	adds	r0, #48	; 0x30
 802788e:	ecf3 7a01 	vldmia	r3!, {s15}
 8027892:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027896:	4283      	cmp	r3, r0
 8027898:	edc3 7a03 	vstr	s15, [r3, #12]
 802789c:	d1f7      	bne.n	802788e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802789e:	4770      	bx	lr

080278a0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80278a0:	b510      	push	{r4, lr}
 80278a2:	ed2d 8b02 	vpush	{d8}
 80278a6:	4604      	mov	r4, r0
 80278a8:	eef0 8a40 	vmov.f32	s17, s0
 80278ac:	f001 fa7a 	bl	8028da4 <sinf>
 80278b0:	eeb0 8a40 	vmov.f32	s16, s0
 80278b4:	eeb0 0a68 	vmov.f32	s0, s17
 80278b8:	f001 fa30 	bl	8028d1c <cosf>
 80278bc:	f104 0310 	add.w	r3, r4, #16
 80278c0:	f104 0220 	add.w	r2, r4, #32
 80278c4:	eeb1 6a48 	vneg.f32	s12, s16
 80278c8:	edd3 7a04 	vldr	s15, [r3, #16]
 80278cc:	edd3 6a00 	vldr	s13, [r3]
 80278d0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80278d4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80278d8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80278dc:	eee6 7a88 	vfma.f32	s15, s13, s16
 80278e0:	eca3 7a01 	vstmia	r3!, {s14}
 80278e4:	429a      	cmp	r2, r3
 80278e6:	edc3 7a03 	vstr	s15, [r3, #12]
 80278ea:	d1ed      	bne.n	80278c8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80278ec:	ecbd 8b02 	vpop	{d8}
 80278f0:	4620      	mov	r0, r4
 80278f2:	bd10      	pop	{r4, pc}

080278f4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80278f4:	b510      	push	{r4, lr}
 80278f6:	ed2d 8b02 	vpush	{d8}
 80278fa:	4604      	mov	r4, r0
 80278fc:	eef0 8a40 	vmov.f32	s17, s0
 8027900:	f001 fa50 	bl	8028da4 <sinf>
 8027904:	eeb0 8a40 	vmov.f32	s16, s0
 8027908:	eeb0 0a68 	vmov.f32	s0, s17
 802790c:	f001 fa06 	bl	8028d1c <cosf>
 8027910:	4623      	mov	r3, r4
 8027912:	f104 0210 	add.w	r2, r4, #16
 8027916:	eeb1 6a48 	vneg.f32	s12, s16
 802791a:	edd3 7a08 	vldr	s15, [r3, #32]
 802791e:	edd3 6a00 	vldr	s13, [r3]
 8027922:	ee27 7a88 	vmul.f32	s14, s15, s16
 8027926:	ee67 7a80 	vmul.f32	s15, s15, s0
 802792a:	eea6 7a80 	vfma.f32	s14, s13, s0
 802792e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8027932:	eca3 7a01 	vstmia	r3!, {s14}
 8027936:	429a      	cmp	r2, r3
 8027938:	edc3 7a07 	vstr	s15, [r3, #28]
 802793c:	d1ed      	bne.n	802791a <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802793e:	ecbd 8b02 	vpop	{d8}
 8027942:	4620      	mov	r0, r4
 8027944:	bd10      	pop	{r4, pc}

08027946 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8027946:	b510      	push	{r4, lr}
 8027948:	ed2d 8b02 	vpush	{d8}
 802794c:	4604      	mov	r4, r0
 802794e:	eef0 8a40 	vmov.f32	s17, s0
 8027952:	f001 fa27 	bl	8028da4 <sinf>
 8027956:	eeb0 8a40 	vmov.f32	s16, s0
 802795a:	eeb0 0a68 	vmov.f32	s0, s17
 802795e:	f001 f9dd 	bl	8028d1c <cosf>
 8027962:	4623      	mov	r3, r4
 8027964:	f104 0210 	add.w	r2, r4, #16
 8027968:	eeb1 6a48 	vneg.f32	s12, s16
 802796c:	edd3 7a04 	vldr	s15, [r3, #16]
 8027970:	edd3 6a00 	vldr	s13, [r3]
 8027974:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027978:	ee67 7a80 	vmul.f32	s15, s15, s0
 802797c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027980:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027984:	eca3 7a01 	vstmia	r3!, {s14}
 8027988:	429a      	cmp	r2, r3
 802798a:	edc3 7a03 	vstr	s15, [r3, #12]
 802798e:	d1ed      	bne.n	802796c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027990:	ecbd 8b02 	vpop	{d8}
 8027994:	4620      	mov	r0, r4
 8027996:	bd10      	pop	{r4, pc}

08027998 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8027998:	4603      	mov	r3, r0
 802799a:	f100 0210 	add.w	r2, r0, #16
 802799e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80279a2:	edd3 7a00 	vldr	s15, [r3]
 80279a6:	eee7 7a00 	vfma.f32	s15, s14, s0
 80279aa:	ece3 7a01 	vstmia	r3!, {s15}
 80279ae:	4293      	cmp	r3, r2
 80279b0:	d1f5      	bne.n	802799e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80279b2:	4770      	bx	lr

080279b4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80279b4:	f100 0310 	add.w	r3, r0, #16
 80279b8:	f100 0220 	add.w	r2, r0, #32
 80279bc:	ed93 7a08 	vldr	s14, [r3, #32]
 80279c0:	edd3 7a00 	vldr	s15, [r3]
 80279c4:	eee7 7a00 	vfma.f32	s15, s14, s0
 80279c8:	ece3 7a01 	vstmia	r3!, {s15}
 80279cc:	4293      	cmp	r3, r2
 80279ce:	d1f5      	bne.n	80279bc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80279d0:	4770      	bx	lr

080279d2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80279d2:	f100 0320 	add.w	r3, r0, #32
 80279d6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80279da:	ed93 7a04 	vldr	s14, [r3, #16]
 80279de:	edd3 7a00 	vldr	s15, [r3]
 80279e2:	eee7 7a00 	vfma.f32	s15, s14, s0
 80279e6:	ece3 7a01 	vstmia	r3!, {s15}
 80279ea:	4293      	cmp	r3, r2
 80279ec:	d1f5      	bne.n	80279da <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 80279ee:	4770      	bx	lr

080279f0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 80279f0:	4603      	mov	r3, r0
 80279f2:	f100 0210 	add.w	r2, r0, #16
 80279f6:	edd3 7a00 	vldr	s15, [r3]
 80279fa:	ee67 7a80 	vmul.f32	s15, s15, s0
 80279fe:	ece3 7a01 	vstmia	r3!, {s15}
 8027a02:	4293      	cmp	r3, r2
 8027a04:	d1f7      	bne.n	80279f6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8027a06:	4770      	bx	lr

08027a08 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027a08:	f100 0310 	add.w	r3, r0, #16
 8027a0c:	f100 0220 	add.w	r2, r0, #32
 8027a10:	edd3 7a00 	vldr	s15, [r3]
 8027a14:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027a18:	ece3 7a01 	vstmia	r3!, {s15}
 8027a1c:	4293      	cmp	r3, r2
 8027a1e:	d1f7      	bne.n	8027a10 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027a20:	4770      	bx	lr

08027a22 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8027a22:	f100 0320 	add.w	r3, r0, #32
 8027a26:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027a2a:	edd3 7a00 	vldr	s15, [r3]
 8027a2e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027a32:	ece3 7a01 	vstmia	r3!, {s15}
 8027a36:	4293      	cmp	r3, r2
 8027a38:	d1f7      	bne.n	8027a2a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027a3a:	4770      	bx	lr

08027a3c <arm_max_f32>:
 8027a3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027a40:	1e4f      	subs	r7, r1, #1
 8027a42:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8027a46:	f100 0e04 	add.w	lr, r0, #4
 8027a4a:	edd0 7a00 	vldr	s15, [r0]
 8027a4e:	d058      	beq.n	8027b02 <arm_max_f32+0xc6>
 8027a50:	3014      	adds	r0, #20
 8027a52:	46c4      	mov	ip, r8
 8027a54:	2604      	movs	r6, #4
 8027a56:	2400      	movs	r4, #0
 8027a58:	ed10 6a04 	vldr	s12, [r0, #-16]
 8027a5c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8027a60:	ed10 7a02 	vldr	s14, [r0, #-8]
 8027a64:	ed50 5a01 	vldr	s11, [r0, #-4]
 8027a68:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8027a6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a70:	bfc8      	it	gt
 8027a72:	eef0 7a46 	vmovgt.f32	s15, s12
 8027a76:	f1a6 0503 	sub.w	r5, r6, #3
 8027a7a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8027a7e:	bfc8      	it	gt
 8027a80:	462c      	movgt	r4, r5
 8027a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a86:	bf48      	it	mi
 8027a88:	eef0 7a66 	vmovmi.f32	s15, s13
 8027a8c:	f1a6 0502 	sub.w	r5, r6, #2
 8027a90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8027a94:	bf48      	it	mi
 8027a96:	462c      	movmi	r4, r5
 8027a98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a9c:	bf48      	it	mi
 8027a9e:	eef0 7a47 	vmovmi.f32	s15, s14
 8027aa2:	f106 35ff 	add.w	r5, r6, #4294967295
 8027aa6:	eef4 7ae5 	vcmpe.f32	s15, s11
 8027aaa:	bf48      	it	mi
 8027aac:	462c      	movmi	r4, r5
 8027aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ab2:	bf48      	it	mi
 8027ab4:	4634      	movmi	r4, r6
 8027ab6:	bf48      	it	mi
 8027ab8:	eef0 7a65 	vmovmi.f32	s15, s11
 8027abc:	f1bc 0c01 	subs.w	ip, ip, #1
 8027ac0:	f106 0604 	add.w	r6, r6, #4
 8027ac4:	f100 0010 	add.w	r0, r0, #16
 8027ac8:	d1c6      	bne.n	8027a58 <arm_max_f32+0x1c>
 8027aca:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8027ace:	f017 0003 	ands.w	r0, r7, #3
 8027ad2:	d018      	beq.n	8027b06 <arm_max_f32+0xca>
 8027ad4:	1a08      	subs	r0, r1, r0
 8027ad6:	ecbe 7a01 	vldmia	lr!, {s14}
 8027ada:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8027ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ae2:	bfc8      	it	gt
 8027ae4:	4604      	movgt	r4, r0
 8027ae6:	f100 0001 	add.w	r0, r0, #1
 8027aea:	bfd8      	it	le
 8027aec:	eeb0 7a67 	vmovle.f32	s14, s15
 8027af0:	4288      	cmp	r0, r1
 8027af2:	eef0 7a47 	vmov.f32	s15, s14
 8027af6:	d1ee      	bne.n	8027ad6 <arm_max_f32+0x9a>
 8027af8:	ed82 7a00 	vstr	s14, [r2]
 8027afc:	601c      	str	r4, [r3, #0]
 8027afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027b02:	4644      	mov	r4, r8
 8027b04:	e7e3      	b.n	8027ace <arm_max_f32+0x92>
 8027b06:	eeb0 7a67 	vmov.f32	s14, s15
 8027b0a:	e7f5      	b.n	8027af8 <arm_max_f32+0xbc>

08027b0c <arm_rfft_fast_init_f32>:
 8027b0c:	084b      	lsrs	r3, r1, #1
 8027b0e:	2b80      	cmp	r3, #128	; 0x80
 8027b10:	b410      	push	{r4}
 8027b12:	8201      	strh	r1, [r0, #16]
 8027b14:	8003      	strh	r3, [r0, #0]
 8027b16:	d047      	beq.n	8027ba8 <arm_rfft_fast_init_f32+0x9c>
 8027b18:	d917      	bls.n	8027b4a <arm_rfft_fast_init_f32+0x3e>
 8027b1a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8027b1e:	d03d      	beq.n	8027b9c <arm_rfft_fast_init_f32+0x90>
 8027b20:	d929      	bls.n	8027b76 <arm_rfft_fast_init_f32+0x6a>
 8027b22:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8027b26:	d020      	beq.n	8027b6a <arm_rfft_fast_init_f32+0x5e>
 8027b28:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8027b2c:	d113      	bne.n	8027b56 <arm_rfft_fast_init_f32+0x4a>
 8027b2e:	4921      	ldr	r1, [pc, #132]	; (8027bb4 <arm_rfft_fast_init_f32+0xa8>)
 8027b30:	4a21      	ldr	r2, [pc, #132]	; (8027bb8 <arm_rfft_fast_init_f32+0xac>)
 8027b32:	4b22      	ldr	r3, [pc, #136]	; (8027bbc <arm_rfft_fast_init_f32+0xb0>)
 8027b34:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8027b38:	8184      	strh	r4, [r0, #12]
 8027b3a:	6081      	str	r1, [r0, #8]
 8027b3c:	6042      	str	r2, [r0, #4]
 8027b3e:	6143      	str	r3, [r0, #20]
 8027b40:	2000      	movs	r0, #0
 8027b42:	b240      	sxtb	r0, r0
 8027b44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027b48:	4770      	bx	lr
 8027b4a:	2b20      	cmp	r3, #32
 8027b4c:	d01c      	beq.n	8027b88 <arm_rfft_fast_init_f32+0x7c>
 8027b4e:	2b40      	cmp	r3, #64	; 0x40
 8027b50:	d006      	beq.n	8027b60 <arm_rfft_fast_init_f32+0x54>
 8027b52:	2b10      	cmp	r3, #16
 8027b54:	d01d      	beq.n	8027b92 <arm_rfft_fast_init_f32+0x86>
 8027b56:	20ff      	movs	r0, #255	; 0xff
 8027b58:	b240      	sxtb	r0, r0
 8027b5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027b5e:	4770      	bx	lr
 8027b60:	2438      	movs	r4, #56	; 0x38
 8027b62:	4917      	ldr	r1, [pc, #92]	; (8027bc0 <arm_rfft_fast_init_f32+0xb4>)
 8027b64:	4a17      	ldr	r2, [pc, #92]	; (8027bc4 <arm_rfft_fast_init_f32+0xb8>)
 8027b66:	4b18      	ldr	r3, [pc, #96]	; (8027bc8 <arm_rfft_fast_init_f32+0xbc>)
 8027b68:	e7e6      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027b6a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8027b6e:	4917      	ldr	r1, [pc, #92]	; (8027bcc <arm_rfft_fast_init_f32+0xc0>)
 8027b70:	4a17      	ldr	r2, [pc, #92]	; (8027bd0 <arm_rfft_fast_init_f32+0xc4>)
 8027b72:	4b18      	ldr	r3, [pc, #96]	; (8027bd4 <arm_rfft_fast_init_f32+0xc8>)
 8027b74:	e7e0      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027b76:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8027b7a:	d1ec      	bne.n	8027b56 <arm_rfft_fast_init_f32+0x4a>
 8027b7c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8027b80:	4915      	ldr	r1, [pc, #84]	; (8027bd8 <arm_rfft_fast_init_f32+0xcc>)
 8027b82:	4a16      	ldr	r2, [pc, #88]	; (8027bdc <arm_rfft_fast_init_f32+0xd0>)
 8027b84:	4b16      	ldr	r3, [pc, #88]	; (8027be0 <arm_rfft_fast_init_f32+0xd4>)
 8027b86:	e7d7      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027b88:	2430      	movs	r4, #48	; 0x30
 8027b8a:	4916      	ldr	r1, [pc, #88]	; (8027be4 <arm_rfft_fast_init_f32+0xd8>)
 8027b8c:	4a16      	ldr	r2, [pc, #88]	; (8027be8 <arm_rfft_fast_init_f32+0xdc>)
 8027b8e:	4b17      	ldr	r3, [pc, #92]	; (8027bec <arm_rfft_fast_init_f32+0xe0>)
 8027b90:	e7d2      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027b92:	2414      	movs	r4, #20
 8027b94:	4916      	ldr	r1, [pc, #88]	; (8027bf0 <arm_rfft_fast_init_f32+0xe4>)
 8027b96:	4a17      	ldr	r2, [pc, #92]	; (8027bf4 <arm_rfft_fast_init_f32+0xe8>)
 8027b98:	4b17      	ldr	r3, [pc, #92]	; (8027bf8 <arm_rfft_fast_init_f32+0xec>)
 8027b9a:	e7cd      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027b9c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8027ba0:	4916      	ldr	r1, [pc, #88]	; (8027bfc <arm_rfft_fast_init_f32+0xf0>)
 8027ba2:	4a17      	ldr	r2, [pc, #92]	; (8027c00 <arm_rfft_fast_init_f32+0xf4>)
 8027ba4:	4b17      	ldr	r3, [pc, #92]	; (8027c04 <arm_rfft_fast_init_f32+0xf8>)
 8027ba6:	e7c7      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027ba8:	24d0      	movs	r4, #208	; 0xd0
 8027baa:	4917      	ldr	r1, [pc, #92]	; (8027c08 <arm_rfft_fast_init_f32+0xfc>)
 8027bac:	4a17      	ldr	r2, [pc, #92]	; (8027c0c <arm_rfft_fast_init_f32+0x100>)
 8027bae:	4b18      	ldr	r3, [pc, #96]	; (8027c10 <arm_rfft_fast_init_f32+0x104>)
 8027bb0:	e7c2      	b.n	8027b38 <arm_rfft_fast_init_f32+0x2c>
 8027bb2:	bf00      	nop
 8027bb4:	0803d490 	.word	0x0803d490
 8027bb8:	0802e688 	.word	0x0802e688
 8027bbc:	080347f8 	.word	0x080347f8
 8027bc0:	08032788 	.word	0x08032788
 8027bc4:	0803f250 	.word	0x0803f250
 8027bc8:	08041740 	.word	0x08041740
 8027bcc:	0803b178 	.word	0x0803b178
 8027bd0:	08039078 	.word	0x08039078
 8027bd4:	080327f8 	.word	0x080327f8
 8027bd8:	080413d0 	.word	0x080413d0
 8027bdc:	080387f8 	.word	0x080387f8
 8027be0:	0803f450 	.word	0x0803f450
 8027be4:	0803c030 	.word	0x0803c030
 8027be8:	0803b078 	.word	0x0803b078
 8027bec:	08032688 	.word	0x08032688
 8027bf0:	0803bf88 	.word	0x0803bf88
 8027bf4:	08038ff8 	.word	0x08038ff8
 8027bf8:	0803bfb0 	.word	0x0803bfb0
 8027bfc:	0803fc50 	.word	0x0803fc50
 8027c00:	0803c490 	.word	0x0803c490
 8027c04:	0803ffd0 	.word	0x0803ffd0
 8027c08:	08041940 	.word	0x08041940
 8027c0c:	0803c090 	.word	0x0803c090
 8027c10:	08040fd0 	.word	0x08040fd0

08027c14 <arm_rfft_fast_f32>:
 8027c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027c18:	8a06      	ldrh	r6, [r0, #16]
 8027c1a:	0876      	lsrs	r6, r6, #1
 8027c1c:	4607      	mov	r7, r0
 8027c1e:	4615      	mov	r5, r2
 8027c20:	8006      	strh	r6, [r0, #0]
 8027c22:	460c      	mov	r4, r1
 8027c24:	2b00      	cmp	r3, #0
 8027c26:	d15c      	bne.n	8027ce2 <arm_rfft_fast_f32+0xce>
 8027c28:	461a      	mov	r2, r3
 8027c2a:	2301      	movs	r3, #1
 8027c2c:	f000 fbe6 	bl	80283fc <arm_cfft_f32>
 8027c30:	edd4 7a00 	vldr	s15, [r4]
 8027c34:	ed94 7a01 	vldr	s14, [r4, #4]
 8027c38:	883e      	ldrh	r6, [r7, #0]
 8027c3a:	6978      	ldr	r0, [r7, #20]
 8027c3c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8027c40:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8027c44:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027c48:	ee77 6a87 	vadd.f32	s13, s15, s14
 8027c4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027c50:	3e01      	subs	r6, #1
 8027c52:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8027c56:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027c5a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8027c5e:	ed85 7a00 	vstr	s14, [r5]
 8027c62:	edc5 7a01 	vstr	s15, [r5, #4]
 8027c66:	3010      	adds	r0, #16
 8027c68:	f105 0210 	add.w	r2, r5, #16
 8027c6c:	3b08      	subs	r3, #8
 8027c6e:	f104 0110 	add.w	r1, r4, #16
 8027c72:	ed51 4a02 	vldr	s9, [r1, #-8]
 8027c76:	ed93 5a02 	vldr	s10, [r3, #8]
 8027c7a:	ed11 7a01 	vldr	s14, [r1, #-4]
 8027c7e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8027c82:	edd3 5a03 	vldr	s11, [r3, #12]
 8027c86:	ed50 6a01 	vldr	s13, [r0, #-4]
 8027c8a:	ee75 7a64 	vsub.f32	s15, s10, s9
 8027c8e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8027c92:	ee35 5a24 	vadd.f32	s10, s10, s9
 8027c96:	ee77 5a65 	vsub.f32	s11, s14, s11
 8027c9a:	ee66 4a27 	vmul.f32	s9, s12, s15
 8027c9e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8027ca2:	ee34 5a85 	vadd.f32	s10, s9, s10
 8027ca6:	ee26 6a04 	vmul.f32	s12, s12, s8
 8027caa:	ee66 6a84 	vmul.f32	s13, s13, s8
 8027cae:	ee77 7a25 	vadd.f32	s15, s14, s11
 8027cb2:	ee76 6a85 	vadd.f32	s13, s13, s10
 8027cb6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8027cba:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8027cbe:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027cc2:	3e01      	subs	r6, #1
 8027cc4:	ed42 6a02 	vstr	s13, [r2, #-8]
 8027cc8:	ed42 7a01 	vstr	s15, [r2, #-4]
 8027ccc:	f1a3 0308 	sub.w	r3, r3, #8
 8027cd0:	f101 0108 	add.w	r1, r1, #8
 8027cd4:	f100 0008 	add.w	r0, r0, #8
 8027cd8:	f102 0208 	add.w	r2, r2, #8
 8027cdc:	d1c9      	bne.n	8027c72 <arm_rfft_fast_f32+0x5e>
 8027cde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ce2:	edd1 7a00 	vldr	s15, [r1]
 8027ce6:	edd1 6a01 	vldr	s13, [r1, #4]
 8027cea:	6941      	ldr	r1, [r0, #20]
 8027cec:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027cf0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027cf4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027cf8:	ee27 7a23 	vmul.f32	s14, s14, s7
 8027cfc:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027d00:	3e01      	subs	r6, #1
 8027d02:	ed82 7a00 	vstr	s14, [r2]
 8027d06:	edc2 7a01 	vstr	s15, [r2, #4]
 8027d0a:	00f0      	lsls	r0, r6, #3
 8027d0c:	b3ee      	cbz	r6, 8027d8a <arm_rfft_fast_f32+0x176>
 8027d0e:	3808      	subs	r0, #8
 8027d10:	f101 0e10 	add.w	lr, r1, #16
 8027d14:	4420      	add	r0, r4
 8027d16:	f104 0110 	add.w	r1, r4, #16
 8027d1a:	f102 0c10 	add.w	ip, r2, #16
 8027d1e:	ed90 7a02 	vldr	s14, [r0, #8]
 8027d22:	ed51 6a02 	vldr	s13, [r1, #-8]
 8027d26:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8027d2a:	ed90 4a03 	vldr	s8, [r0, #12]
 8027d2e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8027d32:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8027d36:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8027d3a:	ee74 4a05 	vadd.f32	s9, s8, s10
 8027d3e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8027d42:	ee77 6a26 	vadd.f32	s13, s14, s13
 8027d46:	ee35 5a44 	vsub.f32	s10, s10, s8
 8027d4a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8027d4e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8027d52:	ee77 7a05 	vadd.f32	s15, s14, s10
 8027d56:	ee26 6a24 	vmul.f32	s12, s12, s9
 8027d5a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8027d5e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8027d62:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8027d66:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027d6a:	ee27 7a23 	vmul.f32	s14, s14, s7
 8027d6e:	3e01      	subs	r6, #1
 8027d70:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8027d74:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8027d78:	f1a0 0008 	sub.w	r0, r0, #8
 8027d7c:	f101 0108 	add.w	r1, r1, #8
 8027d80:	f10e 0e08 	add.w	lr, lr, #8
 8027d84:	f10c 0c08 	add.w	ip, ip, #8
 8027d88:	d1c9      	bne.n	8027d1e <arm_rfft_fast_f32+0x10a>
 8027d8a:	4638      	mov	r0, r7
 8027d8c:	4629      	mov	r1, r5
 8027d8e:	461a      	mov	r2, r3
 8027d90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027d94:	2301      	movs	r3, #1
 8027d96:	f000 bb31 	b.w	80283fc <arm_cfft_f32>
 8027d9a:	bf00      	nop

08027d9c <arm_cfft_radix8by2_f32>:
 8027d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027da0:	ed2d 8b08 	vpush	{d8-d11}
 8027da4:	f8b0 e000 	ldrh.w	lr, [r0]
 8027da8:	6842      	ldr	r2, [r0, #4]
 8027daa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8027dae:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8027db2:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8027db6:	4607      	mov	r7, r0
 8027db8:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8027dbc:	f000 80af 	beq.w	8027f1e <arm_cfft_radix8by2_f32+0x182>
 8027dc0:	3310      	adds	r3, #16
 8027dc2:	18ce      	adds	r6, r1, r3
 8027dc4:	3210      	adds	r2, #16
 8027dc6:	4443      	add	r3, r8
 8027dc8:	f101 0510 	add.w	r5, r1, #16
 8027dcc:	f108 0410 	add.w	r4, r8, #16
 8027dd0:	ed54 1a04 	vldr	s3, [r4, #-16]
 8027dd4:	ed13 4a04 	vldr	s8, [r3, #-16]
 8027dd8:	ed53 3a03 	vldr	s7, [r3, #-12]
 8027ddc:	ed53 5a02 	vldr	s11, [r3, #-8]
 8027de0:	ed13 5a01 	vldr	s10, [r3, #-4]
 8027de4:	ed54 6a03 	vldr	s13, [r4, #-12]
 8027de8:	ed14 0a02 	vldr	s0, [r4, #-8]
 8027dec:	ed16 2a04 	vldr	s4, [r6, #-16]
 8027df0:	ed56 2a03 	vldr	s5, [r6, #-12]
 8027df4:	ed15 6a03 	vldr	s12, [r5, #-12]
 8027df8:	ed15 7a01 	vldr	s14, [r5, #-4]
 8027dfc:	ed15 3a04 	vldr	s6, [r5, #-16]
 8027e00:	ed54 7a01 	vldr	s15, [r4, #-4]
 8027e04:	ed56 0a02 	vldr	s1, [r6, #-8]
 8027e08:	ed16 1a01 	vldr	s2, [r6, #-4]
 8027e0c:	ed55 4a02 	vldr	s9, [r5, #-8]
 8027e10:	ee73 ba21 	vadd.f32	s23, s6, s3
 8027e14:	ee36 ba26 	vadd.f32	s22, s12, s13
 8027e18:	ee37 aa27 	vadd.f32	s20, s14, s15
 8027e1c:	ee72 9a04 	vadd.f32	s19, s4, s8
 8027e20:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8027e24:	ee31 8a05 	vadd.f32	s16, s2, s10
 8027e28:	ee74 aa80 	vadd.f32	s21, s9, s0
 8027e2c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8027e30:	ed45 ba04 	vstr	s23, [r5, #-16]
 8027e34:	ed05 ba03 	vstr	s22, [r5, #-12]
 8027e38:	ed45 aa02 	vstr	s21, [r5, #-8]
 8027e3c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8027e40:	ed06 8a01 	vstr	s16, [r6, #-4]
 8027e44:	ed46 9a04 	vstr	s19, [r6, #-16]
 8027e48:	ed06 9a03 	vstr	s18, [r6, #-12]
 8027e4c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8027e50:	ee76 6a66 	vsub.f32	s13, s12, s13
 8027e54:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8027e58:	ed12 6a03 	vldr	s12, [r2, #-12]
 8027e5c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8027e60:	ee33 3a61 	vsub.f32	s6, s6, s3
 8027e64:	ee34 4a42 	vsub.f32	s8, s8, s4
 8027e68:	ee26 8a86 	vmul.f32	s16, s13, s12
 8027e6c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8027e70:	ee63 1a22 	vmul.f32	s3, s6, s5
 8027e74:	ee24 4a22 	vmul.f32	s8, s8, s5
 8027e78:	ee23 3a06 	vmul.f32	s6, s6, s12
 8027e7c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8027e80:	ee23 6a86 	vmul.f32	s12, s7, s12
 8027e84:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8027e88:	ee36 6a04 	vadd.f32	s12, s12, s8
 8027e8c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8027e90:	ee72 3a63 	vsub.f32	s7, s4, s7
 8027e94:	ee71 2a88 	vadd.f32	s5, s3, s16
 8027e98:	ed44 6a03 	vstr	s13, [r4, #-12]
 8027e9c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8027ea0:	ed43 3a04 	vstr	s7, [r3, #-16]
 8027ea4:	ed03 6a03 	vstr	s12, [r3, #-12]
 8027ea8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8027eac:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8027eb0:	ed12 7a01 	vldr	s14, [r2, #-4]
 8027eb4:	ed52 5a02 	vldr	s11, [r2, #-8]
 8027eb8:	ee35 6a41 	vsub.f32	s12, s10, s2
 8027ebc:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8027ec0:	ee67 3a87 	vmul.f32	s7, s15, s14
 8027ec4:	ee26 5a87 	vmul.f32	s10, s13, s14
 8027ec8:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8027ecc:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8027ed0:	ee64 4a87 	vmul.f32	s9, s9, s14
 8027ed4:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8027ed8:	ee26 7a07 	vmul.f32	s14, s12, s14
 8027edc:	ee26 6a25 	vmul.f32	s12, s12, s11
 8027ee0:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8027ee4:	ee74 5a23 	vadd.f32	s11, s8, s7
 8027ee8:	ee35 6a46 	vsub.f32	s12, s10, s12
 8027eec:	ee37 7a26 	vadd.f32	s14, s14, s13
 8027ef0:	f1be 0e01 	subs.w	lr, lr, #1
 8027ef4:	ed44 5a02 	vstr	s11, [r4, #-8]
 8027ef8:	f105 0510 	add.w	r5, r5, #16
 8027efc:	ed44 7a01 	vstr	s15, [r4, #-4]
 8027f00:	f106 0610 	add.w	r6, r6, #16
 8027f04:	ed03 6a02 	vstr	s12, [r3, #-8]
 8027f08:	ed03 7a01 	vstr	s14, [r3, #-4]
 8027f0c:	f102 0210 	add.w	r2, r2, #16
 8027f10:	f104 0410 	add.w	r4, r4, #16
 8027f14:	f103 0310 	add.w	r3, r3, #16
 8027f18:	f47f af5a 	bne.w	8027dd0 <arm_cfft_radix8by2_f32+0x34>
 8027f1c:	687a      	ldr	r2, [r7, #4]
 8027f1e:	fa1f f48c 	uxth.w	r4, ip
 8027f22:	4608      	mov	r0, r1
 8027f24:	2302      	movs	r3, #2
 8027f26:	4621      	mov	r1, r4
 8027f28:	f000 fbca 	bl	80286c0 <arm_radix8_butterfly_f32>
 8027f2c:	ecbd 8b08 	vpop	{d8-d11}
 8027f30:	4640      	mov	r0, r8
 8027f32:	4621      	mov	r1, r4
 8027f34:	687a      	ldr	r2, [r7, #4]
 8027f36:	2302      	movs	r3, #2
 8027f38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027f3c:	f000 bbc0 	b.w	80286c0 <arm_radix8_butterfly_f32>

08027f40 <arm_cfft_radix8by4_f32>:
 8027f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027f44:	ed2d 8b0a 	vpush	{d8-d12}
 8027f48:	8802      	ldrh	r2, [r0, #0]
 8027f4a:	ed91 6a00 	vldr	s12, [r1]
 8027f4e:	b08f      	sub	sp, #60	; 0x3c
 8027f50:	460f      	mov	r7, r1
 8027f52:	0852      	lsrs	r2, r2, #1
 8027f54:	0093      	lsls	r3, r2, #2
 8027f56:	900c      	str	r0, [sp, #48]	; 0x30
 8027f58:	9103      	str	r1, [sp, #12]
 8027f5a:	6841      	ldr	r1, [r0, #4]
 8027f5c:	ed97 7a01 	vldr	s14, [r7, #4]
 8027f60:	4638      	mov	r0, r7
 8027f62:	4418      	add	r0, r3
 8027f64:	4606      	mov	r6, r0
 8027f66:	9009      	str	r0, [sp, #36]	; 0x24
 8027f68:	4418      	add	r0, r3
 8027f6a:	edd0 6a00 	vldr	s13, [r0]
 8027f6e:	edd6 3a00 	vldr	s7, [r6]
 8027f72:	edd6 2a01 	vldr	s5, [r6, #4]
 8027f76:	edd0 7a01 	vldr	s15, [r0, #4]
 8027f7a:	900a      	str	r0, [sp, #40]	; 0x28
 8027f7c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8027f80:	4604      	mov	r4, r0
 8027f82:	4625      	mov	r5, r4
 8027f84:	441c      	add	r4, r3
 8027f86:	ed94 4a00 	vldr	s8, [r4]
 8027f8a:	ed94 5a01 	vldr	s10, [r4, #4]
 8027f8e:	9401      	str	r4, [sp, #4]
 8027f90:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8027f94:	4630      	mov	r0, r6
 8027f96:	ee74 4a24 	vadd.f32	s9, s8, s9
 8027f9a:	463e      	mov	r6, r7
 8027f9c:	ee14 ea90 	vmov	lr, s9
 8027fa0:	ee76 6a66 	vsub.f32	s13, s12, s13
 8027fa4:	f846 eb08 	str.w	lr, [r6], #8
 8027fa8:	ee37 6a27 	vadd.f32	s12, s14, s15
 8027fac:	edd0 4a01 	vldr	s9, [r0, #4]
 8027fb0:	9604      	str	r6, [sp, #16]
 8027fb2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8027fb6:	9e01      	ldr	r6, [sp, #4]
 8027fb8:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8027fbc:	ed96 2a01 	vldr	s4, [r6, #4]
 8027fc0:	ee36 7a24 	vadd.f32	s14, s12, s9
 8027fc4:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8027fc8:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8027fcc:	ee36 6a62 	vsub.f32	s12, s12, s5
 8027fd0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8027fd4:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8027fd8:	ee73 3a45 	vsub.f32	s7, s6, s10
 8027fdc:	4604      	mov	r4, r0
 8027fde:	ee36 6a45 	vsub.f32	s12, s12, s10
 8027fe2:	ee75 6a26 	vadd.f32	s13, s10, s13
 8027fe6:	46a3      	mov	fp, r4
 8027fe8:	ee37 7a02 	vadd.f32	s14, s14, s4
 8027fec:	ee34 5a84 	vadd.f32	s10, s9, s8
 8027ff0:	ee13 8a90 	vmov	r8, s7
 8027ff4:	46a4      	mov	ip, r4
 8027ff6:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8027ffa:	ed87 7a01 	vstr	s14, [r7, #4]
 8027ffe:	f84b 8b08 	str.w	r8, [fp], #8
 8028002:	f1ac 0704 	sub.w	r7, ip, #4
 8028006:	ed8c 5a01 	vstr	s10, [ip, #4]
 802800a:	f101 0c08 	add.w	ip, r1, #8
 802800e:	462c      	mov	r4, r5
 8028010:	f8cd c014 	str.w	ip, [sp, #20]
 8028014:	ee15 ca90 	vmov	ip, s11
 8028018:	f844 cb08 	str.w	ip, [r4], #8
 802801c:	9407      	str	r4, [sp, #28]
 802801e:	f101 0410 	add.w	r4, r1, #16
 8028022:	ed85 6a01 	vstr	s12, [r5, #4]
 8028026:	0852      	lsrs	r2, r2, #1
 8028028:	9402      	str	r4, [sp, #8]
 802802a:	462c      	mov	r4, r5
 802802c:	f101 0518 	add.w	r5, r1, #24
 8028030:	920b      	str	r2, [sp, #44]	; 0x2c
 8028032:	46b2      	mov	sl, r6
 8028034:	9506      	str	r5, [sp, #24]
 8028036:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802803a:	3a02      	subs	r2, #2
 802803c:	ee16 5a90 	vmov	r5, s13
 8028040:	46b6      	mov	lr, r6
 8028042:	4630      	mov	r0, r6
 8028044:	0852      	lsrs	r2, r2, #1
 8028046:	f84a 5b08 	str.w	r5, [sl], #8
 802804a:	f1a0 0604 	sub.w	r6, r0, #4
 802804e:	edce 7a01 	vstr	s15, [lr, #4]
 8028052:	9208      	str	r2, [sp, #32]
 8028054:	f000 8130 	beq.w	80282b8 <arm_cfft_radix8by4_f32+0x378>
 8028058:	4691      	mov	r9, r2
 802805a:	9a03      	ldr	r2, [sp, #12]
 802805c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028060:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028064:	3b08      	subs	r3, #8
 8028066:	f102 0510 	add.w	r5, r2, #16
 802806a:	f101 0c20 	add.w	ip, r1, #32
 802806e:	f1a4 020c 	sub.w	r2, r4, #12
 8028072:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028076:	4433      	add	r3, r6
 8028078:	3410      	adds	r4, #16
 802807a:	4650      	mov	r0, sl
 802807c:	4659      	mov	r1, fp
 802807e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8028082:	ed14 5a02 	vldr	s10, [r4, #-8]
 8028086:	ed91 7a00 	vldr	s14, [r1]
 802808a:	edd0 7a00 	vldr	s15, [r0]
 802808e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8028092:	ed54 5a01 	vldr	s11, [r4, #-4]
 8028096:	edd0 6a01 	vldr	s13, [r0, #4]
 802809a:	ed91 6a01 	vldr	s12, [r1, #4]
 802809e:	ee33 8a85 	vadd.f32	s16, s7, s10
 80280a2:	ee34 0a25 	vadd.f32	s0, s8, s11
 80280a6:	ee78 4a07 	vadd.f32	s9, s16, s14
 80280aa:	ee74 5a65 	vsub.f32	s11, s8, s11
 80280ae:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80280b2:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80280b6:	ed45 4a02 	vstr	s9, [r5, #-8]
 80280ba:	edd1 4a01 	vldr	s9, [r1, #4]
 80280be:	ed90 4a01 	vldr	s8, [r0, #4]
 80280c2:	ee70 4a24 	vadd.f32	s9, s0, s9
 80280c6:	ee76 aa05 	vadd.f32	s21, s12, s10
 80280ca:	ee74 4a84 	vadd.f32	s9, s9, s8
 80280ce:	ee35 aac7 	vsub.f32	s20, s11, s14
 80280d2:	ed45 4a01 	vstr	s9, [r5, #-4]
 80280d6:	edd6 1a00 	vldr	s3, [r6]
 80280da:	edd7 0a00 	vldr	s1, [r7]
 80280de:	ed92 4a02 	vldr	s8, [r2, #8]
 80280e2:	edd3 3a02 	vldr	s7, [r3, #8]
 80280e6:	ed93 2a01 	vldr	s4, [r3, #4]
 80280ea:	ed16 1a01 	vldr	s2, [r6, #-4]
 80280ee:	edd2 2a01 	vldr	s5, [r2, #4]
 80280f2:	ed57 9a01 	vldr	s19, [r7, #-4]
 80280f6:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80280fa:	ee39 3a81 	vadd.f32	s6, s19, s2
 80280fe:	ee74 8a84 	vadd.f32	s17, s9, s8
 8028102:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8028106:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802810a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802810e:	ee18 aa90 	vmov	sl, s17
 8028112:	f847 a908 	str.w	sl, [r7], #-8
 8028116:	edd2 8a01 	vldr	s17, [r2, #4]
 802811a:	ed93 9a01 	vldr	s18, [r3, #4]
 802811e:	ee73 8a28 	vadd.f32	s17, s6, s17
 8028122:	ee3a aa27 	vadd.f32	s20, s20, s15
 8028126:	ee78 8a89 	vadd.f32	s17, s17, s18
 802812a:	ee74 0a63 	vsub.f32	s1, s8, s7
 802812e:	edc7 8a01 	vstr	s17, [r7, #4]
 8028132:	ed18 ba02 	vldr	s22, [r8, #-8]
 8028136:	ed58 8a01 	vldr	s17, [r8, #-4]
 802813a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802813e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8028142:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8028146:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802814a:	ee30 9a81 	vadd.f32	s18, s1, s2
 802814e:	ee79 9a82 	vadd.f32	s19, s19, s4
 8028152:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8028156:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802815a:	ee69 baa8 	vmul.f32	s23, s19, s17
 802815e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8028162:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8028166:	ee69 8a28 	vmul.f32	s17, s18, s17
 802816a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802816e:	ee1c aa10 	vmov	sl, s24
 8028172:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028176:	f841 ab08 	str.w	sl, [r1], #8
 802817a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802817e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8028182:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8028186:	ee33 3a62 	vsub.f32	s6, s6, s5
 802818a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802818e:	edc2 8a01 	vstr	s17, [r2, #4]
 8028192:	ed82 ba02 	vstr	s22, [r2, #8]
 8028196:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802819a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802819e:	ee38 8a47 	vsub.f32	s16, s16, s14
 80281a2:	ed1c 4a03 	vldr	s8, [ip, #-12]
 80281a6:	ee30 0a46 	vsub.f32	s0, s0, s12
 80281aa:	ee33 3a42 	vsub.f32	s6, s6, s4
 80281ae:	ee38 8a67 	vsub.f32	s16, s16, s15
 80281b2:	ee30 0a66 	vsub.f32	s0, s0, s13
 80281b6:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 80281ba:	ee63 8a04 	vmul.f32	s17, s6, s8
 80281be:	ee28 aa24 	vmul.f32	s20, s16, s9
 80281c2:	ee60 9a04 	vmul.f32	s19, s0, s8
 80281c6:	ee28 8a04 	vmul.f32	s16, s16, s8
 80281ca:	ee20 0a24 	vmul.f32	s0, s0, s9
 80281ce:	ee63 3a84 	vmul.f32	s7, s7, s8
 80281d2:	ee39 4a68 	vsub.f32	s8, s18, s17
 80281d6:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80281da:	ee14 aa10 	vmov	sl, s8
 80281de:	ee30 0a48 	vsub.f32	s0, s0, s16
 80281e2:	ee63 4a24 	vmul.f32	s9, s6, s9
 80281e6:	ed44 9a02 	vstr	s19, [r4, #-8]
 80281ea:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80281ee:	ed04 0a01 	vstr	s0, [r4, #-4]
 80281f2:	f846 a908 	str.w	sl, [r6], #-8
 80281f6:	ee35 6a46 	vsub.f32	s12, s10, s12
 80281fa:	ee35 7a87 	vadd.f32	s14, s11, s14
 80281fe:	edc6 3a01 	vstr	s7, [r6, #4]
 8028202:	ee76 6a86 	vadd.f32	s13, s13, s12
 8028206:	ee77 7a67 	vsub.f32	s15, s14, s15
 802820a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802820e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8028212:	ee67 5a86 	vmul.f32	s11, s15, s12
 8028216:	ee26 5a87 	vmul.f32	s10, s13, s14
 802821a:	ee72 2a62 	vsub.f32	s5, s4, s5
 802821e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028222:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8028226:	ee75 5a25 	vadd.f32	s11, s10, s11
 802822a:	ee62 0a86 	vmul.f32	s1, s5, s12
 802822e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8028232:	ee67 7a87 	vmul.f32	s15, s15, s14
 8028236:	ee21 6a06 	vmul.f32	s12, s2, s12
 802823a:	ee62 2a87 	vmul.f32	s5, s5, s14
 802823e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8028242:	ee15 aa90 	vmov	sl, s11
 8028246:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802824a:	f840 ab08 	str.w	sl, [r0], #8
 802824e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028252:	ee76 2a22 	vadd.f32	s5, s12, s5
 8028256:	f1b9 0901 	subs.w	r9, r9, #1
 802825a:	ed40 7a01 	vstr	s15, [r0, #-4]
 802825e:	f105 0508 	add.w	r5, r5, #8
 8028262:	ed83 1a02 	vstr	s2, [r3, #8]
 8028266:	edc3 2a01 	vstr	s5, [r3, #4]
 802826a:	f108 0808 	add.w	r8, r8, #8
 802826e:	f1a2 0208 	sub.w	r2, r2, #8
 8028272:	f10c 0c10 	add.w	ip, ip, #16
 8028276:	f104 0408 	add.w	r4, r4, #8
 802827a:	f10e 0e18 	add.w	lr, lr, #24
 802827e:	f1a3 0308 	sub.w	r3, r3, #8
 8028282:	f47f aefc 	bne.w	802807e <arm_cfft_radix8by4_f32+0x13e>
 8028286:	9908      	ldr	r1, [sp, #32]
 8028288:	9802      	ldr	r0, [sp, #8]
 802828a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802828e:	00cb      	lsls	r3, r1, #3
 8028290:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028294:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028298:	9102      	str	r1, [sp, #8]
 802829a:	9904      	ldr	r1, [sp, #16]
 802829c:	4419      	add	r1, r3
 802829e:	9104      	str	r1, [sp, #16]
 80282a0:	9905      	ldr	r1, [sp, #20]
 80282a2:	4419      	add	r1, r3
 80282a4:	9105      	str	r1, [sp, #20]
 80282a6:	9907      	ldr	r1, [sp, #28]
 80282a8:	449b      	add	fp, r3
 80282aa:	4419      	add	r1, r3
 80282ac:	449a      	add	sl, r3
 80282ae:	9b06      	ldr	r3, [sp, #24]
 80282b0:	9107      	str	r1, [sp, #28]
 80282b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80282b6:	9306      	str	r3, [sp, #24]
 80282b8:	9a04      	ldr	r2, [sp, #16]
 80282ba:	9807      	ldr	r0, [sp, #28]
 80282bc:	edd2 3a00 	vldr	s7, [r2]
 80282c0:	ed90 4a00 	vldr	s8, [r0]
 80282c4:	eddb 7a00 	vldr	s15, [fp]
 80282c8:	ed9a 3a00 	vldr	s6, [sl]
 80282cc:	edd2 4a01 	vldr	s9, [r2, #4]
 80282d0:	ed90 7a01 	vldr	s14, [r0, #4]
 80282d4:	ed9b 2a01 	vldr	s4, [fp, #4]
 80282d8:	edda 5a01 	vldr	s11, [sl, #4]
 80282dc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80282e0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80282e2:	ee73 6a84 	vadd.f32	s13, s7, s8
 80282e6:	ee34 6a87 	vadd.f32	s12, s9, s14
 80282ea:	ee36 5aa7 	vadd.f32	s10, s13, s15
 80282ee:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80282f2:	ee33 5a05 	vadd.f32	s10, s6, s10
 80282f6:	ee33 4ac4 	vsub.f32	s8, s7, s8
 80282fa:	ed82 5a00 	vstr	s10, [r2]
 80282fe:	ed9b 5a01 	vldr	s10, [fp, #4]
 8028302:	edda 4a01 	vldr	s9, [sl, #4]
 8028306:	ee36 5a05 	vadd.f32	s10, s12, s10
 802830a:	ee72 3a04 	vadd.f32	s7, s4, s8
 802830e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028312:	ee77 4a67 	vsub.f32	s9, s14, s15
 8028316:	ed82 5a01 	vstr	s10, [r2, #4]
 802831a:	9a05      	ldr	r2, [sp, #20]
 802831c:	ee34 5a83 	vadd.f32	s10, s9, s6
 8028320:	edd2 1a00 	vldr	s3, [r2]
 8028324:	edd2 2a01 	vldr	s5, [r2, #4]
 8028328:	9a02      	ldr	r2, [sp, #8]
 802832a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802832e:	ee36 6a42 	vsub.f32	s12, s12, s4
 8028332:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8028336:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802833a:	ee65 2a22 	vmul.f32	s5, s10, s5
 802833e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8028342:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8028346:	ee35 5a63 	vsub.f32	s10, s10, s7
 802834a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802834e:	edcb 2a00 	vstr	s5, [fp]
 8028352:	ed8b 5a01 	vstr	s10, [fp, #4]
 8028356:	edd2 3a01 	vldr	s7, [r2, #4]
 802835a:	ed92 5a00 	vldr	s10, [r2]
 802835e:	9a06      	ldr	r2, [sp, #24]
 8028360:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028364:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028368:	ee66 4a85 	vmul.f32	s9, s13, s10
 802836c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028370:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028374:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028378:	ee75 6a66 	vsub.f32	s13, s10, s13
 802837c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028380:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028384:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028388:	edc0 6a01 	vstr	s13, [r0, #4]
 802838c:	ed80 6a00 	vstr	s12, [r0]
 8028390:	ed92 6a01 	vldr	s12, [r2, #4]
 8028394:	9803      	ldr	r0, [sp, #12]
 8028396:	ee77 7a43 	vsub.f32	s15, s14, s6
 802839a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802839e:	ed92 7a00 	vldr	s14, [r2]
 80283a2:	ee65 6a87 	vmul.f32	s13, s11, s14
 80283a6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80283aa:	ee65 5a86 	vmul.f32	s11, s11, s12
 80283ae:	ee67 7a86 	vmul.f32	s15, s15, s12
 80283b2:	ee77 5a65 	vsub.f32	s11, s14, s11
 80283b6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80283ba:	edca 5a01 	vstr	s11, [sl, #4]
 80283be:	edca 7a00 	vstr	s15, [sl]
 80283c2:	6872      	ldr	r2, [r6, #4]
 80283c4:	4621      	mov	r1, r4
 80283c6:	2304      	movs	r3, #4
 80283c8:	f000 f97a 	bl	80286c0 <arm_radix8_butterfly_f32>
 80283cc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80283ce:	6872      	ldr	r2, [r6, #4]
 80283d0:	4621      	mov	r1, r4
 80283d2:	2304      	movs	r3, #4
 80283d4:	f000 f974 	bl	80286c0 <arm_radix8_butterfly_f32>
 80283d8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80283da:	6872      	ldr	r2, [r6, #4]
 80283dc:	4621      	mov	r1, r4
 80283de:	2304      	movs	r3, #4
 80283e0:	f000 f96e 	bl	80286c0 <arm_radix8_butterfly_f32>
 80283e4:	9801      	ldr	r0, [sp, #4]
 80283e6:	6872      	ldr	r2, [r6, #4]
 80283e8:	4621      	mov	r1, r4
 80283ea:	2304      	movs	r3, #4
 80283ec:	b00f      	add	sp, #60	; 0x3c
 80283ee:	ecbd 8b0a 	vpop	{d8-d12}
 80283f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80283f6:	f000 b963 	b.w	80286c0 <arm_radix8_butterfly_f32>
 80283fa:	bf00      	nop

080283fc <arm_cfft_f32>:
 80283fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028400:	2a01      	cmp	r2, #1
 8028402:	4606      	mov	r6, r0
 8028404:	4617      	mov	r7, r2
 8028406:	460c      	mov	r4, r1
 8028408:	4698      	mov	r8, r3
 802840a:	8805      	ldrh	r5, [r0, #0]
 802840c:	d054      	beq.n	80284b8 <arm_cfft_f32+0xbc>
 802840e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028412:	d04c      	beq.n	80284ae <arm_cfft_f32+0xb2>
 8028414:	d916      	bls.n	8028444 <arm_cfft_f32+0x48>
 8028416:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802841a:	d01a      	beq.n	8028452 <arm_cfft_f32+0x56>
 802841c:	d95c      	bls.n	80284d8 <arm_cfft_f32+0xdc>
 802841e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8028422:	d044      	beq.n	80284ae <arm_cfft_f32+0xb2>
 8028424:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8028428:	d105      	bne.n	8028436 <arm_cfft_f32+0x3a>
 802842a:	4620      	mov	r0, r4
 802842c:	4629      	mov	r1, r5
 802842e:	6872      	ldr	r2, [r6, #4]
 8028430:	2301      	movs	r3, #1
 8028432:	f000 f945 	bl	80286c0 <arm_radix8_butterfly_f32>
 8028436:	f1b8 0f00 	cmp.w	r8, #0
 802843a:	d111      	bne.n	8028460 <arm_cfft_f32+0x64>
 802843c:	2f01      	cmp	r7, #1
 802843e:	d016      	beq.n	802846e <arm_cfft_f32+0x72>
 8028440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028444:	2d20      	cmp	r5, #32
 8028446:	d032      	beq.n	80284ae <arm_cfft_f32+0xb2>
 8028448:	d94a      	bls.n	80284e0 <arm_cfft_f32+0xe4>
 802844a:	2d40      	cmp	r5, #64	; 0x40
 802844c:	d0ed      	beq.n	802842a <arm_cfft_f32+0x2e>
 802844e:	2d80      	cmp	r5, #128	; 0x80
 8028450:	d1f1      	bne.n	8028436 <arm_cfft_f32+0x3a>
 8028452:	4630      	mov	r0, r6
 8028454:	4621      	mov	r1, r4
 8028456:	f7ff fca1 	bl	8027d9c <arm_cfft_radix8by2_f32>
 802845a:	f1b8 0f00 	cmp.w	r8, #0
 802845e:	d0ed      	beq.n	802843c <arm_cfft_f32+0x40>
 8028460:	4620      	mov	r0, r4
 8028462:	89b1      	ldrh	r1, [r6, #12]
 8028464:	68b2      	ldr	r2, [r6, #8]
 8028466:	f7d7 fec3 	bl	80001f0 <arm_bitreversal_32>
 802846a:	2f01      	cmp	r7, #1
 802846c:	d1e8      	bne.n	8028440 <arm_cfft_f32+0x44>
 802846e:	ee07 5a90 	vmov	s15, r5
 8028472:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028476:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802847a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802847e:	2d00      	cmp	r5, #0
 8028480:	d0de      	beq.n	8028440 <arm_cfft_f32+0x44>
 8028482:	f104 0108 	add.w	r1, r4, #8
 8028486:	2300      	movs	r3, #0
 8028488:	3301      	adds	r3, #1
 802848a:	429d      	cmp	r5, r3
 802848c:	f101 0108 	add.w	r1, r1, #8
 8028490:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028494:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028498:	ee27 7a26 	vmul.f32	s14, s14, s13
 802849c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80284a0:	ed01 7a04 	vstr	s14, [r1, #-16]
 80284a4:	ed41 7a03 	vstr	s15, [r1, #-12]
 80284a8:	d1ee      	bne.n	8028488 <arm_cfft_f32+0x8c>
 80284aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80284ae:	4630      	mov	r0, r6
 80284b0:	4621      	mov	r1, r4
 80284b2:	f7ff fd45 	bl	8027f40 <arm_cfft_radix8by4_f32>
 80284b6:	e7be      	b.n	8028436 <arm_cfft_f32+0x3a>
 80284b8:	b1ad      	cbz	r5, 80284e6 <arm_cfft_f32+0xea>
 80284ba:	f101 030c 	add.w	r3, r1, #12
 80284be:	2200      	movs	r2, #0
 80284c0:	ed53 7a02 	vldr	s15, [r3, #-8]
 80284c4:	3201      	adds	r2, #1
 80284c6:	eef1 7a67 	vneg.f32	s15, s15
 80284ca:	4295      	cmp	r5, r2
 80284cc:	ed43 7a02 	vstr	s15, [r3, #-8]
 80284d0:	f103 0308 	add.w	r3, r3, #8
 80284d4:	d1f4      	bne.n	80284c0 <arm_cfft_f32+0xc4>
 80284d6:	e79a      	b.n	802840e <arm_cfft_f32+0x12>
 80284d8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80284dc:	d0a5      	beq.n	802842a <arm_cfft_f32+0x2e>
 80284de:	e7aa      	b.n	8028436 <arm_cfft_f32+0x3a>
 80284e0:	2d10      	cmp	r5, #16
 80284e2:	d0b6      	beq.n	8028452 <arm_cfft_f32+0x56>
 80284e4:	e7a7      	b.n	8028436 <arm_cfft_f32+0x3a>
 80284e6:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80284ea:	d894      	bhi.n	8028416 <arm_cfft_f32+0x1a>
 80284ec:	e7aa      	b.n	8028444 <arm_cfft_f32+0x48>
 80284ee:	bf00      	nop

080284f0 <arm_cmplx_mag_f32>:
 80284f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80284f4:	ea5f 0892 	movs.w	r8, r2, lsr #2
 80284f8:	b084      	sub	sp, #16
 80284fa:	d07f      	beq.n	80285fc <arm_cmplx_mag_f32+0x10c>
 80284fc:	2700      	movs	r7, #0
 80284fe:	f100 0420 	add.w	r4, r0, #32
 8028502:	f101 0510 	add.w	r5, r1, #16
 8028506:	4646      	mov	r6, r8
 8028508:	e05a      	b.n	80285c0 <arm_cmplx_mag_f32+0xd0>
 802850a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802850e:	eeb4 0a40 	vcmp.f32	s0, s0
 8028512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028516:	f040 80a4 	bne.w	8028662 <arm_cmplx_mag_f32+0x172>
 802851a:	ed05 0a04 	vstr	s0, [r5, #-16]
 802851e:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8028522:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8028526:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802852a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802852e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028532:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028536:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802853a:	f2c0 808f 	blt.w	802865c <arm_cmplx_mag_f32+0x16c>
 802853e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028542:	eeb4 0a40 	vcmp.f32	s0, s0
 8028546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802854a:	f040 80af 	bne.w	80286ac <arm_cmplx_mag_f32+0x1bc>
 802854e:	ed05 0a03 	vstr	s0, [r5, #-12]
 8028552:	ed54 7a04 	vldr	s15, [r4, #-16]
 8028556:	ed14 0a03 	vldr	s0, [r4, #-12]
 802855a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802855e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028562:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028566:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802856a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802856e:	db72      	blt.n	8028656 <arm_cmplx_mag_f32+0x166>
 8028570:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028574:	eeb4 0a40 	vcmp.f32	s0, s0
 8028578:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802857c:	f040 808c 	bne.w	8028698 <arm_cmplx_mag_f32+0x1a8>
 8028580:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028584:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028588:	ed14 0a01 	vldr	s0, [r4, #-4]
 802858c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028590:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028594:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028598:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802859c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285a0:	db20      	blt.n	80285e4 <arm_cmplx_mag_f32+0xf4>
 80285a2:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80285a6:	eeb4 0a40 	vcmp.f32	s0, s0
 80285aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285ae:	d169      	bne.n	8028684 <arm_cmplx_mag_f32+0x194>
 80285b0:	3e01      	subs	r6, #1
 80285b2:	ed05 0a01 	vstr	s0, [r5, #-4]
 80285b6:	f104 0420 	add.w	r4, r4, #32
 80285ba:	f105 0510 	add.w	r5, r5, #16
 80285be:	d019      	beq.n	80285f4 <arm_cmplx_mag_f32+0x104>
 80285c0:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 80285c4:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 80285c8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80285cc:	ee20 0a00 	vmul.f32	s0, s0, s0
 80285d0:	ee77 7a80 	vadd.f32	s15, s15, s0
 80285d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80285d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285dc:	da95      	bge.n	802850a <arm_cmplx_mag_f32+0x1a>
 80285de:	f845 7c10 	str.w	r7, [r5, #-16]
 80285e2:	e79c      	b.n	802851e <arm_cmplx_mag_f32+0x2e>
 80285e4:	3e01      	subs	r6, #1
 80285e6:	f845 7c04 	str.w	r7, [r5, #-4]
 80285ea:	f104 0420 	add.w	r4, r4, #32
 80285ee:	f105 0510 	add.w	r5, r5, #16
 80285f2:	d1e5      	bne.n	80285c0 <arm_cmplx_mag_f32+0xd0>
 80285f4:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 80285f8:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 80285fc:	f012 0503 	ands.w	r5, r2, #3
 8028600:	d026      	beq.n	8028650 <arm_cmplx_mag_f32+0x160>
 8028602:	2600      	movs	r6, #0
 8028604:	f100 0408 	add.w	r4, r0, #8
 8028608:	e00c      	b.n	8028624 <arm_cmplx_mag_f32+0x134>
 802860a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802860e:	eeb4 0a40 	vcmp.f32	s0, s0
 8028612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028616:	d12e      	bne.n	8028676 <arm_cmplx_mag_f32+0x186>
 8028618:	3d01      	subs	r5, #1
 802861a:	ed01 0a01 	vstr	s0, [r1, #-4]
 802861e:	f104 0408 	add.w	r4, r4, #8
 8028622:	d015      	beq.n	8028650 <arm_cmplx_mag_f32+0x160>
 8028624:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028628:	ed14 0a01 	vldr	s0, [r4, #-4]
 802862c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028630:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028634:	3104      	adds	r1, #4
 8028636:	ee77 7a80 	vadd.f32	s15, s15, s0
 802863a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802863e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028642:	dae2      	bge.n	802860a <arm_cmplx_mag_f32+0x11a>
 8028644:	3d01      	subs	r5, #1
 8028646:	f841 6c04 	str.w	r6, [r1, #-4]
 802864a:	f104 0408 	add.w	r4, r4, #8
 802864e:	d1e9      	bne.n	8028624 <arm_cmplx_mag_f32+0x134>
 8028650:	b004      	add	sp, #16
 8028652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028656:	f845 7c08 	str.w	r7, [r5, #-8]
 802865a:	e793      	b.n	8028584 <arm_cmplx_mag_f32+0x94>
 802865c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028660:	e777      	b.n	8028552 <arm_cmplx_mag_f32+0x62>
 8028662:	eeb0 0a67 	vmov.f32	s0, s15
 8028666:	9203      	str	r2, [sp, #12]
 8028668:	9102      	str	r1, [sp, #8]
 802866a:	9001      	str	r0, [sp, #4]
 802866c:	f000 fb38 	bl	8028ce0 <sqrtf>
 8028670:	a801      	add	r0, sp, #4
 8028672:	c807      	ldmia	r0, {r0, r1, r2}
 8028674:	e751      	b.n	802851a <arm_cmplx_mag_f32+0x2a>
 8028676:	eeb0 0a67 	vmov.f32	s0, s15
 802867a:	9101      	str	r1, [sp, #4]
 802867c:	f000 fb30 	bl	8028ce0 <sqrtf>
 8028680:	9901      	ldr	r1, [sp, #4]
 8028682:	e7c9      	b.n	8028618 <arm_cmplx_mag_f32+0x128>
 8028684:	eeb0 0a67 	vmov.f32	s0, s15
 8028688:	9203      	str	r2, [sp, #12]
 802868a:	9102      	str	r1, [sp, #8]
 802868c:	9001      	str	r0, [sp, #4]
 802868e:	f000 fb27 	bl	8028ce0 <sqrtf>
 8028692:	a801      	add	r0, sp, #4
 8028694:	c807      	ldmia	r0, {r0, r1, r2}
 8028696:	e78b      	b.n	80285b0 <arm_cmplx_mag_f32+0xc0>
 8028698:	eeb0 0a67 	vmov.f32	s0, s15
 802869c:	9203      	str	r2, [sp, #12]
 802869e:	9102      	str	r1, [sp, #8]
 80286a0:	9001      	str	r0, [sp, #4]
 80286a2:	f000 fb1d 	bl	8028ce0 <sqrtf>
 80286a6:	a801      	add	r0, sp, #4
 80286a8:	c807      	ldmia	r0, {r0, r1, r2}
 80286aa:	e769      	b.n	8028580 <arm_cmplx_mag_f32+0x90>
 80286ac:	eeb0 0a67 	vmov.f32	s0, s15
 80286b0:	9203      	str	r2, [sp, #12]
 80286b2:	9102      	str	r1, [sp, #8]
 80286b4:	9001      	str	r0, [sp, #4]
 80286b6:	f000 fb13 	bl	8028ce0 <sqrtf>
 80286ba:	a801      	add	r0, sp, #4
 80286bc:	c807      	ldmia	r0, {r0, r1, r2}
 80286be:	e746      	b.n	802854e <arm_cmplx_mag_f32+0x5e>

080286c0 <arm_radix8_butterfly_f32>:
 80286c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80286c4:	ed2d 8b10 	vpush	{d8-d15}
 80286c8:	b09d      	sub	sp, #116	; 0x74
 80286ca:	461c      	mov	r4, r3
 80286cc:	ed9f bac8 	vldr	s22, [pc, #800]	; 80289f0 <arm_radix8_butterfly_f32+0x330>
 80286d0:	921a      	str	r2, [sp, #104]	; 0x68
 80286d2:	1d03      	adds	r3, r0, #4
 80286d4:	4682      	mov	sl, r0
 80286d6:	4689      	mov	r9, r1
 80286d8:	468b      	mov	fp, r1
 80286da:	931b      	str	r3, [sp, #108]	; 0x6c
 80286dc:	9400      	str	r4, [sp, #0]
 80286de:	469e      	mov	lr, r3
 80286e0:	ea4f 03db 	mov.w	r3, fp, lsr #3
 80286e4:	005a      	lsls	r2, r3, #1
 80286e6:	18d6      	adds	r6, r2, r3
 80286e8:	18f5      	adds	r5, r6, r3
 80286ea:	9203      	str	r2, [sp, #12]
 80286ec:	195a      	adds	r2, r3, r5
 80286ee:	18d0      	adds	r0, r2, r3
 80286f0:	00df      	lsls	r7, r3, #3
 80286f2:	1819      	adds	r1, r3, r0
 80286f4:	463c      	mov	r4, r7
 80286f6:	9701      	str	r7, [sp, #4]
 80286f8:	4457      	add	r7, sl
 80286fa:	930c      	str	r3, [sp, #48]	; 0x30
 80286fc:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8028700:	011b      	lsls	r3, r3, #4
 8028702:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8028706:	eb07 0c04 	add.w	ip, r7, r4
 802870a:	9c00      	ldr	r4, [sp, #0]
 802870c:	9302      	str	r3, [sp, #8]
 802870e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028712:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028716:	3204      	adds	r2, #4
 8028718:	3104      	adds	r1, #4
 802871a:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802871e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8028722:	f04f 0800 	mov.w	r8, #0
 8028726:	eddc 7a00 	vldr	s15, [ip]
 802872a:	edd7 6a00 	vldr	s13, [r7]
 802872e:	edd6 3a00 	vldr	s7, [r6]
 8028732:	ed5e aa01 	vldr	s21, [lr, #-4]
 8028736:	edd5 4a00 	vldr	s9, [r5]
 802873a:	ed90 2a00 	vldr	s4, [r0]
 802873e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028742:	ed51 0a01 	vldr	s1, [r1, #-4]
 8028746:	ee77 8a82 	vadd.f32	s17, s15, s4
 802874a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802874e:	ee76 1a87 	vadd.f32	s3, s13, s14
 8028752:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8028756:	ee31 6a84 	vadd.f32	s12, s3, s8
 802875a:	ee33 5a28 	vadd.f32	s10, s6, s17
 802875e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028762:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028766:	ee35 5a46 	vsub.f32	s10, s10, s12
 802876a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802876e:	ed85 5a00 	vstr	s10, [r5]
 8028772:	ed96 1a01 	vldr	s2, [r6, #4]
 8028776:	edd7 5a01 	vldr	s11, [r7, #4]
 802877a:	ed92 aa00 	vldr	s20, [r2]
 802877e:	ed91 6a00 	vldr	s12, [r1]
 8028782:	ed9e 9a00 	vldr	s18, [lr]
 8028786:	ed95 5a01 	vldr	s10, [r5, #4]
 802878a:	eddc 6a01 	vldr	s13, [ip, #4]
 802878e:	edd0 9a01 	vldr	s19, [r0, #4]
 8028792:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028796:	ee71 2a46 	vsub.f32	s5, s2, s12
 802879a:	ee75 3aca 	vsub.f32	s7, s11, s20
 802879e:	ee37 0a60 	vsub.f32	s0, s14, s1
 80287a2:	ee33 8aa2 	vadd.f32	s16, s7, s5
 80287a6:	ee37 7a20 	vadd.f32	s14, s14, s1
 80287aa:	ee73 2ae2 	vsub.f32	s5, s7, s5
 80287ae:	ee37 2ac2 	vsub.f32	s4, s15, s4
 80287b2:	ee79 3a05 	vadd.f32	s7, s18, s10
 80287b6:	ee60 0a0b 	vmul.f32	s1, s0, s22
 80287ba:	ee39 5a45 	vsub.f32	s10, s18, s10
 80287be:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 80287c2:	ee36 9aa9 	vadd.f32	s18, s13, s19
 80287c6:	ee75 5a8a 	vadd.f32	s11, s11, s20
 80287ca:	ee31 6a06 	vadd.f32	s12, s2, s12
 80287ce:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80287d2:	ee28 8a0b 	vmul.f32	s16, s16, s22
 80287d6:	ee62 2a8b 	vmul.f32	s5, s5, s22
 80287da:	ee67 7a0b 	vmul.f32	s15, s14, s22
 80287de:	ee33 3a68 	vsub.f32	s6, s6, s17
 80287e2:	ee36 0a88 	vadd.f32	s0, s13, s16
 80287e6:	ee75 8a86 	vadd.f32	s17, s11, s12
 80287ea:	ee36 7ac8 	vsub.f32	s14, s13, s16
 80287ee:	ee71 1ac4 	vsub.f32	s3, s3, s8
 80287f2:	ee75 6a62 	vsub.f32	s13, s10, s5
 80287f6:	ee33 4ac9 	vsub.f32	s8, s7, s18
 80287fa:	ee35 6ac6 	vsub.f32	s12, s11, s12
 80287fe:	ee33 1a89 	vadd.f32	s2, s7, s18
 8028802:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8028806:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802880a:	ee75 4a22 	vadd.f32	s9, s10, s5
 802880e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8028812:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028816:	ee33 8a06 	vadd.f32	s16, s6, s12
 802881a:	ee75 2a87 	vadd.f32	s5, s11, s14
 802881e:	ee31 9a28 	vadd.f32	s18, s2, s17
 8028822:	ee33 6a46 	vsub.f32	s12, s6, s12
 8028826:	ee74 0a61 	vsub.f32	s1, s8, s3
 802882a:	ee33 2a80 	vadd.f32	s4, s7, s0
 802882e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8028832:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8028836:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802883a:	ee31 1a68 	vsub.f32	s2, s2, s17
 802883e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8028842:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8028846:	ee74 4a85 	vadd.f32	s9, s9, s10
 802884a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802884e:	44d8      	add	r8, fp
 8028850:	45c1      	cmp	r9, r8
 8028852:	ed8e 9a00 	vstr	s18, [lr]
 8028856:	ed85 1a01 	vstr	s2, [r5, #4]
 802885a:	449e      	add	lr, r3
 802885c:	ed8c 8a00 	vstr	s16, [ip]
 8028860:	441d      	add	r5, r3
 8028862:	ed80 6a00 	vstr	s12, [r0]
 8028866:	edcc 0a01 	vstr	s1, [ip, #4]
 802886a:	ed80 4a01 	vstr	s8, [r0, #4]
 802886e:	449c      	add	ip, r3
 8028870:	ed87 2a00 	vstr	s4, [r7]
 8028874:	4418      	add	r0, r3
 8028876:	ed41 3a01 	vstr	s7, [r1, #-4]
 802887a:	ed42 2a01 	vstr	s5, [r2, #-4]
 802887e:	ed86 7a00 	vstr	s14, [r6]
 8028882:	ed87 3a01 	vstr	s6, [r7, #4]
 8028886:	edc1 4a00 	vstr	s9, [r1]
 802888a:	441f      	add	r7, r3
 802888c:	edc2 5a00 	vstr	s11, [r2]
 8028890:	4419      	add	r1, r3
 8028892:	edc6 6a01 	vstr	s13, [r6, #4]
 8028896:	441a      	add	r2, r3
 8028898:	441e      	add	r6, r3
 802889a:	f63f af44 	bhi.w	8028726 <arm_radix8_butterfly_f32+0x66>
 802889e:	990c      	ldr	r1, [sp, #48]	; 0x30
 80288a0:	2907      	cmp	r1, #7
 80288a2:	4620      	mov	r0, r4
 80288a4:	f240 81e9 	bls.w	8028c7a <arm_radix8_butterfly_f32+0x5ba>
 80288a8:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 80288ac:	193e      	adds	r6, r7, r4
 80288ae:	1935      	adds	r5, r6, r4
 80288b0:	9c03      	ldr	r4, [sp, #12]
 80288b2:	9000      	str	r0, [sp, #0]
 80288b4:	4622      	mov	r2, r4
 80288b6:	3201      	adds	r2, #1
 80288b8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80288bc:	9900      	ldr	r1, [sp, #0]
 80288be:	1828      	adds	r0, r5, r0
 80288c0:	eb00 0e01 	add.w	lr, r0, r1
 80288c4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80288c6:	440a      	add	r2, r1
 80288c8:	eb04 0c01 	add.w	ip, r4, r1
 80288cc:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 80288d0:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 80288d4:	9a00      	ldr	r2, [sp, #0]
 80288d6:	940f      	str	r4, [sp, #60]	; 0x3c
 80288d8:	00ed      	lsls	r5, r5, #3
 80288da:	9511      	str	r5, [sp, #68]	; 0x44
 80288dc:	00d5      	lsls	r5, r2, #3
 80288de:	950d      	str	r5, [sp, #52]	; 0x34
 80288e0:	9d01      	ldr	r5, [sp, #4]
 80288e2:	3508      	adds	r5, #8
 80288e4:	9516      	str	r5, [sp, #88]	; 0x58
 80288e6:	9d02      	ldr	r5, [sp, #8]
 80288e8:	3508      	adds	r5, #8
 80288ea:	0114      	lsls	r4, r2, #4
 80288ec:	9517      	str	r5, [sp, #92]	; 0x5c
 80288ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80288f0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80288f2:	940e      	str	r4, [sp, #56]	; 0x38
 80288f4:	00c0      	lsls	r0, r0, #3
 80288f6:	9010      	str	r0, [sp, #64]	; 0x40
 80288f8:	18aa      	adds	r2, r5, r2
 80288fa:	9207      	str	r2, [sp, #28]
 80288fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80288fe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028900:	18aa      	adds	r2, r5, r2
 8028902:	9208      	str	r2, [sp, #32]
 8028904:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028906:	18aa      	adds	r2, r5, r2
 8028908:	9209      	str	r2, [sp, #36]	; 0x24
 802890a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802890e:	f10e 0204 	add.w	r2, lr, #4
 8028912:	920a      	str	r2, [sp, #40]	; 0x28
 8028914:	00c9      	lsls	r1, r1, #3
 8028916:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028918:	310c      	adds	r1, #12
 802891a:	00f6      	lsls	r6, r6, #3
 802891c:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8028920:	9114      	str	r1, [sp, #80]	; 0x50
 8028922:	18a9      	adds	r1, r5, r2
 8028924:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028926:	9612      	str	r6, [sp, #72]	; 0x48
 8028928:	00ff      	lsls	r7, r7, #3
 802892a:	19ae      	adds	r6, r5, r6
 802892c:	3008      	adds	r0, #8
 802892e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8028932:	9606      	str	r6, [sp, #24]
 8028934:	9019      	str	r0, [sp, #100]	; 0x64
 8028936:	18aa      	adds	r2, r5, r2
 8028938:	0164      	lsls	r4, r4, #5
 802893a:	19ee      	adds	r6, r5, r7
 802893c:	f10c 000c 	add.w	r0, ip, #12
 8028940:	9713      	str	r7, [sp, #76]	; 0x4c
 8028942:	9604      	str	r6, [sp, #16]
 8028944:	9015      	str	r0, [sp, #84]	; 0x54
 8028946:	9103      	str	r1, [sp, #12]
 8028948:	9205      	str	r2, [sp, #20]
 802894a:	f104 0208 	add.w	r2, r4, #8
 802894e:	9218      	str	r2, [sp, #96]	; 0x60
 8028950:	f04f 0801 	mov.w	r8, #1
 8028954:	2200      	movs	r2, #0
 8028956:	f102 0108 	add.w	r1, r2, #8
 802895a:	460f      	mov	r7, r1
 802895c:	910b      	str	r1, [sp, #44]	; 0x2c
 802895e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028960:	188e      	adds	r6, r1, r2
 8028962:	9916      	ldr	r1, [sp, #88]	; 0x58
 8028964:	188d      	adds	r5, r1, r2
 8028966:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8028968:	188c      	adds	r4, r1, r2
 802896a:	9919      	ldr	r1, [sp, #100]	; 0x64
 802896c:	1888      	adds	r0, r1, r2
 802896e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8028970:	eb01 0c02 	add.w	ip, r1, r2
 8028974:	9915      	ldr	r1, [sp, #84]	; 0x54
 8028976:	440a      	add	r2, r1
 8028978:	9903      	ldr	r1, [sp, #12]
 802897a:	edd1 fa00 	vldr	s31, [r1]
 802897e:	9905      	ldr	r1, [sp, #20]
 8028980:	ed91 fa00 	vldr	s30, [r1]
 8028984:	9904      	ldr	r1, [sp, #16]
 8028986:	edd1 ea00 	vldr	s29, [r1]
 802898a:	9906      	ldr	r1, [sp, #24]
 802898c:	ed91 ea00 	vldr	s28, [r1]
 8028990:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028992:	edd1 da00 	vldr	s27, [r1]
 8028996:	9908      	ldr	r1, [sp, #32]
 8028998:	ed91 da00 	vldr	s26, [r1]
 802899c:	9907      	ldr	r1, [sp, #28]
 802899e:	edd1 ca00 	vldr	s25, [r1]
 80289a2:	9903      	ldr	r1, [sp, #12]
 80289a4:	ed91 ca01 	vldr	s24, [r1, #4]
 80289a8:	9905      	ldr	r1, [sp, #20]
 80289aa:	edd1 ba01 	vldr	s23, [r1, #4]
 80289ae:	9904      	ldr	r1, [sp, #16]
 80289b0:	edd1 aa01 	vldr	s21, [r1, #4]
 80289b4:	9906      	ldr	r1, [sp, #24]
 80289b6:	ed91 aa01 	vldr	s20, [r1, #4]
 80289ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80289bc:	edd1 7a01 	vldr	s15, [r1, #4]
 80289c0:	9908      	ldr	r1, [sp, #32]
 80289c2:	edcd 7a00 	vstr	s15, [sp]
 80289c6:	edd1 7a01 	vldr	s15, [r1, #4]
 80289ca:	9907      	ldr	r1, [sp, #28]
 80289cc:	edcd 7a01 	vstr	s15, [sp, #4]
 80289d0:	edd1 7a01 	vldr	s15, [r1, #4]
 80289d4:	eb0a 0e07 	add.w	lr, sl, r7
 80289d8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80289da:	edcd 7a02 	vstr	s15, [sp, #8]
 80289de:	eb0c 010a 	add.w	r1, ip, sl
 80289e2:	4456      	add	r6, sl
 80289e4:	4455      	add	r5, sl
 80289e6:	4454      	add	r4, sl
 80289e8:	4450      	add	r0, sl
 80289ea:	4452      	add	r2, sl
 80289ec:	46c4      	mov	ip, r8
 80289ee:	e001      	b.n	80289f4 <arm_radix8_butterfly_f32+0x334>
 80289f0:	3f3504f3 	.word	0x3f3504f3
 80289f4:	ed96 5a00 	vldr	s10, [r6]
 80289f8:	ed52 9a01 	vldr	s19, [r2, #-4]
 80289fc:	ed11 6a01 	vldr	s12, [r1, #-4]
 8028a00:	edd0 7a00 	vldr	s15, [r0]
 8028a04:	ed17 7a01 	vldr	s14, [r7, #-4]
 8028a08:	edde 3a00 	vldr	s7, [lr]
 8028a0c:	ed94 3a00 	vldr	s6, [r4]
 8028a10:	ed95 2a00 	vldr	s4, [r5]
 8028a14:	ed9e 0a01 	vldr	s0, [lr, #4]
 8028a18:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028a1c:	ee32 1a06 	vadd.f32	s2, s4, s12
 8028a20:	ee33 4a29 	vadd.f32	s8, s6, s19
 8028a24:	ee77 4a87 	vadd.f32	s9, s15, s14
 8028a28:	ee78 1a04 	vadd.f32	s3, s16, s8
 8028a2c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8028a30:	ee32 2a46 	vsub.f32	s4, s4, s12
 8028a34:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8028a38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028a3c:	ed8e 6a00 	vstr	s12, [lr]
 8028a40:	edd0 8a01 	vldr	s17, [r0, #4]
 8028a44:	ed95 9a01 	vldr	s18, [r5, #4]
 8028a48:	edd1 2a00 	vldr	s5, [r1]
 8028a4c:	ed97 7a00 	vldr	s14, [r7]
 8028a50:	edd4 0a01 	vldr	s1, [r4, #4]
 8028a54:	ed96 6a01 	vldr	s12, [r6, #4]
 8028a58:	edd2 5a00 	vldr	s11, [r2]
 8028a5c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8028a60:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028a64:	ee39 5a62 	vsub.f32	s10, s18, s5
 8028a68:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8028a6c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8028a70:	ee38 7a87 	vadd.f32	s14, s17, s14
 8028a74:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8028a78:	ee79 2a22 	vadd.f32	s5, s18, s5
 8028a7c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8028a80:	ee32 9a27 	vadd.f32	s18, s4, s15
 8028a84:	ee35 5a29 	vadd.f32	s10, s10, s19
 8028a88:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028a8c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8028a90:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8028a94:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8028a98:	ee32 9a08 	vadd.f32	s18, s4, s16
 8028a9c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8028aa0:	ee32 2a48 	vsub.f32	s4, s4, s16
 8028aa4:	ee71 4a64 	vsub.f32	s9, s2, s9
 8028aa8:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8028aac:	ee32 1a87 	vadd.f32	s2, s5, s14
 8028ab0:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8028ab4:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8028ab8:	ee30 6a46 	vsub.f32	s12, s0, s12
 8028abc:	ee73 0a29 	vadd.f32	s1, s6, s19
 8028ac0:	ee36 0a28 	vadd.f32	s0, s12, s17
 8028ac4:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028ac8:	ee32 7a64 	vsub.f32	s14, s4, s9
 8028acc:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8028ad0:	ee36 6a68 	vsub.f32	s12, s12, s17
 8028ad4:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8028ad8:	ee75 8a85 	vadd.f32	s17, s11, s10
 8028adc:	ee74 3a22 	vadd.f32	s7, s8, s5
 8028ae0:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8028ae4:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8028ae8:	ee79 1a41 	vsub.f32	s3, s18, s2
 8028aec:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8028af0:	ee76 5a43 	vsub.f32	s11, s12, s6
 8028af4:	ee74 2a62 	vsub.f32	s5, s8, s5
 8028af8:	ee72 4a24 	vadd.f32	s9, s4, s9
 8028afc:	ee30 4a60 	vsub.f32	s8, s0, s1
 8028b00:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8028b04:	ee30 0a20 	vadd.f32	s0, s0, s1
 8028b08:	ee77 9a85 	vadd.f32	s19, s15, s10
 8028b0c:	ee36 6a03 	vadd.f32	s12, s12, s6
 8028b10:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8028b14:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8028b18:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8028b1c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8028b20:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8028b24:	ee39 1a01 	vadd.f32	s2, s18, s2
 8028b28:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8028b2c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8028b30:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8028b34:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8028b38:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8028b3c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8028b40:	ee72 6a66 	vsub.f32	s13, s4, s13
 8028b44:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8028b48:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8028b4c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8028b50:	ed8e 1a01 	vstr	s2, [lr, #4]
 8028b54:	ee77 3a63 	vsub.f32	s7, s14, s7
 8028b58:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8028b5c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8028b60:	ed86 3a00 	vstr	s6, [r6]
 8028b64:	ee30 9a89 	vadd.f32	s18, s1, s18
 8028b68:	ee32 2a05 	vadd.f32	s4, s4, s10
 8028b6c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8028b70:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8028b74:	ee67 2a22 	vmul.f32	s5, s14, s5
 8028b78:	ee64 1a00 	vmul.f32	s3, s8, s0
 8028b7c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8028b80:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8028b84:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8028b88:	ee64 8a28 	vmul.f32	s17, s8, s17
 8028b8c:	ed9d 4a00 	vldr	s8, [sp]
 8028b90:	edc6 6a01 	vstr	s13, [r6, #4]
 8028b94:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8028b98:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8028b9c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8028ba0:	ee24 4a25 	vmul.f32	s8, s8, s11
 8028ba4:	ee30 7a87 	vadd.f32	s14, s1, s14
 8028ba8:	ee74 4a84 	vadd.f32	s9, s9, s8
 8028bac:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8028bb0:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8028bb4:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8028bb8:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8028bbc:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8028bc0:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8028bc4:	ee75 1a21 	vadd.f32	s3, s10, s3
 8028bc8:	ee30 0a68 	vsub.f32	s0, s0, s17
 8028bcc:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8028bd0:	ee70 0a84 	vadd.f32	s1, s1, s8
 8028bd4:	ee36 6a67 	vsub.f32	s12, s12, s15
 8028bd8:	44dc      	add	ip, fp
 8028bda:	45e1      	cmp	r9, ip
 8028bdc:	ed84 9a00 	vstr	s18, [r4]
 8028be0:	edc4 3a01 	vstr	s7, [r4, #4]
 8028be4:	449e      	add	lr, r3
 8028be6:	ed02 7a01 	vstr	s14, [r2, #-4]
 8028bea:	edc2 2a00 	vstr	s5, [r2]
 8028bee:	441e      	add	r6, r3
 8028bf0:	ed85 2a00 	vstr	s4, [r5]
 8028bf4:	ed85 8a01 	vstr	s16, [r5, #4]
 8028bf8:	441c      	add	r4, r3
 8028bfa:	ed47 1a01 	vstr	s3, [r7, #-4]
 8028bfe:	ed87 0a00 	vstr	s0, [r7]
 8028c02:	441a      	add	r2, r3
 8028c04:	ed41 4a01 	vstr	s9, [r1, #-4]
 8028c08:	edc1 9a00 	vstr	s19, [r1]
 8028c0c:	441d      	add	r5, r3
 8028c0e:	edc0 0a00 	vstr	s1, [r0]
 8028c12:	441f      	add	r7, r3
 8028c14:	ed80 6a01 	vstr	s12, [r0, #4]
 8028c18:	4419      	add	r1, r3
 8028c1a:	4418      	add	r0, r3
 8028c1c:	f63f aeea 	bhi.w	80289f4 <arm_radix8_butterfly_f32+0x334>
 8028c20:	9a03      	ldr	r2, [sp, #12]
 8028c22:	990d      	ldr	r1, [sp, #52]	; 0x34
 8028c24:	440a      	add	r2, r1
 8028c26:	9203      	str	r2, [sp, #12]
 8028c28:	990e      	ldr	r1, [sp, #56]	; 0x38
 8028c2a:	9a05      	ldr	r2, [sp, #20]
 8028c2c:	440a      	add	r2, r1
 8028c2e:	9205      	str	r2, [sp, #20]
 8028c30:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8028c32:	9a04      	ldr	r2, [sp, #16]
 8028c34:	440a      	add	r2, r1
 8028c36:	9204      	str	r2, [sp, #16]
 8028c38:	9912      	ldr	r1, [sp, #72]	; 0x48
 8028c3a:	9a06      	ldr	r2, [sp, #24]
 8028c3c:	440a      	add	r2, r1
 8028c3e:	9206      	str	r2, [sp, #24]
 8028c40:	9911      	ldr	r1, [sp, #68]	; 0x44
 8028c42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028c44:	440a      	add	r2, r1
 8028c46:	9209      	str	r2, [sp, #36]	; 0x24
 8028c48:	9910      	ldr	r1, [sp, #64]	; 0x40
 8028c4a:	9a08      	ldr	r2, [sp, #32]
 8028c4c:	440a      	add	r2, r1
 8028c4e:	9208      	str	r2, [sp, #32]
 8028c50:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028c52:	9a07      	ldr	r2, [sp, #28]
 8028c54:	440a      	add	r2, r1
 8028c56:	9207      	str	r2, [sp, #28]
 8028c58:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028c5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028c5c:	f108 0801 	add.w	r8, r8, #1
 8028c60:	3208      	adds	r2, #8
 8028c62:	4588      	cmp	r8, r1
 8028c64:	920a      	str	r2, [sp, #40]	; 0x28
 8028c66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028c68:	f47f ae75 	bne.w	8028956 <arm_radix8_butterfly_f32+0x296>
 8028c6c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8028c70:	9300      	str	r3, [sp, #0]
 8028c72:	46c3      	mov	fp, r8
 8028c74:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8028c78:	e532      	b.n	80286e0 <arm_radix8_butterfly_f32+0x20>
 8028c7a:	b01d      	add	sp, #116	; 0x74
 8028c7c:	ecbd 8b10 	vpop	{d8-d15}
 8028c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028c84 <__aeabi_atexit>:
 8028c84:	460b      	mov	r3, r1
 8028c86:	4601      	mov	r1, r0
 8028c88:	4618      	mov	r0, r3
 8028c8a:	f000 bef3 	b.w	8029a74 <__cxa_atexit>

08028c8e <_ZdlPvj>:
 8028c8e:	f000 b812 	b.w	8028cb6 <_ZdlPv>

08028c92 <__cxa_guard_acquire>:
 8028c92:	6803      	ldr	r3, [r0, #0]
 8028c94:	07db      	lsls	r3, r3, #31
 8028c96:	d406      	bmi.n	8028ca6 <__cxa_guard_acquire+0x14>
 8028c98:	7843      	ldrb	r3, [r0, #1]
 8028c9a:	b103      	cbz	r3, 8028c9e <__cxa_guard_acquire+0xc>
 8028c9c:	deff      	udf	#255	; 0xff
 8028c9e:	2301      	movs	r3, #1
 8028ca0:	7043      	strb	r3, [r0, #1]
 8028ca2:	4618      	mov	r0, r3
 8028ca4:	4770      	bx	lr
 8028ca6:	2000      	movs	r0, #0
 8028ca8:	4770      	bx	lr

08028caa <__cxa_guard_release>:
 8028caa:	2301      	movs	r3, #1
 8028cac:	6003      	str	r3, [r0, #0]
 8028cae:	4770      	bx	lr

08028cb0 <__cxa_pure_virtual>:
 8028cb0:	b508      	push	{r3, lr}
 8028cb2:	f000 f80f 	bl	8028cd4 <_ZSt9terminatev>

08028cb6 <_ZdlPv>:
 8028cb6:	f000 be29 	b.w	802990c <free>

08028cba <_ZN10__cxxabiv111__terminateEPFvvE>:
 8028cba:	b508      	push	{r3, lr}
 8028cbc:	4780      	blx	r0
 8028cbe:	f000 fdf1 	bl	80298a4 <abort>
	...

08028cc4 <_ZSt13get_terminatev>:
 8028cc4:	4b02      	ldr	r3, [pc, #8]	; (8028cd0 <_ZSt13get_terminatev+0xc>)
 8028cc6:	6818      	ldr	r0, [r3, #0]
 8028cc8:	f3bf 8f5b 	dmb	ish
 8028ccc:	4770      	bx	lr
 8028cce:	bf00      	nop
 8028cd0:	20000104 	.word	0x20000104

08028cd4 <_ZSt9terminatev>:
 8028cd4:	b508      	push	{r3, lr}
 8028cd6:	f7ff fff5 	bl	8028cc4 <_ZSt13get_terminatev>
 8028cda:	f7ff ffee 	bl	8028cba <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08028ce0 <sqrtf>:
 8028ce0:	b508      	push	{r3, lr}
 8028ce2:	ed2d 8b02 	vpush	{d8}
 8028ce6:	eeb0 8a40 	vmov.f32	s16, s0
 8028cea:	f000 f8a1 	bl	8028e30 <__ieee754_sqrtf>
 8028cee:	eeb4 8a48 	vcmp.f32	s16, s16
 8028cf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cf6:	d60c      	bvs.n	8028d12 <sqrtf+0x32>
 8028cf8:	eddf 8a07 	vldr	s17, [pc, #28]	; 8028d18 <sqrtf+0x38>
 8028cfc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8028d00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d04:	d505      	bpl.n	8028d12 <sqrtf+0x32>
 8028d06:	f001 f8d3 	bl	8029eb0 <__errno>
 8028d0a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8028d0e:	2321      	movs	r3, #33	; 0x21
 8028d10:	6003      	str	r3, [r0, #0]
 8028d12:	ecbd 8b02 	vpop	{d8}
 8028d16:	bd08      	pop	{r3, pc}
 8028d18:	00000000 	.word	0x00000000

08028d1c <cosf>:
 8028d1c:	ee10 3a10 	vmov	r3, s0
 8028d20:	b507      	push	{r0, r1, r2, lr}
 8028d22:	4a1e      	ldr	r2, [pc, #120]	; (8028d9c <cosf+0x80>)
 8028d24:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8028d28:	4293      	cmp	r3, r2
 8028d2a:	dc06      	bgt.n	8028d3a <cosf+0x1e>
 8028d2c:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8028da0 <cosf+0x84>
 8028d30:	b003      	add	sp, #12
 8028d32:	f85d eb04 	ldr.w	lr, [sp], #4
 8028d36:	f000 b903 	b.w	8028f40 <__kernel_cosf>
 8028d3a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8028d3e:	db04      	blt.n	8028d4a <cosf+0x2e>
 8028d40:	ee30 0a40 	vsub.f32	s0, s0, s0
 8028d44:	b003      	add	sp, #12
 8028d46:	f85d fb04 	ldr.w	pc, [sp], #4
 8028d4a:	4668      	mov	r0, sp
 8028d4c:	f000 f99e 	bl	802908c <__ieee754_rem_pio2f>
 8028d50:	f000 0003 	and.w	r0, r0, #3
 8028d54:	2801      	cmp	r0, #1
 8028d56:	d009      	beq.n	8028d6c <cosf+0x50>
 8028d58:	2802      	cmp	r0, #2
 8028d5a:	d010      	beq.n	8028d7e <cosf+0x62>
 8028d5c:	b9b0      	cbnz	r0, 8028d8c <cosf+0x70>
 8028d5e:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d62:	ed9d 0a00 	vldr	s0, [sp]
 8028d66:	f000 f8eb 	bl	8028f40 <__kernel_cosf>
 8028d6a:	e7eb      	b.n	8028d44 <cosf+0x28>
 8028d6c:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d70:	ed9d 0a00 	vldr	s0, [sp]
 8028d74:	f000 f942 	bl	8028ffc <__kernel_sinf>
 8028d78:	eeb1 0a40 	vneg.f32	s0, s0
 8028d7c:	e7e2      	b.n	8028d44 <cosf+0x28>
 8028d7e:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d82:	ed9d 0a00 	vldr	s0, [sp]
 8028d86:	f000 f8db 	bl	8028f40 <__kernel_cosf>
 8028d8a:	e7f5      	b.n	8028d78 <cosf+0x5c>
 8028d8c:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d90:	ed9d 0a00 	vldr	s0, [sp]
 8028d94:	2001      	movs	r0, #1
 8028d96:	f000 f931 	bl	8028ffc <__kernel_sinf>
 8028d9a:	e7d3      	b.n	8028d44 <cosf+0x28>
 8028d9c:	3f490fd8 	.word	0x3f490fd8
 8028da0:	00000000 	.word	0x00000000

08028da4 <sinf>:
 8028da4:	ee10 3a10 	vmov	r3, s0
 8028da8:	b507      	push	{r0, r1, r2, lr}
 8028daa:	4a1f      	ldr	r2, [pc, #124]	; (8028e28 <sinf+0x84>)
 8028dac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8028db0:	4293      	cmp	r3, r2
 8028db2:	dc07      	bgt.n	8028dc4 <sinf+0x20>
 8028db4:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8028e2c <sinf+0x88>
 8028db8:	2000      	movs	r0, #0
 8028dba:	b003      	add	sp, #12
 8028dbc:	f85d eb04 	ldr.w	lr, [sp], #4
 8028dc0:	f000 b91c 	b.w	8028ffc <__kernel_sinf>
 8028dc4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8028dc8:	db04      	blt.n	8028dd4 <sinf+0x30>
 8028dca:	ee30 0a40 	vsub.f32	s0, s0, s0
 8028dce:	b003      	add	sp, #12
 8028dd0:	f85d fb04 	ldr.w	pc, [sp], #4
 8028dd4:	4668      	mov	r0, sp
 8028dd6:	f000 f959 	bl	802908c <__ieee754_rem_pio2f>
 8028dda:	f000 0003 	and.w	r0, r0, #3
 8028dde:	2801      	cmp	r0, #1
 8028de0:	d00a      	beq.n	8028df8 <sinf+0x54>
 8028de2:	2802      	cmp	r0, #2
 8028de4:	d00f      	beq.n	8028e06 <sinf+0x62>
 8028de6:	b9c0      	cbnz	r0, 8028e1a <sinf+0x76>
 8028de8:	eddd 0a01 	vldr	s1, [sp, #4]
 8028dec:	ed9d 0a00 	vldr	s0, [sp]
 8028df0:	2001      	movs	r0, #1
 8028df2:	f000 f903 	bl	8028ffc <__kernel_sinf>
 8028df6:	e7ea      	b.n	8028dce <sinf+0x2a>
 8028df8:	eddd 0a01 	vldr	s1, [sp, #4]
 8028dfc:	ed9d 0a00 	vldr	s0, [sp]
 8028e00:	f000 f89e 	bl	8028f40 <__kernel_cosf>
 8028e04:	e7e3      	b.n	8028dce <sinf+0x2a>
 8028e06:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e0a:	ed9d 0a00 	vldr	s0, [sp]
 8028e0e:	2001      	movs	r0, #1
 8028e10:	f000 f8f4 	bl	8028ffc <__kernel_sinf>
 8028e14:	eeb1 0a40 	vneg.f32	s0, s0
 8028e18:	e7d9      	b.n	8028dce <sinf+0x2a>
 8028e1a:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e1e:	ed9d 0a00 	vldr	s0, [sp]
 8028e22:	f000 f88d 	bl	8028f40 <__kernel_cosf>
 8028e26:	e7f5      	b.n	8028e14 <sinf+0x70>
 8028e28:	3f490fd8 	.word	0x3f490fd8
 8028e2c:	00000000 	.word	0x00000000

08028e30 <__ieee754_sqrtf>:
 8028e30:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8028e34:	4770      	bx	lr
	...

08028e38 <ceilf>:
 8028e38:	ee10 3a10 	vmov	r3, s0
 8028e3c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8028e40:	3a7f      	subs	r2, #127	; 0x7f
 8028e42:	2a16      	cmp	r2, #22
 8028e44:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8028e48:	dc2a      	bgt.n	8028ea0 <ceilf+0x68>
 8028e4a:	2a00      	cmp	r2, #0
 8028e4c:	da11      	bge.n	8028e72 <ceilf+0x3a>
 8028e4e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8028eb4 <ceilf+0x7c>
 8028e52:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028e56:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028e5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e5e:	dd05      	ble.n	8028e6c <ceilf+0x34>
 8028e60:	2b00      	cmp	r3, #0
 8028e62:	db23      	blt.n	8028eac <ceilf+0x74>
 8028e64:	2900      	cmp	r1, #0
 8028e66:	bf18      	it	ne
 8028e68:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8028e6c:	ee00 3a10 	vmov	s0, r3
 8028e70:	4770      	bx	lr
 8028e72:	4911      	ldr	r1, [pc, #68]	; (8028eb8 <ceilf+0x80>)
 8028e74:	4111      	asrs	r1, r2
 8028e76:	420b      	tst	r3, r1
 8028e78:	d0fa      	beq.n	8028e70 <ceilf+0x38>
 8028e7a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8028eb4 <ceilf+0x7c>
 8028e7e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028e82:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e8a:	ddef      	ble.n	8028e6c <ceilf+0x34>
 8028e8c:	2b00      	cmp	r3, #0
 8028e8e:	bfc2      	ittt	gt
 8028e90:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8028e94:	fa40 f202 	asrgt.w	r2, r0, r2
 8028e98:	189b      	addgt	r3, r3, r2
 8028e9a:	ea23 0301 	bic.w	r3, r3, r1
 8028e9e:	e7e5      	b.n	8028e6c <ceilf+0x34>
 8028ea0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8028ea4:	d3e4      	bcc.n	8028e70 <ceilf+0x38>
 8028ea6:	ee30 0a00 	vadd.f32	s0, s0, s0
 8028eaa:	4770      	bx	lr
 8028eac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8028eb0:	e7dc      	b.n	8028e6c <ceilf+0x34>
 8028eb2:	bf00      	nop
 8028eb4:	7149f2ca 	.word	0x7149f2ca
 8028eb8:	007fffff 	.word	0x007fffff

08028ebc <floorf>:
 8028ebc:	ee10 3a10 	vmov	r3, s0
 8028ec0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8028ec4:	3a7f      	subs	r2, #127	; 0x7f
 8028ec6:	2a16      	cmp	r2, #22
 8028ec8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8028ecc:	dc2a      	bgt.n	8028f24 <floorf+0x68>
 8028ece:	2a00      	cmp	r2, #0
 8028ed0:	da11      	bge.n	8028ef6 <floorf+0x3a>
 8028ed2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8028f34 <floorf+0x78>
 8028ed6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028eda:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ee2:	dd05      	ble.n	8028ef0 <floorf+0x34>
 8028ee4:	2b00      	cmp	r3, #0
 8028ee6:	da23      	bge.n	8028f30 <floorf+0x74>
 8028ee8:	4a13      	ldr	r2, [pc, #76]	; (8028f38 <floorf+0x7c>)
 8028eea:	2900      	cmp	r1, #0
 8028eec:	bf18      	it	ne
 8028eee:	4613      	movne	r3, r2
 8028ef0:	ee00 3a10 	vmov	s0, r3
 8028ef4:	4770      	bx	lr
 8028ef6:	4911      	ldr	r1, [pc, #68]	; (8028f3c <floorf+0x80>)
 8028ef8:	4111      	asrs	r1, r2
 8028efa:	420b      	tst	r3, r1
 8028efc:	d0fa      	beq.n	8028ef4 <floorf+0x38>
 8028efe:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8028f34 <floorf+0x78>
 8028f02:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028f06:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028f0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f0e:	ddef      	ble.n	8028ef0 <floorf+0x34>
 8028f10:	2b00      	cmp	r3, #0
 8028f12:	bfbe      	ittt	lt
 8028f14:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8028f18:	fa40 f202 	asrlt.w	r2, r0, r2
 8028f1c:	189b      	addlt	r3, r3, r2
 8028f1e:	ea23 0301 	bic.w	r3, r3, r1
 8028f22:	e7e5      	b.n	8028ef0 <floorf+0x34>
 8028f24:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8028f28:	d3e4      	bcc.n	8028ef4 <floorf+0x38>
 8028f2a:	ee30 0a00 	vadd.f32	s0, s0, s0
 8028f2e:	4770      	bx	lr
 8028f30:	2300      	movs	r3, #0
 8028f32:	e7dd      	b.n	8028ef0 <floorf+0x34>
 8028f34:	7149f2ca 	.word	0x7149f2ca
 8028f38:	bf800000 	.word	0xbf800000
 8028f3c:	007fffff 	.word	0x007fffff

08028f40 <__kernel_cosf>:
 8028f40:	ee10 3a10 	vmov	r3, s0
 8028f44:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8028f48:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8028f4c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8028f50:	da05      	bge.n	8028f5e <__kernel_cosf+0x1e>
 8028f52:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8028f56:	ee17 2a90 	vmov	r2, s15
 8028f5a:	2a00      	cmp	r2, #0
 8028f5c:	d03b      	beq.n	8028fd6 <__kernel_cosf+0x96>
 8028f5e:	ee20 7a00 	vmul.f32	s14, s0, s0
 8028f62:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8028fdc <__kernel_cosf+0x9c>
 8028f66:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8028fe0 <__kernel_cosf+0xa0>
 8028f6a:	4a1e      	ldr	r2, [pc, #120]	; (8028fe4 <__kernel_cosf+0xa4>)
 8028f6c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8028f70:	4293      	cmp	r3, r2
 8028f72:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8028fe8 <__kernel_cosf+0xa8>
 8028f76:	eee6 7a07 	vfma.f32	s15, s12, s14
 8028f7a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8028fec <__kernel_cosf+0xac>
 8028f7e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8028f82:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8028ff0 <__kernel_cosf+0xb0>
 8028f86:	eee6 7a07 	vfma.f32	s15, s12, s14
 8028f8a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8028ff4 <__kernel_cosf+0xb4>
 8028f8e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8028f92:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8028f96:	ee26 6a07 	vmul.f32	s12, s12, s14
 8028f9a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8028f9e:	eee7 0a06 	vfma.f32	s1, s14, s12
 8028fa2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8028fa6:	dc04      	bgt.n	8028fb2 <__kernel_cosf+0x72>
 8028fa8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8028fac:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8028fb0:	4770      	bx	lr
 8028fb2:	4a11      	ldr	r2, [pc, #68]	; (8028ff8 <__kernel_cosf+0xb8>)
 8028fb4:	4293      	cmp	r3, r2
 8028fb6:	bfda      	itte	le
 8028fb8:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8028fbc:	ee07 3a10 	vmovle	s14, r3
 8028fc0:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8028fc4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028fc8:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8028fcc:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8028fd0:	ee30 0a67 	vsub.f32	s0, s0, s15
 8028fd4:	4770      	bx	lr
 8028fd6:	eeb0 0a66 	vmov.f32	s0, s13
 8028fda:	4770      	bx	lr
 8028fdc:	ad47d74e 	.word	0xad47d74e
 8028fe0:	310f74f6 	.word	0x310f74f6
 8028fe4:	3e999999 	.word	0x3e999999
 8028fe8:	b493f27c 	.word	0xb493f27c
 8028fec:	37d00d01 	.word	0x37d00d01
 8028ff0:	bab60b61 	.word	0xbab60b61
 8028ff4:	3d2aaaab 	.word	0x3d2aaaab
 8028ff8:	3f480000 	.word	0x3f480000

08028ffc <__kernel_sinf>:
 8028ffc:	ee10 3a10 	vmov	r3, s0
 8029000:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029004:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8029008:	da04      	bge.n	8029014 <__kernel_sinf+0x18>
 802900a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802900e:	ee17 3a90 	vmov	r3, s15
 8029012:	b35b      	cbz	r3, 802906c <__kernel_sinf+0x70>
 8029014:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029018:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029070 <__kernel_sinf+0x74>
 802901c:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029074 <__kernel_sinf+0x78>
 8029020:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029024:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029078 <__kernel_sinf+0x7c>
 8029028:	eee6 7a07 	vfma.f32	s15, s12, s14
 802902c:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802907c <__kernel_sinf+0x80>
 8029030:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029034:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029080 <__kernel_sinf+0x84>
 8029038:	ee60 6a07 	vmul.f32	s13, s0, s14
 802903c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029040:	b930      	cbnz	r0, 8029050 <__kernel_sinf+0x54>
 8029042:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8029084 <__kernel_sinf+0x88>
 8029046:	eea7 6a27 	vfma.f32	s12, s14, s15
 802904a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802904e:	4770      	bx	lr
 8029050:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029054:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8029058:	eee0 7a86 	vfma.f32	s15, s1, s12
 802905c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029060:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029088 <__kernel_sinf+0x8c>
 8029064:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029068:	ee30 0a60 	vsub.f32	s0, s0, s1
 802906c:	4770      	bx	lr
 802906e:	bf00      	nop
 8029070:	2f2ec9d3 	.word	0x2f2ec9d3
 8029074:	b2d72f34 	.word	0xb2d72f34
 8029078:	3638ef1b 	.word	0x3638ef1b
 802907c:	b9500d01 	.word	0xb9500d01
 8029080:	3c088889 	.word	0x3c088889
 8029084:	be2aaaab 	.word	0xbe2aaaab
 8029088:	3e2aaaab 	.word	0x3e2aaaab

0802908c <__ieee754_rem_pio2f>:
 802908c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802908e:	ee10 6a10 	vmov	r6, s0
 8029092:	4b86      	ldr	r3, [pc, #536]	; (80292ac <__ieee754_rem_pio2f+0x220>)
 8029094:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029098:	429d      	cmp	r5, r3
 802909a:	b087      	sub	sp, #28
 802909c:	4604      	mov	r4, r0
 802909e:	dc05      	bgt.n	80290ac <__ieee754_rem_pio2f+0x20>
 80290a0:	2300      	movs	r3, #0
 80290a2:	ed80 0a00 	vstr	s0, [r0]
 80290a6:	6043      	str	r3, [r0, #4]
 80290a8:	2000      	movs	r0, #0
 80290aa:	e020      	b.n	80290ee <__ieee754_rem_pio2f+0x62>
 80290ac:	4b80      	ldr	r3, [pc, #512]	; (80292b0 <__ieee754_rem_pio2f+0x224>)
 80290ae:	429d      	cmp	r5, r3
 80290b0:	dc38      	bgt.n	8029124 <__ieee754_rem_pio2f+0x98>
 80290b2:	2e00      	cmp	r6, #0
 80290b4:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 80292b4 <__ieee754_rem_pio2f+0x228>
 80290b8:	4b7f      	ldr	r3, [pc, #508]	; (80292b8 <__ieee754_rem_pio2f+0x22c>)
 80290ba:	f025 050f 	bic.w	r5, r5, #15
 80290be:	dd18      	ble.n	80290f2 <__ieee754_rem_pio2f+0x66>
 80290c0:	429d      	cmp	r5, r3
 80290c2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80290c6:	bf09      	itett	eq
 80290c8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 80292bc <__ieee754_rem_pio2f+0x230>
 80290cc:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 80292c0 <__ieee754_rem_pio2f+0x234>
 80290d0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80290d4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 80292c4 <__ieee754_rem_pio2f+0x238>
 80290d8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80290dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80290e0:	edc0 6a00 	vstr	s13, [r0]
 80290e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80290e8:	edc0 7a01 	vstr	s15, [r0, #4]
 80290ec:	2001      	movs	r0, #1
 80290ee:	b007      	add	sp, #28
 80290f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80290f2:	429d      	cmp	r5, r3
 80290f4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80290f8:	bf09      	itett	eq
 80290fa:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 80292bc <__ieee754_rem_pio2f+0x230>
 80290fe:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 80292c0 <__ieee754_rem_pio2f+0x234>
 8029102:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8029106:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 80292c4 <__ieee754_rem_pio2f+0x238>
 802910a:	ee77 6a87 	vadd.f32	s13, s15, s14
 802910e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029112:	edc0 6a00 	vstr	s13, [r0]
 8029116:	ee77 7a87 	vadd.f32	s15, s15, s14
 802911a:	edc0 7a01 	vstr	s15, [r0, #4]
 802911e:	f04f 30ff 	mov.w	r0, #4294967295
 8029122:	e7e4      	b.n	80290ee <__ieee754_rem_pio2f+0x62>
 8029124:	4b68      	ldr	r3, [pc, #416]	; (80292c8 <__ieee754_rem_pio2f+0x23c>)
 8029126:	429d      	cmp	r5, r3
 8029128:	dc71      	bgt.n	802920e <__ieee754_rem_pio2f+0x182>
 802912a:	f000 f8db 	bl	80292e4 <fabsf>
 802912e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 80292cc <__ieee754_rem_pio2f+0x240>
 8029132:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029136:	eee0 7a07 	vfma.f32	s15, s0, s14
 802913a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802913e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029142:	ee17 0a90 	vmov	r0, s15
 8029146:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80292b4 <__ieee754_rem_pio2f+0x228>
 802914a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802914e:	281f      	cmp	r0, #31
 8029150:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80292c0 <__ieee754_rem_pio2f+0x234>
 8029154:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029158:	eeb1 6a47 	vneg.f32	s12, s14
 802915c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029160:	ee16 2a90 	vmov	r2, s13
 8029164:	dc1c      	bgt.n	80291a0 <__ieee754_rem_pio2f+0x114>
 8029166:	495a      	ldr	r1, [pc, #360]	; (80292d0 <__ieee754_rem_pio2f+0x244>)
 8029168:	1e47      	subs	r7, r0, #1
 802916a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802916e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029172:	428b      	cmp	r3, r1
 8029174:	d014      	beq.n	80291a0 <__ieee754_rem_pio2f+0x114>
 8029176:	6022      	str	r2, [r4, #0]
 8029178:	ed94 7a00 	vldr	s14, [r4]
 802917c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029180:	2e00      	cmp	r6, #0
 8029182:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029186:	ed84 0a01 	vstr	s0, [r4, #4]
 802918a:	dab0      	bge.n	80290ee <__ieee754_rem_pio2f+0x62>
 802918c:	eeb1 7a47 	vneg.f32	s14, s14
 8029190:	eeb1 0a40 	vneg.f32	s0, s0
 8029194:	ed84 7a00 	vstr	s14, [r4]
 8029198:	ed84 0a01 	vstr	s0, [r4, #4]
 802919c:	4240      	negs	r0, r0
 802919e:	e7a6      	b.n	80290ee <__ieee754_rem_pio2f+0x62>
 80291a0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80291a4:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 80291a8:	2908      	cmp	r1, #8
 80291aa:	ea4f 53e5 	mov.w	r3, r5, asr #23
 80291ae:	dde2      	ble.n	8029176 <__ieee754_rem_pio2f+0xea>
 80291b0:	eddf 5a42 	vldr	s11, [pc, #264]	; 80292bc <__ieee754_rem_pio2f+0x230>
 80291b4:	eef0 6a40 	vmov.f32	s13, s0
 80291b8:	eee6 6a25 	vfma.f32	s13, s12, s11
 80291bc:	ee70 7a66 	vsub.f32	s15, s0, s13
 80291c0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80291c4:	eddf 5a3f 	vldr	s11, [pc, #252]	; 80292c4 <__ieee754_rem_pio2f+0x238>
 80291c8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80291cc:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80291d0:	ee15 2a90 	vmov	r2, s11
 80291d4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80291d8:	1a5b      	subs	r3, r3, r1
 80291da:	2b19      	cmp	r3, #25
 80291dc:	dc04      	bgt.n	80291e8 <__ieee754_rem_pio2f+0x15c>
 80291de:	edc4 5a00 	vstr	s11, [r4]
 80291e2:	eeb0 0a66 	vmov.f32	s0, s13
 80291e6:	e7c7      	b.n	8029178 <__ieee754_rem_pio2f+0xec>
 80291e8:	eddf 5a3a 	vldr	s11, [pc, #232]	; 80292d4 <__ieee754_rem_pio2f+0x248>
 80291ec:	eeb0 0a66 	vmov.f32	s0, s13
 80291f0:	eea6 0a25 	vfma.f32	s0, s12, s11
 80291f4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80291f8:	eddf 6a37 	vldr	s13, [pc, #220]	; 80292d8 <__ieee754_rem_pio2f+0x24c>
 80291fc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029200:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8029204:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029208:	ed84 7a00 	vstr	s14, [r4]
 802920c:	e7b4      	b.n	8029178 <__ieee754_rem_pio2f+0xec>
 802920e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8029212:	db06      	blt.n	8029222 <__ieee754_rem_pio2f+0x196>
 8029214:	ee70 7a40 	vsub.f32	s15, s0, s0
 8029218:	edc0 7a01 	vstr	s15, [r0, #4]
 802921c:	edc0 7a00 	vstr	s15, [r0]
 8029220:	e742      	b.n	80290a8 <__ieee754_rem_pio2f+0x1c>
 8029222:	15ea      	asrs	r2, r5, #23
 8029224:	3a86      	subs	r2, #134	; 0x86
 8029226:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802922a:	ee07 3a90 	vmov	s15, r3
 802922e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029232:	eddf 6a2a 	vldr	s13, [pc, #168]	; 80292dc <__ieee754_rem_pio2f+0x250>
 8029236:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802923a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802923e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8029242:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029246:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802924a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802924e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029252:	ed8d 7a04 	vstr	s14, [sp, #16]
 8029256:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802925a:	eef5 7a40 	vcmp.f32	s15, #0.0
 802925e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029262:	edcd 7a05 	vstr	s15, [sp, #20]
 8029266:	d11e      	bne.n	80292a6 <__ieee754_rem_pio2f+0x21a>
 8029268:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802926c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029270:	bf14      	ite	ne
 8029272:	2302      	movne	r3, #2
 8029274:	2301      	moveq	r3, #1
 8029276:	491a      	ldr	r1, [pc, #104]	; (80292e0 <__ieee754_rem_pio2f+0x254>)
 8029278:	9101      	str	r1, [sp, #4]
 802927a:	2102      	movs	r1, #2
 802927c:	9100      	str	r1, [sp, #0]
 802927e:	a803      	add	r0, sp, #12
 8029280:	4621      	mov	r1, r4
 8029282:	f000 f89d 	bl	80293c0 <__kernel_rem_pio2f>
 8029286:	2e00      	cmp	r6, #0
 8029288:	f6bf af31 	bge.w	80290ee <__ieee754_rem_pio2f+0x62>
 802928c:	edd4 7a00 	vldr	s15, [r4]
 8029290:	eef1 7a67 	vneg.f32	s15, s15
 8029294:	edc4 7a00 	vstr	s15, [r4]
 8029298:	edd4 7a01 	vldr	s15, [r4, #4]
 802929c:	eef1 7a67 	vneg.f32	s15, s15
 80292a0:	edc4 7a01 	vstr	s15, [r4, #4]
 80292a4:	e77a      	b.n	802919c <__ieee754_rem_pio2f+0x110>
 80292a6:	2303      	movs	r3, #3
 80292a8:	e7e5      	b.n	8029276 <__ieee754_rem_pio2f+0x1ea>
 80292aa:	bf00      	nop
 80292ac:	3f490fd8 	.word	0x3f490fd8
 80292b0:	4016cbe3 	.word	0x4016cbe3
 80292b4:	3fc90f80 	.word	0x3fc90f80
 80292b8:	3fc90fd0 	.word	0x3fc90fd0
 80292bc:	37354400 	.word	0x37354400
 80292c0:	37354443 	.word	0x37354443
 80292c4:	2e85a308 	.word	0x2e85a308
 80292c8:	43490f80 	.word	0x43490f80
 80292cc:	3f22f984 	.word	0x3f22f984
 80292d0:	08041ae0 	.word	0x08041ae0
 80292d4:	2e85a300 	.word	0x2e85a300
 80292d8:	248d3132 	.word	0x248d3132
 80292dc:	43800000 	.word	0x43800000
 80292e0:	08041b60 	.word	0x08041b60

080292e4 <fabsf>:
 80292e4:	ee10 3a10 	vmov	r3, s0
 80292e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80292ec:	ee00 3a10 	vmov	s0, r3
 80292f0:	4770      	bx	lr
	...

080292f4 <scalbnf>:
 80292f4:	ee10 3a10 	vmov	r3, s0
 80292f8:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80292fc:	d02b      	beq.n	8029356 <scalbnf+0x62>
 80292fe:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8029302:	d302      	bcc.n	802930a <scalbnf+0x16>
 8029304:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029308:	4770      	bx	lr
 802930a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802930e:	d123      	bne.n	8029358 <scalbnf+0x64>
 8029310:	4b24      	ldr	r3, [pc, #144]	; (80293a4 <scalbnf+0xb0>)
 8029312:	eddf 7a25 	vldr	s15, [pc, #148]	; 80293a8 <scalbnf+0xb4>
 8029316:	4298      	cmp	r0, r3
 8029318:	ee20 0a27 	vmul.f32	s0, s0, s15
 802931c:	db17      	blt.n	802934e <scalbnf+0x5a>
 802931e:	ee10 3a10 	vmov	r3, s0
 8029322:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029326:	3a19      	subs	r2, #25
 8029328:	f24c 3150 	movw	r1, #50000	; 0xc350
 802932c:	4288      	cmp	r0, r1
 802932e:	dd15      	ble.n	802935c <scalbnf+0x68>
 8029330:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80293ac <scalbnf+0xb8>
 8029334:	eddf 6a1e 	vldr	s13, [pc, #120]	; 80293b0 <scalbnf+0xbc>
 8029338:	ee10 3a10 	vmov	r3, s0
 802933c:	eeb0 7a67 	vmov.f32	s14, s15
 8029340:	2b00      	cmp	r3, #0
 8029342:	bfb8      	it	lt
 8029344:	eef0 7a66 	vmovlt.f32	s15, s13
 8029348:	ee27 0a87 	vmul.f32	s0, s15, s14
 802934c:	4770      	bx	lr
 802934e:	eddf 7a19 	vldr	s15, [pc, #100]	; 80293b4 <scalbnf+0xc0>
 8029352:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029356:	4770      	bx	lr
 8029358:	0dd2      	lsrs	r2, r2, #23
 802935a:	e7e5      	b.n	8029328 <scalbnf+0x34>
 802935c:	4410      	add	r0, r2
 802935e:	28fe      	cmp	r0, #254	; 0xfe
 8029360:	dce6      	bgt.n	8029330 <scalbnf+0x3c>
 8029362:	2800      	cmp	r0, #0
 8029364:	dd06      	ble.n	8029374 <scalbnf+0x80>
 8029366:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802936a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802936e:	ee00 3a10 	vmov	s0, r3
 8029372:	4770      	bx	lr
 8029374:	f110 0f16 	cmn.w	r0, #22
 8029378:	da09      	bge.n	802938e <scalbnf+0x9a>
 802937a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80293b4 <scalbnf+0xc0>
 802937e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 80293b8 <scalbnf+0xc4>
 8029382:	ee10 3a10 	vmov	r3, s0
 8029386:	eeb0 7a67 	vmov.f32	s14, s15
 802938a:	2b00      	cmp	r3, #0
 802938c:	e7d9      	b.n	8029342 <scalbnf+0x4e>
 802938e:	3019      	adds	r0, #25
 8029390:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029394:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029398:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80293bc <scalbnf+0xc8>
 802939c:	ee07 3a90 	vmov	s15, r3
 80293a0:	e7d7      	b.n	8029352 <scalbnf+0x5e>
 80293a2:	bf00      	nop
 80293a4:	ffff3cb0 	.word	0xffff3cb0
 80293a8:	4c000000 	.word	0x4c000000
 80293ac:	7149f2ca 	.word	0x7149f2ca
 80293b0:	f149f2ca 	.word	0xf149f2ca
 80293b4:	0da24260 	.word	0x0da24260
 80293b8:	8da24260 	.word	0x8da24260
 80293bc:	33000000 	.word	0x33000000

080293c0 <__kernel_rem_pio2f>:
 80293c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80293c4:	ed2d 8b04 	vpush	{d8-d9}
 80293c8:	b0d9      	sub	sp, #356	; 0x164
 80293ca:	4688      	mov	r8, r1
 80293cc:	9002      	str	r0, [sp, #8]
 80293ce:	49b8      	ldr	r1, [pc, #736]	; (80296b0 <__kernel_rem_pio2f+0x2f0>)
 80293d0:	9866      	ldr	r0, [sp, #408]	; 0x198
 80293d2:	9301      	str	r3, [sp, #4]
 80293d4:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 80293d8:	9901      	ldr	r1, [sp, #4]
 80293da:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 80293dc:	f101 3bff 	add.w	fp, r1, #4294967295
 80293e0:	1d11      	adds	r1, r2, #4
 80293e2:	db25      	blt.n	8029430 <__kernel_rem_pio2f+0x70>
 80293e4:	1ed0      	subs	r0, r2, #3
 80293e6:	bf48      	it	mi
 80293e8:	1d10      	addmi	r0, r2, #4
 80293ea:	10c0      	asrs	r0, r0, #3
 80293ec:	1c45      	adds	r5, r0, #1
 80293ee:	00e9      	lsls	r1, r5, #3
 80293f0:	eba0 070b 	sub.w	r7, r0, fp
 80293f4:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 80296c0 <__kernel_rem_pio2f+0x300>
 80293f8:	9103      	str	r1, [sp, #12]
 80293fa:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 80293fe:	eb0a 0c0b 	add.w	ip, sl, fp
 8029402:	ae1c      	add	r6, sp, #112	; 0x70
 8029404:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8029408:	2400      	movs	r4, #0
 802940a:	4564      	cmp	r4, ip
 802940c:	dd12      	ble.n	8029434 <__kernel_rem_pio2f+0x74>
 802940e:	9901      	ldr	r1, [sp, #4]
 8029410:	ac1c      	add	r4, sp, #112	; 0x70
 8029412:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8029416:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802941a:	f04f 0c00 	mov.w	ip, #0
 802941e:	45d4      	cmp	ip, sl
 8029420:	dc27      	bgt.n	8029472 <__kernel_rem_pio2f+0xb2>
 8029422:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029426:	eddf 7aa6 	vldr	s15, [pc, #664]	; 80296c0 <__kernel_rem_pio2f+0x300>
 802942a:	4627      	mov	r7, r4
 802942c:	2600      	movs	r6, #0
 802942e:	e016      	b.n	802945e <__kernel_rem_pio2f+0x9e>
 8029430:	2000      	movs	r0, #0
 8029432:	e7db      	b.n	80293ec <__kernel_rem_pio2f+0x2c>
 8029434:	42e7      	cmn	r7, r4
 8029436:	bf5d      	ittte	pl
 8029438:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802943c:	ee07 1a90 	vmovpl	s15, r1
 8029440:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8029444:	eef0 7a47 	vmovmi.f32	s15, s14
 8029448:	ece6 7a01 	vstmia	r6!, {s15}
 802944c:	3401      	adds	r4, #1
 802944e:	e7dc      	b.n	802940a <__kernel_rem_pio2f+0x4a>
 8029450:	ecfe 6a01 	vldmia	lr!, {s13}
 8029454:	ed97 7a00 	vldr	s14, [r7]
 8029458:	eee6 7a87 	vfma.f32	s15, s13, s14
 802945c:	3601      	adds	r6, #1
 802945e:	455e      	cmp	r6, fp
 8029460:	f1a7 0704 	sub.w	r7, r7, #4
 8029464:	ddf4      	ble.n	8029450 <__kernel_rem_pio2f+0x90>
 8029466:	ece9 7a01 	vstmia	r9!, {s15}
 802946a:	f10c 0c01 	add.w	ip, ip, #1
 802946e:	3404      	adds	r4, #4
 8029470:	e7d5      	b.n	802941e <__kernel_rem_pio2f+0x5e>
 8029472:	a908      	add	r1, sp, #32
 8029474:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029478:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802947c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 80296bc <__kernel_rem_pio2f+0x2fc>
 8029480:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 80296b8 <__kernel_rem_pio2f+0x2f8>
 8029484:	9105      	str	r1, [sp, #20]
 8029486:	9304      	str	r3, [sp, #16]
 8029488:	4656      	mov	r6, sl
 802948a:	00b3      	lsls	r3, r6, #2
 802948c:	9306      	str	r3, [sp, #24]
 802948e:	ab58      	add	r3, sp, #352	; 0x160
 8029490:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029494:	ac08      	add	r4, sp, #32
 8029496:	ab44      	add	r3, sp, #272	; 0x110
 8029498:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802949c:	46a4      	mov	ip, r4
 802949e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 80294a2:	4637      	mov	r7, r6
 80294a4:	2f00      	cmp	r7, #0
 80294a6:	f1a0 0004 	sub.w	r0, r0, #4
 80294aa:	dc4a      	bgt.n	8029542 <__kernel_rem_pio2f+0x182>
 80294ac:	4628      	mov	r0, r5
 80294ae:	9207      	str	r2, [sp, #28]
 80294b0:	f7ff ff20 	bl	80292f4 <scalbnf>
 80294b4:	eeb0 8a40 	vmov.f32	s16, s0
 80294b8:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80294bc:	ee28 0a00 	vmul.f32	s0, s16, s0
 80294c0:	f7ff fcfc 	bl	8028ebc <floorf>
 80294c4:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 80294c8:	eea0 8a67 	vfms.f32	s16, s0, s15
 80294cc:	2d00      	cmp	r5, #0
 80294ce:	9a07      	ldr	r2, [sp, #28]
 80294d0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80294d4:	ee17 9a90 	vmov	r9, s15
 80294d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80294dc:	ee38 8a67 	vsub.f32	s16, s16, s15
 80294e0:	dd41      	ble.n	8029566 <__kernel_rem_pio2f+0x1a6>
 80294e2:	f106 3cff 	add.w	ip, r6, #4294967295
 80294e6:	ab08      	add	r3, sp, #32
 80294e8:	f1c5 0e08 	rsb	lr, r5, #8
 80294ec:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 80294f0:	fa47 f00e 	asr.w	r0, r7, lr
 80294f4:	4481      	add	r9, r0
 80294f6:	fa00 f00e 	lsl.w	r0, r0, lr
 80294fa:	1a3f      	subs	r7, r7, r0
 80294fc:	f1c5 0007 	rsb	r0, r5, #7
 8029500:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8029504:	4107      	asrs	r7, r0
 8029506:	2f00      	cmp	r7, #0
 8029508:	dd3c      	ble.n	8029584 <__kernel_rem_pio2f+0x1c4>
 802950a:	f04f 0e00 	mov.w	lr, #0
 802950e:	f109 0901 	add.w	r9, r9, #1
 8029512:	4671      	mov	r1, lr
 8029514:	4576      	cmp	r6, lr
 8029516:	dc67      	bgt.n	80295e8 <__kernel_rem_pio2f+0x228>
 8029518:	2d00      	cmp	r5, #0
 802951a:	dd03      	ble.n	8029524 <__kernel_rem_pio2f+0x164>
 802951c:	2d01      	cmp	r5, #1
 802951e:	d074      	beq.n	802960a <__kernel_rem_pio2f+0x24a>
 8029520:	2d02      	cmp	r5, #2
 8029522:	d07b      	beq.n	802961c <__kernel_rem_pio2f+0x25c>
 8029524:	2f02      	cmp	r7, #2
 8029526:	d12d      	bne.n	8029584 <__kernel_rem_pio2f+0x1c4>
 8029528:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802952c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8029530:	b341      	cbz	r1, 8029584 <__kernel_rem_pio2f+0x1c4>
 8029532:	4628      	mov	r0, r5
 8029534:	9207      	str	r2, [sp, #28]
 8029536:	f7ff fedd 	bl	80292f4 <scalbnf>
 802953a:	9a07      	ldr	r2, [sp, #28]
 802953c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8029540:	e020      	b.n	8029584 <__kernel_rem_pio2f+0x1c4>
 8029542:	ee60 7a28 	vmul.f32	s15, s0, s17
 8029546:	3f01      	subs	r7, #1
 8029548:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802954c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029550:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8029554:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029558:	ecac 0a01 	vstmia	ip!, {s0}
 802955c:	ed90 0a00 	vldr	s0, [r0]
 8029560:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029564:	e79e      	b.n	80294a4 <__kernel_rem_pio2f+0xe4>
 8029566:	d105      	bne.n	8029574 <__kernel_rem_pio2f+0x1b4>
 8029568:	1e70      	subs	r0, r6, #1
 802956a:	ab08      	add	r3, sp, #32
 802956c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029570:	11ff      	asrs	r7, r7, #7
 8029572:	e7c8      	b.n	8029506 <__kernel_rem_pio2f+0x146>
 8029574:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029578:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802957c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029580:	da30      	bge.n	80295e4 <__kernel_rem_pio2f+0x224>
 8029582:	2700      	movs	r7, #0
 8029584:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802958c:	f040 809a 	bne.w	80296c4 <__kernel_rem_pio2f+0x304>
 8029590:	1e74      	subs	r4, r6, #1
 8029592:	46a4      	mov	ip, r4
 8029594:	2100      	movs	r1, #0
 8029596:	45d4      	cmp	ip, sl
 8029598:	da47      	bge.n	802962a <__kernel_rem_pio2f+0x26a>
 802959a:	2900      	cmp	r1, #0
 802959c:	d063      	beq.n	8029666 <__kernel_rem_pio2f+0x2a6>
 802959e:	ab08      	add	r3, sp, #32
 80295a0:	3d08      	subs	r5, #8
 80295a2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80295a6:	2b00      	cmp	r3, #0
 80295a8:	d07f      	beq.n	80296aa <__kernel_rem_pio2f+0x2ea>
 80295aa:	4628      	mov	r0, r5
 80295ac:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80295b0:	f7ff fea0 	bl	80292f4 <scalbnf>
 80295b4:	1c63      	adds	r3, r4, #1
 80295b6:	aa44      	add	r2, sp, #272	; 0x110
 80295b8:	ed9f 7a40 	vldr	s14, [pc, #256]	; 80296bc <__kernel_rem_pio2f+0x2fc>
 80295bc:	0099      	lsls	r1, r3, #2
 80295be:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80295c2:	4623      	mov	r3, r4
 80295c4:	2b00      	cmp	r3, #0
 80295c6:	f280 80ad 	bge.w	8029724 <__kernel_rem_pio2f+0x364>
 80295ca:	4623      	mov	r3, r4
 80295cc:	2b00      	cmp	r3, #0
 80295ce:	f2c0 80cb 	blt.w	8029768 <__kernel_rem_pio2f+0x3a8>
 80295d2:	aa44      	add	r2, sp, #272	; 0x110
 80295d4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80295d8:	4e36      	ldr	r6, [pc, #216]	; (80296b4 <__kernel_rem_pio2f+0x2f4>)
 80295da:	eddf 7a39 	vldr	s15, [pc, #228]	; 80296c0 <__kernel_rem_pio2f+0x300>
 80295de:	2000      	movs	r0, #0
 80295e0:	1ae2      	subs	r2, r4, r3
 80295e2:	e0b6      	b.n	8029752 <__kernel_rem_pio2f+0x392>
 80295e4:	2702      	movs	r7, #2
 80295e6:	e790      	b.n	802950a <__kernel_rem_pio2f+0x14a>
 80295e8:	6820      	ldr	r0, [r4, #0]
 80295ea:	b949      	cbnz	r1, 8029600 <__kernel_rem_pio2f+0x240>
 80295ec:	b118      	cbz	r0, 80295f6 <__kernel_rem_pio2f+0x236>
 80295ee:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80295f2:	6020      	str	r0, [r4, #0]
 80295f4:	2001      	movs	r0, #1
 80295f6:	f10e 0e01 	add.w	lr, lr, #1
 80295fa:	3404      	adds	r4, #4
 80295fc:	4601      	mov	r1, r0
 80295fe:	e789      	b.n	8029514 <__kernel_rem_pio2f+0x154>
 8029600:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8029604:	6020      	str	r0, [r4, #0]
 8029606:	4608      	mov	r0, r1
 8029608:	e7f5      	b.n	80295f6 <__kernel_rem_pio2f+0x236>
 802960a:	1e74      	subs	r4, r6, #1
 802960c:	ab08      	add	r3, sp, #32
 802960e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029612:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8029616:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802961a:	e783      	b.n	8029524 <__kernel_rem_pio2f+0x164>
 802961c:	1e74      	subs	r4, r6, #1
 802961e:	ab08      	add	r3, sp, #32
 8029620:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029624:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8029628:	e7f5      	b.n	8029616 <__kernel_rem_pio2f+0x256>
 802962a:	ab08      	add	r3, sp, #32
 802962c:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8029630:	f10c 3cff 	add.w	ip, ip, #4294967295
 8029634:	4301      	orrs	r1, r0
 8029636:	e7ae      	b.n	8029596 <__kernel_rem_pio2f+0x1d6>
 8029638:	3001      	adds	r0, #1
 802963a:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802963e:	2f00      	cmp	r7, #0
 8029640:	d0fa      	beq.n	8029638 <__kernel_rem_pio2f+0x278>
 8029642:	9b06      	ldr	r3, [sp, #24]
 8029644:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8029648:	eb0d 0403 	add.w	r4, sp, r3
 802964c:	9b01      	ldr	r3, [sp, #4]
 802964e:	18f7      	adds	r7, r6, r3
 8029650:	ab1c      	add	r3, sp, #112	; 0x70
 8029652:	f106 0c01 	add.w	ip, r6, #1
 8029656:	3c4c      	subs	r4, #76	; 0x4c
 8029658:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802965c:	4430      	add	r0, r6
 802965e:	4560      	cmp	r0, ip
 8029660:	da04      	bge.n	802966c <__kernel_rem_pio2f+0x2ac>
 8029662:	4606      	mov	r6, r0
 8029664:	e711      	b.n	802948a <__kernel_rem_pio2f+0xca>
 8029666:	9c05      	ldr	r4, [sp, #20]
 8029668:	2001      	movs	r0, #1
 802966a:	e7e6      	b.n	802963a <__kernel_rem_pio2f+0x27a>
 802966c:	9b04      	ldr	r3, [sp, #16]
 802966e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029672:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029676:	9306      	str	r3, [sp, #24]
 8029678:	ee07 3a90 	vmov	s15, r3
 802967c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029680:	2600      	movs	r6, #0
 8029682:	ece7 7a01 	vstmia	r7!, {s15}
 8029686:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80296c0 <__kernel_rem_pio2f+0x300>
 802968a:	46b9      	mov	r9, r7
 802968c:	455e      	cmp	r6, fp
 802968e:	dd04      	ble.n	802969a <__kernel_rem_pio2f+0x2da>
 8029690:	ece4 7a01 	vstmia	r4!, {s15}
 8029694:	f10c 0c01 	add.w	ip, ip, #1
 8029698:	e7e1      	b.n	802965e <__kernel_rem_pio2f+0x29e>
 802969a:	ecfe 6a01 	vldmia	lr!, {s13}
 802969e:	ed39 7a01 	vldmdb	r9!, {s14}
 80296a2:	3601      	adds	r6, #1
 80296a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80296a8:	e7f0      	b.n	802968c <__kernel_rem_pio2f+0x2cc>
 80296aa:	3c01      	subs	r4, #1
 80296ac:	e777      	b.n	802959e <__kernel_rem_pio2f+0x1de>
 80296ae:	bf00      	nop
 80296b0:	08041ea4 	.word	0x08041ea4
 80296b4:	08041e78 	.word	0x08041e78
 80296b8:	43800000 	.word	0x43800000
 80296bc:	3b800000 	.word	0x3b800000
 80296c0:	00000000 	.word	0x00000000
 80296c4:	9b03      	ldr	r3, [sp, #12]
 80296c6:	eeb0 0a48 	vmov.f32	s0, s16
 80296ca:	1a98      	subs	r0, r3, r2
 80296cc:	f7ff fe12 	bl	80292f4 <scalbnf>
 80296d0:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 80296b8 <__kernel_rem_pio2f+0x2f8>
 80296d4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80296d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296dc:	db19      	blt.n	8029712 <__kernel_rem_pio2f+0x352>
 80296de:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 80296bc <__kernel_rem_pio2f+0x2fc>
 80296e2:	ee60 7a27 	vmul.f32	s15, s0, s15
 80296e6:	aa08      	add	r2, sp, #32
 80296e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80296ec:	1c74      	adds	r4, r6, #1
 80296ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80296f2:	3508      	adds	r5, #8
 80296f4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80296f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80296fc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029700:	ee10 3a10 	vmov	r3, s0
 8029704:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029708:	ee17 3a90 	vmov	r3, s15
 802970c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029710:	e74b      	b.n	80295aa <__kernel_rem_pio2f+0x1ea>
 8029712:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029716:	aa08      	add	r2, sp, #32
 8029718:	ee10 3a10 	vmov	r3, s0
 802971c:	4634      	mov	r4, r6
 802971e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029722:	e742      	b.n	80295aa <__kernel_rem_pio2f+0x1ea>
 8029724:	a808      	add	r0, sp, #32
 8029726:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802972a:	9001      	str	r0, [sp, #4]
 802972c:	ee07 0a90 	vmov	s15, r0
 8029730:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029734:	3b01      	subs	r3, #1
 8029736:	ee67 7a80 	vmul.f32	s15, s15, s0
 802973a:	ee20 0a07 	vmul.f32	s0, s0, s14
 802973e:	ed62 7a01 	vstmdb	r2!, {s15}
 8029742:	e73f      	b.n	80295c4 <__kernel_rem_pio2f+0x204>
 8029744:	ecf6 6a01 	vldmia	r6!, {s13}
 8029748:	ecb5 7a01 	vldmia	r5!, {s14}
 802974c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029750:	3001      	adds	r0, #1
 8029752:	4550      	cmp	r0, sl
 8029754:	dc01      	bgt.n	802975a <__kernel_rem_pio2f+0x39a>
 8029756:	4290      	cmp	r0, r2
 8029758:	ddf4      	ble.n	8029744 <__kernel_rem_pio2f+0x384>
 802975a:	a858      	add	r0, sp, #352	; 0x160
 802975c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029760:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029764:	3b01      	subs	r3, #1
 8029766:	e731      	b.n	80295cc <__kernel_rem_pio2f+0x20c>
 8029768:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802976a:	2b02      	cmp	r3, #2
 802976c:	dc09      	bgt.n	8029782 <__kernel_rem_pio2f+0x3c2>
 802976e:	2b00      	cmp	r3, #0
 8029770:	dc2b      	bgt.n	80297ca <__kernel_rem_pio2f+0x40a>
 8029772:	d044      	beq.n	80297fe <__kernel_rem_pio2f+0x43e>
 8029774:	f009 0007 	and.w	r0, r9, #7
 8029778:	b059      	add	sp, #356	; 0x164
 802977a:	ecbd 8b04 	vpop	{d8-d9}
 802977e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029782:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029784:	2b03      	cmp	r3, #3
 8029786:	d1f5      	bne.n	8029774 <__kernel_rem_pio2f+0x3b4>
 8029788:	aa30      	add	r2, sp, #192	; 0xc0
 802978a:	1f0b      	subs	r3, r1, #4
 802978c:	4413      	add	r3, r2
 802978e:	461a      	mov	r2, r3
 8029790:	4620      	mov	r0, r4
 8029792:	2800      	cmp	r0, #0
 8029794:	f1a2 0204 	sub.w	r2, r2, #4
 8029798:	dc52      	bgt.n	8029840 <__kernel_rem_pio2f+0x480>
 802979a:	4622      	mov	r2, r4
 802979c:	2a01      	cmp	r2, #1
 802979e:	f1a3 0304 	sub.w	r3, r3, #4
 80297a2:	dc5d      	bgt.n	8029860 <__kernel_rem_pio2f+0x4a0>
 80297a4:	ab30      	add	r3, sp, #192	; 0xc0
 80297a6:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 80296c0 <__kernel_rem_pio2f+0x300>
 80297aa:	440b      	add	r3, r1
 80297ac:	2c01      	cmp	r4, #1
 80297ae:	dc67      	bgt.n	8029880 <__kernel_rem_pio2f+0x4c0>
 80297b0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80297b4:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 80297b8:	2f00      	cmp	r7, #0
 80297ba:	d167      	bne.n	802988c <__kernel_rem_pio2f+0x4cc>
 80297bc:	edc8 6a00 	vstr	s13, [r8]
 80297c0:	ed88 7a01 	vstr	s14, [r8, #4]
 80297c4:	edc8 7a02 	vstr	s15, [r8, #8]
 80297c8:	e7d4      	b.n	8029774 <__kernel_rem_pio2f+0x3b4>
 80297ca:	ab30      	add	r3, sp, #192	; 0xc0
 80297cc:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 80296c0 <__kernel_rem_pio2f+0x300>
 80297d0:	440b      	add	r3, r1
 80297d2:	4622      	mov	r2, r4
 80297d4:	2a00      	cmp	r2, #0
 80297d6:	da24      	bge.n	8029822 <__kernel_rem_pio2f+0x462>
 80297d8:	b34f      	cbz	r7, 802982e <__kernel_rem_pio2f+0x46e>
 80297da:	eef1 7a47 	vneg.f32	s15, s14
 80297de:	edc8 7a00 	vstr	s15, [r8]
 80297e2:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 80297e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80297ea:	aa31      	add	r2, sp, #196	; 0xc4
 80297ec:	2301      	movs	r3, #1
 80297ee:	429c      	cmp	r4, r3
 80297f0:	da20      	bge.n	8029834 <__kernel_rem_pio2f+0x474>
 80297f2:	b10f      	cbz	r7, 80297f8 <__kernel_rem_pio2f+0x438>
 80297f4:	eef1 7a67 	vneg.f32	s15, s15
 80297f8:	edc8 7a01 	vstr	s15, [r8, #4]
 80297fc:	e7ba      	b.n	8029774 <__kernel_rem_pio2f+0x3b4>
 80297fe:	ab30      	add	r3, sp, #192	; 0xc0
 8029800:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 80296c0 <__kernel_rem_pio2f+0x300>
 8029804:	440b      	add	r3, r1
 8029806:	2c00      	cmp	r4, #0
 8029808:	da05      	bge.n	8029816 <__kernel_rem_pio2f+0x456>
 802980a:	b10f      	cbz	r7, 8029810 <__kernel_rem_pio2f+0x450>
 802980c:	eef1 7a67 	vneg.f32	s15, s15
 8029810:	edc8 7a00 	vstr	s15, [r8]
 8029814:	e7ae      	b.n	8029774 <__kernel_rem_pio2f+0x3b4>
 8029816:	ed33 7a01 	vldmdb	r3!, {s14}
 802981a:	3c01      	subs	r4, #1
 802981c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029820:	e7f1      	b.n	8029806 <__kernel_rem_pio2f+0x446>
 8029822:	ed73 7a01 	vldmdb	r3!, {s15}
 8029826:	3a01      	subs	r2, #1
 8029828:	ee37 7a27 	vadd.f32	s14, s14, s15
 802982c:	e7d2      	b.n	80297d4 <__kernel_rem_pio2f+0x414>
 802982e:	eef0 7a47 	vmov.f32	s15, s14
 8029832:	e7d4      	b.n	80297de <__kernel_rem_pio2f+0x41e>
 8029834:	ecb2 7a01 	vldmia	r2!, {s14}
 8029838:	3301      	adds	r3, #1
 802983a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802983e:	e7d6      	b.n	80297ee <__kernel_rem_pio2f+0x42e>
 8029840:	edd2 7a00 	vldr	s15, [r2]
 8029844:	edd2 6a01 	vldr	s13, [r2, #4]
 8029848:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802984c:	3801      	subs	r0, #1
 802984e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029852:	ed82 7a00 	vstr	s14, [r2]
 8029856:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802985a:	edc2 7a01 	vstr	s15, [r2, #4]
 802985e:	e798      	b.n	8029792 <__kernel_rem_pio2f+0x3d2>
 8029860:	edd3 7a00 	vldr	s15, [r3]
 8029864:	edd3 6a01 	vldr	s13, [r3, #4]
 8029868:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802986c:	3a01      	subs	r2, #1
 802986e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029872:	ed83 7a00 	vstr	s14, [r3]
 8029876:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802987a:	edc3 7a01 	vstr	s15, [r3, #4]
 802987e:	e78d      	b.n	802979c <__kernel_rem_pio2f+0x3dc>
 8029880:	ed33 7a01 	vldmdb	r3!, {s14}
 8029884:	3c01      	subs	r4, #1
 8029886:	ee77 7a87 	vadd.f32	s15, s15, s14
 802988a:	e78f      	b.n	80297ac <__kernel_rem_pio2f+0x3ec>
 802988c:	eef1 6a66 	vneg.f32	s13, s13
 8029890:	eeb1 7a47 	vneg.f32	s14, s14
 8029894:	edc8 6a00 	vstr	s13, [r8]
 8029898:	ed88 7a01 	vstr	s14, [r8, #4]
 802989c:	eef1 7a67 	vneg.f32	s15, s15
 80298a0:	e790      	b.n	80297c4 <__kernel_rem_pio2f+0x404>
 80298a2:	bf00      	nop

080298a4 <abort>:
 80298a4:	b508      	push	{r3, lr}
 80298a6:	2006      	movs	r0, #6
 80298a8:	f000 fa3a 	bl	8029d20 <raise>
 80298ac:	2001      	movs	r0, #1
 80298ae:	f7d8 fd51 	bl	8002354 <_exit>
	...

080298b4 <__assert_func>:
 80298b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80298b6:	4614      	mov	r4, r2
 80298b8:	461a      	mov	r2, r3
 80298ba:	4b09      	ldr	r3, [pc, #36]	; (80298e0 <__assert_func+0x2c>)
 80298bc:	681b      	ldr	r3, [r3, #0]
 80298be:	4605      	mov	r5, r0
 80298c0:	68d8      	ldr	r0, [r3, #12]
 80298c2:	b14c      	cbz	r4, 80298d8 <__assert_func+0x24>
 80298c4:	4b07      	ldr	r3, [pc, #28]	; (80298e4 <__assert_func+0x30>)
 80298c6:	9100      	str	r1, [sp, #0]
 80298c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80298cc:	4906      	ldr	r1, [pc, #24]	; (80298e8 <__assert_func+0x34>)
 80298ce:	462b      	mov	r3, r5
 80298d0:	f000 f982 	bl	8029bd8 <fiprintf>
 80298d4:	f7ff ffe6 	bl	80298a4 <abort>
 80298d8:	4b04      	ldr	r3, [pc, #16]	; (80298ec <__assert_func+0x38>)
 80298da:	461c      	mov	r4, r3
 80298dc:	e7f3      	b.n	80298c6 <__assert_func+0x12>
 80298de:	bf00      	nop
 80298e0:	20000160 	.word	0x20000160
 80298e4:	08041eb0 	.word	0x08041eb0
 80298e8:	08041ebd 	.word	0x08041ebd
 80298ec:	08041eeb 	.word	0x08041eeb

080298f0 <atexit>:
 80298f0:	2300      	movs	r3, #0
 80298f2:	4601      	mov	r1, r0
 80298f4:	461a      	mov	r2, r3
 80298f6:	4618      	mov	r0, r3
 80298f8:	f000 bb16 	b.w	8029f28 <__register_exitproc>

080298fc <malloc>:
 80298fc:	4b02      	ldr	r3, [pc, #8]	; (8029908 <malloc+0xc>)
 80298fe:	4601      	mov	r1, r0
 8029900:	6818      	ldr	r0, [r3, #0]
 8029902:	f000 b82b 	b.w	802995c <_malloc_r>
 8029906:	bf00      	nop
 8029908:	20000160 	.word	0x20000160

0802990c <free>:
 802990c:	4b02      	ldr	r3, [pc, #8]	; (8029918 <free+0xc>)
 802990e:	4601      	mov	r1, r0
 8029910:	6818      	ldr	r0, [r3, #0]
 8029912:	f000 bb67 	b.w	8029fe4 <_free_r>
 8029916:	bf00      	nop
 8029918:	20000160 	.word	0x20000160

0802991c <sbrk_aligned>:
 802991c:	b570      	push	{r4, r5, r6, lr}
 802991e:	4e0e      	ldr	r6, [pc, #56]	; (8029958 <sbrk_aligned+0x3c>)
 8029920:	460c      	mov	r4, r1
 8029922:	6831      	ldr	r1, [r6, #0]
 8029924:	4605      	mov	r5, r0
 8029926:	b911      	cbnz	r1, 802992e <sbrk_aligned+0x12>
 8029928:	f000 faa0 	bl	8029e6c <_sbrk_r>
 802992c:	6030      	str	r0, [r6, #0]
 802992e:	4621      	mov	r1, r4
 8029930:	4628      	mov	r0, r5
 8029932:	f000 fa9b 	bl	8029e6c <_sbrk_r>
 8029936:	1c43      	adds	r3, r0, #1
 8029938:	d00a      	beq.n	8029950 <sbrk_aligned+0x34>
 802993a:	1cc4      	adds	r4, r0, #3
 802993c:	f024 0403 	bic.w	r4, r4, #3
 8029940:	42a0      	cmp	r0, r4
 8029942:	d007      	beq.n	8029954 <sbrk_aligned+0x38>
 8029944:	1a21      	subs	r1, r4, r0
 8029946:	4628      	mov	r0, r5
 8029948:	f000 fa90 	bl	8029e6c <_sbrk_r>
 802994c:	3001      	adds	r0, #1
 802994e:	d101      	bne.n	8029954 <sbrk_aligned+0x38>
 8029950:	f04f 34ff 	mov.w	r4, #4294967295
 8029954:	4620      	mov	r0, r4
 8029956:	bd70      	pop	{r4, r5, r6, pc}
 8029958:	200136fc 	.word	0x200136fc

0802995c <_malloc_r>:
 802995c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029960:	1ccd      	adds	r5, r1, #3
 8029962:	f025 0503 	bic.w	r5, r5, #3
 8029966:	3508      	adds	r5, #8
 8029968:	2d0c      	cmp	r5, #12
 802996a:	bf38      	it	cc
 802996c:	250c      	movcc	r5, #12
 802996e:	2d00      	cmp	r5, #0
 8029970:	4607      	mov	r7, r0
 8029972:	db01      	blt.n	8029978 <_malloc_r+0x1c>
 8029974:	42a9      	cmp	r1, r5
 8029976:	d905      	bls.n	8029984 <_malloc_r+0x28>
 8029978:	230c      	movs	r3, #12
 802997a:	603b      	str	r3, [r7, #0]
 802997c:	2600      	movs	r6, #0
 802997e:	4630      	mov	r0, r6
 8029980:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029984:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8029a58 <_malloc_r+0xfc>
 8029988:	f000 f868 	bl	8029a5c <__malloc_lock>
 802998c:	f8d8 3000 	ldr.w	r3, [r8]
 8029990:	461c      	mov	r4, r3
 8029992:	bb5c      	cbnz	r4, 80299ec <_malloc_r+0x90>
 8029994:	4629      	mov	r1, r5
 8029996:	4638      	mov	r0, r7
 8029998:	f7ff ffc0 	bl	802991c <sbrk_aligned>
 802999c:	1c43      	adds	r3, r0, #1
 802999e:	4604      	mov	r4, r0
 80299a0:	d155      	bne.n	8029a4e <_malloc_r+0xf2>
 80299a2:	f8d8 4000 	ldr.w	r4, [r8]
 80299a6:	4626      	mov	r6, r4
 80299a8:	2e00      	cmp	r6, #0
 80299aa:	d145      	bne.n	8029a38 <_malloc_r+0xdc>
 80299ac:	2c00      	cmp	r4, #0
 80299ae:	d048      	beq.n	8029a42 <_malloc_r+0xe6>
 80299b0:	6823      	ldr	r3, [r4, #0]
 80299b2:	4631      	mov	r1, r6
 80299b4:	4638      	mov	r0, r7
 80299b6:	eb04 0903 	add.w	r9, r4, r3
 80299ba:	f000 fa57 	bl	8029e6c <_sbrk_r>
 80299be:	4581      	cmp	r9, r0
 80299c0:	d13f      	bne.n	8029a42 <_malloc_r+0xe6>
 80299c2:	6821      	ldr	r1, [r4, #0]
 80299c4:	1a6d      	subs	r5, r5, r1
 80299c6:	4629      	mov	r1, r5
 80299c8:	4638      	mov	r0, r7
 80299ca:	f7ff ffa7 	bl	802991c <sbrk_aligned>
 80299ce:	3001      	adds	r0, #1
 80299d0:	d037      	beq.n	8029a42 <_malloc_r+0xe6>
 80299d2:	6823      	ldr	r3, [r4, #0]
 80299d4:	442b      	add	r3, r5
 80299d6:	6023      	str	r3, [r4, #0]
 80299d8:	f8d8 3000 	ldr.w	r3, [r8]
 80299dc:	2b00      	cmp	r3, #0
 80299de:	d038      	beq.n	8029a52 <_malloc_r+0xf6>
 80299e0:	685a      	ldr	r2, [r3, #4]
 80299e2:	42a2      	cmp	r2, r4
 80299e4:	d12b      	bne.n	8029a3e <_malloc_r+0xe2>
 80299e6:	2200      	movs	r2, #0
 80299e8:	605a      	str	r2, [r3, #4]
 80299ea:	e00f      	b.n	8029a0c <_malloc_r+0xb0>
 80299ec:	6822      	ldr	r2, [r4, #0]
 80299ee:	1b52      	subs	r2, r2, r5
 80299f0:	d41f      	bmi.n	8029a32 <_malloc_r+0xd6>
 80299f2:	2a0b      	cmp	r2, #11
 80299f4:	d917      	bls.n	8029a26 <_malloc_r+0xca>
 80299f6:	1961      	adds	r1, r4, r5
 80299f8:	42a3      	cmp	r3, r4
 80299fa:	6025      	str	r5, [r4, #0]
 80299fc:	bf18      	it	ne
 80299fe:	6059      	strne	r1, [r3, #4]
 8029a00:	6863      	ldr	r3, [r4, #4]
 8029a02:	bf08      	it	eq
 8029a04:	f8c8 1000 	streq.w	r1, [r8]
 8029a08:	5162      	str	r2, [r4, r5]
 8029a0a:	604b      	str	r3, [r1, #4]
 8029a0c:	4638      	mov	r0, r7
 8029a0e:	f104 060b 	add.w	r6, r4, #11
 8029a12:	f000 f829 	bl	8029a68 <__malloc_unlock>
 8029a16:	f026 0607 	bic.w	r6, r6, #7
 8029a1a:	1d23      	adds	r3, r4, #4
 8029a1c:	1af2      	subs	r2, r6, r3
 8029a1e:	d0ae      	beq.n	802997e <_malloc_r+0x22>
 8029a20:	1b9b      	subs	r3, r3, r6
 8029a22:	50a3      	str	r3, [r4, r2]
 8029a24:	e7ab      	b.n	802997e <_malloc_r+0x22>
 8029a26:	42a3      	cmp	r3, r4
 8029a28:	6862      	ldr	r2, [r4, #4]
 8029a2a:	d1dd      	bne.n	80299e8 <_malloc_r+0x8c>
 8029a2c:	f8c8 2000 	str.w	r2, [r8]
 8029a30:	e7ec      	b.n	8029a0c <_malloc_r+0xb0>
 8029a32:	4623      	mov	r3, r4
 8029a34:	6864      	ldr	r4, [r4, #4]
 8029a36:	e7ac      	b.n	8029992 <_malloc_r+0x36>
 8029a38:	4634      	mov	r4, r6
 8029a3a:	6876      	ldr	r6, [r6, #4]
 8029a3c:	e7b4      	b.n	80299a8 <_malloc_r+0x4c>
 8029a3e:	4613      	mov	r3, r2
 8029a40:	e7cc      	b.n	80299dc <_malloc_r+0x80>
 8029a42:	230c      	movs	r3, #12
 8029a44:	603b      	str	r3, [r7, #0]
 8029a46:	4638      	mov	r0, r7
 8029a48:	f000 f80e 	bl	8029a68 <__malloc_unlock>
 8029a4c:	e797      	b.n	802997e <_malloc_r+0x22>
 8029a4e:	6025      	str	r5, [r4, #0]
 8029a50:	e7dc      	b.n	8029a0c <_malloc_r+0xb0>
 8029a52:	605b      	str	r3, [r3, #4]
 8029a54:	deff      	udf	#255	; 0xff
 8029a56:	bf00      	nop
 8029a58:	200136f8 	.word	0x200136f8

08029a5c <__malloc_lock>:
 8029a5c:	4801      	ldr	r0, [pc, #4]	; (8029a64 <__malloc_lock+0x8>)
 8029a5e:	f000 ba52 	b.w	8029f06 <__retarget_lock_acquire_recursive>
 8029a62:	bf00      	nop
 8029a64:	20013841 	.word	0x20013841

08029a68 <__malloc_unlock>:
 8029a68:	4801      	ldr	r0, [pc, #4]	; (8029a70 <__malloc_unlock+0x8>)
 8029a6a:	f000 ba4d 	b.w	8029f08 <__retarget_lock_release_recursive>
 8029a6e:	bf00      	nop
 8029a70:	20013841 	.word	0x20013841

08029a74 <__cxa_atexit>:
 8029a74:	b510      	push	{r4, lr}
 8029a76:	4c05      	ldr	r4, [pc, #20]	; (8029a8c <__cxa_atexit+0x18>)
 8029a78:	4613      	mov	r3, r2
 8029a7a:	b12c      	cbz	r4, 8029a88 <__cxa_atexit+0x14>
 8029a7c:	460a      	mov	r2, r1
 8029a7e:	4601      	mov	r1, r0
 8029a80:	2002      	movs	r0, #2
 8029a82:	f000 fa51 	bl	8029f28 <__register_exitproc>
 8029a86:	bd10      	pop	{r4, pc}
 8029a88:	4620      	mov	r0, r4
 8029a8a:	e7fc      	b.n	8029a86 <__cxa_atexit+0x12>
 8029a8c:	08029f29 	.word	0x08029f29

08029a90 <std>:
 8029a90:	2300      	movs	r3, #0
 8029a92:	b510      	push	{r4, lr}
 8029a94:	4604      	mov	r4, r0
 8029a96:	e9c0 3300 	strd	r3, r3, [r0]
 8029a9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8029a9e:	6083      	str	r3, [r0, #8]
 8029aa0:	8181      	strh	r1, [r0, #12]
 8029aa2:	6643      	str	r3, [r0, #100]	; 0x64
 8029aa4:	81c2      	strh	r2, [r0, #14]
 8029aa6:	6183      	str	r3, [r0, #24]
 8029aa8:	4619      	mov	r1, r3
 8029aaa:	2208      	movs	r2, #8
 8029aac:	305c      	adds	r0, #92	; 0x5c
 8029aae:	f000 f906 	bl	8029cbe <memset>
 8029ab2:	4b0d      	ldr	r3, [pc, #52]	; (8029ae8 <std+0x58>)
 8029ab4:	6263      	str	r3, [r4, #36]	; 0x24
 8029ab6:	4b0d      	ldr	r3, [pc, #52]	; (8029aec <std+0x5c>)
 8029ab8:	62a3      	str	r3, [r4, #40]	; 0x28
 8029aba:	4b0d      	ldr	r3, [pc, #52]	; (8029af0 <std+0x60>)
 8029abc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8029abe:	4b0d      	ldr	r3, [pc, #52]	; (8029af4 <std+0x64>)
 8029ac0:	6323      	str	r3, [r4, #48]	; 0x30
 8029ac2:	4b0d      	ldr	r3, [pc, #52]	; (8029af8 <std+0x68>)
 8029ac4:	6224      	str	r4, [r4, #32]
 8029ac6:	429c      	cmp	r4, r3
 8029ac8:	d006      	beq.n	8029ad8 <std+0x48>
 8029aca:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8029ace:	4294      	cmp	r4, r2
 8029ad0:	d002      	beq.n	8029ad8 <std+0x48>
 8029ad2:	33d0      	adds	r3, #208	; 0xd0
 8029ad4:	429c      	cmp	r4, r3
 8029ad6:	d105      	bne.n	8029ae4 <std+0x54>
 8029ad8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8029adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029ae0:	f000 ba10 	b.w	8029f04 <__retarget_lock_init_recursive>
 8029ae4:	bd10      	pop	{r4, pc}
 8029ae6:	bf00      	nop
 8029ae8:	08029c39 	.word	0x08029c39
 8029aec:	08029c5b 	.word	0x08029c5b
 8029af0:	08029c93 	.word	0x08029c93
 8029af4:	08029cb7 	.word	0x08029cb7
 8029af8:	20013700 	.word	0x20013700

08029afc <stdio_exit_handler>:
 8029afc:	4a02      	ldr	r2, [pc, #8]	; (8029b08 <stdio_exit_handler+0xc>)
 8029afe:	4903      	ldr	r1, [pc, #12]	; (8029b0c <stdio_exit_handler+0x10>)
 8029b00:	4803      	ldr	r0, [pc, #12]	; (8029b10 <stdio_exit_handler+0x14>)
 8029b02:	f000 b87b 	b.w	8029bfc <_fwalk_sglue>
 8029b06:	bf00      	nop
 8029b08:	20000108 	.word	0x20000108
 8029b0c:	0802a731 	.word	0x0802a731
 8029b10:	20000114 	.word	0x20000114

08029b14 <cleanup_stdio>:
 8029b14:	6841      	ldr	r1, [r0, #4]
 8029b16:	4b0c      	ldr	r3, [pc, #48]	; (8029b48 <cleanup_stdio+0x34>)
 8029b18:	4299      	cmp	r1, r3
 8029b1a:	b510      	push	{r4, lr}
 8029b1c:	4604      	mov	r4, r0
 8029b1e:	d001      	beq.n	8029b24 <cleanup_stdio+0x10>
 8029b20:	f000 fe06 	bl	802a730 <_fflush_r>
 8029b24:	68a1      	ldr	r1, [r4, #8]
 8029b26:	4b09      	ldr	r3, [pc, #36]	; (8029b4c <cleanup_stdio+0x38>)
 8029b28:	4299      	cmp	r1, r3
 8029b2a:	d002      	beq.n	8029b32 <cleanup_stdio+0x1e>
 8029b2c:	4620      	mov	r0, r4
 8029b2e:	f000 fdff 	bl	802a730 <_fflush_r>
 8029b32:	68e1      	ldr	r1, [r4, #12]
 8029b34:	4b06      	ldr	r3, [pc, #24]	; (8029b50 <cleanup_stdio+0x3c>)
 8029b36:	4299      	cmp	r1, r3
 8029b38:	d004      	beq.n	8029b44 <cleanup_stdio+0x30>
 8029b3a:	4620      	mov	r0, r4
 8029b3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029b40:	f000 bdf6 	b.w	802a730 <_fflush_r>
 8029b44:	bd10      	pop	{r4, pc}
 8029b46:	bf00      	nop
 8029b48:	20013700 	.word	0x20013700
 8029b4c:	20013768 	.word	0x20013768
 8029b50:	200137d0 	.word	0x200137d0

08029b54 <global_stdio_init.part.0>:
 8029b54:	b510      	push	{r4, lr}
 8029b56:	4b0b      	ldr	r3, [pc, #44]	; (8029b84 <global_stdio_init.part.0+0x30>)
 8029b58:	4c0b      	ldr	r4, [pc, #44]	; (8029b88 <global_stdio_init.part.0+0x34>)
 8029b5a:	4a0c      	ldr	r2, [pc, #48]	; (8029b8c <global_stdio_init.part.0+0x38>)
 8029b5c:	601a      	str	r2, [r3, #0]
 8029b5e:	4620      	mov	r0, r4
 8029b60:	2200      	movs	r2, #0
 8029b62:	2104      	movs	r1, #4
 8029b64:	f7ff ff94 	bl	8029a90 <std>
 8029b68:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8029b6c:	2201      	movs	r2, #1
 8029b6e:	2109      	movs	r1, #9
 8029b70:	f7ff ff8e 	bl	8029a90 <std>
 8029b74:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8029b78:	2202      	movs	r2, #2
 8029b7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029b7e:	2112      	movs	r1, #18
 8029b80:	f7ff bf86 	b.w	8029a90 <std>
 8029b84:	20013838 	.word	0x20013838
 8029b88:	20013700 	.word	0x20013700
 8029b8c:	08029afd 	.word	0x08029afd

08029b90 <__sfp_lock_acquire>:
 8029b90:	4801      	ldr	r0, [pc, #4]	; (8029b98 <__sfp_lock_acquire+0x8>)
 8029b92:	f000 b9b8 	b.w	8029f06 <__retarget_lock_acquire_recursive>
 8029b96:	bf00      	nop
 8029b98:	20013842 	.word	0x20013842

08029b9c <__sfp_lock_release>:
 8029b9c:	4801      	ldr	r0, [pc, #4]	; (8029ba4 <__sfp_lock_release+0x8>)
 8029b9e:	f000 b9b3 	b.w	8029f08 <__retarget_lock_release_recursive>
 8029ba2:	bf00      	nop
 8029ba4:	20013842 	.word	0x20013842

08029ba8 <__sinit>:
 8029ba8:	b510      	push	{r4, lr}
 8029baa:	4604      	mov	r4, r0
 8029bac:	f7ff fff0 	bl	8029b90 <__sfp_lock_acquire>
 8029bb0:	6a23      	ldr	r3, [r4, #32]
 8029bb2:	b11b      	cbz	r3, 8029bbc <__sinit+0x14>
 8029bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029bb8:	f7ff bff0 	b.w	8029b9c <__sfp_lock_release>
 8029bbc:	4b04      	ldr	r3, [pc, #16]	; (8029bd0 <__sinit+0x28>)
 8029bbe:	6223      	str	r3, [r4, #32]
 8029bc0:	4b04      	ldr	r3, [pc, #16]	; (8029bd4 <__sinit+0x2c>)
 8029bc2:	681b      	ldr	r3, [r3, #0]
 8029bc4:	2b00      	cmp	r3, #0
 8029bc6:	d1f5      	bne.n	8029bb4 <__sinit+0xc>
 8029bc8:	f7ff ffc4 	bl	8029b54 <global_stdio_init.part.0>
 8029bcc:	e7f2      	b.n	8029bb4 <__sinit+0xc>
 8029bce:	bf00      	nop
 8029bd0:	08029b15 	.word	0x08029b15
 8029bd4:	20013838 	.word	0x20013838

08029bd8 <fiprintf>:
 8029bd8:	b40e      	push	{r1, r2, r3}
 8029bda:	b503      	push	{r0, r1, lr}
 8029bdc:	4601      	mov	r1, r0
 8029bde:	ab03      	add	r3, sp, #12
 8029be0:	4805      	ldr	r0, [pc, #20]	; (8029bf8 <fiprintf+0x20>)
 8029be2:	f853 2b04 	ldr.w	r2, [r3], #4
 8029be6:	6800      	ldr	r0, [r0, #0]
 8029be8:	9301      	str	r3, [sp, #4]
 8029bea:	f000 fa71 	bl	802a0d0 <_vfiprintf_r>
 8029bee:	b002      	add	sp, #8
 8029bf0:	f85d eb04 	ldr.w	lr, [sp], #4
 8029bf4:	b003      	add	sp, #12
 8029bf6:	4770      	bx	lr
 8029bf8:	20000160 	.word	0x20000160

08029bfc <_fwalk_sglue>:
 8029bfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029c00:	4607      	mov	r7, r0
 8029c02:	4688      	mov	r8, r1
 8029c04:	4614      	mov	r4, r2
 8029c06:	2600      	movs	r6, #0
 8029c08:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8029c0c:	f1b9 0901 	subs.w	r9, r9, #1
 8029c10:	d505      	bpl.n	8029c1e <_fwalk_sglue+0x22>
 8029c12:	6824      	ldr	r4, [r4, #0]
 8029c14:	2c00      	cmp	r4, #0
 8029c16:	d1f7      	bne.n	8029c08 <_fwalk_sglue+0xc>
 8029c18:	4630      	mov	r0, r6
 8029c1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029c1e:	89ab      	ldrh	r3, [r5, #12]
 8029c20:	2b01      	cmp	r3, #1
 8029c22:	d907      	bls.n	8029c34 <_fwalk_sglue+0x38>
 8029c24:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8029c28:	3301      	adds	r3, #1
 8029c2a:	d003      	beq.n	8029c34 <_fwalk_sglue+0x38>
 8029c2c:	4629      	mov	r1, r5
 8029c2e:	4638      	mov	r0, r7
 8029c30:	47c0      	blx	r8
 8029c32:	4306      	orrs	r6, r0
 8029c34:	3568      	adds	r5, #104	; 0x68
 8029c36:	e7e9      	b.n	8029c0c <_fwalk_sglue+0x10>

08029c38 <__sread>:
 8029c38:	b510      	push	{r4, lr}
 8029c3a:	460c      	mov	r4, r1
 8029c3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029c40:	f000 f8ee 	bl	8029e20 <_read_r>
 8029c44:	2800      	cmp	r0, #0
 8029c46:	bfab      	itete	ge
 8029c48:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8029c4a:	89a3      	ldrhlt	r3, [r4, #12]
 8029c4c:	181b      	addge	r3, r3, r0
 8029c4e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8029c52:	bfac      	ite	ge
 8029c54:	6563      	strge	r3, [r4, #84]	; 0x54
 8029c56:	81a3      	strhlt	r3, [r4, #12]
 8029c58:	bd10      	pop	{r4, pc}

08029c5a <__swrite>:
 8029c5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029c5e:	461f      	mov	r7, r3
 8029c60:	898b      	ldrh	r3, [r1, #12]
 8029c62:	05db      	lsls	r3, r3, #23
 8029c64:	4605      	mov	r5, r0
 8029c66:	460c      	mov	r4, r1
 8029c68:	4616      	mov	r6, r2
 8029c6a:	d505      	bpl.n	8029c78 <__swrite+0x1e>
 8029c6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029c70:	2302      	movs	r3, #2
 8029c72:	2200      	movs	r2, #0
 8029c74:	f000 f8c2 	bl	8029dfc <_lseek_r>
 8029c78:	89a3      	ldrh	r3, [r4, #12]
 8029c7a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029c7e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8029c82:	81a3      	strh	r3, [r4, #12]
 8029c84:	4632      	mov	r2, r6
 8029c86:	463b      	mov	r3, r7
 8029c88:	4628      	mov	r0, r5
 8029c8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029c8e:	f000 b8fd 	b.w	8029e8c <_write_r>

08029c92 <__sseek>:
 8029c92:	b510      	push	{r4, lr}
 8029c94:	460c      	mov	r4, r1
 8029c96:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029c9a:	f000 f8af 	bl	8029dfc <_lseek_r>
 8029c9e:	1c43      	adds	r3, r0, #1
 8029ca0:	89a3      	ldrh	r3, [r4, #12]
 8029ca2:	bf15      	itete	ne
 8029ca4:	6560      	strne	r0, [r4, #84]	; 0x54
 8029ca6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8029caa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8029cae:	81a3      	strheq	r3, [r4, #12]
 8029cb0:	bf18      	it	ne
 8029cb2:	81a3      	strhne	r3, [r4, #12]
 8029cb4:	bd10      	pop	{r4, pc}

08029cb6 <__sclose>:
 8029cb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029cba:	f000 b839 	b.w	8029d30 <_close_r>

08029cbe <memset>:
 8029cbe:	4402      	add	r2, r0
 8029cc0:	4603      	mov	r3, r0
 8029cc2:	4293      	cmp	r3, r2
 8029cc4:	d100      	bne.n	8029cc8 <memset+0xa>
 8029cc6:	4770      	bx	lr
 8029cc8:	f803 1b01 	strb.w	r1, [r3], #1
 8029ccc:	e7f9      	b.n	8029cc2 <memset+0x4>

08029cce <_raise_r>:
 8029cce:	291f      	cmp	r1, #31
 8029cd0:	b538      	push	{r3, r4, r5, lr}
 8029cd2:	4604      	mov	r4, r0
 8029cd4:	460d      	mov	r5, r1
 8029cd6:	d904      	bls.n	8029ce2 <_raise_r+0x14>
 8029cd8:	2316      	movs	r3, #22
 8029cda:	6003      	str	r3, [r0, #0]
 8029cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8029ce0:	bd38      	pop	{r3, r4, r5, pc}
 8029ce2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8029ce4:	b112      	cbz	r2, 8029cec <_raise_r+0x1e>
 8029ce6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8029cea:	b94b      	cbnz	r3, 8029d00 <_raise_r+0x32>
 8029cec:	4620      	mov	r0, r4
 8029cee:	f000 f8bb 	bl	8029e68 <_getpid_r>
 8029cf2:	462a      	mov	r2, r5
 8029cf4:	4601      	mov	r1, r0
 8029cf6:	4620      	mov	r0, r4
 8029cf8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8029cfc:	f000 b8a2 	b.w	8029e44 <_kill_r>
 8029d00:	2b01      	cmp	r3, #1
 8029d02:	d00a      	beq.n	8029d1a <_raise_r+0x4c>
 8029d04:	1c59      	adds	r1, r3, #1
 8029d06:	d103      	bne.n	8029d10 <_raise_r+0x42>
 8029d08:	2316      	movs	r3, #22
 8029d0a:	6003      	str	r3, [r0, #0]
 8029d0c:	2001      	movs	r0, #1
 8029d0e:	e7e7      	b.n	8029ce0 <_raise_r+0x12>
 8029d10:	2400      	movs	r4, #0
 8029d12:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8029d16:	4628      	mov	r0, r5
 8029d18:	4798      	blx	r3
 8029d1a:	2000      	movs	r0, #0
 8029d1c:	e7e0      	b.n	8029ce0 <_raise_r+0x12>
	...

08029d20 <raise>:
 8029d20:	4b02      	ldr	r3, [pc, #8]	; (8029d2c <raise+0xc>)
 8029d22:	4601      	mov	r1, r0
 8029d24:	6818      	ldr	r0, [r3, #0]
 8029d26:	f7ff bfd2 	b.w	8029cce <_raise_r>
 8029d2a:	bf00      	nop
 8029d2c:	20000160 	.word	0x20000160

08029d30 <_close_r>:
 8029d30:	b538      	push	{r3, r4, r5, lr}
 8029d32:	4d06      	ldr	r5, [pc, #24]	; (8029d4c <_close_r+0x1c>)
 8029d34:	2300      	movs	r3, #0
 8029d36:	4604      	mov	r4, r0
 8029d38:	4608      	mov	r0, r1
 8029d3a:	602b      	str	r3, [r5, #0]
 8029d3c:	f7d8 fb2c 	bl	8002398 <_close>
 8029d40:	1c43      	adds	r3, r0, #1
 8029d42:	d102      	bne.n	8029d4a <_close_r+0x1a>
 8029d44:	682b      	ldr	r3, [r5, #0]
 8029d46:	b103      	cbz	r3, 8029d4a <_close_r+0x1a>
 8029d48:	6023      	str	r3, [r4, #0]
 8029d4a:	bd38      	pop	{r3, r4, r5, pc}
 8029d4c:	2001383c 	.word	0x2001383c

08029d50 <_reclaim_reent>:
 8029d50:	4b29      	ldr	r3, [pc, #164]	; (8029df8 <_reclaim_reent+0xa8>)
 8029d52:	681b      	ldr	r3, [r3, #0]
 8029d54:	4283      	cmp	r3, r0
 8029d56:	b570      	push	{r4, r5, r6, lr}
 8029d58:	4604      	mov	r4, r0
 8029d5a:	d04b      	beq.n	8029df4 <_reclaim_reent+0xa4>
 8029d5c:	69c3      	ldr	r3, [r0, #28]
 8029d5e:	b143      	cbz	r3, 8029d72 <_reclaim_reent+0x22>
 8029d60:	68db      	ldr	r3, [r3, #12]
 8029d62:	2b00      	cmp	r3, #0
 8029d64:	d144      	bne.n	8029df0 <_reclaim_reent+0xa0>
 8029d66:	69e3      	ldr	r3, [r4, #28]
 8029d68:	6819      	ldr	r1, [r3, #0]
 8029d6a:	b111      	cbz	r1, 8029d72 <_reclaim_reent+0x22>
 8029d6c:	4620      	mov	r0, r4
 8029d6e:	f000 f939 	bl	8029fe4 <_free_r>
 8029d72:	6961      	ldr	r1, [r4, #20]
 8029d74:	b111      	cbz	r1, 8029d7c <_reclaim_reent+0x2c>
 8029d76:	4620      	mov	r0, r4
 8029d78:	f000 f934 	bl	8029fe4 <_free_r>
 8029d7c:	69e1      	ldr	r1, [r4, #28]
 8029d7e:	b111      	cbz	r1, 8029d86 <_reclaim_reent+0x36>
 8029d80:	4620      	mov	r0, r4
 8029d82:	f000 f92f 	bl	8029fe4 <_free_r>
 8029d86:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8029d88:	b111      	cbz	r1, 8029d90 <_reclaim_reent+0x40>
 8029d8a:	4620      	mov	r0, r4
 8029d8c:	f000 f92a 	bl	8029fe4 <_free_r>
 8029d90:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029d92:	b111      	cbz	r1, 8029d9a <_reclaim_reent+0x4a>
 8029d94:	4620      	mov	r0, r4
 8029d96:	f000 f925 	bl	8029fe4 <_free_r>
 8029d9a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8029d9c:	b111      	cbz	r1, 8029da4 <_reclaim_reent+0x54>
 8029d9e:	4620      	mov	r0, r4
 8029da0:	f000 f920 	bl	8029fe4 <_free_r>
 8029da4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8029da6:	b111      	cbz	r1, 8029dae <_reclaim_reent+0x5e>
 8029da8:	4620      	mov	r0, r4
 8029daa:	f000 f91b 	bl	8029fe4 <_free_r>
 8029dae:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8029db0:	b111      	cbz	r1, 8029db8 <_reclaim_reent+0x68>
 8029db2:	4620      	mov	r0, r4
 8029db4:	f000 f916 	bl	8029fe4 <_free_r>
 8029db8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8029dba:	b111      	cbz	r1, 8029dc2 <_reclaim_reent+0x72>
 8029dbc:	4620      	mov	r0, r4
 8029dbe:	f000 f911 	bl	8029fe4 <_free_r>
 8029dc2:	6a23      	ldr	r3, [r4, #32]
 8029dc4:	b1b3      	cbz	r3, 8029df4 <_reclaim_reent+0xa4>
 8029dc6:	4620      	mov	r0, r4
 8029dc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029dcc:	4718      	bx	r3
 8029dce:	5949      	ldr	r1, [r1, r5]
 8029dd0:	b941      	cbnz	r1, 8029de4 <_reclaim_reent+0x94>
 8029dd2:	3504      	adds	r5, #4
 8029dd4:	69e3      	ldr	r3, [r4, #28]
 8029dd6:	2d80      	cmp	r5, #128	; 0x80
 8029dd8:	68d9      	ldr	r1, [r3, #12]
 8029dda:	d1f8      	bne.n	8029dce <_reclaim_reent+0x7e>
 8029ddc:	4620      	mov	r0, r4
 8029dde:	f000 f901 	bl	8029fe4 <_free_r>
 8029de2:	e7c0      	b.n	8029d66 <_reclaim_reent+0x16>
 8029de4:	680e      	ldr	r6, [r1, #0]
 8029de6:	4620      	mov	r0, r4
 8029de8:	f000 f8fc 	bl	8029fe4 <_free_r>
 8029dec:	4631      	mov	r1, r6
 8029dee:	e7ef      	b.n	8029dd0 <_reclaim_reent+0x80>
 8029df0:	2500      	movs	r5, #0
 8029df2:	e7ef      	b.n	8029dd4 <_reclaim_reent+0x84>
 8029df4:	bd70      	pop	{r4, r5, r6, pc}
 8029df6:	bf00      	nop
 8029df8:	20000160 	.word	0x20000160

08029dfc <_lseek_r>:
 8029dfc:	b538      	push	{r3, r4, r5, lr}
 8029dfe:	4d07      	ldr	r5, [pc, #28]	; (8029e1c <_lseek_r+0x20>)
 8029e00:	4604      	mov	r4, r0
 8029e02:	4608      	mov	r0, r1
 8029e04:	4611      	mov	r1, r2
 8029e06:	2200      	movs	r2, #0
 8029e08:	602a      	str	r2, [r5, #0]
 8029e0a:	461a      	mov	r2, r3
 8029e0c:	f7d8 fad0 	bl	80023b0 <_lseek>
 8029e10:	1c43      	adds	r3, r0, #1
 8029e12:	d102      	bne.n	8029e1a <_lseek_r+0x1e>
 8029e14:	682b      	ldr	r3, [r5, #0]
 8029e16:	b103      	cbz	r3, 8029e1a <_lseek_r+0x1e>
 8029e18:	6023      	str	r3, [r4, #0]
 8029e1a:	bd38      	pop	{r3, r4, r5, pc}
 8029e1c:	2001383c 	.word	0x2001383c

08029e20 <_read_r>:
 8029e20:	b538      	push	{r3, r4, r5, lr}
 8029e22:	4d07      	ldr	r5, [pc, #28]	; (8029e40 <_read_r+0x20>)
 8029e24:	4604      	mov	r4, r0
 8029e26:	4608      	mov	r0, r1
 8029e28:	4611      	mov	r1, r2
 8029e2a:	2200      	movs	r2, #0
 8029e2c:	602a      	str	r2, [r5, #0]
 8029e2e:	461a      	mov	r2, r3
 8029e30:	f7d8 fa96 	bl	8002360 <_read>
 8029e34:	1c43      	adds	r3, r0, #1
 8029e36:	d102      	bne.n	8029e3e <_read_r+0x1e>
 8029e38:	682b      	ldr	r3, [r5, #0]
 8029e3a:	b103      	cbz	r3, 8029e3e <_read_r+0x1e>
 8029e3c:	6023      	str	r3, [r4, #0]
 8029e3e:	bd38      	pop	{r3, r4, r5, pc}
 8029e40:	2001383c 	.word	0x2001383c

08029e44 <_kill_r>:
 8029e44:	b538      	push	{r3, r4, r5, lr}
 8029e46:	4d07      	ldr	r5, [pc, #28]	; (8029e64 <_kill_r+0x20>)
 8029e48:	2300      	movs	r3, #0
 8029e4a:	4604      	mov	r4, r0
 8029e4c:	4608      	mov	r0, r1
 8029e4e:	4611      	mov	r1, r2
 8029e50:	602b      	str	r3, [r5, #0]
 8029e52:	f7d8 fa77 	bl	8002344 <_kill>
 8029e56:	1c43      	adds	r3, r0, #1
 8029e58:	d102      	bne.n	8029e60 <_kill_r+0x1c>
 8029e5a:	682b      	ldr	r3, [r5, #0]
 8029e5c:	b103      	cbz	r3, 8029e60 <_kill_r+0x1c>
 8029e5e:	6023      	str	r3, [r4, #0]
 8029e60:	bd38      	pop	{r3, r4, r5, pc}
 8029e62:	bf00      	nop
 8029e64:	2001383c 	.word	0x2001383c

08029e68 <_getpid_r>:
 8029e68:	f7d8 ba6a 	b.w	8002340 <_getpid>

08029e6c <_sbrk_r>:
 8029e6c:	b538      	push	{r3, r4, r5, lr}
 8029e6e:	4d06      	ldr	r5, [pc, #24]	; (8029e88 <_sbrk_r+0x1c>)
 8029e70:	2300      	movs	r3, #0
 8029e72:	4604      	mov	r4, r0
 8029e74:	4608      	mov	r0, r1
 8029e76:	602b      	str	r3, [r5, #0]
 8029e78:	f7d8 fa9c 	bl	80023b4 <_sbrk>
 8029e7c:	1c43      	adds	r3, r0, #1
 8029e7e:	d102      	bne.n	8029e86 <_sbrk_r+0x1a>
 8029e80:	682b      	ldr	r3, [r5, #0]
 8029e82:	b103      	cbz	r3, 8029e86 <_sbrk_r+0x1a>
 8029e84:	6023      	str	r3, [r4, #0]
 8029e86:	bd38      	pop	{r3, r4, r5, pc}
 8029e88:	2001383c 	.word	0x2001383c

08029e8c <_write_r>:
 8029e8c:	b538      	push	{r3, r4, r5, lr}
 8029e8e:	4d07      	ldr	r5, [pc, #28]	; (8029eac <_write_r+0x20>)
 8029e90:	4604      	mov	r4, r0
 8029e92:	4608      	mov	r0, r1
 8029e94:	4611      	mov	r1, r2
 8029e96:	2200      	movs	r2, #0
 8029e98:	602a      	str	r2, [r5, #0]
 8029e9a:	461a      	mov	r2, r3
 8029e9c:	f7d8 fa6e 	bl	800237c <_write>
 8029ea0:	1c43      	adds	r3, r0, #1
 8029ea2:	d102      	bne.n	8029eaa <_write_r+0x1e>
 8029ea4:	682b      	ldr	r3, [r5, #0]
 8029ea6:	b103      	cbz	r3, 8029eaa <_write_r+0x1e>
 8029ea8:	6023      	str	r3, [r4, #0]
 8029eaa:	bd38      	pop	{r3, r4, r5, pc}
 8029eac:	2001383c 	.word	0x2001383c

08029eb0 <__errno>:
 8029eb0:	4b01      	ldr	r3, [pc, #4]	; (8029eb8 <__errno+0x8>)
 8029eb2:	6818      	ldr	r0, [r3, #0]
 8029eb4:	4770      	bx	lr
 8029eb6:	bf00      	nop
 8029eb8:	20000160 	.word	0x20000160

08029ebc <__libc_init_array>:
 8029ebc:	b570      	push	{r4, r5, r6, lr}
 8029ebe:	4d0d      	ldr	r5, [pc, #52]	; (8029ef4 <__libc_init_array+0x38>)
 8029ec0:	4c0d      	ldr	r4, [pc, #52]	; (8029ef8 <__libc_init_array+0x3c>)
 8029ec2:	1b64      	subs	r4, r4, r5
 8029ec4:	10a4      	asrs	r4, r4, #2
 8029ec6:	2600      	movs	r6, #0
 8029ec8:	42a6      	cmp	r6, r4
 8029eca:	d109      	bne.n	8029ee0 <__libc_init_array+0x24>
 8029ecc:	4d0b      	ldr	r5, [pc, #44]	; (8029efc <__libc_init_array+0x40>)
 8029ece:	4c0c      	ldr	r4, [pc, #48]	; (8029f00 <__libc_init_array+0x44>)
 8029ed0:	f000 fd70 	bl	802a9b4 <_init>
 8029ed4:	1b64      	subs	r4, r4, r5
 8029ed6:	10a4      	asrs	r4, r4, #2
 8029ed8:	2600      	movs	r6, #0
 8029eda:	42a6      	cmp	r6, r4
 8029edc:	d105      	bne.n	8029eea <__libc_init_array+0x2e>
 8029ede:	bd70      	pop	{r4, r5, r6, pc}
 8029ee0:	f855 3b04 	ldr.w	r3, [r5], #4
 8029ee4:	4798      	blx	r3
 8029ee6:	3601      	adds	r6, #1
 8029ee8:	e7ee      	b.n	8029ec8 <__libc_init_array+0xc>
 8029eea:	f855 3b04 	ldr.w	r3, [r5], #4
 8029eee:	4798      	blx	r3
 8029ef0:	3601      	adds	r6, #1
 8029ef2:	e7f2      	b.n	8029eda <__libc_init_array+0x1e>
 8029ef4:	0815e480 	.word	0x0815e480
 8029ef8:	0815e480 	.word	0x0815e480
 8029efc:	0815e480 	.word	0x0815e480
 8029f00:	0815e494 	.word	0x0815e494

08029f04 <__retarget_lock_init_recursive>:
 8029f04:	4770      	bx	lr

08029f06 <__retarget_lock_acquire_recursive>:
 8029f06:	4770      	bx	lr

08029f08 <__retarget_lock_release_recursive>:
 8029f08:	4770      	bx	lr

08029f0a <memcpy>:
 8029f0a:	440a      	add	r2, r1
 8029f0c:	4291      	cmp	r1, r2
 8029f0e:	f100 33ff 	add.w	r3, r0, #4294967295
 8029f12:	d100      	bne.n	8029f16 <memcpy+0xc>
 8029f14:	4770      	bx	lr
 8029f16:	b510      	push	{r4, lr}
 8029f18:	f811 4b01 	ldrb.w	r4, [r1], #1
 8029f1c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8029f20:	4291      	cmp	r1, r2
 8029f22:	d1f9      	bne.n	8029f18 <memcpy+0xe>
 8029f24:	bd10      	pop	{r4, pc}
	...

08029f28 <__register_exitproc>:
 8029f28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029f2c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8029fe0 <__register_exitproc+0xb8>
 8029f30:	4606      	mov	r6, r0
 8029f32:	f8d8 0000 	ldr.w	r0, [r8]
 8029f36:	461f      	mov	r7, r3
 8029f38:	460d      	mov	r5, r1
 8029f3a:	4691      	mov	r9, r2
 8029f3c:	f7ff ffe3 	bl	8029f06 <__retarget_lock_acquire_recursive>
 8029f40:	4b23      	ldr	r3, [pc, #140]	; (8029fd0 <__register_exitproc+0xa8>)
 8029f42:	681c      	ldr	r4, [r3, #0]
 8029f44:	b934      	cbnz	r4, 8029f54 <__register_exitproc+0x2c>
 8029f46:	4c23      	ldr	r4, [pc, #140]	; (8029fd4 <__register_exitproc+0xac>)
 8029f48:	601c      	str	r4, [r3, #0]
 8029f4a:	4b23      	ldr	r3, [pc, #140]	; (8029fd8 <__register_exitproc+0xb0>)
 8029f4c:	b113      	cbz	r3, 8029f54 <__register_exitproc+0x2c>
 8029f4e:	681b      	ldr	r3, [r3, #0]
 8029f50:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8029f54:	6863      	ldr	r3, [r4, #4]
 8029f56:	2b1f      	cmp	r3, #31
 8029f58:	dd07      	ble.n	8029f6a <__register_exitproc+0x42>
 8029f5a:	f8d8 0000 	ldr.w	r0, [r8]
 8029f5e:	f7ff ffd3 	bl	8029f08 <__retarget_lock_release_recursive>
 8029f62:	f04f 30ff 	mov.w	r0, #4294967295
 8029f66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029f6a:	b32e      	cbz	r6, 8029fb8 <__register_exitproc+0x90>
 8029f6c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029f70:	b968      	cbnz	r0, 8029f8e <__register_exitproc+0x66>
 8029f72:	4b1a      	ldr	r3, [pc, #104]	; (8029fdc <__register_exitproc+0xb4>)
 8029f74:	2b00      	cmp	r3, #0
 8029f76:	d0f0      	beq.n	8029f5a <__register_exitproc+0x32>
 8029f78:	f44f 7084 	mov.w	r0, #264	; 0x108
 8029f7c:	f7ff fcbe 	bl	80298fc <malloc>
 8029f80:	2800      	cmp	r0, #0
 8029f82:	d0ea      	beq.n	8029f5a <__register_exitproc+0x32>
 8029f84:	2300      	movs	r3, #0
 8029f86:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8029f8a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8029f8e:	6863      	ldr	r3, [r4, #4]
 8029f90:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8029f94:	2201      	movs	r2, #1
 8029f96:	409a      	lsls	r2, r3
 8029f98:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8029f9c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8029fa0:	4313      	orrs	r3, r2
 8029fa2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8029fa6:	2e02      	cmp	r6, #2
 8029fa8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8029fac:	bf02      	ittt	eq
 8029fae:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8029fb2:	4313      	orreq	r3, r2
 8029fb4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8029fb8:	6863      	ldr	r3, [r4, #4]
 8029fba:	f8d8 0000 	ldr.w	r0, [r8]
 8029fbe:	1c5a      	adds	r2, r3, #1
 8029fc0:	3302      	adds	r3, #2
 8029fc2:	6062      	str	r2, [r4, #4]
 8029fc4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8029fc8:	f7ff ff9e 	bl	8029f08 <__retarget_lock_release_recursive>
 8029fcc:	2000      	movs	r0, #0
 8029fce:	e7ca      	b.n	8029f66 <__register_exitproc+0x3e>
 8029fd0:	200138d0 	.word	0x200138d0
 8029fd4:	20013844 	.word	0x20013844
 8029fd8:	08041eec 	.word	0x08041eec
 8029fdc:	080298fd 	.word	0x080298fd
 8029fe0:	20000164 	.word	0x20000164

08029fe4 <_free_r>:
 8029fe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8029fe6:	2900      	cmp	r1, #0
 8029fe8:	d044      	beq.n	802a074 <_free_r+0x90>
 8029fea:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8029fee:	9001      	str	r0, [sp, #4]
 8029ff0:	2b00      	cmp	r3, #0
 8029ff2:	f1a1 0404 	sub.w	r4, r1, #4
 8029ff6:	bfb8      	it	lt
 8029ff8:	18e4      	addlt	r4, r4, r3
 8029ffa:	f7ff fd2f 	bl	8029a5c <__malloc_lock>
 8029ffe:	4a1e      	ldr	r2, [pc, #120]	; (802a078 <_free_r+0x94>)
 802a000:	9801      	ldr	r0, [sp, #4]
 802a002:	6813      	ldr	r3, [r2, #0]
 802a004:	b933      	cbnz	r3, 802a014 <_free_r+0x30>
 802a006:	6063      	str	r3, [r4, #4]
 802a008:	6014      	str	r4, [r2, #0]
 802a00a:	b003      	add	sp, #12
 802a00c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a010:	f7ff bd2a 	b.w	8029a68 <__malloc_unlock>
 802a014:	42a3      	cmp	r3, r4
 802a016:	d908      	bls.n	802a02a <_free_r+0x46>
 802a018:	6825      	ldr	r5, [r4, #0]
 802a01a:	1961      	adds	r1, r4, r5
 802a01c:	428b      	cmp	r3, r1
 802a01e:	bf01      	itttt	eq
 802a020:	6819      	ldreq	r1, [r3, #0]
 802a022:	685b      	ldreq	r3, [r3, #4]
 802a024:	1949      	addeq	r1, r1, r5
 802a026:	6021      	streq	r1, [r4, #0]
 802a028:	e7ed      	b.n	802a006 <_free_r+0x22>
 802a02a:	461a      	mov	r2, r3
 802a02c:	685b      	ldr	r3, [r3, #4]
 802a02e:	b10b      	cbz	r3, 802a034 <_free_r+0x50>
 802a030:	42a3      	cmp	r3, r4
 802a032:	d9fa      	bls.n	802a02a <_free_r+0x46>
 802a034:	6811      	ldr	r1, [r2, #0]
 802a036:	1855      	adds	r5, r2, r1
 802a038:	42a5      	cmp	r5, r4
 802a03a:	d10b      	bne.n	802a054 <_free_r+0x70>
 802a03c:	6824      	ldr	r4, [r4, #0]
 802a03e:	4421      	add	r1, r4
 802a040:	1854      	adds	r4, r2, r1
 802a042:	42a3      	cmp	r3, r4
 802a044:	6011      	str	r1, [r2, #0]
 802a046:	d1e0      	bne.n	802a00a <_free_r+0x26>
 802a048:	681c      	ldr	r4, [r3, #0]
 802a04a:	685b      	ldr	r3, [r3, #4]
 802a04c:	6053      	str	r3, [r2, #4]
 802a04e:	440c      	add	r4, r1
 802a050:	6014      	str	r4, [r2, #0]
 802a052:	e7da      	b.n	802a00a <_free_r+0x26>
 802a054:	d902      	bls.n	802a05c <_free_r+0x78>
 802a056:	230c      	movs	r3, #12
 802a058:	6003      	str	r3, [r0, #0]
 802a05a:	e7d6      	b.n	802a00a <_free_r+0x26>
 802a05c:	6825      	ldr	r5, [r4, #0]
 802a05e:	1961      	adds	r1, r4, r5
 802a060:	428b      	cmp	r3, r1
 802a062:	bf04      	itt	eq
 802a064:	6819      	ldreq	r1, [r3, #0]
 802a066:	685b      	ldreq	r3, [r3, #4]
 802a068:	6063      	str	r3, [r4, #4]
 802a06a:	bf04      	itt	eq
 802a06c:	1949      	addeq	r1, r1, r5
 802a06e:	6021      	streq	r1, [r4, #0]
 802a070:	6054      	str	r4, [r2, #4]
 802a072:	e7ca      	b.n	802a00a <_free_r+0x26>
 802a074:	b003      	add	sp, #12
 802a076:	bd30      	pop	{r4, r5, pc}
 802a078:	200136f8 	.word	0x200136f8

0802a07c <__sfputc_r>:
 802a07c:	6893      	ldr	r3, [r2, #8]
 802a07e:	3b01      	subs	r3, #1
 802a080:	2b00      	cmp	r3, #0
 802a082:	b410      	push	{r4}
 802a084:	6093      	str	r3, [r2, #8]
 802a086:	da08      	bge.n	802a09a <__sfputc_r+0x1e>
 802a088:	6994      	ldr	r4, [r2, #24]
 802a08a:	42a3      	cmp	r3, r4
 802a08c:	db01      	blt.n	802a092 <__sfputc_r+0x16>
 802a08e:	290a      	cmp	r1, #10
 802a090:	d103      	bne.n	802a09a <__sfputc_r+0x1e>
 802a092:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a096:	f000 bb73 	b.w	802a780 <__swbuf_r>
 802a09a:	6813      	ldr	r3, [r2, #0]
 802a09c:	1c58      	adds	r0, r3, #1
 802a09e:	6010      	str	r0, [r2, #0]
 802a0a0:	7019      	strb	r1, [r3, #0]
 802a0a2:	4608      	mov	r0, r1
 802a0a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a0a8:	4770      	bx	lr

0802a0aa <__sfputs_r>:
 802a0aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a0ac:	4606      	mov	r6, r0
 802a0ae:	460f      	mov	r7, r1
 802a0b0:	4614      	mov	r4, r2
 802a0b2:	18d5      	adds	r5, r2, r3
 802a0b4:	42ac      	cmp	r4, r5
 802a0b6:	d101      	bne.n	802a0bc <__sfputs_r+0x12>
 802a0b8:	2000      	movs	r0, #0
 802a0ba:	e007      	b.n	802a0cc <__sfputs_r+0x22>
 802a0bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a0c0:	463a      	mov	r2, r7
 802a0c2:	4630      	mov	r0, r6
 802a0c4:	f7ff ffda 	bl	802a07c <__sfputc_r>
 802a0c8:	1c43      	adds	r3, r0, #1
 802a0ca:	d1f3      	bne.n	802a0b4 <__sfputs_r+0xa>
 802a0cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a0d0 <_vfiprintf_r>:
 802a0d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0d4:	460d      	mov	r5, r1
 802a0d6:	b09d      	sub	sp, #116	; 0x74
 802a0d8:	4614      	mov	r4, r2
 802a0da:	4698      	mov	r8, r3
 802a0dc:	4606      	mov	r6, r0
 802a0de:	b118      	cbz	r0, 802a0e8 <_vfiprintf_r+0x18>
 802a0e0:	6a03      	ldr	r3, [r0, #32]
 802a0e2:	b90b      	cbnz	r3, 802a0e8 <_vfiprintf_r+0x18>
 802a0e4:	f7ff fd60 	bl	8029ba8 <__sinit>
 802a0e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a0ea:	07d9      	lsls	r1, r3, #31
 802a0ec:	d405      	bmi.n	802a0fa <_vfiprintf_r+0x2a>
 802a0ee:	89ab      	ldrh	r3, [r5, #12]
 802a0f0:	059a      	lsls	r2, r3, #22
 802a0f2:	d402      	bmi.n	802a0fa <_vfiprintf_r+0x2a>
 802a0f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a0f6:	f7ff ff06 	bl	8029f06 <__retarget_lock_acquire_recursive>
 802a0fa:	89ab      	ldrh	r3, [r5, #12]
 802a0fc:	071b      	lsls	r3, r3, #28
 802a0fe:	d501      	bpl.n	802a104 <_vfiprintf_r+0x34>
 802a100:	692b      	ldr	r3, [r5, #16]
 802a102:	b99b      	cbnz	r3, 802a12c <_vfiprintf_r+0x5c>
 802a104:	4629      	mov	r1, r5
 802a106:	4630      	mov	r0, r6
 802a108:	f000 fb78 	bl	802a7fc <__swsetup_r>
 802a10c:	b170      	cbz	r0, 802a12c <_vfiprintf_r+0x5c>
 802a10e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a110:	07dc      	lsls	r4, r3, #31
 802a112:	d504      	bpl.n	802a11e <_vfiprintf_r+0x4e>
 802a114:	f04f 30ff 	mov.w	r0, #4294967295
 802a118:	b01d      	add	sp, #116	; 0x74
 802a11a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a11e:	89ab      	ldrh	r3, [r5, #12]
 802a120:	0598      	lsls	r0, r3, #22
 802a122:	d4f7      	bmi.n	802a114 <_vfiprintf_r+0x44>
 802a124:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a126:	f7ff feef 	bl	8029f08 <__retarget_lock_release_recursive>
 802a12a:	e7f3      	b.n	802a114 <_vfiprintf_r+0x44>
 802a12c:	2300      	movs	r3, #0
 802a12e:	9309      	str	r3, [sp, #36]	; 0x24
 802a130:	2320      	movs	r3, #32
 802a132:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a136:	f8cd 800c 	str.w	r8, [sp, #12]
 802a13a:	2330      	movs	r3, #48	; 0x30
 802a13c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802a2f0 <_vfiprintf_r+0x220>
 802a140:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a144:	f04f 0901 	mov.w	r9, #1
 802a148:	4623      	mov	r3, r4
 802a14a:	469a      	mov	sl, r3
 802a14c:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a150:	b10a      	cbz	r2, 802a156 <_vfiprintf_r+0x86>
 802a152:	2a25      	cmp	r2, #37	; 0x25
 802a154:	d1f9      	bne.n	802a14a <_vfiprintf_r+0x7a>
 802a156:	ebba 0b04 	subs.w	fp, sl, r4
 802a15a:	d00b      	beq.n	802a174 <_vfiprintf_r+0xa4>
 802a15c:	465b      	mov	r3, fp
 802a15e:	4622      	mov	r2, r4
 802a160:	4629      	mov	r1, r5
 802a162:	4630      	mov	r0, r6
 802a164:	f7ff ffa1 	bl	802a0aa <__sfputs_r>
 802a168:	3001      	adds	r0, #1
 802a16a:	f000 80a9 	beq.w	802a2c0 <_vfiprintf_r+0x1f0>
 802a16e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a170:	445a      	add	r2, fp
 802a172:	9209      	str	r2, [sp, #36]	; 0x24
 802a174:	f89a 3000 	ldrb.w	r3, [sl]
 802a178:	2b00      	cmp	r3, #0
 802a17a:	f000 80a1 	beq.w	802a2c0 <_vfiprintf_r+0x1f0>
 802a17e:	2300      	movs	r3, #0
 802a180:	f04f 32ff 	mov.w	r2, #4294967295
 802a184:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a188:	f10a 0a01 	add.w	sl, sl, #1
 802a18c:	9304      	str	r3, [sp, #16]
 802a18e:	9307      	str	r3, [sp, #28]
 802a190:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a194:	931a      	str	r3, [sp, #104]	; 0x68
 802a196:	4654      	mov	r4, sl
 802a198:	2205      	movs	r2, #5
 802a19a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a19e:	4854      	ldr	r0, [pc, #336]	; (802a2f0 <_vfiprintf_r+0x220>)
 802a1a0:	f7d6 f886 	bl	80002b0 <memchr>
 802a1a4:	9a04      	ldr	r2, [sp, #16]
 802a1a6:	b9d8      	cbnz	r0, 802a1e0 <_vfiprintf_r+0x110>
 802a1a8:	06d1      	lsls	r1, r2, #27
 802a1aa:	bf44      	itt	mi
 802a1ac:	2320      	movmi	r3, #32
 802a1ae:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a1b2:	0713      	lsls	r3, r2, #28
 802a1b4:	bf44      	itt	mi
 802a1b6:	232b      	movmi	r3, #43	; 0x2b
 802a1b8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a1bc:	f89a 3000 	ldrb.w	r3, [sl]
 802a1c0:	2b2a      	cmp	r3, #42	; 0x2a
 802a1c2:	d015      	beq.n	802a1f0 <_vfiprintf_r+0x120>
 802a1c4:	9a07      	ldr	r2, [sp, #28]
 802a1c6:	4654      	mov	r4, sl
 802a1c8:	2000      	movs	r0, #0
 802a1ca:	f04f 0c0a 	mov.w	ip, #10
 802a1ce:	4621      	mov	r1, r4
 802a1d0:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a1d4:	3b30      	subs	r3, #48	; 0x30
 802a1d6:	2b09      	cmp	r3, #9
 802a1d8:	d94d      	bls.n	802a276 <_vfiprintf_r+0x1a6>
 802a1da:	b1b0      	cbz	r0, 802a20a <_vfiprintf_r+0x13a>
 802a1dc:	9207      	str	r2, [sp, #28]
 802a1de:	e014      	b.n	802a20a <_vfiprintf_r+0x13a>
 802a1e0:	eba0 0308 	sub.w	r3, r0, r8
 802a1e4:	fa09 f303 	lsl.w	r3, r9, r3
 802a1e8:	4313      	orrs	r3, r2
 802a1ea:	9304      	str	r3, [sp, #16]
 802a1ec:	46a2      	mov	sl, r4
 802a1ee:	e7d2      	b.n	802a196 <_vfiprintf_r+0xc6>
 802a1f0:	9b03      	ldr	r3, [sp, #12]
 802a1f2:	1d19      	adds	r1, r3, #4
 802a1f4:	681b      	ldr	r3, [r3, #0]
 802a1f6:	9103      	str	r1, [sp, #12]
 802a1f8:	2b00      	cmp	r3, #0
 802a1fa:	bfbb      	ittet	lt
 802a1fc:	425b      	neglt	r3, r3
 802a1fe:	f042 0202 	orrlt.w	r2, r2, #2
 802a202:	9307      	strge	r3, [sp, #28]
 802a204:	9307      	strlt	r3, [sp, #28]
 802a206:	bfb8      	it	lt
 802a208:	9204      	strlt	r2, [sp, #16]
 802a20a:	7823      	ldrb	r3, [r4, #0]
 802a20c:	2b2e      	cmp	r3, #46	; 0x2e
 802a20e:	d10c      	bne.n	802a22a <_vfiprintf_r+0x15a>
 802a210:	7863      	ldrb	r3, [r4, #1]
 802a212:	2b2a      	cmp	r3, #42	; 0x2a
 802a214:	d134      	bne.n	802a280 <_vfiprintf_r+0x1b0>
 802a216:	9b03      	ldr	r3, [sp, #12]
 802a218:	1d1a      	adds	r2, r3, #4
 802a21a:	681b      	ldr	r3, [r3, #0]
 802a21c:	9203      	str	r2, [sp, #12]
 802a21e:	2b00      	cmp	r3, #0
 802a220:	bfb8      	it	lt
 802a222:	f04f 33ff 	movlt.w	r3, #4294967295
 802a226:	3402      	adds	r4, #2
 802a228:	9305      	str	r3, [sp, #20]
 802a22a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802a300 <_vfiprintf_r+0x230>
 802a22e:	7821      	ldrb	r1, [r4, #0]
 802a230:	2203      	movs	r2, #3
 802a232:	4650      	mov	r0, sl
 802a234:	f7d6 f83c 	bl	80002b0 <memchr>
 802a238:	b138      	cbz	r0, 802a24a <_vfiprintf_r+0x17a>
 802a23a:	9b04      	ldr	r3, [sp, #16]
 802a23c:	eba0 000a 	sub.w	r0, r0, sl
 802a240:	2240      	movs	r2, #64	; 0x40
 802a242:	4082      	lsls	r2, r0
 802a244:	4313      	orrs	r3, r2
 802a246:	3401      	adds	r4, #1
 802a248:	9304      	str	r3, [sp, #16]
 802a24a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a24e:	4829      	ldr	r0, [pc, #164]	; (802a2f4 <_vfiprintf_r+0x224>)
 802a250:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802a254:	2206      	movs	r2, #6
 802a256:	f7d6 f82b 	bl	80002b0 <memchr>
 802a25a:	2800      	cmp	r0, #0
 802a25c:	d03f      	beq.n	802a2de <_vfiprintf_r+0x20e>
 802a25e:	4b26      	ldr	r3, [pc, #152]	; (802a2f8 <_vfiprintf_r+0x228>)
 802a260:	bb1b      	cbnz	r3, 802a2aa <_vfiprintf_r+0x1da>
 802a262:	9b03      	ldr	r3, [sp, #12]
 802a264:	3307      	adds	r3, #7
 802a266:	f023 0307 	bic.w	r3, r3, #7
 802a26a:	3308      	adds	r3, #8
 802a26c:	9303      	str	r3, [sp, #12]
 802a26e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a270:	443b      	add	r3, r7
 802a272:	9309      	str	r3, [sp, #36]	; 0x24
 802a274:	e768      	b.n	802a148 <_vfiprintf_r+0x78>
 802a276:	fb0c 3202 	mla	r2, ip, r2, r3
 802a27a:	460c      	mov	r4, r1
 802a27c:	2001      	movs	r0, #1
 802a27e:	e7a6      	b.n	802a1ce <_vfiprintf_r+0xfe>
 802a280:	2300      	movs	r3, #0
 802a282:	3401      	adds	r4, #1
 802a284:	9305      	str	r3, [sp, #20]
 802a286:	4619      	mov	r1, r3
 802a288:	f04f 0c0a 	mov.w	ip, #10
 802a28c:	4620      	mov	r0, r4
 802a28e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a292:	3a30      	subs	r2, #48	; 0x30
 802a294:	2a09      	cmp	r2, #9
 802a296:	d903      	bls.n	802a2a0 <_vfiprintf_r+0x1d0>
 802a298:	2b00      	cmp	r3, #0
 802a29a:	d0c6      	beq.n	802a22a <_vfiprintf_r+0x15a>
 802a29c:	9105      	str	r1, [sp, #20]
 802a29e:	e7c4      	b.n	802a22a <_vfiprintf_r+0x15a>
 802a2a0:	fb0c 2101 	mla	r1, ip, r1, r2
 802a2a4:	4604      	mov	r4, r0
 802a2a6:	2301      	movs	r3, #1
 802a2a8:	e7f0      	b.n	802a28c <_vfiprintf_r+0x1bc>
 802a2aa:	ab03      	add	r3, sp, #12
 802a2ac:	9300      	str	r3, [sp, #0]
 802a2ae:	462a      	mov	r2, r5
 802a2b0:	4b12      	ldr	r3, [pc, #72]	; (802a2fc <_vfiprintf_r+0x22c>)
 802a2b2:	a904      	add	r1, sp, #16
 802a2b4:	4630      	mov	r0, r6
 802a2b6:	f3af 8000 	nop.w
 802a2ba:	4607      	mov	r7, r0
 802a2bc:	1c78      	adds	r0, r7, #1
 802a2be:	d1d6      	bne.n	802a26e <_vfiprintf_r+0x19e>
 802a2c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a2c2:	07d9      	lsls	r1, r3, #31
 802a2c4:	d405      	bmi.n	802a2d2 <_vfiprintf_r+0x202>
 802a2c6:	89ab      	ldrh	r3, [r5, #12]
 802a2c8:	059a      	lsls	r2, r3, #22
 802a2ca:	d402      	bmi.n	802a2d2 <_vfiprintf_r+0x202>
 802a2cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a2ce:	f7ff fe1b 	bl	8029f08 <__retarget_lock_release_recursive>
 802a2d2:	89ab      	ldrh	r3, [r5, #12]
 802a2d4:	065b      	lsls	r3, r3, #25
 802a2d6:	f53f af1d 	bmi.w	802a114 <_vfiprintf_r+0x44>
 802a2da:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a2dc:	e71c      	b.n	802a118 <_vfiprintf_r+0x48>
 802a2de:	ab03      	add	r3, sp, #12
 802a2e0:	9300      	str	r3, [sp, #0]
 802a2e2:	462a      	mov	r2, r5
 802a2e4:	4b05      	ldr	r3, [pc, #20]	; (802a2fc <_vfiprintf_r+0x22c>)
 802a2e6:	a904      	add	r1, sp, #16
 802a2e8:	4630      	mov	r0, r6
 802a2ea:	f000 f879 	bl	802a3e0 <_printf_i>
 802a2ee:	e7e4      	b.n	802a2ba <_vfiprintf_r+0x1ea>
 802a2f0:	08041ef0 	.word	0x08041ef0
 802a2f4:	08041efa 	.word	0x08041efa
 802a2f8:	00000000 	.word	0x00000000
 802a2fc:	0802a0ab 	.word	0x0802a0ab
 802a300:	08041ef6 	.word	0x08041ef6

0802a304 <_printf_common>:
 802a304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a308:	4616      	mov	r6, r2
 802a30a:	4699      	mov	r9, r3
 802a30c:	688a      	ldr	r2, [r1, #8]
 802a30e:	690b      	ldr	r3, [r1, #16]
 802a310:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802a314:	4293      	cmp	r3, r2
 802a316:	bfb8      	it	lt
 802a318:	4613      	movlt	r3, r2
 802a31a:	6033      	str	r3, [r6, #0]
 802a31c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802a320:	4607      	mov	r7, r0
 802a322:	460c      	mov	r4, r1
 802a324:	b10a      	cbz	r2, 802a32a <_printf_common+0x26>
 802a326:	3301      	adds	r3, #1
 802a328:	6033      	str	r3, [r6, #0]
 802a32a:	6823      	ldr	r3, [r4, #0]
 802a32c:	0699      	lsls	r1, r3, #26
 802a32e:	bf42      	ittt	mi
 802a330:	6833      	ldrmi	r3, [r6, #0]
 802a332:	3302      	addmi	r3, #2
 802a334:	6033      	strmi	r3, [r6, #0]
 802a336:	6825      	ldr	r5, [r4, #0]
 802a338:	f015 0506 	ands.w	r5, r5, #6
 802a33c:	d106      	bne.n	802a34c <_printf_common+0x48>
 802a33e:	f104 0a19 	add.w	sl, r4, #25
 802a342:	68e3      	ldr	r3, [r4, #12]
 802a344:	6832      	ldr	r2, [r6, #0]
 802a346:	1a9b      	subs	r3, r3, r2
 802a348:	42ab      	cmp	r3, r5
 802a34a:	dc26      	bgt.n	802a39a <_printf_common+0x96>
 802a34c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802a350:	1e13      	subs	r3, r2, #0
 802a352:	6822      	ldr	r2, [r4, #0]
 802a354:	bf18      	it	ne
 802a356:	2301      	movne	r3, #1
 802a358:	0692      	lsls	r2, r2, #26
 802a35a:	d42b      	bmi.n	802a3b4 <_printf_common+0xb0>
 802a35c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802a360:	4649      	mov	r1, r9
 802a362:	4638      	mov	r0, r7
 802a364:	47c0      	blx	r8
 802a366:	3001      	adds	r0, #1
 802a368:	d01e      	beq.n	802a3a8 <_printf_common+0xa4>
 802a36a:	6823      	ldr	r3, [r4, #0]
 802a36c:	6922      	ldr	r2, [r4, #16]
 802a36e:	f003 0306 	and.w	r3, r3, #6
 802a372:	2b04      	cmp	r3, #4
 802a374:	bf02      	ittt	eq
 802a376:	68e5      	ldreq	r5, [r4, #12]
 802a378:	6833      	ldreq	r3, [r6, #0]
 802a37a:	1aed      	subeq	r5, r5, r3
 802a37c:	68a3      	ldr	r3, [r4, #8]
 802a37e:	bf0c      	ite	eq
 802a380:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802a384:	2500      	movne	r5, #0
 802a386:	4293      	cmp	r3, r2
 802a388:	bfc4      	itt	gt
 802a38a:	1a9b      	subgt	r3, r3, r2
 802a38c:	18ed      	addgt	r5, r5, r3
 802a38e:	2600      	movs	r6, #0
 802a390:	341a      	adds	r4, #26
 802a392:	42b5      	cmp	r5, r6
 802a394:	d11a      	bne.n	802a3cc <_printf_common+0xc8>
 802a396:	2000      	movs	r0, #0
 802a398:	e008      	b.n	802a3ac <_printf_common+0xa8>
 802a39a:	2301      	movs	r3, #1
 802a39c:	4652      	mov	r2, sl
 802a39e:	4649      	mov	r1, r9
 802a3a0:	4638      	mov	r0, r7
 802a3a2:	47c0      	blx	r8
 802a3a4:	3001      	adds	r0, #1
 802a3a6:	d103      	bne.n	802a3b0 <_printf_common+0xac>
 802a3a8:	f04f 30ff 	mov.w	r0, #4294967295
 802a3ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a3b0:	3501      	adds	r5, #1
 802a3b2:	e7c6      	b.n	802a342 <_printf_common+0x3e>
 802a3b4:	18e1      	adds	r1, r4, r3
 802a3b6:	1c5a      	adds	r2, r3, #1
 802a3b8:	2030      	movs	r0, #48	; 0x30
 802a3ba:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802a3be:	4422      	add	r2, r4
 802a3c0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802a3c4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802a3c8:	3302      	adds	r3, #2
 802a3ca:	e7c7      	b.n	802a35c <_printf_common+0x58>
 802a3cc:	2301      	movs	r3, #1
 802a3ce:	4622      	mov	r2, r4
 802a3d0:	4649      	mov	r1, r9
 802a3d2:	4638      	mov	r0, r7
 802a3d4:	47c0      	blx	r8
 802a3d6:	3001      	adds	r0, #1
 802a3d8:	d0e6      	beq.n	802a3a8 <_printf_common+0xa4>
 802a3da:	3601      	adds	r6, #1
 802a3dc:	e7d9      	b.n	802a392 <_printf_common+0x8e>
	...

0802a3e0 <_printf_i>:
 802a3e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802a3e4:	7e0f      	ldrb	r7, [r1, #24]
 802a3e6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802a3e8:	2f78      	cmp	r7, #120	; 0x78
 802a3ea:	4691      	mov	r9, r2
 802a3ec:	4680      	mov	r8, r0
 802a3ee:	460c      	mov	r4, r1
 802a3f0:	469a      	mov	sl, r3
 802a3f2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802a3f6:	d807      	bhi.n	802a408 <_printf_i+0x28>
 802a3f8:	2f62      	cmp	r7, #98	; 0x62
 802a3fa:	d80a      	bhi.n	802a412 <_printf_i+0x32>
 802a3fc:	2f00      	cmp	r7, #0
 802a3fe:	f000 80d4 	beq.w	802a5aa <_printf_i+0x1ca>
 802a402:	2f58      	cmp	r7, #88	; 0x58
 802a404:	f000 80c0 	beq.w	802a588 <_printf_i+0x1a8>
 802a408:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a40c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802a410:	e03a      	b.n	802a488 <_printf_i+0xa8>
 802a412:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802a416:	2b15      	cmp	r3, #21
 802a418:	d8f6      	bhi.n	802a408 <_printf_i+0x28>
 802a41a:	a101      	add	r1, pc, #4	; (adr r1, 802a420 <_printf_i+0x40>)
 802a41c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802a420:	0802a479 	.word	0x0802a479
 802a424:	0802a48d 	.word	0x0802a48d
 802a428:	0802a409 	.word	0x0802a409
 802a42c:	0802a409 	.word	0x0802a409
 802a430:	0802a409 	.word	0x0802a409
 802a434:	0802a409 	.word	0x0802a409
 802a438:	0802a48d 	.word	0x0802a48d
 802a43c:	0802a409 	.word	0x0802a409
 802a440:	0802a409 	.word	0x0802a409
 802a444:	0802a409 	.word	0x0802a409
 802a448:	0802a409 	.word	0x0802a409
 802a44c:	0802a591 	.word	0x0802a591
 802a450:	0802a4b9 	.word	0x0802a4b9
 802a454:	0802a54b 	.word	0x0802a54b
 802a458:	0802a409 	.word	0x0802a409
 802a45c:	0802a409 	.word	0x0802a409
 802a460:	0802a5b3 	.word	0x0802a5b3
 802a464:	0802a409 	.word	0x0802a409
 802a468:	0802a4b9 	.word	0x0802a4b9
 802a46c:	0802a409 	.word	0x0802a409
 802a470:	0802a409 	.word	0x0802a409
 802a474:	0802a553 	.word	0x0802a553
 802a478:	682b      	ldr	r3, [r5, #0]
 802a47a:	1d1a      	adds	r2, r3, #4
 802a47c:	681b      	ldr	r3, [r3, #0]
 802a47e:	602a      	str	r2, [r5, #0]
 802a480:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a484:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802a488:	2301      	movs	r3, #1
 802a48a:	e09f      	b.n	802a5cc <_printf_i+0x1ec>
 802a48c:	6820      	ldr	r0, [r4, #0]
 802a48e:	682b      	ldr	r3, [r5, #0]
 802a490:	0607      	lsls	r7, r0, #24
 802a492:	f103 0104 	add.w	r1, r3, #4
 802a496:	6029      	str	r1, [r5, #0]
 802a498:	d501      	bpl.n	802a49e <_printf_i+0xbe>
 802a49a:	681e      	ldr	r6, [r3, #0]
 802a49c:	e003      	b.n	802a4a6 <_printf_i+0xc6>
 802a49e:	0646      	lsls	r6, r0, #25
 802a4a0:	d5fb      	bpl.n	802a49a <_printf_i+0xba>
 802a4a2:	f9b3 6000 	ldrsh.w	r6, [r3]
 802a4a6:	2e00      	cmp	r6, #0
 802a4a8:	da03      	bge.n	802a4b2 <_printf_i+0xd2>
 802a4aa:	232d      	movs	r3, #45	; 0x2d
 802a4ac:	4276      	negs	r6, r6
 802a4ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a4b2:	485a      	ldr	r0, [pc, #360]	; (802a61c <_printf_i+0x23c>)
 802a4b4:	230a      	movs	r3, #10
 802a4b6:	e012      	b.n	802a4de <_printf_i+0xfe>
 802a4b8:	682b      	ldr	r3, [r5, #0]
 802a4ba:	6820      	ldr	r0, [r4, #0]
 802a4bc:	1d19      	adds	r1, r3, #4
 802a4be:	6029      	str	r1, [r5, #0]
 802a4c0:	0605      	lsls	r5, r0, #24
 802a4c2:	d501      	bpl.n	802a4c8 <_printf_i+0xe8>
 802a4c4:	681e      	ldr	r6, [r3, #0]
 802a4c6:	e002      	b.n	802a4ce <_printf_i+0xee>
 802a4c8:	0641      	lsls	r1, r0, #25
 802a4ca:	d5fb      	bpl.n	802a4c4 <_printf_i+0xe4>
 802a4cc:	881e      	ldrh	r6, [r3, #0]
 802a4ce:	4853      	ldr	r0, [pc, #332]	; (802a61c <_printf_i+0x23c>)
 802a4d0:	2f6f      	cmp	r7, #111	; 0x6f
 802a4d2:	bf0c      	ite	eq
 802a4d4:	2308      	moveq	r3, #8
 802a4d6:	230a      	movne	r3, #10
 802a4d8:	2100      	movs	r1, #0
 802a4da:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802a4de:	6865      	ldr	r5, [r4, #4]
 802a4e0:	60a5      	str	r5, [r4, #8]
 802a4e2:	2d00      	cmp	r5, #0
 802a4e4:	bfa2      	ittt	ge
 802a4e6:	6821      	ldrge	r1, [r4, #0]
 802a4e8:	f021 0104 	bicge.w	r1, r1, #4
 802a4ec:	6021      	strge	r1, [r4, #0]
 802a4ee:	b90e      	cbnz	r6, 802a4f4 <_printf_i+0x114>
 802a4f0:	2d00      	cmp	r5, #0
 802a4f2:	d04b      	beq.n	802a58c <_printf_i+0x1ac>
 802a4f4:	4615      	mov	r5, r2
 802a4f6:	fbb6 f1f3 	udiv	r1, r6, r3
 802a4fa:	fb03 6711 	mls	r7, r3, r1, r6
 802a4fe:	5dc7      	ldrb	r7, [r0, r7]
 802a500:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802a504:	4637      	mov	r7, r6
 802a506:	42bb      	cmp	r3, r7
 802a508:	460e      	mov	r6, r1
 802a50a:	d9f4      	bls.n	802a4f6 <_printf_i+0x116>
 802a50c:	2b08      	cmp	r3, #8
 802a50e:	d10b      	bne.n	802a528 <_printf_i+0x148>
 802a510:	6823      	ldr	r3, [r4, #0]
 802a512:	07de      	lsls	r6, r3, #31
 802a514:	d508      	bpl.n	802a528 <_printf_i+0x148>
 802a516:	6923      	ldr	r3, [r4, #16]
 802a518:	6861      	ldr	r1, [r4, #4]
 802a51a:	4299      	cmp	r1, r3
 802a51c:	bfde      	ittt	le
 802a51e:	2330      	movle	r3, #48	; 0x30
 802a520:	f805 3c01 	strble.w	r3, [r5, #-1]
 802a524:	f105 35ff 	addle.w	r5, r5, #4294967295
 802a528:	1b52      	subs	r2, r2, r5
 802a52a:	6122      	str	r2, [r4, #16]
 802a52c:	f8cd a000 	str.w	sl, [sp]
 802a530:	464b      	mov	r3, r9
 802a532:	aa03      	add	r2, sp, #12
 802a534:	4621      	mov	r1, r4
 802a536:	4640      	mov	r0, r8
 802a538:	f7ff fee4 	bl	802a304 <_printf_common>
 802a53c:	3001      	adds	r0, #1
 802a53e:	d14a      	bne.n	802a5d6 <_printf_i+0x1f6>
 802a540:	f04f 30ff 	mov.w	r0, #4294967295
 802a544:	b004      	add	sp, #16
 802a546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a54a:	6823      	ldr	r3, [r4, #0]
 802a54c:	f043 0320 	orr.w	r3, r3, #32
 802a550:	6023      	str	r3, [r4, #0]
 802a552:	4833      	ldr	r0, [pc, #204]	; (802a620 <_printf_i+0x240>)
 802a554:	2778      	movs	r7, #120	; 0x78
 802a556:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802a55a:	6823      	ldr	r3, [r4, #0]
 802a55c:	6829      	ldr	r1, [r5, #0]
 802a55e:	061f      	lsls	r7, r3, #24
 802a560:	f851 6b04 	ldr.w	r6, [r1], #4
 802a564:	d402      	bmi.n	802a56c <_printf_i+0x18c>
 802a566:	065f      	lsls	r7, r3, #25
 802a568:	bf48      	it	mi
 802a56a:	b2b6      	uxthmi	r6, r6
 802a56c:	07df      	lsls	r7, r3, #31
 802a56e:	bf48      	it	mi
 802a570:	f043 0320 	orrmi.w	r3, r3, #32
 802a574:	6029      	str	r1, [r5, #0]
 802a576:	bf48      	it	mi
 802a578:	6023      	strmi	r3, [r4, #0]
 802a57a:	b91e      	cbnz	r6, 802a584 <_printf_i+0x1a4>
 802a57c:	6823      	ldr	r3, [r4, #0]
 802a57e:	f023 0320 	bic.w	r3, r3, #32
 802a582:	6023      	str	r3, [r4, #0]
 802a584:	2310      	movs	r3, #16
 802a586:	e7a7      	b.n	802a4d8 <_printf_i+0xf8>
 802a588:	4824      	ldr	r0, [pc, #144]	; (802a61c <_printf_i+0x23c>)
 802a58a:	e7e4      	b.n	802a556 <_printf_i+0x176>
 802a58c:	4615      	mov	r5, r2
 802a58e:	e7bd      	b.n	802a50c <_printf_i+0x12c>
 802a590:	682b      	ldr	r3, [r5, #0]
 802a592:	6826      	ldr	r6, [r4, #0]
 802a594:	6961      	ldr	r1, [r4, #20]
 802a596:	1d18      	adds	r0, r3, #4
 802a598:	6028      	str	r0, [r5, #0]
 802a59a:	0635      	lsls	r5, r6, #24
 802a59c:	681b      	ldr	r3, [r3, #0]
 802a59e:	d501      	bpl.n	802a5a4 <_printf_i+0x1c4>
 802a5a0:	6019      	str	r1, [r3, #0]
 802a5a2:	e002      	b.n	802a5aa <_printf_i+0x1ca>
 802a5a4:	0670      	lsls	r0, r6, #25
 802a5a6:	d5fb      	bpl.n	802a5a0 <_printf_i+0x1c0>
 802a5a8:	8019      	strh	r1, [r3, #0]
 802a5aa:	2300      	movs	r3, #0
 802a5ac:	6123      	str	r3, [r4, #16]
 802a5ae:	4615      	mov	r5, r2
 802a5b0:	e7bc      	b.n	802a52c <_printf_i+0x14c>
 802a5b2:	682b      	ldr	r3, [r5, #0]
 802a5b4:	1d1a      	adds	r2, r3, #4
 802a5b6:	602a      	str	r2, [r5, #0]
 802a5b8:	681d      	ldr	r5, [r3, #0]
 802a5ba:	6862      	ldr	r2, [r4, #4]
 802a5bc:	2100      	movs	r1, #0
 802a5be:	4628      	mov	r0, r5
 802a5c0:	f7d5 fe76 	bl	80002b0 <memchr>
 802a5c4:	b108      	cbz	r0, 802a5ca <_printf_i+0x1ea>
 802a5c6:	1b40      	subs	r0, r0, r5
 802a5c8:	6060      	str	r0, [r4, #4]
 802a5ca:	6863      	ldr	r3, [r4, #4]
 802a5cc:	6123      	str	r3, [r4, #16]
 802a5ce:	2300      	movs	r3, #0
 802a5d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a5d4:	e7aa      	b.n	802a52c <_printf_i+0x14c>
 802a5d6:	6923      	ldr	r3, [r4, #16]
 802a5d8:	462a      	mov	r2, r5
 802a5da:	4649      	mov	r1, r9
 802a5dc:	4640      	mov	r0, r8
 802a5de:	47d0      	blx	sl
 802a5e0:	3001      	adds	r0, #1
 802a5e2:	d0ad      	beq.n	802a540 <_printf_i+0x160>
 802a5e4:	6823      	ldr	r3, [r4, #0]
 802a5e6:	079b      	lsls	r3, r3, #30
 802a5e8:	d413      	bmi.n	802a612 <_printf_i+0x232>
 802a5ea:	68e0      	ldr	r0, [r4, #12]
 802a5ec:	9b03      	ldr	r3, [sp, #12]
 802a5ee:	4298      	cmp	r0, r3
 802a5f0:	bfb8      	it	lt
 802a5f2:	4618      	movlt	r0, r3
 802a5f4:	e7a6      	b.n	802a544 <_printf_i+0x164>
 802a5f6:	2301      	movs	r3, #1
 802a5f8:	4632      	mov	r2, r6
 802a5fa:	4649      	mov	r1, r9
 802a5fc:	4640      	mov	r0, r8
 802a5fe:	47d0      	blx	sl
 802a600:	3001      	adds	r0, #1
 802a602:	d09d      	beq.n	802a540 <_printf_i+0x160>
 802a604:	3501      	adds	r5, #1
 802a606:	68e3      	ldr	r3, [r4, #12]
 802a608:	9903      	ldr	r1, [sp, #12]
 802a60a:	1a5b      	subs	r3, r3, r1
 802a60c:	42ab      	cmp	r3, r5
 802a60e:	dcf2      	bgt.n	802a5f6 <_printf_i+0x216>
 802a610:	e7eb      	b.n	802a5ea <_printf_i+0x20a>
 802a612:	2500      	movs	r5, #0
 802a614:	f104 0619 	add.w	r6, r4, #25
 802a618:	e7f5      	b.n	802a606 <_printf_i+0x226>
 802a61a:	bf00      	nop
 802a61c:	08041f01 	.word	0x08041f01
 802a620:	08041f12 	.word	0x08041f12

0802a624 <__sflush_r>:
 802a624:	898a      	ldrh	r2, [r1, #12]
 802a626:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a62a:	4605      	mov	r5, r0
 802a62c:	0710      	lsls	r0, r2, #28
 802a62e:	460c      	mov	r4, r1
 802a630:	d458      	bmi.n	802a6e4 <__sflush_r+0xc0>
 802a632:	684b      	ldr	r3, [r1, #4]
 802a634:	2b00      	cmp	r3, #0
 802a636:	dc05      	bgt.n	802a644 <__sflush_r+0x20>
 802a638:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802a63a:	2b00      	cmp	r3, #0
 802a63c:	dc02      	bgt.n	802a644 <__sflush_r+0x20>
 802a63e:	2000      	movs	r0, #0
 802a640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a644:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a646:	2e00      	cmp	r6, #0
 802a648:	d0f9      	beq.n	802a63e <__sflush_r+0x1a>
 802a64a:	2300      	movs	r3, #0
 802a64c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802a650:	682f      	ldr	r7, [r5, #0]
 802a652:	6a21      	ldr	r1, [r4, #32]
 802a654:	602b      	str	r3, [r5, #0]
 802a656:	d032      	beq.n	802a6be <__sflush_r+0x9a>
 802a658:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802a65a:	89a3      	ldrh	r3, [r4, #12]
 802a65c:	075a      	lsls	r2, r3, #29
 802a65e:	d505      	bpl.n	802a66c <__sflush_r+0x48>
 802a660:	6863      	ldr	r3, [r4, #4]
 802a662:	1ac0      	subs	r0, r0, r3
 802a664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802a666:	b10b      	cbz	r3, 802a66c <__sflush_r+0x48>
 802a668:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a66a:	1ac0      	subs	r0, r0, r3
 802a66c:	2300      	movs	r3, #0
 802a66e:	4602      	mov	r2, r0
 802a670:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a672:	6a21      	ldr	r1, [r4, #32]
 802a674:	4628      	mov	r0, r5
 802a676:	47b0      	blx	r6
 802a678:	1c43      	adds	r3, r0, #1
 802a67a:	89a3      	ldrh	r3, [r4, #12]
 802a67c:	d106      	bne.n	802a68c <__sflush_r+0x68>
 802a67e:	6829      	ldr	r1, [r5, #0]
 802a680:	291d      	cmp	r1, #29
 802a682:	d82b      	bhi.n	802a6dc <__sflush_r+0xb8>
 802a684:	4a29      	ldr	r2, [pc, #164]	; (802a72c <__sflush_r+0x108>)
 802a686:	410a      	asrs	r2, r1
 802a688:	07d6      	lsls	r6, r2, #31
 802a68a:	d427      	bmi.n	802a6dc <__sflush_r+0xb8>
 802a68c:	2200      	movs	r2, #0
 802a68e:	6062      	str	r2, [r4, #4]
 802a690:	04d9      	lsls	r1, r3, #19
 802a692:	6922      	ldr	r2, [r4, #16]
 802a694:	6022      	str	r2, [r4, #0]
 802a696:	d504      	bpl.n	802a6a2 <__sflush_r+0x7e>
 802a698:	1c42      	adds	r2, r0, #1
 802a69a:	d101      	bne.n	802a6a0 <__sflush_r+0x7c>
 802a69c:	682b      	ldr	r3, [r5, #0]
 802a69e:	b903      	cbnz	r3, 802a6a2 <__sflush_r+0x7e>
 802a6a0:	6560      	str	r0, [r4, #84]	; 0x54
 802a6a2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a6a4:	602f      	str	r7, [r5, #0]
 802a6a6:	2900      	cmp	r1, #0
 802a6a8:	d0c9      	beq.n	802a63e <__sflush_r+0x1a>
 802a6aa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802a6ae:	4299      	cmp	r1, r3
 802a6b0:	d002      	beq.n	802a6b8 <__sflush_r+0x94>
 802a6b2:	4628      	mov	r0, r5
 802a6b4:	f7ff fc96 	bl	8029fe4 <_free_r>
 802a6b8:	2000      	movs	r0, #0
 802a6ba:	6360      	str	r0, [r4, #52]	; 0x34
 802a6bc:	e7c0      	b.n	802a640 <__sflush_r+0x1c>
 802a6be:	2301      	movs	r3, #1
 802a6c0:	4628      	mov	r0, r5
 802a6c2:	47b0      	blx	r6
 802a6c4:	1c41      	adds	r1, r0, #1
 802a6c6:	d1c8      	bne.n	802a65a <__sflush_r+0x36>
 802a6c8:	682b      	ldr	r3, [r5, #0]
 802a6ca:	2b00      	cmp	r3, #0
 802a6cc:	d0c5      	beq.n	802a65a <__sflush_r+0x36>
 802a6ce:	2b1d      	cmp	r3, #29
 802a6d0:	d001      	beq.n	802a6d6 <__sflush_r+0xb2>
 802a6d2:	2b16      	cmp	r3, #22
 802a6d4:	d101      	bne.n	802a6da <__sflush_r+0xb6>
 802a6d6:	602f      	str	r7, [r5, #0]
 802a6d8:	e7b1      	b.n	802a63e <__sflush_r+0x1a>
 802a6da:	89a3      	ldrh	r3, [r4, #12]
 802a6dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802a6e0:	81a3      	strh	r3, [r4, #12]
 802a6e2:	e7ad      	b.n	802a640 <__sflush_r+0x1c>
 802a6e4:	690f      	ldr	r7, [r1, #16]
 802a6e6:	2f00      	cmp	r7, #0
 802a6e8:	d0a9      	beq.n	802a63e <__sflush_r+0x1a>
 802a6ea:	0793      	lsls	r3, r2, #30
 802a6ec:	680e      	ldr	r6, [r1, #0]
 802a6ee:	bf08      	it	eq
 802a6f0:	694b      	ldreq	r3, [r1, #20]
 802a6f2:	600f      	str	r7, [r1, #0]
 802a6f4:	bf18      	it	ne
 802a6f6:	2300      	movne	r3, #0
 802a6f8:	eba6 0807 	sub.w	r8, r6, r7
 802a6fc:	608b      	str	r3, [r1, #8]
 802a6fe:	f1b8 0f00 	cmp.w	r8, #0
 802a702:	dd9c      	ble.n	802a63e <__sflush_r+0x1a>
 802a704:	6a21      	ldr	r1, [r4, #32]
 802a706:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802a708:	4643      	mov	r3, r8
 802a70a:	463a      	mov	r2, r7
 802a70c:	4628      	mov	r0, r5
 802a70e:	47b0      	blx	r6
 802a710:	2800      	cmp	r0, #0
 802a712:	dc06      	bgt.n	802a722 <__sflush_r+0xfe>
 802a714:	89a3      	ldrh	r3, [r4, #12]
 802a716:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802a71a:	81a3      	strh	r3, [r4, #12]
 802a71c:	f04f 30ff 	mov.w	r0, #4294967295
 802a720:	e78e      	b.n	802a640 <__sflush_r+0x1c>
 802a722:	4407      	add	r7, r0
 802a724:	eba8 0800 	sub.w	r8, r8, r0
 802a728:	e7e9      	b.n	802a6fe <__sflush_r+0xda>
 802a72a:	bf00      	nop
 802a72c:	dfbffffe 	.word	0xdfbffffe

0802a730 <_fflush_r>:
 802a730:	b538      	push	{r3, r4, r5, lr}
 802a732:	690b      	ldr	r3, [r1, #16]
 802a734:	4605      	mov	r5, r0
 802a736:	460c      	mov	r4, r1
 802a738:	b913      	cbnz	r3, 802a740 <_fflush_r+0x10>
 802a73a:	2500      	movs	r5, #0
 802a73c:	4628      	mov	r0, r5
 802a73e:	bd38      	pop	{r3, r4, r5, pc}
 802a740:	b118      	cbz	r0, 802a74a <_fflush_r+0x1a>
 802a742:	6a03      	ldr	r3, [r0, #32]
 802a744:	b90b      	cbnz	r3, 802a74a <_fflush_r+0x1a>
 802a746:	f7ff fa2f 	bl	8029ba8 <__sinit>
 802a74a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802a74e:	2b00      	cmp	r3, #0
 802a750:	d0f3      	beq.n	802a73a <_fflush_r+0xa>
 802a752:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802a754:	07d0      	lsls	r0, r2, #31
 802a756:	d404      	bmi.n	802a762 <_fflush_r+0x32>
 802a758:	0599      	lsls	r1, r3, #22
 802a75a:	d402      	bmi.n	802a762 <_fflush_r+0x32>
 802a75c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802a75e:	f7ff fbd2 	bl	8029f06 <__retarget_lock_acquire_recursive>
 802a762:	4628      	mov	r0, r5
 802a764:	4621      	mov	r1, r4
 802a766:	f7ff ff5d 	bl	802a624 <__sflush_r>
 802a76a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802a76c:	07da      	lsls	r2, r3, #31
 802a76e:	4605      	mov	r5, r0
 802a770:	d4e4      	bmi.n	802a73c <_fflush_r+0xc>
 802a772:	89a3      	ldrh	r3, [r4, #12]
 802a774:	059b      	lsls	r3, r3, #22
 802a776:	d4e1      	bmi.n	802a73c <_fflush_r+0xc>
 802a778:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802a77a:	f7ff fbc5 	bl	8029f08 <__retarget_lock_release_recursive>
 802a77e:	e7dd      	b.n	802a73c <_fflush_r+0xc>

0802a780 <__swbuf_r>:
 802a780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a782:	460e      	mov	r6, r1
 802a784:	4614      	mov	r4, r2
 802a786:	4605      	mov	r5, r0
 802a788:	b118      	cbz	r0, 802a792 <__swbuf_r+0x12>
 802a78a:	6a03      	ldr	r3, [r0, #32]
 802a78c:	b90b      	cbnz	r3, 802a792 <__swbuf_r+0x12>
 802a78e:	f7ff fa0b 	bl	8029ba8 <__sinit>
 802a792:	69a3      	ldr	r3, [r4, #24]
 802a794:	60a3      	str	r3, [r4, #8]
 802a796:	89a3      	ldrh	r3, [r4, #12]
 802a798:	071a      	lsls	r2, r3, #28
 802a79a:	d525      	bpl.n	802a7e8 <__swbuf_r+0x68>
 802a79c:	6923      	ldr	r3, [r4, #16]
 802a79e:	b31b      	cbz	r3, 802a7e8 <__swbuf_r+0x68>
 802a7a0:	6823      	ldr	r3, [r4, #0]
 802a7a2:	6922      	ldr	r2, [r4, #16]
 802a7a4:	1a98      	subs	r0, r3, r2
 802a7a6:	6963      	ldr	r3, [r4, #20]
 802a7a8:	b2f6      	uxtb	r6, r6
 802a7aa:	4283      	cmp	r3, r0
 802a7ac:	4637      	mov	r7, r6
 802a7ae:	dc04      	bgt.n	802a7ba <__swbuf_r+0x3a>
 802a7b0:	4621      	mov	r1, r4
 802a7b2:	4628      	mov	r0, r5
 802a7b4:	f7ff ffbc 	bl	802a730 <_fflush_r>
 802a7b8:	b9e0      	cbnz	r0, 802a7f4 <__swbuf_r+0x74>
 802a7ba:	68a3      	ldr	r3, [r4, #8]
 802a7bc:	3b01      	subs	r3, #1
 802a7be:	60a3      	str	r3, [r4, #8]
 802a7c0:	6823      	ldr	r3, [r4, #0]
 802a7c2:	1c5a      	adds	r2, r3, #1
 802a7c4:	6022      	str	r2, [r4, #0]
 802a7c6:	701e      	strb	r6, [r3, #0]
 802a7c8:	6962      	ldr	r2, [r4, #20]
 802a7ca:	1c43      	adds	r3, r0, #1
 802a7cc:	429a      	cmp	r2, r3
 802a7ce:	d004      	beq.n	802a7da <__swbuf_r+0x5a>
 802a7d0:	89a3      	ldrh	r3, [r4, #12]
 802a7d2:	07db      	lsls	r3, r3, #31
 802a7d4:	d506      	bpl.n	802a7e4 <__swbuf_r+0x64>
 802a7d6:	2e0a      	cmp	r6, #10
 802a7d8:	d104      	bne.n	802a7e4 <__swbuf_r+0x64>
 802a7da:	4621      	mov	r1, r4
 802a7dc:	4628      	mov	r0, r5
 802a7de:	f7ff ffa7 	bl	802a730 <_fflush_r>
 802a7e2:	b938      	cbnz	r0, 802a7f4 <__swbuf_r+0x74>
 802a7e4:	4638      	mov	r0, r7
 802a7e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a7e8:	4621      	mov	r1, r4
 802a7ea:	4628      	mov	r0, r5
 802a7ec:	f000 f806 	bl	802a7fc <__swsetup_r>
 802a7f0:	2800      	cmp	r0, #0
 802a7f2:	d0d5      	beq.n	802a7a0 <__swbuf_r+0x20>
 802a7f4:	f04f 37ff 	mov.w	r7, #4294967295
 802a7f8:	e7f4      	b.n	802a7e4 <__swbuf_r+0x64>
	...

0802a7fc <__swsetup_r>:
 802a7fc:	b538      	push	{r3, r4, r5, lr}
 802a7fe:	4b2a      	ldr	r3, [pc, #168]	; (802a8a8 <__swsetup_r+0xac>)
 802a800:	4605      	mov	r5, r0
 802a802:	6818      	ldr	r0, [r3, #0]
 802a804:	460c      	mov	r4, r1
 802a806:	b118      	cbz	r0, 802a810 <__swsetup_r+0x14>
 802a808:	6a03      	ldr	r3, [r0, #32]
 802a80a:	b90b      	cbnz	r3, 802a810 <__swsetup_r+0x14>
 802a80c:	f7ff f9cc 	bl	8029ba8 <__sinit>
 802a810:	89a3      	ldrh	r3, [r4, #12]
 802a812:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a816:	0718      	lsls	r0, r3, #28
 802a818:	d422      	bmi.n	802a860 <__swsetup_r+0x64>
 802a81a:	06d9      	lsls	r1, r3, #27
 802a81c:	d407      	bmi.n	802a82e <__swsetup_r+0x32>
 802a81e:	2309      	movs	r3, #9
 802a820:	602b      	str	r3, [r5, #0]
 802a822:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802a826:	81a3      	strh	r3, [r4, #12]
 802a828:	f04f 30ff 	mov.w	r0, #4294967295
 802a82c:	e034      	b.n	802a898 <__swsetup_r+0x9c>
 802a82e:	0758      	lsls	r0, r3, #29
 802a830:	d512      	bpl.n	802a858 <__swsetup_r+0x5c>
 802a832:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a834:	b141      	cbz	r1, 802a848 <__swsetup_r+0x4c>
 802a836:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802a83a:	4299      	cmp	r1, r3
 802a83c:	d002      	beq.n	802a844 <__swsetup_r+0x48>
 802a83e:	4628      	mov	r0, r5
 802a840:	f7ff fbd0 	bl	8029fe4 <_free_r>
 802a844:	2300      	movs	r3, #0
 802a846:	6363      	str	r3, [r4, #52]	; 0x34
 802a848:	89a3      	ldrh	r3, [r4, #12]
 802a84a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802a84e:	81a3      	strh	r3, [r4, #12]
 802a850:	2300      	movs	r3, #0
 802a852:	6063      	str	r3, [r4, #4]
 802a854:	6923      	ldr	r3, [r4, #16]
 802a856:	6023      	str	r3, [r4, #0]
 802a858:	89a3      	ldrh	r3, [r4, #12]
 802a85a:	f043 0308 	orr.w	r3, r3, #8
 802a85e:	81a3      	strh	r3, [r4, #12]
 802a860:	6923      	ldr	r3, [r4, #16]
 802a862:	b94b      	cbnz	r3, 802a878 <__swsetup_r+0x7c>
 802a864:	89a3      	ldrh	r3, [r4, #12]
 802a866:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802a86a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802a86e:	d003      	beq.n	802a878 <__swsetup_r+0x7c>
 802a870:	4621      	mov	r1, r4
 802a872:	4628      	mov	r0, r5
 802a874:	f000 f840 	bl	802a8f8 <__smakebuf_r>
 802a878:	89a0      	ldrh	r0, [r4, #12]
 802a87a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a87e:	f010 0301 	ands.w	r3, r0, #1
 802a882:	d00a      	beq.n	802a89a <__swsetup_r+0x9e>
 802a884:	2300      	movs	r3, #0
 802a886:	60a3      	str	r3, [r4, #8]
 802a888:	6963      	ldr	r3, [r4, #20]
 802a88a:	425b      	negs	r3, r3
 802a88c:	61a3      	str	r3, [r4, #24]
 802a88e:	6923      	ldr	r3, [r4, #16]
 802a890:	b943      	cbnz	r3, 802a8a4 <__swsetup_r+0xa8>
 802a892:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802a896:	d1c4      	bne.n	802a822 <__swsetup_r+0x26>
 802a898:	bd38      	pop	{r3, r4, r5, pc}
 802a89a:	0781      	lsls	r1, r0, #30
 802a89c:	bf58      	it	pl
 802a89e:	6963      	ldrpl	r3, [r4, #20]
 802a8a0:	60a3      	str	r3, [r4, #8]
 802a8a2:	e7f4      	b.n	802a88e <__swsetup_r+0x92>
 802a8a4:	2000      	movs	r0, #0
 802a8a6:	e7f7      	b.n	802a898 <__swsetup_r+0x9c>
 802a8a8:	20000160 	.word	0x20000160

0802a8ac <__swhatbuf_r>:
 802a8ac:	b570      	push	{r4, r5, r6, lr}
 802a8ae:	460c      	mov	r4, r1
 802a8b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a8b4:	2900      	cmp	r1, #0
 802a8b6:	b096      	sub	sp, #88	; 0x58
 802a8b8:	4615      	mov	r5, r2
 802a8ba:	461e      	mov	r6, r3
 802a8bc:	da0d      	bge.n	802a8da <__swhatbuf_r+0x2e>
 802a8be:	89a3      	ldrh	r3, [r4, #12]
 802a8c0:	f013 0f80 	tst.w	r3, #128	; 0x80
 802a8c4:	f04f 0100 	mov.w	r1, #0
 802a8c8:	bf0c      	ite	eq
 802a8ca:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802a8ce:	2340      	movne	r3, #64	; 0x40
 802a8d0:	2000      	movs	r0, #0
 802a8d2:	6031      	str	r1, [r6, #0]
 802a8d4:	602b      	str	r3, [r5, #0]
 802a8d6:	b016      	add	sp, #88	; 0x58
 802a8d8:	bd70      	pop	{r4, r5, r6, pc}
 802a8da:	466a      	mov	r2, sp
 802a8dc:	f000 f848 	bl	802a970 <_fstat_r>
 802a8e0:	2800      	cmp	r0, #0
 802a8e2:	dbec      	blt.n	802a8be <__swhatbuf_r+0x12>
 802a8e4:	9901      	ldr	r1, [sp, #4]
 802a8e6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802a8ea:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802a8ee:	4259      	negs	r1, r3
 802a8f0:	4159      	adcs	r1, r3
 802a8f2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802a8f6:	e7eb      	b.n	802a8d0 <__swhatbuf_r+0x24>

0802a8f8 <__smakebuf_r>:
 802a8f8:	898b      	ldrh	r3, [r1, #12]
 802a8fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a8fc:	079d      	lsls	r5, r3, #30
 802a8fe:	4606      	mov	r6, r0
 802a900:	460c      	mov	r4, r1
 802a902:	d507      	bpl.n	802a914 <__smakebuf_r+0x1c>
 802a904:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802a908:	6023      	str	r3, [r4, #0]
 802a90a:	6123      	str	r3, [r4, #16]
 802a90c:	2301      	movs	r3, #1
 802a90e:	6163      	str	r3, [r4, #20]
 802a910:	b002      	add	sp, #8
 802a912:	bd70      	pop	{r4, r5, r6, pc}
 802a914:	ab01      	add	r3, sp, #4
 802a916:	466a      	mov	r2, sp
 802a918:	f7ff ffc8 	bl	802a8ac <__swhatbuf_r>
 802a91c:	9900      	ldr	r1, [sp, #0]
 802a91e:	4605      	mov	r5, r0
 802a920:	4630      	mov	r0, r6
 802a922:	f7ff f81b 	bl	802995c <_malloc_r>
 802a926:	b948      	cbnz	r0, 802a93c <__smakebuf_r+0x44>
 802a928:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802a92c:	059a      	lsls	r2, r3, #22
 802a92e:	d4ef      	bmi.n	802a910 <__smakebuf_r+0x18>
 802a930:	f023 0303 	bic.w	r3, r3, #3
 802a934:	f043 0302 	orr.w	r3, r3, #2
 802a938:	81a3      	strh	r3, [r4, #12]
 802a93a:	e7e3      	b.n	802a904 <__smakebuf_r+0xc>
 802a93c:	89a3      	ldrh	r3, [r4, #12]
 802a93e:	6020      	str	r0, [r4, #0]
 802a940:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802a944:	81a3      	strh	r3, [r4, #12]
 802a946:	9b00      	ldr	r3, [sp, #0]
 802a948:	6163      	str	r3, [r4, #20]
 802a94a:	9b01      	ldr	r3, [sp, #4]
 802a94c:	6120      	str	r0, [r4, #16]
 802a94e:	b15b      	cbz	r3, 802a968 <__smakebuf_r+0x70>
 802a950:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a954:	4630      	mov	r0, r6
 802a956:	f000 f81d 	bl	802a994 <_isatty_r>
 802a95a:	b128      	cbz	r0, 802a968 <__smakebuf_r+0x70>
 802a95c:	89a3      	ldrh	r3, [r4, #12]
 802a95e:	f023 0303 	bic.w	r3, r3, #3
 802a962:	f043 0301 	orr.w	r3, r3, #1
 802a966:	81a3      	strh	r3, [r4, #12]
 802a968:	89a3      	ldrh	r3, [r4, #12]
 802a96a:	431d      	orrs	r5, r3
 802a96c:	81a5      	strh	r5, [r4, #12]
 802a96e:	e7cf      	b.n	802a910 <__smakebuf_r+0x18>

0802a970 <_fstat_r>:
 802a970:	b538      	push	{r3, r4, r5, lr}
 802a972:	4d07      	ldr	r5, [pc, #28]	; (802a990 <_fstat_r+0x20>)
 802a974:	2300      	movs	r3, #0
 802a976:	4604      	mov	r4, r0
 802a978:	4608      	mov	r0, r1
 802a97a:	4611      	mov	r1, r2
 802a97c:	602b      	str	r3, [r5, #0]
 802a97e:	f7d7 fd0f 	bl	80023a0 <_fstat>
 802a982:	1c43      	adds	r3, r0, #1
 802a984:	d102      	bne.n	802a98c <_fstat_r+0x1c>
 802a986:	682b      	ldr	r3, [r5, #0]
 802a988:	b103      	cbz	r3, 802a98c <_fstat_r+0x1c>
 802a98a:	6023      	str	r3, [r4, #0]
 802a98c:	bd38      	pop	{r3, r4, r5, pc}
 802a98e:	bf00      	nop
 802a990:	2001383c 	.word	0x2001383c

0802a994 <_isatty_r>:
 802a994:	b538      	push	{r3, r4, r5, lr}
 802a996:	4d06      	ldr	r5, [pc, #24]	; (802a9b0 <_isatty_r+0x1c>)
 802a998:	2300      	movs	r3, #0
 802a99a:	4604      	mov	r4, r0
 802a99c:	4608      	mov	r0, r1
 802a99e:	602b      	str	r3, [r5, #0]
 802a9a0:	f7d7 fd04 	bl	80023ac <_isatty>
 802a9a4:	1c43      	adds	r3, r0, #1
 802a9a6:	d102      	bne.n	802a9ae <_isatty_r+0x1a>
 802a9a8:	682b      	ldr	r3, [r5, #0]
 802a9aa:	b103      	cbz	r3, 802a9ae <_isatty_r+0x1a>
 802a9ac:	6023      	str	r3, [r4, #0]
 802a9ae:	bd38      	pop	{r3, r4, r5, pc}
 802a9b0:	2001383c 	.word	0x2001383c

0802a9b4 <_init>:
 802a9b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a9b6:	bf00      	nop
 802a9b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802a9ba:	bc08      	pop	{r3}
 802a9bc:	469e      	mov	lr, r3
 802a9be:	4770      	bx	lr

0802a9c0 <_fini>:
 802a9c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a9c2:	bf00      	nop
 802a9c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802a9c6:	bc08      	pop	{r3}
 802a9c8:	469e      	mov	lr, r3
 802a9ca:	4770      	bx	lr

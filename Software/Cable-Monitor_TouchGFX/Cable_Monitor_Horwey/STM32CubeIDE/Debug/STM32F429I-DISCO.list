
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bc2c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000175b0  0802bddc  0802bddc  0003bddc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  0804338c  0804338c  0005338c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047084  08047084  00057084  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000007c4  080472d0  080472d0  000572d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08047a94  08047a94  00057a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08160ac4  08160ac4  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  08160ac4  08160ac4  00170ac4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08160acc  08160acc  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08160acc  08160acc  00170acc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  08160ae0  08160ae0  00170ae0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08160ae4  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013874  20000168  08160c4c  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139dc  08160c4c  001839dc  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009ca88  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0021cd52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00299e28  00000000  00000000  0021cdfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00032856  00000000  00000000  004b6c23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004840  00000000  00000000  004e9480  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00121327  00000000  00000000  004edcc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000828b  00000000  00000000  0060efe7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032631  00000000  00000000  00617272  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ced1  00000000  00000000  006498a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d584  00000000  00000000  00686774  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    0000350f  00000000  00000000  00693cf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000150  00000000  00000000  00697207  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bdc4 	.word	0x0802bdc4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802bdc4 	.word	0x0802bdc4

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f009 fa45 	bl	800a170 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02a faf1 	bl	802b2cc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fbf1 	bl	80014d0 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	08160ae4 	.word	0x08160ae4
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000d00:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000d04:	200139dc 	.word	0x200139dc

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000d0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d10:	ed2d 8b02 	vpush	{d8}
 8000d14:	b088      	sub	sp, #32
 8000d16:	af00      	add	r7, sp, #0
 8000d18:	4605      	mov	r5, r0
 8000d1a:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000d1c:	f001 f85a 	bl	8001dd4 <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d20:	4604      	mov	r4, r0
 8000d22:	2800      	cmp	r0, #0
 8000d24:	f000 8089 	beq.w	8000e3a <calculate_freq_and_signalstrength+0x12e>
 8000d28:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000d2a:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8000e40 <calculate_freq_and_signalstrength+0x134>
 8000d2e:	4633      	mov	r3, r6
 8000d30:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000d34:	edd3 7a00 	vldr	s15, [r3]
 8000d38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000d3c:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d40:	429a      	cmp	r2, r3
 8000d42:	d1f7      	bne.n	8000d34 <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000d44:	b223      	sxth	r3, r4
 8000d46:	00db      	lsls	r3, r3, #3
 8000d48:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d4c:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000d50:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d52:	b2a1      	uxth	r1, r4
 8000d54:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d58:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d5c:	f028 f80a 	bl	8028d74 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d60:	2300      	movs	r3, #0
 8000d62:	4631      	mov	r1, r6
 8000d64:	f107 0008 	add.w	r0, r7, #8
 8000d68:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d6a:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d6e:	f028 f885 	bl	8028e7c <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d72:	4632      	mov	r2, r6
 8000d74:	4641      	mov	r1, r8
 8000d76:	4640      	mov	r0, r8
 8000d78:	f028 fcee 	bl	8029758 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000d7c:	463b      	mov	r3, r7
 8000d7e:	1d3a      	adds	r2, r7, #4
 8000d80:	4631      	mov	r1, r6
 8000d82:	4640      	mov	r0, r8
 8000d84:	f027 ff8e 	bl	8028ca4 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d88:	edd7 7a00 	vldr	s15, [r7]
 8000d8c:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000d90:	f001 f822 	bl	8001dd8 <MEAS_get_samp_freq>
 8000d94:	ee07 0a90 	vmov	s15, r0
 8000d98:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000d9c:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8000e44 <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000da0:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000da4:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000da8:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000dac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000db0:	d817      	bhi.n	8000de2 <calculate_freq_and_signalstrength+0xd6>
 8000db2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8000e48 <calculate_freq_and_signalstrength+0x13c>
 8000db6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000dba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dbe:	db28      	blt.n	8000e12 <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000dc0:	f001 f80a 	bl	8001dd8 <MEAS_get_samp_freq>
 8000dc4:	2332      	movs	r3, #50	; 0x32
 8000dc6:	fb04 f303 	mul.w	r3, r4, r3
 8000dca:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0; 
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000dce:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000dd2:	edd0 7a00 	vldr	s15, [r0]
 8000dd6:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000dda:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000ddc:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000de0:	e00b      	b.n	8000dfa <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000de2:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8000e4c <calculate_freq_and_signalstrength+0x140>
 8000de6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dee:	d91c      	bls.n	8000e2a <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000df0:	f000 fff2 	bl	8001dd8 <MEAS_get_samp_freq>
    float signal_strength = 0; 
 8000df4:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8000e50 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000df8:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000dfa:	4628      	mov	r0, r5
 8000dfc:	3720      	adds	r7, #32
    return fft;
 8000dfe:	ed85 8a00 	vstr	s16, [r5]
 8000e02:	ed85 7a01 	vstr	s14, [r5, #4]
 8000e06:	722b      	strb	r3, [r5, #8]
}
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	ecbd 8b02 	vpop	{d8}
 8000e0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000e12:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8000e4c <calculate_freq_and_signalstrength+0x140>
 8000e16:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e1e:	d8e7      	bhi.n	8000df0 <calculate_freq_and_signalstrength+0xe4>
 8000e20:	eeb4 8a47 	vcmp.f32	s16, s14
 8000e24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e28:	d1e2      	bne.n	8000df0 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000e2a:	f000 ffd5 	bl	8001dd8 <MEAS_get_samp_freq>
 8000e2e:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000e32:	009b      	lsls	r3, r3, #2
 8000e34:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8000e38:	e7c9      	b.n	8000dce <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	e784      	b.n	8000d48 <calculate_freq_and_signalstrength+0x3c>
 8000e3e:	bf00      	nop
 8000e40:	44fff000 	.word	0x44fff000
 8000e44:	425c0000 	.word	0x425c0000
 8000e48:	42340000 	.word	0x42340000
 8000e4c:	42820000 	.word	0x42820000
 8000e50:	00000000 	.word	0x00000000

08000e54 <accurate_FFT>:

ACCU_FFT accurate_FFT(void){
 8000e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e58:	ed2d 8b04 	vpush	{d8-d9}
 8000e5c:	b0a7      	sub	sp, #156	; 0x9c
 8000e5e:	af00      	add	r7, sp, #0
 8000e60:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 8000e62:	f000 ffb7 	bl	8001dd4 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 8000e66:	b203      	sxth	r3, r0
 8000e68:	009b      	lsls	r3, r3, #2
 8000e6a:	3307      	adds	r3, #7
 8000e6c:	f023 0307 	bic.w	r3, r3, #7
 8000e70:	ebad 0d03 	sub.w	sp, sp, r3
 8000e74:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 8000e76:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8000e7a:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8000e7e:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8000e80:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 8000e84:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8000e88:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8000e8a:	ebad 0d03 	sub.w	sp, sp, r3
 8000e8e:	466b      	mov	r3, sp
 8000e90:	ee09 3a90 	vmov	s19, r3
 8000e94:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000e98:	613b      	str	r3, [r7, #16]
 8000e9a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000e9e:	617b      	str	r3, [r7, #20]
 8000ea0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000ea4:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 8000ea6:	ee09 2a10 	vmov	s18, r2
 8000eaa:	f107 0364 	add.w	r3, r7, #100	; 0x64
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8000eae:	4682      	mov	sl, r0

    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8000eb0:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 8000eb2:	f000 ff61 	bl	8001d78 <MEAS_start_measure>
 8000eb6:	4605      	mov	r5, r0
        
        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000eb8:	f1ba 0f00 	cmp.w	sl, #0
 8000ebc:	d03e      	beq.n	8000f3c <accurate_FFT+0xe8>
 8000ebe:	ee18 9a10 	vmov	r9, s16
 8000ec2:	ee18 8a90 	vmov	r8, s17
 8000ec6:	ee19 6a10 	vmov	r6, s18
 8000eca:	ee19 ba90 	vmov	fp, s19
 8000ece:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8000ed0:	f000 ff7e 	bl	8001dd0 <MEAS_get_num_of_chan>
 8000ed4:	fb04 f000 	mul.w	r0, r4, r0
 8000ed8:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8000edc:	edd3 7a00 	vldr	s15, [r3]
 8000ee0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ee4:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 8000ee8:	f000 ff72 	bl	8001dd0 <MEAS_get_num_of_chan>
 8000eec:	fb04 f000 	mul.w	r0, r4, r0
 8000ef0:	3001      	adds	r0, #1
 8000ef2:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8000ef6:	edd3 7a00 	vldr	s15, [r3]
 8000efa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000efe:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 8000f02:	f000 ff65 	bl	8001dd0 <MEAS_get_num_of_chan>
 8000f06:	fb04 f000 	mul.w	r0, r4, r0
 8000f0a:	3002      	adds	r0, #2
 8000f0c:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8000f10:	edd3 7a00 	vldr	s15, [r3]
 8000f14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000f18:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 8000f1c:	f000 ff58 	bl	8001dd0 <MEAS_get_num_of_chan>
 8000f20:	fb04 f000 	mul.w	r0, r4, r0
 8000f24:	3003      	adds	r0, #3
 8000f26:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8000f2a:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000f2e:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 8000f30:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000f34:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 8000f36:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000f3a:	d1c9      	bne.n	8000ed0 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8000f3c:	ee18 1a10 	vmov	r1, s16
 8000f40:	f107 001c 	add.w	r0, r7, #28
 8000f44:	f7ff fee2 	bl	8000d0c <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8000f48:	697c      	ldr	r4, [r7, #20]
 8000f4a:	6a3b      	ldr	r3, [r7, #32]
 8000f4c:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8000f50:	ee18 1a90 	vmov	r1, s17
 8000f54:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8000f58:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8000f5a:	f7ff fed7 	bl	8000d0c <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8000f5e:	693a      	ldr	r2, [r7, #16]
 8000f60:	6a3b      	ldr	r3, [r7, #32]
 8000f62:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8000f66:	ee19 1a10 	vmov	r1, s18
 8000f6a:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8000f6e:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8000f70:	f7ff fecc 	bl	8000d0c <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 8000f74:	68fa      	ldr	r2, [r7, #12]
 8000f76:	6a3b      	ldr	r3, [r7, #32]
 8000f78:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8000f7c:	ee19 1a90 	vmov	r1, s19
 8000f80:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 8000f84:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8000f86:	f7ff fec1 	bl	8000d0c <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8000f8a:	68ba      	ldr	r2, [r7, #8]
 8000f8c:	6a3b      	ldr	r3, [r7, #32]
 8000f8e:	f842 3b04 	str.w	r3, [r2], #4
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8000f92:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000f96:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8000f98:	60ba      	str	r2, [r7, #8]
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8000f9a:	d18a      	bne.n	8000eb2 <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8000f9c:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000fa0:	f107 0278 	add.w	r2, r7, #120	; 0x78
 8000fa4:	2105      	movs	r1, #5
 8000fa6:	f027 fe49 	bl	8028c3c <arm_mean_f32>
    //arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8000faa:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8000fae:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 8000fb2:	2105      	movs	r1, #5
 8000fb4:	f027 fe42 	bl	8028c3c <arm_mean_f32>
    //arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 8000fb8:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8000fbc:	f107 0050 	add.w	r0, r7, #80	; 0x50
 8000fc0:	2105      	movs	r1, #5
 8000fc2:	f027 fe3b 	bl	8028c3c <arm_mean_f32>
    //arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
    //arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 8000fc6:	f107 0478 	add.w	r4, r7, #120	; 0x78
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 8000fca:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8000fce:	f107 0064 	add.w	r0, r7, #100	; 0x64
 8000fd2:	2105      	movs	r1, #5
 8000fd4:	f027 fe32 	bl	8028c3c <arm_mean_f32>
    return accu_fft;
 8000fd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000fda:	687e      	ldr	r6, [r7, #4]
 8000fdc:	4635      	mov	r5, r6
 8000fde:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000fe0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 8000fe4:	379c      	adds	r7, #156	; 0x9c
    return accu_fft;
 8000fe6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 8000fea:	4630      	mov	r0, r6
 8000fec:	46bd      	mov	sp, r7
 8000fee:	ecbd 8b04 	vpop	{d8-d9}
 8000ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ff6:	bf00      	nop

08000ff8 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000ff8:	ed90 6a02 	vldr	s12, [r0, #8]
 8000ffc:	edd0 7a01 	vldr	s15, [r0, #4]
 8001000:	ed90 5a00 	vldr	s10, [r0]
 8001004:	ed91 7a02 	vldr	s14, [r1, #8]
 8001008:	edd1 4a00 	vldr	s9, [r1]
 800100c:	ed91 4a01 	vldr	s8, [r1, #4]
 8001010:	ee66 6a06 	vmul.f32	s13, s12, s12
 8001014:	ee77 5ac6 	vsub.f32	s11, s15, s12
 8001018:	ee65 4a24 	vmul.f32	s9, s10, s9
 800101c:	ee66 6a87 	vmul.f32	s13, s13, s14
 8001020:	ee27 7a46 	vnmul.f32	s14, s14, s12
 8001024:	eee5 6aa4 	vfma.f32	s13, s11, s9
 8001028:	eea7 7a84 	vfma.f32	s14, s15, s8
 800102c:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001030:	ee77 4a86 	vadd.f32	s9, s15, s12
 8001034:	eee4 6a63 	vfms.f32	s13, s8, s7
 8001038:	ee67 7a86 	vmul.f32	s15, s15, s12
 800103c:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001040:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001044:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001048:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800104c:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001050:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001054:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001058:	edd0 7a01 	vldr	s15, [r0, #4]
 800105c:	ed91 3a01 	vldr	s6, [r1, #4]
 8001060:	ed91 7a00 	vldr	s14, [r1]
 8001064:	edd0 6a02 	vldr	s13, [r0, #8]
 8001068:	edd1 5a02 	vldr	s11, [r1, #8]
 800106c:	edd0 4a00 	vldr	s9, [r0]
 8001070:	ee67 2aa7 	vmul.f32	s5, s15, s15
 8001074:	ee33 6a47 	vsub.f32	s12, s6, s14
 8001078:	ee26 5aa6 	vmul.f32	s10, s13, s13
 800107c:	ee37 7a65 	vsub.f32	s14, s14, s11
 8001080:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001084:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001088:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800108c:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001090:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001094:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001098:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800109c:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80010a0:	ee75 5ac3 	vsub.f32	s11, s11, s6
 80010a4:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80010a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80010ac:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80010b0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80010b4:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80010b8:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80010bc:	edd1 7a00 	vldr	s15, [r1]
 80010c0:	ed91 4a02 	vldr	s8, [r1, #8]
 80010c4:	ed90 6a02 	vldr	s12, [r0, #8]
 80010c8:	edd1 6a01 	vldr	s13, [r1, #4]
 80010cc:	ed90 7a01 	vldr	s14, [r0, #4]
 80010d0:	9b00      	ldr	r3, [sp, #0]
 80010d2:	ee74 5a67 	vsub.f32	s11, s8, s15
 80010d6:	ee77 4ae6 	vsub.f32	s9, s15, s13
 80010da:	ee65 5a86 	vmul.f32	s11, s11, s12
 80010de:	edd0 7a00 	vldr	s15, [r0]
 80010e2:	eee7 5a24 	vfma.f32	s11, s14, s9
 80010e6:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80010ea:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80010ee:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80010f2:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80010f6:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80010fa:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80010fe:	eee7 6aa5 	vfma.f32	s13, s15, s11
 8001102:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001106:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800110a:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800110e:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001112:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001116:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800111a:	edc3 6a00 	vstr	s13, [r3]
}
 800111e:	4770      	bx	lr

08001120 <calculate_distance_and_angle>:
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8001120:	b530      	push	{r4, r5, lr}
    float32_t distance[3] = {10, 50, 100};
 8001122:	4b37      	ldr	r3, [pc, #220]	; (8001200 <calculate_distance_and_angle+0xe0>)
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8001124:	ed2d 8b02 	vpush	{d8}
    float32_t distance[3] = {10, 50, 100};
 8001128:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 800112c:	b097      	sub	sp, #92	; 0x5c
    float32_t distance[3] = {10, 50, 100};
 800112e:	f10d 0e1c 	add.w	lr, sp, #28
 8001132:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 8001136:	f103 020c 	add.w	r2, r3, #12
 800113a:	ca07      	ldmia	r2, {r0, r1, r2}
 800113c:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8001140:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 8001144:	f103 0218 	add.w	r2, r3, #24
 8001148:	ca07      	ldmia	r2, {r0, r1, r2}
 800114a:	ac0d      	add	r4, sp, #52	; 0x34
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 800114c:	ab12      	add	r3, sp, #72	; 0x48
 800114e:	9300      	str	r3, [sp, #0]
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8001150:	ad15      	add	r5, sp, #84	; 0x54
    float32_t signal_l[3] = {920, 655, 553};
 8001152:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8001156:	ab11      	add	r3, sp, #68	; 0x44
 8001158:	4660      	mov	r0, ip
 800115a:	4671      	mov	r1, lr
 800115c:	aa10      	add	r2, sp, #64	; 0x40
 800115e:	f7ff ff4b 	bl	8000ff8 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8001162:	ab14      	add	r3, sp, #80	; 0x50
 8001164:	aa13      	add	r2, sp, #76	; 0x4c
 8001166:	4620      	mov	r0, r4
 8001168:	9500      	str	r5, [sp, #0]
 800116a:	f7ff ff45 	bl	8000ff8 <calculate_coefficients_single_pad>
    return calibration;
 800116e:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
 8001172:	eddd 7a14 	vldr	s15, [sp, #80]	; 0x50
 8001176:	eddd 6a15 	vldr	s13, [sp, #84]	; 0x54
 800117a:	ed9d 6a10 	vldr	s12, [sp, #64]	; 0x40
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800117e:	ee87 8a00 	vdiv.f32	s16, s14, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001182:	eec7 8aa0 	vdiv.f32	s17, s15, s1
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001186:	ee20 0a00 	vmul.f32	s0, s0, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800118a:	ee60 0aa0 	vmul.f32	s1, s1, s1
    return calibration;
 800118e:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001192:	ee87 7a80 	vdiv.f32	s14, s15, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001196:	eec6 7aa0 	vdiv.f32	s15, s13, s1
    return calibration;
 800119a:	eddd 6a13 	vldr	s13, [sp, #76]	; 0x4c
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800119e:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 80011a2:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 80011a6:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 80011aa:	ee78 8aa7 	vadd.f32	s17, s17, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 80011ae:	ee78 7ac8 	vsub.f32	s15, s17, s16
 80011b2:	ee17 0a90 	vmov	r0, s15
 80011b6:	f7ff fb59 	bl	800086c <__aeabi_f2d>
 80011ba:	a30f      	add	r3, pc, #60	; (adr r3, 80011f8 <calculate_distance_and_angle+0xd8>)
 80011bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c0:	f7ff f8c6 	bl	8000350 <__aeabi_dmul>
 80011c4:	f7ff fbaa 	bl	800091c <__aeabi_d2f>
 80011c8:	ee00 0a10 	vmov	s0, r0
 80011cc:	f028 feda 	bl	8029f84 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 80011d0:	ee38 1a28 	vadd.f32	s2, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 80011d4:	eddf 1a0b 	vldr	s3, [pc, #44]	; 8001204 <calculate_distance_and_angle+0xe4>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 80011d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
}
 80011dc:	ee60 1a21 	vmul.f32	s3, s0, s3
 80011e0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80011e4:	eef0 0a68 	vmov.f32	s1, s17
 80011e8:	eeb0 0a48 	vmov.f32	s0, s16
 80011ec:	b017      	add	sp, #92	; 0x5c
 80011ee:	ecbd 8b02 	vpop	{d8}
 80011f2:	bd30      	pop	{r4, r5, pc}
 80011f4:	f3af 8000 	nop.w
 80011f8:	a8ef1b4a 	.word	0xa8ef1b4a
 80011fc:	3f99fd66 	.word	0x3f99fd66
 8001200:	0802bddc 	.word	0x0802bddc
 8001204:	42652ee0 	.word	0x42652ee0

08001208 <single_measurement>:
SINGLE_MEAS single_measurement(uint32_t* samples) {
 8001208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800120c:	ed2d 8b04 	vpush	{d8-d9}
 8001210:	b093      	sub	sp, #76	; 0x4c
 8001212:	af00      	add	r7, sp, #0
 8001214:	4605      	mov	r5, r0
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001216:	f000 fddd 	bl	8001dd4 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800121a:	b203      	sxth	r3, r0
 800121c:	009b      	lsls	r3, r3, #2
 800121e:	3307      	adds	r3, #7
 8001220:	f023 0307 	bic.w	r3, r3, #7
 8001224:	ebad 0d03 	sub.w	sp, sp, r3
 8001228:	46e9      	mov	r9, sp
    float32_t samples_PL[buffer_size];
 800122a:	ebad 0d03 	sub.w	sp, sp, r3
 800122e:	46e8      	mov	r8, sp
    float32_t samples_HSR[buffer_size];
 8001230:	ebad 0d03 	sub.w	sp, sp, r3
 8001234:	466e      	mov	r6, sp
    float32_t samples_HSL[buffer_size];
 8001236:	ebad 0d03 	sub.w	sp, sp, r3
 800123a:	46eb      	mov	fp, sp
    float32_t samples_PR[buffer_size];
 800123c:	ee08 9a10 	vmov	s16, r9
    float32_t samples_PL[buffer_size];
 8001240:	ee08 8a90 	vmov	s17, r8
    float32_t samples_HSR[buffer_size];
 8001244:	ee09 6a10 	vmov	s18, r6
    float32_t samples_HSL[buffer_size];
 8001248:	ee09 ba90 	vmov	s19, fp
    for (uint32_t i = 0; i < buffer_size; i++) {
 800124c:	b3b8      	cbz	r0, 80012be <single_measurement+0xb6>
 800124e:	4682      	mov	sl, r0
 8001250:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 8001252:	f000 fdbd 	bl	8001dd0 <MEAS_get_num_of_chan>
 8001256:	fb04 f000 	mul.w	r0, r4, r0
 800125a:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800125e:	edd3 7a00 	vldr	s15, [r3]
 8001262:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001266:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 800126a:	f000 fdb1 	bl	8001dd0 <MEAS_get_num_of_chan>
 800126e:	fb04 f000 	mul.w	r0, r4, r0
 8001272:	3001      	adds	r0, #1
 8001274:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001278:	edd3 7a00 	vldr	s15, [r3]
 800127c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001280:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 8001284:	f000 fda4 	bl	8001dd0 <MEAS_get_num_of_chan>
 8001288:	fb04 f000 	mul.w	r0, r4, r0
 800128c:	3002      	adds	r0, #2
 800128e:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001292:	edd3 7a00 	vldr	s15, [r3]
 8001296:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800129a:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800129e:	f000 fd97 	bl	8001dd0 <MEAS_get_num_of_chan>
 80012a2:	fb04 f000 	mul.w	r0, r4, r0
 80012a6:	3003      	adds	r0, #3
 80012a8:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80012ac:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012b0:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80012b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012b6:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80012b8:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012bc:	d1c9      	bne.n	8001252 <single_measurement+0x4a>
    fft = calculate_freq_and_signalstrength(samples_PR);
 80012be:	ee18 1a10 	vmov	r1, s16
 80012c2:	f107 001c 	add.w	r0, r7, #28
 80012c6:	f7ff fd21 	bl	8000d0c <calculate_freq_and_signalstrength>
 80012ca:	ed97 0a08 	vldr	s0, [r7, #32]
 80012ce:	ed97 8a07 	vldr	s16, [r7, #28]
 80012d2:	ed87 0a00 	vstr	s0, [r7]
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012d6:	ee18 1a90 	vmov	r1, s17
 80012da:	f107 001c 	add.w	r0, r7, #28
 80012de:	f7ff fd15 	bl	8000d0c <calculate_freq_and_signalstrength>
 80012e2:	edd7 0a08 	vldr	s1, [r7, #32]
 80012e6:	edd7 8a07 	vldr	s17, [r7, #28]
 80012ea:	edc7 0a01 	vstr	s1, [r7, #4]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012ee:	ee19 1a10 	vmov	r1, s18
 80012f2:	f107 001c 	add.w	r0, r7, #28
 80012f6:	f7ff fd09 	bl	8000d0c <calculate_freq_and_signalstrength>
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80012fa:	f107 001c 	add.w	r0, r7, #28
 80012fe:	ee19 1a90 	vmov	r1, s19
 8001302:	f7ff fd03 	bl	8000d0c <calculate_freq_and_signalstrength>
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 8001306:	edd7 0a01 	vldr	s1, [r7, #4]
 800130a:	ed97 0a00 	vldr	s0, [r7]
 800130e:	f7ff ff07 	bl	8001120 <calculate_distance_and_angle>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001312:	ee38 8a28 	vadd.f32	s16, s16, s17
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 8001316:	eeb0 0a41 	vmov.f32	s0, s2
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 800131a:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
}
 800131e:	eef0 0a61 	vmov.f32	s1, s3
 8001322:	ee28 1a01 	vmul.f32	s2, s16, s2
 8001326:	eddf 1a04 	vldr	s3, [pc, #16]	; 8001338 <single_measurement+0x130>
 800132a:	374c      	adds	r7, #76	; 0x4c
 800132c:	46bd      	mov	sp, r7
 800132e:	ecbd 8b04 	vpop	{d8-d9}
 8001332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001336:	bf00      	nop
 8001338:	00000000 	.word	0x00000000

0800133c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800133c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800133e:	2064      	movs	r0, #100	; 0x64
 8001340:	f00c fb28 	bl	800d994 <osDelay>
  for(;;)
 8001344:	e7fb      	b.n	800133e <StartDefaultTask+0x2>
 8001346:	bf00      	nop

08001348 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001348:	b580      	push	{r7, lr}
 800134a:	4c10      	ldr	r4, [pc, #64]	; (800138c <StartTimeoutTask+0x44>)
 800134c:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8001398 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001350:	4f0f      	ldr	r7, [pc, #60]	; (8001390 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001352:	4e10      	ldr	r6, [pc, #64]	; (8001394 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8001354:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001356:	2300      	movs	r3, #0
 8001358:	461a      	mov	r2, r3
 800135a:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 800135c:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800135e:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8001362:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001364:	f00c fc12 	bl	800db8c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001368:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800136a:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800136c:	4638      	mov	r0, r7
 800136e:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001370:	b912      	cbnz	r2, 8001378 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 8001372:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001374:	f009 f914 	bl	800a5a0 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001378:	4630      	mov	r0, r6
 800137a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800137e:	f009 f913 	bl	800a5a8 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 8001382:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001386:	f00c fb05 	bl	800d994 <osDelay>
	  sleep_timeout_value--;
 800138a:	e7e3      	b.n	8001354 <StartTimeoutTask+0xc>
 800138c:	2000000c 	.word	0x2000000c
 8001390:	40021000 	.word	0x40021000
 8001394:	40021800 	.word	0x40021800
 8001398:	2000018c 	.word	0x2000018c

0800139c <updateGUI_test>:
	return sleep_timeout_value;
 800139c:	4b01      	ldr	r3, [pc, #4]	; (80013a4 <updateGUI_test+0x8>)
}
 800139e:	6818      	ldr	r0, [r3, #0]
 80013a0:	4770      	bx	lr
 80013a2:	bf00      	nop
 80013a4:	2000000c 	.word	0x2000000c

080013a8 <gyro_disable>:
{
 80013a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013aa:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80013ac:	4e1f      	ldr	r6, [pc, #124]	; (800142c <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80013ae:	4d20      	ldr	r5, [pc, #128]	; (8001430 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80013b0:	4c20      	ldr	r4, [pc, #128]	; (8001434 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80013b2:	2700      	movs	r7, #0
 80013b4:	9700      	str	r7, [sp, #0]
 80013b6:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80013b8:	f043 0304 	orr.w	r3, r3, #4
 80013bc:	6333      	str	r3, [r6, #48]	; 0x30
 80013be:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80013c0:	f003 0304 	and.w	r3, r3, #4
 80013c4:	9300      	str	r3, [sp, #0]
 80013c6:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80013c8:	682b      	ldr	r3, [r5, #0]
 80013ca:	f023 030c 	bic.w	r3, r3, #12
 80013ce:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 80013d0:	682b      	ldr	r3, [r5, #0]
 80013d2:	f043 0304 	orr.w	r3, r3, #4
 80013d6:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 80013d8:	69ab      	ldr	r3, [r5, #24]
 80013da:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80013de:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 80013e0:	200a      	movs	r0, #10
 80013e2:	f008 feff 	bl	800a1e4 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 80013e6:	682b      	ldr	r3, [r5, #0]
 80013e8:	f043 030c 	orr.w	r3, r3, #12
 80013ec:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80013ee:	9701      	str	r7, [sp, #4]
 80013f0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80013f2:	f043 0320 	orr.w	r3, r3, #32
 80013f6:	6333      	str	r3, [r6, #48]	; 0x30
 80013f8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80013fa:	f003 0320 	and.w	r3, r3, #32
 80013fe:	9301      	str	r3, [sp, #4]
 8001400:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001402:	68a3      	ldr	r3, [r4, #8]
 8001404:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001408:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 800140a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800140c:	f023 030f 	bic.w	r3, r3, #15
 8001410:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8001412:	68e3      	ldr	r3, [r4, #12]
 8001414:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001418:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 800141a:	200a      	movs	r0, #10
 800141c:	f008 fee2 	bl	800a1e4 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001420:	6823      	ldr	r3, [r4, #0]
 8001422:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001426:	6023      	str	r3, [r4, #0]
}
 8001428:	b003      	add	sp, #12
 800142a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800142c:	40023800 	.word	0x40023800
 8001430:	40020800 	.word	0x40020800
 8001434:	40021400 	.word	0x40021400

08001438 <SystemClock_Config>:
{
 8001438:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800143a:	2400      	movs	r4, #0
{
 800143c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800143e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8001442:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001446:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800144a:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800144e:	4a1e      	ldr	r2, [pc, #120]	; (80014c8 <SystemClock_Config+0x90>)
 8001450:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001452:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001454:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001456:	4b1d      	ldr	r3, [pc, #116]	; (80014cc <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001458:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800145c:	6411      	str	r1, [r2, #64]	; 0x40
 800145e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001460:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001464:	9201      	str	r2, [sp, #4]
 8001466:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001468:	9402      	str	r4, [sp, #8]
 800146a:	681a      	ldr	r2, [r3, #0]
 800146c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001470:	601a      	str	r2, [r3, #0]
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001478:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800147a:	2201      	movs	r2, #1
 800147c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001480:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001484:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001486:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001488:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800148a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800148e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001492:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001496:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001498:	2202      	movs	r2, #2
 800149a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800149e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014a2:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a4:	f00a feba 	bl	800c21c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014a8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014aa:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80014ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b6:	a803      	add	r0, sp, #12
 80014b8:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80014ba:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014be:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c0:	f00b f8c4 	bl	800c64c <HAL_RCC_ClockConfig>
}
 80014c4:	b015      	add	sp, #84	; 0x54
 80014c6:	bd30      	pop	{r4, r5, pc}
 80014c8:	40023800 	.word	0x40023800
 80014cc:	40007000 	.word	0x40007000

080014d0 <main>:
{
 80014d0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014d4:	2400      	movs	r4, #0
{
 80014d6:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80014d8:	f008 fe58 	bl	800a18c <HAL_Init>
  SystemClock_Config();
 80014dc:	f7ff ffac 	bl	8001438 <SystemClock_Config>
  gyro_disable();
 80014e0:	f7ff ff62 	bl	80013a8 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014e4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 80014e8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ec:	4bbe      	ldr	r3, [pc, #760]	; (80017e8 <main+0x318>)
 80014ee:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014f0:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f4:	48bd      	ldr	r0, [pc, #756]	; (80017ec <main+0x31c>)
  hi2c3.Instance = I2C3;
 80014f6:	4dbe      	ldr	r5, [pc, #760]	; (80017f0 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f8:	f041 0110 	orr.w	r1, r1, #16
 80014fc:	6319      	str	r1, [r3, #48]	; 0x30
 80014fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001500:	f001 0110 	and.w	r1, r1, #16
 8001504:	9100      	str	r1, [sp, #0]
 8001506:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001508:	9401      	str	r4, [sp, #4]
 800150a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800150c:	f041 0120 	orr.w	r1, r1, #32
 8001510:	6319      	str	r1, [r3, #48]	; 0x30
 8001512:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001514:	f001 0120 	and.w	r1, r1, #32
 8001518:	9101      	str	r1, [sp, #4]
 800151a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800151c:	9402      	str	r4, [sp, #8]
 800151e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001520:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001524:	6319      	str	r1, [r3, #48]	; 0x30
 8001526:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001528:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800152c:	9102      	str	r1, [sp, #8]
 800152e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001530:	9403      	str	r4, [sp, #12]
 8001532:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001534:	f041 0104 	orr.w	r1, r1, #4
 8001538:	6319      	str	r1, [r3, #48]	; 0x30
 800153a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800153c:	f001 0104 	and.w	r1, r1, #4
 8001540:	9103      	str	r1, [sp, #12]
 8001542:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001544:	9404      	str	r4, [sp, #16]
 8001546:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001548:	f041 0101 	orr.w	r1, r1, #1
 800154c:	6319      	str	r1, [r3, #48]	; 0x30
 800154e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001550:	f001 0101 	and.w	r1, r1, #1
 8001554:	9104      	str	r1, [sp, #16]
 8001556:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001558:	9405      	str	r4, [sp, #20]
 800155a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800155c:	f041 0102 	orr.w	r1, r1, #2
 8001560:	6319      	str	r1, [r3, #48]	; 0x30
 8001562:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001564:	f001 0102 	and.w	r1, r1, #2
 8001568:	9105      	str	r1, [sp, #20]
 800156a:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800156c:	9406      	str	r4, [sp, #24]
 800156e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001570:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001574:	6319      	str	r1, [r3, #48]	; 0x30
 8001576:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001578:	f001 0140 	and.w	r1, r1, #64	; 0x40
 800157c:	9106      	str	r1, [sp, #24]
 800157e:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001580:	9407      	str	r4, [sp, #28]
 8001582:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001584:	f041 0108 	orr.w	r1, r1, #8
 8001588:	6319      	str	r1, [r3, #48]	; 0x30
 800158a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800158c:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001590:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001592:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001594:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001596:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001598:	f009 f802 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 800159c:	4893      	ldr	r0, [pc, #588]	; (80017ec <main+0x31c>)
 800159e:	2120      	movs	r1, #32
 80015a0:	2201      	movs	r2, #1
 80015a2:	f008 fffd 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 80015a6:	4893      	ldr	r0, [pc, #588]	; (80017f4 <main+0x324>)
 80015a8:	4622      	mov	r2, r4
 80015aa:	2114      	movs	r1, #20
 80015ac:	f008 fff8 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 80015b0:	4891      	ldr	r0, [pc, #580]	; (80017f8 <main+0x328>)
 80015b2:	4622      	mov	r2, r4
 80015b4:	2180      	movs	r1, #128	; 0x80
 80015b6:	f008 fff3 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80015ba:	4890      	ldr	r0, [pc, #576]	; (80017fc <main+0x32c>)
 80015bc:	4622      	mov	r2, r4
 80015be:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80015c2:	f008 ffed 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80015c6:	488e      	ldr	r0, [pc, #568]	; (8001800 <main+0x330>)
 80015c8:	4622      	mov	r2, r4
 80015ca:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80015ce:	f008 ffe7 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 80015d2:	488c      	ldr	r0, [pc, #560]	; (8001804 <main+0x334>)
 80015d4:	4622      	mov	r2, r4
 80015d6:	2104      	movs	r1, #4
 80015d8:	f008 ffe2 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 80015dc:	2201      	movs	r2, #1
 80015de:	4889      	ldr	r0, [pc, #548]	; (8001804 <main+0x334>)
 80015e0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80015e4:	f008 ffdc 	bl	800a5a0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e8:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015ea:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 80015ee:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015f0:	487e      	ldr	r0, [pc, #504]	; (80017ec <main+0x31c>)
 80015f2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80015f4:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f8:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015fc:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001600:	f008 fe8a 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001604:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001608:	4878      	ldr	r0, [pc, #480]	; (80017ec <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800160a:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800160c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800160e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001612:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001614:	f008 fe80 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001618:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800161a:	4874      	ldr	r0, [pc, #464]	; (80017ec <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800161c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800161e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001620:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001622:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001626:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800162a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800162c:	f008 fe74 	bl	800a318 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001630:	4870      	ldr	r0, [pc, #448]	; (80017f4 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001632:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001636:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001638:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800163c:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800163e:	f008 fe6b 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8001642:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001644:	486c      	ldr	r0, [pc, #432]	; (80017f8 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8001646:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001648:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800164a:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800164e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001652:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001654:	f008 fe60 	bl	800a318 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001658:	4866      	ldr	r0, [pc, #408]	; (80017f4 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800165a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800165c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800165e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001662:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001666:	f008 fe57 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800166a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800166e:	4863      	ldr	r0, [pc, #396]	; (80017fc <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001670:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001672:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001674:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001678:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800167a:	f008 fe4d 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800167e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001682:	485f      	ldr	r0, [pc, #380]	; (8001800 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001684:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001686:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001688:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800168c:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800168e:	f008 fe43 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001692:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001696:	485b      	ldr	r0, [pc, #364]	; (8001804 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001698:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800169a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800169c:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016a0:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80016a2:	f008 fe39 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80016a6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016aa:	4853      	ldr	r0, [pc, #332]	; (80017f8 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80016ac:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016ae:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80016b0:	230f      	movs	r3, #15
 80016b2:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016b4:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016b8:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016ba:	f008 fe2d 	bl	800a318 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80016be:	4622      	mov	r2, r4
 80016c0:	2105      	movs	r1, #5
 80016c2:	2009      	movs	r0, #9
 80016c4:	f008 fdb2 	bl	800a22c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80016c8:	2009      	movs	r0, #9
 80016ca:	f008 fded 	bl	800a2a8 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80016ce:	484e      	ldr	r0, [pc, #312]	; (8001808 <main+0x338>)
 80016d0:	4b4e      	ldr	r3, [pc, #312]	; (800180c <main+0x33c>)
 80016d2:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80016d4:	f008 fdf6 	bl	800a2c4 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80016d8:	494d      	ldr	r1, [pc, #308]	; (8001810 <main+0x340>)
 80016da:	4b4e      	ldr	r3, [pc, #312]	; (8001814 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80016dc:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 80016de:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80016e2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80016e6:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80016e8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80016ec:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80016f0:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80016f4:	f009 f9ba 	bl	800aa6c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80016f8:	4651      	mov	r1, sl
 80016fa:	4628      	mov	r0, r5
 80016fc:	f00a fb82 	bl	800be04 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001700:	4621      	mov	r1, r4
 8001702:	4628      	mov	r0, r5
 8001704:	f00a fb9e 	bl	800be44 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001708:	f8df c118 	ldr.w	ip, [pc, #280]	; 8001824 <main+0x354>
  hspi5.Instance = SPI5;
 800170c:	4842      	ldr	r0, [pc, #264]	; (8001818 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800170e:	4d43      	ldr	r5, [pc, #268]	; (800181c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001710:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001712:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001716:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800171a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800171e:	2318      	movs	r3, #24
 8001720:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001724:	230a      	movs	r3, #10
 8001726:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001728:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800172c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001730:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001734:	f00b fa78 	bl	800cc28 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001738:	2307      	movs	r3, #7
 800173a:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800173c:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800173e:	4b38      	ldr	r3, [pc, #224]	; (8001820 <main+0x350>)
 8001740:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001742:	2040      	movs	r0, #64	; 0x40
 8001744:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001748:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800174c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001750:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001752:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001754:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001758:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800175a:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800175c:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001760:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001764:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001766:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8001768:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 800176c:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8001770:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 8001772:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001774:	f00b f966 	bl	800ca44 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001778:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800177c:	a909      	add	r1, sp, #36	; 0x24
 800177e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001780:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001784:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8001788:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800178a:	f00b f97d 	bl	800ca88 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800178e:	4630      	mov	r0, r6
 8001790:	f008 fd28 	bl	800a1e4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001794:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001798:	a909      	add	r1, sp, #36	; 0x24
 800179a:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 800179c:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80017a0:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80017a4:	f00b f970 	bl	800ca88 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80017a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80017ac:	a909      	add	r1, sp, #36	; 0x24
 80017ae:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80017b0:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80017b4:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80017b8:	f00b f966 	bl	800ca88 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80017bc:	f44f 730c 	mov.w	r3, #560	; 0x230
 80017c0:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80017c2:	9b08      	ldr	r3, [sp, #32]
 80017c4:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80017c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80017ca:	a909      	add	r1, sp, #36	; 0x24
 80017cc:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80017ce:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80017d2:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80017d4:	f00b f958 	bl	800ca88 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80017d8:	4628      	mov	r0, r5
 80017da:	f240 516a 	movw	r1, #1386	; 0x56a
 80017de:	f00b f971 	bl	800cac4 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017e2:	2234      	movs	r2, #52	; 0x34
 80017e4:	e020      	b.n	8001828 <main+0x358>
 80017e6:	bf00      	nop
 80017e8:	40023800 	.word	0x40023800
 80017ec:	40021000 	.word	0x40021000
 80017f0:	200001a0 	.word	0x200001a0
 80017f4:	40020800 	.word	0x40020800
 80017f8:	40020000 	.word	0x40020000
 80017fc:	40020400 	.word	0x40020400
 8001800:	40020c00 	.word	0x40020c00
 8001804:	40021800 	.word	0x40021800
 8001808:	20000198 	.word	0x20000198
 800180c:	40023000 	.word	0x40023000
 8001810:	40005c00 	.word	0x40005c00
 8001814:	000186a0 	.word	0x000186a0
 8001818:	200002d0 	.word	0x200002d0
 800181c:	2000029c 	.word	0x2000029c
 8001820:	a0000140 	.word	0xa0000140
 8001824:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8001828:	4d3a      	ldr	r5, [pc, #232]	; (8001914 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800182a:	4621      	mov	r1, r4
 800182c:	eb0d 0002 	add.w	r0, sp, r2
 8001830:	f029 fc4d 	bl	802b0ce <memset>
  hltdc.Instance = LTDC;
 8001834:	4b38      	ldr	r3, [pc, #224]	; (8001918 <main+0x448>)
 8001836:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8001838:	2309      	movs	r3, #9
 800183a:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800183c:	231d      	movs	r3, #29
 800183e:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001840:	f240 1b0d 	movw	fp, #269	; 0x10d
 8001844:	f240 1343 	movw	r3, #323	; 0x143
 8001848:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800184c:	f240 1217 	movw	r2, #279	; 0x117
 8001850:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001854:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001856:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001858:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 800185c:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800185e:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001862:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 8001866:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 800186a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800186e:	f00a fb0d 	bl	800be8c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001872:	23f0      	movs	r3, #240	; 0xf0
 8001874:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 8001876:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 8001878:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800187c:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 800187e:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 8001880:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001882:	a90d      	add	r1, sp, #52	; 0x34
 8001884:	4622      	mov	r2, r4
 8001886:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8001888:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800188a:	f44f 6680 	mov.w	r6, #1024	; 0x400
 800188e:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 8001890:	4d22      	ldr	r5, [pc, #136]	; (800191c <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 8001892:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001894:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001898:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800189a:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 800189c:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 800189e:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 80018a0:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80018a4:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018a8:	f00a fbc6 	bl	800c038 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80018ac:	4b1c      	ldr	r3, [pc, #112]	; (8001920 <main+0x450>)
 80018ae:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80018b4:	682b      	ldr	r3, [r5, #0]
 80018b6:	68db      	ldr	r3, [r3, #12]
 80018b8:	4798      	blx	r3
  MX_TouchGFX_Init();
 80018ba:	f000 fde9 	bl	8002490 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018be:	f000 fde5 	bl	800248c <MX_TouchGFX_PreOSInit>
  gyro_disable();
 80018c2:	f7ff fd71 	bl	80013a8 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 80018c6:	f000 f945 	bl	8001b54 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 80018ca:	f000 f977 	bl	8001bbc <MEAS_timer_init>
  osKernelInitialize();
 80018ce:	f00b ffe9 	bl	800d8a4 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018d2:	4a14      	ldr	r2, [pc, #80]	; (8001924 <main+0x454>)
 80018d4:	4639      	mov	r1, r7
 80018d6:	4650      	mov	r0, sl
 80018d8:	f00c f91e 	bl	800db18 <osMessageQueueNew>
 80018dc:	4b12      	ldr	r3, [pc, #72]	; (8001928 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018de:	4a13      	ldr	r2, [pc, #76]	; (800192c <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018e0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018e2:	4621      	mov	r1, r4
 80018e4:	4812      	ldr	r0, [pc, #72]	; (8001930 <main+0x460>)
 80018e6:	f00c f809 	bl	800d8fc <osThreadNew>
 80018ea:	4b12      	ldr	r3, [pc, #72]	; (8001934 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018ec:	4a12      	ldr	r2, [pc, #72]	; (8001938 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ee:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018f0:	4621      	mov	r1, r4
 80018f2:	4812      	ldr	r0, [pc, #72]	; (800193c <main+0x46c>)
 80018f4:	f00c f802 	bl	800d8fc <osThreadNew>
 80018f8:	4b11      	ldr	r3, [pc, #68]	; (8001940 <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80018fa:	4a12      	ldr	r2, [pc, #72]	; (8001944 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80018fe:	4621      	mov	r1, r4
 8001900:	4811      	ldr	r0, [pc, #68]	; (8001948 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001902:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001904:	f00b fffa 	bl	800d8fc <osThreadNew>
 8001908:	4b10      	ldr	r3, [pc, #64]	; (800194c <main+0x47c>)
 800190a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800190c:	f00b ffdc 	bl	800d8c8 <osKernelStart>
  while (1)
 8001910:	e7fe      	b.n	8001910 <main+0x440>
 8001912:	bf00      	nop
 8001914:	200001f4 	.word	0x200001f4
 8001918:	40016800 	.word	0x40016800
 800191c:	20000188 	.word	0x20000188
 8001920:	20000018 	.word	0x20000018
 8001924:	0802be98 	.word	0x0802be98
 8001928:	2000018c 	.word	0x2000018c
 800192c:	0802bed4 	.word	0x0802bed4
 8001930:	0800133d 	.word	0x0800133d
 8001934:	20000194 	.word	0x20000194
 8001938:	0802be74 	.word	0x0802be74
 800193c:	080024a1 	.word	0x080024a1
 8001940:	20000184 	.word	0x20000184
 8001944:	0802beb0 	.word	0x0802beb0
 8001948:	08001349 	.word	0x08001349
 800194c:	20000190 	.word	0x20000190

08001950 <IOE_Init>:
 8001950:	4770      	bx	lr
 8001952:	bf00      	nop

08001954 <IOE_ITConfig>:
 8001954:	4770      	bx	lr
 8001956:	bf00      	nop

08001958 <IOE_Write>:
{
 8001958:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800195a:	4c09      	ldr	r4, [pc, #36]	; (8001980 <IOE_Write+0x28>)
{
 800195c:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800195e:	6824      	ldr	r4, [r4, #0]
 8001960:	9402      	str	r4, [sp, #8]
{
 8001962:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001964:	2301      	movs	r3, #1
 8001966:	f88d 4017 	strb.w	r4, [sp, #23]
 800196a:	f10d 0417 	add.w	r4, sp, #23
 800196e:	460a      	mov	r2, r1
 8001970:	9301      	str	r3, [sp, #4]
 8001972:	4601      	mov	r1, r0
 8001974:	9400      	str	r4, [sp, #0]
 8001976:	4803      	ldr	r0, [pc, #12]	; (8001984 <IOE_Write+0x2c>)
 8001978:	f009 f940 	bl	800abfc <HAL_I2C_Mem_Write>
}
 800197c:	b006      	add	sp, #24
 800197e:	bd10      	pop	{r4, pc}
 8001980:	20000004 	.word	0x20000004
 8001984:	200001a0 	.word	0x200001a0

08001988 <IOE_Read>:
{
 8001988:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800198a:	4b0b      	ldr	r3, [pc, #44]	; (80019b8 <IOE_Read+0x30>)
{
 800198c:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	9302      	str	r3, [sp, #8]
{
 8001992:	4684      	mov	ip, r0
 8001994:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001996:	2301      	movs	r3, #1
 8001998:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 800199c:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800199e:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019a2:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019a6:	4661      	mov	r1, ip
 80019a8:	4804      	ldr	r0, [pc, #16]	; (80019bc <IOE_Read+0x34>)
 80019aa:	f009 fa19 	bl	800ade0 <HAL_I2C_Mem_Read>
}
 80019ae:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019b2:	b007      	add	sp, #28
 80019b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80019b8:	20000004 	.word	0x20000004
 80019bc:	200001a0 	.word	0x200001a0

080019c0 <IOE_ReadMultiple>:
{
 80019c0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019c2:	4c09      	ldr	r4, [pc, #36]	; (80019e8 <IOE_ReadMultiple+0x28>)
{
 80019c4:	b084      	sub	sp, #16
 80019c6:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	9002      	str	r0, [sp, #8]
 80019cc:	e9cd 2300 	strd	r2, r3, [sp]
 80019d0:	4806      	ldr	r0, [pc, #24]	; (80019ec <IOE_ReadMultiple+0x2c>)
 80019d2:	460a      	mov	r2, r1
 80019d4:	2301      	movs	r3, #1
 80019d6:	4661      	mov	r1, ip
 80019d8:	f009 fa02 	bl	800ade0 <HAL_I2C_Mem_Read>
}
 80019dc:	3800      	subs	r0, #0
 80019de:	bf18      	it	ne
 80019e0:	2001      	movne	r0, #1
 80019e2:	b004      	add	sp, #16
 80019e4:	bd10      	pop	{r4, pc}
 80019e6:	bf00      	nop
 80019e8:	20000004 	.word	0x20000004
 80019ec:	200001a0 	.word	0x200001a0

080019f0 <IOE_Delay>:
 80019f0:	f008 bbf8 	b.w	800a1e4 <HAL_Delay>

080019f4 <LCD_IO_Init>:
{
 80019f4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019f6:	4806      	ldr	r0, [pc, #24]	; (8001a10 <LCD_IO_Init+0x1c>)
 80019f8:	2200      	movs	r2, #0
 80019fa:	2104      	movs	r1, #4
 80019fc:	f008 fdd0 	bl	800a5a0 <HAL_GPIO_WritePin>
}
 8001a00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a04:	4802      	ldr	r0, [pc, #8]	; (8001a10 <LCD_IO_Init+0x1c>)
 8001a06:	2201      	movs	r2, #1
 8001a08:	2104      	movs	r1, #4
 8001a0a:	f008 bdc9 	b.w	800a5a0 <HAL_GPIO_WritePin>
 8001a0e:	bf00      	nop
 8001a10:	40020800 	.word	0x40020800

08001a14 <LCD_IO_WriteData>:
{
 8001a14:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a16:	4d10      	ldr	r5, [pc, #64]	; (8001a58 <LCD_IO_WriteData+0x44>)
{
 8001a18:	b083      	sub	sp, #12
 8001a1a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a1c:	2201      	movs	r2, #1
 8001a1e:	480f      	ldr	r0, [pc, #60]	; (8001a5c <LCD_IO_WriteData+0x48>)
 8001a20:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a24:	f008 fdbc 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a28:	4628      	mov	r0, r5
 8001a2a:	2200      	movs	r2, #0
 8001a2c:	2104      	movs	r1, #4
 8001a2e:	f008 fdb7 	bl	800a5a0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a32:	4b0b      	ldr	r3, [pc, #44]	; (8001a60 <LCD_IO_WriteData+0x4c>)
 8001a34:	480b      	ldr	r0, [pc, #44]	; (8001a64 <LCD_IO_WriteData+0x50>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a3c:	f10d 0106 	add.w	r1, sp, #6
 8001a40:	2201      	movs	r2, #1
 8001a42:	f00b f953 	bl	800ccec <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a46:	2201      	movs	r2, #1
 8001a48:	2104      	movs	r1, #4
 8001a4a:	4628      	mov	r0, r5
}
 8001a4c:	b003      	add	sp, #12
 8001a4e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a52:	f008 bda5 	b.w	800a5a0 <HAL_GPIO_WritePin>
 8001a56:	bf00      	nop
 8001a58:	40020800 	.word	0x40020800
 8001a5c:	40020c00 	.word	0x40020c00
 8001a60:	20000008 	.word	0x20000008
 8001a64:	200002d0 	.word	0x200002d0

08001a68 <LCD_IO_WriteReg>:
{
 8001a68:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a6a:	4d10      	ldr	r5, [pc, #64]	; (8001aac <LCD_IO_WriteReg+0x44>)
{
 8001a6c:	b083      	sub	sp, #12
 8001a6e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a70:	2200      	movs	r2, #0
 8001a72:	480f      	ldr	r0, [pc, #60]	; (8001ab0 <LCD_IO_WriteReg+0x48>)
 8001a74:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a78:	f008 fd92 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a7c:	4628      	mov	r0, r5
 8001a7e:	2200      	movs	r2, #0
 8001a80:	2104      	movs	r1, #4
 8001a82:	f008 fd8d 	bl	800a5a0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a86:	4b0b      	ldr	r3, [pc, #44]	; (8001ab4 <LCD_IO_WriteReg+0x4c>)
 8001a88:	480b      	ldr	r0, [pc, #44]	; (8001ab8 <LCD_IO_WriteReg+0x50>)
 8001a8a:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001a8c:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a90:	f10d 0106 	add.w	r1, sp, #6
 8001a94:	2201      	movs	r2, #1
 8001a96:	f00b f929 	bl	800ccec <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a9a:	2201      	movs	r2, #1
 8001a9c:	2104      	movs	r1, #4
 8001a9e:	4628      	mov	r0, r5
}
 8001aa0:	b003      	add	sp, #12
 8001aa2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001aa6:	f008 bd7b 	b.w	800a5a0 <HAL_GPIO_WritePin>
 8001aaa:	bf00      	nop
 8001aac:	40020800 	.word	0x40020800
 8001ab0:	40020c00 	.word	0x40020c00
 8001ab4:	20000008 	.word	0x20000008
 8001ab8:	200002d0 	.word	0x200002d0

08001abc <LCD_IO_ReadData>:
{
 8001abc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ac0:	4e19      	ldr	r6, [pc, #100]	; (8001b28 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ac2:	4f1a      	ldr	r7, [pc, #104]	; (8001b2c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ac4:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b30 <LCD_IO_ReadData+0x74>
 8001ac8:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b34 <LCD_IO_ReadData+0x78>
{
 8001acc:	b083      	sub	sp, #12
 8001ace:	460c      	mov	r4, r1
 8001ad0:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ad2:	2200      	movs	r2, #0
 8001ad4:	4630      	mov	r0, r6
 8001ad6:	2104      	movs	r1, #4
 8001ad8:	f008 fd62 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001adc:	4638      	mov	r0, r7
 8001ade:	2200      	movs	r2, #0
 8001ae0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ae4:	f008 fd5c 	bl	800a5a0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae8:	f8d9 3000 	ldr.w	r3, [r9]
 8001aec:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001af0:	a901      	add	r1, sp, #4
 8001af2:	2201      	movs	r2, #1
 8001af4:	4640      	mov	r0, r8
 8001af6:	f00b f8f9 	bl	800ccec <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001afa:	f8d9 3000 	ldr.w	r3, [r9]
 8001afe:	4622      	mov	r2, r4
 8001b00:	a901      	add	r1, sp, #4
 8001b02:	4640      	mov	r0, r8
 8001b04:	f00b fb9a 	bl	800d23c <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b08:	4638      	mov	r0, r7
 8001b0a:	2201      	movs	r2, #1
 8001b0c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b10:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b12:	f008 fd45 	bl	800a5a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b16:	4630      	mov	r0, r6
 8001b18:	2201      	movs	r2, #1
 8001b1a:	2104      	movs	r1, #4
 8001b1c:	f008 fd40 	bl	800a5a0 <HAL_GPIO_WritePin>
}
 8001b20:	4620      	mov	r0, r4
 8001b22:	b003      	add	sp, #12
 8001b24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b28:	40020800 	.word	0x40020800
 8001b2c:	40020c00 	.word	0x40020c00
 8001b30:	20000008 	.word	0x20000008
 8001b34:	200002d0 	.word	0x200002d0

08001b38 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b38:	f008 bb54 	b.w	800a1e4 <HAL_Delay>

08001b3c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b3c:	4b03      	ldr	r3, [pc, #12]	; (8001b4c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b3e:	6802      	ldr	r2, [r0, #0]
 8001b40:	429a      	cmp	r2, r3
 8001b42:	d000      	beq.n	8001b46 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b44:	4770      	bx	lr
    HAL_IncTick();
 8001b46:	f008 bb3b 	b.w	800a1c0 <HAL_IncTick>
 8001b4a:	bf00      	nop
 8001b4c:	40001000 	.word	0x40001000

08001b50 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b50:	4770      	bx	lr
 8001b52:	bf00      	nop

08001b54 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001b54:	b410      	push	{r4}
 8001b56:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001b58:	4b15      	ldr	r3, [pc, #84]	; (8001bb0 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b5a:	4916      	ldr	r1, [pc, #88]	; (8001bb4 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001b5c:	2400      	movs	r4, #0
 8001b5e:	9400      	str	r4, [sp, #0]
 8001b60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b62:	f042 0220 	orr.w	r2, r2, #32
 8001b66:	631a      	str	r2, [r3, #48]	; 0x30
 8001b68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b6a:	f002 0220 	and.w	r2, r2, #32
 8001b6e:	9200      	str	r2, [sp, #0]
 8001b70:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b72:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001b74:	4a10      	ldr	r2, [pc, #64]	; (8001bb8 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b76:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001b7a:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001b7c:	6808      	ldr	r0, [r1, #0]
 8001b7e:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001b82:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001b84:	9401      	str	r4, [sp, #4]
 8001b86:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b88:	f041 0104 	orr.w	r1, r1, #4
 8001b8c:	6319      	str	r1, [r3, #48]	; 0x30
 8001b8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b90:	f003 0304 	and.w	r3, r3, #4
 8001b94:	9301      	str	r3, [sp, #4]
 8001b96:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001b98:	6813      	ldr	r3, [r2, #0]
 8001b9a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001b9e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001ba0:	6813      	ldr	r3, [r2, #0]
 8001ba2:	f043 030c 	orr.w	r3, r3, #12
 8001ba6:	6013      	str	r3, [r2, #0]
}
 8001ba8:	b003      	add	sp, #12
 8001baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bae:	4770      	bx	lr
 8001bb0:	40023800 	.word	0x40023800
 8001bb4:	40021400 	.word	0x40021400
 8001bb8:	40020800 	.word	0x40020800

08001bbc <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001bbc:	b410      	push	{r4}
 8001bbe:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001bc0:	4a0e      	ldr	r2, [pc, #56]	; (8001bfc <MEAS_timer_init+0x40>)
 8001bc2:	2000      	movs	r0, #0
 8001bc4:	9001      	str	r0, [sp, #4]
 8001bc6:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001bc8:	f041 0101 	orr.w	r1, r1, #1
 8001bcc:	6411      	str	r1, [r2, #64]	; 0x40
 8001bce:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001bd0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001bd4:	f002 0201 	and.w	r2, r2, #1
 8001bd8:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001bda:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001bde:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001be0:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001be2:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001be4:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001be6:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001be8:	4905      	ldr	r1, [pc, #20]	; (8001c00 <MEAS_timer_init+0x44>)
 8001bea:	f042 0220 	orr.w	r2, r2, #32
 8001bee:	605a      	str	r2, [r3, #4]
 8001bf0:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001bf4:	b003      	add	sp, #12
 8001bf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bfa:	4770      	bx	lr
 8001bfc:	40023800 	.word	0x40023800
 8001c00:	e000e100 	.word	0xe000e100

08001c04 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001c04:	b410      	push	{r4}
 8001c06:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c08:	4a36      	ldr	r2, [pc, #216]	; (8001ce4 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c0a:	4b37      	ldr	r3, [pc, #220]	; (8001ce8 <MEAS_ADC3_scan_init+0xe4>)
 8001c0c:	4c37      	ldr	r4, [pc, #220]	; (8001cec <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c0e:	2100      	movs	r1, #0
 8001c10:	9100      	str	r1, [sp, #0]
 8001c12:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001c14:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001c18:	6450      	str	r0, [r2, #68]	; 0x44
 8001c1a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001c1c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001c20:	9000      	str	r0, [sp, #0]
 8001c22:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c24:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001c26:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001c2a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001c2c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c2e:	f040 0004 	orr.w	r0, r0, #4
 8001c32:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001c34:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c36:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001c3a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001c3c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c3e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001c42:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001c44:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c46:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001c4a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001c4c:	6858      	ldr	r0, [r3, #4]
 8001c4e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001c52:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001c54:	6898      	ldr	r0, [r3, #8]
 8001c56:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001c5a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001c5c:	6898      	ldr	r0, [r3, #8]
 8001c5e:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001c62:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001c64:	6898      	ldr	r0, [r3, #8]
 8001c66:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001c6a:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001c6c:	9101      	str	r1, [sp, #4]
 8001c6e:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001c70:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001c74:	6310      	str	r0, [r2, #48]	; 0x30
 8001c76:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001c78:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001c7c:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001c7e:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001c82:	9a01      	ldr	r2, [sp, #4]
 8001c84:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001c88:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c8a:	f022 0201 	bic.w	r2, r2, #1
 8001c8e:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN);     // Wait for DMA to finish
 8001c90:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c92:	07d2      	lsls	r2, r2, #31
 8001c94:	d4fc      	bmi.n	8001c90 <MEAS_ADC3_scan_init+0x8c>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c96:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c98:	4815      	ldr	r0, [pc, #84]	; (8001cf0 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c9a:	4916      	ldr	r1, [pc, #88]	; (8001cf4 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c9c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001ca0:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001ca2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ca4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ca8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001caa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cac:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001cb0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001cb2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cb4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001cb8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001cba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cbc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001cc0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001cc2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cc4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001cc8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001cca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001ccc:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001cd0:	f042 0210 	orr.w	r2, r2, #16
 8001cd4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001cd6:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001cd8:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001cda:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001cdc:	b003      	add	sp, #12
 8001cde:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ce2:	4770      	bx	lr
 8001ce4:	40023800 	.word	0x40023800
 8001ce8:	40012200 	.word	0x40012200
 8001cec:	e000e100 	.word	0xe000e100
 8001cf0:	4001224c 	.word	0x4001224c
 8001cf4:	20000328 	.word	0x20000328

08001cf8 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001cf8:	4b1b      	ldr	r3, [pc, #108]	; (8001d68 <DMA2_Stream1_IRQHandler+0x70>)
 8001cfa:	681a      	ldr	r2, [r3, #0]
 8001cfc:	0511      	lsls	r1, r2, #20
 8001cfe:	d400      	bmi.n	8001d02 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001d00:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d02:	4a1a      	ldr	r2, [pc, #104]	; (8001d6c <DMA2_Stream1_IRQHandler+0x74>)
 8001d04:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001d08:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001d0c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001d10:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d14:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001d18:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d1a:	f022 0201 	bic.w	r2, r2, #1
 8001d1e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN);	  // Wait for DMA to finish
 8001d20:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d22:	07d2      	lsls	r2, r2, #31
 8001d24:	d4fc      	bmi.n	8001d20 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001d26:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d28:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001d2c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001d30:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d32:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d34:	490e      	ldr	r1, [pc, #56]	; (8001d70 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d36:	f023 0301 	bic.w	r3, r3, #1
 8001d3a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d3c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d3e:	4b0d      	ldr	r3, [pc, #52]	; (8001d74 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d40:	f020 0001 	bic.w	r0, r0, #1
 8001d44:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001d46:	6888      	ldr	r0, [r1, #8]
 8001d48:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001d4c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d4e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001d50:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001d54:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001d56:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001d58:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001d5c:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d5e:	6813      	ldr	r3, [r2, #0]
 8001d60:	f023 0301 	bic.w	r3, r3, #1
 8001d64:	6013      	str	r3, [r2, #0]
}
 8001d66:	4770      	bx	lr
 8001d68:	40026400 	.word	0x40026400
 8001d6c:	e000e100 	.word	0xe000e100
 8001d70:	40012200 	.word	0x40012200
 8001d74:	40023800 	.word	0x40023800

08001d78 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001d78:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001d7a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001d7e:	2100      	movs	r1, #0
 8001d80:	480f      	ldr	r0, [pc, #60]	; (8001dc0 <MEAS_start_measure+0x48>)
 8001d82:	f029 f9a4 	bl	802b0ce <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001d86:	f7ff ff3d 	bl	8001c04 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d8a:	4a0e      	ldr	r2, [pc, #56]	; (8001dc4 <MEAS_start_measure+0x4c>)
 8001d8c:	490e      	ldr	r1, [pc, #56]	; (8001dc8 <MEAS_start_measure+0x50>)
 8001d8e:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d90:	480e      	ldr	r0, [pc, #56]	; (8001dcc <MEAS_start_measure+0x54>)
 8001d92:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d96:	f043 0301 	orr.w	r3, r3, #1
 8001d9a:	6293      	str	r3, [r2, #40]	; 0x28
 8001d9c:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001da0:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001da2:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001da4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001da8:	f043 0301 	orr.w	r3, r3, #1
 8001dac:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001dae:	680b      	ldr	r3, [r1, #0]
 8001db0:	f043 0301 	orr.w	r3, r3, #1
 8001db4:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001db6:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001db8:	07db      	lsls	r3, r3, #31
 8001dba:	d4fc      	bmi.n	8001db6 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001dbc:	4800      	ldr	r0, [pc, #0]	; (8001dc0 <MEAS_start_measure+0x48>)
 8001dbe:	bd10      	pop	{r4, pc}
 8001dc0:	20000328 	.word	0x20000328
 8001dc4:	40026400 	.word	0x40026400
 8001dc8:	e000e100 	.word	0xe000e100
 8001dcc:	40012200 	.word	0x40012200

08001dd0 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001dd0:	2004      	movs	r0, #4
 8001dd2:	4770      	bx	lr

08001dd4 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001dd4:	2040      	movs	r0, #64	; 0x40
 8001dd6:	4770      	bx	lr

08001dd8 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001dd8:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001ddc:	4770      	bx	lr
 8001dde:	bf00      	nop

08001de0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001de0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001de2:	4b0e      	ldr	r3, [pc, #56]	; (8001e1c <HAL_MspInit+0x3c>)
 8001de4:	2200      	movs	r2, #0
 8001de6:	9200      	str	r2, [sp, #0]
 8001de8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001dea:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001dee:	6459      	str	r1, [r3, #68]	; 0x44
 8001df0:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001df2:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001df6:	9000      	str	r0, [sp, #0]
 8001df8:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dfa:	9201      	str	r2, [sp, #4]
 8001dfc:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001dfe:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001e02:	6418      	str	r0, [r3, #64]	; 0x40
 8001e04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e0a:	9301      	str	r3, [sp, #4]
 8001e0c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e0e:	210f      	movs	r1, #15
 8001e10:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e14:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e16:	f008 ba09 	b.w	800a22c <HAL_NVIC_SetPriority>
 8001e1a:	bf00      	nop
 8001e1c:	40023800 	.word	0x40023800

08001e20 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001e20:	4b0b      	ldr	r3, [pc, #44]	; (8001e50 <HAL_CRC_MspInit+0x30>)
 8001e22:	6802      	ldr	r2, [r0, #0]
 8001e24:	429a      	cmp	r2, r3
 8001e26:	d000      	beq.n	8001e2a <HAL_CRC_MspInit+0xa>
 8001e28:	4770      	bx	lr
{
 8001e2a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e2c:	2200      	movs	r2, #0
 8001e2e:	9201      	str	r2, [sp, #4]
 8001e30:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001e34:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e38:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001e3c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001e40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e42:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001e46:	9301      	str	r3, [sp, #4]
 8001e48:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001e4a:	b002      	add	sp, #8
 8001e4c:	4770      	bx	lr
 8001e4e:	bf00      	nop
 8001e50:	40023000 	.word	0x40023000

08001e54 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001e54:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001e58:	4b2e      	ldr	r3, [pc, #184]	; (8001f14 <HAL_I2C_MspInit+0xc0>)
 8001e5a:	6802      	ldr	r2, [r0, #0]
{
 8001e5c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e5e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001e60:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e62:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001e66:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001e6a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001e6c:	d002      	beq.n	8001e74 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e6e:	b00a      	add	sp, #40	; 0x28
 8001e70:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e74:	4d28      	ldr	r5, [pc, #160]	; (8001f18 <HAL_I2C_MspInit+0xc4>)
 8001e76:	9401      	str	r4, [sp, #4]
 8001e78:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e7a:	4828      	ldr	r0, [pc, #160]	; (8001f1c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e7c:	f043 0304 	orr.w	r3, r3, #4
 8001e80:	632b      	str	r3, [r5, #48]	; 0x30
 8001e82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e84:	f003 0304 	and.w	r3, r3, #4
 8001e88:	9301      	str	r3, [sp, #4]
 8001e8a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e8c:	9402      	str	r4, [sp, #8]
 8001e8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e90:	f043 0301 	orr.w	r3, r3, #1
 8001e94:	632b      	str	r3, [r5, #48]	; 0x30
 8001e96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e98:	f003 0301 	and.w	r3, r3, #1
 8001e9c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001e9e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001ea2:	f04f 0801 	mov.w	r8, #1
 8001ea6:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eaa:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eac:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001eae:	2312      	movs	r3, #18
 8001eb0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001eb4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eb8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eba:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ebc:	f008 fa2c 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec0:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ec2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001ec6:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec8:	4815      	ldr	r0, [pc, #84]	; (8001f20 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eca:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ecc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ed0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ed4:	f008 fa20 	bl	800a318 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ed8:	9403      	str	r4, [sp, #12]
 8001eda:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001edc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ee0:	642b      	str	r3, [r5, #64]	; 0x40
 8001ee2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001ee4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ee8:	4622      	mov	r2, r4
 8001eea:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001eec:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001eee:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ef2:	f008 f99b 	bl	800a22c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001ef6:	2048      	movs	r0, #72	; 0x48
 8001ef8:	f008 f9d6 	bl	800a2a8 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001efc:	6a2b      	ldr	r3, [r5, #32]
 8001efe:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f02:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f04:	6a2b      	ldr	r3, [r5, #32]
 8001f06:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f0a:	622b      	str	r3, [r5, #32]
}
 8001f0c:	b00a      	add	sp, #40	; 0x28
 8001f0e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001f12:	bf00      	nop
 8001f14:	40005c00 	.word	0x40005c00
 8001f18:	40023800 	.word	0x40023800
 8001f1c:	40020800 	.word	0x40020800
 8001f20:	40020000 	.word	0x40020000

08001f24 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f28:	4604      	mov	r4, r0
 8001f2a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f2c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f2e:	2230      	movs	r2, #48	; 0x30
 8001f30:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f32:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001f36:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001f3a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f3c:	f029 f8c7 	bl	802b0ce <memset>
  if(hltdc->Instance==LTDC)
 8001f40:	4b67      	ldr	r3, [pc, #412]	; (80020e0 <HAL_LTDC_MspInit+0x1bc>)
 8001f42:	6822      	ldr	r2, [r4, #0]
 8001f44:	429a      	cmp	r2, r3
 8001f46:	d002      	beq.n	8001f4e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001f48:	b01a      	add	sp, #104	; 0x68
 8001f4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f4e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f50:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f52:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f54:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f56:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f58:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f5c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f5e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f60:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f62:	f00a fc43 	bl	800c7ec <HAL_RCCEx_PeriphCLKConfig>
 8001f66:	2800      	cmp	r0, #0
 8001f68:	f040 80b7 	bne.w	80020da <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f6c:	4b5d      	ldr	r3, [pc, #372]	; (80020e4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f6e:	485e      	ldr	r0, [pc, #376]	; (80020e8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f70:	2400      	movs	r4, #0
 8001f72:	9401      	str	r4, [sp, #4]
 8001f74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f76:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f7a:	645a      	str	r2, [r3, #68]	; 0x44
 8001f7c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f7e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001f82:	9201      	str	r2, [sp, #4]
 8001f84:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f86:	9402      	str	r4, [sp, #8]
 8001f88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f8a:	f042 0220 	orr.w	r2, r2, #32
 8001f8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001f90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f92:	f002 0220 	and.w	r2, r2, #32
 8001f96:	9202      	str	r2, [sp, #8]
 8001f98:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f9a:	9403      	str	r4, [sp, #12]
 8001f9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f9e:	f042 0201 	orr.w	r2, r2, #1
 8001fa2:	631a      	str	r2, [r3, #48]	; 0x30
 8001fa4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fa6:	f002 0201 	and.w	r2, r2, #1
 8001faa:	9203      	str	r2, [sp, #12]
 8001fac:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fae:	9404      	str	r4, [sp, #16]
 8001fb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fb2:	f042 0202 	orr.w	r2, r2, #2
 8001fb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001fb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fba:	f002 0202 	and.w	r2, r2, #2
 8001fbe:	9204      	str	r2, [sp, #16]
 8001fc0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001fc2:	9405      	str	r4, [sp, #20]
 8001fc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fc6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001fca:	631a      	str	r2, [r3, #48]	; 0x30
 8001fcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fce:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001fd2:	9205      	str	r2, [sp, #20]
 8001fd4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fd6:	9406      	str	r4, [sp, #24]
 8001fd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fda:	f042 0204 	orr.w	r2, r2, #4
 8001fde:	631a      	str	r2, [r3, #48]	; 0x30
 8001fe0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fe2:	f002 0204 	and.w	r2, r2, #4
 8001fe6:	9206      	str	r2, [sp, #24]
 8001fe8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fea:	9407      	str	r4, [sp, #28]
 8001fec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fee:	f042 0208 	orr.w	r2, r2, #8
 8001ff2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ff6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001ffa:	2600      	movs	r6, #0
 8001ffc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ffe:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002000:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002002:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002004:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002008:	2302      	movs	r3, #2
 800200a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800200e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002012:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002014:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002016:	f008 f97f 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800201a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800201c:	f641 0258 	movw	r2, #6232	; 0x1858
 8002020:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002022:	4832      	ldr	r0, [pc, #200]	; (80020ec <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002024:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002026:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800202a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800202e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002032:	f008 f971 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002036:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002038:	2203      	movs	r2, #3
 800203a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	482c      	ldr	r0, [pc, #176]	; (80020f0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800203e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002042:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002046:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204a:	f008 f965 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002050:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002054:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002056:	4826      	ldr	r0, [pc, #152]	; (80020f0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002058:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800205a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800205e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002062:	f008 f959 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002066:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002068:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 800206c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800206e:	4821      	ldr	r0, [pc, #132]	; (80020f4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002070:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002072:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002076:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800207a:	f008 f94d 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002080:	22c0      	movs	r2, #192	; 0xc0
 8002082:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002084:	481c      	ldr	r0, [pc, #112]	; (80020f8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002086:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002088:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800208c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002090:	f008 f942 	bl	800a318 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002094:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002096:	2208      	movs	r2, #8
 8002098:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800209a:	4818      	ldr	r0, [pc, #96]	; (80020fc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800209c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800209e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020a2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020a6:	f008 f937 	bl	800a318 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020aa:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020ac:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020ae:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b2:	4810      	ldr	r0, [pc, #64]	; (80020f4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020b4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020b8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020bc:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c0:	f008 f92a 	bl	800a318 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80020c4:	4622      	mov	r2, r4
 80020c6:	2105      	movs	r1, #5
 80020c8:	2058      	movs	r0, #88	; 0x58
 80020ca:	f008 f8af 	bl	800a22c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80020ce:	2058      	movs	r0, #88	; 0x58
 80020d0:	f008 f8ea 	bl	800a2a8 <HAL_NVIC_EnableIRQ>
}
 80020d4:	b01a      	add	sp, #104	; 0x68
 80020d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80020da:	f7ff fd39 	bl	8001b50 <Error_Handler>
 80020de:	e745      	b.n	8001f6c <HAL_LTDC_MspInit+0x48>
 80020e0:	40016800 	.word	0x40016800
 80020e4:	40023800 	.word	0x40023800
 80020e8:	40021400 	.word	0x40021400
 80020ec:	40020000 	.word	0x40020000
 80020f0:	40020400 	.word	0x40020400
 80020f4:	40021800 	.word	0x40021800
 80020f8:	40020800 	.word	0x40020800
 80020fc:	40020c00 	.word	0x40020c00

08002100 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002100:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002102:	4a1b      	ldr	r2, [pc, #108]	; (8002170 <HAL_SPI_MspInit+0x70>)
 8002104:	6801      	ldr	r1, [r0, #0]
{
 8002106:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002108:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800210a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800210c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002110:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002114:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002116:	d001      	beq.n	800211c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002118:	b008      	add	sp, #32
 800211a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800211c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002120:	9300      	str	r3, [sp, #0]
 8002122:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002124:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002128:	6450      	str	r0, [r2, #68]	; 0x44
 800212a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800212c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002130:	9000      	str	r0, [sp, #0]
 8002132:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002134:	9301      	str	r3, [sp, #4]
 8002136:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002138:	480e      	ldr	r0, [pc, #56]	; (8002174 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800213a:	f043 0320 	orr.w	r3, r3, #32
 800213e:	6313      	str	r3, [r2, #48]	; 0x30
 8002140:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002142:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002168 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002146:	f003 0320 	and.w	r3, r3, #32
 800214a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800214c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800214e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002150:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002152:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002156:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800215a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800215c:	f008 f8dc 	bl	800a318 <HAL_GPIO_Init>
}
 8002160:	b008      	add	sp, #32
 8002162:	bd10      	pop	{r4, pc}
 8002164:	f3af 8000 	nop.w
 8002168:	00000380 	.word	0x00000380
 800216c:	00000002 	.word	0x00000002
 8002170:	40015000 	.word	0x40015000
 8002174:	40021400 	.word	0x40021400

08002178 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002178:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 800217a:	4a21      	ldr	r2, [pc, #132]	; (8002200 <HAL_TIM_Base_MspInit+0x88>)
 800217c:	6803      	ldr	r3, [r0, #0]
 800217e:	4293      	cmp	r3, r2
{
 8002180:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 8002182:	d008      	beq.n	8002196 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8002184:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002188:	d023      	beq.n	80021d2 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 800218a:	4a1e      	ldr	r2, [pc, #120]	; (8002204 <HAL_TIM_Base_MspInit+0x8c>)
 800218c:	4293      	cmp	r3, r2
 800218e:	d011      	beq.n	80021b4 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002190:	b005      	add	sp, #20
 8002192:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002196:	4b1c      	ldr	r3, [pc, #112]	; (8002208 <HAL_TIM_Base_MspInit+0x90>)
 8002198:	2200      	movs	r2, #0
 800219a:	9201      	str	r2, [sp, #4]
 800219c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800219e:	f042 0201 	orr.w	r2, r2, #1
 80021a2:	645a      	str	r2, [r3, #68]	; 0x44
 80021a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80021a6:	f003 0301 	and.w	r3, r3, #1
 80021aa:	9301      	str	r3, [sp, #4]
 80021ac:	9b01      	ldr	r3, [sp, #4]
}
 80021ae:	b005      	add	sp, #20
 80021b0:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 80021b4:	4b14      	ldr	r3, [pc, #80]	; (8002208 <HAL_TIM_Base_MspInit+0x90>)
 80021b6:	2200      	movs	r2, #0
 80021b8:	9203      	str	r2, [sp, #12]
 80021ba:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80021bc:	f042 0202 	orr.w	r2, r2, #2
 80021c0:	641a      	str	r2, [r3, #64]	; 0x40
 80021c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021c4:	f003 0302 	and.w	r3, r3, #2
 80021c8:	9303      	str	r3, [sp, #12]
 80021ca:	9b03      	ldr	r3, [sp, #12]
}
 80021cc:	b005      	add	sp, #20
 80021ce:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021d2:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80021d6:	2200      	movs	r2, #0
 80021d8:	9202      	str	r2, [sp, #8]
 80021da:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021dc:	f041 0101 	orr.w	r1, r1, #1
 80021e0:	6419      	str	r1, [r3, #64]	; 0x40
 80021e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021e4:	f003 0301 	and.w	r3, r3, #1
 80021e8:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80021ea:	201c      	movs	r0, #28
 80021ec:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021ee:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80021f0:	f008 f81c 	bl	800a22c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80021f4:	201c      	movs	r0, #28
}
 80021f6:	b005      	add	sp, #20
 80021f8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80021fc:	f008 b854 	b.w	800a2a8 <HAL_NVIC_EnableIRQ>
 8002200:	40010000 	.word	0x40010000
 8002204:	40000400 	.word	0x40000400
 8002208:	40023800 	.word	0x40023800

0800220c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800220c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800220e:	4b2b      	ldr	r3, [pc, #172]	; (80022bc <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002210:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002212:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002214:	2200      	movs	r2, #0
 8002216:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002218:	2c00      	cmp	r4, #0
 800221a:	d14c      	bne.n	80022b6 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800221c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800221e:	4a28      	ldr	r2, [pc, #160]	; (80022c0 <HAL_SDRAM_MspInit+0xb4>)
 8002220:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002222:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002224:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002226:	4827      	ldr	r0, [pc, #156]	; (80022c4 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002228:	433b      	orrs	r3, r7
 800222a:	6393      	str	r3, [r2, #56]	; 0x38
 800222c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800222e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002230:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002232:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002234:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002238:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800223a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800223c:	2302      	movs	r3, #2
 800223e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002242:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002246:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002248:	f008 f866 	bl	800a318 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800224c:	481e      	ldr	r0, [pc, #120]	; (80022c8 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800224e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002250:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002252:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002254:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002258:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800225c:	f008 f85c 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002260:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002264:	4819      	ldr	r0, [pc, #100]	; (80022cc <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002266:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002268:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800226a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800226e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002272:	f008 f851 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002276:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800227a:	4815      	ldr	r0, [pc, #84]	; (80022d0 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800227c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800227e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002280:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002284:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002288:	f008 f846 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800228c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002290:	4810      	ldr	r0, [pc, #64]	; (80022d4 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002292:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002294:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002296:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800229a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800229e:	f008 f83b 	bl	800a318 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022a2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022a4:	480c      	ldr	r0, [pc, #48]	; (80022d8 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022a6:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022a8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022aa:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ae:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022b0:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022b2:	f008 f831 	bl	800a318 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80022b6:	b009      	add	sp, #36	; 0x24
 80022b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022ba:	bf00      	nop
 80022bc:	20000728 	.word	0x20000728
 80022c0:	40023800 	.word	0x40023800
 80022c4:	40021400 	.word	0x40021400
 80022c8:	40020800 	.word	0x40020800
 80022cc:	40021800 	.word	0x40021800
 80022d0:	40021000 	.word	0x40021000
 80022d4:	40020c00 	.word	0x40020c00
 80022d8:	40020400 	.word	0x40020400

080022dc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80022dc:	b570      	push	{r4, r5, r6, lr}
 80022de:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80022e0:	4b23      	ldr	r3, [pc, #140]	; (8002370 <HAL_InitTick+0x94>)
 80022e2:	2200      	movs	r2, #0
 80022e4:	9202      	str	r2, [sp, #8]
 80022e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80022e8:	f042 0210 	orr.w	r2, r2, #16
 80022ec:	641a      	str	r2, [r3, #64]	; 0x40
 80022ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022f0:	f003 0310 	and.w	r3, r3, #16
 80022f4:	9302      	str	r3, [sp, #8]
{
 80022f6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80022f8:	a901      	add	r1, sp, #4
 80022fa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80022fc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80022fe:	f00a fa53 	bl	800c7a8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002302:	9b06      	ldr	r3, [sp, #24]
 8002304:	b9d3      	cbnz	r3, 800233c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002306:	f00a fa3f 	bl	800c788 <HAL_RCC_GetPCLK1Freq>
 800230a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800230c:	4a19      	ldr	r2, [pc, #100]	; (8002374 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800230e:	4c1a      	ldr	r4, [pc, #104]	; (8002378 <HAL_InitTick+0x9c>)
 8002310:	491a      	ldr	r1, [pc, #104]	; (800237c <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002312:	fba2 2303 	umull	r2, r3, r2, r3
 8002316:	0c9b      	lsrs	r3, r3, #18
 8002318:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800231a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800231c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002320:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002322:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002326:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002328:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800232a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800232c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800232e:	f00b f86b 	bl	800d408 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002332:	4606      	mov	r6, r0
 8002334:	b130      	cbz	r0, 8002344 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002336:	4630      	mov	r0, r6
 8002338:	b008      	add	sp, #32
 800233a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800233c:	f00a fa24 	bl	800c788 <HAL_RCC_GetPCLK1Freq>
 8002340:	0043      	lsls	r3, r0, #1
 8002342:	e7e3      	b.n	800230c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002344:	4620      	mov	r0, r4
 8002346:	f00b f8ed 	bl	800d524 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800234a:	4606      	mov	r6, r0
 800234c:	2800      	cmp	r0, #0
 800234e:	d1f2      	bne.n	8002336 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002350:	2036      	movs	r0, #54	; 0x36
 8002352:	f007 ffa9 	bl	800a2a8 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002356:	2d0f      	cmp	r5, #15
 8002358:	d901      	bls.n	800235e <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800235a:	2601      	movs	r6, #1
 800235c:	e7eb      	b.n	8002336 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800235e:	4632      	mov	r2, r6
 8002360:	4629      	mov	r1, r5
 8002362:	2036      	movs	r0, #54	; 0x36
 8002364:	f007 ff62 	bl	800a22c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002368:	4b05      	ldr	r3, [pc, #20]	; (8002380 <HAL_InitTick+0xa4>)
 800236a:	601d      	str	r5, [r3, #0]
 800236c:	e7e3      	b.n	8002336 <HAL_InitTick+0x5a>
 800236e:	bf00      	nop
 8002370:	40023800 	.word	0x40023800
 8002374:	431bde83 	.word	0x431bde83
 8002378:	2000072c 	.word	0x2000072c
 800237c:	40001000 	.word	0x40001000
 8002380:	20000080 	.word	0x20000080

08002384 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002384:	4770      	bx	lr
 8002386:	bf00      	nop

08002388 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002388:	e7fe      	b.n	8002388 <HardFault_Handler>
 800238a:	bf00      	nop

0800238c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800238c:	e7fe      	b.n	800238c <MemManage_Handler>
 800238e:	bf00      	nop

08002390 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002390:	e7fe      	b.n	8002390 <BusFault_Handler>
 8002392:	bf00      	nop

08002394 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002394:	e7fe      	b.n	8002394 <UsageFault_Handler>
 8002396:	bf00      	nop

08002398 <DebugMon_Handler>:
 8002398:	4770      	bx	lr
 800239a:	bf00      	nop

0800239c <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 800239c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800239e:	20c8      	movs	r0, #200	; 0xc8
 80023a0:	f007 ff20 	bl	800a1e4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80023a4:	4804      	ldr	r0, [pc, #16]	; (80023b8 <EXTI3_IRQHandler+0x1c>)
 80023a6:	2200      	movs	r2, #0
 80023a8:	2120      	movs	r1, #32
 80023aa:	f008 f8f9 	bl	800a5a0 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80023ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80023b2:	2008      	movs	r0, #8
 80023b4:	f008 b904 	b.w	800a5c0 <HAL_GPIO_EXTI_IRQHandler>
 80023b8:	40021000 	.word	0x40021000

080023bc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80023bc:	4801      	ldr	r0, [pc, #4]	; (80023c4 <TIM6_DAC_IRQHandler+0x8>)
 80023be:	f00b b8f5 	b.w	800d5ac <HAL_TIM_IRQHandler>
 80023c2:	bf00      	nop
 80023c4:	2000072c 	.word	0x2000072c

080023c8 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80023c8:	4801      	ldr	r0, [pc, #4]	; (80023d0 <I2C3_EV_IRQHandler+0x8>)
 80023ca:	f009 b859 	b.w	800b480 <HAL_I2C_EV_IRQHandler>
 80023ce:	bf00      	nop
 80023d0:	200001a0 	.word	0x200001a0

080023d4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023d4:	4801      	ldr	r0, [pc, #4]	; (80023dc <LTDC_IRQHandler+0x8>)
 80023d6:	f009 bdcd 	b.w	800bf74 <HAL_LTDC_IRQHandler>
 80023da:	bf00      	nop
 80023dc:	200001f4 	.word	0x200001f4

080023e0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80023e0:	2001      	movs	r0, #1
 80023e2:	4770      	bx	lr

080023e4 <_kill>:

int _kill(int pid, int sig)
{
 80023e4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80023e6:	f028 ff6b 	bl	802b2c0 <__errno>
 80023ea:	2316      	movs	r3, #22
 80023ec:	6003      	str	r3, [r0, #0]
	return -1;
}
 80023ee:	f04f 30ff 	mov.w	r0, #4294967295
 80023f2:	bd08      	pop	{r3, pc}

080023f4 <_exit>:

void _exit (int status)
{
 80023f4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80023f6:	f028 ff63 	bl	802b2c0 <__errno>
 80023fa:	2316      	movs	r3, #22
 80023fc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80023fe:	e7fe      	b.n	80023fe <_exit+0xa>

08002400 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002400:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002402:	1e16      	subs	r6, r2, #0
 8002404:	dd07      	ble.n	8002416 <_read+0x16>
 8002406:	460c      	mov	r4, r1
 8002408:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800240a:	f3af 8000 	nop.w
 800240e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002412:	42a5      	cmp	r5, r4
 8002414:	d1f9      	bne.n	800240a <_read+0xa>
	}

return len;
}
 8002416:	4630      	mov	r0, r6
 8002418:	bd70      	pop	{r4, r5, r6, pc}
 800241a:	bf00      	nop

0800241c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800241c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800241e:	1e16      	subs	r6, r2, #0
 8002420:	dd07      	ble.n	8002432 <_write+0x16>
 8002422:	460c      	mov	r4, r1
 8002424:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002426:	f814 0b01 	ldrb.w	r0, [r4], #1
 800242a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800242e:	42ac      	cmp	r4, r5
 8002430:	d1f9      	bne.n	8002426 <_write+0xa>
	}
	return len;
}
 8002432:	4630      	mov	r0, r6
 8002434:	bd70      	pop	{r4, r5, r6, pc}
 8002436:	bf00      	nop

08002438 <_close>:

int _close(int file)
{
	return -1;
}
 8002438:	f04f 30ff 	mov.w	r0, #4294967295
 800243c:	4770      	bx	lr
 800243e:	bf00      	nop

08002440 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002440:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002444:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002446:	2000      	movs	r0, #0
 8002448:	4770      	bx	lr
 800244a:	bf00      	nop

0800244c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800244c:	2001      	movs	r0, #1
 800244e:	4770      	bx	lr

08002450 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002450:	2000      	movs	r0, #0
 8002452:	4770      	bx	lr

08002454 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002454:	4a0b      	ldr	r2, [pc, #44]	; (8002484 <_sbrk+0x30>)
{
 8002456:	b508      	push	{r3, lr}
 8002458:	4603      	mov	r3, r0
	if (heap_end == 0)
 800245a:	6810      	ldr	r0, [r2, #0]
 800245c:	b128      	cbz	r0, 800246a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800245e:	4403      	add	r3, r0
 8002460:	4669      	mov	r1, sp
 8002462:	428b      	cmp	r3, r1
 8002464:	d807      	bhi.n	8002476 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002466:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002468:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800246a:	4807      	ldr	r0, [pc, #28]	; (8002488 <_sbrk+0x34>)
 800246c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800246e:	4403      	add	r3, r0
 8002470:	4669      	mov	r1, sp
 8002472:	428b      	cmp	r3, r1
 8002474:	d9f7      	bls.n	8002466 <_sbrk+0x12>
		errno = ENOMEM;
 8002476:	f028 ff23 	bl	802b2c0 <__errno>
 800247a:	230c      	movs	r3, #12
 800247c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800247e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002482:	bd08      	pop	{r3, pc}
 8002484:	20000774 	.word	0x20000774
 8002488:	200139e0 	.word	0x200139e0

0800248c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800248c:	4770      	bx	lr
 800248e:	bf00      	nop

08002490 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002490:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8002492:	f000 fba9 	bl	8002be8 <touchgfx_components_init>
  touchgfx_init();
}
 8002496:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 800249a:	f000 bb33 	b.w	8002b04 <touchgfx_init>
 800249e:	bf00      	nop

080024a0 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80024a0:	f000 bba4 	b.w	8002bec <touchgfx_taskEntry>

080024a4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80024a4:	4770      	bx	lr

080024a6 <_ZN20STM32TouchControllerD0Ev>:
 80024a6:	b510      	push	{r4, lr}
 80024a8:	2104      	movs	r1, #4
 80024aa:	4604      	mov	r4, r0
 80024ac:	f027 fd23 	bl	8029ef6 <_ZdlPvj>
 80024b0:	4620      	mov	r0, r4
 80024b2:	bd10      	pop	{r4, pc}

080024b4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80024b4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80024b6:	4b0c      	ldr	r3, [pc, #48]	; (80024e8 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80024b8:	4c0c      	ldr	r4, [pc, #48]	; (80024ec <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80024ba:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80024bc:	4b0c      	ldr	r3, [pc, #48]	; (80024f0 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80024be:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80024c0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80024c2:	6863      	ldr	r3, [r4, #4]
 80024c4:	4798      	blx	r3
 80024c6:	f640 0311 	movw	r3, #2065	; 0x811
 80024ca:	4298      	cmp	r0, r3
 80024cc:	d10a      	bne.n	80024e4 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80024ce:	4d09      	ldr	r5, [pc, #36]	; (80024f4 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80024d0:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80024d2:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80024d4:	2082      	movs	r0, #130	; 0x82
 80024d6:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80024d8:	682b      	ldr	r3, [r5, #0]
 80024da:	2082      	movs	r0, #130	; 0x82
 80024dc:	68db      	ldr	r3, [r3, #12]
 80024de:	4798      	blx	r3
 80024e0:	2000      	movs	r0, #0
    }

    return ret;
}
 80024e2:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80024e4:	2001      	movs	r0, #1
 80024e6:	e7fc      	b.n	80024e2 <_Z11BSP_TS_Inittt+0x2e>
 80024e8:	20000778 	.word	0x20000778
 80024ec:	20000050 	.word	0x20000050
 80024f0:	2000077a 	.word	0x2000077a
 80024f4:	2000077c 	.word	0x2000077c

080024f8 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80024f8:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80024fc:	20f0      	movs	r0, #240	; 0xf0
 80024fe:	f7ff bfd9 	b.w	80024b4 <_Z11BSP_TS_Inittt>
	...

08002504 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002504:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002506:	4d33      	ldr	r5, [pc, #204]	; (80025d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8002508:	682b      	ldr	r3, [r5, #0]
{
 800250a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800250c:	691b      	ldr	r3, [r3, #16]
 800250e:	2082      	movs	r0, #130	; 0x82
 8002510:	4798      	blx	r3
 8002512:	b280      	uxth	r0, r0
 8002514:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8002516:	2800      	cmp	r0, #0
 8002518:	d04a      	beq.n	80025b0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800251a:	682b      	ldr	r3, [r5, #0]
 800251c:	f10d 0206 	add.w	r2, sp, #6
 8002520:	695b      	ldr	r3, [r3, #20]
 8002522:	a901      	add	r1, sp, #4
 8002524:	2082      	movs	r0, #130	; 0x82
 8002526:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8002528:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800252c:	f640 6274 	movw	r2, #3700	; 0xe74
 8002530:	4293      	cmp	r3, r2
 8002532:	d93f      	bls.n	80025b4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002534:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8002538:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800253c:	1ad2      	subs	r2, r2, r3
 800253e:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002540:	2a0a      	cmp	r2, #10
 8002542:	d93d      	bls.n	80025c0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8002544:	230b      	movs	r3, #11
 8002546:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800254a:	4b23      	ldr	r3, [pc, #140]	; (80025d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 800254c:	881b      	ldrh	r3, [r3, #0]
 800254e:	429a      	cmp	r2, r3
 8002550:	d901      	bls.n	8002556 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8002552:	3b01      	subs	r3, #1
 8002554:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8002556:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800255a:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800255e:	428b      	cmp	r3, r1
 8002560:	d830      	bhi.n	80025c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002562:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8002566:	330e      	adds	r3, #14
 8002568:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800256a:	210f      	movs	r1, #15
 800256c:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002570:	491a      	ldr	r1, [pc, #104]	; (80025dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002572:	8809      	ldrh	r1, [r1, #0]
 8002574:	428b      	cmp	r3, r1
 8002576:	d901      	bls.n	800257c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002578:	3901      	subs	r1, #1
 800257a:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 800257c:	4e18      	ldr	r6, [pc, #96]	; (80025e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 800257e:	4d19      	ldr	r5, [pc, #100]	; (80025e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002580:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002582:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002584:	4283      	cmp	r3, r0
 8002586:	b281      	uxth	r1, r0
 8002588:	bf8c      	ite	hi
 800258a:	1a59      	subhi	r1, r3, r1
 800258c:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 800258e:	b2b8      	uxth	r0, r7
 8002590:	42ba      	cmp	r2, r7
 8002592:	bf8c      	ite	hi
 8002594:	1a10      	subhi	r0, r2, r0
 8002596:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002598:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 800259a:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 800259c:	4401      	add	r1, r0
 800259e:	2905      	cmp	r1, #5
        {
            _x = x;
 80025a0:	bfc8      	it	gt
 80025a2:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80025a4:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80025a6:	bfc8      	it	gt
 80025a8:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80025aa:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80025ac:	682b      	ldr	r3, [r5, #0]
 80025ae:	80a3      	strh	r3, [r4, #4]
    }
}
 80025b0:	b003      	add	sp, #12
 80025b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80025b4:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80025b6:	bf9c      	itt	ls
 80025b8:	23b4      	movls	r3, #180	; 0xb4
 80025ba:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80025be:	e7bb      	b.n	8002538 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80025c0:	2200      	movs	r2, #0
 80025c2:	e7c8      	b.n	8002556 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80025c4:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80025c8:	3308      	adds	r3, #8
 80025ca:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80025cc:	2b0e      	cmp	r3, #14
 80025ce:	d8cc      	bhi.n	800256a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80025d0:	2300      	movs	r3, #0
 80025d2:	e7d3      	b.n	800257c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80025d4:	2000077c 	.word	0x2000077c
 80025d8:	2000077a 	.word	0x2000077a
 80025dc:	20000778 	.word	0x20000778
 80025e0:	20000780 	.word	0x20000780
 80025e4:	20000784 	.word	0x20000784

080025e8 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80025e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80025ea:	4668      	mov	r0, sp
{
 80025ec:	460d      	mov	r5, r1
 80025ee:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80025f0:	f7ff ff88 	bl	8002504 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 80025f4:	f8bd 0000 	ldrh.w	r0, [sp]
 80025f8:	b148      	cbz	r0, 800260e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 80025fa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80025fe:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002600:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002604:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002606:	4b03      	ldr	r3, [pc, #12]	; (8002614 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002608:	223c      	movs	r2, #60	; 0x3c
 800260a:	601a      	str	r2, [r3, #0]
        return true;
 800260c:	2001      	movs	r0, #1
}
 800260e:	b003      	add	sp, #12
 8002610:	bd30      	pop	{r4, r5, pc}
 8002612:	bf00      	nop
 8002614:	2000000c 	.word	0x2000000c

08002618 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002618:	b110      	cbz	r0, 8002620 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800261a:	2802      	cmp	r0, #2
 800261c:	d009      	beq.n	8002632 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800261e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002620:	4b07      	ldr	r3, [pc, #28]	; (8002640 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002622:	681a      	ldr	r2, [r3, #0]
 8002624:	fab2 f282 	clz	r2, r2
 8002628:	0952      	lsrs	r2, r2, #5
 800262a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800262c:	4805      	ldr	r0, [pc, #20]	; (8002644 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800262e:	f007 bfb7 	b.w	800a5a0 <HAL_GPIO_WritePin>
 8002632:	4b03      	ldr	r3, [pc, #12]	; (8002640 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002634:	689a      	ldr	r2, [r3, #8]
 8002636:	fab2 f282 	clz	r2, r2
 800263a:	0952      	lsrs	r2, r2, #5
 800263c:	2110      	movs	r1, #16
 800263e:	e7f5      	b.n	800262c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002640:	20000788 	.word	0x20000788
 8002644:	40021000 	.word	0x40021000

08002648 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002648:	b110      	cbz	r0, 8002650 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800264a:	2802      	cmp	r0, #2
 800264c:	d009      	beq.n	8002662 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800264e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002650:	4b07      	ldr	r3, [pc, #28]	; (8002670 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002652:	681a      	ldr	r2, [r3, #0]
 8002654:	3a00      	subs	r2, #0
 8002656:	bf18      	it	ne
 8002658:	2201      	movne	r2, #1
 800265a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 800265c:	4805      	ldr	r0, [pc, #20]	; (8002674 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 800265e:	f007 bf9f 	b.w	800a5a0 <HAL_GPIO_WritePin>
 8002662:	4b03      	ldr	r3, [pc, #12]	; (8002670 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002664:	689a      	ldr	r2, [r3, #8]
 8002666:	3a00      	subs	r2, #0
 8002668:	bf18      	it	ne
 800266a:	2201      	movne	r2, #1
 800266c:	2110      	movs	r1, #16
 800266e:	e7f5      	b.n	800265c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002670:	20000788 	.word	0x20000788
 8002674:	40021000 	.word	0x40021000

08002678 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002678:	b110      	cbz	r0, 8002680 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800267a:	2802      	cmp	r0, #2
 800267c:	d004      	beq.n	8002688 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 800267e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002680:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002682:	4802      	ldr	r0, [pc, #8]	; (800268c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002684:	f007 bf90 	b.w	800a5a8 <HAL_GPIO_TogglePin>
 8002688:	2110      	movs	r1, #16
 800268a:	e7fa      	b.n	8002682 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 800268c:	40021000 	.word	0x40021000

08002690 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002690:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002692:	b130      	cbz	r0, 80026a2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002694:	2802      	cmp	r0, #2
 8002696:	d009      	beq.n	80026ac <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002698:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800269a:	1e43      	subs	r3, r0, #1
 800269c:	4258      	negs	r0, r3
 800269e:	4158      	adcs	r0, r3
 80026a0:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80026a2:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80026a4:	4802      	ldr	r0, [pc, #8]	; (80026b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80026a6:	f007 ff75 	bl	800a594 <HAL_GPIO_ReadPin>
        break;
 80026aa:	e7f6      	b.n	800269a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80026ac:	2110      	movs	r1, #16
 80026ae:	e7f9      	b.n	80026a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80026b0:	40021000 	.word	0x40021000

080026b4 <_ZN8touchgfx4GPIO4initEv>:
{
 80026b4:	b570      	push	{r4, r5, r6, lr}
 80026b6:	4d08      	ldr	r5, [pc, #32]	; (80026d8 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80026b8:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80026ba:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80026bc:	b2e0      	uxtb	r0, r4
 80026be:	f7ff ffe7 	bl	8002690 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80026c2:	b118      	cbz	r0, 80026cc <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80026c4:	682b      	ldr	r3, [r5, #0]
 80026c6:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80026c8:	bf18      	it	ne
 80026ca:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80026cc:	3401      	adds	r4, #1
 80026ce:	2c05      	cmp	r4, #5
 80026d0:	f105 0504 	add.w	r5, r5, #4
 80026d4:	d1f2      	bne.n	80026bc <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80026d6:	bd70      	pop	{r4, r5, r6, pc}
 80026d8:	20000788 	.word	0x20000788

080026dc <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80026dc:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80026de:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80026e2:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80026e6:	4770      	bx	lr

080026e8 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80026e8:	2000      	movs	r0, #0
 80026ea:	4770      	bx	lr

080026ec <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80026ec:	4b03      	ldr	r3, [pc, #12]	; (80026fc <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80026ee:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80026f0:	3900      	subs	r1, #0
 80026f2:	bf18      	it	ne
 80026f4:	2101      	movne	r1, #1
 80026f6:	7019      	strb	r1, [r3, #0]
    }
 80026f8:	4770      	bx	lr
 80026fa:	bf00      	nop
 80026fc:	20012da3 	.word	0x20012da3

08002700 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002700:	2000      	movs	r0, #0
 8002702:	4770      	bx	lr

08002704 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002704:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002706:	b10b      	cbz	r3, 800270c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002708:	4608      	mov	r0, r1
 800270a:	4718      	bx	r3
        }
    }
 800270c:	4770      	bx	lr

0800270e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800270e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002712:	4770      	bx	lr

08002714 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002714:	6840      	ldr	r0, [r0, #4]
 8002716:	6803      	ldr	r3, [r0, #0]
 8002718:	699b      	ldr	r3, [r3, #24]
 800271a:	4718      	bx	r3

0800271c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800271c:	4770      	bx	lr

0800271e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800271e:	4770      	bx	lr

08002720 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002720:	4770      	bx	lr
	...

08002724 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002724:	b510      	push	{r4, lr}
 8002726:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002728:	f000 fb4c 	bl	8002dc4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 800272c:	6823      	ldr	r3, [r4, #0]
 800272e:	4903      	ldr	r1, [pc, #12]	; (800273c <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002730:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002734:	4620      	mov	r0, r4
}
 8002736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800273a:	4718      	bx	r3
 800273c:	d0000000 	.word	0xd0000000

08002740 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002740:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002742:	6803      	ldr	r3, [r0, #0]
{
 8002744:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002746:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800274a:	4798      	blx	r3
    enableInterrupts();
 800274c:	6823      	ldr	r3, [r4, #0]
 800274e:	4620      	mov	r0, r4
 8002750:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002752:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002754:	f000 f8ec 	bl	8002930 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002758:	6823      	ldr	r3, [r4, #0]
 800275a:	4620      	mov	r0, r4
 800275c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800275e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002760:	2029      	movs	r0, #41	; 0x29
 8002762:	f7ff f981 	bl	8001a68 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002766:	f000 f8e3 	bl	8002930 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800276a:	6823      	ldr	r3, [r4, #0]
 800276c:	4620      	mov	r0, r4
 800276e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002770:	4798      	blx	r3
    for (;;)
 8002772:	e7f8      	b.n	8002766 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002774 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002774:	b510      	push	{r4, lr}
 8002776:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002778:	f00f f8a4 	bl	80118c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800277c:	6823      	ldr	r3, [r4, #0]
 800277e:	4620      	mov	r0, r4
 8002780:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002788:	4718      	bx	r3

0800278a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800278a:	f000 bb0d 	b.w	8002da8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800278e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800278e:	f000 bb11 	b.w	8002db4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002792 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002792:	f000 bb35 	b.w	8002e00 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002796 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002796:	f000 badd 	b.w	8002d54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800279a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800279a:	f000 bae3 	b.w	8002d64 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800279e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800279e:	f000 bb3b 	b.w	8002e18 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080027a2 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80027a2:	f000 bae7 	b.w	8002d74 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080027a6 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80027a6:	f00e baf9 	b.w	8010d9c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080027aa <_ZN11TouchGFXHALD0Ev>:
 80027aa:	b510      	push	{r4, lr}
 80027ac:	217c      	movs	r1, #124	; 0x7c
 80027ae:	4604      	mov	r4, r0
 80027b0:	f027 fba1 	bl	8029ef6 <_ZdlPvj>
 80027b4:	4620      	mov	r0, r4
 80027b6:	bd10      	pop	{r4, pc}

080027b8 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80027b8:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80027bc:	b11b      	cbz	r3, 80027c6 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80027be:	6840      	ldr	r0, [r0, #4]
 80027c0:	6803      	ldr	r3, [r0, #0]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	4718      	bx	r3
    }
 80027c6:	4618      	mov	r0, r3
 80027c8:	4770      	bx	lr
	...

080027cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80027cc:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80027ce:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80027d2:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80027d6:	4b0c      	ldr	r3, [pc, #48]	; (8002808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80027d8:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80027da:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80027dc:	d009      	beq.n	80027f2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80027de:	b93a      	cbnz	r2, 80027f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80027e0:	4a0a      	ldr	r2, [pc, #40]	; (800280c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80027e2:	490b      	ldr	r1, [pc, #44]	; (8002810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80027e4:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80027e6:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80027e8:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80027ea:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80027ec:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80027ee:	701a      	strb	r2, [r3, #0]
    }
 80027f0:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80027f2:	2a00      	cmp	r2, #0
 80027f4:	d0fc      	beq.n	80027f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80027f6:	4a05      	ldr	r2, [pc, #20]	; (800280c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80027f8:	4905      	ldr	r1, [pc, #20]	; (8002810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80027fa:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80027fc:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80027fe:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002800:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002802:	2200      	movs	r2, #0
 8002804:	e7f3      	b.n	80027ee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002806:	bf00      	nop
 8002808:	20012d9c 	.word	0x20012d9c
 800280c:	20012d98 	.word	0x20012d98
 8002810:	20012d9a 	.word	0x20012d9a

08002814 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002814:	b570      	push	{r4, r5, r6, lr}
 8002816:	460d      	mov	r5, r1
 8002818:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800281a:	b935      	cbnz	r5, 800282a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800281c:	4b09      	ldr	r3, [pc, #36]	; (8002844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800281e:	4a0a      	ldr	r2, [pc, #40]	; (8002848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002820:	480a      	ldr	r0, [pc, #40]	; (800284c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002822:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002826:	f028 fa4d 	bl	802acc4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800282a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800282e:	4b08      	ldr	r3, [pc, #32]	; (8002850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002830:	3a00      	subs	r2, #0
 8002832:	bf18      	it	ne
 8002834:	2201      	movne	r2, #1
 8002836:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002838:	6803      	ldr	r3, [r0, #0]
    }
 800283a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800283e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002842:	4718      	bx	r3
 8002844:	0802bf10 	.word	0x0802bf10
 8002848:	0802bf48 	.word	0x0802bf48
 800284c:	0802bf96 	.word	0x0802bf96
 8002850:	20012da2 	.word	0x20012da2

08002854 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002854:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002856:	4b09      	ldr	r3, [pc, #36]	; (800287c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002858:	881b      	ldrh	r3, [r3, #0]
 800285a:	428b      	cmp	r3, r1
 800285c:	d803      	bhi.n	8002866 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800285e:	4b08      	ldr	r3, [pc, #32]	; (8002880 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002860:	881b      	ldrh	r3, [r3, #0]
 8002862:	4293      	cmp	r3, r2
 8002864:	d905      	bls.n	8002872 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002866:	4b07      	ldr	r3, [pc, #28]	; (8002884 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002868:	4a07      	ldr	r2, [pc, #28]	; (8002888 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800286a:	4808      	ldr	r0, [pc, #32]	; (800288c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800286c:	219e      	movs	r1, #158	; 0x9e
 800286e:	f028 fa29 	bl	802acc4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002872:	4b07      	ldr	r3, [pc, #28]	; (8002890 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002874:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002876:	4b07      	ldr	r3, [pc, #28]	; (8002894 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002878:	801a      	strh	r2, [r3, #0]
    }
 800287a:	bd08      	pop	{r3, pc}
 800287c:	20012d98 	.word	0x20012d98
 8002880:	20012d9a 	.word	0x20012d9a
 8002884:	0802bfdb 	.word	0x0802bfdb
 8002888:	0802c03e 	.word	0x0802c03e
 800288c:	0802bf96 	.word	0x0802bf96
 8002890:	20012d9e 	.word	0x20012d9e
 8002894:	20012da0 	.word	0x20012da0

08002898 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002898:	2101      	movs	r1, #1
{
 800289a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800289c:	2200      	movs	r2, #0
 800289e:	4608      	mov	r0, r1
 80028a0:	f00b f886 	bl	800d9b0 <osSemaphoreNew>
 80028a4:	4b0a      	ldr	r3, [pc, #40]	; (80028d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80028a6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80028a8:	b928      	cbnz	r0, 80028b6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80028aa:	4b0a      	ldr	r3, [pc, #40]	; (80028d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80028ac:	4a0a      	ldr	r2, [pc, #40]	; (80028d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80028ae:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80028b0:	480a      	ldr	r0, [pc, #40]	; (80028dc <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80028b2:	f028 fa07 	bl	802acc4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80028b6:	2200      	movs	r2, #0
 80028b8:	2104      	movs	r1, #4
 80028ba:	2001      	movs	r0, #1
 80028bc:	f00b f92c 	bl	800db18 <osMessageQueueNew>
 80028c0:	4b07      	ldr	r3, [pc, #28]	; (80028e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80028c2:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80028c4:	b918      	cbnz	r0, 80028ce <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80028c6:	4b07      	ldr	r3, [pc, #28]	; (80028e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80028c8:	4a03      	ldr	r2, [pc, #12]	; (80028d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80028ca:	212c      	movs	r1, #44	; 0x2c
 80028cc:	e7f0      	b.n	80028b0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80028ce:	bd08      	pop	{r3, pc}
 80028d0:	2000079c 	.word	0x2000079c
 80028d4:	0802c15c 	.word	0x0802c15c
 80028d8:	0802c1a5 	.word	0x0802c1a5
 80028dc:	0802c1d4 	.word	0x0802c1d4
 80028e0:	20000798 	.word	0x20000798
 80028e4:	0802c264 	.word	0x0802c264

080028e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80028e8:	4b02      	ldr	r3, [pc, #8]	; (80028f4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80028ea:	f04f 31ff 	mov.w	r1, #4294967295
 80028ee:	6818      	ldr	r0, [r3, #0]
 80028f0:	f00b b8b2 	b.w	800da58 <osSemaphoreAcquire>
 80028f4:	2000079c 	.word	0x2000079c

080028f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80028f8:	4b01      	ldr	r3, [pc, #4]	; (8002900 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80028fa:	6818      	ldr	r0, [r3, #0]
 80028fc:	f00b b8e0 	b.w	800dac0 <osSemaphoreRelease>
 8002900:	2000079c 	.word	0x2000079c

08002904 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002904:	4b02      	ldr	r3, [pc, #8]	; (8002910 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002906:	2100      	movs	r1, #0
 8002908:	6818      	ldr	r0, [r3, #0]
 800290a:	f00b b8a5 	b.w	800da58 <osSemaphoreAcquire>
 800290e:	bf00      	nop
 8002910:	2000079c 	.word	0x2000079c

08002914 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002914:	f7ff bff0 	b.w	80028f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002918 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002918:	4803      	ldr	r0, [pc, #12]	; (8002928 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800291a:	4904      	ldr	r1, [pc, #16]	; (800292c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800291c:	6800      	ldr	r0, [r0, #0]
 800291e:	2300      	movs	r3, #0
 8002920:	461a      	mov	r2, r3
 8002922:	f00b b933 	b.w	800db8c <osMessageQueuePut>
 8002926:	bf00      	nop
 8002928:	20000798 	.word	0x20000798
 800292c:	20000010 	.word	0x20000010

08002930 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002930:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002932:	4c08      	ldr	r4, [pc, #32]	; (8002954 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002934:	2300      	movs	r3, #0
 8002936:	461a      	mov	r2, r3
 8002938:	a901      	add	r1, sp, #4
 800293a:	6820      	ldr	r0, [r4, #0]
 800293c:	f00b f95c 	bl	800dbf8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002940:	6820      	ldr	r0, [r4, #0]
 8002942:	f04f 33ff 	mov.w	r3, #4294967295
 8002946:	2200      	movs	r2, #0
 8002948:	a901      	add	r1, sp, #4
 800294a:	f00b f955 	bl	800dbf8 <osMessageQueueGet>
}
 800294e:	b002      	add	sp, #8
 8002950:	bd10      	pop	{r4, pc}
 8002952:	bf00      	nop
 8002954:	20000798 	.word	0x20000798

08002958 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002958:	4770      	bx	lr

0800295a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 800295a:	2000      	movs	r0, #0
 800295c:	4770      	bx	lr

0800295e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 800295e:	4770      	bx	lr

08002960 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002960:	4770      	bx	lr

08002962 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002962:	2000      	movs	r0, #0
 8002964:	4770      	bx	lr

08002966 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002966:	4770      	bx	lr

08002968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002968:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 800296a:	4a03      	ldr	r2, [pc, #12]	; (8002978 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 800296c:	4b03      	ldr	r3, [pc, #12]	; (800297c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 800296e:	4804      	ldr	r0, [pc, #16]	; (8002980 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002970:	2122      	movs	r1, #34	; 0x22
 8002972:	f028 f9a7 	bl	802acc4 <__assert_func>
 8002976:	bf00      	nop
 8002978:	0802c2c9 	.word	0x0802c2c9
 800297c:	0802c2a6 	.word	0x0802c2a6
 8002980:	0802c307 	.word	0x0802c307

08002984 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002984:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002986:	4a03      	ldr	r2, [pc, #12]	; (8002994 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002988:	4b03      	ldr	r3, [pc, #12]	; (8002998 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 800298a:	4804      	ldr	r0, [pc, #16]	; (800299c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800298c:	2127      	movs	r1, #39	; 0x27
 800298e:	f028 f999 	bl	802acc4 <__assert_func>
 8002992:	bf00      	nop
 8002994:	0802c395 	.word	0x0802c395
 8002998:	0802c2a6 	.word	0x0802c2a6
 800299c:	0802c307 	.word	0x0802c307

080029a0 <_ZN8STM32DMAD0Ev>:
 80029a0:	b510      	push	{r4, lr}
 80029a2:	2144      	movs	r1, #68	; 0x44
 80029a4:	4604      	mov	r4, r0
 80029a6:	f027 faa6 	bl	8029ef6 <_ZdlPvj>
 80029aa:	4620      	mov	r0, r4
 80029ac:	bd10      	pop	{r4, pc}
	...

080029b0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80029b0:	b538      	push	{r3, r4, r5, lr}
 80029b2:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 80029b4:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80029b6:	2500      	movs	r5, #0
 80029b8:	4b06      	ldr	r3, [pc, #24]	; (80029d4 <_ZN8STM32DMAC1Ev+0x24>)
 80029ba:	7225      	strb	r5, [r4, #8]
 80029bc:	300c      	adds	r0, #12
 80029be:	6060      	str	r0, [r4, #4]
 80029c0:	7265      	strb	r5, [r4, #9]
 80029c2:	2201      	movs	r2, #1
 80029c4:	f841 3b20 	str.w	r3, [r1], #32
 80029c8:	f00f f8d4 	bl	8011b74 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80029cc:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 80029ce:	4620      	mov	r0, r4
 80029d0:	bd38      	pop	{r3, r4, r5, pc}
 80029d2:	bf00      	nop
 80029d4:	0802c3dc 	.word	0x0802c3dc

080029d8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80029d8:	2001      	movs	r0, #1
 80029da:	4770      	bx	lr

080029dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80029dc:	2038      	movs	r0, #56	; 0x38
 80029de:	4770      	bx	lr

080029e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80029e0:	2338      	movs	r3, #56	; 0x38
 80029e2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80029e6:	3008      	adds	r0, #8
 80029e8:	4770      	bx	lr

080029ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80029ea:	2338      	movs	r3, #56	; 0x38
 80029ec:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80029f0:	3008      	adds	r0, #8
 80029f2:	4770      	bx	lr

080029f4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80029f4:	2001      	movs	r0, #1
 80029f6:	4770      	bx	lr

080029f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80029f8:	f241 30f8 	movw	r0, #5112	; 0x13f8
 80029fc:	4770      	bx	lr

080029fe <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80029fe:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8002a02:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002a06:	3008      	adds	r0, #8
 8002a08:	4770      	bx	lr

08002a0a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002a0a:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8002a0e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002a12:	3008      	adds	r0, #8
 8002a14:	4770      	bx	lr

08002a16 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002a16:	2001      	movs	r0, #1
 8002a18:	4770      	bx	lr

08002a1a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002a1a:	2010      	movs	r0, #16
 8002a1c:	4770      	bx	lr

08002a1e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002a1e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002a22:	3008      	adds	r0, #8
 8002a24:	4770      	bx	lr

08002a26 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002a26:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002a2a:	3008      	adds	r0, #8
 8002a2c:	4770      	bx	lr

08002a2e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002a2e:	4608      	mov	r0, r1
 8002a30:	f001 bfa4 	b.w	800497c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002a34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002a34:	b510      	push	{r4, lr}
 8002a36:	4b03      	ldr	r3, [pc, #12]	; (8002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002a38:	6003      	str	r3, [r0, #0]
 8002a3a:	4604      	mov	r4, r0
 8002a3c:	f00d fd37 	bl	80104ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002a40:	4620      	mov	r0, r4
 8002a42:	bd10      	pop	{r4, pc}
 8002a44:	0802c494 	.word	0x0802c494

08002a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002a48:	b510      	push	{r4, lr}
 8002a4a:	4604      	mov	r4, r0
 8002a4c:	f7ff fff2 	bl	8002a34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002a50:	4620      	mov	r0, r4
 8002a52:	2140      	movs	r1, #64	; 0x40
 8002a54:	f027 fa4f 	bl	8029ef6 <_ZdlPvj>
 8002a58:	4620      	mov	r0, r4
 8002a5a:	bd10      	pop	{r4, pc}

08002a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002a5c:	b510      	push	{r4, lr}
 8002a5e:	4b03      	ldr	r3, [pc, #12]	; (8002a6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002a60:	6003      	str	r3, [r0, #0]
 8002a62:	4604      	mov	r4, r0
 8002a64:	f00d fd23 	bl	80104ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002a68:	4620      	mov	r0, r4
 8002a6a:	bd10      	pop	{r4, pc}
 8002a6c:	0802c460 	.word	0x0802c460

08002a70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002a70:	b510      	push	{r4, lr}
 8002a72:	4604      	mov	r4, r0
 8002a74:	f7ff fff2 	bl	8002a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002a78:	4620      	mov	r0, r4
 8002a7a:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8002a7e:	f027 fa3a 	bl	8029ef6 <_ZdlPvj>
 8002a82:	4620      	mov	r0, r4
 8002a84:	bd10      	pop	{r4, pc}
	...

08002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002a88:	b510      	push	{r4, lr}
 8002a8a:	4b03      	ldr	r3, [pc, #12]	; (8002a98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002a8c:	6003      	str	r3, [r0, #0]
 8002a8e:	4604      	mov	r4, r0
 8002a90:	f00d fd0d 	bl	80104ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002a94:	4620      	mov	r0, r4
 8002a96:	bd10      	pop	{r4, pc}
 8002a98:	0802c42c 	.word	0x0802c42c

08002a9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002a9c:	b510      	push	{r4, lr}
 8002a9e:	4604      	mov	r4, r0
 8002aa0:	f7ff fff2 	bl	8002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002aa4:	4620      	mov	r0, r4
 8002aa6:	2118      	movs	r1, #24
 8002aa8:	f027 fa25 	bl	8029ef6 <_ZdlPvj>
 8002aac:	4620      	mov	r0, r4
 8002aae:	bd10      	pop	{r4, pc}

08002ab0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002ab0:	b510      	push	{r4, lr}
 8002ab2:	4b09      	ldr	r3, [pc, #36]	; (8002ad8 <_ZN12FrontendHeapD1Ev+0x28>)
 8002ab4:	6003      	str	r3, [r0, #0]
 8002ab6:	4604      	mov	r4, r0
 8002ab8:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8002abc:	300c      	adds	r0, #12
 8002abe:	f7ff ffb9 	bl	8002a34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002ac2:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002ac6:	f7ff ffc9 	bl	8002a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002aca:	f104 0014 	add.w	r0, r4, #20
 8002ace:	f7ff ffdb 	bl	8002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	bd10      	pop	{r4, pc}
 8002ad6:	bf00      	nop
 8002ad8:	0802c4c8 	.word	0x0802c4c8

08002adc <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002adc:	b508      	push	{r3, lr}
 8002ade:	4802      	ldr	r0, [pc, #8]	; (8002ae8 <__tcf_0+0xc>)
 8002ae0:	f7ff ffe6 	bl	8002ab0 <_ZN12FrontendHeapD1Ev>
 8002ae4:	bd08      	pop	{r3, pc}
 8002ae6:	bf00      	nop
 8002ae8:	200007a4 	.word	0x200007a4

08002aec <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002aec:	b510      	push	{r4, lr}
 8002aee:	4604      	mov	r4, r0
 8002af0:	f7ff ffde 	bl	8002ab0 <_ZN12FrontendHeapD1Ev>
 8002af4:	4620      	mov	r0, r4
 8002af6:	f241 51d0 	movw	r1, #5584	; 0x15d0
 8002afa:	f027 f9fc 	bl	8029ef6 <_ZdlPvj>
 8002afe:	4620      	mov	r0, r4
 8002b00:	bd10      	pop	{r4, pc}
	...

08002b04 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002b04:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002b08:	f000 fa5a 	bl	8002fc0 <_ZN14BitmapDatabase11getInstanceEv>
 8002b0c:	4605      	mov	r5, r0
 8002b0e:	f000 fa5b 	bl	8002fc8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002b12:	2400      	movs	r4, #0
 8002b14:	4601      	mov	r1, r0
 8002b16:	4623      	mov	r3, r4
 8002b18:	4628      	mov	r0, r5
 8002b1a:	4622      	mov	r2, r4
 8002b1c:	9400      	str	r4, [sp, #0]
 8002b1e:	f016 fd3d 	bl	801959c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002b22:	4b26      	ldr	r3, [pc, #152]	; (8002bbc <touchgfx_init+0xb8>)
 8002b24:	4a26      	ldr	r2, [pc, #152]	; (8002bc0 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002b26:	4d27      	ldr	r5, [pc, #156]	; (8002bc4 <touchgfx_init+0xc0>)
 8002b28:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002b2a:	4620      	mov	r0, r4
 8002b2c:	f006 fb06 	bl	800913c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002b30:	4825      	ldr	r0, [pc, #148]	; (8002bc8 <touchgfx_init+0xc4>)
 8002b32:	f016 fc9b 	bl	801946c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002b36:	682b      	ldr	r3, [r5, #0]
 8002b38:	f3bf 8f5b 	dmb	ish
 8002b3c:	07db      	lsls	r3, r3, #31
 8002b3e:	d437      	bmi.n	8002bb0 <touchgfx_init+0xac>
 8002b40:	4628      	mov	r0, r5
 8002b42:	f027 f9da 	bl	8029efa <__cxa_guard_acquire>
 8002b46:	b398      	cbz	r0, 8002bb0 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002b48:	4c20      	ldr	r4, [pc, #128]	; (8002bcc <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002b4a:	4b21      	ldr	r3, [pc, #132]	; (8002bd0 <touchgfx_init+0xcc>)
 8002b4c:	6023      	str	r3, [r4, #0]
 8002b4e:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002b52:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8002b56:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8002b5a:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8002b5e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002b60:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002b64:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002b66:	6126      	str	r6, [r4, #16]
 8002b68:	f00d fca2 	bl	80104b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002b6c:	4b19      	ldr	r3, [pc, #100]	; (8002bd4 <touchgfx_init+0xd0>)
 8002b6e:	6163      	str	r3, [r4, #20]
 8002b70:	4640      	mov	r0, r8
 8002b72:	f00d fc9d 	bl	80104b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002b76:	4b18      	ldr	r3, [pc, #96]	; (8002bd8 <touchgfx_init+0xd4>)
 8002b78:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b7a:	4638      	mov	r0, r7
 8002b7c:	f00d fc98 	bl	80104b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002b80:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002b84:	4a15      	ldr	r2, [pc, #84]	; (8002bdc <touchgfx_init+0xd8>)
 8002b86:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8002b8a:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8002b8e:	f006 ffaf 	bl	8009af0 <_ZN5ModelC1Ev>
 8002b92:	4622      	mov	r2, r4
 8002b94:	f1a6 0108 	sub.w	r1, r6, #8
 8002b98:	4630      	mov	r0, r6
 8002b9a:	f006 fc9f 	bl	80094dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002b9e:	4630      	mov	r0, r6
 8002ba0:	f001 feec 	bl	800497c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002ba4:	480e      	ldr	r0, [pc, #56]	; (8002be0 <touchgfx_init+0xdc>)
 8002ba6:	f028 f8ab 	bl	802ad00 <atexit>
 8002baa:	4628      	mov	r0, r5
 8002bac:	f027 f9b1 	bl	8029f12 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002bb0:	480c      	ldr	r0, [pc, #48]	; (8002be4 <touchgfx_init+0xe0>)
}
 8002bb2:	b002      	add	sp, #8
 8002bb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002bb8:	f7ff bdb4 	b.w	8002724 <_ZN11TouchGFXHAL10initializeEv>
 8002bbc:	20012e08 	.word	0x20012e08
 8002bc0:	20001e38 	.word	0x20001e38
 8002bc4:	200007a0 	.word	0x200007a0
 8002bc8:	20000014 	.word	0x20000014
 8002bcc:	200007a4 	.word	0x200007a4
 8002bd0:	0802c4c8 	.word	0x0802c4c8
 8002bd4:	0802c42c 	.word	0x0802c42c
 8002bd8:	0802c460 	.word	0x0802c460
 8002bdc:	0802c494 	.word	0x0802c494
 8002be0:	08002add 	.word	0x08002add
 8002be4:	20001dbc 	.word	0x20001dbc

08002be8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002be8:	4770      	bx	lr
	...

08002bec <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002bec:	4801      	ldr	r0, [pc, #4]	; (8002bf4 <touchgfx_taskEntry+0x8>)
 8002bee:	f7ff bda7 	b.w	8002740 <_ZN11TouchGFXHAL9taskEntryEv>
 8002bf2:	bf00      	nop
 8002bf4:	20001dbc 	.word	0x20001dbc

08002bf8 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002bf8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002bfa:	4e22      	ldr	r6, [pc, #136]	; (8002c84 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002bfc:	4c22      	ldr	r4, [pc, #136]	; (8002c88 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002bfe:	4d23      	ldr	r5, [pc, #140]	; (8002c8c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002c00:	4b23      	ldr	r3, [pc, #140]	; (8002c90 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002c02:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002c04:	4630      	mov	r0, r6
 8002c06:	f7ff fed3 	bl	80029b0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002c0a:	4628      	mov	r0, r5
 8002c0c:	f01a ff92 	bl	801db34 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002c10:	4b20      	ldr	r3, [pc, #128]	; (8002c94 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002c12:	4821      	ldr	r0, [pc, #132]	; (8002c98 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002c14:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002c16:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002c18:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002c1c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002c20:	491e      	ldr	r1, [pc, #120]	; (8002c9c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002c22:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002c24:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002c28:	491d      	ldr	r1, [pc, #116]	; (8002ca0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002c2a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002c2c:	491d      	ldr	r1, [pc, #116]	; (8002ca4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002c2e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002c32:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002c34:	21f0      	movs	r1, #240	; 0xf0
 8002c36:	8001      	strh	r1, [r0, #0]
 8002c38:	481b      	ldr	r0, [pc, #108]	; (8002ca8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8002c3a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002c3c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002c3e:	481b      	ldr	r0, [pc, #108]	; (8002cac <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002c40:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002c44:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002c48:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002c4c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002c50:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002c54:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002c58:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8002c5c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002c60:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8002c64:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002c68:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8002c6a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002c6e:	8001      	strh	r1, [r0, #0]
 8002c70:	480f      	ldr	r0, [pc, #60]	; (8002cb0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8002c72:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8002c74:	490f      	ldr	r1, [pc, #60]	; (8002cb4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8002c76:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002c78:	2201      	movs	r2, #1
 8002c7a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002c7e:	4a0e      	ldr	r2, [pc, #56]	; (8002cb8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002c80:	601a      	str	r2, [r3, #0]
}
 8002c82:	bd70      	pop	{r4, r5, r6, pc}
 8002c84:	20001d78 	.word	0x20001d78
 8002c88:	20001d74 	.word	0x20001d74
 8002c8c:	20001e3c 	.word	0x20001e3c
 8002c90:	0802bf00 	.word	0x0802bf00
 8002c94:	20001dbc 	.word	0x20001dbc
 8002c98:	20012d98 	.word	0x20012d98
 8002c9c:	01000001 	.word	0x01000001
 8002ca0:	01010000 	.word	0x01010000
 8002ca4:	20012da4 	.word	0x20012da4
 8002ca8:	20012d9e 	.word	0x20012d9e
 8002cac:	20012d9a 	.word	0x20012d9a
 8002cb0:	20012da0 	.word	0x20012da0
 8002cb4:	20012d9c 	.word	0x20012d9c
 8002cb8:	0802c08c 	.word	0x0802c08c

08002cbc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002cbc:	2000      	movs	r0, #0
 8002cbe:	4770      	bx	lr

08002cc0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002cc0:	8081      	strh	r1, [r0, #4]
    }
 8002cc2:	4770      	bx	lr

08002cc4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002cc4:	80c1      	strh	r1, [r0, #6]
    }
 8002cc6:	4770      	bx	lr

08002cc8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002cc8:	8101      	strh	r1, [r0, #8]
    }
 8002cca:	4770      	bx	lr

08002ccc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002ccc:	8141      	strh	r1, [r0, #10]
    }
 8002cce:	4770      	bx	lr

08002cd0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002cd0:	4770      	bx	lr

08002cd2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002cd2:	4770      	bx	lr

08002cd4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002cd4:	4770      	bx	lr

08002cd6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002cd6:	4770      	bx	lr

08002cd8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002cd8:	4770      	bx	lr

08002cda <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002cda:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002cdc:	88c4      	ldrh	r4, [r0, #6]
 8002cde:	6803      	ldr	r3, [r0, #0]
 8002ce0:	1b12      	subs	r2, r2, r4
 8002ce2:	8884      	ldrh	r4, [r0, #4]
 8002ce4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ce6:	1b09      	subs	r1, r1, r4
 8002ce8:	b212      	sxth	r2, r2
    }
 8002cea:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002cee:	b209      	sxth	r1, r1
 8002cf0:	4718      	bx	r3

08002cf2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002cf2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002cf6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002cf8:	f04f 33ff 	mov.w	r3, #4294967295
 8002cfc:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002cfe:	6813      	ldr	r3, [r2, #0]
 8002d00:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002d02:	6010      	str	r0, [r2, #0]
    }
 8002d04:	4770      	bx	lr

08002d06 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002d06:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002d0a:	b11a      	cbz	r2, 8002d14 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002d0c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002d10:	b102      	cbz	r2, 8002d14 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002d12:	6018      	str	r0, [r3, #0]
        }
    }
 8002d14:	4770      	bx	lr

08002d16 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002d16:	2000      	movs	r0, #0
 8002d18:	4770      	bx	lr

08002d1a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002d1a:	888b      	ldrh	r3, [r1, #4]
 8002d1c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002d1e:	2001      	movs	r0, #1
 8002d20:	4770      	bx	lr

08002d22 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002d22:	4770      	bx	lr

08002d24 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002d24:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002d28:	4770      	bx	lr

08002d2a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002d2a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002d2e:	4770      	bx	lr

08002d30 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002d30:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d32:	2200      	movs	r2, #0
        return rect.width;
 8002d34:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002d38:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002d3c:	8002      	strh	r2, [r0, #0]
 8002d3e:	8042      	strh	r2, [r0, #2]
 8002d40:	8084      	strh	r4, [r0, #4]
 8002d42:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002d44:	bd10      	pop	{r4, pc}

08002d46 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002d46:	2200      	movs	r2, #0
 8002d48:	8002      	strh	r2, [r0, #0]
 8002d4a:	8042      	strh	r2, [r0, #2]
 8002d4c:	8082      	strh	r2, [r0, #4]
 8002d4e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002d50:	4770      	bx	lr
	...

08002d54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002d54:	4b02      	ldr	r3, [pc, #8]	; (8002d60 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002d56:	2290      	movs	r2, #144	; 0x90
 8002d58:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002d5c:	4770      	bx	lr
 8002d5e:	bf00      	nop
 8002d60:	e000e100 	.word	0xe000e100

08002d64 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002d64:	4b02      	ldr	r3, [pc, #8]	; (8002d70 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8002d66:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002d6a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8002d6c:	4770      	bx	lr
 8002d6e:	bf00      	nop
 8002d70:	e000e100 	.word	0xe000e100

08002d74 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002d74:	4a09      	ldr	r2, [pc, #36]	; (8002d9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002d76:	490a      	ldr	r1, [pc, #40]	; (8002da0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002d78:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002d7a:	480a      	ldr	r0, [pc, #40]	; (8002da4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002d7c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002d80:	3b01      	subs	r3, #1
 8002d82:	b29b      	uxth	r3, r3
 8002d84:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002d86:	6911      	ldr	r1, [r2, #16]
 8002d88:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002d8c:	3901      	subs	r1, #1
 8002d8e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002d90:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002d92:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002d94:	f043 0301 	orr.w	r3, r3, #1
 8002d98:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002d9a:	4770      	bx	lr
 8002d9c:	40016800 	.word	0x40016800
 8002da0:	20001ec2 	.word	0x20001ec2
 8002da4:	20001ec0 	.word	0x20001ec0

08002da8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002da8:	4b01      	ldr	r3, [pc, #4]	; (8002db0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002daa:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002dae:	4770      	bx	lr
 8002db0:	40016800 	.word	0x40016800

08002db4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002db4:	4b02      	ldr	r3, [pc, #8]	; (8002dc0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002db6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002db8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002dbc:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002dbe:	4770      	bx	lr
 8002dc0:	40016800 	.word	0x40016800

08002dc4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002dc4:	b570      	push	{r4, r5, r6, lr}
 8002dc6:	4604      	mov	r4, r0
    HAL::initialize();
 8002dc8:	f00e f83d 	bl	8010e46 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002dcc:	6823      	ldr	r3, [r4, #0]
 8002dce:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002dd0:	f012 ffe6 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 8002dd4:	4601      	mov	r1, r0
 8002dd6:	4620      	mov	r0, r4
 8002dd8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002dda:	6823      	ldr	r3, [r4, #0]
 8002ddc:	4a05      	ldr	r2, [pc, #20]	; (8002df4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002dde:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002de2:	4620      	mov	r0, r4
 8002de4:	46ac      	mov	ip, r5
 8002de6:	2300      	movs	r3, #0
}
 8002de8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002dec:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002df0:	4760      	bx	ip
 8002df2:	bf00      	nop
 8002df4:	d004b000 	.word	0xd004b000

08002df8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002df8:	f00e b80c 	b.w	8010e14 <_ZN8touchgfx3HAL10beginFrameEv>

08002dfc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002dfc:	f00e b816 	b.w	8010e2c <_ZN8touchgfx3HAL8endFrameEv>

08002e00 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002e00:	f00d bfd2 	b.w	8010da8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002e04 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002e04:	f00e b933 	b.w	801106e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002e08 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002e08:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002e0c:	b112      	cbz	r2, 8002e14 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002e0e:	6803      	ldr	r3, [r0, #0]
 8002e10:	695b      	ldr	r3, [r3, #20]
 8002e12:	4718      	bx	r3
    }
 8002e14:	4770      	bx	lr
	...

08002e18 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002e18:	4b04      	ldr	r3, [pc, #16]	; (8002e2c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002e1a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002e1e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002e22:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002e26:	f3bf 8f6f 	isb	sy
}
 8002e2a:	4770      	bx	lr
 8002e2c:	e000e100 	.word	0xe000e100

08002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002e30:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002e32:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002e34:	4e12      	ldr	r6, [pc, #72]	; (8002e80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002e36:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002e38:	4b12      	ldr	r3, [pc, #72]	; (8002e84 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002e3a:	6003      	str	r3, [r0, #0]
 8002e3c:	6833      	ldr	r3, [r6, #0]
 8002e3e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002e42:	4605      	mov	r5, r0
 8002e44:	b10a      	cbz	r2, 8002e4a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002e46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002e48:	b900      	cbnz	r0, 8002e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8002e4a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002e4c:	6803      	ldr	r3, [r0, #0]
 8002e4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e50:	4798      	blx	r3
        return auxiliaryLCD;
 8002e52:	6833      	ldr	r3, [r6, #0]
 8002e54:	fab0 f480 	clz	r4, r0
 8002e58:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002e5a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002e5c:	b130      	cbz	r0, 8002e6c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002e5e:	6803      	ldr	r3, [r0, #0]
 8002e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e62:	4798      	blx	r3
 8002e64:	2800      	cmp	r0, #0
 8002e66:	bf08      	it	eq
 8002e68:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002e6c:	b92c      	cbnz	r4, 8002e7a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002e6e:	4b06      	ldr	r3, [pc, #24]	; (8002e88 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002e70:	4a06      	ldr	r2, [pc, #24]	; (8002e8c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002e72:	4807      	ldr	r0, [pc, #28]	; (8002e90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002e74:	212c      	movs	r1, #44	; 0x2c
 8002e76:	f027 ff25 	bl	802acc4 <__assert_func>
    }
 8002e7a:	4628      	mov	r0, r5
 8002e7c:	bd70      	pop	{r4, r5, r6, pc}
 8002e7e:	bf00      	nop
 8002e80:	20012da4 	.word	0x20012da4
 8002e84:	0802c5d8 	.word	0x0802c5d8
 8002e88:	0802c4d4 	.word	0x0802c4d4
 8002e8c:	0802c532 	.word	0x0802c532
 8002e90:	0802c56b 	.word	0x0802c56b

08002e94 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002e94:	4770      	bx	lr
	...

08002e98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002e9c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002e9e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002ea2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8002ea6:	d105      	bne.n	8002eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002ea8:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002eac:	4281      	cmp	r1, r0
 8002eae:	d8fb      	bhi.n	8002ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002eb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002eb4:	4f17      	ldr	r7, [pc, #92]	; (8002f14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002eb6:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002eba:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002ebe:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ec2:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002ec6:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002ec8:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8002eca:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ecc:	b2db      	uxtb	r3, r3
 8002ece:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002ed0:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ed4:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002ed8:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002edc:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002ee0:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002ee4:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ee8:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002eec:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ef0:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002ef2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ef6:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002efa:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002efe:	fbbe fef5 	udiv	lr, lr, r5
 8002f02:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002f06:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002f0a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002f0e:	4281      	cmp	r1, r0
 8002f10:	d8de      	bhi.n	8002ed0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002f12:	e7cd      	b.n	8002eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002f14:	fffff800 	.word	0xfffff800

08002f18 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002f18:	b510      	push	{r4, lr}
        return instance;
 8002f1a:	4c14      	ldr	r4, [pc, #80]	; (8002f6c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002f1c:	6823      	ldr	r3, [r4, #0]
 8002f1e:	b323      	cbz	r3, 8002f6a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002f20:	4b13      	ldr	r3, [pc, #76]	; (8002f70 <HAL_LTDC_LineEventCallback+0x58>)
 8002f22:	4a14      	ldr	r2, [pc, #80]	; (8002f74 <HAL_LTDC_LineEventCallback+0x5c>)
 8002f24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f26:	8811      	ldrh	r1, [r2, #0]
 8002f28:	428b      	cmp	r3, r1
 8002f2a:	d113      	bne.n	8002f54 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002f2c:	4b12      	ldr	r3, [pc, #72]	; (8002f78 <HAL_LTDC_LineEventCallback+0x60>)
 8002f2e:	8819      	ldrh	r1, [r3, #0]
 8002f30:	f009 f952 	bl	800c1d8 <HAL_LTDC_ProgramLineEvent>
 8002f34:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002f36:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8002f3a:	3301      	adds	r3, #1
 8002f3c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002f40:	f7ff fcea 	bl	8002918 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002f44:	6820      	ldr	r0, [r4, #0]
 8002f46:	f00e fcbd 	bl	80118c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002f4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002f4e:	2000      	movs	r0, #0
 8002f50:	f7ff bb62 	b.w	8002618 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002f54:	f009 f940 	bl	800c1d8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002f58:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002f5a:	6803      	ldr	r3, [r0, #0]
 8002f5c:	6a1b      	ldr	r3, [r3, #32]
 8002f5e:	4798      	blx	r3
    }
 8002f60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002f64:	2000      	movs	r0, #0
 8002f66:	f7ff bb6f 	b.w	8002648 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002f6a:	bd10      	pop	{r4, pc}
 8002f6c:	20012da4 	.word	0x20012da4
 8002f70:	40016800 	.word	0x40016800
 8002f74:	20001ec2 	.word	0x20001ec2
 8002f78:	20001ec0 	.word	0x20001ec0

08002f7c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002f7c:	4770      	bx	lr

08002f7e <_ZN23ApplicationFontProviderD0Ev>:
 8002f7e:	b510      	push	{r4, lr}
 8002f80:	2104      	movs	r1, #4
 8002f82:	4604      	mov	r4, r0
 8002f84:	f026 ffb7 	bl	8029ef6 <_ZdlPvj>
 8002f88:	4620      	mov	r0, r4
 8002f8a:	bd10      	pop	{r4, pc}

08002f8c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002f8c:	b508      	push	{r3, lr}
    switch (typography)
 8002f8e:	2903      	cmp	r1, #3
 8002f90:	d813      	bhi.n	8002fba <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002f92:	e8df f001 	tbb	[pc, r1]
 8002f96:	0602      	.short	0x0602
 8002f98:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002f9a:	f006 f91b 	bl	80091d4 <_ZN17TypedTextDatabase8getFontsEv>
 8002f9e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002fa0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002fa2:	f006 f917 	bl	80091d4 <_ZN17TypedTextDatabase8getFontsEv>
 8002fa6:	6840      	ldr	r0, [r0, #4]
 8002fa8:	e7fa      	b.n	8002fa0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002faa:	f006 f913 	bl	80091d4 <_ZN17TypedTextDatabase8getFontsEv>
 8002fae:	6880      	ldr	r0, [r0, #8]
 8002fb0:	e7f6      	b.n	8002fa0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002fb2:	f006 f90f 	bl	80091d4 <_ZN17TypedTextDatabase8getFontsEv>
 8002fb6:	68c0      	ldr	r0, [r0, #12]
 8002fb8:	e7f2      	b.n	8002fa0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002fba:	2000      	movs	r0, #0
 8002fbc:	e7f0      	b.n	8002fa0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002fc0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002fc0:	4800      	ldr	r0, [pc, #0]	; (8002fc4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002fc2:	4770      	bx	lr
 8002fc4:	0802c604 	.word	0x0802c604

08002fc8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002fc8:	200d      	movs	r0, #13
 8002fca:	4770      	bx	lr

08002fcc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002fcc:	b513      	push	{r0, r1, r4, lr}
 8002fce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002fd0:	b151      	cbz	r1, 8002fe8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002fd2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002fd4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002fd6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002fda:	aa01      	add	r2, sp, #4
 8002fdc:	689c      	ldr	r4, [r3, #8]
 8002fde:	f10d 0303 	add.w	r3, sp, #3
 8002fe2:	47a0      	blx	r4
        return glyph;
    }
 8002fe4:	b002      	add	sp, #8
 8002fe6:	bd10      	pop	{r4, pc}
            return 0;
 8002fe8:	4608      	mov	r0, r1
 8002fea:	e7fb      	b.n	8002fe4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002fec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002fec:	89c0      	ldrh	r0, [r0, #14]
 8002fee:	4770      	bx	lr

08002ff0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002ff0:	8a00      	ldrh	r0, [r0, #16]
 8002ff2:	4770      	bx	lr

08002ff4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002ff4:	88c0      	ldrh	r0, [r0, #6]
 8002ff6:	4770      	bx	lr

08002ff8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002ff8:	8880      	ldrh	r0, [r0, #4]
 8002ffa:	4770      	bx	lr

08002ffc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002ffc:	7a80      	ldrb	r0, [r0, #10]
    }
 8002ffe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8003002:	4770      	bx	lr

08003004 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8003004:	7a80      	ldrb	r0, [r0, #10]
    }
 8003006:	09c0      	lsrs	r0, r0, #7
 8003008:	4770      	bx	lr

0800300a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800300a:	4770      	bx	lr

0800300c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800300c:	4770      	bx	lr

0800300e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800300e:	4770      	bx	lr

08003010 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003010:	4770      	bx	lr

08003012 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003012:	4770      	bx	lr

08003014 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003014:	4770      	bx	lr

08003016 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003016:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003018:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800301a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800301c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800301e:	466d      	mov	r5, sp
 8003020:	4601      	mov	r1, r0
 8003022:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003026:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003028:	4628      	mov	r0, r5
 800302a:	4798      	blx	r3
 800302c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003030:	343c      	adds	r4, #60	; 0x3c
 8003032:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003036:	b005      	add	sp, #20
 8003038:	bd30      	pop	{r4, r5, pc}

0800303a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800303a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800303c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800303e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8003040:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003042:	466d      	mov	r5, sp
 8003044:	4601      	mov	r1, r0
 8003046:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800304a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800304c:	4628      	mov	r0, r5
 800304e:	4798      	blx	r3
 8003050:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003054:	343c      	adds	r4, #60	; 0x3c
 8003056:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800305a:	b005      	add	sp, #20
 800305c:	bd30      	pop	{r4, r5, pc}

0800305e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800305e:	2200      	movs	r2, #0
 8003060:	8002      	strh	r2, [r0, #0]
 8003062:	8042      	strh	r2, [r0, #2]
 8003064:	8082      	strh	r2, [r0, #4]
 8003066:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003068:	4770      	bx	lr

0800306a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800306a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800306e:	4770      	bx	lr

08003070 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003070:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8003072:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003074:	4604      	mov	r4, r0
        setX(x);
 8003076:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003078:	4615      	mov	r5, r2
        setX(x);
 800307a:	4798      	blx	r3
        setBaselineY(baselineY);
 800307c:	6823      	ldr	r3, [r4, #0]
 800307e:	4629      	mov	r1, r5
 8003080:	4620      	mov	r0, r4
 8003082:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003088:	4718      	bx	r3

0800308a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800308a:	2000      	movs	r0, #0
 800308c:	4770      	bx	lr

0800308e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800308e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003090:	4770      	bx	lr

08003092 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8003092:	4770      	bx	lr

08003094 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003094:	4770      	bx	lr

08003096 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003096:	4770      	bx	lr

08003098 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8003098:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800309a:	68c2      	ldr	r2, [r0, #12]
 800309c:	6844      	ldr	r4, [r0, #4]
 800309e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80030a0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80030a2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80030a6:	07d2      	lsls	r2, r2, #31
 80030a8:	bf48      	it	mi
 80030aa:	5962      	ldrmi	r2, [r4, r5]
 80030ac:	689b      	ldr	r3, [r3, #8]
    }
 80030ae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80030b0:	bf48      	it	mi
 80030b2:	58d3      	ldrmi	r3, [r2, r3]
 80030b4:	4718      	bx	r3

080030b6 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80030b6:	6843      	ldr	r3, [r0, #4]
 80030b8:	b12b      	cbz	r3, 80030c6 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80030ba:	6883      	ldr	r3, [r0, #8]
 80030bc:	b92b      	cbnz	r3, 80030ca <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80030be:	68c0      	ldr	r0, [r0, #12]
 80030c0:	f000 0001 	and.w	r0, r0, #1
 80030c4:	4770      	bx	lr
 80030c6:	4618      	mov	r0, r3
 80030c8:	4770      	bx	lr
 80030ca:	2001      	movs	r0, #1
    }
 80030cc:	4770      	bx	lr

080030ce <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80030ce:	b510      	push	{r4, lr}
    }
 80030d0:	2108      	movs	r1, #8
    virtual ~TypedText()
 80030d2:	4604      	mov	r4, r0
    }
 80030d4:	f026 ff0f 	bl	8029ef6 <_ZdlPvj>
 80030d8:	4620      	mov	r0, r4
 80030da:	bd10      	pop	{r4, pc}

080030dc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80030dc:	b510      	push	{r4, lr}
 80030de:	214c      	movs	r1, #76	; 0x4c
 80030e0:	4604      	mov	r4, r0
 80030e2:	f026 ff08 	bl	8029ef6 <_ZdlPvj>
 80030e6:	4620      	mov	r0, r4
 80030e8:	bd10      	pop	{r4, pc}

080030ea <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80030ea:	b510      	push	{r4, lr}
 80030ec:	2110      	movs	r1, #16
 80030ee:	4604      	mov	r4, r0
 80030f0:	f026 ff01 	bl	8029ef6 <_ZdlPvj>
 80030f4:	4620      	mov	r0, r4
 80030f6:	bd10      	pop	{r4, pc}

080030f8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80030f8:	b510      	push	{r4, lr}
 80030fa:	4b03      	ldr	r3, [pc, #12]	; (8003108 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80030fc:	6003      	str	r3, [r0, #0]
 80030fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003100:	f011 f94c 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003104:	4620      	mov	r0, r4
 8003106:	bd10      	pop	{r4, pc}
 8003108:	0802c970 	.word	0x0802c970

0800310c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800310c:	b507      	push	{r0, r1, r2, lr}
 800310e:	4b07      	ldr	r3, [pc, #28]	; (800312c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8003110:	6003      	str	r3, [r0, #0]
 8003112:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003114:	f011 f942 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003118:	9801      	ldr	r0, [sp, #4]
 800311a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800311e:	f026 feea 	bl	8029ef6 <_ZdlPvj>
 8003122:	9801      	ldr	r0, [sp, #4]
 8003124:	b003      	add	sp, #12
 8003126:	f85d fb04 	ldr.w	pc, [sp], #4
 800312a:	bf00      	nop
 800312c:	0802c970 	.word	0x0802c970

08003130 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003130:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003132:	f7ff fe69 	bl	8002e08 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003136:	bd08      	pop	{r3, pc}

08003138 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003138:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800313a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800313c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800313e:	4b12      	ldr	r3, [pc, #72]	; (8003188 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003140:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003142:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003144:	b28d      	uxth	r5, r1
 8003146:	b92b      	cbnz	r3, 8003154 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003148:	4b10      	ldr	r3, [pc, #64]	; (800318c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800314a:	4a11      	ldr	r2, [pc, #68]	; (8003190 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800314c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800314e:	4811      	ldr	r0, [pc, #68]	; (8003194 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003150:	f027 fdb8 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003154:	4910      	ldr	r1, [pc, #64]	; (8003198 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003156:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003158:	8809      	ldrh	r1, [r1, #0]
 800315a:	4291      	cmp	r1, r2
 800315c:	d803      	bhi.n	8003166 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800315e:	4b0f      	ldr	r3, [pc, #60]	; (800319c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003160:	4a0b      	ldr	r2, [pc, #44]	; (8003190 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003162:	216d      	movs	r1, #109	; 0x6d
 8003164:	e7f3      	b.n	800314e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003166:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800316a:	4b0d      	ldr	r3, [pc, #52]	; (80031a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003172:	6803      	ldr	r3, [r0, #0]
 8003174:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003176:	4798      	blx	r3
 8003178:	1a28      	subs	r0, r5, r0
 800317a:	b201      	sxth	r1, r0
 800317c:	4633      	mov	r3, r6
 800317e:	4620      	mov	r0, r4
    }
 8003180:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003184:	4718      	bx	r3
 8003186:	bf00      	nop
 8003188:	20012dfc 	.word	0x20012dfc
 800318c:	0802c708 	.word	0x0802c708
 8003190:	0802c74a 	.word	0x0802c74a
 8003194:	0802c785 	.word	0x0802c785
 8003198:	20012e00 	.word	0x20012e00
 800319c:	0802c7cc 	.word	0x0802c7cc
 80031a0:	20012e04 	.word	0x20012e04

080031a4 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80031a4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80031a6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80031aa:	4299      	cmp	r1, r3
{
 80031ac:	4604      	mov	r4, r0
 80031ae:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80031b0:	d103      	bne.n	80031ba <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80031b2:	f012 fdf5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80031b6:	f001 fbf1 	bl	800499c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80031ba:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80031be:	429d      	cmp	r5, r3
 80031c0:	d103      	bne.n	80031ca <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80031c2:	f012 fded 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80031c6:	f001 fca9 	bl	8004b1c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80031ca:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80031ce:	42a5      	cmp	r5, r4
 80031d0:	d105      	bne.n	80031de <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80031d2:	f012 fde5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 80031d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 80031da:	f001 bcaf 	b.w	8004b3c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 80031de:	bd38      	pop	{r3, r4, r5, pc}

080031e0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80031e0:	2200      	movs	r2, #0
 80031e2:	f04f 31ff 	mov.w	r1, #4294967295
 80031e6:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80031ea:	6082      	str	r2, [r0, #8]
    }
 80031ec:	4770      	bx	lr

080031ee <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80031ee:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80031f0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80031f2:	4604      	mov	r4, r0
        setX(x);
 80031f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80031f6:	4615      	mov	r5, r2
        setX(x);
 80031f8:	4798      	blx	r3
        setY(y);
 80031fa:	6823      	ldr	r3, [r4, #0]
 80031fc:	4629      	mov	r1, r5
 80031fe:	4620      	mov	r0, r4
 8003200:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003202:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003206:	4718      	bx	r3

08003208 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003208:	b570      	push	{r4, r5, r6, lr}
 800320a:	4604      	mov	r4, r0
 800320c:	461d      	mov	r5, r3
 800320e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003212:	f7ff ffec 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003216:	6823      	ldr	r3, [r4, #0]
 8003218:	4629      	mov	r1, r5
 800321a:	4620      	mov	r0, r4
 800321c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800321e:	4798      	blx	r3
        setHeight(height);
 8003220:	6823      	ldr	r3, [r4, #0]
 8003222:	4631      	mov	r1, r6
 8003224:	4620      	mov	r0, r4
 8003226:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003228:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800322c:	4718      	bx	r3
	...

08003230 <_ZN8touchgfx6WidgetC1Ev>:
 8003230:	2200      	movs	r2, #0
 8003232:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003236:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800323a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800323e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003242:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003246:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003248:	4a01      	ldr	r2, [pc, #4]	; (8003250 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800324a:	6002      	str	r2, [r0, #0]
 800324c:	4770      	bx	lr
 800324e:	bf00      	nop
 8003250:	0802c850 	.word	0x0802c850

08003254 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003254:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003256:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003258:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800325a:	2100      	movs	r1, #0
 800325c:	f027 ff37 	bl	802b0ce <memset>
 8003260:	4620      	mov	r0, r4
 8003262:	f7ff ffe5 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8003266:	4b0a      	ldr	r3, [pc, #40]	; (8003290 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003268:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800326a:	4b0a      	ldr	r3, [pc, #40]	; (8003294 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 800326c:	62a3      	str	r3, [r4, #40]	; 0x28
 800326e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003272:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003274:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003278:	2300      	movs	r3, #0
 800327a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800327e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8003282:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003286:	8723      	strh	r3, [r4, #56]	; 0x38
 8003288:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800328a:	4620      	mov	r0, r4
 800328c:	bd10      	pop	{r4, pc}
 800328e:	bf00      	nop
 8003290:	0802f188 	.word	0x0802f188
 8003294:	0802c8b8 	.word	0x0802c8b8

08003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003298:	4b1a      	ldr	r3, [pc, #104]	; (8003304 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800329a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800329c:	881b      	ldrh	r3, [r3, #0]
 800329e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80032a0:	428b      	cmp	r3, r1
    void updateTextPosition()
 80032a2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80032a4:	d92b      	bls.n	80032fe <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80032a6:	4b18      	ldr	r3, [pc, #96]	; (8003308 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	b92b      	cbnz	r3, 80032b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80032ac:	4b17      	ldr	r3, [pc, #92]	; (800330c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80032ae:	4a18      	ldr	r2, [pc, #96]	; (8003310 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80032b0:	4818      	ldr	r0, [pc, #96]	; (8003314 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80032b2:	216c      	movs	r1, #108	; 0x6c
 80032b4:	f027 fd06 	bl	802acc4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80032b8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80032bc:	4b16      	ldr	r3, [pc, #88]	; (8003318 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80032c4:	4b15      	ldr	r3, [pc, #84]	; (800331c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80032c6:	6818      	ldr	r0, [r3, #0]
 80032c8:	f005 ff74 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80032cc:	682b      	ldr	r3, [r5, #0]
 80032ce:	9001      	str	r0, [sp, #4]
 80032d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80032d2:	4628      	mov	r0, r5
 80032d4:	4798      	blx	r3
 80032d6:	682b      	ldr	r3, [r5, #0]
 80032d8:	9901      	ldr	r1, [sp, #4]
 80032da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80032dc:	4604      	mov	r4, r0
 80032de:	4628      	mov	r0, r5
 80032e0:	4798      	blx	r3
 80032e2:	682b      	ldr	r3, [r5, #0]
 80032e4:	9901      	ldr	r1, [sp, #4]
 80032e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032e8:	fb14 f400 	smulbb	r4, r4, r0
 80032ec:	4628      	mov	r0, r5
 80032ee:	4798      	blx	r3
 80032f0:	b2a4      	uxth	r4, r4
 80032f2:	1823      	adds	r3, r4, r0
 80032f4:	b21b      	sxth	r3, r3
 80032f6:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80032fa:	b002      	add	sp, #8
 80032fc:	bd70      	pop	{r4, r5, r6, pc}
 80032fe:	2300      	movs	r3, #0
 8003300:	e7f9      	b.n	80032f6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003302:	bf00      	nop
 8003304:	20012e00 	.word	0x20012e00
 8003308:	20012dfc 	.word	0x20012dfc
 800330c:	0802c708 	.word	0x0802c708
 8003310:	0802c74a 	.word	0x0802c74a
 8003314:	0802c785 	.word	0x0802c785
 8003318:	20012e04 	.word	0x20012e04
 800331c:	20012e08 	.word	0x20012e08

08003320 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8003320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003324:	ed2d 8b06 	vpush	{d8-d10}
 8003328:	4604      	mov	r4, r0
 800332a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800332c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800332e:	2500      	movs	r5, #0
 8003330:	f014 f9b6 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8003334:	4b66      	ldr	r3, [pc, #408]	; (80034d0 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8003336:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003338:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800333c:	2226      	movs	r2, #38	; 0x26
 800333e:	4629      	mov	r1, r5
 8003340:	4658      	mov	r0, fp
 8003342:	f027 fec4 	bl	802b0ce <memset>
 8003346:	4658      	mov	r0, fp
 8003348:	f7ff ff72 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 800334c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003350:	26ff      	movs	r6, #255	; 0xff
 8003352:	4b60      	ldr	r3, [pc, #384]	; (80034d4 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 8003354:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003356:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003358:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800335c:	4629      	mov	r1, r5
 800335e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003362:	4650      	mov	r0, sl
        : color(col)
 8003364:	66a5      	str	r5, [r4, #104]	; 0x68
 8003366:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800336a:	f027 feb0 	bl	802b0ce <memset>
 800336e:	4650      	mov	r0, sl
 8003370:	f7ff ff5e 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8003374:	4b58      	ldr	r3, [pc, #352]	; (80034d8 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8003376:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003378:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800337c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003380:	a90a      	add	r1, sp, #40	; 0x28
 8003382:	4650      	mov	r0, sl
 8003384:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003388:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800338c:	f00f ffff 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8003390:	4648      	mov	r0, r9
 8003392:	f7ff ff5f 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8003396:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800339a:	4b50      	ldr	r3, [pc, #320]	; (80034dc <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800339c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80033a0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80033a4:	4638      	mov	r0, r7
 80033a6:	f00e febb 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 80033aa:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80033ae:	4618      	mov	r0, r3
 80033b0:	9303      	str	r3, [sp, #12]
 80033b2:	f7ff fd3d 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033b6:	4b4a      	ldr	r3, [pc, #296]	; (80034e0 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 80033b8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80033bc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80033c0:	3324      	adds	r3, #36	; 0x24
 80033c2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80033c6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80033ca:	4640      	mov	r0, r8
 80033cc:	f7ff ff42 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80033d0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80033d4:	4618      	mov	r0, r3
 80033d6:	ee08 3a10 	vmov	s16, r3
 80033da:	f7ff ff3b 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80033de:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80033e2:	4618      	mov	r0, r3
 80033e4:	ee08 3a90 	vmov	s17, r3
 80033e8:	f7ff ff34 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80033ec:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80033f0:	4618      	mov	r0, r3
 80033f2:	ee09 3a10 	vmov	s18, r3
 80033f6:	f010 f90b 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80033fa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80033fe:	4618      	mov	r0, r3
 8003400:	ee09 3a90 	vmov	s19, r3
 8003404:	f010 f904 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003408:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800340c:	4618      	mov	r0, r3
 800340e:	ee0a 3a10 	vmov	s20, r3
 8003412:	f010 f8fd 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003416:	4a33      	ldr	r2, [pc, #204]	; (80034e4 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8003418:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800341c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8003420:	4a31      	ldr	r2, [pc, #196]	; (80034e8 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003422:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003426:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800342a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800342e:	f010 ffab 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003432:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003436:	462a      	mov	r2, r5
 8003438:	4658      	mov	r0, fp
 800343a:	9300      	str	r3, [sp, #0]
 800343c:	4629      	mov	r1, r5
 800343e:	23f0      	movs	r3, #240	; 0xf0
 8003440:	f7ff fee2 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003444:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003446:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800344a:	66a3      	str	r3, [r4, #104]	; 0x68
 800344c:	4659      	mov	r1, fp
 800344e:	4630      	mov	r0, r6
 8003450:	f00d fa0e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003454:	462a      	mov	r2, r5
 8003456:	4650      	mov	r0, sl
 8003458:	4629      	mov	r1, r5
 800345a:	f7ff fec8 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800345e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003460:	4650      	mov	r0, sl
 8003462:	a90a      	add	r1, sp, #40	; 0x28
 8003464:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003468:	f00f ff91 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800346c:	4651      	mov	r1, sl
 800346e:	4630      	mov	r0, r6
 8003470:	f00d f9fe 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8003474:	f44f 729a 	mov.w	r2, #308	; 0x134
 8003478:	2159      	movs	r1, #89	; 0x59
 800347a:	4648      	mov	r0, r9
 800347c:	f7ff feb7 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003480:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003484:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003488:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800348c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003490:	4650      	mov	r0, sl
 8003492:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003496:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800349a:	4649      	mov	r1, r9
 800349c:	4798      	blx	r3
 800349e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80034a2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80034a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034aa:	4b10      	ldr	r3, [pc, #64]	; (80034ec <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 80034ac:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 80034ae:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80034b2:	b92b      	cbnz	r3, 80034c0 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 80034b4:	4b0e      	ldr	r3, [pc, #56]	; (80034f0 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 80034b6:	4a0f      	ldr	r2, [pc, #60]	; (80034f4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 80034b8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034ba:	480f      	ldr	r0, [pc, #60]	; (80034f8 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 80034bc:	f027 fc02 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80034c0:	4b0e      	ldr	r3, [pc, #56]	; (80034fc <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034c2:	881b      	ldrh	r3, [r3, #0]
 80034c4:	2b24      	cmp	r3, #36	; 0x24
 80034c6:	d81d      	bhi.n	8003504 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 80034c8:	4b0d      	ldr	r3, [pc, #52]	; (8003500 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 80034ca:	4a0a      	ldr	r2, [pc, #40]	; (80034f4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 80034cc:	2161      	movs	r1, #97	; 0x61
 80034ce:	e7f4      	b.n	80034ba <_ZN19CalibrationViewBaseC1Ev+0x19a>
 80034d0:	0802c970 	.word	0x0802c970
 80034d4:	0802f218 	.word	0x0802f218
 80034d8:	0802f3e0 	.word	0x0802f3e0
 80034dc:	0802c8c8 	.word	0x0802c8c8
 80034e0:	0802ef4c 	.word	0x0802ef4c
 80034e4:	0802c958 	.word	0x0802c958
 80034e8:	080031a5 	.word	0x080031a5
 80034ec:	20012dfc 	.word	0x20012dfc
 80034f0:	0802c708 	.word	0x0802c708
 80034f4:	0802c80a 	.word	0x0802c80a
 80034f8:	0802c785 	.word	0x0802c785
 80034fc:	20012e00 	.word	0x20012e00
 8003500:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 8003504:	4b93      	ldr	r3, [pc, #588]	; (8003754 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8003506:	2124      	movs	r1, #36	; 0x24
 8003508:	6818      	ldr	r0, [r3, #0]
 800350a:	f005 fe53 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 800350e:	4a92      	ldr	r2, [pc, #584]	; (8003758 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8003510:	4603      	mov	r3, r0
 8003512:	2104      	movs	r1, #4
 8003514:	4650      	mov	r0, sl
 8003516:	f015 fdb3 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800351a:	4648      	mov	r0, r9
        wc1 = value;
 800351c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8003520:	f00f fb3a 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003524:	4b8d      	ldr	r3, [pc, #564]	; (800375c <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8003526:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8003528:	a90a      	add	r1, sp, #40	; 0x28
 800352a:	2325      	movs	r3, #37	; 0x25
 800352c:	4648      	mov	r0, r9
 800352e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003532:	f00f fb51 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003536:	4649      	mov	r1, r9
 8003538:	4630      	mov	r0, r6
 800353a:	f00d f999 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800353e:	230a      	movs	r3, #10
 8003540:	9300      	str	r3, [sp, #0]
 8003542:	2232      	movs	r2, #50	; 0x32
 8003544:	23f0      	movs	r3, #240	; 0xf0
 8003546:	4629      	mov	r1, r5
 8003548:	4638      	mov	r0, r7
 800354a:	f7ff fe5d 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 800354e:	9b03      	ldr	r3, [sp, #12]
 8003550:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003554:	22a0      	movs	r2, #160	; 0xa0
 8003556:	4611      	mov	r1, r2
 8003558:	4638      	mov	r0, r7
 800355a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800355e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8003562:	f00e fef3 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003566:	22a0      	movs	r2, #160	; 0xa0
 8003568:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800356c:	4638      	mov	r0, r7
 800356e:	f00e fef8 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003572:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003576:	2b20      	cmp	r3, #32
 8003578:	d005      	beq.n	8003586 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800357a:	2320      	movs	r3, #32
 800357c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8003580:	4638      	mov	r0, r7
 8003582:	f00e fded 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003586:	4638      	mov	r0, r7
 8003588:	2101      	movs	r1, #1
 800358a:	f00e fef5 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800358e:	4639      	mov	r1, r7
 8003590:	4630      	mov	r0, r6
 8003592:	ad04      	add	r5, sp, #16
        color = newColor;
 8003594:	f04f 37ff 	mov.w	r7, #4294967295
 8003598:	f00d f96a 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800359c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 80035a0:	223c      	movs	r2, #60	; 0x3c
 80035a2:	4640      	mov	r0, r8
 80035a4:	2146      	movs	r1, #70	; 0x46
 80035a6:	f7ff fe22 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80035aa:	4641      	mov	r1, r8
 80035ac:	4628      	mov	r0, r5
        color = newColor;
 80035ae:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80035b2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80035b6:	f00f f875 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035ba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80035be:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80035c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80035c6:	f8df 9194 	ldr.w	r9, [pc, #404]	; 800375c <_ZN19CalibrationViewBaseC1Ev+0x43c>
 80035ca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80035ce:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 80035d0:	a90a      	add	r1, sp, #40	; 0x28
 80035d2:	4640      	mov	r0, r8
 80035d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035d8:	f00f fafe 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035dc:	4641      	mov	r1, r8
 80035de:	4630      	mov	r0, r6
 80035e0:	f00d f946 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80035e4:	ee18 0a10 	vmov	r0, s16
 80035e8:	2223      	movs	r2, #35	; 0x23
 80035ea:	2145      	movs	r1, #69	; 0x45
 80035ec:	f7ff fdff 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80035f0:	ee18 1a10 	vmov	r1, s16
 80035f4:	4628      	mov	r0, r5
        color = newColor;
 80035f6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80035fa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80035fe:	f00f f851 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003602:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003606:	ee18 3a10 	vmov	r3, s16
 800360a:	333c      	adds	r3, #60	; 0x3c
 800360c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003610:	235a      	movs	r3, #90	; 0x5a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8003612:	ee18 0a10 	vmov	r0, s16
 8003616:	a90a      	add	r1, sp, #40	; 0x28
 8003618:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800361c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003620:	f00f fada 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003624:	ee18 1a10 	vmov	r1, s16
 8003628:	4630      	mov	r0, r6
 800362a:	f00d f921 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800362e:	ee18 0a90 	vmov	r0, s17
 8003632:	220c      	movs	r2, #12
 8003634:	2136      	movs	r1, #54	; 0x36
 8003636:	f7ff fdda 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800363a:	ee18 1a90 	vmov	r1, s17
 800363e:	4628      	mov	r0, r5
        color = newColor;
 8003640:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8003644:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8003648:	f00f f82c 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800364c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003650:	ee18 3a90 	vmov	r3, s17
 8003654:	333c      	adds	r3, #60	; 0x3c
 8003656:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800365a:	2359      	movs	r3, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800365c:	ee18 0a90 	vmov	r0, s17
 8003660:	a90a      	add	r1, sp, #40	; 0x28
 8003662:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003666:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800366a:	f00f fab5 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800366e:	ee18 1a90 	vmov	r1, s17
 8003672:	4630      	mov	r0, r6
 8003674:	f00d f8fc 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8003678:	ee19 0a10 	vmov	r0, s18
 800367c:	22f0      	movs	r2, #240	; 0xf0
 800367e:	2121      	movs	r1, #33	; 0x21
 8003680:	f7ff fdb5 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8003684:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003688:	aa0a      	add	r2, sp, #40	; 0x28
 800368a:	f04f 0802 	mov.w	r8, #2
 800368e:	a909      	add	r1, sp, #36	; 0x24
 8003690:	ee19 0a10 	vmov	r0, s18
 8003694:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8003698:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800369c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80036a0:	f00f fc7f 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80036a4:	2358      	movs	r3, #88	; 0x58
 80036a6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80036aa:	3510      	adds	r5, #16
        updateTextPosition();
 80036ac:	ee19 0a10 	vmov	r0, s18
 80036b0:	f7ff fdf2 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80036b4:	ee19 1a10 	vmov	r1, s18
 80036b8:	4630      	mov	r0, r6
        colorPressed = col;
 80036ba:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80036be:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80036c2:	f00d f8d5 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80036c6:	ee19 0a90 	vmov	r0, s19
 80036ca:	22aa      	movs	r2, #170	; 0xaa
 80036cc:	2121      	movs	r1, #33	; 0x21
 80036ce:	f7ff fd8e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80036d2:	aa0a      	add	r2, sp, #40	; 0x28
 80036d4:	a909      	add	r1, sp, #36	; 0x24
 80036d6:	ee19 0a90 	vmov	r0, s19
 80036da:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80036de:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80036e2:	f00f fc5e 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80036e6:	2357      	movs	r3, #87	; 0x57
 80036e8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80036ec:	ee19 0a90 	vmov	r0, s19
 80036f0:	f7ff fdd2 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80036f4:	ee19 1a90 	vmov	r1, s19
 80036f8:	4630      	mov	r0, r6
        colorPressed = col;
 80036fa:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80036fe:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003702:	f00d f8b5 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8003706:	ee1a 0a10 	vmov	r0, s20
 800370a:	2264      	movs	r2, #100	; 0x64
 800370c:	2121      	movs	r1, #33	; 0x21
 800370e:	f7ff fd6e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003712:	aa0a      	add	r2, sp, #40	; 0x28
 8003714:	a909      	add	r1, sp, #36	; 0x24
 8003716:	ee1a 0a10 	vmov	r0, s20
 800371a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800371e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003722:	f00f fc3e 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003726:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8003728:	ee1a 0a10 	vmov	r0, s20
 800372c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8003730:	f7ff fdb2 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003734:	4630      	mov	r0, r6
        colorPressed = col;
 8003736:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800373a:	ee1a 1a10 	vmov	r1, s20
 800373e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8003742:	f00d f895 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003746:	4620      	mov	r0, r4
 8003748:	b00d      	add	sp, #52	; 0x34
 800374a:	ecbd 8b06 	vpop	{d8-d10}
 800374e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003752:	bf00      	nop
 8003754:	20012e08 	.word	0x20012e08
 8003758:	0802c842 	.word	0x0802c842
 800375c:	0802c8b8 	.word	0x0802c8b8

08003760 <_ZN24Calibration_HallViewBase25function_cali_hall_sensorEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_hall_sensor()
    {
        // Override and implement this function in Calibration_Hall
    }
 8003760:	4770      	bx	lr

08003762 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8003762:	4770      	bx	lr

08003764 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003764:	4770      	bx	lr

08003766 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003766:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003768:	68c2      	ldr	r2, [r0, #12]
 800376a:	6844      	ldr	r4, [r0, #4]
 800376c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800376e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003770:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003774:	07d2      	lsls	r2, r2, #31
 8003776:	bf48      	it	mi
 8003778:	5962      	ldrmi	r2, [r4, r5]
 800377a:	689b      	ldr	r3, [r3, #8]
    }
 800377c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800377e:	bf48      	it	mi
 8003780:	58d3      	ldrmi	r3, [r2, r3]
 8003782:	4718      	bx	r3

08003784 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003784:	6843      	ldr	r3, [r0, #4]
 8003786:	b12b      	cbz	r3, 8003794 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003788:	6883      	ldr	r3, [r0, #8]
 800378a:	b92b      	cbnz	r3, 8003798 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800378c:	68c0      	ldr	r0, [r0, #12]
 800378e:	f000 0001 	and.w	r0, r0, #1
 8003792:	4770      	bx	lr
 8003794:	4618      	mov	r0, r3
 8003796:	4770      	bx	lr
 8003798:	2001      	movs	r0, #1
    }
 800379a:	4770      	bx	lr

0800379c <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800379c:	b510      	push	{r4, lr}
 800379e:	2110      	movs	r1, #16
 80037a0:	4604      	mov	r4, r0
 80037a2:	f026 fba8 	bl	8029ef6 <_ZdlPvj>
 80037a6:	4620      	mov	r0, r4
 80037a8:	bd10      	pop	{r4, pc}
	...

080037ac <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 80037ac:	b510      	push	{r4, lr}
 80037ae:	4b03      	ldr	r3, [pc, #12]	; (80037bc <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 80037b0:	6003      	str	r3, [r0, #0]
 80037b2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80037b4:	f010 fdf2 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80037b8:	4620      	mov	r0, r4
 80037ba:	bd10      	pop	{r4, pc}
 80037bc:	0802c9bc 	.word	0x0802c9bc

080037c0 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 80037c0:	b507      	push	{r0, r1, r2, lr}
 80037c2:	4b07      	ldr	r3, [pc, #28]	; (80037e0 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 80037c4:	6003      	str	r3, [r0, #0]
 80037c6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80037c8:	f010 fde8 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80037cc:	9801      	ldr	r0, [sp, #4]
 80037ce:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 80037d2:	f026 fb90 	bl	8029ef6 <_ZdlPvj>
 80037d6:	9801      	ldr	r0, [sp, #4]
 80037d8:	b003      	add	sp, #12
 80037da:	f85d fb04 	ldr.w	pc, [sp], #4
 80037de:	bf00      	nop
 80037e0:	0802c9bc 	.word	0x0802c9bc

080037e4 <_ZN24Calibration_HallViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
 80037e4:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 80037e6:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80037ea:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 80037ee:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80037f0:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80037f2:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80037f6:	d105      	bne.n	8003804 <_ZN24Calibration_HallViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
 80037f8:	6803      	ldr	r3, [r0, #0]
 80037fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80037fc:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80037fe:	2300      	movs	r3, #0
 8003800:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003804:	bd10      	pop	{r4, pc}

08003806 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003806:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 800380a:	4288      	cmp	r0, r1
{
 800380c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800380e:	d105      	bne.n	800381c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003810:	f012 fac6 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003814:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003818:	f001 b970 	b.w	8004afc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800381c:	bd08      	pop	{r3, pc}
	...

08003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003820:	b510      	push	{r4, lr}
 8003822:	4604      	mov	r4, r0
        : TextArea()
 8003824:	f7ff fd16 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003828:	4b02      	ldr	r3, [pc, #8]	; (8003834 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800382a:	6023      	str	r3, [r4, #0]
 800382c:	2300      	movs	r3, #0
 800382e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003830:	4620      	mov	r0, r4
 8003832:	bd10      	pop	{r4, pc}
 8003834:	0802c8c8 	.word	0x0802c8c8

08003838 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8003838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800383c:	ed2d 8b06 	vpush	{d8-d10}
 8003840:	4604      	mov	r4, r0
 8003842:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003844:	46a3      	mov	fp, r4
 8003846:	2500      	movs	r5, #0
 8003848:	f013 ff2a 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 800384c:	4b69      	ldr	r3, [pc, #420]	; (80039f4 <_ZN24Calibration_HallViewBaseC1Ev+0x1bc>)
 800384e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003850:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003854:	2226      	movs	r2, #38	; 0x26
 8003856:	4629      	mov	r1, r5
 8003858:	4658      	mov	r0, fp
 800385a:	f027 fc38 	bl	802b0ce <memset>
 800385e:	4658      	mov	r0, fp
 8003860:	f7ff fce6 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8003864:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8003868:	27ff      	movs	r7, #255	; 0xff
 800386a:	4b63      	ldr	r3, [pc, #396]	; (80039f8 <_ZN24Calibration_HallViewBaseC1Ev+0x1c0>)
 800386c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800386e:	2226      	movs	r2, #38	; 0x26
 8003870:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003874:	4629      	mov	r1, r5
 8003876:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800387a:	4630      	mov	r0, r6
 800387c:	66a5      	str	r5, [r4, #104]	; 0x68
 800387e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003882:	f027 fc24 	bl	802b0ce <memset>
 8003886:	4630      	mov	r0, r6
 8003888:	f7ff fcd2 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 800388c:	4b5b      	ldr	r3, [pc, #364]	; (80039fc <_ZN24Calibration_HallViewBaseC1Ev+0x1c4>)
 800388e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003890:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003894:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003898:	a90a      	add	r1, sp, #40	; 0x28
 800389a:	4630      	mov	r0, r6
 800389c:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80038a0:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80038a4:	f00f fd73 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80038a8:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 80038ac:	4650      	mov	r0, sl
 80038ae:	f7ff ffb7 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038b2:	4648      	mov	r0, r9
 80038b4:	f7ff ffb4 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038b8:	f504 7398 	add.w	r3, r4, #304	; 0x130
 80038bc:	4618      	mov	r0, r3
 80038be:	ee09 3a10 	vmov	s18, r3
 80038c2:	f7ff ffad 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038c6:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 80038ca:	4618      	mov	r0, r3
 80038cc:	ee09 3a90 	vmov	s19, r3
 80038d0:	f7ff ffa6 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038d4:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 80038d8:	4618      	mov	r0, r3
 80038da:	ee0a 3a10 	vmov	s20, r3
 80038de:	f00f fe97 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80038e2:	f504 7304 	add.w	r3, r4, #528	; 0x210
 80038e6:	4618      	mov	r0, r3
 80038e8:	f504 7816 	add.w	r8, r4, #600	; 0x258
 80038ec:	ee0a 3a90 	vmov	s21, r3
 80038f0:	f7ff fcb0 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80038f4:	4640      	mov	r0, r8
 80038f6:	f00e fc13 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 80038fa:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80038fe:	4618      	mov	r0, r3
 8003900:	9302      	str	r3, [sp, #8]
 8003902:	f7ff fa95 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003906:	4b3e      	ldr	r3, [pc, #248]	; (8003a00 <_ZN24Calibration_HallViewBaseC1Ev+0x1c8>)
 8003908:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 800390c:	3324      	adds	r3, #36	; 0x24
 800390e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003912:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003916:	4618      	mov	r0, r3
 8003918:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 800391c:	ee08 3a10 	vmov	s16, r3
 8003920:	f7ff fc98 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8003924:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003928:	4618      	mov	r0, r3
 800392a:	ee08 3a90 	vmov	s17, r3
 800392e:	f7ff fc91 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003932:	4a34      	ldr	r2, [pc, #208]	; (8003a04 <_ZN24Calibration_HallViewBaseC1Ev+0x1cc>)
 8003934:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003938:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 800393c:	4a32      	ldr	r2, [pc, #200]	; (8003a08 <_ZN24Calibration_HallViewBaseC1Ev+0x1d0>)
 800393e:	f8c3 51dc 	str.w	r5, [r3, #476]	; 0x1dc
 8003942:	e9c3 2575 	strd	r2, r5, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003946:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800394a:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 800394e:	f010 fd1b 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003952:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003956:	462a      	mov	r2, r5
 8003958:	4658      	mov	r0, fp
 800395a:	9300      	str	r3, [sp, #0]
 800395c:	4629      	mov	r1, r5
 800395e:	23f0      	movs	r3, #240	; 0xf0
 8003960:	f7ff fc52 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003964:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003966:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800396a:	66a3      	str	r3, [r4, #104]	; 0x68
 800396c:	4659      	mov	r1, fp
 800396e:	4638      	mov	r0, r7
 8003970:	f00c ff7e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003974:	462a      	mov	r2, r5
 8003976:	4630      	mov	r0, r6
 8003978:	4629      	mov	r1, r5
 800397a:	f7ff fc38 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800397e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003980:	4630      	mov	r0, r6
 8003982:	a90a      	add	r1, sp, #40	; 0x28
 8003984:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003988:	f00f fd01 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800398c:	4631      	mov	r1, r6
 800398e:	4638      	mov	r0, r7
 8003990:	f00c ff6e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
 8003994:	231b      	movs	r3, #27
 8003996:	22a0      	movs	r2, #160	; 0xa0
 8003998:	9300      	str	r3, [sp, #0]
 800399a:	4629      	mov	r1, r5
 800399c:	23cf      	movs	r3, #207	; 0xcf
 800399e:	4650      	mov	r0, sl
 80039a0:	f7ff fc32 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80039a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80039ac:	ae04      	add	r6, sp, #16
        color = newColor;
 80039ae:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80039b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80039b6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80039ba:	4651      	mov	r1, sl
 80039bc:	4630      	mov	r0, r6
 80039be:	4798      	blx	r3
 80039c0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039c4:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80039c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
 80039cc:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 80039d0:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039d2:	4b0e      	ldr	r3, [pc, #56]	; (8003a0c <_ZN24Calibration_HallViewBaseC1Ev+0x1d4>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	b92b      	cbnz	r3, 80039e4 <_ZN24Calibration_HallViewBaseC1Ev+0x1ac>
 80039d8:	4b0d      	ldr	r3, [pc, #52]	; (8003a10 <_ZN24Calibration_HallViewBaseC1Ev+0x1d8>)
 80039da:	4a0e      	ldr	r2, [pc, #56]	; (8003a14 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 80039dc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039de:	480e      	ldr	r0, [pc, #56]	; (8003a18 <_ZN24Calibration_HallViewBaseC1Ev+0x1e0>)
 80039e0:	f027 f970 	bl	802acc4 <__assert_func>
 80039e4:	4b0d      	ldr	r3, [pc, #52]	; (8003a1c <_ZN24Calibration_HallViewBaseC1Ev+0x1e4>)
 80039e6:	881b      	ldrh	r3, [r3, #0]
 80039e8:	b9e3      	cbnz	r3, 8003a24 <_ZN24Calibration_HallViewBaseC1Ev+0x1ec>
 80039ea:	4b0d      	ldr	r3, [pc, #52]	; (8003a20 <_ZN24Calibration_HallViewBaseC1Ev+0x1e8>)
 80039ec:	4a09      	ldr	r2, [pc, #36]	; (8003a14 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 80039ee:	2161      	movs	r1, #97	; 0x61
 80039f0:	e7f5      	b.n	80039de <_ZN24Calibration_HallViewBaseC1Ev+0x1a6>
 80039f2:	bf00      	nop
 80039f4:	0802c9bc 	.word	0x0802c9bc
 80039f8:	0802f218 	.word	0x0802f218
 80039fc:	0802f3e0 	.word	0x0802f3e0
 8003a00:	0802ef4c 	.word	0x0802ef4c
 8003a04:	0802c9a4 	.word	0x0802c9a4
 8003a08:	08003807 	.word	0x08003807
 8003a0c:	20012dfc 	.word	0x20012dfc
 8003a10:	0802c708 	.word	0x0802c708
 8003a14:	0802c80a 	.word	0x0802c80a
 8003a18:	0802c785 	.word	0x0802c785
 8003a1c:	20012e00 	.word	0x20012e00
 8003a20:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 8003a24:	4bd7      	ldr	r3, [pc, #860]	; (8003d84 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003a26:	4629      	mov	r1, r5
 8003a28:	6818      	ldr	r0, [r3, #0]
 8003a2a:	f005 fbc3 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8003a2e:	4ad6      	ldr	r2, [pc, #856]	; (8003d88 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003a30:	4603      	mov	r3, r0
 8003a32:	210a      	movs	r1, #10
 8003a34:	9803      	ldr	r0, [sp, #12]
 8003a36:	f015 fb23 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003a3a:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003a3c:	4bd3      	ldr	r3, [pc, #844]	; (8003d8c <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a3e:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
 8003a42:	4650      	mov	r0, sl
 8003a44:	930a      	str	r3, [sp, #40]	; 0x28
 8003a46:	a90a      	add	r1, sp, #40	; 0x28
 8003a48:	2301      	movs	r3, #1
 8003a4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003a4e:	f00f f8c3 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a52:	4651      	mov	r1, sl
 8003a54:	4638      	mov	r0, r7
 8003a56:	f00c ff0b 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
 8003a5a:	2116      	movs	r1, #22
 8003a5c:	22bb      	movs	r2, #187	; 0xbb
 8003a5e:	9100      	str	r1, [sp, #0]
 8003a60:	23cf      	movs	r3, #207	; 0xcf
 8003a62:	2119      	movs	r1, #25
 8003a64:	4648      	mov	r0, r9
 8003a66:	f7ff fbcf 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a6a:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003a6e:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003a72:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003a76:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003a7a:	4649      	mov	r1, r9
 8003a7c:	4630      	mov	r0, r6
 8003a7e:	4798      	blx	r3
 8003a80:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a84:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003a88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a8c:	49c0      	ldr	r1, [pc, #768]	; (8003d90 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003a8e:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
 8003a90:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 8003a94:	2b00      	cmp	r3, #0
 8003a96:	d09f      	beq.n	80039d8 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a98:	48be      	ldr	r0, [pc, #760]	; (8003d94 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003a9a:	8803      	ldrh	r3, [r0, #0]
 8003a9c:	2b02      	cmp	r3, #2
 8003a9e:	d9a4      	bls.n	80039ea <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003aa0:	4ab8      	ldr	r2, [pc, #736]	; (8003d84 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003aa2:	2102      	movs	r1, #2
 8003aa4:	6810      	ldr	r0, [r2, #0]
 8003aa6:	f005 fb85 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8003aaa:	4ab7      	ldr	r2, [pc, #732]	; (8003d88 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003aac:	4603      	mov	r3, r0
 8003aae:	210a      	movs	r1, #10
 8003ab0:	4650      	mov	r0, sl
 8003ab2:	f015 fae5 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
 8003ab6:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003aba:	4bb4      	ldr	r3, [pc, #720]	; (8003d8c <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003abc:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003ac0:	4661      	mov	r1, ip
 8003ac2:	4648      	mov	r0, r9
 8003ac4:	f04f 0a03 	mov.w	sl, #3
 8003ac8:	930a      	str	r3, [sp, #40]	; 0x28
 8003aca:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8003ace:	f00f f883 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ad2:	4649      	mov	r1, r9
 8003ad4:	4638      	mov	r0, r7
 8003ad6:	f00c fecb 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
 8003ada:	f04f 0c16 	mov.w	ip, #22
 8003ade:	2277      	movs	r2, #119	; 0x77
 8003ae0:	ee19 0a10 	vmov	r0, s18
 8003ae4:	f8cd c000 	str.w	ip, [sp]
 8003ae8:	23cf      	movs	r3, #207	; 0xcf
 8003aea:	2119      	movs	r1, #25
 8003aec:	f7ff fb8c 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003af0:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003af4:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003af8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003afc:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003b00:	ee19 1a10 	vmov	r1, s18
 8003b04:	4630      	mov	r0, r6
 8003b06:	4798      	blx	r3
 8003b08:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003b0c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003b10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b14:	499e      	ldr	r1, [pc, #632]	; (8003d90 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003b16:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
 8003b18:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8003b1c:	2b00      	cmp	r3, #0
 8003b1e:	f43f af5b 	beq.w	80039d8 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b22:	489c      	ldr	r0, [pc, #624]	; (8003d94 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003b24:	8803      	ldrh	r3, [r0, #0]
 8003b26:	2b04      	cmp	r3, #4
 8003b28:	f67f af5f 	bls.w	80039ea <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003b2c:	4a95      	ldr	r2, [pc, #596]	; (8003d84 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003b2e:	2104      	movs	r1, #4
 8003b30:	6810      	ldr	r0, [r2, #0]
 8003b32:	f005 fb3f 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8003b36:	4a94      	ldr	r2, [pc, #592]	; (8003d88 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003b38:	4603      	mov	r3, r0
 8003b3a:	210a      	movs	r1, #10
 8003b3c:	4648      	mov	r0, r9
 8003b3e:	f015 fa9f 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
 8003b42:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003b46:	4b91      	ldr	r3, [pc, #580]	; (8003d8c <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003b48:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003b4c:	4661      	mov	r1, ip
 8003b4e:	ee19 0a10 	vmov	r0, s18
 8003b52:	930a      	str	r3, [sp, #40]	; 0x28
 8003b54:	2305      	movs	r3, #5
 8003b56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003b5a:	f00f f83d 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b5e:	ee19 1a10 	vmov	r1, s18
 8003b62:	4638      	mov	r0, r7
 8003b64:	f00c fe84 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
 8003b68:	f04f 0c1b 	mov.w	ip, #27
 8003b6c:	225c      	movs	r2, #92	; 0x5c
 8003b6e:	ee19 0a90 	vmov	r0, s19
 8003b72:	f8cd c000 	str.w	ip, [sp]
 8003b76:	23cf      	movs	r3, #207	; 0xcf
 8003b78:	4629      	mov	r1, r5
 8003b7a:	f7ff fb45 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b7e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 8003b82:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 8003b86:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003b8a:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8003b8e:	ee19 1a90 	vmov	r1, s19
 8003b92:	4630      	mov	r0, r6
 8003b94:	4798      	blx	r3
 8003b96:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003b9a:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8003b9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ba2:	497b      	ldr	r1, [pc, #492]	; (8003d90 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003ba4:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
 8003ba6:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	f43f af14 	beq.w	80039d8 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bb0:	4878      	ldr	r0, [pc, #480]	; (8003d94 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003bb2:	8803      	ldrh	r3, [r0, #0]
 8003bb4:	2b06      	cmp	r3, #6
 8003bb6:	f67f af18 	bls.w	80039ea <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003bba:	4a72      	ldr	r2, [pc, #456]	; (8003d84 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003bbc:	2106      	movs	r1, #6
 8003bbe:	6810      	ldr	r0, [r2, #0]
 8003bc0:	f005 faf8 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8003bc4:	4a70      	ldr	r2, [pc, #448]	; (8003d88 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003bc6:	4603      	mov	r3, r0
 8003bc8:	210a      	movs	r1, #10
 8003bca:	4648      	mov	r0, r9
 8003bcc:	f015 fa58 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003bd0:	4b6e      	ldr	r3, [pc, #440]	; (8003d8c <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003bd2:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
 8003bd4:	ee19 0a90 	vmov	r0, s19
 8003bd8:	2307      	movs	r3, #7
 8003bda:	a90a      	add	r1, sp, #40	; 0x28
 8003bdc:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003be0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003be4:	f00e fff8 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003be8:	ee19 1a90 	vmov	r1, s19
 8003bec:	4638      	mov	r0, r7
 8003bee:	f00c fe3f 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003bf2:	ee1a 0a10 	vmov	r0, s20
 8003bf6:	f240 1201 	movw	r2, #257	; 0x101
 8003bfa:	2121      	movs	r1, #33	; 0x21
 8003bfc:	f7ff faf7 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003c00:	aa0a      	add	r2, sp, #40	; 0x28
 8003c02:	2302      	movs	r3, #2
 8003c04:	a909      	add	r1, sp, #36	; 0x24
 8003c06:	ee1a 0a10 	vmov	r0, s20
 8003c0a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003c0e:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8003c12:	f00f f9c6 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003c16:	2319      	movs	r3, #25
        updateTextPosition();
 8003c18:	ee1a 0a10 	vmov	r0, s20
 8003c1c:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003c20:	f7ff fb3a 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003c24:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003c28:	330c      	adds	r3, #12
 8003c2a:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8003c2e:	ee1a 1a10 	vmov	r1, s20
 8003c32:	4638      	mov	r0, r7
        colorPressed = col;
 8003c34:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8003c38:	f00c fe1a 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(32, 60);
 8003c3c:	223c      	movs	r2, #60	; 0x3c
 8003c3e:	ee1a 0a90 	vmov	r0, s21
 8003c42:	2120      	movs	r1, #32
 8003c44:	f7ff fad3 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8003c48:	ee1a 1a90 	vmov	r1, s21
 8003c4c:	4630      	mov	r0, r6
        color = newColor;
 8003c4e:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8003c52:	f8a4 5244 	strh.w	r5, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8003c56:	f00e fd25 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c5a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003c5e:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003c62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003c66:	4b49      	ldr	r3, [pc, #292]	; (8003d8c <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003c68:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003c6a:	ee1a 0a90 	vmov	r0, s21
 8003c6e:	231a      	movs	r3, #26
 8003c70:	a90a      	add	r1, sp, #40	; 0x28
 8003c72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003c76:	f00e ffaf 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c7a:	ee1a 1a90 	vmov	r1, s21
 8003c7e:	4638      	mov	r0, r7
 8003c80:	f00c fdf6 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003c84:	230a      	movs	r3, #10
 8003c86:	9300      	str	r3, [sp, #0]
 8003c88:	2232      	movs	r2, #50	; 0x32
 8003c8a:	23f0      	movs	r3, #240	; 0xf0
 8003c8c:	4629      	mov	r1, r5
 8003c8e:	4640      	mov	r0, r8
 8003c90:	f7ff faba 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003c94:	9b02      	ldr	r3, [sp, #8]
 8003c96:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003c9a:	22a0      	movs	r2, #160	; 0xa0
 8003c9c:	4611      	mov	r1, r2
 8003c9e:	4640      	mov	r0, r8
 8003ca0:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003ca4:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8003ca8:	f00e fb50 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cac:	22a0      	movs	r2, #160	; 0xa0
 8003cae:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003cb2:	4640      	mov	r0, r8
 8003cb4:	f00e fb55 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003cb8:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8003cbc:	2b20      	cmp	r3, #32
 8003cbe:	d005      	beq.n	8003ccc <_ZN24Calibration_HallViewBaseC1Ev+0x494>
        lineWidthQ5 = widthQ5;
 8003cc0:	2320      	movs	r3, #32
 8003cc2:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 8003cc6:	4640      	mov	r0, r8
 8003cc8:	f00e fa4a 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003ccc:	4640      	mov	r0, r8
 8003cce:	2101      	movs	r1, #1
 8003cd0:	f00e fb52 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003cd4:	4641      	mov	r1, r8
 8003cd6:	4638      	mov	r0, r7
 8003cd8:	f00c fdca 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003cdc:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8003cde:	ee18 0a10 	vmov	r0, s16
 8003ce2:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003ce4:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8003ce8:	f04f 0800 	mov.w	r8, #0
 8003cec:	2145      	movs	r1, #69	; 0x45
 8003cee:	f7ff fa7e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003cf2:	ee18 1a10 	vmov	r1, s16
 8003cf6:	4628      	mov	r0, r5
        color = newColor;
 8003cf8:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8003cfc:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8003d00:	f00e fcd0 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d04:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d08:	ee18 3a10 	vmov	r3, s16
 8003d0c:	333c      	adds	r3, #60	; 0x3c
 8003d0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003d12:	4e1e      	ldr	r6, [pc, #120]	; (8003d8c <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003d14:	960a      	str	r6, [sp, #40]	; 0x28
 8003d16:	231b      	movs	r3, #27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003d18:	ee18 0a10 	vmov	r0, s16
 8003d1c:	a90a      	add	r1, sp, #40	; 0x28
 8003d1e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003d22:	f00e ff59 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d26:	ee18 1a10 	vmov	r1, s16
 8003d2a:	4638      	mov	r0, r7
 8003d2c:	f00c fda0 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003d30:	ee18 0a90 	vmov	r0, s17
 8003d34:	220c      	movs	r2, #12
 8003d36:	2136      	movs	r1, #54	; 0x36
 8003d38:	f7ff fa59 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8003d3c:	ee18 1a90 	vmov	r1, s17
 8003d40:	4628      	mov	r0, r5
        color = newColor;
 8003d42:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8003d46:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003d4a:	f00e fcab 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d4e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d52:	ee18 3a90 	vmov	r3, s17
 8003d56:	333c      	adds	r3, #60	; 0x3c
 8003d58:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003d5c:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003d5e:	ee18 0a90 	vmov	r0, s17
 8003d62:	a90a      	add	r1, sp, #40	; 0x28
 8003d64:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003d68:	960a      	str	r6, [sp, #40]	; 0x28
 8003d6a:	f00e ff35 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d6e:	4638      	mov	r0, r7
 8003d70:	ee18 1a90 	vmov	r1, s17
 8003d74:	f00c fd7c 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003d78:	4620      	mov	r0, r4
 8003d7a:	b00d      	add	sp, #52	; 0x34
 8003d7c:	ecbd 8b06 	vpop	{d8-d10}
 8003d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d84:	20012e08 	.word	0x20012e08
 8003d88:	0802c842 	.word	0x0802c842
 8003d8c:	0802c8b8 	.word	0x0802c8b8
 8003d90:	20012dfc 	.word	0x20012dfc
 8003d94:	20012e00 	.word	0x20012e00

08003d98 <_ZN23Calibration_PadViewBase17function_cali_padEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_pad()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003d98:	4770      	bx	lr

08003d9a <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003d9a:	4770      	bx	lr

08003d9c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d9c:	4770      	bx	lr

08003d9e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d9e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003da0:	68c2      	ldr	r2, [r0, #12]
 8003da2:	6844      	ldr	r4, [r0, #4]
 8003da4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003da6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003da8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003dac:	07d2      	lsls	r2, r2, #31
 8003dae:	bf48      	it	mi
 8003db0:	5962      	ldrmi	r2, [r4, r5]
 8003db2:	689b      	ldr	r3, [r3, #8]
    }
 8003db4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003db6:	bf48      	it	mi
 8003db8:	58d3      	ldrmi	r3, [r2, r3]
 8003dba:	4718      	bx	r3

08003dbc <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003dbc:	6843      	ldr	r3, [r0, #4]
 8003dbe:	b12b      	cbz	r3, 8003dcc <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003dc0:	6883      	ldr	r3, [r0, #8]
 8003dc2:	b92b      	cbnz	r3, 8003dd0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003dc4:	68c0      	ldr	r0, [r0, #12]
 8003dc6:	f000 0001 	and.w	r0, r0, #1
 8003dca:	4770      	bx	lr
 8003dcc:	4618      	mov	r0, r3
 8003dce:	4770      	bx	lr
 8003dd0:	2001      	movs	r0, #1
    }
 8003dd2:	4770      	bx	lr

08003dd4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003dd4:	b510      	push	{r4, lr}
 8003dd6:	2110      	movs	r1, #16
 8003dd8:	4604      	mov	r4, r0
 8003dda:	f026 f88c 	bl	8029ef6 <_ZdlPvj>
 8003dde:	4620      	mov	r0, r4
 8003de0:	bd10      	pop	{r4, pc}
	...

08003de4 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003de4:	b510      	push	{r4, lr}
 8003de6:	4b03      	ldr	r3, [pc, #12]	; (8003df4 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003de8:	6003      	str	r3, [r0, #0]
 8003dea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003dec:	f010 fad6 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003df0:	4620      	mov	r0, r4
 8003df2:	bd10      	pop	{r4, pc}
 8003df4:	0802ca0c 	.word	0x0802ca0c

08003df8 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003df8:	b507      	push	{r0, r1, r2, lr}
 8003dfa:	4b07      	ldr	r3, [pc, #28]	; (8003e18 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003dfc:	6003      	str	r3, [r0, #0]
 8003dfe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003e00:	f010 facc 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003e04:	9801      	ldr	r0, [sp, #4]
 8003e06:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003e0a:	f026 f874 	bl	8029ef6 <_ZdlPvj>
 8003e0e:	9801      	ldr	r0, [sp, #4]
 8003e10:	b003      	add	sp, #12
 8003e12:	f85d fb04 	ldr.w	pc, [sp], #4
 8003e16:	bf00      	nop
 8003e18:	0802ca0c 	.word	0x0802ca0c

08003e1c <_ZN23Calibration_PadViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_PadViewBase::handleTickEvent()
{
 8003e1c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003e1e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8003e22:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 8003e26:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003e28:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003e2a:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003e2e:	d105      	bne.n	8003e3c <_ZN23Calibration_PadViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_pad
        function_cali_pad();
 8003e30:	6803      	ldr	r3, [r0, #0]
 8003e32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e34:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8003e36:	2300      	movs	r3, #0
 8003e38:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003e3c:	bd10      	pop	{r4, pc}

08003e3e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003e3e:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003e42:	4288      	cmp	r0, r1
{
 8003e44:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003e46:	d105      	bne.n	8003e54 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003e48:	f011 ffaa 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003e4c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003e50:	f000 be54 	b.w	8004afc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003e54:	bd08      	pop	{r3, pc}
	...

08003e58 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e5c:	ed2d 8b06 	vpush	{d8-d10}
 8003e60:	4604      	mov	r4, r0
 8003e62:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003e64:	46a3      	mov	fp, r4
 8003e66:	2600      	movs	r6, #0
 8003e68:	f013 fc1a 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8003e6c:	4b6a      	ldr	r3, [pc, #424]	; (8004018 <_ZN23Calibration_PadViewBaseC1Ev+0x1c0>)
 8003e6e:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003e70:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003e74:	2226      	movs	r2, #38	; 0x26
 8003e76:	4631      	mov	r1, r6
 8003e78:	4658      	mov	r0, fp
 8003e7a:	f027 f928 	bl	802b0ce <memset>
 8003e7e:	4658      	mov	r0, fp
 8003e80:	f7ff f9d6 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8003e84:	f104 056c 	add.w	r5, r4, #108	; 0x6c
 8003e88:	27ff      	movs	r7, #255	; 0xff
 8003e8a:	4b64      	ldr	r3, [pc, #400]	; (800401c <_ZN23Calibration_PadViewBaseC1Ev+0x1c4>)
 8003e8c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003e8e:	2226      	movs	r2, #38	; 0x26
 8003e90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e94:	4631      	mov	r1, r6
 8003e96:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003e9a:	4628      	mov	r0, r5
 8003e9c:	66a6      	str	r6, [r4, #104]	; 0x68
 8003e9e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003ea2:	f027 f914 	bl	802b0ce <memset>
 8003ea6:	4628      	mov	r0, r5
 8003ea8:	f7ff f9c2 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8003eac:	4b5c      	ldr	r3, [pc, #368]	; (8004020 <_ZN23Calibration_PadViewBaseC1Ev+0x1c8>)
 8003eae:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003eb0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003eb4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003eb8:	a90a      	add	r1, sp, #40	; 0x28
 8003eba:	4628      	mov	r0, r5
 8003ebc:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003ec0:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003ec4:	f00f fa63 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003ec8:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003ecc:	4650      	mov	r0, sl
 8003ece:	f7ff fca7 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ed2:	4648      	mov	r0, r9
 8003ed4:	f7ff fca4 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ed8:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003edc:	4618      	mov	r0, r3
 8003ede:	ee09 3a10 	vmov	s18, r3
 8003ee2:	f7ff fc9d 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ee6:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003eea:	4618      	mov	r0, r3
 8003eec:	ee09 3a90 	vmov	s19, r3
 8003ef0:	f7ff fc96 	bl	8003820 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ef4:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003ef8:	4618      	mov	r0, r3
 8003efa:	ee0a 3a10 	vmov	s20, r3
 8003efe:	f00f fb87 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003f02:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003f06:	4618      	mov	r0, r3
 8003f08:	f504 7816 	add.w	r8, r4, #600	; 0x258
 8003f0c:	ee0a 3a90 	vmov	s21, r3
 8003f10:	f7ff f9a0 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8003f14:	4640      	mov	r0, r8
 8003f16:	f00e f903 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8003f1a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003f1e:	4618      	mov	r0, r3
 8003f20:	9302      	str	r3, [sp, #8]
 8003f22:	f7fe ff85 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f26:	4b3f      	ldr	r3, [pc, #252]	; (8004024 <_ZN23Calibration_PadViewBaseC1Ev+0x1cc>)
 8003f28:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003f2c:	3324      	adds	r3, #36	; 0x24
 8003f2e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003f32:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003f36:	4618      	mov	r0, r3
 8003f38:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
 8003f3c:	ee08 3a10 	vmov	s16, r3
 8003f40:	f7ff f988 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8003f44:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003f48:	4618      	mov	r0, r3
 8003f4a:	ee08 3a90 	vmov	s17, r3
 8003f4e:	f7ff f981 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003f52:	4a35      	ldr	r2, [pc, #212]	; (8004028 <_ZN23Calibration_PadViewBaseC1Ev+0x1d0>)
 8003f54:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003f58:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003f5c:	4a33      	ldr	r2, [pc, #204]	; (800402c <_ZN23Calibration_PadViewBaseC1Ev+0x1d4>)
 8003f5e:	f8c3 61dc 	str.w	r6, [r3, #476]	; 0x1dc
 8003f62:	e9c3 2675 	strd	r2, r6, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003f66:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003f6a:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003f6e:	f010 fa0b 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003f72:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003f76:	4632      	mov	r2, r6
 8003f78:	4658      	mov	r0, fp
 8003f7a:	9300      	str	r3, [sp, #0]
 8003f7c:	4631      	mov	r1, r6
 8003f7e:	23f0      	movs	r3, #240	; 0xf0
 8003f80:	f7ff f942 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f84:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003f86:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003f8a:	66a3      	str	r3, [r4, #104]	; 0x68
 8003f8c:	4659      	mov	r1, fp
 8003f8e:	4638      	mov	r0, r7
 8003f90:	f00c fc6e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003f94:	4632      	mov	r2, r6
 8003f96:	4628      	mov	r0, r5
 8003f98:	4631      	mov	r1, r6
 8003f9a:	f7ff f928 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8003f9e:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003fa2:	4628      	mov	r0, r5
 8003fa4:	a90a      	add	r1, sp, #40	; 0x28
 8003fa6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003faa:	f00f f9f0 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003fae:	4629      	mov	r1, r5
 8003fb0:	4638      	mov	r0, r7
 8003fb2:	f00c fc5d 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_S.setPosition(0, 92, 207, 27);
 8003fb6:	231b      	movs	r3, #27
 8003fb8:	225c      	movs	r2, #92	; 0x5c
 8003fba:	9300      	str	r3, [sp, #0]
 8003fbc:	4631      	mov	r1, r6
 8003fbe:	23cf      	movs	r3, #207	; 0xcf
 8003fc0:	4650      	mov	r0, sl
 8003fc2:	f7ff f921 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fc6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003fca:	f8a4 60cc 	strh.w	r6, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003fce:	ad04      	add	r5, sp, #16
        color = newColor;
 8003fd0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003fd4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003fd8:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003fdc:	4651      	mov	r1, sl
 8003fde:	4628      	mov	r0, r5
 8003fe0:	4798      	blx	r3
 8003fe2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003fe6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003fea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NNGV).getText());
 8003fee:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003ff2:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ff4:	4b0e      	ldr	r3, [pc, #56]	; (8004030 <_ZN23Calibration_PadViewBaseC1Ev+0x1d8>)
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	b92b      	cbnz	r3, 8004006 <_ZN23Calibration_PadViewBaseC1Ev+0x1ae>
 8003ffa:	4b0e      	ldr	r3, [pc, #56]	; (8004034 <_ZN23Calibration_PadViewBaseC1Ev+0x1dc>)
 8003ffc:	4a0e      	ldr	r2, [pc, #56]	; (8004038 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003ffe:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004000:	480e      	ldr	r0, [pc, #56]	; (800403c <_ZN23Calibration_PadViewBaseC1Ev+0x1e4>)
 8004002:	f026 fe5f 	bl	802acc4 <__assert_func>
 8004006:	4b0e      	ldr	r3, [pc, #56]	; (8004040 <_ZN23Calibration_PadViewBaseC1Ev+0x1e8>)
 8004008:	881b      	ldrh	r3, [r3, #0]
 800400a:	2b0a      	cmp	r3, #10
 800400c:	d81c      	bhi.n	8004048 <_ZN23Calibration_PadViewBaseC1Ev+0x1f0>
 800400e:	4b0d      	ldr	r3, [pc, #52]	; (8004044 <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>)
 8004010:	4a09      	ldr	r2, [pc, #36]	; (8004038 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8004012:	2161      	movs	r1, #97	; 0x61
 8004014:	e7f4      	b.n	8004000 <_ZN23Calibration_PadViewBaseC1Ev+0x1a8>
 8004016:	bf00      	nop
 8004018:	0802ca0c 	.word	0x0802ca0c
 800401c:	0802f218 	.word	0x0802f218
 8004020:	0802f3e0 	.word	0x0802f3e0
 8004024:	0802ef4c 	.word	0x0802ef4c
 8004028:	0802c9f4 	.word	0x0802c9f4
 800402c:	08003e3f 	.word	0x08003e3f
 8004030:	20012dfc 	.word	0x20012dfc
 8004034:	0802c708 	.word	0x0802c708
 8004038:	0802c80a 	.word	0x0802c80a
 800403c:	0802c785 	.word	0x0802c785
 8004040:	20012e00 	.word	0x20012e00
 8004044:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 8004048:	4bd8      	ldr	r3, [pc, #864]	; (80043ac <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 800404a:	210a      	movs	r1, #10
 800404c:	6818      	ldr	r0, [r3, #0]
 800404e:	f005 f8b1 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8004052:	4ad7      	ldr	r2, [pc, #860]	; (80043b0 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8004054:	4603      	mov	r3, r0
 8004056:	210a      	movs	r1, #10
 8004058:	9803      	ldr	r0, [sp, #12]
 800405a:	f015 f811 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800405e:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8004060:	4bd4      	ldr	r3, [pc, #848]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004062:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_PADR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WYEC));
 8004066:	4650      	mov	r0, sl
 8004068:	930a      	str	r3, [sp, #40]	; 0x28
 800406a:	a90a      	add	r1, sp, #40	; 0x28
 800406c:	230b      	movs	r3, #11
 800406e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004072:	f00e fdb1 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004076:	4651      	mov	r1, sl
 8004078:	4638      	mov	r0, r7
 800407a:	f00c fbf9 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_F.setPosition(25, 119, 207, 22);
 800407e:	2116      	movs	r1, #22
 8004080:	2277      	movs	r2, #119	; 0x77
 8004082:	9100      	str	r1, [sp, #0]
 8004084:	23cf      	movs	r3, #207	; 0xcf
 8004086:	2119      	movs	r1, #25
 8004088:	4648      	mov	r0, r9
 800408a:	f7ff f8bd 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800408e:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8004092:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8004096:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800409a:	f8a4 6118 	strh.w	r6, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800409e:	4649      	mov	r1, r9
 80040a0:	4628      	mov	r0, r5
 80040a2:	4798      	blx	r3
 80040a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040a8:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80040ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040b0:	49c1      	ldr	r1, [pc, #772]	; (80043b8 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 80040b2:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9DMI).getText());
 80040b4:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d09e      	beq.n	8003ffa <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040bc:	48bf      	ldr	r0, [pc, #764]	; (80043bc <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 80040be:	8803      	ldrh	r3, [r0, #0]
 80040c0:	2b0c      	cmp	r3, #12
 80040c2:	d9a4      	bls.n	800400e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 80040c4:	4ab9      	ldr	r2, [pc, #740]	; (80043ac <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 80040c6:	210c      	movs	r1, #12
 80040c8:	6810      	ldr	r0, [r2, #0]
 80040ca:	f005 f873 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80040ce:	4ab8      	ldr	r2, [pc, #736]	; (80043b0 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 80040d0:	4603      	mov	r3, r0
 80040d2:	210a      	movs	r1, #10
 80040d4:	4650      	mov	r0, sl
 80040d6:	f014 ffd3 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_PADR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MDOA));
 80040da:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 80040de:	4bb5      	ldr	r3, [pc, #724]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80040e0:	930a      	str	r3, [sp, #40]	; 0x28
 80040e2:	4661      	mov	r1, ip
 80040e4:	230d      	movs	r3, #13
 80040e6:	4648      	mov	r0, r9
 80040e8:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 80040ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80040f0:	f00e fd72 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040f4:	4649      	mov	r1, r9
 80040f6:	4638      	mov	r0, r7
 80040f8:	f00c fbba 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_F.setPosition(25, 187, 207, 22);
 80040fc:	f04f 0c16 	mov.w	ip, #22
 8004100:	22bb      	movs	r2, #187	; 0xbb
 8004102:	ee19 0a10 	vmov	r0, s18
 8004106:	f8cd c000 	str.w	ip, [sp]
 800410a:	23cf      	movs	r3, #207	; 0xcf
 800410c:	2119      	movs	r1, #25
 800410e:	f7ff f87b 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004112:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8004116:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800411a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800411e:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8004122:	ee19 1a10 	vmov	r1, s18
 8004126:	4628      	mov	r0, r5
 8004128:	4798      	blx	r3
 800412a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800412e:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8004132:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004136:	49a0      	ldr	r1, [pc, #640]	; (80043b8 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8004138:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZTO).getText());
 800413a:	f504 7965 	add.w	r9, r4, #916	; 0x394
 800413e:	2b00      	cmp	r3, #0
 8004140:	f43f af5b 	beq.w	8003ffa <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004144:	489d      	ldr	r0, [pc, #628]	; (80043bc <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8004146:	8803      	ldrh	r3, [r0, #0]
 8004148:	2b08      	cmp	r3, #8
 800414a:	f67f af60 	bls.w	800400e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 800414e:	4a97      	ldr	r2, [pc, #604]	; (80043ac <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8004150:	2108      	movs	r1, #8
 8004152:	6810      	ldr	r0, [r2, #0]
 8004154:	f005 f82e 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8004158:	4a95      	ldr	r2, [pc, #596]	; (80043b0 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 800415a:	4603      	mov	r3, r0
 800415c:	210a      	movs	r1, #10
 800415e:	4648      	mov	r0, r9
 8004160:	f014 ff8e 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004164:	f04f 0c09 	mov.w	ip, #9
 8004168:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    CALIBRATION_PADL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H127));
 800416c:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8004170:	4b90      	ldr	r3, [pc, #576]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004172:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8004176:	4661      	mov	r1, ip
 8004178:	ee19 0a10 	vmov	r0, s18
 800417c:	930a      	str	r3, [sp, #40]	; 0x28
 800417e:	f00e fd2b 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004182:	ee19 1a10 	vmov	r1, s18
 8004186:	4638      	mov	r0, r7
 8004188:	f00c fb72 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_S.setPosition(0, 160, 207, 27);
 800418c:	f04f 0c1b 	mov.w	ip, #27
 8004190:	22a0      	movs	r2, #160	; 0xa0
 8004192:	ee19 0a90 	vmov	r0, s19
 8004196:	f8cd c000 	str.w	ip, [sp]
 800419a:	23cf      	movs	r3, #207	; 0xcf
 800419c:	4631      	mov	r1, r6
 800419e:	f7ff f833 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80041a2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 80041a6:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 80041aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80041ae:	f8a4 61b0 	strh.w	r6, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 80041b2:	ee19 1a90 	vmov	r1, s19
 80041b6:	4628      	mov	r0, r5
 80041b8:	4798      	blx	r3
 80041ba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041be:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 80041c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80041c6:	497c      	ldr	r1, [pc, #496]	; (80043b8 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 80041c8:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KIGA).getText());
 80041ca:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	f43f af13 	beq.w	8003ffa <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80041d4:	4879      	ldr	r0, [pc, #484]	; (80043bc <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 80041d6:	8803      	ldrh	r3, [r0, #0]
 80041d8:	2b0f      	cmp	r3, #15
 80041da:	f67f af18 	bls.w	800400e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 80041de:	4a73      	ldr	r2, [pc, #460]	; (80043ac <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 80041e0:	210f      	movs	r1, #15
 80041e2:	6810      	ldr	r0, [r2, #0]
 80041e4:	f004 ffe6 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80041e8:	4a71      	ldr	r2, [pc, #452]	; (80043b0 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 80041ea:	4603      	mov	r3, r0
 80041ec:	210a      	movs	r1, #10
 80041ee:	4648      	mov	r0, r9
 80041f0:	f014 ff46 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80041f4:	4b6f      	ldr	r3, [pc, #444]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80041f6:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_PADL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2BW0));
 80041f8:	ee19 0a90 	vmov	r0, s19
 80041fc:	230e      	movs	r3, #14
 80041fe:	a90a      	add	r1, sp, #40	; 0x28
 8004200:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8004204:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004208:	f00e fce6 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800420c:	ee19 1a90 	vmov	r1, s19
 8004210:	4638      	mov	r0, r7
 8004212:	f00c fb2d 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8004216:	ee1a 0a10 	vmov	r0, s20
 800421a:	f240 1201 	movw	r2, #257	; 0x101
 800421e:	2121      	movs	r1, #33	; 0x21
 8004220:	f7fe ffe5 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8004224:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004226:	aa0a      	add	r2, sp, #40	; 0x28
 8004228:	a909      	add	r1, sp, #36	; 0x24
 800422a:	ee1a 0a10 	vmov	r0, s20
 800422e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004232:	2302      	movs	r3, #2
 8004234:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004238:	f00e feb3 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800423c:	231f      	movs	r3, #31
        updateTextPosition();
 800423e:	ee1a 0a10 	vmov	r0, s20
 8004242:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8004246:	f7ff f827 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800424a:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 800424e:	330c      	adds	r3, #12
 8004250:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8004254:	ee1a 1a10 	vmov	r1, s20
 8004258:	4638      	mov	r0, r7
        colorPressed = col;
 800425a:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 800425e:	f00c fb07 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(58, 60);
 8004262:	223c      	movs	r2, #60	; 0x3c
 8004264:	ee1a 0a90 	vmov	r0, s21
 8004268:	213a      	movs	r1, #58	; 0x3a
 800426a:	f7fe ffc0 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800426e:	ee1a 1a90 	vmov	r1, s21
 8004272:	4628      	mov	r0, r5
        color = newColor;
 8004274:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8004278:	f8a4 6244 	strh.w	r6, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 800427c:	f00e fa12 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004280:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004284:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8004288:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800428c:	4b49      	ldr	r3, [pc, #292]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 800428e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004290:	ee1a 0a90 	vmov	r0, s21
 8004294:	231e      	movs	r3, #30
 8004296:	a90a      	add	r1, sp, #40	; 0x28
 8004298:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800429c:	f00e fc9c 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042a0:	ee1a 1a90 	vmov	r1, s21
 80042a4:	4638      	mov	r0, r7
 80042a6:	f00c fae3 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80042aa:	230a      	movs	r3, #10
 80042ac:	9300      	str	r3, [sp, #0]
 80042ae:	2232      	movs	r2, #50	; 0x32
 80042b0:	23f0      	movs	r3, #240	; 0xf0
 80042b2:	4631      	mov	r1, r6
 80042b4:	4640      	mov	r0, r8
 80042b6:	f7fe ffa7 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80042ba:	9b02      	ldr	r3, [sp, #8]
 80042bc:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80042c0:	22a0      	movs	r2, #160	; 0xa0
 80042c2:	4611      	mov	r1, r2
 80042c4:	4640      	mov	r0, r8
 80042c6:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80042ca:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 80042ce:	f00e f83d 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80042d2:	22a0      	movs	r2, #160	; 0xa0
 80042d4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80042d8:	4640      	mov	r0, r8
 80042da:	f00e f842 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80042de:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 80042e2:	2b20      	cmp	r3, #32
 80042e4:	d005      	beq.n	80042f2 <_ZN23Calibration_PadViewBaseC1Ev+0x49a>
        lineWidthQ5 = widthQ5;
 80042e6:	2320      	movs	r3, #32
 80042e8:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 80042ec:	4640      	mov	r0, r8
 80042ee:	f00d ff37 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80042f2:	4640      	mov	r0, r8
 80042f4:	2101      	movs	r1, #1
 80042f6:	f00e f83f 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80042fa:	4641      	mov	r1, r8
 80042fc:	4638      	mov	r0, r7
 80042fe:	f00c fab7 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004302:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8004304:	ee18 0a10 	vmov	r0, s16
 8004308:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 800430a:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 800430e:	f04f 0800 	mov.w	r8, #0
 8004312:	2145      	movs	r1, #69	; 0x45
 8004314:	f7fe ff6b 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004318:	ee18 1a10 	vmov	r1, s16
 800431c:	4628      	mov	r0, r5
        color = newColor;
 800431e:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8004322:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8004326:	f00e f9bd 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800432a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800432e:	ee18 3a10 	vmov	r3, s16
 8004332:	333c      	adds	r3, #60	; 0x3c
 8004334:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004338:	4e1e      	ldr	r6, [pc, #120]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 800433a:	960a      	str	r6, [sp, #40]	; 0x28
 800433c:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800433e:	ee18 0a10 	vmov	r0, s16
 8004342:	a90a      	add	r1, sp, #40	; 0x28
 8004344:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004348:	f00e fc46 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800434c:	ee18 1a10 	vmov	r1, s16
 8004350:	4638      	mov	r0, r7
 8004352:	f00c fa8d 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004356:	ee18 0a90 	vmov	r0, s17
 800435a:	220c      	movs	r2, #12
 800435c:	2136      	movs	r1, #54	; 0x36
 800435e:	f7fe ff46 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8004362:	ee18 1a90 	vmov	r1, s17
 8004366:	4628      	mov	r0, r5
        color = newColor;
 8004368:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 800436c:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8004370:	f00e f998 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004374:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004378:	ee18 3a90 	vmov	r3, s17
 800437c:	333c      	adds	r3, #60	; 0x3c
 800437e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004382:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004384:	ee18 0a90 	vmov	r0, s17
 8004388:	a90a      	add	r1, sp, #40	; 0x28
 800438a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800438e:	960a      	str	r6, [sp, #40]	; 0x28
 8004390:	f00e fc22 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004394:	4638      	mov	r0, r7
 8004396:	ee18 1a90 	vmov	r1, s17
 800439a:	f00c fa69 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800439e:	4620      	mov	r0, r4
 80043a0:	b00d      	add	sp, #52	; 0x34
 80043a2:	ecbd 8b06 	vpop	{d8-d10}
 80043a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043aa:	bf00      	nop
 80043ac:	20012e08 	.word	0x20012e08
 80043b0:	0802c842 	.word	0x0802c842
 80043b4:	0802c8b8 	.word	0x0802c8b8
 80043b8:	20012dfc 	.word	0x20012dfc
 80043bc:	20012e00 	.word	0x20012e00

080043c0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80043c0:	4770      	bx	lr

080043c2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80043c2:	4770      	bx	lr

080043c4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80043c4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80043c8:	6808      	ldr	r0, [r1, #0]
 80043ca:	6849      	ldr	r1, [r1, #4]
 80043cc:	c303      	stmia	r3!, {r0, r1}
    }
 80043ce:	4770      	bx	lr

080043d0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80043d0:	4770      	bx	lr

080043d2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80043d2:	4770      	bx	lr

080043d4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80043d4:	6041      	str	r1, [r0, #4]
    }
 80043d6:	4770      	bx	lr

080043d8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80043d8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80043da:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80043dc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80043e0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80043e4:	8002      	strh	r2, [r0, #0]
 80043e6:	8042      	strh	r2, [r0, #2]
 80043e8:	8084      	strh	r4, [r0, #4]
 80043ea:	80c1      	strh	r1, [r0, #6]
        }
 80043ec:	bd10      	pop	{r4, pc}

080043ee <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80043ee:	4770      	bx	lr

080043f0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80043f0:	4770      	bx	lr
	...

080043f4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80043f4:	4b06      	ldr	r3, [pc, #24]	; (8004410 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80043f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80043fa:	2300      	movs	r3, #0
 80043fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004400:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004404:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004408:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800440c:	4770      	bx	lr
 800440e:	bf00      	nop
 8004410:	080047b1 	.word	0x080047b1

08004414 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004414:	2301      	movs	r3, #1
 8004416:	7203      	strb	r3, [r0, #8]
    }
 8004418:	4770      	bx	lr

0800441a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800441a:	4770      	bx	lr

0800441c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800441c:	4770      	bx	lr

0800441e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800441e:	4770      	bx	lr

08004420 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004420:	4770      	bx	lr

08004422 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004422:	4770      	bx	lr

08004424 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004424:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004426:	6840      	ldr	r0, [r0, #4]
 8004428:	6803      	ldr	r3, [r0, #0]
 800442a:	3110      	adds	r1, #16
 800442c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800442e:	4718      	bx	r3

08004430 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004430:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004432:	6840      	ldr	r0, [r0, #4]
 8004434:	6803      	ldr	r3, [r0, #0]
 8004436:	3110      	adds	r1, #16
 8004438:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800443a:	4718      	bx	r3

0800443c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800443c:	4770      	bx	lr

0800443e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800443e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004440:	6840      	ldr	r0, [r0, #4]
 8004442:	6803      	ldr	r3, [r0, #0]
 8004444:	3110      	adds	r1, #16
 8004446:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004448:	4718      	bx	r3

0800444a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800444a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800444c:	6840      	ldr	r0, [r0, #4]
 800444e:	6803      	ldr	r3, [r0, #0]
 8004450:	3110      	adds	r1, #16
 8004452:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004454:	4718      	bx	r3

08004456 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004456:	4770      	bx	lr

08004458 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004458:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800445a:	68c2      	ldr	r2, [r0, #12]
 800445c:	6841      	ldr	r1, [r0, #4]
 800445e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004460:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8004462:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004466:	07d2      	lsls	r2, r2, #31
 8004468:	bf48      	it	mi
 800446a:	590a      	ldrmi	r2, [r1, r4]
 800446c:	689b      	ldr	r3, [r3, #8]
    }
 800446e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8004472:	bf48      	it	mi
 8004474:	58d3      	ldrmi	r3, [r2, r3]
 8004476:	4718      	bx	r3

08004478 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004478:	6843      	ldr	r3, [r0, #4]
 800447a:	b12b      	cbz	r3, 8004488 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800447c:	6883      	ldr	r3, [r0, #8]
 800447e:	b92b      	cbnz	r3, 800448c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004480:	68c0      	ldr	r0, [r0, #12]
 8004482:	f000 0001 	and.w	r0, r0, #1
 8004486:	4770      	bx	lr
 8004488:	4618      	mov	r0, r3
 800448a:	4770      	bx	lr
 800448c:	2001      	movs	r0, #1
    }
 800448e:	4770      	bx	lr

08004490 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004490:	b510      	push	{r4, lr}
 8004492:	210c      	movs	r1, #12
 8004494:	4604      	mov	r4, r0
 8004496:	f025 fd2e 	bl	8029ef6 <_ZdlPvj>
 800449a:	4620      	mov	r0, r4
 800449c:	bd10      	pop	{r4, pc}

0800449e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800449e:	b510      	push	{r4, lr}
 80044a0:	2110      	movs	r1, #16
 80044a2:	4604      	mov	r4, r0
 80044a4:	f025 fd27 	bl	8029ef6 <_ZdlPvj>
 80044a8:	4620      	mov	r0, r4
 80044aa:	bd10      	pop	{r4, pc}

080044ac <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80044ac:	b510      	push	{r4, lr}
 80044ae:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80044b2:	4604      	mov	r4, r0
 80044b4:	f025 fd1f 	bl	8029ef6 <_ZdlPvj>
 80044b8:	4620      	mov	r0, r4
 80044ba:	bd10      	pop	{r4, pc}

080044bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80044bc:	b510      	push	{r4, lr}
 80044be:	2138      	movs	r1, #56	; 0x38
 80044c0:	4604      	mov	r4, r0
 80044c2:	f025 fd18 	bl	8029ef6 <_ZdlPvj>
 80044c6:	4620      	mov	r0, r4
 80044c8:	bd10      	pop	{r4, pc}

080044ca <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80044ca:	b510      	push	{r4, lr}
 80044cc:	2128      	movs	r1, #40	; 0x28
 80044ce:	4604      	mov	r4, r0
 80044d0:	f025 fd11 	bl	8029ef6 <_ZdlPvj>
 80044d4:	4620      	mov	r0, r4
 80044d6:	bd10      	pop	{r4, pc}

080044d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80044d8:	b510      	push	{r4, lr}
 80044da:	2138      	movs	r1, #56	; 0x38
 80044dc:	4604      	mov	r4, r0
 80044de:	f025 fd0a 	bl	8029ef6 <_ZdlPvj>
 80044e2:	4620      	mov	r0, r4
 80044e4:	bd10      	pop	{r4, pc}

080044e6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80044e6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80044e8:	f011 fc5a 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 80044ec:	6803      	ldr	r3, [r0, #0]
    }
 80044ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80044f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80044f4:	4718      	bx	r3
	...

080044f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80044f8:	b513      	push	{r0, r1, r4, lr}
 80044fa:	4604      	mov	r4, r0
        animationCounter++;
 80044fc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80044fe:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004500:	3001      	adds	r0, #1
 8004502:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004504:	4298      	cmp	r0, r3
        animationCounter++;
 8004506:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004508:	d905      	bls.n	8004516 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800450a:	2301      	movs	r3, #1
 800450c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800450e:	2300      	movs	r3, #0
 8004510:	72a3      	strb	r3, [r4, #10]
    }
 8004512:	b002      	add	sp, #8
 8004514:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004516:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800451a:	2100      	movs	r1, #0
 800451c:	f013 fa72 	bl	8017a04 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004520:	f010 0201 	ands.w	r2, r0, #1
 8004524:	b283      	uxth	r3, r0
 8004526:	d12a      	bne.n	800457e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004528:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800452a:	4a19      	ldr	r2, [pc, #100]	; (8004590 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800452c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004530:	89e3      	ldrh	r3, [r4, #14]
 8004532:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004534:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004538:	82a0      	strh	r0, [r4, #20]
 800453a:	2000      	movs	r0, #0
 800453c:	1ad2      	subs	r2, r2, r3
 800453e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8004542:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004544:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004546:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004548:	4a12      	ldr	r2, [pc, #72]	; (8004594 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800454a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800454e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004550:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004554:	691b      	ldr	r3, [r3, #16]
 8004556:	f8ad 1000 	strh.w	r1, [sp]
 800455a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800455e:	4669      	mov	r1, sp
 8004560:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004562:	7aa3      	ldrb	r3, [r4, #10]
 8004564:	2b01      	cmp	r3, #1
 8004566:	d1d4      	bne.n	8004512 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004568:	4b0b      	ldr	r3, [pc, #44]	; (8004598 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800456a:	781b      	ldrb	r3, [r3, #0]
 800456c:	2b00      	cmp	r3, #0
 800456e:	d0d0      	beq.n	8004512 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004570:	f011 fc16 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004574:	b002      	add	sp, #8
 8004576:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800457a:	f011 bc17 	b.w	8015dac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800457e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004582:	2800      	cmp	r0, #0
 8004584:	bfd8      	it	le
 8004586:	460a      	movle	r2, r1
 8004588:	4413      	add	r3, r2
 800458a:	81e3      	strh	r3, [r4, #14]
 800458c:	e7cd      	b.n	800452a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800458e:	bf00      	nop
 8004590:	20012d98 	.word	0x20012d98
 8004594:	20012d9a 	.word	0x20012d9a
 8004598:	20012da2 	.word	0x20012da2

0800459c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800459c:	b510      	push	{r4, lr}
 800459e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80045a0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80045a4:	b158      	cbz	r0, 80045be <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80045a6:	6803      	ldr	r3, [r0, #0]
 80045a8:	68db      	ldr	r3, [r3, #12]
 80045aa:	4798      	blx	r3
 80045ac:	b138      	cbz	r0, 80045be <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80045ae:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	689b      	ldr	r3, [r3, #8]
 80045b6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80045b8:	2300      	movs	r3, #0
 80045ba:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80045be:	bd10      	pop	{r4, pc}

080045c0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80045c0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045c4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80045c8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045ca:	68a8      	ldr	r0, [r5, #8]
 80045cc:	6803      	ldr	r3, [r0, #0]
 80045ce:	6a1b      	ldr	r3, [r3, #32]
 80045d0:	4798      	blx	r3
 80045d2:	2897      	cmp	r0, #151	; 0x97
 80045d4:	d805      	bhi.n	80045e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80045d6:	4b46      	ldr	r3, [pc, #280]	; (80046f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80045d8:	4a46      	ldr	r2, [pc, #280]	; (80046f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045da:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045dc:	4846      	ldr	r0, [pc, #280]	; (80046f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80045de:	f026 fb71 	bl	802acc4 <__assert_func>
 80045e2:	6868      	ldr	r0, [r5, #4]
 80045e4:	6803      	ldr	r3, [r0, #0]
 80045e6:	6a1b      	ldr	r3, [r3, #32]
 80045e8:	4798      	blx	r3
 80045ea:	280f      	cmp	r0, #15
 80045ec:	d803      	bhi.n	80045f6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80045ee:	4b43      	ldr	r3, [pc, #268]	; (80046fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80045f0:	4a40      	ldr	r2, [pc, #256]	; (80046f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045f2:	21a4      	movs	r1, #164	; 0xa4
 80045f4:	e7f2      	b.n	80045dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045f6:	68e8      	ldr	r0, [r5, #12]
 80045f8:	6803      	ldr	r3, [r0, #0]
 80045fa:	6a1b      	ldr	r3, [r3, #32]
 80045fc:	4798      	blx	r3
 80045fe:	280b      	cmp	r0, #11
 8004600:	d803      	bhi.n	800460a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8004602:	4b3f      	ldr	r3, [pc, #252]	; (8004700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8004604:	4a3b      	ldr	r2, [pc, #236]	; (80046f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004606:	21a5      	movs	r1, #165	; 0xa5
 8004608:	e7e8      	b.n	80045dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800460a:	f011 fbc9 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800460e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004708 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004612:	3004      	adds	r0, #4
 8004614:	f011 fc2a 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004618:	f8d9 0000 	ldr.w	r0, [r9]
 800461c:	b110      	cbz	r0, 8004624 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800461e:	6803      	ldr	r3, [r0, #0]
 8004620:	68db      	ldr	r3, [r3, #12]
 8004622:	4798      	blx	r3
    if (*currentTrans)
 8004624:	f8d9 0000 	ldr.w	r0, [r9]
 8004628:	b110      	cbz	r0, 8004630 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800462a:	6803      	ldr	r3, [r0, #0]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	4798      	blx	r3
    if (*currentScreen)
 8004630:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800470c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004634:	f8d8 0000 	ldr.w	r0, [r8]
 8004638:	b110      	cbz	r0, 8004640 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800463a:	6803      	ldr	r3, [r0, #0]
 800463c:	695b      	ldr	r3, [r3, #20]
 800463e:	4798      	blx	r3
    if (*currentPresenter)
 8004640:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004644:	b110      	cbz	r0, 800464c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004646:	6803      	ldr	r3, [r0, #0]
 8004648:	685b      	ldr	r3, [r3, #4]
 800464a:	4798      	blx	r3
    if (*currentScreen)
 800464c:	f8d8 0000 	ldr.w	r0, [r8]
 8004650:	b110      	cbz	r0, 8004658 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8004652:	6803      	ldr	r3, [r0, #0]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	4798      	blx	r3
    if (*currentPresenter)
 8004658:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800465c:	b110      	cbz	r0, 8004664 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800465e:	6803      	ldr	r3, [r0, #0]
 8004660:	689b      	ldr	r3, [r3, #8]
 8004662:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004664:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004666:	6803      	ldr	r3, [r0, #0]
 8004668:	2100      	movs	r1, #0
 800466a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800466c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800466e:	f04f 0b00 	mov.w	fp, #0
 8004672:	4b24      	ldr	r3, [pc, #144]	; (8004704 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004674:	6003      	str	r3, [r0, #0]
 8004676:	4604      	mov	r4, r0
 8004678:	f8c0 b004 	str.w	fp, [r0, #4]
 800467c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004680:	68a8      	ldr	r0, [r5, #8]
 8004682:	6803      	ldr	r3, [r0, #0]
 8004684:	4659      	mov	r1, fp
 8004686:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004688:	4798      	blx	r3
 800468a:	4606      	mov	r6, r0
 800468c:	f005 fae2 	bl	8009c54 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004690:	6868      	ldr	r0, [r5, #4]
 8004692:	6803      	ldr	r3, [r0, #0]
 8004694:	4659      	mov	r1, fp
 8004696:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004698:	4798      	blx	r3
 800469a:	4631      	mov	r1, r6
 800469c:	4605      	mov	r5, r0
 800469e:	f005 fab5 	bl	8009c0c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80046a2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80046a6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046aa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046ae:	b1e5      	cbz	r5, 80046ea <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80046b0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80046b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046b6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80046b8:	f8c5 a008 	str.w	sl, [r5, #8]
 80046bc:	4630      	mov	r0, r6
 80046be:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80046c0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80046c2:	4798      	blx	r3
    newPresenter->activate();
 80046c4:	682b      	ldr	r3, [r5, #0]
 80046c6:	4628      	mov	r0, r5
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046cc:	4621      	mov	r1, r4
 80046ce:	4630      	mov	r0, r6
 80046d0:	f013 f992 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046d4:	6823      	ldr	r3, [r4, #0]
 80046d6:	4620      	mov	r0, r4
 80046d8:	691b      	ldr	r3, [r3, #16]
 80046da:	4798      	blx	r3
    newTransition->invalidate();
 80046dc:	6823      	ldr	r3, [r4, #0]
 80046de:	695b      	ldr	r3, [r3, #20]
 80046e0:	4620      	mov	r0, r4
}
 80046e2:	b001      	add	sp, #4
 80046e4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046e8:	4718      	bx	r3
    model->bind(newPresenter);
 80046ea:	462b      	mov	r3, r5
 80046ec:	e7e1      	b.n	80046b2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80046ee:	bf00      	nop
 80046f0:	0802ca3c 	.word	0x0802ca3c
 80046f4:	0802caca 	.word	0x0802caca
 80046f8:	0802cbd8 	.word	0x0802cbd8
 80046fc:	0802cc1f 	.word	0x0802cc1f
 8004700:	0802ccc2 	.word	0x0802ccc2
 8004704:	0802e0e0 	.word	0x0802e0e0
 8004708:	20012dec 	.word	0x20012dec
 800470c:	20012de8 	.word	0x20012de8

08004710 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004710:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004712:	4604      	mov	r4, r0
        animationCounter++;
 8004714:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004716:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004718:	3001      	adds	r0, #1
 800471a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800471c:	4298      	cmp	r0, r3
        animationCounter++;
 800471e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004720:	d905      	bls.n	800472e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8004722:	2301      	movs	r3, #1
 8004724:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004726:	2300      	movs	r3, #0
 8004728:	72a3      	strb	r3, [r4, #10]
    }
 800472a:	b003      	add	sp, #12
 800472c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800472e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004732:	2100      	movs	r1, #0
 8004734:	f013 f966 	bl	8017a04 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004738:	f010 0201 	ands.w	r2, r0, #1
 800473c:	b283      	uxth	r3, r0
 800473e:	d128      	bne.n	8004792 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004740:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004742:	4b18      	ldr	r3, [pc, #96]	; (80047a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004744:	4818      	ldr	r0, [pc, #96]	; (80047a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004746:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004748:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800474a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800474c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004750:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004754:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004756:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004758:	442b      	add	r3, r5
 800475a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800475c:	b212      	sxth	r2, r2
 800475e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004762:	6803      	ldr	r3, [r0, #0]
 8004764:	8322      	strh	r2, [r4, #24]
 8004766:	f8ad 2000 	strh.w	r2, [sp]
 800476a:	2200      	movs	r2, #0
 800476c:	691b      	ldr	r3, [r3, #16]
 800476e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004772:	4669      	mov	r1, sp
 8004774:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004776:	7aa3      	ldrb	r3, [r4, #10]
 8004778:	2b01      	cmp	r3, #1
 800477a:	d1d6      	bne.n	800472a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800477c:	4b0b      	ldr	r3, [pc, #44]	; (80047ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800477e:	781b      	ldrb	r3, [r3, #0]
 8004780:	2b00      	cmp	r3, #0
 8004782:	d0d2      	beq.n	800472a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004784:	f011 fb0c 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004788:	b003      	add	sp, #12
 800478a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800478e:	f011 bb0d 	b.w	8015dac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004792:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004796:	2800      	cmp	r0, #0
 8004798:	bfd8      	it	le
 800479a:	460a      	movle	r2, r1
 800479c:	4413      	add	r3, r2
 800479e:	81e3      	strh	r3, [r4, #14]
 80047a0:	e7cf      	b.n	8004742 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80047a2:	bf00      	nop
 80047a4:	20012d98 	.word	0x20012d98
 80047a8:	20012d9a 	.word	0x20012d9a
 80047ac:	20012da2 	.word	0x20012da2

080047b0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80047b0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047b4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80047b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047ba:	68a8      	ldr	r0, [r5, #8]
 80047bc:	6803      	ldr	r3, [r0, #0]
 80047be:	6a1b      	ldr	r3, [r3, #32]
 80047c0:	4798      	blx	r3
 80047c2:	f241 137b 	movw	r3, #4475	; 0x117b
 80047c6:	4298      	cmp	r0, r3
 80047c8:	d805      	bhi.n	80047d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80047ca:	4b46      	ldr	r3, [pc, #280]	; (80048e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80047cc:	4a46      	ldr	r2, [pc, #280]	; (80048e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047d0:	4846      	ldr	r0, [pc, #280]	; (80048ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80047d2:	f026 fa77 	bl	802acc4 <__assert_func>
 80047d6:	6868      	ldr	r0, [r5, #4]
 80047d8:	6803      	ldr	r3, [r0, #0]
 80047da:	6a1b      	ldr	r3, [r3, #32]
 80047dc:	4798      	blx	r3
 80047de:	280f      	cmp	r0, #15
 80047e0:	d803      	bhi.n	80047ea <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80047e2:	4b43      	ldr	r3, [pc, #268]	; (80048f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80047e4:	4a40      	ldr	r2, [pc, #256]	; (80048e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047e6:	21a4      	movs	r1, #164	; 0xa4
 80047e8:	e7f2      	b.n	80047d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047ea:	68e8      	ldr	r0, [r5, #12]
 80047ec:	6803      	ldr	r3, [r0, #0]
 80047ee:	6a1b      	ldr	r3, [r3, #32]
 80047f0:	4798      	blx	r3
 80047f2:	280b      	cmp	r0, #11
 80047f4:	d803      	bhi.n	80047fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80047f6:	4b3f      	ldr	r3, [pc, #252]	; (80048f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80047f8:	4a3b      	ldr	r2, [pc, #236]	; (80048e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047fa:	21a5      	movs	r1, #165	; 0xa5
 80047fc:	e7e8      	b.n	80047d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80047fe:	f011 facf 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004802:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80048fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004806:	3004      	adds	r0, #4
 8004808:	f011 fb30 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800480c:	f8d9 0000 	ldr.w	r0, [r9]
 8004810:	b110      	cbz	r0, 8004818 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004812:	6803      	ldr	r3, [r0, #0]
 8004814:	68db      	ldr	r3, [r3, #12]
 8004816:	4798      	blx	r3
    if (*currentTrans)
 8004818:	f8d9 0000 	ldr.w	r0, [r9]
 800481c:	b110      	cbz	r0, 8004824 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800481e:	6803      	ldr	r3, [r0, #0]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	4798      	blx	r3
    if (*currentScreen)
 8004824:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004900 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004828:	f8d8 0000 	ldr.w	r0, [r8]
 800482c:	b110      	cbz	r0, 8004834 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800482e:	6803      	ldr	r3, [r0, #0]
 8004830:	695b      	ldr	r3, [r3, #20]
 8004832:	4798      	blx	r3
    if (*currentPresenter)
 8004834:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004838:	b110      	cbz	r0, 8004840 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800483a:	6803      	ldr	r3, [r0, #0]
 800483c:	685b      	ldr	r3, [r3, #4]
 800483e:	4798      	blx	r3
    if (*currentScreen)
 8004840:	f8d8 0000 	ldr.w	r0, [r8]
 8004844:	b110      	cbz	r0, 800484c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004846:	6803      	ldr	r3, [r0, #0]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	4798      	blx	r3
    if (*currentPresenter)
 800484c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004850:	b110      	cbz	r0, 8004858 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004852:	6803      	ldr	r3, [r0, #0]
 8004854:	689b      	ldr	r3, [r3, #8]
 8004856:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004858:	68e8      	ldr	r0, [r5, #12]
 800485a:	6803      	ldr	r3, [r0, #0]
 800485c:	2100      	movs	r1, #0
 800485e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004860:	4798      	blx	r3
 8004862:	f04f 0b00 	mov.w	fp, #0
 8004866:	4b24      	ldr	r3, [pc, #144]	; (80048f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004868:	6003      	str	r3, [r0, #0]
 800486a:	4604      	mov	r4, r0
 800486c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004870:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004874:	68a8      	ldr	r0, [r5, #8]
 8004876:	6803      	ldr	r3, [r0, #0]
 8004878:	4659      	mov	r1, fp
 800487a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800487c:	4798      	blx	r3
 800487e:	4606      	mov	r6, r0
 8004880:	f004 fe94 	bl	80095ac <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004884:	6868      	ldr	r0, [r5, #4]
 8004886:	6803      	ldr	r3, [r0, #0]
 8004888:	4659      	mov	r1, fp
 800488a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800488c:	4798      	blx	r3
 800488e:	4631      	mov	r1, r6
 8004890:	4605      	mov	r5, r0
 8004892:	f004 fe65 	bl	8009560 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004896:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800489a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800489e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048a2:	b1e5      	cbz	r5, 80048de <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80048a4:	1d2b      	adds	r3, r5, #4
 80048a6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048aa:	6833      	ldr	r3, [r6, #0]
 80048ac:	f8c5 a008 	str.w	sl, [r5, #8]
 80048b0:	4630      	mov	r0, r6
 80048b2:	68db      	ldr	r3, [r3, #12]
 80048b4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80048b6:	4798      	blx	r3
    newPresenter->activate();
 80048b8:	682b      	ldr	r3, [r5, #0]
 80048ba:	4628      	mov	r0, r5
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048c0:	4621      	mov	r1, r4
 80048c2:	4630      	mov	r0, r6
 80048c4:	f013 f898 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048c8:	6823      	ldr	r3, [r4, #0]
 80048ca:	4620      	mov	r0, r4
 80048cc:	691b      	ldr	r3, [r3, #16]
 80048ce:	4798      	blx	r3
    newTransition->invalidate();
 80048d0:	6823      	ldr	r3, [r4, #0]
 80048d2:	695b      	ldr	r3, [r3, #20]
 80048d4:	4620      	mov	r0, r4
}
 80048d6:	b001      	add	sp, #4
 80048d8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048dc:	4718      	bx	r3
    model->bind(newPresenter);
 80048de:	462b      	mov	r3, r5
 80048e0:	e7e1      	b.n	80048a6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80048e2:	bf00      	nop
 80048e4:	0802ca3c 	.word	0x0802ca3c
 80048e8:	0802cd65 	.word	0x0802cd65
 80048ec:	0802cbd8 	.word	0x0802cbd8
 80048f0:	0802cc1f 	.word	0x0802cc1f
 80048f4:	0802ccc2 	.word	0x0802ccc2
 80048f8:	0802e0e0 	.word	0x0802e0e0
 80048fc:	20012dec 	.word	0x20012dec
 8004900:	20012de8 	.word	0x20012de8

08004904 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004904:	4b04      	ldr	r3, [pc, #16]	; (8004918 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800490c:	b10a      	cbz	r2, 8004912 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800490e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004910:	b900      	cbnz	r0, 8004914 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8004912:	6898      	ldr	r0, [r3, #8]
    }
 8004914:	4770      	bx	lr
 8004916:	bf00      	nop
 8004918:	20012da4 	.word	0x20012da4

0800491c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800491c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800491e:	4604      	mov	r4, r0
 8004920:	4617      	mov	r7, r2
 8004922:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004924:	f011 fb70 	bl	8016008 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004928:	4b10      	ldr	r3, [pc, #64]	; (800496c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800492a:	601c      	str	r4, [r3, #0]
      model(m)
 800492c:	4b10      	ldr	r3, [pc, #64]	; (8004970 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800492e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004930:	4b10      	ldr	r3, [pc, #64]	; (8004974 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004932:	2500      	movs	r5, #0
 8004934:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004938:	4b0f      	ldr	r3, [pc, #60]	; (8004978 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800493a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800493e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004940:	6803      	ldr	r3, [r0, #0]
 8004942:	2101      	movs	r1, #1
 8004944:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004946:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800494a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800494e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004950:	4628      	mov	r0, r5
 8004952:	f004 fbf3 	bl	800913c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004956:	f7ff ffd5 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 800495a:	f01a ff1a 	bl	801f792 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800495e:	f7ff ffd1 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 8004962:	f01a ff91 	bl	801f888 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004966:	4620      	mov	r0, r4
 8004968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800496a:	bf00      	nop
 800496c:	20012df8 	.word	0x20012df8
 8004970:	0802e08c 	.word	0x0802e08c
 8004974:	0802e074 	.word	0x0802e074
 8004978:	20012da4 	.word	0x20012da4

0800497c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800497c:	4b06      	ldr	r3, [pc, #24]	; (8004998 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800497e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004982:	2300      	movs	r3, #0
 8004984:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004988:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800498c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004990:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004994:	4770      	bx	lr
 8004996:	bf00      	nop
 8004998:	080047b1 	.word	0x080047b1

0800499c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 800499c:	4b06      	ldr	r3, [pc, #24]	; (80049b8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800499e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049a2:	2300      	movs	r3, #0
 80049a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049b4:	4770      	bx	lr
 80049b6:	bf00      	nop
 80049b8:	08004fc1 	.word	0x08004fc1

080049bc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80049bc:	4b06      	ldr	r3, [pc, #24]	; (80049d8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80049be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049c2:	2300      	movs	r3, #0
 80049c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049d4:	4770      	bx	lr
 80049d6:	bf00      	nop
 80049d8:	08005de5 	.word	0x08005de5

080049dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80049dc:	4b06      	ldr	r3, [pc, #24]	; (80049f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80049de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049e2:	2300      	movs	r3, #0
 80049e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049f4:	4770      	bx	lr
 80049f6:	bf00      	nop
 80049f8:	08004e81 	.word	0x08004e81

080049fc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80049fc:	4b06      	ldr	r3, [pc, #24]	; (8004a18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80049fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a02:	2300      	movs	r3, #0
 8004a04:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a08:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a0c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a10:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a14:	4770      	bx	lr
 8004a16:	bf00      	nop
 8004a18:	08005ca5 	.word	0x08005ca5

08004a1c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004a1c:	4b06      	ldr	r3, [pc, #24]	; (8004a38 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004a1e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a22:	2300      	movs	r3, #0
 8004a24:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a28:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a2c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a30:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a34:	4770      	bx	lr
 8004a36:	bf00      	nop
 8004a38:	08005b65 	.word	0x08005b65

08004a3c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004a3c:	4b06      	ldr	r3, [pc, #24]	; (8004a58 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004a3e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a42:	2300      	movs	r3, #0
 8004a44:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a48:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a4c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a50:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a54:	4770      	bx	lr
 8004a56:	bf00      	nop
 8004a58:	08005a25 	.word	0x08005a25

08004a5c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004a5c:	4b06      	ldr	r3, [pc, #24]	; (8004a78 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004a5e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a62:	2300      	movs	r3, #0
 8004a64:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a68:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a6c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a70:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a74:	4770      	bx	lr
 8004a76:	bf00      	nop
 8004a78:	080058e5 	.word	0x080058e5

08004a7c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004a7c:	4b06      	ldr	r3, [pc, #24]	; (8004a98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004a7e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a82:	2300      	movs	r3, #0
 8004a84:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a88:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a8c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a90:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a94:	4770      	bx	lr
 8004a96:	bf00      	nop
 8004a98:	08004d41 	.word	0x08004d41

08004a9c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004a9c:	4b06      	ldr	r3, [pc, #24]	; (8004ab8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004a9e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004aa2:	2300      	movs	r3, #0
 8004aa4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004aa8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004aac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ab0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ab4:	4770      	bx	lr
 8004ab6:	bf00      	nop
 8004ab8:	080057a5 	.word	0x080057a5

08004abc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004abc:	4b06      	ldr	r3, [pc, #24]	; (8004ad8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004abe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ac2:	2300      	movs	r3, #0
 8004ac4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ac8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004acc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ad0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ad4:	4770      	bx	lr
 8004ad6:	bf00      	nop
 8004ad8:	08005665 	.word	0x08005665

08004adc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8004adc:	4b06      	ldr	r3, [pc, #24]	; (8004af8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8004ade:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ae2:	2300      	movs	r3, #0
 8004ae4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ae8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004aec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004af0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004af4:	4770      	bx	lr
 8004af6:	bf00      	nop
 8004af8:	08005525 	.word	0x08005525

08004afc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8004afc:	4b06      	ldr	r3, [pc, #24]	; (8004b18 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8004afe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b02:	2300      	movs	r3, #0
 8004b04:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b08:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b0c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b10:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b14:	4770      	bx	lr
 8004b16:	bf00      	nop
 8004b18:	08004c01 	.word	0x08004c01

08004b1c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004b1c:	4b06      	ldr	r3, [pc, #24]	; (8004b38 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004b1e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b22:	2300      	movs	r3, #0
 8004b24:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b28:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b2c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b30:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b34:	4770      	bx	lr
 8004b36:	bf00      	nop
 8004b38:	080053e5 	.word	0x080053e5

08004b3c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8004b3c:	4b06      	ldr	r3, [pc, #24]	; (8004b58 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8004b3e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b42:	2300      	movs	r3, #0
 8004b44:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b48:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b4c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b50:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b54:	4770      	bx	lr
 8004b56:	bf00      	nop
 8004b58:	080052a5 	.word	0x080052a5

08004b5c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004b5c:	4b06      	ldr	r3, [pc, #24]	; (8004b78 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004b5e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b62:	2300      	movs	r3, #0
 8004b64:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b68:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b6c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b70:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b74:	4770      	bx	lr
 8004b76:	bf00      	nop
 8004b78:	08005165 	.word	0x08005165

08004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004b7c:	4b06      	ldr	r3, [pc, #24]	; (8004b98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004b7e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b82:	2300      	movs	r3, #0
 8004b84:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b88:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b8c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b90:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b94:	4770      	bx	lr
 8004b96:	bf00      	nop
 8004b98:	080045c1 	.word	0x080045c1

08004b9c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004b9c:	6803      	ldr	r3, [r0, #0]
 8004b9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ba0:	4718      	bx	r3
	...

08004ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004ba4:	4b12      	ldr	r3, [pc, #72]	; (8004bf0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004ba6:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004ba8:	6003      	str	r3, [r0, #0]
 8004baa:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004bae:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004bb0:	4b10      	ldr	r3, [pc, #64]	; (8004bf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004bb2:	7241      	strb	r1, [r0, #9]
 8004bb4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004bb6:	4910      	ldr	r1, [pc, #64]	; (8004bf8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004bb8:	4b10      	ldr	r3, [pc, #64]	; (8004bfc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004bba:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004bbe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004bc2:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004bc4:	2200      	movs	r2, #0
 8004bc6:	6042      	str	r2, [r0, #4]
 8004bc8:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004bca:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004bcc:	81c2      	strh	r2, [r0, #14]
          solid()
 8004bce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004bd2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004bd6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004bda:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004bde:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004be0:	9100      	str	r1, [sp, #0]
 8004be2:	3010      	adds	r0, #16
 8004be4:	4611      	mov	r1, r2
 8004be6:	f7fe fb0f 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004bea:	4620      	mov	r0, r4
 8004bec:	b002      	add	sp, #8
 8004bee:	bd10      	pop	{r4, pc}
 8004bf0:	0802e128 	.word	0x0802e128
 8004bf4:	0802e00c 	.word	0x0802e00c
 8004bf8:	20012d9a 	.word	0x20012d9a
 8004bfc:	20012d98 	.word	0x20012d98

08004c00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8004c00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c04:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c08:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c0a:	68a0      	ldr	r0, [r4, #8]
 8004c0c:	6803      	ldr	r3, [r0, #0]
 8004c0e:	6a1b      	ldr	r3, [r3, #32]
 8004c10:	4798      	blx	r3
 8004c12:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004c16:	d205      	bcs.n	8004c24 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004c18:	4b42      	ldr	r3, [pc, #264]	; (8004d24 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004c1a:	4a43      	ldr	r2, [pc, #268]	; (8004d28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004c1c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c1e:	4843      	ldr	r0, [pc, #268]	; (8004d2c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8004c20:	f026 f850 	bl	802acc4 <__assert_func>
 8004c24:	6860      	ldr	r0, [r4, #4]
 8004c26:	6803      	ldr	r3, [r0, #0]
 8004c28:	6a1b      	ldr	r3, [r3, #32]
 8004c2a:	4798      	blx	r3
 8004c2c:	280f      	cmp	r0, #15
 8004c2e:	d803      	bhi.n	8004c38 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8004c30:	4b3f      	ldr	r3, [pc, #252]	; (8004d30 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8004c32:	4a3d      	ldr	r2, [pc, #244]	; (8004d28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004c34:	21a4      	movs	r1, #164	; 0xa4
 8004c36:	e7f2      	b.n	8004c1e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c38:	68e0      	ldr	r0, [r4, #12]
 8004c3a:	6803      	ldr	r3, [r0, #0]
 8004c3c:	6a1b      	ldr	r3, [r3, #32]
 8004c3e:	4798      	blx	r3
 8004c40:	2837      	cmp	r0, #55	; 0x37
 8004c42:	d803      	bhi.n	8004c4c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004c44:	4b3b      	ldr	r3, [pc, #236]	; (8004d34 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004c46:	4a38      	ldr	r2, [pc, #224]	; (8004d28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004c48:	21a5      	movs	r1, #165	; 0xa5
 8004c4a:	e7e8      	b.n	8004c1e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c4c:	f011 f8a8 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c50:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d38 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004c54:	3004      	adds	r0, #4
 8004c56:	f011 f909 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c5a:	f8d9 0000 	ldr.w	r0, [r9]
 8004c5e:	b110      	cbz	r0, 8004c66 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c60:	6803      	ldr	r3, [r0, #0]
 8004c62:	68db      	ldr	r3, [r3, #12]
 8004c64:	4798      	blx	r3
    if (*currentTrans)
 8004c66:	f8d9 0000 	ldr.w	r0, [r9]
 8004c6a:	b110      	cbz	r0, 8004c72 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c6c:	6803      	ldr	r3, [r0, #0]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	4798      	blx	r3
    if (*currentScreen)
 8004c72:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004d3c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004c76:	f8d8 0000 	ldr.w	r0, [r8]
 8004c7a:	b110      	cbz	r0, 8004c82 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c7c:	6803      	ldr	r3, [r0, #0]
 8004c7e:	695b      	ldr	r3, [r3, #20]
 8004c80:	4798      	blx	r3
    if (*currentPresenter)
 8004c82:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c86:	b110      	cbz	r0, 8004c8e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c88:	6803      	ldr	r3, [r0, #0]
 8004c8a:	685b      	ldr	r3, [r3, #4]
 8004c8c:	4798      	blx	r3
    if (*currentScreen)
 8004c8e:	f8d8 0000 	ldr.w	r0, [r8]
 8004c92:	b110      	cbz	r0, 8004c9a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c94:	6803      	ldr	r3, [r0, #0]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	4798      	blx	r3
    if (*currentPresenter)
 8004c9a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c9e:	b110      	cbz	r0, 8004ca6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ca0:	6803      	ldr	r3, [r0, #0]
 8004ca2:	689b      	ldr	r3, [r3, #8]
 8004ca4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ca6:	68e0      	ldr	r0, [r4, #12]
 8004ca8:	2100      	movs	r1, #0
 8004caa:	f7ff ff77 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004cae:	2114      	movs	r1, #20
 8004cb0:	4605      	mov	r5, r0
 8004cb2:	f7ff ff77 	bl	8004ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cb6:	68a0      	ldr	r0, [r4, #8]
 8004cb8:	6803      	ldr	r3, [r0, #0]
 8004cba:	2100      	movs	r1, #0
 8004cbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cbe:	4798      	blx	r3
 8004cc0:	4606      	mov	r6, r0
 8004cc2:	f004 fad9 	bl	8009278 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cc6:	6860      	ldr	r0, [r4, #4]
 8004cc8:	6803      	ldr	r3, [r0, #0]
 8004cca:	2100      	movs	r1, #0
 8004ccc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cce:	4798      	blx	r3
 8004cd0:	4631      	mov	r1, r6
 8004cd2:	4604      	mov	r4, r0
 8004cd4:	f004 faaa 	bl	800922c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004cd8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004cdc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ce0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ce4:	b1dc      	cbz	r4, 8004d1e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004ce6:	1d23      	adds	r3, r4, #4
 8004ce8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004cec:	6833      	ldr	r3, [r6, #0]
 8004cee:	f8c4 a008 	str.w	sl, [r4, #8]
 8004cf2:	4630      	mov	r0, r6
 8004cf4:	68db      	ldr	r3, [r3, #12]
 8004cf6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004cf8:	4798      	blx	r3
    newPresenter->activate();
 8004cfa:	6823      	ldr	r3, [r4, #0]
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d02:	4629      	mov	r1, r5
 8004d04:	4630      	mov	r0, r6
 8004d06:	f012 fe77 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d0a:	682b      	ldr	r3, [r5, #0]
 8004d0c:	4628      	mov	r0, r5
 8004d0e:	691b      	ldr	r3, [r3, #16]
 8004d10:	4798      	blx	r3
    newTransition->invalidate();
 8004d12:	682b      	ldr	r3, [r5, #0]
 8004d14:	4628      	mov	r0, r5
 8004d16:	695b      	ldr	r3, [r3, #20]
}
 8004d18:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d1c:	4718      	bx	r3
    model->bind(newPresenter);
 8004d1e:	4623      	mov	r3, r4
 8004d20:	e7e2      	b.n	8004ce8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8004d22:	bf00      	nop
 8004d24:	0802ca3c 	.word	0x0802ca3c
 8004d28:	0802ce6d 	.word	0x0802ce6d
 8004d2c:	0802cbd8 	.word	0x0802cbd8
 8004d30:	0802cc1f 	.word	0x0802cc1f
 8004d34:	0802ccc2 	.word	0x0802ccc2
 8004d38:	20012dec 	.word	0x20012dec
 8004d3c:	20012de8 	.word	0x20012de8

08004d40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004d40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d44:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d48:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d4a:	68a0      	ldr	r0, [r4, #8]
 8004d4c:	6803      	ldr	r3, [r0, #0]
 8004d4e:	6a1b      	ldr	r3, [r3, #32]
 8004d50:	4798      	blx	r3
 8004d52:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d56:	d205      	bcs.n	8004d64 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004d58:	4b42      	ldr	r3, [pc, #264]	; (8004e64 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004d5a:	4a43      	ldr	r2, [pc, #268]	; (8004e68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004d5c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d5e:	4843      	ldr	r0, [pc, #268]	; (8004e6c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004d60:	f025 ffb0 	bl	802acc4 <__assert_func>
 8004d64:	6860      	ldr	r0, [r4, #4]
 8004d66:	6803      	ldr	r3, [r0, #0]
 8004d68:	6a1b      	ldr	r3, [r3, #32]
 8004d6a:	4798      	blx	r3
 8004d6c:	280f      	cmp	r0, #15
 8004d6e:	d803      	bhi.n	8004d78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004d70:	4b3f      	ldr	r3, [pc, #252]	; (8004e70 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004d72:	4a3d      	ldr	r2, [pc, #244]	; (8004e68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004d74:	21a4      	movs	r1, #164	; 0xa4
 8004d76:	e7f2      	b.n	8004d5e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d78:	68e0      	ldr	r0, [r4, #12]
 8004d7a:	6803      	ldr	r3, [r0, #0]
 8004d7c:	6a1b      	ldr	r3, [r3, #32]
 8004d7e:	4798      	blx	r3
 8004d80:	2837      	cmp	r0, #55	; 0x37
 8004d82:	d803      	bhi.n	8004d8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004d84:	4b3b      	ldr	r3, [pc, #236]	; (8004e74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004d86:	4a38      	ldr	r2, [pc, #224]	; (8004e68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004d88:	21a5      	movs	r1, #165	; 0xa5
 8004d8a:	e7e8      	b.n	8004d5e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d8c:	f011 f808 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d90:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004d94:	3004      	adds	r0, #4
 8004d96:	f011 f869 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d9a:	f8d9 0000 	ldr.w	r0, [r9]
 8004d9e:	b110      	cbz	r0, 8004da6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004da0:	6803      	ldr	r3, [r0, #0]
 8004da2:	68db      	ldr	r3, [r3, #12]
 8004da4:	4798      	blx	r3
    if (*currentTrans)
 8004da6:	f8d9 0000 	ldr.w	r0, [r9]
 8004daa:	b110      	cbz	r0, 8004db2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004dac:	6803      	ldr	r3, [r0, #0]
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	4798      	blx	r3
    if (*currentScreen)
 8004db2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e7c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004db6:	f8d8 0000 	ldr.w	r0, [r8]
 8004dba:	b110      	cbz	r0, 8004dc2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004dbc:	6803      	ldr	r3, [r0, #0]
 8004dbe:	695b      	ldr	r3, [r3, #20]
 8004dc0:	4798      	blx	r3
    if (*currentPresenter)
 8004dc2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dc6:	b110      	cbz	r0, 8004dce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004dc8:	6803      	ldr	r3, [r0, #0]
 8004dca:	685b      	ldr	r3, [r3, #4]
 8004dcc:	4798      	blx	r3
    if (*currentScreen)
 8004dce:	f8d8 0000 	ldr.w	r0, [r8]
 8004dd2:	b110      	cbz	r0, 8004dda <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004dd4:	6803      	ldr	r3, [r0, #0]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	4798      	blx	r3
    if (*currentPresenter)
 8004dda:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dde:	b110      	cbz	r0, 8004de6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004de0:	6803      	ldr	r3, [r0, #0]
 8004de2:	689b      	ldr	r3, [r3, #8]
 8004de4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004de6:	68e0      	ldr	r0, [r4, #12]
 8004de8:	2100      	movs	r1, #0
 8004dea:	f7ff fed7 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004dee:	2114      	movs	r1, #20
 8004df0:	4605      	mov	r5, r0
 8004df2:	f7ff fed7 	bl	8004ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004df6:	68a0      	ldr	r0, [r4, #8]
 8004df8:	6803      	ldr	r3, [r0, #0]
 8004dfa:	2100      	movs	r1, #0
 8004dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dfe:	4798      	blx	r3
 8004e00:	4606      	mov	r6, r0
 8004e02:	f004 fc93 	bl	800972c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e06:	6860      	ldr	r0, [r4, #4]
 8004e08:	6803      	ldr	r3, [r0, #0]
 8004e0a:	2100      	movs	r1, #0
 8004e0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e0e:	4798      	blx	r3
 8004e10:	4631      	mov	r1, r6
 8004e12:	4604      	mov	r4, r0
 8004e14:	f004 fc64 	bl	80096e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004e18:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e1c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e20:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e24:	b1dc      	cbz	r4, 8004e5e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004e26:	1d23      	adds	r3, r4, #4
 8004e28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e2c:	6833      	ldr	r3, [r6, #0]
 8004e2e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e32:	4630      	mov	r0, r6
 8004e34:	68db      	ldr	r3, [r3, #12]
 8004e36:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e38:	4798      	blx	r3
    newPresenter->activate();
 8004e3a:	6823      	ldr	r3, [r4, #0]
 8004e3c:	4620      	mov	r0, r4
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e42:	4629      	mov	r1, r5
 8004e44:	4630      	mov	r0, r6
 8004e46:	f012 fdd7 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e4a:	682b      	ldr	r3, [r5, #0]
 8004e4c:	4628      	mov	r0, r5
 8004e4e:	691b      	ldr	r3, [r3, #16]
 8004e50:	4798      	blx	r3
    newTransition->invalidate();
 8004e52:	682b      	ldr	r3, [r5, #0]
 8004e54:	4628      	mov	r0, r5
 8004e56:	695b      	ldr	r3, [r3, #20]
}
 8004e58:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e5c:	4718      	bx	r3
    model->bind(newPresenter);
 8004e5e:	4623      	mov	r3, r4
 8004e60:	e7e2      	b.n	8004e28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004e62:	bf00      	nop
 8004e64:	0802ca3c 	.word	0x0802ca3c
 8004e68:	0802cf8b 	.word	0x0802cf8b
 8004e6c:	0802cbd8 	.word	0x0802cbd8
 8004e70:	0802cc1f 	.word	0x0802cc1f
 8004e74:	0802ccc2 	.word	0x0802ccc2
 8004e78:	20012dec 	.word	0x20012dec
 8004e7c:	20012de8 	.word	0x20012de8

08004e80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004e80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e84:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e8a:	68a0      	ldr	r0, [r4, #8]
 8004e8c:	6803      	ldr	r3, [r0, #0]
 8004e8e:	6a1b      	ldr	r3, [r3, #32]
 8004e90:	4798      	blx	r3
 8004e92:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004e96:	d205      	bcs.n	8004ea4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004e98:	4b42      	ldr	r3, [pc, #264]	; (8004fa4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004e9a:	4a43      	ldr	r2, [pc, #268]	; (8004fa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004e9c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e9e:	4843      	ldr	r0, [pc, #268]	; (8004fac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004ea0:	f025 ff10 	bl	802acc4 <__assert_func>
 8004ea4:	6860      	ldr	r0, [r4, #4]
 8004ea6:	6803      	ldr	r3, [r0, #0]
 8004ea8:	6a1b      	ldr	r3, [r3, #32]
 8004eaa:	4798      	blx	r3
 8004eac:	280f      	cmp	r0, #15
 8004eae:	d803      	bhi.n	8004eb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004eb0:	4b3f      	ldr	r3, [pc, #252]	; (8004fb0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004eb2:	4a3d      	ldr	r2, [pc, #244]	; (8004fa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004eb4:	21a4      	movs	r1, #164	; 0xa4
 8004eb6:	e7f2      	b.n	8004e9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004eb8:	68e0      	ldr	r0, [r4, #12]
 8004eba:	6803      	ldr	r3, [r0, #0]
 8004ebc:	6a1b      	ldr	r3, [r3, #32]
 8004ebe:	4798      	blx	r3
 8004ec0:	2837      	cmp	r0, #55	; 0x37
 8004ec2:	d803      	bhi.n	8004ecc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004ec4:	4b3b      	ldr	r3, [pc, #236]	; (8004fb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004ec6:	4a38      	ldr	r2, [pc, #224]	; (8004fa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004ec8:	21a5      	movs	r1, #165	; 0xa5
 8004eca:	e7e8      	b.n	8004e9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ecc:	f010 ff68 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ed0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004ed4:	3004      	adds	r0, #4
 8004ed6:	f010 ffc9 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004eda:	f8d9 0000 	ldr.w	r0, [r9]
 8004ede:	b110      	cbz	r0, 8004ee6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004ee0:	6803      	ldr	r3, [r0, #0]
 8004ee2:	68db      	ldr	r3, [r3, #12]
 8004ee4:	4798      	blx	r3
    if (*currentTrans)
 8004ee6:	f8d9 0000 	ldr.w	r0, [r9]
 8004eea:	b110      	cbz	r0, 8004ef2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004eec:	6803      	ldr	r3, [r0, #0]
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	4798      	blx	r3
    if (*currentScreen)
 8004ef2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004fbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004ef6:	f8d8 0000 	ldr.w	r0, [r8]
 8004efa:	b110      	cbz	r0, 8004f02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004efc:	6803      	ldr	r3, [r0, #0]
 8004efe:	695b      	ldr	r3, [r3, #20]
 8004f00:	4798      	blx	r3
    if (*currentPresenter)
 8004f02:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f06:	b110      	cbz	r0, 8004f0e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004f08:	6803      	ldr	r3, [r0, #0]
 8004f0a:	685b      	ldr	r3, [r3, #4]
 8004f0c:	4798      	blx	r3
    if (*currentScreen)
 8004f0e:	f8d8 0000 	ldr.w	r0, [r8]
 8004f12:	b110      	cbz	r0, 8004f1a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004f14:	6803      	ldr	r3, [r0, #0]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	4798      	blx	r3
    if (*currentPresenter)
 8004f1a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f1e:	b110      	cbz	r0, 8004f26 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004f20:	6803      	ldr	r3, [r0, #0]
 8004f22:	689b      	ldr	r3, [r3, #8]
 8004f24:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f26:	68e0      	ldr	r0, [r4, #12]
 8004f28:	2100      	movs	r1, #0
 8004f2a:	f7ff fe37 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004f2e:	2114      	movs	r1, #20
 8004f30:	4605      	mov	r5, r0
 8004f32:	f7ff fe37 	bl	8004ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f36:	68a0      	ldr	r0, [r4, #8]
 8004f38:	6803      	ldr	r3, [r0, #0]
 8004f3a:	2100      	movs	r1, #0
 8004f3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f3e:	4798      	blx	r3
 8004f40:	4606      	mov	r6, r0
 8004f42:	f004 fb93 	bl	800966c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f46:	6860      	ldr	r0, [r4, #4]
 8004f48:	6803      	ldr	r3, [r0, #0]
 8004f4a:	2100      	movs	r1, #0
 8004f4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f4e:	4798      	blx	r3
 8004f50:	4631      	mov	r1, r6
 8004f52:	4604      	mov	r4, r0
 8004f54:	f004 fb64 	bl	8009620 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004f58:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f5c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f60:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f64:	b1dc      	cbz	r4, 8004f9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004f66:	1d23      	adds	r3, r4, #4
 8004f68:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f6c:	6833      	ldr	r3, [r6, #0]
 8004f6e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f72:	4630      	mov	r0, r6
 8004f74:	68db      	ldr	r3, [r3, #12]
 8004f76:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f78:	4798      	blx	r3
    newPresenter->activate();
 8004f7a:	6823      	ldr	r3, [r4, #0]
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f82:	4629      	mov	r1, r5
 8004f84:	4630      	mov	r0, r6
 8004f86:	f012 fd37 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f8a:	682b      	ldr	r3, [r5, #0]
 8004f8c:	4628      	mov	r0, r5
 8004f8e:	691b      	ldr	r3, [r3, #16]
 8004f90:	4798      	blx	r3
    newTransition->invalidate();
 8004f92:	682b      	ldr	r3, [r5, #0]
 8004f94:	4628      	mov	r0, r5
 8004f96:	695b      	ldr	r3, [r3, #20]
}
 8004f98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f9c:	4718      	bx	r3
    model->bind(newPresenter);
 8004f9e:	4623      	mov	r3, r4
 8004fa0:	e7e2      	b.n	8004f68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004fa2:	bf00      	nop
 8004fa4:	0802ca3c 	.word	0x0802ca3c
 8004fa8:	0802d0bb 	.word	0x0802d0bb
 8004fac:	0802cbd8 	.word	0x0802cbd8
 8004fb0:	0802cc1f 	.word	0x0802cc1f
 8004fb4:	0802ccc2 	.word	0x0802ccc2
 8004fb8:	20012dec 	.word	0x20012dec
 8004fbc:	20012de8 	.word	0x20012de8

08004fc0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004fc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fc4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fc8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fca:	68a0      	ldr	r0, [r4, #8]
 8004fcc:	6803      	ldr	r3, [r0, #0]
 8004fce:	6a1b      	ldr	r3, [r3, #32]
 8004fd0:	4798      	blx	r3
 8004fd2:	f241 137b 	movw	r3, #4475	; 0x117b
 8004fd6:	4298      	cmp	r0, r3
 8004fd8:	d805      	bhi.n	8004fe6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004fda:	4b42      	ldr	r3, [pc, #264]	; (80050e4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004fdc:	4a42      	ldr	r2, [pc, #264]	; (80050e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004fde:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004fe0:	4842      	ldr	r0, [pc, #264]	; (80050ec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004fe2:	f025 fe6f 	bl	802acc4 <__assert_func>
 8004fe6:	6860      	ldr	r0, [r4, #4]
 8004fe8:	6803      	ldr	r3, [r0, #0]
 8004fea:	6a1b      	ldr	r3, [r3, #32]
 8004fec:	4798      	blx	r3
 8004fee:	280f      	cmp	r0, #15
 8004ff0:	d803      	bhi.n	8004ffa <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004ff2:	4b3f      	ldr	r3, [pc, #252]	; (80050f0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004ff4:	4a3c      	ldr	r2, [pc, #240]	; (80050e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004ff6:	21a4      	movs	r1, #164	; 0xa4
 8004ff8:	e7f2      	b.n	8004fe0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ffa:	68e0      	ldr	r0, [r4, #12]
 8004ffc:	6803      	ldr	r3, [r0, #0]
 8004ffe:	6a1b      	ldr	r3, [r3, #32]
 8005000:	4798      	blx	r3
 8005002:	2837      	cmp	r0, #55	; 0x37
 8005004:	d803      	bhi.n	800500e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8005006:	4b3b      	ldr	r3, [pc, #236]	; (80050f4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005008:	4a37      	ldr	r2, [pc, #220]	; (80050e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800500a:	21a5      	movs	r1, #165	; 0xa5
 800500c:	e7e8      	b.n	8004fe0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800500e:	f010 fec7 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005012:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80050f8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005016:	3004      	adds	r0, #4
 8005018:	f010 ff28 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800501c:	f8d9 0000 	ldr.w	r0, [r9]
 8005020:	b110      	cbz	r0, 8005028 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005022:	6803      	ldr	r3, [r0, #0]
 8005024:	68db      	ldr	r3, [r3, #12]
 8005026:	4798      	blx	r3
    if (*currentTrans)
 8005028:	f8d9 0000 	ldr.w	r0, [r9]
 800502c:	b110      	cbz	r0, 8005034 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800502e:	6803      	ldr	r3, [r0, #0]
 8005030:	681b      	ldr	r3, [r3, #0]
 8005032:	4798      	blx	r3
    if (*currentScreen)
 8005034:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80050fc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005038:	f8d8 0000 	ldr.w	r0, [r8]
 800503c:	b110      	cbz	r0, 8005044 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800503e:	6803      	ldr	r3, [r0, #0]
 8005040:	695b      	ldr	r3, [r3, #20]
 8005042:	4798      	blx	r3
    if (*currentPresenter)
 8005044:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005048:	b110      	cbz	r0, 8005050 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800504a:	6803      	ldr	r3, [r0, #0]
 800504c:	685b      	ldr	r3, [r3, #4]
 800504e:	4798      	blx	r3
    if (*currentScreen)
 8005050:	f8d8 0000 	ldr.w	r0, [r8]
 8005054:	b110      	cbz	r0, 800505c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005056:	6803      	ldr	r3, [r0, #0]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	4798      	blx	r3
    if (*currentPresenter)
 800505c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005060:	b110      	cbz	r0, 8005068 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005062:	6803      	ldr	r3, [r0, #0]
 8005064:	689b      	ldr	r3, [r3, #8]
 8005066:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005068:	68e0      	ldr	r0, [r4, #12]
 800506a:	2100      	movs	r1, #0
 800506c:	f7ff fd96 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005070:	2114      	movs	r1, #20
 8005072:	4605      	mov	r5, r0
 8005074:	f7ff fd96 	bl	8004ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005078:	68a0      	ldr	r0, [r4, #8]
 800507a:	6803      	ldr	r3, [r0, #0]
 800507c:	2100      	movs	r1, #0
 800507e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005080:	4798      	blx	r3
 8005082:	4606      	mov	r6, r0
 8005084:	f004 fa92 	bl	80095ac <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005088:	6860      	ldr	r0, [r4, #4]
 800508a:	6803      	ldr	r3, [r0, #0]
 800508c:	2100      	movs	r1, #0
 800508e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005090:	4798      	blx	r3
 8005092:	4631      	mov	r1, r6
 8005094:	4604      	mov	r4, r0
 8005096:	f004 fa63 	bl	8009560 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800509a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800509e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050a2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050a6:	b1dc      	cbz	r4, 80050e0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80050a8:	1d23      	adds	r3, r4, #4
 80050aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050ae:	6833      	ldr	r3, [r6, #0]
 80050b0:	f8c4 a008 	str.w	sl, [r4, #8]
 80050b4:	4630      	mov	r0, r6
 80050b6:	68db      	ldr	r3, [r3, #12]
 80050b8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050ba:	4798      	blx	r3
    newPresenter->activate();
 80050bc:	6823      	ldr	r3, [r4, #0]
 80050be:	4620      	mov	r0, r4
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050c4:	4629      	mov	r1, r5
 80050c6:	4630      	mov	r0, r6
 80050c8:	f012 fc96 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050cc:	682b      	ldr	r3, [r5, #0]
 80050ce:	4628      	mov	r0, r5
 80050d0:	691b      	ldr	r3, [r3, #16]
 80050d2:	4798      	blx	r3
    newTransition->invalidate();
 80050d4:	682b      	ldr	r3, [r5, #0]
 80050d6:	4628      	mov	r0, r5
 80050d8:	695b      	ldr	r3, [r3, #20]
}
 80050da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050de:	4718      	bx	r3
    model->bind(newPresenter);
 80050e0:	4623      	mov	r3, r4
 80050e2:	e7e2      	b.n	80050aa <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 80050e4:	0802ca3c 	.word	0x0802ca3c
 80050e8:	0802d1d9 	.word	0x0802d1d9
 80050ec:	0802cbd8 	.word	0x0802cbd8
 80050f0:	0802cc1f 	.word	0x0802cc1f
 80050f4:	0802ccc2 	.word	0x0802ccc2
 80050f8:	20012dec 	.word	0x20012dec
 80050fc:	20012de8 	.word	0x20012de8

08005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005100:	6803      	ldr	r3, [r0, #0]
 8005102:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005104:	4718      	bx	r3
	...

08005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005108:	4b12      	ldr	r3, [pc, #72]	; (8005154 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800510a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800510c:	6003      	str	r3, [r0, #0]
 800510e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005112:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005114:	4b10      	ldr	r3, [pc, #64]	; (8005158 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005116:	7241      	strb	r1, [r0, #9]
 8005118:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800511a:	4910      	ldr	r1, [pc, #64]	; (800515c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800511c:	4b10      	ldr	r3, [pc, #64]	; (8005160 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800511e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005122:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005126:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005128:	2200      	movs	r2, #0
 800512a:	6042      	str	r2, [r0, #4]
 800512c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800512e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005130:	81c2      	strh	r2, [r0, #14]
          solid()
 8005132:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005136:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800513a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800513e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005142:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005144:	9100      	str	r1, [sp, #0]
 8005146:	3010      	adds	r0, #16
 8005148:	4611      	mov	r1, r2
 800514a:	f7fe f85d 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800514e:	4620      	mov	r0, r4
 8005150:	b002      	add	sp, #8
 8005152:	bd10      	pop	{r4, pc}
 8005154:	0802e104 	.word	0x0802e104
 8005158:	0802e00c 	.word	0x0802e00c
 800515c:	20012d9a 	.word	0x20012d9a
 8005160:	20012d98 	.word	0x20012d98

08005164 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005168:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800516c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800516e:	68a0      	ldr	r0, [r4, #8]
 8005170:	6803      	ldr	r3, [r0, #0]
 8005172:	6a1b      	ldr	r3, [r3, #32]
 8005174:	4798      	blx	r3
 8005176:	f241 03af 	movw	r3, #4271	; 0x10af
 800517a:	4298      	cmp	r0, r3
 800517c:	d805      	bhi.n	800518a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 800517e:	4b42      	ldr	r3, [pc, #264]	; (8005288 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005180:	4a42      	ldr	r2, [pc, #264]	; (800528c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005182:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005184:	4842      	ldr	r0, [pc, #264]	; (8005290 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005186:	f025 fd9d 	bl	802acc4 <__assert_func>
 800518a:	6860      	ldr	r0, [r4, #4]
 800518c:	6803      	ldr	r3, [r0, #0]
 800518e:	6a1b      	ldr	r3, [r3, #32]
 8005190:	4798      	blx	r3
 8005192:	280f      	cmp	r0, #15
 8005194:	d803      	bhi.n	800519e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005196:	4b3f      	ldr	r3, [pc, #252]	; (8005294 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005198:	4a3c      	ldr	r2, [pc, #240]	; (800528c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800519a:	21a4      	movs	r1, #164	; 0xa4
 800519c:	e7f2      	b.n	8005184 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800519e:	68e0      	ldr	r0, [r4, #12]
 80051a0:	6803      	ldr	r3, [r0, #0]
 80051a2:	6a1b      	ldr	r3, [r3, #32]
 80051a4:	4798      	blx	r3
 80051a6:	2837      	cmp	r0, #55	; 0x37
 80051a8:	d803      	bhi.n	80051b2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80051aa:	4b3b      	ldr	r3, [pc, #236]	; (8005298 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80051ac:	4a37      	ldr	r2, [pc, #220]	; (800528c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80051ae:	21a5      	movs	r1, #165	; 0xa5
 80051b0:	e7e8      	b.n	8005184 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80051b2:	f010 fdf5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051b6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800529c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80051ba:	3004      	adds	r0, #4
 80051bc:	f010 fe56 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051c0:	f8d9 0000 	ldr.w	r0, [r9]
 80051c4:	b110      	cbz	r0, 80051cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80051c6:	6803      	ldr	r3, [r0, #0]
 80051c8:	68db      	ldr	r3, [r3, #12]
 80051ca:	4798      	blx	r3
    if (*currentTrans)
 80051cc:	f8d9 0000 	ldr.w	r0, [r9]
 80051d0:	b110      	cbz	r0, 80051d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80051d2:	6803      	ldr	r3, [r0, #0]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	4798      	blx	r3
    if (*currentScreen)
 80051d8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80052a0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80051dc:	f8d8 0000 	ldr.w	r0, [r8]
 80051e0:	b110      	cbz	r0, 80051e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80051e2:	6803      	ldr	r3, [r0, #0]
 80051e4:	695b      	ldr	r3, [r3, #20]
 80051e6:	4798      	blx	r3
    if (*currentPresenter)
 80051e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051ec:	b110      	cbz	r0, 80051f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	685b      	ldr	r3, [r3, #4]
 80051f2:	4798      	blx	r3
    if (*currentScreen)
 80051f4:	f8d8 0000 	ldr.w	r0, [r8]
 80051f8:	b110      	cbz	r0, 8005200 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80051fa:	6803      	ldr	r3, [r0, #0]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	4798      	blx	r3
    if (*currentPresenter)
 8005200:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005204:	b110      	cbz	r0, 800520c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005206:	6803      	ldr	r3, [r0, #0]
 8005208:	689b      	ldr	r3, [r3, #8]
 800520a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800520c:	68e0      	ldr	r0, [r4, #12]
 800520e:	2100      	movs	r1, #0
 8005210:	f7ff ff76 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005214:	2114      	movs	r1, #20
 8005216:	4605      	mov	r5, r0
 8005218:	f7ff ff76 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800521c:	68a0      	ldr	r0, [r4, #8]
 800521e:	6803      	ldr	r3, [r0, #0]
 8005220:	2100      	movs	r1, #0
 8005222:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005224:	4798      	blx	r3
 8005226:	4606      	mov	r6, r0
 8005228:	f004 fcbc 	bl	8009ba4 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800522c:	6860      	ldr	r0, [r4, #4]
 800522e:	6803      	ldr	r3, [r0, #0]
 8005230:	2100      	movs	r1, #0
 8005232:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005234:	4798      	blx	r3
 8005236:	4631      	mov	r1, r6
 8005238:	4604      	mov	r4, r0
 800523a:	f004 fc8d 	bl	8009b58 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800523e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005242:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005246:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800524a:	b1dc      	cbz	r4, 8005284 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 800524c:	1d23      	adds	r3, r4, #4
 800524e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005252:	6833      	ldr	r3, [r6, #0]
 8005254:	f8c4 a008 	str.w	sl, [r4, #8]
 8005258:	4630      	mov	r0, r6
 800525a:	68db      	ldr	r3, [r3, #12]
 800525c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800525e:	4798      	blx	r3
    newPresenter->activate();
 8005260:	6823      	ldr	r3, [r4, #0]
 8005262:	4620      	mov	r0, r4
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005268:	4629      	mov	r1, r5
 800526a:	4630      	mov	r0, r6
 800526c:	f012 fbc4 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005270:	682b      	ldr	r3, [r5, #0]
 8005272:	4628      	mov	r0, r5
 8005274:	691b      	ldr	r3, [r3, #16]
 8005276:	4798      	blx	r3
    newTransition->invalidate();
 8005278:	682b      	ldr	r3, [r5, #0]
 800527a:	4628      	mov	r0, r5
 800527c:	695b      	ldr	r3, [r3, #20]
}
 800527e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005282:	4718      	bx	r3
    model->bind(newPresenter);
 8005284:	4623      	mov	r3, r4
 8005286:	e7e2      	b.n	800524e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005288:	0802ca3c 	.word	0x0802ca3c
 800528c:	0802d2f3 	.word	0x0802d2f3
 8005290:	0802cbd8 	.word	0x0802cbd8
 8005294:	0802cc1f 	.word	0x0802cc1f
 8005298:	0802ccc2 	.word	0x0802ccc2
 800529c:	20012dec 	.word	0x20012dec
 80052a0:	20012de8 	.word	0x20012de8

080052a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 80052a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80052a8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80052ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80052ae:	68a0      	ldr	r0, [r4, #8]
 80052b0:	6803      	ldr	r3, [r0, #0]
 80052b2:	6a1b      	ldr	r3, [r3, #32]
 80052b4:	4798      	blx	r3
 80052b6:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 80052ba:	d205      	bcs.n	80052c8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 80052bc:	4b42      	ldr	r3, [pc, #264]	; (80053c8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 80052be:	4a43      	ldr	r2, [pc, #268]	; (80053cc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80052c0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80052c2:	4843      	ldr	r0, [pc, #268]	; (80053d0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80052c4:	f025 fcfe 	bl	802acc4 <__assert_func>
 80052c8:	6860      	ldr	r0, [r4, #4]
 80052ca:	6803      	ldr	r3, [r0, #0]
 80052cc:	6a1b      	ldr	r3, [r3, #32]
 80052ce:	4798      	blx	r3
 80052d0:	280f      	cmp	r0, #15
 80052d2:	d803      	bhi.n	80052dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 80052d4:	4b3f      	ldr	r3, [pc, #252]	; (80053d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80052d6:	4a3d      	ldr	r2, [pc, #244]	; (80053cc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80052d8:	21a4      	movs	r1, #164	; 0xa4
 80052da:	e7f2      	b.n	80052c2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80052dc:	68e0      	ldr	r0, [r4, #12]
 80052de:	6803      	ldr	r3, [r0, #0]
 80052e0:	6a1b      	ldr	r3, [r3, #32]
 80052e2:	4798      	blx	r3
 80052e4:	2837      	cmp	r0, #55	; 0x37
 80052e6:	d803      	bhi.n	80052f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 80052e8:	4b3b      	ldr	r3, [pc, #236]	; (80053d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80052ea:	4a38      	ldr	r2, [pc, #224]	; (80053cc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80052ec:	21a5      	movs	r1, #165	; 0xa5
 80052ee:	e7e8      	b.n	80052c2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80052f0:	f010 fd56 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052f4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80053dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80052f8:	3004      	adds	r0, #4
 80052fa:	f010 fdb7 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052fe:	f8d9 0000 	ldr.w	r0, [r9]
 8005302:	b110      	cbz	r0, 800530a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005304:	6803      	ldr	r3, [r0, #0]
 8005306:	68db      	ldr	r3, [r3, #12]
 8005308:	4798      	blx	r3
    if (*currentTrans)
 800530a:	f8d9 0000 	ldr.w	r0, [r9]
 800530e:	b110      	cbz	r0, 8005316 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005310:	6803      	ldr	r3, [r0, #0]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	4798      	blx	r3
    if (*currentScreen)
 8005316:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80053e0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800531a:	f8d8 0000 	ldr.w	r0, [r8]
 800531e:	b110      	cbz	r0, 8005326 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005320:	6803      	ldr	r3, [r0, #0]
 8005322:	695b      	ldr	r3, [r3, #20]
 8005324:	4798      	blx	r3
    if (*currentPresenter)
 8005326:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800532a:	b110      	cbz	r0, 8005332 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800532c:	6803      	ldr	r3, [r0, #0]
 800532e:	685b      	ldr	r3, [r3, #4]
 8005330:	4798      	blx	r3
    if (*currentScreen)
 8005332:	f8d8 0000 	ldr.w	r0, [r8]
 8005336:	b110      	cbz	r0, 800533e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005338:	6803      	ldr	r3, [r0, #0]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	4798      	blx	r3
    if (*currentPresenter)
 800533e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005342:	b110      	cbz	r0, 800534a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005344:	6803      	ldr	r3, [r0, #0]
 8005346:	689b      	ldr	r3, [r3, #8]
 8005348:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800534a:	68e0      	ldr	r0, [r4, #12]
 800534c:	2100      	movs	r1, #0
 800534e:	f7ff fed7 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005352:	2114      	movs	r1, #20
 8005354:	4605      	mov	r5, r0
 8005356:	f7ff fed7 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800535a:	68a0      	ldr	r0, [r4, #8]
 800535c:	6803      	ldr	r3, [r0, #0]
 800535e:	2100      	movs	r1, #0
 8005360:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005362:	4798      	blx	r3
 8005364:	4606      	mov	r6, r0
 8005366:	f003 ffe1 	bl	800932c <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800536a:	6860      	ldr	r0, [r4, #4]
 800536c:	6803      	ldr	r3, [r0, #0]
 800536e:	2100      	movs	r1, #0
 8005370:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005372:	4798      	blx	r3
 8005374:	4631      	mov	r1, r6
 8005376:	4604      	mov	r4, r0
 8005378:	f003 ffb2 	bl	80092e0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800537c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005380:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005384:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005388:	b1dc      	cbz	r4, 80053c2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 800538a:	1d23      	adds	r3, r4, #4
 800538c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005390:	6833      	ldr	r3, [r6, #0]
 8005392:	f8c4 a008 	str.w	sl, [r4, #8]
 8005396:	4630      	mov	r0, r6
 8005398:	68db      	ldr	r3, [r3, #12]
 800539a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800539c:	4798      	blx	r3
    newPresenter->activate();
 800539e:	6823      	ldr	r3, [r4, #0]
 80053a0:	4620      	mov	r0, r4
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80053a6:	4629      	mov	r1, r5
 80053a8:	4630      	mov	r0, r6
 80053aa:	f012 fb25 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80053ae:	682b      	ldr	r3, [r5, #0]
 80053b0:	4628      	mov	r0, r5
 80053b2:	691b      	ldr	r3, [r3, #16]
 80053b4:	4798      	blx	r3
    newTransition->invalidate();
 80053b6:	682b      	ldr	r3, [r5, #0]
 80053b8:	4628      	mov	r0, r5
 80053ba:	695b      	ldr	r3, [r3, #20]
}
 80053bc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053c0:	4718      	bx	r3
    model->bind(newPresenter);
 80053c2:	4623      	mov	r3, r4
 80053c4:	e7e2      	b.n	800538c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 80053c6:	bf00      	nop
 80053c8:	0802ca3c 	.word	0x0802ca3c
 80053cc:	0802d413 	.word	0x0802d413
 80053d0:	0802cbd8 	.word	0x0802cbd8
 80053d4:	0802cc1f 	.word	0x0802cc1f
 80053d8:	0802ccc2 	.word	0x0802ccc2
 80053dc:	20012dec 	.word	0x20012dec
 80053e0:	20012de8 	.word	0x20012de8

080053e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80053e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80053e8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80053ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053ee:	68a0      	ldr	r0, [r4, #8]
 80053f0:	6803      	ldr	r3, [r0, #0]
 80053f2:	6a1b      	ldr	r3, [r3, #32]
 80053f4:	4798      	blx	r3
 80053f6:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 80053fa:	d205      	bcs.n	8005408 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 80053fc:	4b42      	ldr	r3, [pc, #264]	; (8005508 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80053fe:	4a43      	ldr	r2, [pc, #268]	; (800550c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005400:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005402:	4843      	ldr	r0, [pc, #268]	; (8005510 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005404:	f025 fc5e 	bl	802acc4 <__assert_func>
 8005408:	6860      	ldr	r0, [r4, #4]
 800540a:	6803      	ldr	r3, [r0, #0]
 800540c:	6a1b      	ldr	r3, [r3, #32]
 800540e:	4798      	blx	r3
 8005410:	280f      	cmp	r0, #15
 8005412:	d803      	bhi.n	800541c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 8005414:	4b3f      	ldr	r3, [pc, #252]	; (8005514 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005416:	4a3d      	ldr	r2, [pc, #244]	; (800550c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005418:	21a4      	movs	r1, #164	; 0xa4
 800541a:	e7f2      	b.n	8005402 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800541c:	68e0      	ldr	r0, [r4, #12]
 800541e:	6803      	ldr	r3, [r0, #0]
 8005420:	6a1b      	ldr	r3, [r3, #32]
 8005422:	4798      	blx	r3
 8005424:	2837      	cmp	r0, #55	; 0x37
 8005426:	d803      	bhi.n	8005430 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 8005428:	4b3b      	ldr	r3, [pc, #236]	; (8005518 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800542a:	4a38      	ldr	r2, [pc, #224]	; (800550c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800542c:	21a5      	movs	r1, #165	; 0xa5
 800542e:	e7e8      	b.n	8005402 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005430:	f010 fcb6 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005434:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800551c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005438:	3004      	adds	r0, #4
 800543a:	f010 fd17 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800543e:	f8d9 0000 	ldr.w	r0, [r9]
 8005442:	b110      	cbz	r0, 800544a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005444:	6803      	ldr	r3, [r0, #0]
 8005446:	68db      	ldr	r3, [r3, #12]
 8005448:	4798      	blx	r3
    if (*currentTrans)
 800544a:	f8d9 0000 	ldr.w	r0, [r9]
 800544e:	b110      	cbz	r0, 8005456 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005450:	6803      	ldr	r3, [r0, #0]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	4798      	blx	r3
    if (*currentScreen)
 8005456:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005520 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 800545a:	f8d8 0000 	ldr.w	r0, [r8]
 800545e:	b110      	cbz	r0, 8005466 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005460:	6803      	ldr	r3, [r0, #0]
 8005462:	695b      	ldr	r3, [r3, #20]
 8005464:	4798      	blx	r3
    if (*currentPresenter)
 8005466:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800546a:	b110      	cbz	r0, 8005472 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800546c:	6803      	ldr	r3, [r0, #0]
 800546e:	685b      	ldr	r3, [r3, #4]
 8005470:	4798      	blx	r3
    if (*currentScreen)
 8005472:	f8d8 0000 	ldr.w	r0, [r8]
 8005476:	b110      	cbz	r0, 800547e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005478:	6803      	ldr	r3, [r0, #0]
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	4798      	blx	r3
    if (*currentPresenter)
 800547e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005482:	b110      	cbz	r0, 800548a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005484:	6803      	ldr	r3, [r0, #0]
 8005486:	689b      	ldr	r3, [r3, #8]
 8005488:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800548a:	68e0      	ldr	r0, [r4, #12]
 800548c:	2100      	movs	r1, #0
 800548e:	f7ff fe37 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005492:	2114      	movs	r1, #20
 8005494:	4605      	mov	r5, r0
 8005496:	f7ff fe37 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800549a:	68a0      	ldr	r0, [r4, #8]
 800549c:	6803      	ldr	r3, [r0, #0]
 800549e:	2100      	movs	r1, #0
 80054a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054a2:	4798      	blx	r3
 80054a4:	4606      	mov	r6, r0
 80054a6:	f003 ffbb 	bl	8009420 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80054aa:	6860      	ldr	r0, [r4, #4]
 80054ac:	6803      	ldr	r3, [r0, #0]
 80054ae:	2100      	movs	r1, #0
 80054b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054b2:	4798      	blx	r3
 80054b4:	4631      	mov	r1, r6
 80054b6:	4604      	mov	r4, r0
 80054b8:	f003 ff8c 	bl	80093d4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80054bc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80054c0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80054c4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80054c8:	b1dc      	cbz	r4, 8005502 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 80054ca:	1d23      	adds	r3, r4, #4
 80054cc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80054d0:	6833      	ldr	r3, [r6, #0]
 80054d2:	f8c4 a008 	str.w	sl, [r4, #8]
 80054d6:	4630      	mov	r0, r6
 80054d8:	68db      	ldr	r3, [r3, #12]
 80054da:	63f4      	str	r4, [r6, #60]	; 0x3c
 80054dc:	4798      	blx	r3
    newPresenter->activate();
 80054de:	6823      	ldr	r3, [r4, #0]
 80054e0:	4620      	mov	r0, r4
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054e6:	4629      	mov	r1, r5
 80054e8:	4630      	mov	r0, r6
 80054ea:	f012 fa85 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054ee:	682b      	ldr	r3, [r5, #0]
 80054f0:	4628      	mov	r0, r5
 80054f2:	691b      	ldr	r3, [r3, #16]
 80054f4:	4798      	blx	r3
    newTransition->invalidate();
 80054f6:	682b      	ldr	r3, [r5, #0]
 80054f8:	4628      	mov	r0, r5
 80054fa:	695b      	ldr	r3, [r3, #20]
}
 80054fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005500:	4718      	bx	r3
    model->bind(newPresenter);
 8005502:	4623      	mov	r3, r4
 8005504:	e7e2      	b.n	80054cc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 8005506:	bf00      	nop
 8005508:	0802ca3c 	.word	0x0802ca3c
 800550c:	0802d53b 	.word	0x0802d53b
 8005510:	0802cbd8 	.word	0x0802cbd8
 8005514:	0802cc1f 	.word	0x0802cc1f
 8005518:	0802ccc2 	.word	0x0802ccc2
 800551c:	20012dec 	.word	0x20012dec
 8005520:	20012de8 	.word	0x20012de8

08005524 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8005524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005528:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800552c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800552e:	68a0      	ldr	r0, [r4, #8]
 8005530:	6803      	ldr	r3, [r0, #0]
 8005532:	6a1b      	ldr	r3, [r3, #32]
 8005534:	4798      	blx	r3
 8005536:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800553a:	d205      	bcs.n	8005548 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800553c:	4b42      	ldr	r3, [pc, #264]	; (8005648 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800553e:	4a43      	ldr	r2, [pc, #268]	; (800564c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005540:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005542:	4843      	ldr	r0, [pc, #268]	; (8005650 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8005544:	f025 fbbe 	bl	802acc4 <__assert_func>
 8005548:	6860      	ldr	r0, [r4, #4]
 800554a:	6803      	ldr	r3, [r0, #0]
 800554c:	6a1b      	ldr	r3, [r3, #32]
 800554e:	4798      	blx	r3
 8005550:	280f      	cmp	r0, #15
 8005552:	d803      	bhi.n	800555c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8005554:	4b3f      	ldr	r3, [pc, #252]	; (8005654 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8005556:	4a3d      	ldr	r2, [pc, #244]	; (800564c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005558:	21a4      	movs	r1, #164	; 0xa4
 800555a:	e7f2      	b.n	8005542 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800555c:	68e0      	ldr	r0, [r4, #12]
 800555e:	6803      	ldr	r3, [r0, #0]
 8005560:	6a1b      	ldr	r3, [r3, #32]
 8005562:	4798      	blx	r3
 8005564:	2837      	cmp	r0, #55	; 0x37
 8005566:	d803      	bhi.n	8005570 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8005568:	4b3b      	ldr	r3, [pc, #236]	; (8005658 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800556a:	4a38      	ldr	r2, [pc, #224]	; (800564c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800556c:	21a5      	movs	r1, #165	; 0xa5
 800556e:	e7e8      	b.n	8005542 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005570:	f010 fc16 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005574:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800565c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8005578:	3004      	adds	r0, #4
 800557a:	f010 fc77 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800557e:	f8d9 0000 	ldr.w	r0, [r9]
 8005582:	b110      	cbz	r0, 800558a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005584:	6803      	ldr	r3, [r0, #0]
 8005586:	68db      	ldr	r3, [r3, #12]
 8005588:	4798      	blx	r3
    if (*currentTrans)
 800558a:	f8d9 0000 	ldr.w	r0, [r9]
 800558e:	b110      	cbz	r0, 8005596 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005590:	6803      	ldr	r3, [r0, #0]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	4798      	blx	r3
    if (*currentScreen)
 8005596:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005660 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 800559a:	f8d8 0000 	ldr.w	r0, [r8]
 800559e:	b110      	cbz	r0, 80055a6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80055a0:	6803      	ldr	r3, [r0, #0]
 80055a2:	695b      	ldr	r3, [r3, #20]
 80055a4:	4798      	blx	r3
    if (*currentPresenter)
 80055a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055aa:	b110      	cbz	r0, 80055b2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80055ac:	6803      	ldr	r3, [r0, #0]
 80055ae:	685b      	ldr	r3, [r3, #4]
 80055b0:	4798      	blx	r3
    if (*currentScreen)
 80055b2:	f8d8 0000 	ldr.w	r0, [r8]
 80055b6:	b110      	cbz	r0, 80055be <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80055b8:	6803      	ldr	r3, [r0, #0]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	4798      	blx	r3
    if (*currentPresenter)
 80055be:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055c2:	b110      	cbz	r0, 80055ca <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80055c4:	6803      	ldr	r3, [r0, #0]
 80055c6:	689b      	ldr	r3, [r3, #8]
 80055c8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80055ca:	68e0      	ldr	r0, [r4, #12]
 80055cc:	2100      	movs	r1, #0
 80055ce:	f7ff fd97 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80055d2:	2114      	movs	r1, #20
 80055d4:	4605      	mov	r5, r0
 80055d6:	f7ff fd97 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80055da:	68a0      	ldr	r0, [r4, #8]
 80055dc:	6803      	ldr	r3, [r0, #0]
 80055de:	2100      	movs	r1, #0
 80055e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055e2:	4798      	blx	r3
 80055e4:	4606      	mov	r6, r0
 80055e6:	f003 fe47 	bl	8009278 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80055ea:	6860      	ldr	r0, [r4, #4]
 80055ec:	6803      	ldr	r3, [r0, #0]
 80055ee:	2100      	movs	r1, #0
 80055f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055f2:	4798      	blx	r3
 80055f4:	4631      	mov	r1, r6
 80055f6:	4604      	mov	r4, r0
 80055f8:	f003 fe18 	bl	800922c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80055fc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005600:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005604:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005608:	b1dc      	cbz	r4, 8005642 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800560a:	1d23      	adds	r3, r4, #4
 800560c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005610:	6833      	ldr	r3, [r6, #0]
 8005612:	f8c4 a008 	str.w	sl, [r4, #8]
 8005616:	4630      	mov	r0, r6
 8005618:	68db      	ldr	r3, [r3, #12]
 800561a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800561c:	4798      	blx	r3
    newPresenter->activate();
 800561e:	6823      	ldr	r3, [r4, #0]
 8005620:	4620      	mov	r0, r4
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005626:	4629      	mov	r1, r5
 8005628:	4630      	mov	r0, r6
 800562a:	f012 f9e5 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800562e:	682b      	ldr	r3, [r5, #0]
 8005630:	4628      	mov	r0, r5
 8005632:	691b      	ldr	r3, [r3, #16]
 8005634:	4798      	blx	r3
    newTransition->invalidate();
 8005636:	682b      	ldr	r3, [r5, #0]
 8005638:	4628      	mov	r0, r5
 800563a:	695b      	ldr	r3, [r3, #20]
}
 800563c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005640:	4718      	bx	r3
    model->bind(newPresenter);
 8005642:	4623      	mov	r3, r4
 8005644:	e7e2      	b.n	800560c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8005646:	bf00      	nop
 8005648:	0802ca3c 	.word	0x0802ca3c
 800564c:	0802d661 	.word	0x0802d661
 8005650:	0802cbd8 	.word	0x0802cbd8
 8005654:	0802cc1f 	.word	0x0802cc1f
 8005658:	0802ccc2 	.word	0x0802ccc2
 800565c:	20012dec 	.word	0x20012dec
 8005660:	20012de8 	.word	0x20012de8

08005664 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005664:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005668:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800566c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800566e:	68a0      	ldr	r0, [r4, #8]
 8005670:	6803      	ldr	r3, [r0, #0]
 8005672:	6a1b      	ldr	r3, [r3, #32]
 8005674:	4798      	blx	r3
 8005676:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800567a:	4298      	cmp	r0, r3
 800567c:	d805      	bhi.n	800568a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800567e:	4b42      	ldr	r3, [pc, #264]	; (8005788 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005680:	4a42      	ldr	r2, [pc, #264]	; (800578c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005682:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005684:	4842      	ldr	r0, [pc, #264]	; (8005790 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005686:	f025 fb1d 	bl	802acc4 <__assert_func>
 800568a:	6860      	ldr	r0, [r4, #4]
 800568c:	6803      	ldr	r3, [r0, #0]
 800568e:	6a1b      	ldr	r3, [r3, #32]
 8005690:	4798      	blx	r3
 8005692:	280f      	cmp	r0, #15
 8005694:	d803      	bhi.n	800569e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005696:	4b3f      	ldr	r3, [pc, #252]	; (8005794 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005698:	4a3c      	ldr	r2, [pc, #240]	; (800578c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800569a:	21a4      	movs	r1, #164	; 0xa4
 800569c:	e7f2      	b.n	8005684 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800569e:	68e0      	ldr	r0, [r4, #12]
 80056a0:	6803      	ldr	r3, [r0, #0]
 80056a2:	6a1b      	ldr	r3, [r3, #32]
 80056a4:	4798      	blx	r3
 80056a6:	2837      	cmp	r0, #55	; 0x37
 80056a8:	d803      	bhi.n	80056b2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80056aa:	4b3b      	ldr	r3, [pc, #236]	; (8005798 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80056ac:	4a37      	ldr	r2, [pc, #220]	; (800578c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80056ae:	21a5      	movs	r1, #165	; 0xa5
 80056b0:	e7e8      	b.n	8005684 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80056b2:	f010 fb75 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80056b6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800579c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80056ba:	3004      	adds	r0, #4
 80056bc:	f010 fbd6 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80056c0:	f8d9 0000 	ldr.w	r0, [r9]
 80056c4:	b110      	cbz	r0, 80056cc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80056c6:	6803      	ldr	r3, [r0, #0]
 80056c8:	68db      	ldr	r3, [r3, #12]
 80056ca:	4798      	blx	r3
    if (*currentTrans)
 80056cc:	f8d9 0000 	ldr.w	r0, [r9]
 80056d0:	b110      	cbz	r0, 80056d8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80056d2:	6803      	ldr	r3, [r0, #0]
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	4798      	blx	r3
    if (*currentScreen)
 80056d8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80057a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80056dc:	f8d8 0000 	ldr.w	r0, [r8]
 80056e0:	b110      	cbz	r0, 80056e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80056e2:	6803      	ldr	r3, [r0, #0]
 80056e4:	695b      	ldr	r3, [r3, #20]
 80056e6:	4798      	blx	r3
    if (*currentPresenter)
 80056e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056ec:	b110      	cbz	r0, 80056f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80056ee:	6803      	ldr	r3, [r0, #0]
 80056f0:	685b      	ldr	r3, [r3, #4]
 80056f2:	4798      	blx	r3
    if (*currentScreen)
 80056f4:	f8d8 0000 	ldr.w	r0, [r8]
 80056f8:	b110      	cbz	r0, 8005700 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80056fa:	6803      	ldr	r3, [r0, #0]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4798      	blx	r3
    if (*currentPresenter)
 8005700:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005704:	b110      	cbz	r0, 800570c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005706:	6803      	ldr	r3, [r0, #0]
 8005708:	689b      	ldr	r3, [r3, #8]
 800570a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800570c:	68e0      	ldr	r0, [r4, #12]
 800570e:	2100      	movs	r1, #0
 8005710:	f7ff fcf6 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005714:	2114      	movs	r1, #20
 8005716:	4605      	mov	r5, r0
 8005718:	f7ff fcf6 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800571c:	68a0      	ldr	r0, [r4, #8]
 800571e:	6803      	ldr	r3, [r0, #0]
 8005720:	2100      	movs	r1, #0
 8005722:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005724:	4798      	blx	r3
 8005726:	4606      	mov	r6, r0
 8005728:	f004 f89c 	bl	8009864 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800572c:	6860      	ldr	r0, [r4, #4]
 800572e:	6803      	ldr	r3, [r0, #0]
 8005730:	2100      	movs	r1, #0
 8005732:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005734:	4798      	blx	r3
 8005736:	4631      	mov	r1, r6
 8005738:	4604      	mov	r4, r0
 800573a:	f004 f86d 	bl	8009818 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800573e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005742:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005746:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800574a:	b1dc      	cbz	r4, 8005784 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800574c:	1d23      	adds	r3, r4, #4
 800574e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005752:	6833      	ldr	r3, [r6, #0]
 8005754:	f8c4 a008 	str.w	sl, [r4, #8]
 8005758:	4630      	mov	r0, r6
 800575a:	68db      	ldr	r3, [r3, #12]
 800575c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800575e:	4798      	blx	r3
    newPresenter->activate();
 8005760:	6823      	ldr	r3, [r4, #0]
 8005762:	4620      	mov	r0, r4
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005768:	4629      	mov	r1, r5
 800576a:	4630      	mov	r0, r6
 800576c:	f012 f944 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005770:	682b      	ldr	r3, [r5, #0]
 8005772:	4628      	mov	r0, r5
 8005774:	691b      	ldr	r3, [r3, #16]
 8005776:	4798      	blx	r3
    newTransition->invalidate();
 8005778:	682b      	ldr	r3, [r5, #0]
 800577a:	4628      	mov	r0, r5
 800577c:	695b      	ldr	r3, [r3, #20]
}
 800577e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005782:	4718      	bx	r3
    model->bind(newPresenter);
 8005784:	4623      	mov	r3, r4
 8005786:	e7e2      	b.n	800574e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005788:	0802ca3c 	.word	0x0802ca3c
 800578c:	0802d77f 	.word	0x0802d77f
 8005790:	0802cbd8 	.word	0x0802cbd8
 8005794:	0802cc1f 	.word	0x0802cc1f
 8005798:	0802ccc2 	.word	0x0802ccc2
 800579c:	20012dec 	.word	0x20012dec
 80057a0:	20012de8 	.word	0x20012de8

080057a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80057a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80057a8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80057ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80057ae:	68a0      	ldr	r0, [r4, #8]
 80057b0:	6803      	ldr	r3, [r0, #0]
 80057b2:	6a1b      	ldr	r3, [r3, #32]
 80057b4:	4798      	blx	r3
 80057b6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80057ba:	4298      	cmp	r0, r3
 80057bc:	d805      	bhi.n	80057ca <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80057be:	4b42      	ldr	r3, [pc, #264]	; (80058c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80057c0:	4a42      	ldr	r2, [pc, #264]	; (80058cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80057c2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057c4:	4842      	ldr	r0, [pc, #264]	; (80058d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80057c6:	f025 fa7d 	bl	802acc4 <__assert_func>
 80057ca:	6860      	ldr	r0, [r4, #4]
 80057cc:	6803      	ldr	r3, [r0, #0]
 80057ce:	6a1b      	ldr	r3, [r3, #32]
 80057d0:	4798      	blx	r3
 80057d2:	280f      	cmp	r0, #15
 80057d4:	d803      	bhi.n	80057de <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80057d6:	4b3f      	ldr	r3, [pc, #252]	; (80058d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80057d8:	4a3c      	ldr	r2, [pc, #240]	; (80058cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80057da:	21a4      	movs	r1, #164	; 0xa4
 80057dc:	e7f2      	b.n	80057c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057de:	68e0      	ldr	r0, [r4, #12]
 80057e0:	6803      	ldr	r3, [r0, #0]
 80057e2:	6a1b      	ldr	r3, [r3, #32]
 80057e4:	4798      	blx	r3
 80057e6:	2837      	cmp	r0, #55	; 0x37
 80057e8:	d803      	bhi.n	80057f2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80057ea:	4b3b      	ldr	r3, [pc, #236]	; (80058d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80057ec:	4a37      	ldr	r2, [pc, #220]	; (80058cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80057ee:	21a5      	movs	r1, #165	; 0xa5
 80057f0:	e7e8      	b.n	80057c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80057f2:	f010 fad5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057f6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80057fa:	3004      	adds	r0, #4
 80057fc:	f010 fb36 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005800:	f8d9 0000 	ldr.w	r0, [r9]
 8005804:	b110      	cbz	r0, 800580c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005806:	6803      	ldr	r3, [r0, #0]
 8005808:	68db      	ldr	r3, [r3, #12]
 800580a:	4798      	blx	r3
    if (*currentTrans)
 800580c:	f8d9 0000 	ldr.w	r0, [r9]
 8005810:	b110      	cbz	r0, 8005818 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005812:	6803      	ldr	r3, [r0, #0]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	4798      	blx	r3
    if (*currentScreen)
 8005818:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80058e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800581c:	f8d8 0000 	ldr.w	r0, [r8]
 8005820:	b110      	cbz	r0, 8005828 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005822:	6803      	ldr	r3, [r0, #0]
 8005824:	695b      	ldr	r3, [r3, #20]
 8005826:	4798      	blx	r3
    if (*currentPresenter)
 8005828:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800582c:	b110      	cbz	r0, 8005834 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800582e:	6803      	ldr	r3, [r0, #0]
 8005830:	685b      	ldr	r3, [r3, #4]
 8005832:	4798      	blx	r3
    if (*currentScreen)
 8005834:	f8d8 0000 	ldr.w	r0, [r8]
 8005838:	b110      	cbz	r0, 8005840 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800583a:	6803      	ldr	r3, [r0, #0]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	4798      	blx	r3
    if (*currentPresenter)
 8005840:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005844:	b110      	cbz	r0, 800584c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005846:	6803      	ldr	r3, [r0, #0]
 8005848:	689b      	ldr	r3, [r3, #8]
 800584a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800584c:	68e0      	ldr	r0, [r4, #12]
 800584e:	2100      	movs	r1, #0
 8005850:	f7ff fc56 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005854:	2114      	movs	r1, #20
 8005856:	4605      	mov	r5, r0
 8005858:	f7ff fc56 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800585c:	68a0      	ldr	r0, [r4, #8]
 800585e:	6803      	ldr	r3, [r0, #0]
 8005860:	2100      	movs	r1, #0
 8005862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005864:	4798      	blx	r3
 8005866:	4606      	mov	r6, r0
 8005868:	f003 ffba 	bl	80097e0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800586c:	6860      	ldr	r0, [r4, #4]
 800586e:	6803      	ldr	r3, [r0, #0]
 8005870:	2100      	movs	r1, #0
 8005872:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005874:	4798      	blx	r3
 8005876:	4631      	mov	r1, r6
 8005878:	4604      	mov	r4, r0
 800587a:	f003 ff8b 	bl	8009794 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800587e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005882:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005886:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800588a:	b1dc      	cbz	r4, 80058c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 800588c:	1d23      	adds	r3, r4, #4
 800588e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005892:	6833      	ldr	r3, [r6, #0]
 8005894:	f8c4 a008 	str.w	sl, [r4, #8]
 8005898:	4630      	mov	r0, r6
 800589a:	68db      	ldr	r3, [r3, #12]
 800589c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800589e:	4798      	blx	r3
    newPresenter->activate();
 80058a0:	6823      	ldr	r3, [r4, #0]
 80058a2:	4620      	mov	r0, r4
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80058a8:	4629      	mov	r1, r5
 80058aa:	4630      	mov	r0, r6
 80058ac:	f012 f8a4 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80058b0:	682b      	ldr	r3, [r5, #0]
 80058b2:	4628      	mov	r0, r5
 80058b4:	691b      	ldr	r3, [r3, #16]
 80058b6:	4798      	blx	r3
    newTransition->invalidate();
 80058b8:	682b      	ldr	r3, [r5, #0]
 80058ba:	4628      	mov	r0, r5
 80058bc:	695b      	ldr	r3, [r3, #20]
}
 80058be:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058c2:	4718      	bx	r3
    model->bind(newPresenter);
 80058c4:	4623      	mov	r3, r4
 80058c6:	e7e2      	b.n	800588e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80058c8:	0802ca3c 	.word	0x0802ca3c
 80058cc:	0802d8c3 	.word	0x0802d8c3
 80058d0:	0802cbd8 	.word	0x0802cbd8
 80058d4:	0802cc1f 	.word	0x0802cc1f
 80058d8:	0802ccc2 	.word	0x0802ccc2
 80058dc:	20012dec 	.word	0x20012dec
 80058e0:	20012de8 	.word	0x20012de8

080058e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80058e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058e8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058ee:	68a0      	ldr	r0, [r4, #8]
 80058f0:	6803      	ldr	r3, [r0, #0]
 80058f2:	6a1b      	ldr	r3, [r3, #32]
 80058f4:	4798      	blx	r3
 80058f6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80058fa:	d205      	bcs.n	8005908 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80058fc:	4b42      	ldr	r3, [pc, #264]	; (8005a08 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80058fe:	4a43      	ldr	r2, [pc, #268]	; (8005a0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005900:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005902:	4843      	ldr	r0, [pc, #268]	; (8005a10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005904:	f025 f9de 	bl	802acc4 <__assert_func>
 8005908:	6860      	ldr	r0, [r4, #4]
 800590a:	6803      	ldr	r3, [r0, #0]
 800590c:	6a1b      	ldr	r3, [r3, #32]
 800590e:	4798      	blx	r3
 8005910:	280f      	cmp	r0, #15
 8005912:	d803      	bhi.n	800591c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005914:	4b3f      	ldr	r3, [pc, #252]	; (8005a14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005916:	4a3d      	ldr	r2, [pc, #244]	; (8005a0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005918:	21a4      	movs	r1, #164	; 0xa4
 800591a:	e7f2      	b.n	8005902 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800591c:	68e0      	ldr	r0, [r4, #12]
 800591e:	6803      	ldr	r3, [r0, #0]
 8005920:	6a1b      	ldr	r3, [r3, #32]
 8005922:	4798      	blx	r3
 8005924:	2837      	cmp	r0, #55	; 0x37
 8005926:	d803      	bhi.n	8005930 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005928:	4b3b      	ldr	r3, [pc, #236]	; (8005a18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800592a:	4a38      	ldr	r2, [pc, #224]	; (8005a0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800592c:	21a5      	movs	r1, #165	; 0xa5
 800592e:	e7e8      	b.n	8005902 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005930:	f010 fa36 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005934:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005a1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005938:	3004      	adds	r0, #4
 800593a:	f010 fa97 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800593e:	f8d9 0000 	ldr.w	r0, [r9]
 8005942:	b110      	cbz	r0, 800594a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005944:	6803      	ldr	r3, [r0, #0]
 8005946:	68db      	ldr	r3, [r3, #12]
 8005948:	4798      	blx	r3
    if (*currentTrans)
 800594a:	f8d9 0000 	ldr.w	r0, [r9]
 800594e:	b110      	cbz	r0, 8005956 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005950:	6803      	ldr	r3, [r0, #0]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	4798      	blx	r3
    if (*currentScreen)
 8005956:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005a20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800595a:	f8d8 0000 	ldr.w	r0, [r8]
 800595e:	b110      	cbz	r0, 8005966 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005960:	6803      	ldr	r3, [r0, #0]
 8005962:	695b      	ldr	r3, [r3, #20]
 8005964:	4798      	blx	r3
    if (*currentPresenter)
 8005966:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800596a:	b110      	cbz	r0, 8005972 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800596c:	6803      	ldr	r3, [r0, #0]
 800596e:	685b      	ldr	r3, [r3, #4]
 8005970:	4798      	blx	r3
    if (*currentScreen)
 8005972:	f8d8 0000 	ldr.w	r0, [r8]
 8005976:	b110      	cbz	r0, 800597e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005978:	6803      	ldr	r3, [r0, #0]
 800597a:	681b      	ldr	r3, [r3, #0]
 800597c:	4798      	blx	r3
    if (*currentPresenter)
 800597e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005982:	b110      	cbz	r0, 800598a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005984:	6803      	ldr	r3, [r0, #0]
 8005986:	689b      	ldr	r3, [r3, #8]
 8005988:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800598a:	68e0      	ldr	r0, [r4, #12]
 800598c:	2100      	movs	r1, #0
 800598e:	f7ff fbb7 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005992:	2114      	movs	r1, #20
 8005994:	4605      	mov	r5, r0
 8005996:	f7ff fbb7 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800599a:	68a0      	ldr	r0, [r4, #8]
 800599c:	6803      	ldr	r3, [r0, #0]
 800599e:	2100      	movs	r1, #0
 80059a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059a2:	4798      	blx	r3
 80059a4:	4606      	mov	r6, r0
 80059a6:	f003 fec1 	bl	800972c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80059aa:	6860      	ldr	r0, [r4, #4]
 80059ac:	6803      	ldr	r3, [r0, #0]
 80059ae:	2100      	movs	r1, #0
 80059b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059b2:	4798      	blx	r3
 80059b4:	4631      	mov	r1, r6
 80059b6:	4604      	mov	r4, r0
 80059b8:	f003 fe92 	bl	80096e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80059bc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059c0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059c4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059c8:	b1dc      	cbz	r4, 8005a02 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80059ca:	1d23      	adds	r3, r4, #4
 80059cc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059d0:	6833      	ldr	r3, [r6, #0]
 80059d2:	f8c4 a008 	str.w	sl, [r4, #8]
 80059d6:	4630      	mov	r0, r6
 80059d8:	68db      	ldr	r3, [r3, #12]
 80059da:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059dc:	4798      	blx	r3
    newPresenter->activate();
 80059de:	6823      	ldr	r3, [r4, #0]
 80059e0:	4620      	mov	r0, r4
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059e6:	4629      	mov	r1, r5
 80059e8:	4630      	mov	r0, r6
 80059ea:	f012 f805 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059ee:	682b      	ldr	r3, [r5, #0]
 80059f0:	4628      	mov	r0, r5
 80059f2:	691b      	ldr	r3, [r3, #16]
 80059f4:	4798      	blx	r3
    newTransition->invalidate();
 80059f6:	682b      	ldr	r3, [r5, #0]
 80059f8:	4628      	mov	r0, r5
 80059fa:	695b      	ldr	r3, [r3, #20]
}
 80059fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a00:	4718      	bx	r3
    model->bind(newPresenter);
 8005a02:	4623      	mov	r3, r4
 8005a04:	e7e2      	b.n	80059cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8005a06:	bf00      	nop
 8005a08:	0802ca3c 	.word	0x0802ca3c
 8005a0c:	0802da03 	.word	0x0802da03
 8005a10:	0802cbd8 	.word	0x0802cbd8
 8005a14:	0802cc1f 	.word	0x0802cc1f
 8005a18:	0802ccc2 	.word	0x0802ccc2
 8005a1c:	20012dec 	.word	0x20012dec
 8005a20:	20012de8 	.word	0x20012de8

08005a24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005a24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a28:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a2c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a2e:	68a0      	ldr	r0, [r4, #8]
 8005a30:	6803      	ldr	r3, [r0, #0]
 8005a32:	6a1b      	ldr	r3, [r3, #32]
 8005a34:	4798      	blx	r3
 8005a36:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8005a3a:	4298      	cmp	r0, r3
 8005a3c:	d805      	bhi.n	8005a4a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8005a3e:	4b42      	ldr	r3, [pc, #264]	; (8005b48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005a40:	4a42      	ldr	r2, [pc, #264]	; (8005b4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005a42:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a44:	4842      	ldr	r0, [pc, #264]	; (8005b50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005a46:	f025 f93d 	bl	802acc4 <__assert_func>
 8005a4a:	6860      	ldr	r0, [r4, #4]
 8005a4c:	6803      	ldr	r3, [r0, #0]
 8005a4e:	6a1b      	ldr	r3, [r3, #32]
 8005a50:	4798      	blx	r3
 8005a52:	280f      	cmp	r0, #15
 8005a54:	d803      	bhi.n	8005a5e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8005a56:	4b3f      	ldr	r3, [pc, #252]	; (8005b54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005a58:	4a3c      	ldr	r2, [pc, #240]	; (8005b4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005a5a:	21a4      	movs	r1, #164	; 0xa4
 8005a5c:	e7f2      	b.n	8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a5e:	68e0      	ldr	r0, [r4, #12]
 8005a60:	6803      	ldr	r3, [r0, #0]
 8005a62:	6a1b      	ldr	r3, [r3, #32]
 8005a64:	4798      	blx	r3
 8005a66:	2837      	cmp	r0, #55	; 0x37
 8005a68:	d803      	bhi.n	8005a72 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005a6a:	4b3b      	ldr	r3, [pc, #236]	; (8005b58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005a6c:	4a37      	ldr	r2, [pc, #220]	; (8005b4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005a6e:	21a5      	movs	r1, #165	; 0xa5
 8005a70:	e7e8      	b.n	8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005a72:	f010 f995 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a76:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005a7a:	3004      	adds	r0, #4
 8005a7c:	f010 f9f6 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a80:	f8d9 0000 	ldr.w	r0, [r9]
 8005a84:	b110      	cbz	r0, 8005a8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005a86:	6803      	ldr	r3, [r0, #0]
 8005a88:	68db      	ldr	r3, [r3, #12]
 8005a8a:	4798      	blx	r3
    if (*currentTrans)
 8005a8c:	f8d9 0000 	ldr.w	r0, [r9]
 8005a90:	b110      	cbz	r0, 8005a98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005a92:	6803      	ldr	r3, [r0, #0]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	4798      	blx	r3
    if (*currentScreen)
 8005a98:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005a9c:	f8d8 0000 	ldr.w	r0, [r8]
 8005aa0:	b110      	cbz	r0, 8005aa8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005aa2:	6803      	ldr	r3, [r0, #0]
 8005aa4:	695b      	ldr	r3, [r3, #20]
 8005aa6:	4798      	blx	r3
    if (*currentPresenter)
 8005aa8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005aac:	b110      	cbz	r0, 8005ab4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005aae:	6803      	ldr	r3, [r0, #0]
 8005ab0:	685b      	ldr	r3, [r3, #4]
 8005ab2:	4798      	blx	r3
    if (*currentScreen)
 8005ab4:	f8d8 0000 	ldr.w	r0, [r8]
 8005ab8:	b110      	cbz	r0, 8005ac0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005aba:	6803      	ldr	r3, [r0, #0]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	4798      	blx	r3
    if (*currentPresenter)
 8005ac0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ac4:	b110      	cbz	r0, 8005acc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005ac6:	6803      	ldr	r3, [r0, #0]
 8005ac8:	689b      	ldr	r3, [r3, #8]
 8005aca:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005acc:	68e0      	ldr	r0, [r4, #12]
 8005ace:	2100      	movs	r1, #0
 8005ad0:	f7ff fb16 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ad4:	2114      	movs	r1, #20
 8005ad6:	4605      	mov	r5, r0
 8005ad8:	f7ff fb16 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005adc:	68a0      	ldr	r0, [r4, #8]
 8005ade:	6803      	ldr	r3, [r0, #0]
 8005ae0:	2100      	movs	r1, #0
 8005ae2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ae4:	4798      	blx	r3
 8005ae6:	4606      	mov	r6, r0
 8005ae8:	f003 fff6 	bl	8009ad8 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005aec:	6860      	ldr	r0, [r4, #4]
 8005aee:	6803      	ldr	r3, [r0, #0]
 8005af0:	2100      	movs	r1, #0
 8005af2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005af4:	4798      	blx	r3
 8005af6:	4631      	mov	r1, r6
 8005af8:	4604      	mov	r4, r0
 8005afa:	f003 ffc7 	bl	8009a8c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8005afe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005b02:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005b06:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b0a:	b1dc      	cbz	r4, 8005b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005b0c:	1d23      	adds	r3, r4, #4
 8005b0e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b12:	6833      	ldr	r3, [r6, #0]
 8005b14:	f8c4 a008 	str.w	sl, [r4, #8]
 8005b18:	4630      	mov	r0, r6
 8005b1a:	68db      	ldr	r3, [r3, #12]
 8005b1c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005b1e:	4798      	blx	r3
    newPresenter->activate();
 8005b20:	6823      	ldr	r3, [r4, #0]
 8005b22:	4620      	mov	r0, r4
 8005b24:	681b      	ldr	r3, [r3, #0]
 8005b26:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b28:	4629      	mov	r1, r5
 8005b2a:	4630      	mov	r0, r6
 8005b2c:	f011 ff64 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b30:	682b      	ldr	r3, [r5, #0]
 8005b32:	4628      	mov	r0, r5
 8005b34:	691b      	ldr	r3, [r3, #16]
 8005b36:	4798      	blx	r3
    newTransition->invalidate();
 8005b38:	682b      	ldr	r3, [r5, #0]
 8005b3a:	4628      	mov	r0, r5
 8005b3c:	695b      	ldr	r3, [r3, #20]
}
 8005b3e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b42:	4718      	bx	r3
    model->bind(newPresenter);
 8005b44:	4623      	mov	r3, r4
 8005b46:	e7e2      	b.n	8005b0e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005b48:	0802ca3c 	.word	0x0802ca3c
 8005b4c:	0802db33 	.word	0x0802db33
 8005b50:	0802cbd8 	.word	0x0802cbd8
 8005b54:	0802cc1f 	.word	0x0802cc1f
 8005b58:	0802ccc2 	.word	0x0802ccc2
 8005b5c:	20012dec 	.word	0x20012dec
 8005b60:	20012de8 	.word	0x20012de8

08005b64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b68:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b6c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b6e:	68a0      	ldr	r0, [r4, #8]
 8005b70:	6803      	ldr	r3, [r0, #0]
 8005b72:	6a1b      	ldr	r3, [r3, #32]
 8005b74:	4798      	blx	r3
 8005b76:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005b7a:	4298      	cmp	r0, r3
 8005b7c:	d805      	bhi.n	8005b8a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8005b7e:	4b42      	ldr	r3, [pc, #264]	; (8005c88 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005b80:	4a42      	ldr	r2, [pc, #264]	; (8005c8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005b82:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b84:	4842      	ldr	r0, [pc, #264]	; (8005c90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005b86:	f025 f89d 	bl	802acc4 <__assert_func>
 8005b8a:	6860      	ldr	r0, [r4, #4]
 8005b8c:	6803      	ldr	r3, [r0, #0]
 8005b8e:	6a1b      	ldr	r3, [r3, #32]
 8005b90:	4798      	blx	r3
 8005b92:	280f      	cmp	r0, #15
 8005b94:	d803      	bhi.n	8005b9e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005b96:	4b3f      	ldr	r3, [pc, #252]	; (8005c94 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005b98:	4a3c      	ldr	r2, [pc, #240]	; (8005c8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005b9a:	21a4      	movs	r1, #164	; 0xa4
 8005b9c:	e7f2      	b.n	8005b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005b9e:	68e0      	ldr	r0, [r4, #12]
 8005ba0:	6803      	ldr	r3, [r0, #0]
 8005ba2:	6a1b      	ldr	r3, [r3, #32]
 8005ba4:	4798      	blx	r3
 8005ba6:	2837      	cmp	r0, #55	; 0x37
 8005ba8:	d803      	bhi.n	8005bb2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005baa:	4b3b      	ldr	r3, [pc, #236]	; (8005c98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005bac:	4a37      	ldr	r2, [pc, #220]	; (8005c8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005bae:	21a5      	movs	r1, #165	; 0xa5
 8005bb0:	e7e8      	b.n	8005b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005bb2:	f010 f8f5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bb6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005c9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005bba:	3004      	adds	r0, #4
 8005bbc:	f010 f956 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bc0:	f8d9 0000 	ldr.w	r0, [r9]
 8005bc4:	b110      	cbz	r0, 8005bcc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005bc6:	6803      	ldr	r3, [r0, #0]
 8005bc8:	68db      	ldr	r3, [r3, #12]
 8005bca:	4798      	blx	r3
    if (*currentTrans)
 8005bcc:	f8d9 0000 	ldr.w	r0, [r9]
 8005bd0:	b110      	cbz	r0, 8005bd8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005bd2:	6803      	ldr	r3, [r0, #0]
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	4798      	blx	r3
    if (*currentScreen)
 8005bd8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005ca0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005bdc:	f8d8 0000 	ldr.w	r0, [r8]
 8005be0:	b110      	cbz	r0, 8005be8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005be2:	6803      	ldr	r3, [r0, #0]
 8005be4:	695b      	ldr	r3, [r3, #20]
 8005be6:	4798      	blx	r3
    if (*currentPresenter)
 8005be8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bec:	b110      	cbz	r0, 8005bf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005bee:	6803      	ldr	r3, [r0, #0]
 8005bf0:	685b      	ldr	r3, [r3, #4]
 8005bf2:	4798      	blx	r3
    if (*currentScreen)
 8005bf4:	f8d8 0000 	ldr.w	r0, [r8]
 8005bf8:	b110      	cbz	r0, 8005c00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005bfa:	6803      	ldr	r3, [r0, #0]
 8005bfc:	681b      	ldr	r3, [r3, #0]
 8005bfe:	4798      	blx	r3
    if (*currentPresenter)
 8005c00:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c04:	b110      	cbz	r0, 8005c0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005c06:	6803      	ldr	r3, [r0, #0]
 8005c08:	689b      	ldr	r3, [r3, #8]
 8005c0a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c0c:	68e0      	ldr	r0, [r4, #12]
 8005c0e:	2100      	movs	r1, #0
 8005c10:	f7ff fa76 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c14:	2114      	movs	r1, #20
 8005c16:	4605      	mov	r5, r0
 8005c18:	f7ff fa76 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c1c:	68a0      	ldr	r0, [r4, #8]
 8005c1e:	6803      	ldr	r3, [r0, #0]
 8005c20:	2100      	movs	r1, #0
 8005c22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c24:	4798      	blx	r3
 8005c26:	4606      	mov	r6, r0
 8005c28:	f003 febe 	bl	80099a8 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c2c:	6860      	ldr	r0, [r4, #4]
 8005c2e:	6803      	ldr	r3, [r0, #0]
 8005c30:	2100      	movs	r1, #0
 8005c32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c34:	4798      	blx	r3
 8005c36:	4631      	mov	r1, r6
 8005c38:	4604      	mov	r4, r0
 8005c3a:	f003 fe8f 	bl	800995c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005c3e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c42:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c46:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c4a:	b1dc      	cbz	r4, 8005c84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005c4c:	1d23      	adds	r3, r4, #4
 8005c4e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c52:	6833      	ldr	r3, [r6, #0]
 8005c54:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c58:	4630      	mov	r0, r6
 8005c5a:	68db      	ldr	r3, [r3, #12]
 8005c5c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c5e:	4798      	blx	r3
    newPresenter->activate();
 8005c60:	6823      	ldr	r3, [r4, #0]
 8005c62:	4620      	mov	r0, r4
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c68:	4629      	mov	r1, r5
 8005c6a:	4630      	mov	r0, r6
 8005c6c:	f011 fec4 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c70:	682b      	ldr	r3, [r5, #0]
 8005c72:	4628      	mov	r0, r5
 8005c74:	691b      	ldr	r3, [r3, #16]
 8005c76:	4798      	blx	r3
    newTransition->invalidate();
 8005c78:	682b      	ldr	r3, [r5, #0]
 8005c7a:	4628      	mov	r0, r5
 8005c7c:	695b      	ldr	r3, [r3, #20]
}
 8005c7e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c82:	4718      	bx	r3
    model->bind(newPresenter);
 8005c84:	4623      	mov	r3, r4
 8005c86:	e7e2      	b.n	8005c4e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005c88:	0802ca3c 	.word	0x0802ca3c
 8005c8c:	0802dc75 	.word	0x0802dc75
 8005c90:	0802cbd8 	.word	0x0802cbd8
 8005c94:	0802cc1f 	.word	0x0802cc1f
 8005c98:	0802ccc2 	.word	0x0802ccc2
 8005c9c:	20012dec 	.word	0x20012dec
 8005ca0:	20012de8 	.word	0x20012de8

08005ca4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005ca4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ca8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cae:	68a0      	ldr	r0, [r4, #8]
 8005cb0:	6803      	ldr	r3, [r0, #0]
 8005cb2:	6a1b      	ldr	r3, [r3, #32]
 8005cb4:	4798      	blx	r3
 8005cb6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005cba:	d205      	bcs.n	8005cc8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005cbc:	4b42      	ldr	r3, [pc, #264]	; (8005dc8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005cbe:	4a43      	ldr	r2, [pc, #268]	; (8005dcc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005cc0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005cc2:	4843      	ldr	r0, [pc, #268]	; (8005dd0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005cc4:	f024 fffe 	bl	802acc4 <__assert_func>
 8005cc8:	6860      	ldr	r0, [r4, #4]
 8005cca:	6803      	ldr	r3, [r0, #0]
 8005ccc:	6a1b      	ldr	r3, [r3, #32]
 8005cce:	4798      	blx	r3
 8005cd0:	280f      	cmp	r0, #15
 8005cd2:	d803      	bhi.n	8005cdc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005cd4:	4b3f      	ldr	r3, [pc, #252]	; (8005dd4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005cd6:	4a3d      	ldr	r2, [pc, #244]	; (8005dcc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005cd8:	21a4      	movs	r1, #164	; 0xa4
 8005cda:	e7f2      	b.n	8005cc2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005cdc:	68e0      	ldr	r0, [r4, #12]
 8005cde:	6803      	ldr	r3, [r0, #0]
 8005ce0:	6a1b      	ldr	r3, [r3, #32]
 8005ce2:	4798      	blx	r3
 8005ce4:	2837      	cmp	r0, #55	; 0x37
 8005ce6:	d803      	bhi.n	8005cf0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005ce8:	4b3b      	ldr	r3, [pc, #236]	; (8005dd8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005cea:	4a38      	ldr	r2, [pc, #224]	; (8005dcc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005cec:	21a5      	movs	r1, #165	; 0xa5
 8005cee:	e7e8      	b.n	8005cc2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005cf0:	f010 f856 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005cf4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005ddc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005cf8:	3004      	adds	r0, #4
 8005cfa:	f010 f8b7 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005cfe:	f8d9 0000 	ldr.w	r0, [r9]
 8005d02:	b110      	cbz	r0, 8005d0a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005d04:	6803      	ldr	r3, [r0, #0]
 8005d06:	68db      	ldr	r3, [r3, #12]
 8005d08:	4798      	blx	r3
    if (*currentTrans)
 8005d0a:	f8d9 0000 	ldr.w	r0, [r9]
 8005d0e:	b110      	cbz	r0, 8005d16 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005d10:	6803      	ldr	r3, [r0, #0]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	4798      	blx	r3
    if (*currentScreen)
 8005d16:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005de0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005d1a:	f8d8 0000 	ldr.w	r0, [r8]
 8005d1e:	b110      	cbz	r0, 8005d26 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005d20:	6803      	ldr	r3, [r0, #0]
 8005d22:	695b      	ldr	r3, [r3, #20]
 8005d24:	4798      	blx	r3
    if (*currentPresenter)
 8005d26:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d2a:	b110      	cbz	r0, 8005d32 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005d2c:	6803      	ldr	r3, [r0, #0]
 8005d2e:	685b      	ldr	r3, [r3, #4]
 8005d30:	4798      	blx	r3
    if (*currentScreen)
 8005d32:	f8d8 0000 	ldr.w	r0, [r8]
 8005d36:	b110      	cbz	r0, 8005d3e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005d38:	6803      	ldr	r3, [r0, #0]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	4798      	blx	r3
    if (*currentPresenter)
 8005d3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d42:	b110      	cbz	r0, 8005d4a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005d44:	6803      	ldr	r3, [r0, #0]
 8005d46:	689b      	ldr	r3, [r3, #8]
 8005d48:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d4a:	68e0      	ldr	r0, [r4, #12]
 8005d4c:	2100      	movs	r1, #0
 8005d4e:	f7ff f9d7 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d52:	2114      	movs	r1, #20
 8005d54:	4605      	mov	r5, r0
 8005d56:	f7ff f9d7 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d5a:	68a0      	ldr	r0, [r4, #8]
 8005d5c:	6803      	ldr	r3, [r0, #0]
 8005d5e:	2100      	movs	r1, #0
 8005d60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d62:	4798      	blx	r3
 8005d64:	4606      	mov	r6, r0
 8005d66:	f003 fdc5 	bl	80098f4 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005d6a:	6860      	ldr	r0, [r4, #4]
 8005d6c:	6803      	ldr	r3, [r0, #0]
 8005d6e:	2100      	movs	r1, #0
 8005d70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d72:	4798      	blx	r3
 8005d74:	4631      	mov	r1, r6
 8005d76:	4604      	mov	r4, r0
 8005d78:	f003 fd96 	bl	80098a8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005d7c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005d80:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005d84:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005d88:	b1dc      	cbz	r4, 8005dc2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005d8a:	1d23      	adds	r3, r4, #4
 8005d8c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005d90:	6833      	ldr	r3, [r6, #0]
 8005d92:	f8c4 a008 	str.w	sl, [r4, #8]
 8005d96:	4630      	mov	r0, r6
 8005d98:	68db      	ldr	r3, [r3, #12]
 8005d9a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005d9c:	4798      	blx	r3
    newPresenter->activate();
 8005d9e:	6823      	ldr	r3, [r4, #0]
 8005da0:	4620      	mov	r0, r4
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005da6:	4629      	mov	r1, r5
 8005da8:	4630      	mov	r0, r6
 8005daa:	f011 fe25 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005dae:	682b      	ldr	r3, [r5, #0]
 8005db0:	4628      	mov	r0, r5
 8005db2:	691b      	ldr	r3, [r3, #16]
 8005db4:	4798      	blx	r3
    newTransition->invalidate();
 8005db6:	682b      	ldr	r3, [r5, #0]
 8005db8:	4628      	mov	r0, r5
 8005dba:	695b      	ldr	r3, [r3, #20]
}
 8005dbc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005dc0:	4718      	bx	r3
    model->bind(newPresenter);
 8005dc2:	4623      	mov	r3, r4
 8005dc4:	e7e2      	b.n	8005d8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005dc6:	bf00      	nop
 8005dc8:	0802ca3c 	.word	0x0802ca3c
 8005dcc:	0802ddb7 	.word	0x0802ddb7
 8005dd0:	0802cbd8 	.word	0x0802cbd8
 8005dd4:	0802cc1f 	.word	0x0802cc1f
 8005dd8:	0802ccc2 	.word	0x0802ccc2
 8005ddc:	20012dec 	.word	0x20012dec
 8005de0:	20012de8 	.word	0x20012de8

08005de4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005de4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005de8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005dec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005dee:	68a0      	ldr	r0, [r4, #8]
 8005df0:	6803      	ldr	r3, [r0, #0]
 8005df2:	6a1b      	ldr	r3, [r3, #32]
 8005df4:	4798      	blx	r3
 8005df6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005dfa:	d205      	bcs.n	8005e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005dfc:	4b42      	ldr	r3, [pc, #264]	; (8005f08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005dfe:	4a43      	ldr	r2, [pc, #268]	; (8005f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005e00:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e02:	4843      	ldr	r0, [pc, #268]	; (8005f10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005e04:	f024 ff5e 	bl	802acc4 <__assert_func>
 8005e08:	6860      	ldr	r0, [r4, #4]
 8005e0a:	6803      	ldr	r3, [r0, #0]
 8005e0c:	6a1b      	ldr	r3, [r3, #32]
 8005e0e:	4798      	blx	r3
 8005e10:	280f      	cmp	r0, #15
 8005e12:	d803      	bhi.n	8005e1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005e14:	4b3f      	ldr	r3, [pc, #252]	; (8005f14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005e16:	4a3d      	ldr	r2, [pc, #244]	; (8005f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005e18:	21a4      	movs	r1, #164	; 0xa4
 8005e1a:	e7f2      	b.n	8005e02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e1c:	68e0      	ldr	r0, [r4, #12]
 8005e1e:	6803      	ldr	r3, [r0, #0]
 8005e20:	6a1b      	ldr	r3, [r3, #32]
 8005e22:	4798      	blx	r3
 8005e24:	2837      	cmp	r0, #55	; 0x37
 8005e26:	d803      	bhi.n	8005e30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005e28:	4b3b      	ldr	r3, [pc, #236]	; (8005f18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005e2a:	4a38      	ldr	r2, [pc, #224]	; (8005f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005e2c:	21a5      	movs	r1, #165	; 0xa5
 8005e2e:	e7e8      	b.n	8005e02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005e30:	f00f ffb6 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e34:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005e38:	3004      	adds	r0, #4
 8005e3a:	f010 f817 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e3e:	f8d9 0000 	ldr.w	r0, [r9]
 8005e42:	b110      	cbz	r0, 8005e4a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005e44:	6803      	ldr	r3, [r0, #0]
 8005e46:	68db      	ldr	r3, [r3, #12]
 8005e48:	4798      	blx	r3
    if (*currentTrans)
 8005e4a:	f8d9 0000 	ldr.w	r0, [r9]
 8005e4e:	b110      	cbz	r0, 8005e56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005e50:	6803      	ldr	r3, [r0, #0]
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	4798      	blx	r3
    if (*currentScreen)
 8005e56:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005f20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005e5a:	f8d8 0000 	ldr.w	r0, [r8]
 8005e5e:	b110      	cbz	r0, 8005e66 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005e60:	6803      	ldr	r3, [r0, #0]
 8005e62:	695b      	ldr	r3, [r3, #20]
 8005e64:	4798      	blx	r3
    if (*currentPresenter)
 8005e66:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e6a:	b110      	cbz	r0, 8005e72 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005e6c:	6803      	ldr	r3, [r0, #0]
 8005e6e:	685b      	ldr	r3, [r3, #4]
 8005e70:	4798      	blx	r3
    if (*currentScreen)
 8005e72:	f8d8 0000 	ldr.w	r0, [r8]
 8005e76:	b110      	cbz	r0, 8005e7e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005e78:	6803      	ldr	r3, [r0, #0]
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	4798      	blx	r3
    if (*currentPresenter)
 8005e7e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e82:	b110      	cbz	r0, 8005e8a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005e84:	6803      	ldr	r3, [r0, #0]
 8005e86:	689b      	ldr	r3, [r3, #8]
 8005e88:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005e8a:	68e0      	ldr	r0, [r4, #12]
 8005e8c:	2100      	movs	r1, #0
 8005e8e:	f7ff f937 	bl	8005100 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005e92:	2114      	movs	r1, #20
 8005e94:	4605      	mov	r5, r0
 8005e96:	f7ff f937 	bl	8005108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005e9a:	68a0      	ldr	r0, [r4, #8]
 8005e9c:	6803      	ldr	r3, [r0, #0]
 8005e9e:	2100      	movs	r1, #0
 8005ea0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ea2:	4798      	blx	r3
 8005ea4:	4606      	mov	r6, r0
 8005ea6:	f003 fbe1 	bl	800966c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005eaa:	6860      	ldr	r0, [r4, #4]
 8005eac:	6803      	ldr	r3, [r0, #0]
 8005eae:	2100      	movs	r1, #0
 8005eb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005eb2:	4798      	blx	r3
 8005eb4:	4631      	mov	r1, r6
 8005eb6:	4604      	mov	r4, r0
 8005eb8:	f003 fbb2 	bl	8009620 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005ebc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ec0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ec4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ec8:	b1dc      	cbz	r4, 8005f02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005eca:	1d23      	adds	r3, r4, #4
 8005ecc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ed0:	6833      	ldr	r3, [r6, #0]
 8005ed2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ed6:	4630      	mov	r0, r6
 8005ed8:	68db      	ldr	r3, [r3, #12]
 8005eda:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005edc:	4798      	blx	r3
    newPresenter->activate();
 8005ede:	6823      	ldr	r3, [r4, #0]
 8005ee0:	4620      	mov	r0, r4
 8005ee2:	681b      	ldr	r3, [r3, #0]
 8005ee4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ee6:	4629      	mov	r1, r5
 8005ee8:	4630      	mov	r0, r6
 8005eea:	f011 fd85 	bl	80179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005eee:	682b      	ldr	r3, [r5, #0]
 8005ef0:	4628      	mov	r0, r5
 8005ef2:	691b      	ldr	r3, [r3, #16]
 8005ef4:	4798      	blx	r3
    newTransition->invalidate();
 8005ef6:	682b      	ldr	r3, [r5, #0]
 8005ef8:	4628      	mov	r0, r5
 8005efa:	695b      	ldr	r3, [r3, #20]
}
 8005efc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f00:	4718      	bx	r3
    model->bind(newPresenter);
 8005f02:	4623      	mov	r3, r4
 8005f04:	e7e2      	b.n	8005ecc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005f06:	bf00      	nop
 8005f08:	0802ca3c 	.word	0x0802ca3c
 8005f0c:	0802dee3 	.word	0x0802dee3
 8005f10:	0802cbd8 	.word	0x0802cbd8
 8005f14:	0802cc1f 	.word	0x0802cc1f
 8005f18:	0802ccc2 	.word	0x0802ccc2
 8005f1c:	20012dec 	.word	0x20012dec
 8005f20:	20012de8 	.word	0x20012de8

08005f24 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005f24:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005f26:	4770      	bx	lr

08005f28 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005f28:	4770      	bx	lr

08005f2a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005f2a:	4770      	bx	lr

08005f2c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005f2c:	b510      	push	{r4, lr}
}
 8005f2e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005f32:	4604      	mov	r4, r0
}
 8005f34:	f023 ffdf 	bl	8029ef6 <_ZdlPvj>
 8005f38:	4620      	mov	r0, r4
 8005f3a:	bd10      	pop	{r4, pc}

08005f3c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8005f40:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005f44:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005f46:	2600      	movs	r6, #0
 8005f48:	ed2d 8b02 	vpush	{d8}
 8005f4c:	8483      	strh	r3, [r0, #36]	; 0x24
 8005f4e:	4bb2      	ldr	r3, [pc, #712]	; (8006218 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8005f50:	6286      	str	r6, [r0, #40]	; 0x28
 8005f52:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005f56:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005f5a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8005f5e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8005f62:	f848 3b2c 	str.w	r3, [r8], #44
 8005f66:	b08b      	sub	sp, #44	; 0x2c
 8005f68:	4604      	mov	r4, r0
 8005f6a:	4640      	mov	r0, r8
 8005f6c:	f7fd f972 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8005f70:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005f74:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005f78:	4618      	mov	r0, r3
 8005f7a:	9303      	str	r3, [sp, #12]
 8005f7c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8005f80:	f7fd f968 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8005f84:	4658      	mov	r0, fp
 8005f86:	f7fd f965 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8005f8a:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8005f8e:	4da3      	ldr	r5, [pc, #652]	; (800621c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8005f90:	4650      	mov	r0, sl
 8005f92:	f7fd f95f 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005f96:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005f9a:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005f9e:	4648      	mov	r0, r9
 8005fa0:	f7fd f958 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8005fa4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005fa8:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005fac:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005fae:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8005fb2:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005fb6:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005fba:	f7fd f94b 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005fbe:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8005fc2:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8005fc6:	4638      	mov	r0, r7
 8005fc8:	f00c fea4 	bl	8012d14 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005fcc:	4a94      	ldr	r2, [pc, #592]	; (8006220 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005fce:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005fd0:	4640      	mov	r0, r8
 8005fd2:	226d      	movs	r2, #109	; 0x6d
 8005fd4:	21d9      	movs	r1, #217	; 0xd9
 8005fd6:	ad04      	add	r5, sp, #16
 8005fd8:	f7fd f909 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005fdc:	f04f 33ff 	mov.w	r3, #4294967295
 8005fe0:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8005fe2:	4641      	mov	r1, r8
 8005fe4:	4628      	mov	r0, r5
        linespace = space;
 8005fe6:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005fea:	f00c fb5b 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ff2:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005ff6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005ffa:	4b8a      	ldr	r3, [pc, #552]	; (8006224 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005ffc:	9308      	str	r3, [sp, #32]
 8005ffe:	223f      	movs	r2, #63	; 0x3f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8006000:	a908      	add	r1, sp, #32
 8006002:	4640      	mov	r0, r8
 8006004:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8006008:	f00c fde6 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 800600c:	4641      	mov	r1, r8
 800600e:	4620      	mov	r0, r4
 8006010:	f00a fc2e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8006014:	9b03      	ldr	r3, [sp, #12]
 8006016:	4631      	mov	r1, r6
 8006018:	4618      	mov	r0, r3
 800601a:	226d      	movs	r2, #109	; 0x6d
 800601c:	f7fd f8e7 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006020:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8006022:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8006026:	f04f 32ff 	mov.w	r2, #4294967295
 800602a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 800602e:	4619      	mov	r1, r3
 8006030:	4628      	mov	r0, r5
 8006032:	f00c fb37 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006036:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800603a:	4b7a      	ldr	r3, [pc, #488]	; (8006224 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800603c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 800603e:	9b03      	ldr	r3, [sp, #12]
 8006040:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8006044:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8006048:	2240      	movs	r2, #64	; 0x40
 800604a:	a908      	add	r1, sp, #32
 800604c:	4618      	mov	r0, r3
 800604e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8006052:	f00c fdc1 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8006056:	9b03      	ldr	r3, [sp, #12]
 8006058:	4620      	mov	r0, r4
 800605a:	4619      	mov	r1, r3
 800605c:	f00a fc08 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8006060:	4632      	mov	r2, r6
 8006062:	4658      	mov	r0, fp
 8006064:	2171      	movs	r1, #113	; 0x71
 8006066:	f7fd f8c2 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800606a:	f04f 32ff 	mov.w	r2, #4294967295
 800606e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8006072:	4659      	mov	r1, fp
 8006074:	4628      	mov	r0, r5
        linespace = space;
 8006076:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 800607a:	f00c fb13 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800607e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006082:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8006086:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800608a:	4b66      	ldr	r3, [pc, #408]	; (8006224 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800608c:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 800608e:	a908      	add	r1, sp, #32
 8006090:	2341      	movs	r3, #65	; 0x41
 8006092:	4658      	mov	r0, fp
 8006094:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006098:	f00c fd9e 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 800609c:	4659      	mov	r1, fp
 800609e:	4620      	mov	r0, r4
 80060a0:	f00a fbe6 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 80060a4:	4650      	mov	r0, sl
 80060a6:	227c      	movs	r2, #124	; 0x7c
 80060a8:	214c      	movs	r1, #76	; 0x4c
 80060aa:	f7fd f8a0 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80060ae:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 80060b2:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 80060b6:	f04f 32ff 	mov.w	r2, #4294967295
 80060ba:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 80060be:	4651      	mov	r1, sl
 80060c0:	4628      	mov	r0, r5
 80060c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80060c6:	4798      	blx	r3
 80060c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80060cc:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80060d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060d4:	4b53      	ldr	r3, [pc, #332]	; (8006224 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80060d6:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 80060d8:	a908      	add	r1, sp, #32
 80060da:	233e      	movs	r3, #62	; 0x3e
 80060dc:	4650      	mov	r0, sl
 80060de:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80060e2:	f00c fd79 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 80060e6:	4651      	mov	r1, sl
 80060e8:	4620      	mov	r0, r4
 80060ea:	f00a fbc1 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 80060ee:	4648      	mov	r0, r9
 80060f0:	228b      	movs	r2, #139	; 0x8b
 80060f2:	2156      	movs	r1, #86	; 0x56
 80060f4:	f7fd f87b 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80060f8:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80060fc:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8006100:	f04f 32ff 	mov.w	r2, #4294967295
 8006104:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8006108:	4649      	mov	r1, r9
 800610a:	4628      	mov	r0, r5
 800610c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006110:	4798      	blx	r3
 8006112:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006116:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 800611a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800611e:	4b41      	ldr	r3, [pc, #260]	; (8006224 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8006120:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8006122:	a908      	add	r1, sp, #32
 8006124:	233d      	movs	r3, #61	; 0x3d
 8006126:	4648      	mov	r0, r9
 8006128:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800612c:	f00c fd54 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8006130:	4649      	mov	r1, r9
 8006132:	4620      	mov	r0, r4
 8006134:	f00a fb9c 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8006138:	ee18 0a10 	vmov	r0, s16
 800613c:	229a      	movs	r2, #154	; 0x9a
 800613e:	2156      	movs	r1, #86	; 0x56
 8006140:	f7fd f855 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006144:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8006148:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 800614c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8006150:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8006154:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8006158:	4628      	mov	r0, r5
 800615a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800615e:	4798      	blx	r3
 8006160:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006164:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8006168:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800616c:	4b2d      	ldr	r3, [pc, #180]	; (8006224 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800616e:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8006170:	ee18 0a10 	vmov	r0, s16
 8006174:	233c      	movs	r3, #60	; 0x3c
 8006176:	a908      	add	r1, sp, #32
 8006178:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800617c:	f00c fd2c 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8006180:	ee18 1a10 	vmov	r1, s16
 8006184:	4620      	mov	r0, r4
 8006186:	f00a fb73 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800618a:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800618c:	a908      	add	r1, sp, #32
 800618e:	4638      	mov	r0, r7
 8006190:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006194:	f00a fafe 	bl	8010794 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8006198:	2212      	movs	r2, #18
 800619a:	4638      	mov	r0, r7
 800619c:	211c      	movs	r1, #28
 800619e:	f7fd f826 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80061a2:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80061a6:	4638      	mov	r0, r7
 80061a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80061aa:	21b8      	movs	r1, #184	; 0xb8
 80061ac:	4798      	blx	r3
        setHeight(height);
 80061ae:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80061b2:	4638      	mov	r0, r7
 80061b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80061b6:	216a      	movs	r1, #106	; 0x6a
 80061b8:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 80061ba:	225c      	movs	r2, #92	; 0x5c
 80061bc:	4611      	mov	r1, r2
 80061be:	4638      	mov	r0, r7
 80061c0:	f00c fe53 	bl	8012e6a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80061c4:	4638      	mov	r0, r7
 80061c6:	225a      	movs	r2, #90	; 0x5a
 80061c8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80061cc:	f00c fed2 	bl	8012f74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80061d0:	4633      	mov	r3, r6
 80061d2:	225a      	movs	r2, #90	; 0x5a
 80061d4:	4638      	mov	r0, r7
 80061d6:	9600      	str	r6, [sp, #0]
 80061d8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80061dc:	f00a f987 	bl	80104ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80061e0:	4631      	mov	r1, r6
 80061e2:	4638      	mov	r0, r7
 80061e4:	f00c fe70 	bl	8012ec8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80061e8:	2335      	movs	r3, #53	; 0x35
 80061ea:	2208      	movs	r2, #8
 80061ec:	4638      	mov	r0, r7
 80061ee:	2105      	movs	r1, #5
 80061f0:	f00c fe26 	bl	8012e40 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80061f4:	4638      	mov	r0, r7
 80061f6:	2101      	movs	r1, #1
 80061f8:	f00c fdc4 	bl	8012d84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80061fc:	4638      	mov	r0, r7
 80061fe:	2101      	movs	r1, #1
 8006200:	f00c fdc3 	bl	8012d8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8006204:	4620      	mov	r0, r4
 8006206:	4639      	mov	r1, r7
 8006208:	f00a fb32 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800620c:	4620      	mov	r0, r4
 800620e:	b00b      	add	sp, #44	; 0x2c
 8006210:	ecbd 8b02 	vpop	{d8}
 8006214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006218:	0802e14c 	.word	0x0802e14c
 800621c:	0802c8c8 	.word	0x0802c8c8
 8006220:	00a900f0 	.word	0x00a900f0
 8006224:	0802c8b8 	.word	0x0802c8b8

08006228 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006228:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800622a:	4770      	bx	lr

0800622c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800622c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800622e:	4770      	bx	lr

08006230 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006230:	4770      	bx	lr

08006232 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8006232:	888b      	ldrh	r3, [r1, #4]
 8006234:	69c0      	ldr	r0, [r0, #28]
 8006236:	680a      	ldr	r2, [r1, #0]
 8006238:	0adb      	lsrs	r3, r3, #11
 800623a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800623e:	4410      	add	r0, r2
 8006240:	4770      	bx	lr

08006242 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8006242:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8006244:	b1c2      	cbz	r2, 8006278 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8006246:	7b13      	ldrb	r3, [r2, #12]
 8006248:	b1b3      	cbz	r3, 8006278 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800624a:	7b54      	ldrb	r4, [r2, #13]
 800624c:	7ad2      	ldrb	r2, [r2, #11]
 800624e:	0224      	lsls	r4, r4, #8
 8006250:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006254:	4314      	orrs	r4, r2
 8006256:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006258:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800625a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800625e:	8813      	ldrh	r3, [r2, #0]
 8006260:	428b      	cmp	r3, r1
 8006262:	d102      	bne.n	800626a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8006264:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006268:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800626a:	d805      	bhi.n	8006278 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800626c:	3801      	subs	r0, #1
 800626e:	b280      	uxth	r0, r0
 8006270:	3204      	adds	r2, #4
 8006272:	2800      	cmp	r0, #0
 8006274:	d1f3      	bne.n	800625e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8006276:	e7f7      	b.n	8006268 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006278:	2000      	movs	r0, #0
 800627a:	e7f5      	b.n	8006268 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800627c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800627c:	b510      	push	{r4, lr}
 800627e:	212c      	movs	r1, #44	; 0x2c
 8006280:	4604      	mov	r4, r0
 8006282:	f023 fe38 	bl	8029ef6 <_ZdlPvj>
 8006286:	4620      	mov	r0, r4
 8006288:	bd10      	pop	{r4, pc}
	...

0800628c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800628c:	b530      	push	{r4, r5, lr}
 800628e:	b08b      	sub	sp, #44	; 0x2c
 8006290:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006292:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8006296:	9508      	str	r5, [sp, #32]
 8006298:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800629c:	9507      	str	r5, [sp, #28]
 800629e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80062a2:	9506      	str	r5, [sp, #24]
 80062a4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80062a8:	9505      	str	r5, [sp, #20]
 80062aa:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80062ae:	9504      	str	r5, [sp, #16]
 80062b0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80062b4:	9503      	str	r5, [sp, #12]
 80062b6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80062ba:	9502      	str	r5, [sp, #8]
 80062bc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80062c0:	9501      	str	r5, [sp, #4]
 80062c2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80062c6:	9500      	str	r5, [sp, #0]
 80062c8:	f010 ff00 	bl	80170cc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80062cc:	4b06      	ldr	r3, [pc, #24]	; (80062e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80062ce:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80062d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80062d2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80062d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80062d6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80062d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80062da:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80062dc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80062de:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80062e0:	4620      	mov	r0, r4
 80062e2:	b00b      	add	sp, #44	; 0x2c
 80062e4:	bd30      	pop	{r4, r5, pc}
 80062e6:	bf00      	nop
 80062e8:	0802e1e0 	.word	0x0802e1e0

080062ec <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80062ec:	4770      	bx	lr

080062ee <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062ee:	4770      	bx	lr

080062f0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062f0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062f2:	68c2      	ldr	r2, [r0, #12]
 80062f4:	6844      	ldr	r4, [r0, #4]
 80062f6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062f8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80062fa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062fe:	07d2      	lsls	r2, r2, #31
 8006300:	bf48      	it	mi
 8006302:	5962      	ldrmi	r2, [r4, r5]
 8006304:	689b      	ldr	r3, [r3, #8]
    }
 8006306:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006308:	bf48      	it	mi
 800630a:	58d3      	ldrmi	r3, [r2, r3]
 800630c:	4718      	bx	r3

0800630e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800630e:	6843      	ldr	r3, [r0, #4]
 8006310:	b12b      	cbz	r3, 800631e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006312:	6883      	ldr	r3, [r0, #8]
 8006314:	b92b      	cbnz	r3, 8006322 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006316:	68c0      	ldr	r0, [r0, #12]
 8006318:	f000 0001 	and.w	r0, r0, #1
 800631c:	4770      	bx	lr
 800631e:	4618      	mov	r0, r3
 8006320:	4770      	bx	lr
 8006322:	2001      	movs	r0, #1
    }
 8006324:	4770      	bx	lr

08006326 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006326:	b510      	push	{r4, lr}
 8006328:	2110      	movs	r1, #16
 800632a:	4604      	mov	r4, r0
 800632c:	f023 fde3 	bl	8029ef6 <_ZdlPvj>
 8006330:	4620      	mov	r0, r4
 8006332:	bd10      	pop	{r4, pc}

08006334 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006334:	b510      	push	{r4, lr}
 8006336:	4b03      	ldr	r3, [pc, #12]	; (8006344 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006338:	6003      	str	r3, [r0, #0]
 800633a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800633c:	f00e f82e 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006340:	4620      	mov	r0, r4
 8006342:	bd10      	pop	{r4, pc}
 8006344:	0802e258 	.word	0x0802e258

08006348 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006348:	b507      	push	{r0, r1, r2, lr}
 800634a:	4b07      	ldr	r3, [pc, #28]	; (8006368 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800634c:	6003      	str	r3, [r0, #0]
 800634e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006350:	f00e f824 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006354:	9801      	ldr	r0, [sp, #4]
 8006356:	f241 117c 	movw	r1, #4476	; 0x117c
 800635a:	f023 fdcc 	bl	8029ef6 <_ZdlPvj>
 800635e:	9801      	ldr	r0, [sp, #4]
 8006360:	b003      	add	sp, #12
 8006362:	f85d fb04 	ldr.w	pc, [sp], #4
 8006366:	bf00      	nop
 8006368:	0802e258 	.word	0x0802e258

0800636c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800636c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800636e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8006372:	4299      	cmp	r1, r3
{
 8006374:	4604      	mov	r4, r0
 8006376:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8006378:	d103      	bne.n	8006382 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800637a:	f00f fd11 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800637e:	f7fe fb1d 	bl	80049bc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006382:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006386:	429d      	cmp	r5, r3
 8006388:	d103      	bne.n	8006392 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800638a:	f00f fd09 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800638e:	f7fe fba5 	bl	8004adc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8006392:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006396:	429d      	cmp	r5, r3
 8006398:	d103      	bne.n	80063a2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800639a:	f00f fd01 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800639e:	f7fe fbdd 	bl	8004b5c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80063a2:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80063a6:	42a5      	cmp	r5, r4
 80063a8:	d10a      	bne.n	80063c0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80063aa:	4806      	ldr	r0, [pc, #24]	; (80063c4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80063ac:	2200      	movs	r2, #0
 80063ae:	2120      	movs	r1, #32
 80063b0:	f004 f8f6 	bl	800a5a0 <HAL_GPIO_WritePin>
 80063b4:	f00f fcf4 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80063b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80063bc:	f7fe bbde 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80063c0:	bd38      	pop	{r3, r4, r5, pc}
 80063c2:	bf00      	nop
 80063c4:	40021000 	.word	0x40021000

080063c8 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80063c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063cc:	ed2d 8b06 	vpush	{d8-d10}
 80063d0:	4604      	mov	r4, r0
 80063d2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80063d4:	46a3      	mov	fp, r4
        : presenter(0)
 80063d6:	2500      	movs	r5, #0
 80063d8:	f011 f962 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 80063dc:	4b6a      	ldr	r3, [pc, #424]	; (8006588 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80063de:	63e5      	str	r5, [r4, #60]	; 0x3c
 80063e0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80063e4:	2226      	movs	r2, #38	; 0x26
 80063e6:	4629      	mov	r1, r5
 80063e8:	4658      	mov	r0, fp
 80063ea:	f024 fe70 	bl	802b0ce <memset>
 80063ee:	4658      	mov	r0, fp
 80063f0:	f7fc ff1e 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 80063f4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80063f8:	26ff      	movs	r6, #255	; 0xff
 80063fa:	4b64      	ldr	r3, [pc, #400]	; (800658c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80063fc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063fe:	2226      	movs	r2, #38	; 0x26
 8006400:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006404:	4629      	mov	r1, r5
 8006406:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800640a:	4650      	mov	r0, sl
        : color(col)
 800640c:	66a5      	str	r5, [r4, #104]	; 0x68
 800640e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006412:	f024 fe5c 	bl	802b0ce <memset>
 8006416:	4650      	mov	r0, sl
 8006418:	f7fc ff0a 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 800641c:	4b5c      	ldr	r3, [pc, #368]	; (8006590 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800641e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006420:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006424:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006428:	a90c      	add	r1, sp, #48	; 0x30
 800642a:	4650      	mov	r0, sl
 800642c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006430:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006434:	f00c ffab 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006438:	4648      	mov	r0, r9
 800643a:	f7fc ff0b 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800643e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006442:	4b54      	ldr	r3, [pc, #336]	; (8006594 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8006444:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006448:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800644c:	4638      	mov	r0, r7
 800644e:	f00b fe67 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8006452:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006456:	4618      	mov	r0, r3
 8006458:	9303      	str	r3, [sp, #12]
 800645a:	f7fc fce9 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800645e:	4b4e      	ldr	r3, [pc, #312]	; (8006598 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8006460:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006464:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006468:	3324      	adds	r3, #36	; 0x24
 800646a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800646e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006472:	4640      	mov	r0, r8
 8006474:	f7fc feee 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006478:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800647c:	4618      	mov	r0, r3
 800647e:	ee08 3a10 	vmov	s16, r3
 8006482:	f7fc fee7 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006486:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800648a:	4618      	mov	r0, r3
 800648c:	ee08 3a90 	vmov	s17, r3
 8006490:	f7fc fee0 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006494:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006498:	4618      	mov	r0, r3
 800649a:	ee09 3a10 	vmov	s18, r3
 800649e:	f00d f8b7 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80064a2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80064a6:	4618      	mov	r0, r3
 80064a8:	ee09 3a90 	vmov	s19, r3
 80064ac:	f00d f8b0 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80064b0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80064b4:	4618      	mov	r0, r3
 80064b6:	ee0a 3a10 	vmov	s20, r3
 80064ba:	f00d f8a9 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80064be:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80064c2:	4618      	mov	r0, r3
 80064c4:	ee0a 3a90 	vmov	s21, r3
 80064c8:	f00c ff3a 	bl	8013340 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80064cc:	4a33      	ldr	r2, [pc, #204]	; (800659c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80064ce:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80064d2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80064d6:	4a32      	ldr	r2, [pc, #200]	; (80065a0 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80064d8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80064dc:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80064e0:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80064e4:	f00d ff50 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80064e8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80064ec:	462a      	mov	r2, r5
 80064ee:	4658      	mov	r0, fp
 80064f0:	9300      	str	r3, [sp, #0]
 80064f2:	4629      	mov	r1, r5
 80064f4:	23f0      	movs	r3, #240	; 0xf0
 80064f6:	f7fc fe87 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064fa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80064fc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006500:	66a3      	str	r3, [r4, #104]	; 0x68
 8006502:	4659      	mov	r1, fp
 8006504:	4630      	mov	r0, r6
 8006506:	f00a f9b3 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800650a:	462a      	mov	r2, r5
 800650c:	4650      	mov	r0, sl
 800650e:	4629      	mov	r1, r5
 8006510:	f7fc fe6d 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006514:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006516:	4650      	mov	r0, sl
 8006518:	a90c      	add	r1, sp, #48	; 0x30
 800651a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800651e:	f00c ff36 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006522:	4651      	mov	r1, sl
 8006524:	4630      	mov	r0, r6
 8006526:	f00a f9a3 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800652a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800652e:	2156      	movs	r1, #86	; 0x56
 8006530:	4648      	mov	r0, r9
 8006532:	f7fc fe5c 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006536:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800653a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800653e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006542:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006546:	4650      	mov	r0, sl
 8006548:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800654c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006550:	4649      	mov	r1, r9
 8006552:	4798      	blx	r3
 8006554:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006558:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800655c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006560:	4b10      	ldr	r3, [pc, #64]	; (80065a4 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8006562:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006564:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8006568:	b92b      	cbnz	r3, 8006576 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800656a:	4b0f      	ldr	r3, [pc, #60]	; (80065a8 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800656c:	4a0f      	ldr	r2, [pc, #60]	; (80065ac <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800656e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006570:	480f      	ldr	r0, [pc, #60]	; (80065b0 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8006572:	f024 fba7 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006576:	4b0f      	ldr	r3, [pc, #60]	; (80065b4 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006578:	881b      	ldrh	r3, [r3, #0]
 800657a:	2b3a      	cmp	r3, #58	; 0x3a
 800657c:	d81e      	bhi.n	80065bc <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800657e:	4b0e      	ldr	r3, [pc, #56]	; (80065b8 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8006580:	4a0a      	ldr	r2, [pc, #40]	; (80065ac <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8006582:	2161      	movs	r1, #97	; 0x61
 8006584:	e7f4      	b.n	8006570 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8006586:	bf00      	nop
 8006588:	0802e258 	.word	0x0802e258
 800658c:	0802f218 	.word	0x0802f218
 8006590:	0802f3e0 	.word	0x0802f3e0
 8006594:	0802c8c8 	.word	0x0802c8c8
 8006598:	0802ef4c 	.word	0x0802ef4c
 800659c:	0802e240 	.word	0x0802e240
 80065a0:	0800636d 	.word	0x0800636d
 80065a4:	20012dfc 	.word	0x20012dfc
 80065a8:	0802c708 	.word	0x0802c708
 80065ac:	0802c80a 	.word	0x0802c80a
 80065b0:	0802c785 	.word	0x0802c785
 80065b4:	20012e00 	.word	0x20012e00
 80065b8:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 80065bc:	4ba5      	ldr	r3, [pc, #660]	; (8006854 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80065be:	213a      	movs	r1, #58	; 0x3a
 80065c0:	6818      	ldr	r0, [r3, #0]
 80065c2:	f002 fdf7 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80065c6:	4aa4      	ldr	r2, [pc, #656]	; (8006858 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80065c8:	4603      	mov	r3, r0
 80065ca:	2104      	movs	r1, #4
 80065cc:	4650      	mov	r0, sl
 80065ce:	f012 fd57 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80065d2:	4648      	mov	r0, r9
        wc1 = value;
 80065d4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80065d8:	f00c fade 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80065dc:	4b9f      	ldr	r3, [pc, #636]	; (800685c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80065de:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80065e0:	a90c      	add	r1, sp, #48	; 0x30
 80065e2:	233b      	movs	r3, #59	; 0x3b
 80065e4:	4648      	mov	r0, r9
 80065e6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80065ea:	f00c faf5 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065ee:	4649      	mov	r1, r9
 80065f0:	4630      	mov	r0, r6
 80065f2:	f00a f93d 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80065f6:	230a      	movs	r3, #10
 80065f8:	9300      	str	r3, [sp, #0]
 80065fa:	2232      	movs	r2, #50	; 0x32
 80065fc:	23f0      	movs	r3, #240	; 0xf0
 80065fe:	4629      	mov	r1, r5
 8006600:	4638      	mov	r0, r7
 8006602:	f7fc fe01 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006606:	9b03      	ldr	r3, [sp, #12]
 8006608:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800660c:	22a0      	movs	r2, #160	; 0xa0
 800660e:	4611      	mov	r1, r2
 8006610:	4638      	mov	r0, r7
 8006612:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006616:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800661a:	f00b fe97 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800661e:	22a0      	movs	r2, #160	; 0xa0
 8006620:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006624:	4638      	mov	r0, r7
 8006626:	f00b fe9c 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800662a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800662e:	2b20      	cmp	r3, #32
 8006630:	d005      	beq.n	800663e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8006632:	2320      	movs	r3, #32
 8006634:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006638:	4638      	mov	r0, r7
 800663a:	f00b fd91 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800663e:	4638      	mov	r0, r7
 8006640:	2101      	movs	r1, #1
 8006642:	f00b fe99 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006646:	4639      	mov	r1, r7
 8006648:	4630      	mov	r0, r6
 800664a:	ad04      	add	r5, sp, #16
        color = newColor;
 800664c:	f04f 37ff 	mov.w	r7, #4294967295
 8006650:	f00a f90e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006654:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006658:	2223      	movs	r2, #35	; 0x23
 800665a:	4640      	mov	r0, r8
 800665c:	2145      	movs	r1, #69	; 0x45
 800665e:	f7fc fdc6 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006662:	4641      	mov	r1, r8
 8006664:	4628      	mov	r0, r5
        color = newColor;
 8006666:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800666a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800666e:	f00c f819 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006672:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006676:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800667a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800667e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006682:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800685c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8006686:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800668a:	2360      	movs	r3, #96	; 0x60
 800668c:	4649      	mov	r1, r9
 800668e:	4640      	mov	r0, r8
 8006690:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006694:	f00c faa0 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006698:	4641      	mov	r1, r8
 800669a:	4630      	mov	r0, r6
 800669c:	f00a f8e8 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80066a0:	ee18 0a10 	vmov	r0, s16
 80066a4:	220c      	movs	r2, #12
 80066a6:	2136      	movs	r1, #54	; 0x36
 80066a8:	f7fc fda1 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80066ac:	ee18 1a10 	vmov	r1, s16
 80066b0:	4628      	mov	r0, r5
        color = newColor;
 80066b2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80066b6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80066ba:	f00b fff3 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80066c2:	ee18 3a10 	vmov	r3, s16
 80066c6:	333c      	adds	r3, #60	; 0x3c
 80066c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066cc:	2361      	movs	r3, #97	; 0x61
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80066ce:	ee18 0a10 	vmov	r0, s16
 80066d2:	4649      	mov	r1, r9
 80066d4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80066d8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80066dc:	f00c fa7c 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066e0:	ee18 1a10 	vmov	r1, s16
 80066e4:	4630      	mov	r0, r6
 80066e6:	f00a f8c3 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80066ea:	ee18 0a90 	vmov	r0, s17
 80066ee:	223c      	movs	r2, #60	; 0x3c
 80066f0:	2158      	movs	r1, #88	; 0x58
 80066f2:	f7fc fd7c 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80066f6:	ee18 1a90 	vmov	r1, s17
 80066fa:	4628      	mov	r0, r5
        color = newColor;
 80066fc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006700:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006704:	f00b ffce 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006708:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800670c:	ee18 3a90 	vmov	r3, s17
 8006710:	333c      	adds	r3, #60	; 0x3c
 8006712:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006716:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006718:	ee18 0a90 	vmov	r0, s17
 800671c:	4649      	mov	r1, r9
 800671e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006722:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006726:	f00c fa57 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800672a:	ee18 1a90 	vmov	r1, s17
 800672e:	4630      	mov	r0, r6
 8006730:	f00a f89e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006734:	ee19 0a10 	vmov	r0, s18
 8006738:	22f0      	movs	r2, #240	; 0xf0
 800673a:	2121      	movs	r1, #33	; 0x21
 800673c:	f7fc fd57 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006740:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006744:	464a      	mov	r2, r9
 8006746:	f04f 0802 	mov.w	r8, #2
 800674a:	a90b      	add	r1, sp, #44	; 0x2c
 800674c:	ee19 0a10 	vmov	r0, s18
 8006750:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006754:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006758:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800675c:	f00c fc21 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006760:	2362      	movs	r3, #98	; 0x62
 8006762:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006766:	350c      	adds	r5, #12
        updateTextPosition();
 8006768:	ee19 0a10 	vmov	r0, s18
 800676c:	f7fc fd94 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006770:	ee19 1a10 	vmov	r1, s18
 8006774:	4630      	mov	r0, r6
        colorPressed = col;
 8006776:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800677a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800677e:	f00a f877 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006782:	ee19 0a90 	vmov	r0, s19
 8006786:	22aa      	movs	r2, #170	; 0xaa
 8006788:	2121      	movs	r1, #33	; 0x21
 800678a:	f7fc fd30 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800678e:	464a      	mov	r2, r9
 8006790:	a90b      	add	r1, sp, #44	; 0x2c
 8006792:	ee19 0a90 	vmov	r0, s19
 8006796:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800679a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800679e:	f00c fc00 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80067a2:	2363      	movs	r3, #99	; 0x63
 80067a4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80067a8:	ee19 0a90 	vmov	r0, s19
 80067ac:	f7fc fd74 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80067b0:	ee19 1a90 	vmov	r1, s19
 80067b4:	4630      	mov	r0, r6
        colorPressed = col;
 80067b6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80067ba:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80067be:	f00a f857 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80067c2:	ee1a 0a10 	vmov	r0, s20
 80067c6:	2264      	movs	r2, #100	; 0x64
 80067c8:	2121      	movs	r1, #33	; 0x21
 80067ca:	f7fc fd10 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80067ce:	464a      	mov	r2, r9
 80067d0:	a90b      	add	r1, sp, #44	; 0x2c
 80067d2:	ee1a 0a10 	vmov	r0, s20
 80067d6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80067da:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80067de:	f00c fbe0 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80067e2:	2364      	movs	r3, #100	; 0x64
 80067e4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80067e8:	ee1a 0a10 	vmov	r0, s20
 80067ec:	f7fc fd54 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80067f0:	ee1a 1a10 	vmov	r1, s20
 80067f4:	4630      	mov	r0, r6
        colorPressed = col;
 80067f6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80067fa:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80067fe:	f00a f837 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8006802:	ee1a 0a90 	vmov	r0, s21
 8006806:	2205      	movs	r2, #5
 8006808:	21c6      	movs	r1, #198	; 0xc6
 800680a:	f7fc fcf0 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800680e:	2301      	movs	r3, #1
 8006810:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006814:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006816:	ee1a 0a90 	vmov	r0, s21
 800681a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800681e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006822:	aa0a      	add	r2, sp, #40	; 0x28
 8006824:	ab0b      	add	r3, sp, #44	; 0x2c
 8006826:	a909      	add	r1, sp, #36	; 0x24
 8006828:	f8cd 9000 	str.w	r9, [sp]
 800682c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006830:	f00c fcf1 	bl	8013216 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006834:	4630      	mov	r0, r6
 8006836:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800683a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800683e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8006842:	f00a f815 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006846:	4620      	mov	r0, r4
 8006848:	b00f      	add	sp, #60	; 0x3c
 800684a:	ecbd 8b06 	vpop	{d8-d10}
 800684e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006852:	bf00      	nop
 8006854:	20012e08 	.word	0x20012e08
 8006858:	0802c842 	.word	0x0802c842
 800685c:	0802c8b8 	.word	0x0802c8b8

08006860 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006860:	4770      	bx	lr

08006862 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006862:	4770      	bx	lr

08006864 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006864:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006866:	68c2      	ldr	r2, [r0, #12]
 8006868:	6844      	ldr	r4, [r0, #4]
 800686a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800686c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800686e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006872:	07d2      	lsls	r2, r2, #31
 8006874:	bf48      	it	mi
 8006876:	5962      	ldrmi	r2, [r4, r5]
 8006878:	689b      	ldr	r3, [r3, #8]
    }
 800687a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800687c:	bf48      	it	mi
 800687e:	58d3      	ldrmi	r3, [r2, r3]
 8006880:	4718      	bx	r3

08006882 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006882:	6843      	ldr	r3, [r0, #4]
 8006884:	b12b      	cbz	r3, 8006892 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006886:	6883      	ldr	r3, [r0, #8]
 8006888:	b92b      	cbnz	r3, 8006896 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800688a:	68c0      	ldr	r0, [r0, #12]
 800688c:	f000 0001 	and.w	r0, r0, #1
 8006890:	4770      	bx	lr
 8006892:	4618      	mov	r0, r3
 8006894:	4770      	bx	lr
 8006896:	2001      	movs	r0, #1
    }
 8006898:	4770      	bx	lr

0800689a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800689a:	b510      	push	{r4, lr}
 800689c:	2110      	movs	r1, #16
 800689e:	4604      	mov	r4, r0
 80068a0:	f023 fb29 	bl	8029ef6 <_ZdlPvj>
 80068a4:	4620      	mov	r0, r4
 80068a6:	bd10      	pop	{r4, pc}

080068a8 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80068a8:	b510      	push	{r4, lr}
 80068aa:	4b03      	ldr	r3, [pc, #12]	; (80068b8 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80068ac:	6003      	str	r3, [r0, #0]
 80068ae:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80068b0:	f00d fd74 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068b4:	4620      	mov	r0, r4
 80068b6:	bd10      	pop	{r4, pc}
 80068b8:	0802e2a4 	.word	0x0802e2a4

080068bc <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80068bc:	b507      	push	{r0, r1, r2, lr}
 80068be:	4b07      	ldr	r3, [pc, #28]	; (80068dc <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80068c0:	6003      	str	r3, [r0, #0]
 80068c2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80068c4:	f00d fd6a 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068c8:	9801      	ldr	r0, [sp, #4]
 80068ca:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80068ce:	f023 fb12 	bl	8029ef6 <_ZdlPvj>
 80068d2:	9801      	ldr	r0, [sp, #4]
 80068d4:	b003      	add	sp, #12
 80068d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80068da:	bf00      	nop
 80068dc:	0802e2a4 	.word	0x0802e2a4

080068e0 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80068e0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80068e2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80068e6:	4299      	cmp	r1, r3
{
 80068e8:	4604      	mov	r4, r0
 80068ea:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80068ec:	d103      	bne.n	80068f6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80068ee:	f00f fa57 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80068f2:	f7fe f853 	bl	800499c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80068f6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80068fa:	429d      	cmp	r5, r3
 80068fc:	d103      	bne.n	8006906 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80068fe:	f00f fa4f 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006902:	f7fe f87b 	bl	80049fc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006906:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800690a:	42a5      	cmp	r5, r4
 800690c:	d105      	bne.n	800691a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800690e:	f00f fa47 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006912:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006916:	f7fe b8a1 	b.w	8004a5c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800691a:	bd38      	pop	{r3, r4, r5, pc}

0800691c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800691c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006920:	ed2d 8b06 	vpush	{d8-d10}
 8006924:	4604      	mov	r4, r0
 8006926:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006928:	46a3      	mov	fp, r4
 800692a:	2500      	movs	r5, #0
 800692c:	f010 feb8 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8006930:	4b66      	ldr	r3, [pc, #408]	; (8006acc <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006932:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006934:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006938:	2226      	movs	r2, #38	; 0x26
 800693a:	4629      	mov	r1, r5
 800693c:	4658      	mov	r0, fp
 800693e:	f024 fbc6 	bl	802b0ce <memset>
 8006942:	4658      	mov	r0, fp
 8006944:	f7fc fc74 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8006948:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800694c:	26ff      	movs	r6, #255	; 0xff
 800694e:	4b60      	ldr	r3, [pc, #384]	; (8006ad0 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006950:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006952:	2226      	movs	r2, #38	; 0x26
 8006954:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006958:	4629      	mov	r1, r5
 800695a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800695e:	4650      	mov	r0, sl
 8006960:	66a5      	str	r5, [r4, #104]	; 0x68
 8006962:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006966:	f024 fbb2 	bl	802b0ce <memset>
 800696a:	4650      	mov	r0, sl
 800696c:	f7fc fc60 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8006970:	4b58      	ldr	r3, [pc, #352]	; (8006ad4 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8006972:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006974:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006978:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800697c:	a90a      	add	r1, sp, #40	; 0x28
 800697e:	4650      	mov	r0, sl
 8006980:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006984:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006988:	f00c fd01 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800698c:	4648      	mov	r0, r9
 800698e:	f7fc fc61 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006992:	4b51      	ldr	r3, [pc, #324]	; (8006ad8 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8006994:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006998:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800699c:	4618      	mov	r0, r3
 800699e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80069a2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80069a6:	ee08 3a90 	vmov	s17, r3
 80069aa:	f7fc fc53 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80069ae:	4638      	mov	r0, r7
 80069b0:	f00b fbb6 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 80069b4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80069b8:	4618      	mov	r0, r3
 80069ba:	9303      	str	r3, [sp, #12]
 80069bc:	f7fc fa38 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80069c0:	4b46      	ldr	r3, [pc, #280]	; (8006adc <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80069c2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80069c6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80069ca:	3324      	adds	r3, #36	; 0x24
 80069cc:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80069d0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80069d4:	4640      	mov	r0, r8
 80069d6:	f7fc fc3d 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80069da:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80069de:	4618      	mov	r0, r3
 80069e0:	ee08 3a10 	vmov	s16, r3
 80069e4:	f7fc fc36 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80069e8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80069ec:	4618      	mov	r0, r3
 80069ee:	ee09 3a10 	vmov	s18, r3
 80069f2:	f00c fe0d 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80069f6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80069fa:	4618      	mov	r0, r3
 80069fc:	ee09 3a90 	vmov	s19, r3
 8006a00:	f00c fe06 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a04:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006a08:	4618      	mov	r0, r3
 8006a0a:	ee0a 3a10 	vmov	s20, r3
 8006a0e:	f00c fdff 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006a12:	4a33      	ldr	r2, [pc, #204]	; (8006ae0 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006a14:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006a18:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006a1c:	4a31      	ldr	r2, [pc, #196]	; (8006ae4 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006a1e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006a22:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006a26:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006a2a:	f00d fcad 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006a2e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006a32:	462a      	mov	r2, r5
 8006a34:	4658      	mov	r0, fp
 8006a36:	9300      	str	r3, [sp, #0]
 8006a38:	4629      	mov	r1, r5
 8006a3a:	23f0      	movs	r3, #240	; 0xf0
 8006a3c:	f7fc fbe4 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a40:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006a42:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006a46:	66a3      	str	r3, [r4, #104]	; 0x68
 8006a48:	4659      	mov	r1, fp
 8006a4a:	4630      	mov	r0, r6
 8006a4c:	f009 ff10 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006a50:	462a      	mov	r2, r5
 8006a52:	4650      	mov	r0, sl
 8006a54:	4629      	mov	r1, r5
 8006a56:	f7fc fbca 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006a5a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006a5c:	4650      	mov	r0, sl
 8006a5e:	a90a      	add	r1, sp, #40	; 0x28
 8006a60:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a64:	f00c fc93 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a68:	4651      	mov	r1, sl
 8006a6a:	4630      	mov	r0, r6
 8006a6c:	f009 ff00 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006a70:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006a74:	2156      	movs	r1, #86	; 0x56
 8006a76:	4648      	mov	r0, r9
 8006a78:	f7fc fbb9 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a7c:	f04f 33ff 	mov.w	r3, #4294967295
 8006a80:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a84:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006a88:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a8c:	f10d 0b10 	add.w	fp, sp, #16
 8006a90:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006a94:	4649      	mov	r1, r9
 8006a96:	4658      	mov	r0, fp
 8006a98:	4798      	blx	r3
 8006a9a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006a9e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006aa2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006aa6:	4b10      	ldr	r3, [pc, #64]	; (8006ae8 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006aa8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006aaa:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006aae:	b92b      	cbnz	r3, 8006abc <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006ab0:	4b0e      	ldr	r3, [pc, #56]	; (8006aec <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006ab2:	4a0f      	ldr	r2, [pc, #60]	; (8006af0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006ab4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ab6:	480f      	ldr	r0, [pc, #60]	; (8006af4 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006ab8:	f024 f904 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006abc:	4b0e      	ldr	r3, [pc, #56]	; (8006af8 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006abe:	881b      	ldrh	r3, [r3, #0]
 8006ac0:	2b2b      	cmp	r3, #43	; 0x2b
 8006ac2:	d81d      	bhi.n	8006b00 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006ac4:	4b0d      	ldr	r3, [pc, #52]	; (8006afc <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006ac6:	4a0a      	ldr	r2, [pc, #40]	; (8006af0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006ac8:	2161      	movs	r1, #97	; 0x61
 8006aca:	e7f4      	b.n	8006ab6 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8006acc:	0802e2a4 	.word	0x0802e2a4
 8006ad0:	0802f218 	.word	0x0802f218
 8006ad4:	0802f3e0 	.word	0x0802f3e0
 8006ad8:	0802c8c8 	.word	0x0802c8c8
 8006adc:	0802ef4c 	.word	0x0802ef4c
 8006ae0:	0802e28c 	.word	0x0802e28c
 8006ae4:	080068e1 	.word	0x080068e1
 8006ae8:	20012dfc 	.word	0x20012dfc
 8006aec:	0802c708 	.word	0x0802c708
 8006af0:	0802c80a 	.word	0x0802c80a
 8006af4:	0802c785 	.word	0x0802c785
 8006af8:	20012e00 	.word	0x20012e00
 8006afc:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 8006b00:	4b95      	ldr	r3, [pc, #596]	; (8006d58 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006b02:	212b      	movs	r1, #43	; 0x2b
 8006b04:	6818      	ldr	r0, [r3, #0]
 8006b06:	f002 fb55 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8006b0a:	4a94      	ldr	r2, [pc, #592]	; (8006d5c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006b0c:	4603      	mov	r3, r0
 8006b0e:	2104      	movs	r1, #4
 8006b10:	4650      	mov	r0, sl
 8006b12:	f012 fab5 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006b16:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006b1a:	4648      	mov	r0, r9
 8006b1c:	f00c f83c 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006b20:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006d60 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006b24:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006b28:	232c      	movs	r3, #44	; 0x2c
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006b2a:	a90a      	add	r1, sp, #40	; 0x28
 8006b2c:	4648      	mov	r0, r9
 8006b2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b32:	f00c f851 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b36:	4649      	mov	r1, r9
 8006b38:	4630      	mov	r0, r6
 8006b3a:	f009 fe99 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006b3e:	223c      	movs	r2, #60	; 0x3c
 8006b40:	ee18 0a90 	vmov	r0, s17
 8006b44:	213d      	movs	r1, #61	; 0x3d
 8006b46:	f7fc fb52 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b4a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006b4e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006b52:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006b56:	4658      	mov	r0, fp
        linespace = space;
 8006b58:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006b5c:	f00b fda2 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b60:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006b64:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006b68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b6c:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006b6e:	ee18 0a90 	vmov	r0, s17
 8006b72:	a90a      	add	r1, sp, #40	; 0x28
 8006b74:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b78:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006b7c:	f00c f82c 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b80:	ee18 1a90 	vmov	r1, s17
 8006b84:	4630      	mov	r0, r6
 8006b86:	f009 fe73 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006b8a:	230a      	movs	r3, #10
 8006b8c:	9300      	str	r3, [sp, #0]
 8006b8e:	2232      	movs	r2, #50	; 0x32
 8006b90:	23f0      	movs	r3, #240	; 0xf0
 8006b92:	4629      	mov	r1, r5
 8006b94:	4638      	mov	r0, r7
 8006b96:	f7fc fb37 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b9a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b9e:	22a0      	movs	r2, #160	; 0xa0
 8006ba0:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006ba4:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006ba8:	9b03      	ldr	r3, [sp, #12]
 8006baa:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006bae:	4611      	mov	r1, r2
 8006bb0:	4638      	mov	r0, r7
 8006bb2:	f00b fbcb 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006bb6:	22a0      	movs	r2, #160	; 0xa0
 8006bb8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006bbc:	4638      	mov	r0, r7
 8006bbe:	f00b fbd0 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006bc2:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006bc6:	2b20      	cmp	r3, #32
 8006bc8:	d005      	beq.n	8006bd6 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006bca:	2320      	movs	r3, #32
 8006bcc:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006bd0:	4638      	mov	r0, r7
 8006bd2:	f00b fac5 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006bd6:	4638      	mov	r0, r7
 8006bd8:	2101      	movs	r1, #1
 8006bda:	f00b fbcd 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006bde:	4639      	mov	r1, r7
 8006be0:	4630      	mov	r0, r6
 8006be2:	f009 fe45 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006be6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006bea:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006bec:	2223      	movs	r2, #35	; 0x23
 8006bee:	4640      	mov	r0, r8
        linespace = space;
 8006bf0:	f04f 0a00 	mov.w	sl, #0
 8006bf4:	2145      	movs	r1, #69	; 0x45
 8006bf6:	f7fc fafa 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006bfa:	4641      	mov	r1, r8
 8006bfc:	4638      	mov	r0, r7
        color = newColor;
 8006bfe:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006c02:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006c06:	f00b fd4d 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c0a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006c0e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006c12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c16:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006d60 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006c1a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006c1e:	235e      	movs	r3, #94	; 0x5e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006c20:	a90a      	add	r1, sp, #40	; 0x28
 8006c22:	4640      	mov	r0, r8
 8006c24:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c28:	f00b ffd6 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c2c:	4641      	mov	r1, r8
 8006c2e:	4630      	mov	r0, r6
 8006c30:	f009 fe1e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006c34:	ee18 0a10 	vmov	r0, s16
 8006c38:	220c      	movs	r2, #12
 8006c3a:	2136      	movs	r1, #54	; 0x36
 8006c3c:	f7fc fad7 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006c40:	ee18 1a10 	vmov	r1, s16
 8006c44:	4638      	mov	r0, r7
        color = newColor;
 8006c46:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006c4a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006c4e:	f00b fd29 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c52:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006c56:	ee18 3a10 	vmov	r3, s16
 8006c5a:	333c      	adds	r3, #60	; 0x3c
 8006c5c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c60:	235f      	movs	r3, #95	; 0x5f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006c62:	ee18 0a10 	vmov	r0, s16
 8006c66:	a90a      	add	r1, sp, #40	; 0x28
 8006c68:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c6c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006c70:	f00b ffb2 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c74:	ee18 1a10 	vmov	r1, s16
 8006c78:	4630      	mov	r0, r6
 8006c7a:	f009 fdf9 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006c7e:	ee19 0a10 	vmov	r0, s18
 8006c82:	22f0      	movs	r2, #240	; 0xf0
 8006c84:	2121      	movs	r1, #33	; 0x21
 8006c86:	f7fc fab2 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006c8a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c8e:	aa0a      	add	r2, sp, #40	; 0x28
 8006c90:	f04f 0802 	mov.w	r8, #2
 8006c94:	a909      	add	r1, sp, #36	; 0x24
 8006c96:	ee19 0a10 	vmov	r0, s18
 8006c9a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006c9e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006ca2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ca6:	f00c f97c 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006caa:	235d      	movs	r3, #93	; 0x5d
 8006cac:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006cb0:	3710      	adds	r7, #16
        updateTextPosition();
 8006cb2:	ee19 0a10 	vmov	r0, s18
 8006cb6:	f7fc faef 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006cba:	ee19 1a10 	vmov	r1, s18
 8006cbe:	4630      	mov	r0, r6
        colorPressed = col;
 8006cc0:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006cc4:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006cc8:	f009 fdd2 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006ccc:	ee19 0a90 	vmov	r0, s19
 8006cd0:	22aa      	movs	r2, #170	; 0xaa
 8006cd2:	2121      	movs	r1, #33	; 0x21
 8006cd4:	f7fc fa8b 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cd8:	aa0a      	add	r2, sp, #40	; 0x28
 8006cda:	a909      	add	r1, sp, #36	; 0x24
 8006cdc:	ee19 0a90 	vmov	r0, s19
 8006ce0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ce4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ce8:	f00c f95b 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006cec:	235c      	movs	r3, #92	; 0x5c
 8006cee:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006cf2:	ee19 0a90 	vmov	r0, s19
 8006cf6:	f7fc facf 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006cfa:	ee19 1a90 	vmov	r1, s19
 8006cfe:	4630      	mov	r0, r6
        colorPressed = col;
 8006d00:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006d04:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006d08:	f009 fdb2 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006d0c:	ee1a 0a10 	vmov	r0, s20
 8006d10:	2264      	movs	r2, #100	; 0x64
 8006d12:	2121      	movs	r1, #33	; 0x21
 8006d14:	f7fc fa6b 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d18:	aa0a      	add	r2, sp, #40	; 0x28
 8006d1a:	a909      	add	r1, sp, #36	; 0x24
 8006d1c:	ee1a 0a10 	vmov	r0, s20
 8006d20:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006d24:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006d28:	f00c f93b 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d2c:	235b      	movs	r3, #91	; 0x5b
        updateTextPosition();
 8006d2e:	ee1a 0a10 	vmov	r0, s20
 8006d32:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006d36:	f7fc faaf 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006d3a:	4630      	mov	r0, r6
        colorPressed = col;
 8006d3c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006d40:	ee1a 1a10 	vmov	r1, s20
 8006d44:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006d48:	f009 fd92 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006d4c:	4620      	mov	r0, r4
 8006d4e:	b00d      	add	sp, #52	; 0x34
 8006d50:	ecbd 8b06 	vpop	{d8-d10}
 8006d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d58:	20012e08 	.word	0x20012e08
 8006d5c:	0802c842 	.word	0x0802c842
 8006d60:	0802c8b8 	.word	0x0802c8b8

08006d64 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006d64:	4770      	bx	lr

08006d66 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d66:	4770      	bx	lr

08006d68 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006d68:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d6a:	68c2      	ldr	r2, [r0, #12]
 8006d6c:	6844      	ldr	r4, [r0, #4]
 8006d6e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006d70:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006d72:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006d76:	07d2      	lsls	r2, r2, #31
 8006d78:	bf48      	it	mi
 8006d7a:	5962      	ldrmi	r2, [r4, r5]
 8006d7c:	689b      	ldr	r3, [r3, #8]
    }
 8006d7e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d80:	bf48      	it	mi
 8006d82:	58d3      	ldrmi	r3, [r2, r3]
 8006d84:	4718      	bx	r3

08006d86 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006d86:	6843      	ldr	r3, [r0, #4]
 8006d88:	b12b      	cbz	r3, 8006d96 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006d8a:	6883      	ldr	r3, [r0, #8]
 8006d8c:	b92b      	cbnz	r3, 8006d9a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006d8e:	68c0      	ldr	r0, [r0, #12]
 8006d90:	f000 0001 	and.w	r0, r0, #1
 8006d94:	4770      	bx	lr
 8006d96:	4618      	mov	r0, r3
 8006d98:	4770      	bx	lr
 8006d9a:	2001      	movs	r0, #1
    }
 8006d9c:	4770      	bx	lr

08006d9e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d9e:	b510      	push	{r4, lr}
 8006da0:	2110      	movs	r1, #16
 8006da2:	4604      	mov	r4, r0
 8006da4:	f023 f8a7 	bl	8029ef6 <_ZdlPvj>
 8006da8:	4620      	mov	r0, r4
 8006daa:	bd10      	pop	{r4, pc}

08006dac <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006dac:	b510      	push	{r4, lr}
 8006dae:	4b03      	ldr	r3, [pc, #12]	; (8006dbc <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006db0:	6003      	str	r3, [r0, #0]
 8006db2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006db4:	f00d faf2 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006db8:	4620      	mov	r0, r4
 8006dba:	bd10      	pop	{r4, pc}
 8006dbc:	0802e2f0 	.word	0x0802e2f0

08006dc0 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006dc0:	b507      	push	{r0, r1, r2, lr}
 8006dc2:	4b07      	ldr	r3, [pc, #28]	; (8006de0 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006dc4:	6003      	str	r3, [r0, #0]
 8006dc6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006dc8:	f00d fae8 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006dcc:	9801      	ldr	r0, [sp, #4]
 8006dce:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006dd2:	f023 f890 	bl	8029ef6 <_ZdlPvj>
 8006dd6:	9801      	ldr	r0, [sp, #4]
 8006dd8:	b003      	add	sp, #12
 8006dda:	f85d fb04 	ldr.w	pc, [sp], #4
 8006dde:	bf00      	nop
 8006de0:	0802e2f0 	.word	0x0802e2f0

08006de4 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006de4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006de6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006dea:	4299      	cmp	r1, r3
{
 8006dec:	4604      	mov	r4, r0
 8006dee:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006df0:	d103      	bne.n	8006dfa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006df2:	f00e ffd5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006df6:	f7fd fdf1 	bl	80049dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006dfa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006dfe:	429d      	cmp	r5, r3
 8006e00:	d103      	bne.n	8006e0a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006e02:	f00e ffcd 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006e06:	f7fd fe59 	bl	8004abc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006e0a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006e0e:	42a5      	cmp	r5, r4
 8006e10:	d105      	bne.n	8006e1e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006e12:	f00e ffc5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006e16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006e1a:	f7fd be3f 	b.w	8004a9c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006e1e:	bd38      	pop	{r3, r4, r5, pc}

08006e20 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e24:	ed2d 8b06 	vpush	{d8-d10}
 8006e28:	4604      	mov	r4, r0
 8006e2a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006e2c:	46a3      	mov	fp, r4
 8006e2e:	2500      	movs	r5, #0
 8006e30:	f010 fc36 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8006e34:	4b66      	ldr	r3, [pc, #408]	; (8006fd0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006e36:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e38:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006e3c:	2226      	movs	r2, #38	; 0x26
 8006e3e:	4629      	mov	r1, r5
 8006e40:	4658      	mov	r0, fp
 8006e42:	f024 f944 	bl	802b0ce <memset>
 8006e46:	4658      	mov	r0, fp
 8006e48:	f7fc f9f2 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8006e4c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006e50:	26ff      	movs	r6, #255	; 0xff
 8006e52:	4b60      	ldr	r3, [pc, #384]	; (8006fd4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006e54:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006e56:	2226      	movs	r2, #38	; 0x26
 8006e58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006e5c:	4629      	mov	r1, r5
 8006e5e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006e62:	4650      	mov	r0, sl
 8006e64:	66a5      	str	r5, [r4, #104]	; 0x68
 8006e66:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e6a:	f024 f930 	bl	802b0ce <memset>
 8006e6e:	4650      	mov	r0, sl
 8006e70:	f7fc f9de 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8006e74:	4b58      	ldr	r3, [pc, #352]	; (8006fd8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006e76:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006e78:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006e7c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006e80:	a90a      	add	r1, sp, #40	; 0x28
 8006e82:	4650      	mov	r0, sl
 8006e84:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006e88:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006e8c:	f00c fa7f 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006e90:	4648      	mov	r0, r9
 8006e92:	f7fc f9df 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006e96:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006e9a:	4b50      	ldr	r3, [pc, #320]	; (8006fdc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006e9c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006ea0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006ea4:	4638      	mov	r0, r7
 8006ea6:	f00b f93b 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8006eaa:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006eae:	4618      	mov	r0, r3
 8006eb0:	9303      	str	r3, [sp, #12]
 8006eb2:	f7fb ffbd 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006eb6:	4b4a      	ldr	r3, [pc, #296]	; (8006fe0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006eb8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006ebc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006ec0:	3324      	adds	r3, #36	; 0x24
 8006ec2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006ec6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006eca:	4640      	mov	r0, r8
 8006ecc:	f7fc f9c2 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006ed0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006ed4:	4618      	mov	r0, r3
 8006ed6:	ee08 3a10 	vmov	s16, r3
 8006eda:	f7fc f9bb 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006ede:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006ee2:	4618      	mov	r0, r3
 8006ee4:	ee08 3a90 	vmov	s17, r3
 8006ee8:	f7fc f9b4 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8006eec:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006ef0:	4618      	mov	r0, r3
 8006ef2:	ee09 3a10 	vmov	s18, r3
 8006ef6:	f00c fb8b 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006efa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006efe:	4618      	mov	r0, r3
 8006f00:	ee09 3a90 	vmov	s19, r3
 8006f04:	f00c fb84 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f08:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006f0c:	4618      	mov	r0, r3
 8006f0e:	ee0a 3a10 	vmov	s20, r3
 8006f12:	f00c fb7d 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f16:	4a33      	ldr	r2, [pc, #204]	; (8006fe4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006f18:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f1c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006f20:	4a31      	ldr	r2, [pc, #196]	; (8006fe8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f22:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f26:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006f2a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006f2e:	f00d fa2b 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f32:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f36:	462a      	mov	r2, r5
 8006f38:	4658      	mov	r0, fp
 8006f3a:	9300      	str	r3, [sp, #0]
 8006f3c:	4629      	mov	r1, r5
 8006f3e:	23f0      	movs	r3, #240	; 0xf0
 8006f40:	f7fc f962 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f44:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f46:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f4a:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f4c:	4659      	mov	r1, fp
 8006f4e:	4630      	mov	r0, r6
 8006f50:	f009 fc8e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006f54:	462a      	mov	r2, r5
 8006f56:	4650      	mov	r0, sl
 8006f58:	4629      	mov	r1, r5
 8006f5a:	f7fc f948 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006f5e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006f60:	4650      	mov	r0, sl
 8006f62:	a90a      	add	r1, sp, #40	; 0x28
 8006f64:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f68:	f00c fa11 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f6c:	4651      	mov	r1, sl
 8006f6e:	4630      	mov	r0, r6
 8006f70:	f009 fc7e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006f74:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006f78:	2156      	movs	r1, #86	; 0x56
 8006f7a:	4648      	mov	r0, r9
 8006f7c:	f7fc f937 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8006f80:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006f84:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006f88:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006f8c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006f90:	4650      	mov	r0, sl
 8006f92:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006f96:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006f9a:	4649      	mov	r1, r9
 8006f9c:	4798      	blx	r3
 8006f9e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006fa2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006fa6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006faa:	4b10      	ldr	r3, [pc, #64]	; (8006fec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006fac:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006fae:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006fb2:	b92b      	cbnz	r3, 8006fc0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006fb4:	4b0e      	ldr	r3, [pc, #56]	; (8006ff0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006fb6:	4a0f      	ldr	r2, [pc, #60]	; (8006ff4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006fb8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006fba:	480f      	ldr	r0, [pc, #60]	; (8006ff8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006fbc:	f023 fe82 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006fc0:	4b0e      	ldr	r3, [pc, #56]	; (8006ffc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006fc2:	881b      	ldrh	r3, [r3, #0]
 8006fc4:	2b26      	cmp	r3, #38	; 0x26
 8006fc6:	d81d      	bhi.n	8007004 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006fc8:	4b0d      	ldr	r3, [pc, #52]	; (8007000 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006fca:	4a0a      	ldr	r2, [pc, #40]	; (8006ff4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006fcc:	2161      	movs	r1, #97	; 0x61
 8006fce:	e7f4      	b.n	8006fba <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006fd0:	0802e2f0 	.word	0x0802e2f0
 8006fd4:	0802f218 	.word	0x0802f218
 8006fd8:	0802f3e0 	.word	0x0802f3e0
 8006fdc:	0802c8c8 	.word	0x0802c8c8
 8006fe0:	0802ef4c 	.word	0x0802ef4c
 8006fe4:	0802e2d8 	.word	0x0802e2d8
 8006fe8:	08006de5 	.word	0x08006de5
 8006fec:	20012dfc 	.word	0x20012dfc
 8006ff0:	0802c708 	.word	0x0802c708
 8006ff4:	0802c80a 	.word	0x0802c80a
 8006ff8:	0802c785 	.word	0x0802c785
 8006ffc:	20012e00 	.word	0x20012e00
 8007000:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 8007004:	4b93      	ldr	r3, [pc, #588]	; (8007254 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8007006:	2126      	movs	r1, #38	; 0x26
 8007008:	6818      	ldr	r0, [r3, #0]
 800700a:	f002 f8d3 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 800700e:	4a92      	ldr	r2, [pc, #584]	; (8007258 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8007010:	4603      	mov	r3, r0
 8007012:	2104      	movs	r1, #4
 8007014:	4650      	mov	r0, sl
 8007016:	f012 f833 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800701a:	4648      	mov	r0, r9
        wc1 = value;
 800701c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007020:	f00b fdba 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007024:	4b8d      	ldr	r3, [pc, #564]	; (800725c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8007026:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8007028:	a90a      	add	r1, sp, #40	; 0x28
 800702a:	2327      	movs	r3, #39	; 0x27
 800702c:	4648      	mov	r0, r9
 800702e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007032:	f00b fdd1 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007036:	4649      	mov	r1, r9
 8007038:	4630      	mov	r0, r6
 800703a:	f009 fc19 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800703e:	230a      	movs	r3, #10
 8007040:	9300      	str	r3, [sp, #0]
 8007042:	2232      	movs	r2, #50	; 0x32
 8007044:	23f0      	movs	r3, #240	; 0xf0
 8007046:	4629      	mov	r1, r5
 8007048:	4638      	mov	r0, r7
 800704a:	f7fc f8dd 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800704e:	9b03      	ldr	r3, [sp, #12]
 8007050:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007054:	22a0      	movs	r2, #160	; 0xa0
 8007056:	4611      	mov	r1, r2
 8007058:	4638      	mov	r0, r7
 800705a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800705e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007062:	f00b f973 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007066:	22a0      	movs	r2, #160	; 0xa0
 8007068:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800706c:	4638      	mov	r0, r7
 800706e:	f00b f978 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007072:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007076:	2b20      	cmp	r3, #32
 8007078:	d005      	beq.n	8007086 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800707a:	2320      	movs	r3, #32
 800707c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007080:	4638      	mov	r0, r7
 8007082:	f00b f86d 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007086:	4638      	mov	r0, r7
 8007088:	2101      	movs	r1, #1
 800708a:	f00b f975 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800708e:	4639      	mov	r1, r7
 8007090:	4630      	mov	r0, r6
 8007092:	ad04      	add	r5, sp, #16
        color = newColor;
 8007094:	f04f 37ff 	mov.w	r7, #4294967295
 8007098:	f009 fbea 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800709c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80070a0:	2223      	movs	r2, #35	; 0x23
 80070a2:	4640      	mov	r0, r8
 80070a4:	2145      	movs	r1, #69	; 0x45
 80070a6:	f7fc f8a2 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80070aa:	4641      	mov	r1, r8
 80070ac:	4628      	mov	r0, r5
        color = newColor;
 80070ae:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80070b2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80070b6:	f00b faf5 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070ba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80070be:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80070c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070c6:	f8df 9194 	ldr.w	r9, [pc, #404]	; 800725c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80070ca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80070ce:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80070d0:	a90a      	add	r1, sp, #40	; 0x28
 80070d2:	4640      	mov	r0, r8
 80070d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070d8:	f00b fd7e 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070dc:	4641      	mov	r1, r8
 80070de:	4630      	mov	r0, r6
 80070e0:	f009 fbc6 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80070e4:	ee18 0a10 	vmov	r0, s16
 80070e8:	220c      	movs	r2, #12
 80070ea:	2136      	movs	r1, #54	; 0x36
 80070ec:	f7fc f87f 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80070f0:	ee18 1a10 	vmov	r1, s16
 80070f4:	4628      	mov	r0, r5
        color = newColor;
 80070f6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80070fa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80070fe:	f00b fad1 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007102:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007106:	ee18 3a10 	vmov	r3, s16
 800710a:	333c      	adds	r3, #60	; 0x3c
 800710c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007110:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8007112:	ee18 0a10 	vmov	r0, s16
 8007116:	a90a      	add	r1, sp, #40	; 0x28
 8007118:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800711c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007120:	f00b fd5a 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007124:	ee18 1a10 	vmov	r1, s16
 8007128:	4630      	mov	r0, r6
 800712a:	f009 fba1 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 800712e:	ee18 0a90 	vmov	r0, s17
 8007132:	223c      	movs	r2, #60	; 0x3c
 8007134:	2121      	movs	r1, #33	; 0x21
 8007136:	f7fc f85a 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800713a:	ee18 1a90 	vmov	r1, s17
 800713e:	4628      	mov	r0, r5
        color = newColor;
 8007140:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007144:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007148:	f00b faac 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800714c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007150:	ee18 3a90 	vmov	r3, s17
 8007154:	333c      	adds	r3, #60	; 0x3c
 8007156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800715a:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800715c:	ee18 0a90 	vmov	r0, s17
 8007160:	a90a      	add	r1, sp, #40	; 0x28
 8007162:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007166:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800716a:	f00b fd35 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800716e:	ee18 1a90 	vmov	r1, s17
 8007172:	4630      	mov	r0, r6
 8007174:	f009 fb7c 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007178:	ee19 0a10 	vmov	r0, s18
 800717c:	22f0      	movs	r2, #240	; 0xf0
 800717e:	2121      	movs	r1, #33	; 0x21
 8007180:	f7fc f835 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8007184:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007188:	aa0a      	add	r2, sp, #40	; 0x28
 800718a:	f04f 0802 	mov.w	r8, #2
 800718e:	a909      	add	r1, sp, #36	; 0x24
 8007190:	ee19 0a10 	vmov	r0, s18
 8007194:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007198:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800719c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80071a0:	f00b feff 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80071a4:	234a      	movs	r3, #74	; 0x4a
 80071a6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80071aa:	3510      	adds	r5, #16
        updateTextPosition();
 80071ac:	ee19 0a10 	vmov	r0, s18
 80071b0:	f7fc f872 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80071b4:	ee19 1a10 	vmov	r1, s18
 80071b8:	4630      	mov	r0, r6
        colorPressed = col;
 80071ba:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80071be:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80071c2:	f009 fb55 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80071c6:	ee19 0a90 	vmov	r0, s19
 80071ca:	22aa      	movs	r2, #170	; 0xaa
 80071cc:	2121      	movs	r1, #33	; 0x21
 80071ce:	f7fc f80e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80071d2:	aa0a      	add	r2, sp, #40	; 0x28
 80071d4:	a909      	add	r1, sp, #36	; 0x24
 80071d6:	ee19 0a90 	vmov	r0, s19
 80071da:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80071de:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80071e2:	f00b fede 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80071e6:	2349      	movs	r3, #73	; 0x49
 80071e8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80071ec:	ee19 0a90 	vmov	r0, s19
 80071f0:	f7fc f852 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80071f4:	ee19 1a90 	vmov	r1, s19
 80071f8:	4630      	mov	r0, r6
        colorPressed = col;
 80071fa:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80071fe:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8007202:	f009 fb35 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007206:	ee1a 0a10 	vmov	r0, s20
 800720a:	2264      	movs	r2, #100	; 0x64
 800720c:	2121      	movs	r1, #33	; 0x21
 800720e:	f7fb ffee 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007212:	aa0a      	add	r2, sp, #40	; 0x28
 8007214:	a909      	add	r1, sp, #36	; 0x24
 8007216:	ee1a 0a10 	vmov	r0, s20
 800721a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800721e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007222:	f00b febe 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007226:	2348      	movs	r3, #72	; 0x48
        updateTextPosition();
 8007228:	ee1a 0a10 	vmov	r0, s20
 800722c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007230:	f7fc f832 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007234:	4630      	mov	r0, r6
        colorPressed = col;
 8007236:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800723a:	ee1a 1a10 	vmov	r1, s20
 800723e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8007242:	f009 fb15 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007246:	4620      	mov	r0, r4
 8007248:	b00d      	add	sp, #52	; 0x34
 800724a:	ecbd 8b06 	vpop	{d8-d10}
 800724e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007252:	bf00      	nop
 8007254:	20012e08 	.word	0x20012e08
 8007258:	0802c842 	.word	0x0802c842
 800725c:	0802c8b8 	.word	0x0802c8b8

08007260 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007260:	4770      	bx	lr

08007262 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007262:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007264:	68c2      	ldr	r2, [r0, #12]
 8007266:	6844      	ldr	r4, [r0, #4]
 8007268:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800726a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800726c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007270:	07d2      	lsls	r2, r2, #31
 8007272:	bf48      	it	mi
 8007274:	5962      	ldrmi	r2, [r4, r5]
 8007276:	689b      	ldr	r3, [r3, #8]
    }
 8007278:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800727a:	bf48      	it	mi
 800727c:	58d3      	ldrmi	r3, [r2, r3]
 800727e:	4718      	bx	r3

08007280 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007280:	6843      	ldr	r3, [r0, #4]
 8007282:	b12b      	cbz	r3, 8007290 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007284:	6883      	ldr	r3, [r0, #8]
 8007286:	b92b      	cbnz	r3, 8007294 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007288:	68c0      	ldr	r0, [r0, #12]
 800728a:	f000 0001 	and.w	r0, r0, #1
 800728e:	4770      	bx	lr
 8007290:	4618      	mov	r0, r3
 8007292:	4770      	bx	lr
 8007294:	2001      	movs	r0, #1
    }
 8007296:	4770      	bx	lr

08007298 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007298:	b510      	push	{r4, lr}
 800729a:	2110      	movs	r1, #16
 800729c:	4604      	mov	r4, r0
 800729e:	f022 fe2a 	bl	8029ef6 <_ZdlPvj>
 80072a2:	4620      	mov	r0, r4
 80072a4:	bd10      	pop	{r4, pc}

080072a6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80072a6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80072aa:	f002 b941 	b.w	8009530 <_ZN17Gauge_with_Values10initializeEv>

080072ae <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80072ae:	3098      	adds	r0, #152	; 0x98
 80072b0:	4288      	cmp	r0, r1
{
 80072b2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80072b4:	d105      	bne.n	80072c2 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80072b6:	f00e fd73 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80072ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80072be:	f7fd bbdd 	b.w	8004a7c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80072c2:	bd08      	pop	{r3, pc}

080072c4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80072c4:	b510      	push	{r4, lr}
 80072c6:	4b07      	ldr	r3, [pc, #28]	; (80072e4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80072c8:	6003      	str	r3, [r0, #0]
 80072ca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80072cc:	f00d f866 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80072d0:	4b05      	ldr	r3, [pc, #20]	; (80072e8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80072d2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80072d6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80072da:	f7fe fe25 	bl	8005f28 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80072de:	4620      	mov	r0, r4
 80072e0:	bd10      	pop	{r4, pc}
 80072e2:	bf00      	nop
 80072e4:	0802e33c 	.word	0x0802e33c
 80072e8:	0802e8a4 	.word	0x0802e8a4

080072ec <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80072ec:	b510      	push	{r4, lr}
 80072ee:	4604      	mov	r4, r0
}
 80072f0:	f7ff ffe8 	bl	80072c4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80072f4:	4620      	mov	r0, r4
 80072f6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80072fa:	f022 fdfc 	bl	8029ef6 <_ZdlPvj>
 80072fe:	4620      	mov	r0, r4
 8007300:	bd10      	pop	{r4, pc}
	...

08007304 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007308:	ed2d 8b04 	vpush	{d8-d9}
 800730c:	4604      	mov	r4, r0
 800730e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007310:	46a1      	mov	r9, r4
 8007312:	2500      	movs	r5, #0
 8007314:	f010 f9c4 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8007318:	4bad      	ldr	r3, [pc, #692]	; (80075d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 800731a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800731c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007320:	2226      	movs	r2, #38	; 0x26
 8007322:	4629      	mov	r1, r5
 8007324:	4648      	mov	r0, r9
 8007326:	f023 fed2 	bl	802b0ce <memset>
 800732a:	4648      	mov	r0, r9
 800732c:	f7fb ff80 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8007330:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007334:	26ff      	movs	r6, #255	; 0xff
 8007336:	4ba7      	ldr	r3, [pc, #668]	; (80075d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8007338:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800733a:	2226      	movs	r2, #38	; 0x26
 800733c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007340:	4629      	mov	r1, r5
 8007342:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007346:	4640      	mov	r0, r8
 8007348:	66a5      	str	r5, [r4, #104]	; 0x68
 800734a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800734e:	f023 febe 	bl	802b0ce <memset>
 8007352:	4640      	mov	r0, r8
 8007354:	f7fb ff6c 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8007358:	4b9f      	ldr	r3, [pc, #636]	; (80075d8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 800735a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800735c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007360:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007364:	a90a      	add	r1, sp, #40	; 0x28
 8007366:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800736a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800736c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007370:	f00c f80d 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007374:	4658      	mov	r0, fp
 8007376:	f00c f94b 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800737a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800737e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8007382:	4618      	mov	r0, r3
 8007384:	ee08 3a90 	vmov	s17, r3
 8007388:	f7fb ff64 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800738c:	4638      	mov	r0, r7
 800738e:	f00a fec7 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8007392:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007396:	4618      	mov	r0, r3
 8007398:	9303      	str	r3, [sp, #12]
 800739a:	f7fb fd49 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800739e:	4b8f      	ldr	r3, [pc, #572]	; (80075dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80073a0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80073a4:	3324      	adds	r3, #36	; 0x24
 80073a6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80073aa:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80073ae:	4618      	mov	r0, r3
 80073b0:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80073b4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80073b8:	ee08 3a10 	vmov	s16, r3
 80073bc:	f7fb ff4a 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80073c0:	4650      	mov	r0, sl
 80073c2:	f7fb ff47 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80073c6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80073ca:	4618      	mov	r0, r3
 80073cc:	ee09 3a10 	vmov	s18, r3
 80073d0:	f002 f8a4 	bl	800951c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80073d4:	4a82      	ldr	r2, [pc, #520]	; (80075e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
 80073d6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073da:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80073de:	4a81      	ldr	r2, [pc, #516]	; (80075e4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073e0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073e4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80073e8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80073ec:	f00c ffcc 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073f0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073f4:	462a      	mov	r2, r5
 80073f6:	4648      	mov	r0, r9
 80073f8:	9300      	str	r3, [sp, #0]
 80073fa:	4629      	mov	r1, r5
 80073fc:	23f0      	movs	r3, #240	; 0xf0
 80073fe:	f7fb ff03 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007402:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007404:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007408:	66a3      	str	r3, [r4, #104]	; 0x68
 800740a:	4649      	mov	r1, r9
 800740c:	4630      	mov	r0, r6
 800740e:	f009 fa2f 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007412:	462a      	mov	r2, r5
 8007414:	4640      	mov	r0, r8
 8007416:	4629      	mov	r1, r5
 8007418:	f7fb fee9 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800741c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800741e:	4640      	mov	r0, r8
 8007420:	a90a      	add	r1, sp, #40	; 0x28
 8007422:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007426:	f00b ffb2 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800742a:	4641      	mov	r1, r8
 800742c:	4630      	mov	r0, r6
 800742e:	f009 fa1f 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007432:	4658      	mov	r0, fp
 8007434:	f240 1201 	movw	r2, #257	; 0x101
 8007438:	2121      	movs	r1, #33	; 0x21
 800743a:	f7fb fed8 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800743e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007440:	aa0a      	add	r2, sp, #40	; 0x28
 8007442:	a909      	add	r1, sp, #36	; 0x24
 8007444:	4658      	mov	r0, fp
 8007446:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800744a:	2302      	movs	r3, #2
 800744c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007450:	f00b fda7 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007454:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 8007456:	4658      	mov	r0, fp
 8007458:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800745c:	f7fb ff1c 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007460:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007464:	3314      	adds	r3, #20
        color = col;
 8007466:	f04f 39ff 	mov.w	r9, #4294967295
 800746a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800746e:	4659      	mov	r1, fp
 8007470:	4630      	mov	r0, r6
        colorPressed = col;
 8007472:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8007476:	f009 f9fb 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800747a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800747e:	223c      	movs	r2, #60	; 0x3c
 8007480:	ee18 0a90 	vmov	r0, s17
 8007484:	2117      	movs	r1, #23
 8007486:	f7fb feb2 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800748a:	ee18 1a90 	vmov	r1, s17
 800748e:	4640      	mov	r0, r8
        color = newColor;
 8007490:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007494:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007498:	f00b f904 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800749c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80074a0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80074a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80074a8:	f04f 0b32 	mov.w	fp, #50	; 0x32
 80074ac:	4b4e      	ldr	r3, [pc, #312]	; (80075e8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 80074ae:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80074b0:	ee18 0a90 	vmov	r0, s17
 80074b4:	a90a      	add	r1, sp, #40	; 0x28
 80074b6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80074ba:	f00b fb8d 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074be:	ee18 1a90 	vmov	r1, s17
 80074c2:	4630      	mov	r0, r6
 80074c4:	f009 f9d4 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80074c8:	230a      	movs	r3, #10
 80074ca:	9300      	str	r3, [sp, #0]
 80074cc:	465a      	mov	r2, fp
 80074ce:	23f0      	movs	r3, #240	; 0xf0
 80074d0:	4629      	mov	r1, r5
 80074d2:	4638      	mov	r0, r7
 80074d4:	f7fb fe98 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074d8:	9b03      	ldr	r3, [sp, #12]
 80074da:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074de:	22a0      	movs	r2, #160	; 0xa0
 80074e0:	4611      	mov	r1, r2
 80074e2:	4638      	mov	r0, r7
 80074e4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80074e8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80074ec:	f00a ff2e 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074f0:	22a0      	movs	r2, #160	; 0xa0
 80074f2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80074f6:	4638      	mov	r0, r7
 80074f8:	f00a ff33 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80074fc:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007500:	2b20      	cmp	r3, #32
 8007502:	d005      	beq.n	8007510 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x20c>
        lineWidthQ5 = widthQ5;
 8007504:	2320      	movs	r3, #32
 8007506:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800750a:	4638      	mov	r0, r7
 800750c:	f00a fe28 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007510:	4638      	mov	r0, r7
 8007512:	2101      	movs	r1, #1
 8007514:	f00a ff30 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007518:	4639      	mov	r1, r7
 800751a:	4630      	mov	r0, r6
 800751c:	f009 f9a8 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007520:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007522:	ee18 0a10 	vmov	r0, s16
 8007526:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8007528:	f04f 39ff 	mov.w	r9, #4294967295
 800752c:	2145      	movs	r1, #69	; 0x45
 800752e:	f7fb fe5e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007532:	ee18 1a10 	vmov	r1, s16
 8007536:	4640      	mov	r0, r8
        color = newColor;
 8007538:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800753c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007540:	f00b f8b0 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007544:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007548:	ee18 3a10 	vmov	r3, s16
 800754c:	333c      	adds	r3, #60	; 0x3c
 800754e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007552:	4f25      	ldr	r7, [pc, #148]	; (80075e8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 8007554:	970a      	str	r7, [sp, #40]	; 0x28
 8007556:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8007558:	ee18 0a10 	vmov	r0, s16
 800755c:	a90a      	add	r1, sp, #40	; 0x28
 800755e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007562:	f00b fb39 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007566:	ee18 1a10 	vmov	r1, s16
 800756a:	4630      	mov	r0, r6
 800756c:	f009 f980 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007570:	220c      	movs	r2, #12
 8007572:	4650      	mov	r0, sl
 8007574:	2136      	movs	r1, #54	; 0x36
 8007576:	f7fb fe3a 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800757a:	4651      	mov	r1, sl
 800757c:	4640      	mov	r0, r8
        color = newColor;
 800757e:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8007582:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8007586:	f00b f88d 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800758a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800758e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007592:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007596:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8007598:	a90a      	add	r1, sp, #40	; 0x28
 800759a:	4650      	mov	r0, sl
 800759c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075a0:	970a      	str	r7, [sp, #40]	; 0x28
 80075a2:	f00b fb19 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075a6:	4651      	mov	r1, sl
 80075a8:	4630      	mov	r0, r6
 80075aa:	f009 f961 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80075ae:	ee19 0a10 	vmov	r0, s18
 80075b2:	224e      	movs	r2, #78	; 0x4e
 80075b4:	4629      	mov	r1, r5
 80075b6:	f7fb fe1a 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80075ba:	4630      	mov	r0, r6
 80075bc:	ee19 1a10 	vmov	r1, s18
 80075c0:	f009 f956 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80075c4:	4620      	mov	r0, r4
 80075c6:	b00d      	add	sp, #52	; 0x34
 80075c8:	ecbd 8b04 	vpop	{d8-d9}
 80075cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075d0:	0802e33c 	.word	0x0802e33c
 80075d4:	0802f218 	.word	0x0802f218
 80075d8:	0802f3e0 	.word	0x0802f3e0
 80075dc:	0802ef4c 	.word	0x0802ef4c
 80075e0:	0802e324 	.word	0x0802e324
 80075e4:	080072af 	.word	0x080072af
 80075e8:	0802c8b8 	.word	0x0802c8b8

080075ec <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80075ec:	4770      	bx	lr

080075ee <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80075ee:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80075f0:	68c2      	ldr	r2, [r0, #12]
 80075f2:	6844      	ldr	r4, [r0, #4]
 80075f4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80075f6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80075f8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80075fc:	07d2      	lsls	r2, r2, #31
 80075fe:	bf48      	it	mi
 8007600:	5962      	ldrmi	r2, [r4, r5]
 8007602:	689b      	ldr	r3, [r3, #8]
    }
 8007604:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007606:	bf48      	it	mi
 8007608:	58d3      	ldrmi	r3, [r2, r3]
 800760a:	4718      	bx	r3

0800760c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800760c:	6843      	ldr	r3, [r0, #4]
 800760e:	b12b      	cbz	r3, 800761c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007610:	6883      	ldr	r3, [r0, #8]
 8007612:	b92b      	cbnz	r3, 8007620 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007614:	68c0      	ldr	r0, [r0, #12]
 8007616:	f000 0001 	and.w	r0, r0, #1
 800761a:	4770      	bx	lr
 800761c:	4618      	mov	r0, r3
 800761e:	4770      	bx	lr
 8007620:	2001      	movs	r0, #1
    }
 8007622:	4770      	bx	lr

08007624 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007624:	b510      	push	{r4, lr}
 8007626:	2110      	movs	r1, #16
 8007628:	4604      	mov	r4, r0
 800762a:	f022 fc64 	bl	8029ef6 <_ZdlPvj>
 800762e:	4620      	mov	r0, r4
 8007630:	bd10      	pop	{r4, pc}

08007632 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007632:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8007636:	f001 bf7b 	b.w	8009530 <_ZN17Gauge_with_Values10initializeEv>

0800763a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800763a:	3098      	adds	r0, #152	; 0x98
 800763c:	4288      	cmp	r0, r1
{
 800763e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007640:	d105      	bne.n	800764e <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007642:	f00e fbad 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007646:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800764a:	f7fd ba17 	b.w	8004a7c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800764e:	bd08      	pop	{r3, pc}

08007650 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007650:	b510      	push	{r4, lr}
 8007652:	4b07      	ldr	r3, [pc, #28]	; (8007670 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8007654:	6003      	str	r3, [r0, #0]
 8007656:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007658:	f00c fea0 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 800765c:	4b05      	ldr	r3, [pc, #20]	; (8007674 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800765e:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8007662:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007666:	f7fe fc5f 	bl	8005f28 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800766a:	4620      	mov	r0, r4
 800766c:	bd10      	pop	{r4, pc}
 800766e:	bf00      	nop
 8007670:	0802e388 	.word	0x0802e388
 8007674:	0802e8a4 	.word	0x0802e8a4

08007678 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007678:	b510      	push	{r4, lr}
 800767a:	4604      	mov	r4, r0
}
 800767c:	f7ff ffe8 	bl	8007650 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8007680:	4620      	mov	r0, r4
 8007682:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007686:	f022 fc36 	bl	8029ef6 <_ZdlPvj>
 800768a:	4620      	mov	r0, r4
 800768c:	bd10      	pop	{r4, pc}
	...

08007690 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8007690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007694:	ed2d 8b04 	vpush	{d8-d9}
 8007698:	4604      	mov	r4, r0
 800769a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 800769c:	46a1      	mov	r9, r4
 800769e:	2500      	movs	r5, #0
 80076a0:	f00f fffe 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 80076a4:	4bac      	ldr	r3, [pc, #688]	; (8007958 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 80076a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80076a8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80076ac:	2226      	movs	r2, #38	; 0x26
 80076ae:	4629      	mov	r1, r5
 80076b0:	4648      	mov	r0, r9
 80076b2:	f023 fd0c 	bl	802b0ce <memset>
 80076b6:	4648      	mov	r0, r9
 80076b8:	f7fb fdba 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 80076bc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80076c0:	26ff      	movs	r6, #255	; 0xff
 80076c2:	4ba6      	ldr	r3, [pc, #664]	; (800795c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80076c4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80076c6:	2226      	movs	r2, #38	; 0x26
 80076c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80076cc:	4629      	mov	r1, r5
 80076ce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80076d2:	4640      	mov	r0, r8
 80076d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80076d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076da:	f023 fcf8 	bl	802b0ce <memset>
 80076de:	4640      	mov	r0, r8
 80076e0:	f7fb fda6 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 80076e4:	4b9e      	ldr	r3, [pc, #632]	; (8007960 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80076e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80076e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80076ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80076f0:	a90a      	add	r1, sp, #40	; 0x28
 80076f2:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80076f4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80076f8:	f00b fe49 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076fc:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007700:	4618      	mov	r0, r3
 8007702:	ee08 3a10 	vmov	s16, r3
 8007706:	f00b ff83 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800770a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800770e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8007712:	4618      	mov	r0, r3
 8007714:	ee08 3a90 	vmov	s17, r3
 8007718:	f7fb fd9c 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800771c:	4638      	mov	r0, r7
 800771e:	f00a fcff 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8007722:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007726:	4618      	mov	r0, r3
 8007728:	9303      	str	r3, [sp, #12]
 800772a:	f7fb fb81 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800772e:	4b8d      	ldr	r3, [pc, #564]	; (8007964 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8007730:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007734:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8007738:	3324      	adds	r3, #36	; 0x24
 800773a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800773e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007742:	4658      	mov	r0, fp
 8007744:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007748:	f7fb fd84 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800774c:	4650      	mov	r0, sl
 800774e:	f7fb fd81 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007752:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8007756:	4618      	mov	r0, r3
 8007758:	ee09 3a10 	vmov	s18, r3
 800775c:	f001 fede 	bl	800951c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007760:	4a81      	ldr	r2, [pc, #516]	; (8007968 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 8007762:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007766:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800776a:	4a80      	ldr	r2, [pc, #512]	; (800796c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800776c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007770:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007774:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007778:	f00c fe06 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800777c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007780:	462a      	mov	r2, r5
 8007782:	4648      	mov	r0, r9
 8007784:	9300      	str	r3, [sp, #0]
 8007786:	4629      	mov	r1, r5
 8007788:	23f0      	movs	r3, #240	; 0xf0
 800778a:	f7fb fd3d 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800778e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007790:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007794:	66a3      	str	r3, [r4, #104]	; 0x68
 8007796:	4649      	mov	r1, r9
 8007798:	4630      	mov	r0, r6
 800779a:	f009 f869 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800779e:	462a      	mov	r2, r5
 80077a0:	4640      	mov	r0, r8
 80077a2:	4629      	mov	r1, r5
 80077a4:	f7fb fd23 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80077a8:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80077aa:	4640      	mov	r0, r8
 80077ac:	a90a      	add	r1, sp, #40	; 0x28
 80077ae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077b2:	f00b fdec 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077b6:	4641      	mov	r1, r8
 80077b8:	4630      	mov	r0, r6
 80077ba:	f009 f859 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80077be:	ee18 0a10 	vmov	r0, s16
 80077c2:	f240 1201 	movw	r2, #257	; 0x101
 80077c6:	2121      	movs	r1, #33	; 0x21
 80077c8:	f7fb fd11 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80077cc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077ce:	aa0a      	add	r2, sp, #40	; 0x28
 80077d0:	a909      	add	r1, sp, #36	; 0x24
 80077d2:	ee18 0a10 	vmov	r0, s16
 80077d6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80077da:	2302      	movs	r3, #2
 80077dc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077e0:	f00b fbdf 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80077e4:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 80077e6:	ee18 0a10 	vmov	r0, s16
 80077ea:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80077ee:	f7fb fd53 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80077f2:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80077f6:	3314      	adds	r3, #20
        color = col;
 80077f8:	f04f 39ff 	mov.w	r9, #4294967295
 80077fc:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007800:	ee18 1a10 	vmov	r1, s16
 8007804:	4630      	mov	r0, r6
        colorPressed = col;
 8007806:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800780a:	f009 f831 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800780e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007812:	223c      	movs	r2, #60	; 0x3c
 8007814:	ee18 0a90 	vmov	r0, s17
 8007818:	2117      	movs	r1, #23
 800781a:	f7fb fce8 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800781e:	ee18 1a90 	vmov	r1, s17
 8007822:	4640      	mov	r0, r8
        color = newColor;
 8007824:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007828:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800782c:	f00a ff3a 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007830:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007834:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007838:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800783c:	4b4c      	ldr	r3, [pc, #304]	; (8007970 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800783e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8007840:	ee18 0a90 	vmov	r0, s17
 8007844:	232e      	movs	r3, #46	; 0x2e
 8007846:	a90a      	add	r1, sp, #40	; 0x28
 8007848:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800784c:	f00b f9c4 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007850:	ee18 1a90 	vmov	r1, s17
 8007854:	4630      	mov	r0, r6
 8007856:	f009 f80b 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800785a:	230a      	movs	r3, #10
 800785c:	9300      	str	r3, [sp, #0]
 800785e:	2232      	movs	r2, #50	; 0x32
 8007860:	23f0      	movs	r3, #240	; 0xf0
 8007862:	4629      	mov	r1, r5
 8007864:	4638      	mov	r0, r7
 8007866:	f7fb fccf 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800786a:	9b03      	ldr	r3, [sp, #12]
 800786c:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007870:	22a0      	movs	r2, #160	; 0xa0
 8007872:	4611      	mov	r1, r2
 8007874:	4638      	mov	r0, r7
 8007876:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800787a:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800787e:	f00a fd65 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007882:	22a0      	movs	r2, #160	; 0xa0
 8007884:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007888:	4638      	mov	r0, r7
 800788a:	f00a fd6a 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800788e:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007892:	2b20      	cmp	r3, #32
 8007894:	d005      	beq.n	80078a2 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8007896:	2320      	movs	r3, #32
 8007898:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800789c:	4638      	mov	r0, r7
 800789e:	f00a fc5f 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80078a2:	4638      	mov	r0, r7
 80078a4:	2101      	movs	r1, #1
 80078a6:	f00a fd67 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80078aa:	4639      	mov	r1, r7
 80078ac:	4630      	mov	r0, r6
 80078ae:	f008 ffdf 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80078b2:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80078b4:	2223      	movs	r2, #35	; 0x23
 80078b6:	4658      	mov	r0, fp
        color = newColor;
 80078b8:	f04f 39ff 	mov.w	r9, #4294967295
 80078bc:	2145      	movs	r1, #69	; 0x45
 80078be:	f7fb fc96 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80078c2:	4659      	mov	r1, fp
 80078c4:	4640      	mov	r0, r8
        color = newColor;
 80078c6:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80078ca:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80078ce:	f00a fee9 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078d2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80078d6:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80078da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078de:	4f24      	ldr	r7, [pc, #144]	; (8007970 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80078e0:	970a      	str	r7, [sp, #40]	; 0x28
 80078e2:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80078e4:	a90a      	add	r1, sp, #40	; 0x28
 80078e6:	4658      	mov	r0, fp
 80078e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078ec:	f00b f974 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078f0:	4659      	mov	r1, fp
 80078f2:	4630      	mov	r0, r6
 80078f4:	f008 ffbc 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80078f8:	220c      	movs	r2, #12
 80078fa:	4650      	mov	r0, sl
 80078fc:	2136      	movs	r1, #54	; 0x36
 80078fe:	f7fb fc76 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8007902:	4651      	mov	r1, sl
 8007904:	4640      	mov	r0, r8
        color = newColor;
 8007906:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800790a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800790e:	f00a fec9 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007912:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007916:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800791a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800791e:	2330      	movs	r3, #48	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007920:	a90a      	add	r1, sp, #40	; 0x28
 8007922:	4650      	mov	r0, sl
 8007924:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007928:	970a      	str	r7, [sp, #40]	; 0x28
 800792a:	f00b f955 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800792e:	4651      	mov	r1, sl
 8007930:	4630      	mov	r0, r6
 8007932:	f008 ff9d 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007936:	ee19 0a10 	vmov	r0, s18
 800793a:	224e      	movs	r2, #78	; 0x4e
 800793c:	4629      	mov	r1, r5
 800793e:	f7fb fc56 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8007942:	4630      	mov	r0, r6
 8007944:	ee19 1a10 	vmov	r1, s18
 8007948:	f008 ff92 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800794c:	4620      	mov	r0, r4
 800794e:	b00d      	add	sp, #52	; 0x34
 8007950:	ecbd 8b04 	vpop	{d8-d9}
 8007954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007958:	0802e388 	.word	0x0802e388
 800795c:	0802f218 	.word	0x0802f218
 8007960:	0802f3e0 	.word	0x0802f3e0
 8007964:	0802ef4c 	.word	0x0802ef4c
 8007968:	0802e370 	.word	0x0802e370
 800796c:	0800763b 	.word	0x0800763b
 8007970:	0802c8b8 	.word	0x0802c8b8

08007974 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8007974:	4770      	bx	lr

08007976 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007976:	4770      	bx	lr

08007978 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007978:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800797a:	68c2      	ldr	r2, [r0, #12]
 800797c:	6844      	ldr	r4, [r0, #4]
 800797e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007980:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007982:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007986:	07d2      	lsls	r2, r2, #31
 8007988:	bf48      	it	mi
 800798a:	5962      	ldrmi	r2, [r4, r5]
 800798c:	689b      	ldr	r3, [r3, #8]
    }
 800798e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007990:	bf48      	it	mi
 8007992:	58d3      	ldrmi	r3, [r2, r3]
 8007994:	4718      	bx	r3

08007996 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007996:	6843      	ldr	r3, [r0, #4]
 8007998:	b12b      	cbz	r3, 80079a6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800799a:	6883      	ldr	r3, [r0, #8]
 800799c:	b92b      	cbnz	r3, 80079aa <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800799e:	68c0      	ldr	r0, [r0, #12]
 80079a0:	f000 0001 	and.w	r0, r0, #1
 80079a4:	4770      	bx	lr
 80079a6:	4618      	mov	r0, r3
 80079a8:	4770      	bx	lr
 80079aa:	2001      	movs	r0, #1
    }
 80079ac:	4770      	bx	lr

080079ae <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80079ae:	b510      	push	{r4, lr}
 80079b0:	2110      	movs	r1, #16
 80079b2:	4604      	mov	r4, r0
 80079b4:	f022 fa9f 	bl	8029ef6 <_ZdlPvj>
 80079b8:	4620      	mov	r0, r4
 80079ba:	bd10      	pop	{r4, pc}

080079bc <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80079bc:	b510      	push	{r4, lr}
 80079be:	4b03      	ldr	r3, [pc, #12]	; (80079cc <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80079c0:	6003      	str	r3, [r0, #0]
 80079c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80079c4:	f00c fcea 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80079c8:	4620      	mov	r0, r4
 80079ca:	bd10      	pop	{r4, pc}
 80079cc:	0802e3d4 	.word	0x0802e3d4

080079d0 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80079d0:	b507      	push	{r0, r1, r2, lr}
 80079d2:	4b07      	ldr	r3, [pc, #28]	; (80079f0 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80079d4:	6003      	str	r3, [r0, #0]
 80079d6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80079d8:	f00c fce0 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80079dc:	9801      	ldr	r0, [sp, #4]
 80079de:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80079e2:	f022 fa88 	bl	8029ef6 <_ZdlPvj>
 80079e6:	9801      	ldr	r0, [sp, #4]
 80079e8:	b003      	add	sp, #12
 80079ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80079ee:	bf00      	nop
 80079f0:	0802e3d4 	.word	0x0802e3d4

080079f4 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80079f4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80079f6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80079fa:	4299      	cmp	r1, r3
{
 80079fc:	4604      	mov	r4, r0
 80079fe:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007a00:	d103      	bne.n	8007a0a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a02:	f00e f9cd 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007a06:	f7fc ffe9 	bl	80049dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8007a0a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007a0e:	429d      	cmp	r5, r3
 8007a10:	d103      	bne.n	8007a1a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007a12:	f00e f9c5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007a16:	f7fd f801 	bl	8004a1c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8007a1a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8007a1e:	42a5      	cmp	r5, r4
 8007a20:	d105      	bne.n	8007a2e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007a22:	f00e f9bd 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8007a26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8007a2a:	f7fd b807 	b.w	8004a3c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8007a2e:	bd38      	pop	{r3, r4, r5, pc}

08007a30 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a34:	ed2d 8b06 	vpush	{d8-d10}
 8007a38:	4604      	mov	r4, r0
 8007a3a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8007a3c:	46a3      	mov	fp, r4
 8007a3e:	2500      	movs	r5, #0
 8007a40:	f00f fe2e 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8007a44:	4b66      	ldr	r3, [pc, #408]	; (8007be0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8007a46:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a48:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007a4c:	2226      	movs	r2, #38	; 0x26
 8007a4e:	4629      	mov	r1, r5
 8007a50:	4658      	mov	r0, fp
 8007a52:	f023 fb3c 	bl	802b0ce <memset>
 8007a56:	4658      	mov	r0, fp
 8007a58:	f7fb fbea 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8007a5c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007a60:	26ff      	movs	r6, #255	; 0xff
 8007a62:	4b60      	ldr	r3, [pc, #384]	; (8007be4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8007a64:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007a66:	2226      	movs	r2, #38	; 0x26
 8007a68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007a6c:	4629      	mov	r1, r5
 8007a6e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007a72:	4650      	mov	r0, sl
 8007a74:	66a5      	str	r5, [r4, #104]	; 0x68
 8007a76:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a7a:	f023 fb28 	bl	802b0ce <memset>
 8007a7e:	4650      	mov	r0, sl
 8007a80:	f7fb fbd6 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8007a84:	4b58      	ldr	r3, [pc, #352]	; (8007be8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8007a86:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007a88:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007a8c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007a90:	a90a      	add	r1, sp, #40	; 0x28
 8007a92:	4650      	mov	r0, sl
 8007a94:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007a98:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007a9c:	f00b fc77 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007aa0:	4648      	mov	r0, r9
 8007aa2:	f7fb fbd7 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007aa6:	4b51      	ldr	r3, [pc, #324]	; (8007bec <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007aa8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007aac:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007ab0:	4618      	mov	r0, r3
 8007ab2:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007ab6:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8007aba:	ee08 3a90 	vmov	s17, r3
 8007abe:	f7fb fbc9 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007ac2:	4638      	mov	r0, r7
 8007ac4:	f00a fb2c 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8007ac8:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007acc:	4618      	mov	r0, r3
 8007ace:	9303      	str	r3, [sp, #12]
 8007ad0:	f7fb f9ae 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007ad4:	4b46      	ldr	r3, [pc, #280]	; (8007bf0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007ad6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8007ada:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007ade:	3324      	adds	r3, #36	; 0x24
 8007ae0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007ae4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007ae8:	4640      	mov	r0, r8
 8007aea:	f7fb fbb3 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007aee:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007af2:	4618      	mov	r0, r3
 8007af4:	ee08 3a10 	vmov	s16, r3
 8007af8:	f7fb fbac 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007afc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007b00:	4618      	mov	r0, r3
 8007b02:	ee09 3a10 	vmov	s18, r3
 8007b06:	f00b fd83 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b0a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007b0e:	4618      	mov	r0, r3
 8007b10:	ee09 3a90 	vmov	s19, r3
 8007b14:	f00b fd7c 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b18:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007b1c:	4618      	mov	r0, r3
 8007b1e:	ee0a 3a10 	vmov	s20, r3
 8007b22:	f00b fd75 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007b26:	4a33      	ldr	r2, [pc, #204]	; (8007bf4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007b28:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007b2c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007b30:	4a31      	ldr	r2, [pc, #196]	; (8007bf8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007b32:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007b36:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8007b3a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8007b3e:	f00c fc23 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007b42:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007b46:	462a      	mov	r2, r5
 8007b48:	4658      	mov	r0, fp
 8007b4a:	9300      	str	r3, [sp, #0]
 8007b4c:	4629      	mov	r1, r5
 8007b4e:	23f0      	movs	r3, #240	; 0xf0
 8007b50:	f7fb fb5a 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b54:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b56:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b5a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b5c:	4659      	mov	r1, fp
 8007b5e:	4630      	mov	r0, r6
 8007b60:	f008 fe86 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007b64:	462a      	mov	r2, r5
 8007b66:	4650      	mov	r0, sl
 8007b68:	4629      	mov	r1, r5
 8007b6a:	f7fb fb40 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8007b6e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b70:	4650      	mov	r0, sl
 8007b72:	a90a      	add	r1, sp, #40	; 0x28
 8007b74:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b78:	f00b fc09 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b7c:	4651      	mov	r1, sl
 8007b7e:	4630      	mov	r0, r6
 8007b80:	f008 fe76 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007b84:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007b88:	2156      	movs	r1, #86	; 0x56
 8007b8a:	4648      	mov	r0, r9
 8007b8c:	f7fb fb2f 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b90:	f04f 33ff 	mov.w	r3, #4294967295
 8007b94:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007b98:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007b9c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007ba0:	f10d 0b10 	add.w	fp, sp, #16
 8007ba4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007ba8:	4649      	mov	r1, r9
 8007baa:	4658      	mov	r0, fp
 8007bac:	4798      	blx	r3
 8007bae:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007bb2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007bb6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007bba:	4b10      	ldr	r3, [pc, #64]	; (8007bfc <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007bbc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007bbe:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007bc2:	b92b      	cbnz	r3, 8007bd0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007bc4:	4b0e      	ldr	r3, [pc, #56]	; (8007c00 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007bc6:	4a0f      	ldr	r2, [pc, #60]	; (8007c04 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007bc8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bca:	480f      	ldr	r0, [pc, #60]	; (8007c08 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007bcc:	f023 f87a 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007bd0:	4b0e      	ldr	r3, [pc, #56]	; (8007c0c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bd2:	881b      	ldrh	r3, [r3, #0]
 8007bd4:	2b28      	cmp	r3, #40	; 0x28
 8007bd6:	d81d      	bhi.n	8007c14 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007bd8:	4b0d      	ldr	r3, [pc, #52]	; (8007c10 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007bda:	4a0a      	ldr	r2, [pc, #40]	; (8007c04 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007bdc:	2161      	movs	r1, #97	; 0x61
 8007bde:	e7f4      	b.n	8007bca <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007be0:	0802e3d4 	.word	0x0802e3d4
 8007be4:	0802f218 	.word	0x0802f218
 8007be8:	0802f3e0 	.word	0x0802f3e0
 8007bec:	0802c8c8 	.word	0x0802c8c8
 8007bf0:	0802ef4c 	.word	0x0802ef4c
 8007bf4:	0802e3bc 	.word	0x0802e3bc
 8007bf8:	080079f5 	.word	0x080079f5
 8007bfc:	20012dfc 	.word	0x20012dfc
 8007c00:	0802c708 	.word	0x0802c708
 8007c04:	0802c80a 	.word	0x0802c80a
 8007c08:	0802c785 	.word	0x0802c785
 8007c0c:	20012e00 	.word	0x20012e00
 8007c10:	0802c7cc 	.word	0x0802c7cc
        return texts->getText(typedTextId);
 8007c14:	4b95      	ldr	r3, [pc, #596]	; (8007e6c <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8007c16:	2128      	movs	r1, #40	; 0x28
 8007c18:	6818      	ldr	r0, [r3, #0]
 8007c1a:	f001 facb 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8007c1e:	4a94      	ldr	r2, [pc, #592]	; (8007e70 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007c20:	4603      	mov	r3, r0
 8007c22:	2104      	movs	r1, #4
 8007c24:	4650      	mov	r0, sl
 8007c26:	f011 fa2b 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007c2a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007c2e:	4648      	mov	r0, r9
 8007c30:	f00a ffb2 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007c34:	f04f 0a29 	mov.w	sl, #41	; 0x29
 8007c38:	4b8e      	ldr	r3, [pc, #568]	; (8007e74 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007c3a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8007c3c:	a90a      	add	r1, sp, #40	; 0x28
 8007c3e:	4648      	mov	r0, r9
 8007c40:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8007c44:	f00a ffc8 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c48:	4649      	mov	r1, r9
 8007c4a:	4630      	mov	r0, r6
 8007c4c:	f008 fe10 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007c50:	ee18 0a90 	vmov	r0, s17
 8007c54:	223c      	movs	r2, #60	; 0x3c
 8007c56:	4651      	mov	r1, sl
 8007c58:	f7fb fac9 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007c5c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007c60:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007c64:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007c68:	4658      	mov	r0, fp
        linespace = space;
 8007c6a:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007c6e:	f00a fd19 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c72:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007c76:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007c7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c7e:	4b7d      	ldr	r3, [pc, #500]	; (8007e74 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007c80:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007c82:	ee18 0a90 	vmov	r0, s17
 8007c86:	2338      	movs	r3, #56	; 0x38
 8007c88:	a90a      	add	r1, sp, #40	; 0x28
 8007c8a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c8e:	f00a ffa3 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c92:	ee18 1a90 	vmov	r1, s17
 8007c96:	4630      	mov	r0, r6
 8007c98:	f008 fdea 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007c9c:	230a      	movs	r3, #10
 8007c9e:	9300      	str	r3, [sp, #0]
 8007ca0:	2232      	movs	r2, #50	; 0x32
 8007ca2:	23f0      	movs	r3, #240	; 0xf0
 8007ca4:	4629      	mov	r1, r5
 8007ca6:	4638      	mov	r0, r7
 8007ca8:	f7fb faae 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007cac:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cb0:	22a0      	movs	r2, #160	; 0xa0
 8007cb2:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007cb6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007cba:	9b03      	ldr	r3, [sp, #12]
 8007cbc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007cc0:	4611      	mov	r1, r2
 8007cc2:	4638      	mov	r0, r7
 8007cc4:	f00a fb42 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cc8:	22a0      	movs	r2, #160	; 0xa0
 8007cca:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007cce:	4638      	mov	r0, r7
 8007cd0:	f00a fb47 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007cd4:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007cd8:	2b20      	cmp	r3, #32
 8007cda:	d005      	beq.n	8007ce8 <_ZN26Measurement_SingleViewBaseC1Ev+0x2b8>
        lineWidthQ5 = widthQ5;
 8007cdc:	2320      	movs	r3, #32
 8007cde:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007ce2:	4638      	mov	r0, r7
 8007ce4:	f00a fa3c 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007ce8:	4638      	mov	r0, r7
 8007cea:	2101      	movs	r1, #1
 8007cec:	f00a fb44 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007cf0:	4639      	mov	r1, r7
 8007cf2:	4630      	mov	r0, r6
 8007cf4:	f008 fdbc 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007cf8:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007cfc:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007cfe:	2223      	movs	r2, #35	; 0x23
 8007d00:	4640      	mov	r0, r8
        linespace = space;
 8007d02:	f04f 0a00 	mov.w	sl, #0
 8007d06:	2145      	movs	r1, #69	; 0x45
 8007d08:	f7fb fa71 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007d0c:	4641      	mov	r1, r8
 8007d0e:	4638      	mov	r0, r7
        color = newColor;
 8007d10:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007d14:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007d18:	f00a fcc4 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d1c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d20:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007d24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d28:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007e74 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007d2c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d30:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007d32:	a90a      	add	r1, sp, #40	; 0x28
 8007d34:	4640      	mov	r0, r8
 8007d36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d3a:	f00a ff4d 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d3e:	4641      	mov	r1, r8
 8007d40:	4630      	mov	r0, r6
 8007d42:	f008 fd95 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d46:	ee18 0a10 	vmov	r0, s16
 8007d4a:	220c      	movs	r2, #12
 8007d4c:	2136      	movs	r1, #54	; 0x36
 8007d4e:	f7fb fa4e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8007d52:	ee18 1a10 	vmov	r1, s16
 8007d56:	4638      	mov	r0, r7
        color = newColor;
 8007d58:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007d5c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007d60:	f00a fca0 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d64:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d68:	ee18 3a10 	vmov	r3, s16
 8007d6c:	333c      	adds	r3, #60	; 0x3c
 8007d6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d72:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007d74:	ee18 0a10 	vmov	r0, s16
 8007d78:	a90a      	add	r1, sp, #40	; 0x28
 8007d7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d7e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d82:	f00a ff29 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d86:	ee18 1a10 	vmov	r1, s16
 8007d8a:	4630      	mov	r0, r6
 8007d8c:	f008 fd70 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007d90:	ee19 0a10 	vmov	r0, s18
 8007d94:	22f0      	movs	r2, #240	; 0xf0
 8007d96:	2121      	movs	r1, #33	; 0x21
 8007d98:	f7fb fa29 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8007d9c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007da0:	aa0a      	add	r2, sp, #40	; 0x28
 8007da2:	f04f 0802 	mov.w	r8, #2
 8007da6:	a909      	add	r1, sp, #36	; 0x24
 8007da8:	ee19 0a10 	vmov	r0, s18
 8007dac:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007db0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007db4:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007db8:	f00b f8f3 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007dbc:	234f      	movs	r3, #79	; 0x4f
 8007dbe:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007dc2:	3710      	adds	r7, #16
        updateTextPosition();
 8007dc4:	ee19 0a10 	vmov	r0, s18
 8007dc8:	f7fb fa66 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007dcc:	ee19 1a10 	vmov	r1, s18
 8007dd0:	4630      	mov	r0, r6
        colorPressed = col;
 8007dd2:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007dd6:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007dda:	f008 fd49 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007dde:	ee19 0a90 	vmov	r0, s19
 8007de2:	22aa      	movs	r2, #170	; 0xaa
 8007de4:	2121      	movs	r1, #33	; 0x21
 8007de6:	f7fb fa02 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007dea:	aa0a      	add	r2, sp, #40	; 0x28
 8007dec:	a909      	add	r1, sp, #36	; 0x24
 8007dee:	ee19 0a90 	vmov	r0, s19
 8007df2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007df6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007dfa:	f00b f8d2 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007dfe:	234e      	movs	r3, #78	; 0x4e
 8007e00:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007e04:	ee19 0a90 	vmov	r0, s19
 8007e08:	f7fb fa46 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007e0c:	ee19 1a90 	vmov	r1, s19
 8007e10:	4630      	mov	r0, r6
        colorPressed = col;
 8007e12:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007e16:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007e1a:	f008 fd29 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007e1e:	ee1a 0a10 	vmov	r0, s20
 8007e22:	2264      	movs	r2, #100	; 0x64
 8007e24:	2121      	movs	r1, #33	; 0x21
 8007e26:	f7fb f9e2 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007e2a:	aa0a      	add	r2, sp, #40	; 0x28
 8007e2c:	a909      	add	r1, sp, #36	; 0x24
 8007e2e:	ee1a 0a10 	vmov	r0, s20
 8007e32:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007e36:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007e3a:	f00b f8b2 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007e3e:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8007e40:	ee1a 0a10 	vmov	r0, s20
 8007e44:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007e48:	f7fb fa26 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007e4c:	4630      	mov	r0, r6
        colorPressed = col;
 8007e4e:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007e52:	ee1a 1a10 	vmov	r1, s20
 8007e56:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007e5a:	f008 fd09 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e5e:	4620      	mov	r0, r4
 8007e60:	b00d      	add	sp, #52	; 0x34
 8007e62:	ecbd 8b06 	vpop	{d8-d10}
 8007e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e6a:	bf00      	nop
 8007e6c:	20012e08 	.word	0x20012e08
 8007e70:	0802c842 	.word	0x0802c842
 8007e74:	0802c8b8 	.word	0x0802c8b8

08007e78 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007e78:	4770      	bx	lr

08007e7a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007e7a:	4770      	bx	lr

08007e7c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e7c:	4770      	bx	lr

08007e7e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007e7e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e80:	68c2      	ldr	r2, [r0, #12]
 8007e82:	6844      	ldr	r4, [r0, #4]
 8007e84:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e86:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007e88:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e8c:	07d2      	lsls	r2, r2, #31
 8007e8e:	bf48      	it	mi
 8007e90:	5962      	ldrmi	r2, [r4, r5]
 8007e92:	689b      	ldr	r3, [r3, #8]
    }
 8007e94:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e96:	bf48      	it	mi
 8007e98:	58d3      	ldrmi	r3, [r2, r3]
 8007e9a:	4718      	bx	r3

08007e9c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007e9c:	6843      	ldr	r3, [r0, #4]
 8007e9e:	b12b      	cbz	r3, 8007eac <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007ea0:	6883      	ldr	r3, [r0, #8]
 8007ea2:	b92b      	cbnz	r3, 8007eb0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007ea4:	68c0      	ldr	r0, [r0, #12]
 8007ea6:	f000 0001 	and.w	r0, r0, #1
 8007eaa:	4770      	bx	lr
 8007eac:	4618      	mov	r0, r3
 8007eae:	4770      	bx	lr
 8007eb0:	2001      	movs	r0, #1
    }
 8007eb2:	4770      	bx	lr

08007eb4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007eb4:	b510      	push	{r4, lr}
 8007eb6:	2110      	movs	r1, #16
 8007eb8:	4604      	mov	r4, r0
 8007eba:	f022 f81c 	bl	8029ef6 <_ZdlPvj>
 8007ebe:	4620      	mov	r0, r4
 8007ec0:	bd10      	pop	{r4, pc}
	...

08007ec4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007ec4:	b510      	push	{r4, lr}
 8007ec6:	4b03      	ldr	r3, [pc, #12]	; (8007ed4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007ec8:	6003      	str	r3, [r0, #0]
 8007eca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007ecc:	f00c fa66 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ed0:	4620      	mov	r0, r4
 8007ed2:	bd10      	pop	{r4, pc}
 8007ed4:	0802e420 	.word	0x0802e420

08007ed8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007ed8:	b507      	push	{r0, r1, r2, lr}
 8007eda:	4b07      	ldr	r3, [pc, #28]	; (8007ef8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007edc:	6003      	str	r3, [r0, #0]
 8007ede:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007ee0:	f00c fa5c 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ee4:	9801      	ldr	r0, [sp, #4]
 8007ee6:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007eea:	f022 f804 	bl	8029ef6 <_ZdlPvj>
 8007eee:	9801      	ldr	r0, [sp, #4]
 8007ef0:	b003      	add	sp, #12
 8007ef2:	f85d fb04 	ldr.w	pc, [sp], #4
 8007ef6:	bf00      	nop
 8007ef8:	0802e420 	.word	0x0802e420

08007efc <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007efc:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007efe:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007f02:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007f06:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007f08:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007f0a:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007f0e:	d105      	bne.n	8007f1c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007f10:	6803      	ldr	r3, [r0, #0]
 8007f12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f14:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007f16:	2300      	movs	r3, #0
 8007f18:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007f1c:	bd10      	pop	{r4, pc}

08007f1e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007f1e:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007f22:	4288      	cmp	r0, r1
{
 8007f24:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007f26:	d105      	bne.n	8007f34 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007f28:	f00d ff3a 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007f2c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007f30:	f7fc bd64 	b.w	80049fc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007f34:	bd08      	pop	{r3, pc}
	...

08007f38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f3c:	ed2d 8b0a 	vpush	{d8-d12}
 8007f40:	4604      	mov	r4, r0
 8007f42:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007f44:	46a1      	mov	r9, r4
 8007f46:	2500      	movs	r5, #0
 8007f48:	f00f fbaa 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8007f4c:	4ba9      	ldr	r3, [pc, #676]	; (80081f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8007f4e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007f50:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007f54:	2226      	movs	r2, #38	; 0x26
 8007f56:	4629      	mov	r1, r5
 8007f58:	4648      	mov	r0, r9
 8007f5a:	f023 f8b8 	bl	802b0ce <memset>
 8007f5e:	4648      	mov	r0, r9
 8007f60:	f7fb f966 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8007f64:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007f68:	26ff      	movs	r6, #255	; 0xff
 8007f6a:	4ba3      	ldr	r3, [pc, #652]	; (80081f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007f6c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007f6e:	2226      	movs	r2, #38	; 0x26
 8007f70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f74:	4629      	mov	r1, r5
 8007f76:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007f7a:	4640      	mov	r0, r8
 8007f7c:	66a5      	str	r5, [r4, #104]	; 0x68
 8007f7e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f82:	f023 f8a4 	bl	802b0ce <memset>
 8007f86:	4640      	mov	r0, r8
 8007f88:	f7fb f952 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8007f8c:	4b9b      	ldr	r3, [pc, #620]	; (80081fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007f8e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007f90:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007f94:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007f98:	a90a      	add	r1, sp, #40	; 0x28
 8007f9a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007f9e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007fa0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007fa4:	f00b f9f3 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007fa8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007fac:	4658      	mov	r0, fp
 8007fae:	f7fb f951 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007fb2:	4638      	mov	r0, r7
 8007fb4:	f00a feae 	bl	8012d14 <_ZN8touchgfx5GaugeC1Ev>
 8007fb8:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007fbc:	4618      	mov	r0, r3
 8007fbe:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007fc2:	4e8f      	ldr	r6, [pc, #572]	; (8008200 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8007fc4:	f7fb f946 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007fc8:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007fcc:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007fd0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007fd2:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007fd6:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007fda:	f7fb f93b 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007fde:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007fe2:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8007fe6:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007fe8:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007fec:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007ff0:	f7fb f930 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8007ff4:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007ff8:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007ffc:	4618      	mov	r0, r3
 8007ffe:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8008002:	ee0a 3a90 	vmov	s21, r3
 8008006:	f7fb f925 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800800a:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 800800e:	4618      	mov	r0, r3
 8008010:	ee0b 3a10 	vmov	s22, r3
 8008014:	f7fb f91e 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008018:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 800801c:	4618      	mov	r0, r3
 800801e:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8008022:	ee0b 3a90 	vmov	s23, r3
 8008026:	f7fb f915 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800802a:	4650      	mov	r0, sl
 800802c:	f00a f878 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8008030:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008034:	4618      	mov	r0, r3
 8008036:	9303      	str	r3, [sp, #12]
 8008038:	f7fa fefa 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800803c:	4b71      	ldr	r3, [pc, #452]	; (8008204 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 800803e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8008042:	3324      	adds	r3, #36	; 0x24
 8008044:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008048:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800804c:	4618      	mov	r0, r3
 800804e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008052:	ee08 3a10 	vmov	s16, r3
 8008056:	f7fb f8fd 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 800805a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800805e:	4618      	mov	r0, r3
 8008060:	ee08 3a90 	vmov	s17, r3
 8008064:	f7fb f8f6 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008068:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 800806c:	4618      	mov	r0, r3
 800806e:	ee0c 3a10 	vmov	s24, r3
 8008072:	f00b facd 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008076:	4a64      	ldr	r2, [pc, #400]	; (8008208 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8008078:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800807c:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8008080:	4a62      	ldr	r2, [pc, #392]	; (800820c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8008082:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8008086:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800808a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800808e:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8008092:	f00c f979 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008096:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800809a:	462a      	mov	r2, r5
 800809c:	4648      	mov	r0, r9
 800809e:	9300      	str	r3, [sp, #0]
 80080a0:	4629      	mov	r1, r5
 80080a2:	23f0      	movs	r3, #240	; 0xf0
 80080a4:	f7fb f8b0 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80080a8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80080aa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80080ae:	66a3      	str	r3, [r4, #104]	; 0x68
 80080b0:	4649      	mov	r1, r9
 80080b2:	4630      	mov	r0, r6
 80080b4:	f008 fbdc 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80080b8:	462a      	mov	r2, r5
 80080ba:	4640      	mov	r0, r8
 80080bc:	4629      	mov	r1, r5
 80080be:	f7fb f896 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80080c2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80080c4:	4640      	mov	r0, r8
 80080c6:	a90a      	add	r1, sp, #40	; 0x28
 80080c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80080cc:	f00b f95f 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80080d0:	4641      	mov	r1, r8
 80080d2:	4630      	mov	r0, r6
 80080d4:	f008 fbcc 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80080d8:	223c      	movs	r2, #60	; 0x3c
 80080da:	211f      	movs	r1, #31
 80080dc:	4658      	mov	r0, fp
 80080de:	f7fb f886 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80080e2:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 80080e6:	f04f 33ff 	mov.w	r3, #4294967295
 80080ea:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80080ee:	4659      	mov	r1, fp
 80080f0:	4640      	mov	r0, r8
        linespace = space;
 80080f2:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80080f6:	f00a fad5 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080fa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80080fe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008102:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008106:	4b42      	ldr	r3, [pc, #264]	; (8008210 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8008108:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 800810a:	a90a      	add	r1, sp, #40	; 0x28
 800810c:	2337      	movs	r3, #55	; 0x37
 800810e:	4658      	mov	r0, fp
 8008110:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008114:	f00a fd60 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008118:	4659      	mov	r1, fp
 800811a:	4630      	mov	r0, r6
 800811c:	f008 fba8 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008120:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8008122:	4638      	mov	r0, r7
 8008124:	a90a      	add	r1, sp, #40	; 0x28
 8008126:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800812a:	f008 fb33 	bl	8010794 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 800812e:	236a      	movs	r3, #106	; 0x6a
 8008130:	4638      	mov	r0, r7
 8008132:	9300      	str	r3, [sp, #0]
 8008134:	225e      	movs	r2, #94	; 0x5e
 8008136:	23b8      	movs	r3, #184	; 0xb8
 8008138:	211c      	movs	r1, #28
 800813a:	f7fb f865 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 800813e:	225c      	movs	r2, #92	; 0x5c
 8008140:	4611      	mov	r1, r2
 8008142:	4638      	mov	r0, r7
 8008144:	f00a fe91 	bl	8012e6a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8008148:	4638      	mov	r0, r7
 800814a:	225a      	movs	r2, #90	; 0x5a
 800814c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008150:	f00a ff10 	bl	8012f74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8008154:	462b      	mov	r3, r5
 8008156:	225a      	movs	r2, #90	; 0x5a
 8008158:	4638      	mov	r0, r7
 800815a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800815e:	9500      	str	r5, [sp, #0]
 8008160:	f008 f9c5 	bl	80104ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8008164:	4638      	mov	r0, r7
 8008166:	4629      	mov	r1, r5
 8008168:	f00a feae 	bl	8012ec8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800816c:	2335      	movs	r3, #53	; 0x35
 800816e:	2208      	movs	r2, #8
 8008170:	4638      	mov	r0, r7
 8008172:	2105      	movs	r1, #5
 8008174:	f00a fe64 	bl	8012e40 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008178:	4638      	mov	r0, r7
 800817a:	2101      	movs	r1, #1
 800817c:	f00a fe02 	bl	8012d84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008180:	4638      	mov	r0, r7
 8008182:	2101      	movs	r1, #1
 8008184:	f00a fe01 	bl	8012d8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008188:	4639      	mov	r1, r7
 800818a:	4630      	mov	r0, r6
 800818c:	f008 fb70 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8008190:	230f      	movs	r3, #15
 8008192:	22e6      	movs	r2, #230	; 0xe6
 8008194:	ee19 0a10 	vmov	r0, s18
 8008198:	9300      	str	r3, [sp, #0]
 800819a:	4629      	mov	r1, r5
 800819c:	23f0      	movs	r3, #240	; 0xf0
 800819e:	f7fb f833 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80081a2:	f04f 33ff 	mov.w	r3, #4294967295
 80081a6:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80081aa:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80081ae:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80081b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80081b6:	4f17      	ldr	r7, [pc, #92]	; (8008214 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80081b8:	ee19 1a10 	vmov	r1, s18
 80081bc:	4640      	mov	r0, r8
 80081be:	4798      	blx	r3
 80081c0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80081c4:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80081c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081cc:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80081ce:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 80081d2:	b92b      	cbnz	r3, 80081e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 80081d4:	4b10      	ldr	r3, [pc, #64]	; (8008218 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80081d6:	4a11      	ldr	r2, [pc, #68]	; (800821c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80081d8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80081da:	4811      	ldr	r0, [pc, #68]	; (8008220 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80081dc:	f022 fd72 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80081e0:	f8df b044 	ldr.w	fp, [pc, #68]	; 8008228 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80081e4:	f8bb 3000 	ldrh.w	r3, [fp]
 80081e8:	2b10      	cmp	r3, #16
 80081ea:	d81f      	bhi.n	800822c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 80081ec:	4b0d      	ldr	r3, [pc, #52]	; (8008224 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80081ee:	4a0b      	ldr	r2, [pc, #44]	; (800821c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80081f0:	2161      	movs	r1, #97	; 0x61
 80081f2:	e7f2      	b.n	80081da <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
 80081f4:	0802e420 	.word	0x0802e420
 80081f8:	0802f218 	.word	0x0802f218
 80081fc:	0802f3e0 	.word	0x0802f3e0
 8008200:	0802c8c8 	.word	0x0802c8c8
 8008204:	0802ef4c 	.word	0x0802ef4c
 8008208:	0802e408 	.word	0x0802e408
 800820c:	08007f1f 	.word	0x08007f1f
 8008210:	0802c8b8 	.word	0x0802c8b8
 8008214:	20012dfc 	.word	0x20012dfc
 8008218:	0802c708 	.word	0x0802c708
 800821c:	0802c80a 	.word	0x0802c80a
 8008220:	0802c785 	.word	0x0802c785
 8008224:	0802c7cc 	.word	0x0802c7cc
 8008228:	20012e00 	.word	0x20012e00
        return texts->getText(typedTextId);
 800822c:	4bde      	ldr	r3, [pc, #888]	; (80085a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800822e:	2110      	movs	r1, #16
 8008230:	6818      	ldr	r0, [r3, #0]
 8008232:	f000 ffbf 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8008236:	4add      	ldr	r2, [pc, #884]	; (80085ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008238:	4603      	mov	r3, r0
 800823a:	210a      	movs	r1, #10
 800823c:	4648      	mov	r0, r9
 800823e:	f010 ff1f 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008242:	4bdb      	ldr	r3, [pc, #876]	; (80085b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 8008244:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8008248:	ee19 0a10 	vmov	r0, s18
 800824c:	930a      	str	r3, [sp, #40]	; 0x28
 800824e:	a90a      	add	r1, sp, #40	; 0x28
 8008250:	2313      	movs	r3, #19
 8008252:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008256:	f00a fcbf 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800825a:	ee19 1a10 	vmov	r1, s18
 800825e:	4630      	mov	r0, r6
 8008260:	f008 fb06 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8008264:	210f      	movs	r1, #15
 8008266:	22d7      	movs	r2, #215	; 0xd7
 8008268:	ee19 0a90 	vmov	r0, s19
 800826c:	9100      	str	r1, [sp, #0]
 800826e:	23f0      	movs	r3, #240	; 0xf0
 8008270:	4629      	mov	r1, r5
 8008272:	f7fa ffc9 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008276:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 800827a:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 800827e:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8008282:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008286:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 800828a:	4640      	mov	r0, r8
 800828c:	ee19 1a90 	vmov	r1, s19
 8008290:	4798      	blx	r3
 8008292:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008296:	f504 7342 	add.w	r3, r4, #776	; 0x308
 800829a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800829e:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80082a0:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 80082a4:	2b00      	cmp	r3, #0
 80082a6:	d095      	beq.n	80081d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80082a8:	f8bb 3000 	ldrh.w	r3, [fp]
 80082ac:	2b11      	cmp	r3, #17
 80082ae:	d99d      	bls.n	80081ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 80082b0:	4abd      	ldr	r2, [pc, #756]	; (80085a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80082b2:	2111      	movs	r1, #17
 80082b4:	6810      	ldr	r0, [r2, #0]
 80082b6:	f000 ff7d 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80082ba:	4abc      	ldr	r2, [pc, #752]	; (80085ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80082bc:	4603      	mov	r3, r0
 80082be:	210a      	movs	r1, #10
 80082c0:	4648      	mov	r0, r9
 80082c2:	f010 fedd 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80082c6:	4bba      	ldr	r3, [pc, #744]	; (80085b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 80082c8:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80082cc:	ee19 0a90 	vmov	r0, s19
 80082d0:	930a      	str	r3, [sp, #40]	; 0x28
 80082d2:	a90a      	add	r1, sp, #40	; 0x28
 80082d4:	2314      	movs	r3, #20
 80082d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082da:	f00a fc7d 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082de:	ee19 1a90 	vmov	r1, s19
 80082e2:	4630      	mov	r0, r6
 80082e4:	f008 fac4 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80082e8:	210f      	movs	r1, #15
 80082ea:	22c8      	movs	r2, #200	; 0xc8
 80082ec:	ee1a 0a10 	vmov	r0, s20
 80082f0:	9100      	str	r1, [sp, #0]
 80082f2:	23f0      	movs	r3, #240	; 0xf0
 80082f4:	4629      	mov	r1, r5
 80082f6:	f7fa ff87 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 80082fa:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80082fe:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8008302:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8008306:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800830a:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 800830e:	4640      	mov	r0, r8
 8008310:	ee1a 1a10 	vmov	r1, s20
 8008314:	4798      	blx	r3
 8008316:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800831a:	f504 7355 	add.w	r3, r4, #852	; 0x354
 800831e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008322:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8008324:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8008328:	2b00      	cmp	r3, #0
 800832a:	f43f af53 	beq.w	80081d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800832e:	f8bb 3000 	ldrh.w	r3, [fp]
 8008332:	2b12      	cmp	r3, #18
 8008334:	f67f af5a 	bls.w	80081ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008338:	4a9b      	ldr	r2, [pc, #620]	; (80085a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 800833a:	4f9d      	ldr	r7, [pc, #628]	; (80085b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 800833c:	6810      	ldr	r0, [r2, #0]
 800833e:	2112      	movs	r1, #18
 8008340:	f000 ff38 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8008344:	4a99      	ldr	r2, [pc, #612]	; (80085ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008346:	4603      	mov	r3, r0
 8008348:	210a      	movs	r1, #10
 800834a:	4648      	mov	r0, r9
 800834c:	f010 fe98 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008350:	2315      	movs	r3, #21
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8008352:	ee1a 0a10 	vmov	r0, s20
 8008356:	a90a      	add	r1, sp, #40	; 0x28
 8008358:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 800835c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008360:	970a      	str	r7, [sp, #40]	; 0x28
 8008362:	f00a fc39 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008366:	ee1a 1a10 	vmov	r1, s20
 800836a:	4630      	mov	r0, r6
 800836c:	f008 fa80 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8008370:	224c      	movs	r2, #76	; 0x4c
 8008372:	ee1a 0a90 	vmov	r0, s21
 8008376:	2171      	movs	r1, #113	; 0x71
 8008378:	f7fa ff39 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800837c:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008380:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8008384:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8008388:	4640      	mov	r0, r8
        linespace = space;
 800838a:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 800838e:	f00a f989 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008392:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008396:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 800839a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800839e:	2316      	movs	r3, #22
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 80083a0:	ee1a 0a90 	vmov	r0, s21
 80083a4:	a90a      	add	r1, sp, #40	; 0x28
 80083a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80083aa:	970a      	str	r7, [sp, #40]	; 0x28
 80083ac:	f00a fc14 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083b0:	ee1a 1a90 	vmov	r1, s21
 80083b4:	4630      	mov	r0, r6
 80083b6:	f008 fa5b 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 80083ba:	22b9      	movs	r2, #185	; 0xb9
 80083bc:	ee1b 0a10 	vmov	r0, s22
 80083c0:	4629      	mov	r1, r5
 80083c2:	f7fa ff14 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80083c6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80083ca:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80083ce:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80083d2:	4640      	mov	r0, r8
        linespace = space;
 80083d4:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80083d8:	f00a f964 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80083e0:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80083e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083e8:	2317      	movs	r3, #23
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80083ea:	ee1b 0a10 	vmov	r0, s22
 80083ee:	a90a      	add	r1, sp, #40	; 0x28
 80083f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80083f4:	970a      	str	r7, [sp, #40]	; 0x28
 80083f6:	f00a fbef 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083fa:	ee1b 1a10 	vmov	r1, s22
 80083fe:	4630      	mov	r0, r6
 8008400:	f008 fa36 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8008404:	22b9      	movs	r2, #185	; 0xb9
 8008406:	ee1b 0a90 	vmov	r0, s23
 800840a:	21d9      	movs	r1, #217	; 0xd9
 800840c:	f7fa feef 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008410:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008414:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8008418:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 800841c:	4640      	mov	r0, r8
        linespace = space;
 800841e:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8008422:	f00a f93f 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008426:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800842a:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800842e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008432:	2318      	movs	r3, #24
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8008434:	ee1b 0a90 	vmov	r0, s23
 8008438:	a90a      	add	r1, sp, #40	; 0x28
 800843a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800843e:	970a      	str	r7, [sp, #40]	; 0x28
 8008440:	f00a fbca 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008444:	ee1b 1a90 	vmov	r1, s23
 8008448:	4630      	mov	r0, r6
 800844a:	f008 fa11 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800844e:	230a      	movs	r3, #10
 8008450:	9300      	str	r3, [sp, #0]
 8008452:	2232      	movs	r2, #50	; 0x32
 8008454:	23f0      	movs	r3, #240	; 0xf0
 8008456:	4629      	mov	r1, r5
 8008458:	4650      	mov	r0, sl
 800845a:	f7fa fed5 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800845e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008462:	22a0      	movs	r2, #160	; 0xa0
 8008464:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008468:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 800846c:	9b03      	ldr	r3, [sp, #12]
 800846e:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8008472:	4611      	mov	r1, r2
 8008474:	4650      	mov	r0, sl
 8008476:	f009 ff69 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800847a:	22a0      	movs	r2, #160	; 0xa0
 800847c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008480:	4650      	mov	r0, sl
 8008482:	f009 ff6e 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008486:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 800848a:	2b20      	cmp	r3, #32
 800848c:	d005      	beq.n	800849a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x562>
        lineWidthQ5 = widthQ5;
 800848e:	2320      	movs	r3, #32
 8008490:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8008494:	4650      	mov	r0, sl
 8008496:	f009 fe63 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800849a:	4650      	mov	r0, sl
 800849c:	2101      	movs	r1, #1
 800849e:	f009 ff6b 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80084a2:	4651      	mov	r1, sl
 80084a4:	4630      	mov	r0, r6
 80084a6:	f008 f9e3 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80084aa:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 80084ae:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80084b0:	ee18 0a10 	vmov	r0, s16
 80084b4:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80084b6:	f04f 0900 	mov.w	r9, #0
 80084ba:	2145      	movs	r1, #69	; 0x45
 80084bc:	f7fa fe97 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80084c0:	ee18 1a10 	vmov	r1, s16
 80084c4:	4628      	mov	r0, r5
        color = newColor;
 80084c6:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80084ca:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80084ce:	f00a f8e9 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80084d6:	ee18 3a10 	vmov	r3, s16
 80084da:	333c      	adds	r3, #60	; 0x3c
 80084dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80084e0:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80085b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 80084e4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80084e8:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80084ea:	ee18 0a10 	vmov	r0, s16
 80084ee:	a90a      	add	r1, sp, #40	; 0x28
 80084f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80084f4:	f00a fb70 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084f8:	ee18 1a10 	vmov	r1, s16
 80084fc:	4630      	mov	r0, r6
 80084fe:	f008 f9b7 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008502:	ee18 0a90 	vmov	r0, s17
 8008506:	220c      	movs	r2, #12
 8008508:	2136      	movs	r1, #54	; 0x36
 800850a:	f7fa fe70 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800850e:	ee18 1a90 	vmov	r1, s17
 8008512:	4628      	mov	r0, r5
        color = newColor;
 8008514:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8008518:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800851c:	f00a f8c2 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008520:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008524:	ee18 3a90 	vmov	r3, s17
 8008528:	333c      	adds	r3, #60	; 0x3c
 800852a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800852e:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8008530:	ee18 0a90 	vmov	r0, s17
 8008534:	a90a      	add	r1, sp, #40	; 0x28
 8008536:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800853a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800853e:	f00a fb4b 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008542:	ee18 1a90 	vmov	r1, s17
 8008546:	4630      	mov	r0, r6
 8008548:	f008 f992 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800854c:	ee1c 0a10 	vmov	r0, s24
 8008550:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008554:	2121      	movs	r1, #33	; 0x21
 8008556:	f7fa fe4a 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800855a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800855c:	aa0a      	add	r2, sp, #40	; 0x28
 800855e:	a909      	add	r1, sp, #36	; 0x24
 8008560:	ee1c 0a10 	vmov	r0, s24
 8008564:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008568:	2302      	movs	r3, #2
 800856a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800856e:	f00a fd18 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008572:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8008574:	ee1c 0a10 	vmov	r0, s24
 8008578:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 800857c:	f7fa fe8c 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008580:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8008584:	3304      	adds	r3, #4
 8008586:	4630      	mov	r0, r6
 8008588:	ee1c 1a10 	vmov	r1, s24
        color = col;
 800858c:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8008590:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8008594:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8008598:	f008 f96a 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800859c:	4620      	mov	r0, r4
 800859e:	b00d      	add	sp, #52	; 0x34
 80085a0:	ecbd 8b0a 	vpop	{d8-d12}
 80085a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085a8:	20012e08 	.word	0x20012e08
 80085ac:	0802c842 	.word	0x0802c842
 80085b0:	0802c8b8 	.word	0x0802c8b8

080085b4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80085b4:	4770      	bx	lr

080085b6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80085b6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80085b8:	68c2      	ldr	r2, [r0, #12]
 80085ba:	6844      	ldr	r4, [r0, #4]
 80085bc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80085be:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80085c0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80085c4:	07d2      	lsls	r2, r2, #31
 80085c6:	bf48      	it	mi
 80085c8:	5962      	ldrmi	r2, [r4, r5]
 80085ca:	689b      	ldr	r3, [r3, #8]
    }
 80085cc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80085ce:	bf48      	it	mi
 80085d0:	58d3      	ldrmi	r3, [r2, r3]
 80085d2:	4718      	bx	r3

080085d4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80085d4:	6843      	ldr	r3, [r0, #4]
 80085d6:	b12b      	cbz	r3, 80085e4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80085d8:	6883      	ldr	r3, [r0, #8]
 80085da:	b92b      	cbnz	r3, 80085e8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80085dc:	68c0      	ldr	r0, [r0, #12]
 80085de:	f000 0001 	and.w	r0, r0, #1
 80085e2:	4770      	bx	lr
 80085e4:	4618      	mov	r0, r3
 80085e6:	4770      	bx	lr
 80085e8:	2001      	movs	r0, #1
    }
 80085ea:	4770      	bx	lr

080085ec <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80085ec:	b510      	push	{r4, lr}
 80085ee:	2110      	movs	r1, #16
 80085f0:	4604      	mov	r4, r0
 80085f2:	f021 fc80 	bl	8029ef6 <_ZdlPvj>
 80085f6:	4620      	mov	r0, r4
 80085f8:	bd10      	pop	{r4, pc}

080085fa <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80085fa:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80085fe:	f000 bf97 	b.w	8009530 <_ZN17Gauge_with_Values10initializeEv>

08008602 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008602:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8008606:	4288      	cmp	r0, r1
{
 8008608:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800860a:	d105      	bne.n	8008618 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800860c:	f00d fbc8 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8008610:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008614:	f7fc b9f2 	b.w	80049fc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008618:	bd08      	pop	{r3, pc}
	...

0800861c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800861c:	b510      	push	{r4, lr}
 800861e:	4b07      	ldr	r3, [pc, #28]	; (800863c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8008620:	6003      	str	r3, [r0, #0]
 8008622:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008624:	f00b feba 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8008628:	4b05      	ldr	r3, [pc, #20]	; (8008640 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 800862a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800862e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8008632:	f7fd fc79 	bl	8005f28 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8008636:	4620      	mov	r0, r4
 8008638:	bd10      	pop	{r4, pc}
 800863a:	bf00      	nop
 800863c:	0802e470 	.word	0x0802e470
 8008640:	0802e8a4 	.word	0x0802e8a4

08008644 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8008644:	b510      	push	{r4, lr}
 8008646:	4604      	mov	r4, r0
}
 8008648:	f7ff ffe8 	bl	800861c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800864c:	4620      	mov	r0, r4
 800864e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008652:	f021 fc50 	bl	8029ef6 <_ZdlPvj>
 8008656:	4620      	mov	r0, r4
 8008658:	bd10      	pop	{r4, pc}
	...

0800865c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800865c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008660:	ed2d 8b04 	vpush	{d8-d9}
 8008664:	4604      	mov	r4, r0
 8008666:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8008668:	46a3      	mov	fp, r4
 800866a:	2500      	movs	r5, #0
 800866c:	f00f f818 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8008670:	4bae      	ldr	r3, [pc, #696]	; (800892c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8008672:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008674:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008678:	2226      	movs	r2, #38	; 0x26
 800867a:	4629      	mov	r1, r5
 800867c:	4658      	mov	r0, fp
 800867e:	f022 fd26 	bl	802b0ce <memset>
 8008682:	4658      	mov	r0, fp
 8008684:	f7fa fdd4 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8008688:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800868c:	26ff      	movs	r6, #255	; 0xff
 800868e:	4ba8      	ldr	r3, [pc, #672]	; (8008930 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8008690:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008692:	2226      	movs	r2, #38	; 0x26
 8008694:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008698:	4629      	mov	r1, r5
 800869a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800869e:	66a5      	str	r5, [r4, #104]	; 0x68
 80086a0:	4650      	mov	r0, sl
 80086a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80086a6:	f022 fd12 	bl	802b0ce <memset>
 80086aa:	4650      	mov	r0, sl
 80086ac:	f7fa fdc0 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 80086b0:	4ba0      	ldr	r3, [pc, #640]	; (8008934 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80086b2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80086b4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80086b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80086bc:	a90a      	add	r1, sp, #40	; 0x28
 80086be:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80086c2:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80086c6:	4650      	mov	r0, sl
 80086c8:	f00a fe61 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80086cc:	4638      	mov	r0, r7
 80086ce:	f009 fd27 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 80086d2:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80086d6:	4618      	mov	r0, r3
 80086d8:	9303      	str	r3, [sp, #12]
 80086da:	f7fa fba9 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80086de:	4b96      	ldr	r3, [pc, #600]	; (8008938 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80086e0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80086e4:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80086e8:	3324      	adds	r3, #36	; 0x24
 80086ea:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80086ee:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80086f2:	4648      	mov	r0, r9
 80086f4:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80086f8:	f7fa fdac 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 80086fc:	4640      	mov	r0, r8
 80086fe:	f7fa fda9 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008702:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008706:	4618      	mov	r0, r3
 8008708:	ee08 3a10 	vmov	s16, r3
 800870c:	f7fa fda2 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008710:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008714:	4618      	mov	r0, r3
 8008716:	ee08 3a90 	vmov	s17, r3
 800871a:	f00a ff79 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800871e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8008722:	4618      	mov	r0, r3
 8008724:	ee09 3a10 	vmov	s18, r3
 8008728:	f000 fef8 	bl	800951c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800872c:	4a83      	ldr	r2, [pc, #524]	; (800893c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800872e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008732:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8008736:	4a82      	ldr	r2, [pc, #520]	; (8008940 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008738:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800873c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8008740:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8008744:	f00b fe20 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008748:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800874c:	462a      	mov	r2, r5
 800874e:	9300      	str	r3, [sp, #0]
 8008750:	4629      	mov	r1, r5
 8008752:	23f0      	movs	r3, #240	; 0xf0
 8008754:	4658      	mov	r0, fp
 8008756:	f7fa fd57 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800875a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800875c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008760:	66a3      	str	r3, [r4, #104]	; 0x68
 8008762:	4659      	mov	r1, fp
 8008764:	4630      	mov	r0, r6
 8008766:	f008 f883 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800876a:	462a      	mov	r2, r5
 800876c:	4629      	mov	r1, r5
 800876e:	4650      	mov	r0, sl
 8008770:	f7fa fd3d 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008774:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008776:	a90a      	add	r1, sp, #40	; 0x28
 8008778:	4650      	mov	r0, sl
 800877a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800877e:	f00a fe06 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008782:	4651      	mov	r1, sl
 8008784:	4630      	mov	r0, r6
 8008786:	f008 f873 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800878a:	230a      	movs	r3, #10
 800878c:	9300      	str	r3, [sp, #0]
 800878e:	2232      	movs	r2, #50	; 0x32
 8008790:	23f0      	movs	r3, #240	; 0xf0
 8008792:	4629      	mov	r1, r5
 8008794:	4638      	mov	r0, r7
 8008796:	f7fa fd37 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 800879a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800879e:	22a0      	movs	r2, #160	; 0xa0
 80087a0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80087a4:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80087a8:	9b03      	ldr	r3, [sp, #12]
 80087aa:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80087ae:	4611      	mov	r1, r2
 80087b0:	4638      	mov	r0, r7
 80087b2:	f009 fdcb 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80087b6:	22a0      	movs	r2, #160	; 0xa0
 80087b8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80087bc:	4638      	mov	r0, r7
 80087be:	f009 fdd0 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80087c2:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80087c6:	2b20      	cmp	r3, #32
 80087c8:	d005      	beq.n	80087d6 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80087ca:	2320      	movs	r3, #32
 80087cc:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80087d0:	4638      	mov	r0, r7
 80087d2:	f009 fcc5 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80087d6:	4638      	mov	r0, r7
 80087d8:	2101      	movs	r1, #1
 80087da:	f009 fdcd 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80087de:	4639      	mov	r1, r7
 80087e0:	4630      	mov	r0, r6
 80087e2:	ad04      	add	r5, sp, #16
 80087e4:	f008 f844 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80087e8:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 80087ec:	2700      	movs	r7, #0
    textArea2.setXY(69, 35);
 80087ee:	2223      	movs	r2, #35	; 0x23
 80087f0:	4648      	mov	r0, r9
 80087f2:	2145      	movs	r1, #69	; 0x45
 80087f4:	f7fa fcfb 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80087f8:	4649      	mov	r1, r9
 80087fa:	4628      	mov	r0, r5
        color = newColor;
 80087fc:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 8008800:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008804:	f009 ff4e 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008808:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800880c:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8008810:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008814:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8008944 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8008818:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800881c:	2347      	movs	r3, #71	; 0x47
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800881e:	a90a      	add	r1, sp, #40	; 0x28
 8008820:	4648      	mov	r0, r9
 8008822:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008826:	f00a f9d7 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800882a:	4649      	mov	r1, r9
 800882c:	4630      	mov	r0, r6
 800882e:	f008 f81f 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008832:	223c      	movs	r2, #60	; 0x3c
 8008834:	4640      	mov	r0, r8
 8008836:	211f      	movs	r1, #31
 8008838:	f7fa fcd9 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 800883c:	4641      	mov	r1, r8
 800883e:	4628      	mov	r0, r5
        color = newColor;
 8008840:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 8008844:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8008848:	f009 ff2c 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800884c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008850:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008854:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008858:	f04f 0936 	mov.w	r9, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 800885c:	a90a      	add	r1, sp, #40	; 0x28
 800885e:	4640      	mov	r0, r8
 8008860:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8008864:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8008868:	f00a f9b6 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800886c:	4641      	mov	r1, r8
 800886e:	4630      	mov	r0, r6
 8008870:	f007 fffe 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008874:	ee18 0a10 	vmov	r0, s16
 8008878:	220c      	movs	r2, #12
 800887a:	4649      	mov	r1, r9
 800887c:	f7fa fcb7 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008880:	ee18 1a10 	vmov	r1, s16
 8008884:	4628      	mov	r0, r5
        color = newColor;
 8008886:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 800888a:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800888e:	f009 ff09 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008892:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008896:	ee18 3a10 	vmov	r3, s16
 800889a:	333c      	adds	r3, #60	; 0x3c
 800889c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80088a0:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80088a2:	ee18 0a10 	vmov	r0, s16
 80088a6:	a90a      	add	r1, sp, #40	; 0x28
 80088a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80088ac:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80088b0:	f00a f992 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80088b4:	ee18 1a10 	vmov	r1, s16
 80088b8:	4630      	mov	r0, r6
 80088ba:	f007 ffd9 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80088be:	ee18 0a90 	vmov	r0, s17
 80088c2:	f240 1201 	movw	r2, #257	; 0x101
 80088c6:	2121      	movs	r1, #33	; 0x21
 80088c8:	f7fa fc91 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80088cc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80088ce:	aa0a      	add	r2, sp, #40	; 0x28
 80088d0:	a909      	add	r1, sp, #36	; 0x24
 80088d2:	ee18 0a90 	vmov	r0, s17
 80088d6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80088da:	2302      	movs	r3, #2
 80088dc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80088e0:	f00a fb5f 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80088e4:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80088e6:	ee18 0a90 	vmov	r0, s17
 80088ea:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80088ee:	f7fa fcd3 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80088f2:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80088f6:	3314      	adds	r3, #20
 80088f8:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80088fc:	ee18 1a90 	vmov	r1, s17
 8008900:	4630      	mov	r0, r6
        colorPressed = col;
 8008902:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 8008906:	f007 ffb3 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800890a:	ee19 0a10 	vmov	r0, s18
 800890e:	224e      	movs	r2, #78	; 0x4e
 8008910:	4639      	mov	r1, r7
 8008912:	f7fa fc6c 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008916:	4630      	mov	r0, r6
 8008918:	ee19 1a10 	vmov	r1, s18
 800891c:	f007 ffa8 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008920:	4620      	mov	r0, r4
 8008922:	b00d      	add	sp, #52	; 0x34
 8008924:	ecbd 8b04 	vpop	{d8-d9}
 8008928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800892c:	0802e470 	.word	0x0802e470
 8008930:	0802f218 	.word	0x0802f218
 8008934:	0802f3e0 	.word	0x0802f3e0
 8008938:	0802ef4c 	.word	0x0802ef4c
 800893c:	0802e458 	.word	0x0802e458
 8008940:	08008603 	.word	0x08008603
 8008944:	0802c8b8 	.word	0x0802c8b8

08008948 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008948:	4770      	bx	lr

0800894a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800894a:	4770      	bx	lr

0800894c <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800894c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800894e:	68c2      	ldr	r2, [r0, #12]
 8008950:	6844      	ldr	r4, [r0, #4]
 8008952:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008954:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008956:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800895a:	07d2      	lsls	r2, r2, #31
 800895c:	bf48      	it	mi
 800895e:	5962      	ldrmi	r2, [r4, r5]
 8008960:	689b      	ldr	r3, [r3, #8]
    }
 8008962:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008964:	bf48      	it	mi
 8008966:	58d3      	ldrmi	r3, [r2, r3]
 8008968:	4718      	bx	r3

0800896a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800896a:	6843      	ldr	r3, [r0, #4]
 800896c:	b12b      	cbz	r3, 800897a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800896e:	6883      	ldr	r3, [r0, #8]
 8008970:	b92b      	cbnz	r3, 800897e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008972:	68c0      	ldr	r0, [r0, #12]
 8008974:	f000 0001 	and.w	r0, r0, #1
 8008978:	4770      	bx	lr
 800897a:	4618      	mov	r0, r3
 800897c:	4770      	bx	lr
 800897e:	2001      	movs	r0, #1
    }
 8008980:	4770      	bx	lr

08008982 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008982:	b510      	push	{r4, lr}
 8008984:	2110      	movs	r1, #16
 8008986:	4604      	mov	r4, r0
 8008988:	f021 fab5 	bl	8029ef6 <_ZdlPvj>
 800898c:	4620      	mov	r0, r4
 800898e:	bd10      	pop	{r4, pc}

08008990 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008990:	b510      	push	{r4, lr}
 8008992:	4b03      	ldr	r3, [pc, #12]	; (80089a0 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8008994:	6003      	str	r3, [r0, #0]
 8008996:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008998:	f00b fd00 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800899c:	4620      	mov	r0, r4
 800899e:	bd10      	pop	{r4, pc}
 80089a0:	0802e4bc 	.word	0x0802e4bc

080089a4 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80089a4:	b507      	push	{r0, r1, r2, lr}
 80089a6:	4b07      	ldr	r3, [pc, #28]	; (80089c4 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80089a8:	6003      	str	r3, [r0, #0]
 80089aa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80089ac:	f00b fcf6 	bl	801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80089b0:	9801      	ldr	r0, [sp, #4]
 80089b2:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80089b6:	f021 fa9e 	bl	8029ef6 <_ZdlPvj>
 80089ba:	9801      	ldr	r0, [sp, #4]
 80089bc:	b003      	add	sp, #12
 80089be:	f85d fb04 	ldr.w	pc, [sp], #4
 80089c2:	bf00      	nop
 80089c4:	0802e4bc 	.word	0x0802e4bc

080089c8 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80089c8:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80089cc:	4288      	cmp	r0, r1
{
 80089ce:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80089d0:	d105      	bne.n	80089de <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80089d2:	f00d f9e5 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80089d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80089da:	f7fb bfdf 	b.w	800499c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80089de:	bd08      	pop	{r3, pc}

080089e0 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80089e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089e4:	ed2d 8b04 	vpush	{d8-d9}
 80089e8:	4604      	mov	r4, r0
 80089ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80089ec:	46a3      	mov	fp, r4
 80089ee:	2500      	movs	r5, #0
 80089f0:	f00e fe56 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 80089f4:	4bd1      	ldr	r3, [pc, #836]	; (8008d3c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80089f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80089f8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80089fc:	2226      	movs	r2, #38	; 0x26
 80089fe:	4629      	mov	r1, r5
 8008a00:	4658      	mov	r0, fp
 8008a02:	f022 fb64 	bl	802b0ce <memset>
 8008a06:	4658      	mov	r0, fp
 8008a08:	f7fa fc12 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8008a0c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008a10:	26ff      	movs	r6, #255	; 0xff
 8008a12:	4bcb      	ldr	r3, [pc, #812]	; (8008d40 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008a14:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008a16:	2226      	movs	r2, #38	; 0x26
 8008a18:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008a1c:	4629      	mov	r1, r5
 8008a1e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008a22:	4650      	mov	r0, sl
 8008a24:	66a5      	str	r5, [r4, #104]	; 0x68
 8008a26:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a2a:	f022 fb50 	bl	802b0ce <memset>
 8008a2e:	4650      	mov	r0, sl
 8008a30:	f7fa fbfe 	bl	8003230 <_ZN8touchgfx6WidgetC1Ev>
 8008a34:	4bc3      	ldr	r3, [pc, #780]	; (8008d44 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8008a36:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008a38:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008a3c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008a40:	a90a      	add	r1, sp, #40	; 0x28
 8008a42:	4650      	mov	r0, sl
 8008a44:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008a48:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008a4c:	f00a fc9f 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008a50:	4648      	mov	r0, r9
 8008a52:	f7fa fbff 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008a56:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8008a5a:	4bbb      	ldr	r3, [pc, #748]	; (8008d48 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8008a5c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008a60:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8008a64:	4638      	mov	r0, r7
 8008a66:	f009 fb5b 	bl	8012120 <_ZN8touchgfx4LineC1Ev>
 8008a6a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008a6e:	4618      	mov	r0, r3
 8008a70:	9303      	str	r3, [sp, #12]
 8008a72:	f7fa f9dd 	bl	8002e30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008a76:	4bb5      	ldr	r3, [pc, #724]	; (8008d4c <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8008a78:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8008a7c:	3324      	adds	r3, #36	; 0x24
 8008a7e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8008a82:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8008a86:	4618      	mov	r0, r3
 8008a88:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008a8c:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8008a90:	ee09 3a10 	vmov	s18, r3
 8008a94:	f00a fdbc 	bl	8013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008a98:	4640      	mov	r0, r8
 8008a9a:	f7fa fbdb 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008a9e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8008aa2:	4618      	mov	r0, r3
 8008aa4:	ee08 3a10 	vmov	s16, r3
 8008aa8:	f7fa fbd4 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
 8008aac:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008ab0:	4618      	mov	r0, r3
 8008ab2:	ee08 3a90 	vmov	s17, r3
 8008ab6:	f7fa fbcd 	bl	8003254 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008aba:	4aa5      	ldr	r2, [pc, #660]	; (8008d50 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008abc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008ac0:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008ac4:	4aa3      	ldr	r2, [pc, #652]	; (8008d54 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008ac6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008aca:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008ace:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008ad2:	f00b fc59 	bl	8014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008ad6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008ada:	462a      	mov	r2, r5
 8008adc:	4658      	mov	r0, fp
 8008ade:	9300      	str	r3, [sp, #0]
 8008ae0:	4629      	mov	r1, r5
 8008ae2:	23f0      	movs	r3, #240	; 0xf0
 8008ae4:	f7fa fb90 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008ae8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008aea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008aee:	66a3      	str	r3, [r4, #104]	; 0x68
 8008af0:	4659      	mov	r1, fp
 8008af2:	4630      	mov	r0, r6
 8008af4:	f007 febc 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008af8:	462a      	mov	r2, r5
 8008afa:	4650      	mov	r0, sl
 8008afc:	4629      	mov	r1, r5
 8008afe:	f7fa fb76 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008b02:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008b04:	4650      	mov	r0, sl
 8008b06:	a90a      	add	r1, sp, #40	; 0x28
 8008b08:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008b0c:	f00a fc3f 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008b10:	4651      	mov	r1, sl
 8008b12:	4630      	mov	r0, r6
 8008b14:	f007 feac 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008b18:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008b1c:	2156      	movs	r1, #86	; 0x56
 8008b1e:	4648      	mov	r0, r9
 8008b20:	f7fa fb65 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008b24:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008b28:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008b2c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008b30:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008b34:	4650      	mov	r0, sl
 8008b36:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008b3a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008b3e:	4649      	mov	r1, r9
 8008b40:	4798      	blx	r3
 8008b42:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8008b46:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008b4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008b4e:	4b82      	ldr	r3, [pc, #520]	; (8008d58 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8008b50:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8008b52:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8008b56:	b92b      	cbnz	r3, 8008b64 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008b58:	4b80      	ldr	r3, [pc, #512]	; (8008d5c <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8008b5a:	4a81      	ldr	r2, [pc, #516]	; (8008d60 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008b5c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008b5e:	4881      	ldr	r0, [pc, #516]	; (8008d64 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8008b60:	f022 f8b0 	bl	802acc4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008b64:	4b80      	ldr	r3, [pc, #512]	; (8008d68 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008b66:	881b      	ldrh	r3, [r3, #0]
 8008b68:	2b22      	cmp	r3, #34	; 0x22
 8008b6a:	d803      	bhi.n	8008b74 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008b6c:	4b7f      	ldr	r3, [pc, #508]	; (8008d6c <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8008b6e:	4a7c      	ldr	r2, [pc, #496]	; (8008d60 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008b70:	2161      	movs	r1, #97	; 0x61
 8008b72:	e7f4      	b.n	8008b5e <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8008b74:	4b7e      	ldr	r3, [pc, #504]	; (8008d70 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8008b76:	2122      	movs	r1, #34	; 0x22
 8008b78:	6818      	ldr	r0, [r3, #0]
 8008b7a:	f000 fb1b 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8008b7e:	4a7d      	ldr	r2, [pc, #500]	; (8008d74 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8008b80:	4603      	mov	r3, r0
 8008b82:	2104      	movs	r1, #4
 8008b84:	4650      	mov	r0, sl
 8008b86:	f010 fa7b 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8008b8a:	4648      	mov	r0, r9
        wc1 = value;
 8008b8c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8008b90:	f00a f802 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008b94:	4b78      	ldr	r3, [pc, #480]	; (8008d78 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8008b96:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008b98:	a90a      	add	r1, sp, #40	; 0x28
 8008b9a:	2323      	movs	r3, #35	; 0x23
 8008b9c:	4648      	mov	r0, r9
 8008b9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008ba2:	f00a f819 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008ba6:	4649      	mov	r1, r9
 8008ba8:	4630      	mov	r0, r6
 8008baa:	f007 fe61 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008bae:	230a      	movs	r3, #10
 8008bb0:	9300      	str	r3, [sp, #0]
 8008bb2:	2232      	movs	r2, #50	; 0x32
 8008bb4:	23f0      	movs	r3, #240	; 0xf0
 8008bb6:	4629      	mov	r1, r5
 8008bb8:	4638      	mov	r0, r7
 8008bba:	f7fa fb25 	bl	8003208 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008bbe:	9b03      	ldr	r3, [sp, #12]
 8008bc0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008bc4:	22a0      	movs	r2, #160	; 0xa0
 8008bc6:	4611      	mov	r1, r2
 8008bc8:	4638      	mov	r0, r7
 8008bca:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008bce:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008bd2:	f009 fbbb 	bl	801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008bd6:	22a0      	movs	r2, #160	; 0xa0
 8008bd8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008bdc:	4638      	mov	r0, r7
 8008bde:	f009 fbc0 	bl	8012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008be2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008be6:	2b20      	cmp	r3, #32
 8008be8:	d005      	beq.n	8008bf6 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008bea:	2320      	movs	r3, #32
 8008bec:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008bf0:	4638      	mov	r0, r7
 8008bf2:	f009 fab5 	bl	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008bf6:	4638      	mov	r0, r7
 8008bf8:	2101      	movs	r1, #1
 8008bfa:	f009 fbbd 	bl	8012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008bfe:	4639      	mov	r1, r7
 8008c00:	4630      	mov	r0, r6
 8008c02:	f007 fe35 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008c06:	ee19 0a10 	vmov	r0, s18
 8008c0a:	22f0      	movs	r2, #240	; 0xf0
 8008c0c:	2121      	movs	r1, #33	; 0x21
 8008c0e:	f7fa faee 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008c12:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008c14:	aa0a      	add	r2, sp, #40	; 0x28
 8008c16:	a909      	add	r1, sp, #36	; 0x24
 8008c18:	ee19 0a10 	vmov	r0, s18
 8008c1c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008c20:	2302      	movs	r3, #2
 8008c22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008c26:	f00a f9bc 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008c2a:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 8008c2c:	ee19 0a10 	vmov	r0, s18
 8008c30:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008c34:	f7fa fb30 	bl	8003298 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008c38:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008c3c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008c40:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008c44:	ee19 1a10 	vmov	r1, s18
 8008c48:	4630      	mov	r0, r6
        colorPressed = col;
 8008c4a:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8008c4e:	ad04      	add	r5, sp, #16
 8008c50:	f007 fe0e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008c54:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008c58:	225b      	movs	r2, #91	; 0x5b
 8008c5a:	4640      	mov	r0, r8
 8008c5c:	2105      	movs	r1, #5
 8008c5e:	f7fa fac6 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008c62:	4641      	mov	r1, r8
 8008c64:	4628      	mov	r0, r5
        color = newColor;
 8008c66:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008c6a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008c6e:	f009 fd19 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c76:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008c7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008c7e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008d78 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008c82:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008c86:	2353      	movs	r3, #83	; 0x53
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008c88:	a90a      	add	r1, sp, #40	; 0x28
 8008c8a:	4640      	mov	r0, r8
 8008c8c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c90:	f009 ffa2 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c94:	4641      	mov	r1, r8
 8008c96:	4630      	mov	r0, r6
 8008c98:	f007 fdea 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008c9c:	ee18 0a10 	vmov	r0, s16
 8008ca0:	2223      	movs	r2, #35	; 0x23
 8008ca2:	2145      	movs	r1, #69	; 0x45
 8008ca4:	f7fa faa3 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008ca8:	ee18 1a10 	vmov	r1, s16
 8008cac:	4628      	mov	r0, r5
        color = newColor;
 8008cae:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008cb2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008cb6:	f009 fcf5 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008cba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008cbe:	ee18 3a10 	vmov	r3, s16
 8008cc2:	333c      	adds	r3, #60	; 0x3c
 8008cc4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008cc8:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008cca:	ee18 0a10 	vmov	r0, s16
 8008cce:	a90a      	add	r1, sp, #40	; 0x28
 8008cd0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008cd4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008cd8:	f009 ff7e 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008cdc:	ee18 1a10 	vmov	r1, s16
 8008ce0:	4630      	mov	r0, r6
 8008ce2:	f007 fdc5 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008ce6:	ee18 0a90 	vmov	r0, s17
 8008cea:	220c      	movs	r2, #12
 8008cec:	2136      	movs	r1, #54	; 0x36
 8008cee:	f7fa fa7e 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008cf2:	ee18 1a90 	vmov	r1, s17
 8008cf6:	4628      	mov	r0, r5
        color = newColor;
 8008cf8:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008cfc:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008d00:	f009 fcd0 	bl	80126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d04:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d08:	ee18 3a90 	vmov	r3, s17
 8008d0c:	333c      	adds	r3, #60	; 0x3c
 8008d0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d12:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008d14:	ee18 0a90 	vmov	r0, s17
 8008d18:	a90a      	add	r1, sp, #40	; 0x28
 8008d1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d1e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008d22:	f009 ff59 	bl	8012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d26:	4630      	mov	r0, r6
 8008d28:	ee18 1a90 	vmov	r1, s17
 8008d2c:	f007 fda0 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008d30:	4620      	mov	r0, r4
 8008d32:	b00d      	add	sp, #52	; 0x34
 8008d34:	ecbd 8b04 	vpop	{d8-d9}
 8008d38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008d3c:	0802e4bc 	.word	0x0802e4bc
 8008d40:	0802f218 	.word	0x0802f218
 8008d44:	0802f3e0 	.word	0x0802f3e0
 8008d48:	0802c8c8 	.word	0x0802c8c8
 8008d4c:	0802ef4c 	.word	0x0802ef4c
 8008d50:	0802e4a4 	.word	0x0802e4a4
 8008d54:	080089c9 	.word	0x080089c9
 8008d58:	20012dfc 	.word	0x20012dfc
 8008d5c:	0802c708 	.word	0x0802c708
 8008d60:	0802c80a 	.word	0x0802c80a
 8008d64:	0802c785 	.word	0x0802c785
 8008d68:	20012e00 	.word	0x20012e00
 8008d6c:	0802c7cc 	.word	0x0802c7cc
 8008d70:	20012e08 	.word	0x20012e08
 8008d74:	0802c842 	.word	0x0802c842
 8008d78:	0802c8b8 	.word	0x0802c8b8

08008d7c <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008d7c:	4770      	bx	lr

08008d7e <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008d7e:	4770      	bx	lr

08008d80 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008d80:	b510      	push	{r4, lr}
}
 8008d82:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008d84:	4604      	mov	r4, r0
}
 8008d86:	f021 f8b6 	bl	8029ef6 <_ZdlPvj>
 8008d8a:	4620      	mov	r0, r4
 8008d8c:	bd10      	pop	{r4, pc}
	...

08008d90 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008d90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008d94:	4604      	mov	r4, r0
 8008d96:	4626      	mov	r6, r4
 8008d98:	f00e fc82 	bl	80176a0 <_ZN8touchgfx6ScreenC1Ev>
 8008d9c:	2500      	movs	r5, #0
 8008d9e:	4b2e      	ldr	r3, [pc, #184]	; (8008e58 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008da0:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008da2:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008da6:	4b2d      	ldr	r3, [pc, #180]	; (8008e5c <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008da8:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008daa:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008dae:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008db2:	23ff      	movs	r3, #255	; 0xff
 8008db4:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008db8:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008dbc:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008dc0:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008dc4:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008dc8:	4a25      	ldr	r2, [pc, #148]	; (8008e60 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008dca:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008dce:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008dd2:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008dd4:	a901      	add	r1, sp, #4
 8008dd6:	4638      	mov	r0, r7
 8008dd8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008ddc:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008de0:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008de4:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008de8:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008dec:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008df0:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008df4:	66a5      	str	r5, [r4, #104]	; 0x68
 8008df6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008dfa:	f00a fac8 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008dfe:	462a      	mov	r2, r5
 8008e00:	4629      	mov	r1, r5
 8008e02:	4630      	mov	r0, r6
 8008e04:	f7fa f9f3 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008e08:	4630      	mov	r0, r6
 8008e0a:	21f0      	movs	r1, #240	; 0xf0
 8008e0c:	f7f9 ff5c 	bl	8002cc8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008e10:	4630      	mov	r0, r6
 8008e12:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008e16:	f7f9 ff59 	bl	8002ccc <_ZN8touchgfx8Drawable9setHeightEs>
 8008e1a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008e1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008e22:	66a3      	str	r3, [r4, #104]	; 0x68
 8008e24:	4631      	mov	r1, r6
 8008e26:	4640      	mov	r0, r8
 8008e28:	f007 fd22 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008e2c:	462a      	mov	r2, r5
 8008e2e:	4638      	mov	r0, r7
 8008e30:	f06f 0102 	mvn.w	r1, #2
 8008e34:	f7fa f9db 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8008e38:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008e3a:	a901      	add	r1, sp, #4
 8008e3c:	4638      	mov	r0, r7
 8008e3e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008e42:	f00a faa4 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008e46:	4640      	mov	r0, r8
 8008e48:	4639      	mov	r1, r7
 8008e4a:	f007 fd11 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008e4e:	4620      	mov	r0, r4
 8008e50:	b002      	add	sp, #8
 8008e52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e56:	bf00      	nop
 8008e58:	0802e4f0 	.word	0x0802e4f0
 8008e5c:	0802f218 	.word	0x0802f218
 8008e60:	0802f3e0 	.word	0x0802f3e0

08008e64 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008e64:	4770      	bx	lr
	...

08008e68 <_Z23getFont_verdana_10_4bppv>:
{
 8008e68:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008e6a:	4d17      	ldr	r5, [pc, #92]	; (8008ec8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008e6c:	682c      	ldr	r4, [r5, #0]
 8008e6e:	f3bf 8f5b 	dmb	ish
 8008e72:	f014 0401 	ands.w	r4, r4, #1
{
 8008e76:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008e78:	d122      	bne.n	8008ec0 <_Z23getFont_verdana_10_4bppv+0x58>
 8008e7a:	4628      	mov	r0, r5
 8008e7c:	f021 f83d 	bl	8029efa <__cxa_guard_acquire>
 8008e80:	b1f0      	cbz	r0, 8008ec0 <_Z23getFont_verdana_10_4bppv+0x58>
 8008e82:	233f      	movs	r3, #63	; 0x3f
 8008e84:	9309      	str	r3, [sp, #36]	; 0x24
 8008e86:	4b11      	ldr	r3, [pc, #68]	; (8008ecc <_Z23getFont_verdana_10_4bppv+0x64>)
 8008e88:	9308      	str	r3, [sp, #32]
 8008e8a:	4b11      	ldr	r3, [pc, #68]	; (8008ed0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008e8c:	9307      	str	r3, [sp, #28]
 8008e8e:	2301      	movs	r3, #1
 8008e90:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008e94:	9304      	str	r3, [sp, #16]
 8008e96:	2304      	movs	r3, #4
 8008e98:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008e9c:	230a      	movs	r3, #10
 8008e9e:	490d      	ldr	r1, [pc, #52]	; (8008ed4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008ea0:	9300      	str	r3, [sp, #0]
 8008ea2:	225f      	movs	r2, #95	; 0x5f
 8008ea4:	230c      	movs	r3, #12
 8008ea6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008eaa:	480b      	ldr	r0, [pc, #44]	; (8008ed8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008eac:	940a      	str	r4, [sp, #40]	; 0x28
 8008eae:	9401      	str	r4, [sp, #4]
 8008eb0:	f7fd f9ec 	bl	800628c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008eb4:	4809      	ldr	r0, [pc, #36]	; (8008edc <_Z23getFont_verdana_10_4bppv+0x74>)
 8008eb6:	f021 ff23 	bl	802ad00 <atexit>
 8008eba:	4628      	mov	r0, r5
 8008ebc:	f021 f829 	bl	8029f12 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008ec0:	4805      	ldr	r0, [pc, #20]	; (8008ed8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008ec2:	b00f      	add	sp, #60	; 0x3c
 8008ec4:	bd30      	pop	{r4, r5, pc}
 8008ec6:	bf00      	nop
 8008ec8:	20001ec4 	.word	0x20001ec4
 8008ecc:	08047084 	.word	0x08047084
 8008ed0:	080472c0 	.word	0x080472c0
 8008ed4:	080460cc 	.word	0x080460cc
 8008ed8:	20001ec8 	.word	0x20001ec8
 8008edc:	08008e65 	.word	0x08008e65

08008ee0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008ee0:	4770      	bx	lr
	...

08008ee4 <_Z23getFont_verdana_12_4bppv>:
{
 8008ee4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008ee6:	4d17      	ldr	r5, [pc, #92]	; (8008f44 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008ee8:	682c      	ldr	r4, [r5, #0]
 8008eea:	f3bf 8f5b 	dmb	ish
 8008eee:	f014 0401 	ands.w	r4, r4, #1
{
 8008ef2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008ef4:	d122      	bne.n	8008f3c <_Z23getFont_verdana_12_4bppv+0x58>
 8008ef6:	4628      	mov	r0, r5
 8008ef8:	f020 ffff 	bl	8029efa <__cxa_guard_acquire>
 8008efc:	b1f0      	cbz	r0, 8008f3c <_Z23getFont_verdana_12_4bppv+0x58>
 8008efe:	233f      	movs	r3, #63	; 0x3f
 8008f00:	9309      	str	r3, [sp, #36]	; 0x24
 8008f02:	4b11      	ldr	r3, [pc, #68]	; (8008f48 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008f04:	9308      	str	r3, [sp, #32]
 8008f06:	4b11      	ldr	r3, [pc, #68]	; (8008f4c <_Z23getFont_verdana_12_4bppv+0x68>)
 8008f08:	9307      	str	r3, [sp, #28]
 8008f0a:	2301      	movs	r3, #1
 8008f0c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008f10:	9304      	str	r3, [sp, #16]
 8008f12:	2304      	movs	r3, #4
 8008f14:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008f18:	230c      	movs	r3, #12
 8008f1a:	490d      	ldr	r1, [pc, #52]	; (8008f50 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008f1c:	9300      	str	r3, [sp, #0]
 8008f1e:	2260      	movs	r2, #96	; 0x60
 8008f20:	230f      	movs	r3, #15
 8008f22:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008f26:	480b      	ldr	r0, [pc, #44]	; (8008f54 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008f28:	940a      	str	r4, [sp, #40]	; 0x28
 8008f2a:	9401      	str	r4, [sp, #4]
 8008f2c:	f7fd f9ae 	bl	800628c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008f30:	4809      	ldr	r0, [pc, #36]	; (8008f58 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008f32:	f021 fee5 	bl	802ad00 <atexit>
 8008f36:	4628      	mov	r0, r5
 8008f38:	f020 ffeb 	bl	8029f12 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008f3c:	4805      	ldr	r0, [pc, #20]	; (8008f54 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008f3e:	b00f      	add	sp, #60	; 0x3c
 8008f40:	bd30      	pop	{r4, r5, pc}
 8008f42:	bf00      	nop
 8008f44:	20001ef4 	.word	0x20001ef4
 8008f48:	080470b8 	.word	0x080470b8
 8008f4c:	080472c4 	.word	0x080472c4
 8008f50:	08046600 	.word	0x08046600
 8008f54:	20001ef8 	.word	0x20001ef8
 8008f58:	08008ee1 	.word	0x08008ee1

08008f5c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008f5c:	4770      	bx	lr
	...

08008f60 <_Z23getFont_verdana_19_4bppv>:
{
 8008f60:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008f62:	4d17      	ldr	r5, [pc, #92]	; (8008fc0 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008f64:	682c      	ldr	r4, [r5, #0]
 8008f66:	f3bf 8f5b 	dmb	ish
 8008f6a:	f014 0401 	ands.w	r4, r4, #1
{
 8008f6e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008f70:	d122      	bne.n	8008fb8 <_Z23getFont_verdana_19_4bppv+0x58>
 8008f72:	4628      	mov	r0, r5
 8008f74:	f020 ffc1 	bl	8029efa <__cxa_guard_acquire>
 8008f78:	b1f0      	cbz	r0, 8008fb8 <_Z23getFont_verdana_19_4bppv+0x58>
 8008f7a:	233f      	movs	r3, #63	; 0x3f
 8008f7c:	9309      	str	r3, [sp, #36]	; 0x24
 8008f7e:	4b11      	ldr	r3, [pc, #68]	; (8008fc4 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008f80:	9308      	str	r3, [sp, #32]
 8008f82:	4b11      	ldr	r3, [pc, #68]	; (8008fc8 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008f84:	9307      	str	r3, [sp, #28]
 8008f86:	2301      	movs	r3, #1
 8008f88:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008f8c:	9304      	str	r3, [sp, #16]
 8008f8e:	2304      	movs	r3, #4
 8008f90:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008f94:	2313      	movs	r3, #19
 8008f96:	490d      	ldr	r1, [pc, #52]	; (8008fcc <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008f98:	9300      	str	r3, [sp, #0]
 8008f9a:	225f      	movs	r2, #95	; 0x5f
 8008f9c:	2317      	movs	r3, #23
 8008f9e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008fa2:	480b      	ldr	r0, [pc, #44]	; (8008fd0 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008fa4:	940a      	str	r4, [sp, #40]	; 0x28
 8008fa6:	9401      	str	r4, [sp, #4]
 8008fa8:	f7fd f970 	bl	800628c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008fac:	4809      	ldr	r0, [pc, #36]	; (8008fd4 <_Z23getFont_verdana_19_4bppv+0x74>)
 8008fae:	f021 fea7 	bl	802ad00 <atexit>
 8008fb2:	4628      	mov	r0, r5
 8008fb4:	f020 ffad 	bl	8029f12 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008fb8:	4805      	ldr	r0, [pc, #20]	; (8008fd0 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008fba:	b00f      	add	sp, #60	; 0x3c
 8008fbc:	bd30      	pop	{r4, r5, pc}
 8008fbe:	bf00      	nop
 8008fc0:	20001f24 	.word	0x20001f24
 8008fc4:	0804713c 	.word	0x0804713c
 8008fc8:	080472c8 	.word	0x080472c8
 8008fcc:	08046b40 	.word	0x08046b40
 8008fd0:	20001f28 	.word	0x20001f28
 8008fd4:	08008f5d 	.word	0x08008f5d

08008fd8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008fd8:	4770      	bx	lr
	...

08008fdc <_Z23getFont_verdana_40_4bppv>:
{
 8008fdc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008fde:	4d16      	ldr	r5, [pc, #88]	; (8009038 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008fe0:	682c      	ldr	r4, [r5, #0]
 8008fe2:	f3bf 8f5b 	dmb	ish
 8008fe6:	f014 0401 	ands.w	r4, r4, #1
{
 8008fea:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008fec:	d120      	bne.n	8009030 <_Z23getFont_verdana_40_4bppv+0x54>
 8008fee:	4628      	mov	r0, r5
 8008ff0:	f020 ff83 	bl	8029efa <__cxa_guard_acquire>
 8008ff4:	b1e0      	cbz	r0, 8009030 <_Z23getFont_verdana_40_4bppv+0x54>
 8008ff6:	233f      	movs	r3, #63	; 0x3f
 8008ff8:	9309      	str	r3, [sp, #36]	; 0x24
 8008ffa:	4b10      	ldr	r3, [pc, #64]	; (800903c <_Z23getFont_verdana_40_4bppv+0x60>)
 8008ffc:	9308      	str	r3, [sp, #32]
 8008ffe:	4b10      	ldr	r3, [pc, #64]	; (8009040 <_Z23getFont_verdana_40_4bppv+0x64>)
 8009000:	4910      	ldr	r1, [pc, #64]	; (8009044 <_Z23getFont_verdana_40_4bppv+0x68>)
 8009002:	4811      	ldr	r0, [pc, #68]	; (8009048 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8009004:	940a      	str	r4, [sp, #40]	; 0x28
 8009006:	2201      	movs	r2, #1
 8009008:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800900c:	2304      	movs	r3, #4
 800900e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009012:	2328      	movs	r3, #40	; 0x28
 8009014:	9300      	str	r3, [sp, #0]
 8009016:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800901a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800901e:	9405      	str	r4, [sp, #20]
 8009020:	f7fd f934 	bl	800628c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009024:	4809      	ldr	r0, [pc, #36]	; (800904c <_Z23getFont_verdana_40_4bppv+0x70>)
 8009026:	f021 fe6b 	bl	802ad00 <atexit>
 800902a:	4628      	mov	r0, r5
 800902c:	f020 ff71 	bl	8029f12 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8009030:	4805      	ldr	r0, [pc, #20]	; (8009048 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8009032:	b00f      	add	sp, #60	; 0x3c
 8009034:	bd30      	pop	{r4, r5, pc}
 8009036:	bf00      	nop
 8009038:	20001f54 	.word	0x20001f54
 800903c:	080472bc 	.word	0x080472bc
 8009040:	080472cc 	.word	0x080472cc
 8009044:	08047074 	.word	0x08047074
 8009048:	20001f58 	.word	0x20001f58
 800904c:	08008fd9 	.word	0x08008fd9

08009050 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8009050:	2000      	movs	r0, #0
 8009052:	4770      	bx	lr

08009054 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8009054:	2000      	movs	r0, #0
 8009056:	4770      	bx	lr

08009058 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8009058:	b40e      	push	{r1, r2, r3}
 800905a:	b503      	push	{r0, r1, lr}
 800905c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800905e:	2100      	movs	r1, #0
{
 8009060:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8009064:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8009066:	f00d fe59 	bl	8016d1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800906a:	b002      	add	sp, #8
 800906c:	f85d eb04 	ldr.w	lr, [sp], #4
 8009070:	b003      	add	sp, #12
 8009072:	4770      	bx	lr

08009074 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8009074:	b40c      	push	{r2, r3}
 8009076:	b507      	push	{r0, r1, r2, lr}
 8009078:	ab04      	add	r3, sp, #16
 800907a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800907e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8009080:	f00d fe4c 	bl	8016d1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8009084:	b003      	add	sp, #12
 8009086:	f85d eb04 	ldr.w	lr, [sp], #4
 800908a:	b002      	add	sp, #8
 800908c:	4770      	bx	lr
	...

08009090 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8009090:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8009092:	b510      	push	{r4, lr}
 8009094:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8009096:	b373      	cbz	r3, 80090f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8009098:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800909a:	b92b      	cbnz	r3, 80090a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800909c:	4b18      	ldr	r3, [pc, #96]	; (8009100 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800909e:	4a19      	ldr	r2, [pc, #100]	; (8009104 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80090a0:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80090a2:	4819      	ldr	r0, [pc, #100]	; (8009108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80090a4:	f021 fe0e 	bl	802acc4 <__assert_func>
            return buffer[pos];
 80090a8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80090aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80090ae:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80090b0:	b30b      	cbz	r3, 80090f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80090b2:	f00f fa30 	bl	8018516 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80090b6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80090b8:	2b01      	cmp	r3, #1
 80090ba:	d803      	bhi.n	80090c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80090bc:	4b13      	ldr	r3, [pc, #76]	; (800910c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80090be:	4a14      	ldr	r2, [pc, #80]	; (8009110 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80090c0:	21cb      	movs	r1, #203	; 0xcb
 80090c2:	e7ee      	b.n	80090a2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80090c4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80090c6:	1c53      	adds	r3, r2, #1
 80090c8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80090ca:	2b09      	cmp	r3, #9
 80090cc:	4619      	mov	r1, r3
 80090ce:	bf88      	it	hi
 80090d0:	f1a3 010a 	subhi.w	r1, r3, #10
 80090d4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80090d8:	f640 103f 	movw	r0, #2367	; 0x93f
 80090dc:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80090de:	4281      	cmp	r1, r0
 80090e0:	d109      	bne.n	80090f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80090e2:	2b0a      	cmp	r3, #10
 80090e4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80090e8:	bf28      	it	cs
 80090ea:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80090ec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80090f0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80090f2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80090f4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80090f6:	4620      	mov	r0, r4
}
 80090f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80090fc:	f00f b90e 	b.w	801831c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009100:	0802e51c 	.word	0x0802e51c
 8009104:	0802e525 	.word	0x0802e525
 8009108:	0802e5d0 	.word	0x0802e5d0
 800910c:	0802e61a 	.word	0x0802e61a
 8009110:	0802e628 	.word	0x0802e628

08009114 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8009114:	f00f b8c9 	b.w	80182aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08009118 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8009118:	b510      	push	{r4, lr}
 800911a:	b086      	sub	sp, #24
 800911c:	ac02      	add	r4, sp, #8
 800911e:	e884 0006 	stmia.w	r4, {r1, r2}
 8009122:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8009124:	ab0a      	add	r3, sp, #40	; 0x28
 8009126:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8009128:	9301      	str	r3, [sp, #4]
 800912a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800912c:	9300      	str	r3, [sp, #0]
 800912e:	4621      	mov	r1, r4
 8009130:	9b08      	ldr	r3, [sp, #32]
 8009132:	f00c f9b7 	bl	80154a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8009136:	b006      	add	sp, #24
 8009138:	bd10      	pop	{r4, pc}
	...

0800913c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800913c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800913e:	bb18      	cbnz	r0, 8009188 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8009140:	4b12      	ldr	r3, [pc, #72]	; (800918c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8009142:	4813      	ldr	r0, [pc, #76]	; (8009190 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8009144:	681c      	ldr	r4, [r3, #0]
 8009146:	4913      	ldr	r1, [pc, #76]	; (8009194 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8009148:	b1b4      	cbz	r4, 8009178 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800914a:	6822      	ldr	r2, [r4, #0]
 800914c:	4422      	add	r2, r4
 800914e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8009150:	6862      	ldr	r2, [r4, #4]
 8009152:	4422      	add	r2, r4
 8009154:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8009156:	68a2      	ldr	r2, [r4, #8]
 8009158:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800915a:	4b0f      	ldr	r3, [pc, #60]	; (8009198 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800915c:	2200      	movs	r2, #0
 800915e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009160:	f000 f838 	bl	80091d4 <_ZN17TypedTextDatabase8getFontsEv>
 8009164:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8009166:	f000 f833 	bl	80091d0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800916a:	4b0c      	ldr	r3, [pc, #48]	; (800919c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800916c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800916e:	4b0c      	ldr	r3, [pc, #48]	; (80091a0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8009170:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8009172:	4b0c      	ldr	r3, [pc, #48]	; (80091a4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8009174:	8018      	strh	r0, [r3, #0]
    }
}
 8009176:	e007      	b.n	8009188 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8009178:	4b0b      	ldr	r3, [pc, #44]	; (80091a8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800917a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800917c:	4b0b      	ldr	r3, [pc, #44]	; (80091ac <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800917e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8009180:	4b0b      	ldr	r3, [pc, #44]	; (80091b0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8009182:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8009184:	2c00      	cmp	r4, #0
 8009186:	d1e8      	bne.n	800915a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8009188:	bd38      	pop	{r3, r4, r5, pc}
 800918a:	bf00      	nop
 800918c:	20001f84 	.word	0x20001f84
 8009190:	20001f88 	.word	0x20001f88
 8009194:	20001f8c 	.word	0x20001f8c
 8009198:	20001f90 	.word	0x20001f90
 800919c:	20012dfc 	.word	0x20012dfc
 80091a0:	20012e04 	.word	0x20012e04
 80091a4:	20012e00 	.word	0x20012e00
 80091a8:	08047464 	.word	0x08047464
 80091ac:	080472d0 	.word	0x080472d0
 80091b0:	08047a90 	.word	0x08047a90

080091b4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80091b4:	4b04      	ldr	r3, [pc, #16]	; (80091c8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80091b6:	681b      	ldr	r3, [r3, #0]
 80091b8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80091bc:	4b03      	ldr	r3, [pc, #12]	; (80091cc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80091be:	681b      	ldr	r3, [r3, #0]
}
 80091c0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80091c4:	4770      	bx	lr
 80091c6:	bf00      	nop
 80091c8:	20001f8c 	.word	0x20001f8c
 80091cc:	20001f88 	.word	0x20001f88

080091d0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80091d0:	2065      	movs	r0, #101	; 0x65
 80091d2:	4770      	bx	lr

080091d4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80091d4:	4800      	ldr	r0, [pc, #0]	; (80091d8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80091d6:	4770      	bx	lr
 80091d8:	20001f94 	.word	0x20001f94

080091dc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80091dc:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80091de:	f7ff febf 	bl	8008f60 <_Z23getFont_verdana_19_4bppv>
};
 80091e2:	4c06      	ldr	r4, [pc, #24]	; (80091fc <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80091e4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80091e6:	f7ff fef9 	bl	8008fdc <_Z23getFont_verdana_40_4bppv>
};
 80091ea:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80091ec:	f7ff fe3c 	bl	8008e68 <_Z23getFont_verdana_10_4bppv>
};
 80091f0:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80091f2:	f7ff fe77 	bl	8008ee4 <_Z23getFont_verdana_12_4bppv>
};
 80091f6:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80091f8:	bd10      	pop	{r4, pc}
 80091fa:	bf00      	nop
 80091fc:	20001f94 	.word	0x20001f94

08009200 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8009200:	4770      	bx	lr

08009202 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8009202:	3804      	subs	r0, #4
 8009204:	4770      	bx	lr

08009206 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8009206:	4770      	bx	lr

08009208 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009208:	68c0      	ldr	r0, [r0, #12]
 800920a:	6803      	ldr	r3, [r0, #0]
 800920c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800920e:	4718      	bx	r3

08009210 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009210:	f1a0 0004 	sub.w	r0, r0, #4
 8009214:	f7ff bff8 	b.w	8009208 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08009218 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8009218:	b510      	push	{r4, lr}
 800921a:	2110      	movs	r1, #16
 800921c:	4604      	mov	r4, r0
 800921e:	f020 fe6a 	bl	8029ef6 <_ZdlPvj>
 8009222:	4620      	mov	r0, r4
 8009224:	bd10      	pop	{r4, pc}

08009226 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8009226:	f1a0 0004 	sub.w	r0, r0, #4
 800922a:	e7f5      	b.n	8009218 <_ZN20CalibrationPresenterD0Ev>

0800922c <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 800922c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800922e:	2200      	movs	r2, #0
 8009230:	6082      	str	r2, [r0, #8]
    : view(v)
 8009232:	4a04      	ldr	r2, [pc, #16]	; (8009244 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8009234:	60c1      	str	r1, [r0, #12]
 8009236:	f102 0408 	add.w	r4, r2, #8
 800923a:	3224      	adds	r2, #36	; 0x24
 800923c:	6004      	str	r4, [r0, #0]
 800923e:	6042      	str	r2, [r0, #4]
}
 8009240:	bd10      	pop	{r4, pc}
 8009242:	bf00      	nop
 8009244:	0802e6fc 	.word	0x0802e6fc

08009248 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8009248:	4770      	bx	lr
	...

0800924c <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 800924c:	b510      	push	{r4, lr}
 800924e:	4b03      	ldr	r3, [pc, #12]	; (800925c <_ZN15CalibrationViewD1Ev+0x10>)
 8009250:	6003      	str	r3, [r0, #0]
 8009252:	4604      	mov	r4, r0
 8009254:	f7f9 ff50 	bl	80030f8 <_ZN19CalibrationViewBaseD1Ev>
 8009258:	4620      	mov	r0, r4
 800925a:	bd10      	pop	{r4, pc}
 800925c:	0802e738 	.word	0x0802e738

08009260 <_ZN15CalibrationViewD0Ev>:
 8009260:	b510      	push	{r4, lr}
 8009262:	4604      	mov	r4, r0
 8009264:	f7ff fff2 	bl	800924c <_ZN15CalibrationViewD1Ev>
 8009268:	4620      	mov	r0, r4
 800926a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800926e:	f020 fe42 	bl	8029ef6 <_ZdlPvj>
 8009272:	4620      	mov	r0, r4
 8009274:	bd10      	pop	{r4, pc}
	...

08009278 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8009278:	b510      	push	{r4, lr}
 800927a:	4604      	mov	r4, r0
 800927c:	f7fa f850 	bl	8003320 <_ZN19CalibrationViewBaseC1Ev>
 8009280:	4b01      	ldr	r3, [pc, #4]	; (8009288 <_ZN15CalibrationViewC1Ev+0x10>)
 8009282:	6023      	str	r3, [r4, #0]
}
 8009284:	4620      	mov	r0, r4
 8009286:	bd10      	pop	{r4, pc}
 8009288:	0802e738 	.word	0x0802e738

0800928c <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 800928c:	f7f9 bf01 	b.w	8003092 <_ZN19CalibrationViewBase11setupScreenEv>

08009290 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8009290:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009292:	4a0a      	ldr	r2, [pc, #40]	; (80092bc <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8009294:	4605      	mov	r5, r0
 8009296:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009298:	460b      	mov	r3, r1
 800929a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800929e:	2104      	movs	r1, #4
 80092a0:	f00f feee 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80092a4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80092a8:	f00d fe62 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80092ac:	b92c      	cbnz	r4, 80092ba <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 80092ae:	f00c fd77 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80092b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80092b6:	f7fb bc61 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80092ba:	bd38      	pop	{r3, r4, r5, pc}
 80092bc:	0802e72c 	.word	0x0802e72c

080092c0 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 80092c0:	4770      	bx	lr

080092c2 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 80092c2:	3804      	subs	r0, #4
 80092c4:	4770      	bx	lr

080092c6 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 80092c6:	4770      	bx	lr

080092c8 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 80092c8:	4770      	bx	lr

080092ca <_ZN25Calibration_HallPresenterD0Ev>:
 80092ca:	b510      	push	{r4, lr}
 80092cc:	2110      	movs	r1, #16
 80092ce:	4604      	mov	r4, r0
 80092d0:	f020 fe11 	bl	8029ef6 <_ZdlPvj>
 80092d4:	4620      	mov	r0, r4
 80092d6:	bd10      	pop	{r4, pc}

080092d8 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80092d8:	f1a0 0004 	sub.w	r0, r0, #4
 80092dc:	e7f5      	b.n	80092ca <_ZN25Calibration_HallPresenterD0Ev>

080092de <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80092de:	4770      	bx	lr

080092e0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80092e0:	b510      	push	{r4, lr}
 80092e2:	2200      	movs	r2, #0
 80092e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80092e6:	4a04      	ldr	r2, [pc, #16]	; (80092f8 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80092e8:	60c1      	str	r1, [r0, #12]
 80092ea:	f102 0408 	add.w	r4, r2, #8
 80092ee:	3224      	adds	r2, #36	; 0x24
 80092f0:	6004      	str	r4, [r0, #0]
 80092f2:	6042      	str	r2, [r0, #4]
}
 80092f4:	bd10      	pop	{r4, pc}
 80092f6:	bf00      	nop
 80092f8:	0802e768 	.word	0x0802e768

080092fc <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80092fc:	4770      	bx	lr

080092fe <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80092fe:	4770      	bx	lr

08009300 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8009300:	b510      	push	{r4, lr}
 8009302:	4b03      	ldr	r3, [pc, #12]	; (8009310 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8009304:	6003      	str	r3, [r0, #0]
 8009306:	4604      	mov	r4, r0
 8009308:	f7fa fa50 	bl	80037ac <_ZN24Calibration_HallViewBaseD1Ev>
 800930c:	4620      	mov	r0, r4
 800930e:	bd10      	pop	{r4, pc}
 8009310:	0802e7a8 	.word	0x0802e7a8

08009314 <_ZN20Calibration_HallViewD0Ev>:
 8009314:	b510      	push	{r4, lr}
 8009316:	4604      	mov	r4, r0
 8009318:	f7ff fff2 	bl	8009300 <_ZN20Calibration_HallViewD1Ev>
 800931c:	4620      	mov	r0, r4
 800931e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8009322:	f020 fde8 	bl	8029ef6 <_ZdlPvj>
 8009326:	4620      	mov	r0, r4
 8009328:	bd10      	pop	{r4, pc}
	...

0800932c <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 800932c:	b510      	push	{r4, lr}
 800932e:	4604      	mov	r4, r0
 8009330:	f7fa fa82 	bl	8003838 <_ZN24Calibration_HallViewBaseC1Ev>
 8009334:	4b01      	ldr	r3, [pc, #4]	; (800933c <_ZN20Calibration_HallViewC1Ev+0x10>)
 8009336:	6023      	str	r3, [r4, #0]
}
 8009338:	4620      	mov	r0, r4
 800933a:	bd10      	pop	{r4, pc}
 800933c:	0802e7a8 	.word	0x0802e7a8

08009340 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8009340:	f7fa ba0f 	b.w	8003762 <_ZN24Calibration_HallViewBase11setupScreenEv>

08009344 <_ZN20Calibration_HallView25function_cali_hall_sensorEv>:

void Calibration_HallView::function_cali_hall_sensor()
{
 8009344:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009346:	4604      	mov	r4, r0
 8009348:	2500      	movs	r5, #0
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800934a:	ab01      	add	r3, sp, #4
 800934c:	4a18      	ldr	r2, [pc, #96]	; (80093b0 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 800934e:	9501      	str	r5, [sp, #4]
 8009350:	210a      	movs	r1, #10
 8009352:	f500 706a 	add.w	r0, r0, #936	; 0x3a8
 8009356:	f010 f87f 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//uint32_t* Samples = MEAS_start_measure();
	//FFT fft = calculate_freq_and_signalstrength(3, Samples);

	Unicode::snprintfFloat(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%.2f", 0.0);
	CALIBRATION_HSR_S.invalidate();
 800935a:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800935e:	f00d fe07 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009362:	ab01      	add	r3, sp, #4
 8009364:	4a12      	ldr	r2, [pc, #72]	; (80093b0 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 8009366:	9501      	str	r5, [sp, #4]
 8009368:	210a      	movs	r1, #10
 800936a:	f504 7065 	add.w	r0, r4, #916	; 0x394
 800936e:	f010 f873 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%.2f", 0.0);
	CALIBRATION_HSR_F.invalidate();
 8009372:	f504 7098 	add.w	r0, r4, #304	; 0x130
 8009376:	f00d fdfb 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 800937a:	ab01      	add	r3, sp, #4
 800937c:	4a0c      	ldr	r2, [pc, #48]	; (80093b0 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 800937e:	9501      	str	r5, [sp, #4]
 8009380:	210a      	movs	r1, #10
 8009382:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 8009386:	f010 f867 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//fft = calculate_freq_and_signalstrength(4, Samples);

	Unicode::snprintfFloat(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%.2f", 0.0);
	CALIBRATION_HSL_S.invalidate();
 800938a:	f104 0098 	add.w	r0, r4, #152	; 0x98
 800938e:	f00d fdef 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009392:	4a07      	ldr	r2, [pc, #28]	; (80093b0 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 8009394:	9501      	str	r5, [sp, #4]
 8009396:	ab01      	add	r3, sp, #4
 8009398:	210a      	movs	r1, #10
 800939a:	f504 7060 	add.w	r0, r4, #896	; 0x380
 800939e:	f010 f85b 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%.2f", 0.0);
	CALIBRATION_HSL_F.invalidate();
 80093a2:	f104 00e4 	add.w	r0, r4, #228	; 0xe4

#endif
}
 80093a6:	b003      	add	sp, #12
 80093a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	CALIBRATION_HSL_F.invalidate();
 80093ac:	f00d bde0 	b.w	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 80093b0:	0802e798 	.word	0x0802e798

080093b4 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 80093b4:	4770      	bx	lr

080093b6 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 80093b6:	3804      	subs	r0, #4
 80093b8:	4770      	bx	lr

080093ba <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 80093ba:	4770      	bx	lr

080093bc <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 80093bc:	4770      	bx	lr

080093be <_ZN24Calibration_PadPresenterD0Ev>:
 80093be:	b510      	push	{r4, lr}
 80093c0:	2110      	movs	r1, #16
 80093c2:	4604      	mov	r4, r0
 80093c4:	f020 fd97 	bl	8029ef6 <_ZdlPvj>
 80093c8:	4620      	mov	r0, r4
 80093ca:	bd10      	pop	{r4, pc}

080093cc <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80093cc:	f1a0 0004 	sub.w	r0, r0, #4
 80093d0:	e7f5      	b.n	80093be <_ZN24Calibration_PadPresenterD0Ev>

080093d2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80093d2:	4770      	bx	lr

080093d4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80093d4:	b510      	push	{r4, lr}
 80093d6:	2200      	movs	r2, #0
 80093d8:	6082      	str	r2, [r0, #8]
    : view(v)
 80093da:	4a04      	ldr	r2, [pc, #16]	; (80093ec <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80093dc:	60c1      	str	r1, [r0, #12]
 80093de:	f102 0408 	add.w	r4, r2, #8
 80093e2:	3224      	adds	r2, #36	; 0x24
 80093e4:	6004      	str	r4, [r0, #0]
 80093e6:	6042      	str	r2, [r0, #4]
}
 80093e8:	bd10      	pop	{r4, pc}
 80093ea:	bf00      	nop
 80093ec:	0802e7dc 	.word	0x0802e7dc

080093f0 <_ZN19Calibration_PadView14tearDownScreenEv>:
    Calibration_PadViewBase::setupScreen();
}

void Calibration_PadView::tearDownScreen() {
    Calibration_PadViewBase::tearDownScreen();
}
 80093f0:	4770      	bx	lr

080093f2 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value) {}
 80093f2:	4770      	bx	lr

080093f4 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 80093f4:	b510      	push	{r4, lr}
 80093f6:	4b03      	ldr	r3, [pc, #12]	; (8009404 <_ZN19Calibration_PadViewD1Ev+0x10>)
 80093f8:	6003      	str	r3, [r0, #0]
 80093fa:	4604      	mov	r4, r0
 80093fc:	f7fa fcf2 	bl	8003de4 <_ZN23Calibration_PadViewBaseD1Ev>
 8009400:	4620      	mov	r0, r4
 8009402:	bd10      	pop	{r4, pc}
 8009404:	0802e814 	.word	0x0802e814

08009408 <_ZN19Calibration_PadViewD0Ev>:
 8009408:	b510      	push	{r4, lr}
 800940a:	4604      	mov	r4, r0
 800940c:	f7ff fff2 	bl	80093f4 <_ZN19Calibration_PadViewD1Ev>
 8009410:	4620      	mov	r0, r4
 8009412:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8009416:	f020 fd6e 	bl	8029ef6 <_ZdlPvj>
 800941a:	4620      	mov	r0, r4
 800941c:	bd10      	pop	{r4, pc}
	...

08009420 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView() {}
 8009420:	b510      	push	{r4, lr}
 8009422:	4604      	mov	r4, r0
 8009424:	f7fa fd18 	bl	8003e58 <_ZN23Calibration_PadViewBaseC1Ev>
 8009428:	4b01      	ldr	r3, [pc, #4]	; (8009430 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800942a:	6023      	str	r3, [r4, #0]
 800942c:	4620      	mov	r0, r4
 800942e:	bd10      	pop	{r4, pc}
 8009430:	0802e814 	.word	0x0802e814

08009434 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8009434:	f7fa bcb1 	b.w	8003d9a <_ZN23Calibration_PadViewBase11setupScreenEv>

08009438 <_ZN19Calibration_PadView17function_cali_padEv>:

void Calibration_PadView::function_cali_pad() {
 8009438:	b530      	push	{r4, r5, lr}
 800943a:	b08b      	sub	sp, #44	; 0x2c
 800943c:	4604      	mov	r4, r0
#ifndef SIMULATOR
	
	ACCU_FFT accu_fft = accurate_FFT();
 800943e:	a802      	add	r0, sp, #8
 8009440:	f7f7 fd08 	bl	8000e54 <accurate_FFT>

    Unicode::snprintfFloat(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE,
 8009444:	9b02      	ldr	r3, [sp, #8]
 8009446:	4a1a      	ldr	r2, [pc, #104]	; (80094b0 <_ZN19Calibration_PadView17function_cali_padEv+0x78>)
 8009448:	9301      	str	r3, [sp, #4]
 800944a:	210a      	movs	r1, #10
 800944c:	ab01      	add	r3, sp, #4
 800944e:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 8009452:	f010 f801 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
                           "%.2f", accu_fft.signal_strength_pr);
    CALIBRATION_PADR_S.invalidate();
 8009456:	f104 0098 	add.w	r0, r4, #152	; 0x98
 800945a:	f00d fd89 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
    Unicode::snprintfFloat(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE,
 800945e:	2500      	movs	r5, #0
 8009460:	ab01      	add	r3, sp, #4
 8009462:	4a13      	ldr	r2, [pc, #76]	; (80094b0 <_ZN19Calibration_PadView17function_cali_padEv+0x78>)
 8009464:	9501      	str	r5, [sp, #4]
 8009466:	210a      	movs	r1, #10
 8009468:	f504 7060 	add.w	r0, r4, #896	; 0x380
 800946c:	f00f fff4 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
                           "%.2f", 0.0);
    CALIBRATION_PADR_F.invalidate();
 8009470:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8009474:	f00d fd7c 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

    Unicode::snprintfFloat(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE,
 8009478:	9b04      	ldr	r3, [sp, #16]
 800947a:	4a0d      	ldr	r2, [pc, #52]	; (80094b0 <_ZN19Calibration_PadView17function_cali_padEv+0x78>)
 800947c:	9301      	str	r3, [sp, #4]
 800947e:	210a      	movs	r1, #10
 8009480:	ab01      	add	r3, sp, #4
 8009482:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 8009486:	f00f ffe7 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
                           "%.2f", accu_fft.signal_strength_pl);
    CALIBRATION_PADL_S.invalidate();
 800948a:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800948e:	f00d fd6f 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009492:	4a07      	ldr	r2, [pc, #28]	; (80094b0 <_ZN19Calibration_PadView17function_cali_padEv+0x78>)
 8009494:	9501      	str	r5, [sp, #4]
 8009496:	ab01      	add	r3, sp, #4
 8009498:	210a      	movs	r1, #10
 800949a:	f504 7065 	add.w	r0, r4, #916	; 0x394
 800949e:	f00f ffdb 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADL_F.invalidate();
 80094a2:	f504 7098 	add.w	r0, r4, #304	; 0x130

#endif
}
 80094a6:	b00b      	add	sp, #44	; 0x2c
 80094a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    CALIBRATION_PADL_F.invalidate();
 80094ac:	f00d bd60 	b.w	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 80094b0:	0802e798 	.word	0x0802e798

080094b4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80094b4:	4770      	bx	lr

080094b6 <_ZN19FrontendApplicationD0Ev>:
 80094b6:	b510      	push	{r4, lr}
 80094b8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80094bc:	4604      	mov	r4, r0
 80094be:	f020 fd1a 	bl	8029ef6 <_ZdlPvj>
 80094c2:	4620      	mov	r0, r4
 80094c4:	bd10      	pop	{r4, pc}

080094c6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80094c6:	b510      	push	{r4, lr}
 80094c8:	4604      	mov	r4, r0
    {
        model.tick();
 80094ca:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80094ce:	f000 fb15 	bl	8009afc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80094d2:	4620      	mov	r0, r4
    }
 80094d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80094d8:	f00c bd26 	b.w	8015f28 <_ZN8touchgfx11Application15handleTickEventEv>

080094dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80094dc:	b510      	push	{r4, lr}
 80094de:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80094e0:	f7fb fa1c 	bl	800491c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80094e4:	4b01      	ldr	r3, [pc, #4]	; (80094ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80094e6:	6023      	str	r3, [r4, #0]
{

}
 80094e8:	4620      	mov	r0, r4
 80094ea:	bd10      	pop	{r4, pc}
 80094ec:	0802e850 	.word	0x0802e850

080094f0 <_ZN17Gauge_with_ValuesD1Ev>:
 80094f0:	b510      	push	{r4, lr}
 80094f2:	4b03      	ldr	r3, [pc, #12]	; (8009500 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80094f4:	6003      	str	r3, [r0, #0]
 80094f6:	4604      	mov	r4, r0
 80094f8:	f7fc fd16 	bl	8005f28 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80094fc:	4620      	mov	r0, r4
 80094fe:	bd10      	pop	{r4, pc}
 8009500:	0802e8a4 	.word	0x0802e8a4

08009504 <_ZN17Gauge_with_ValuesD0Ev>:
 8009504:	b510      	push	{r4, lr}
 8009506:	4604      	mov	r4, r0
 8009508:	f7ff fff2 	bl	80094f0 <_ZN17Gauge_with_ValuesD1Ev>
 800950c:	4620      	mov	r0, r4
 800950e:	f44f 7162 	mov.w	r1, #904	; 0x388
 8009512:	f020 fcf0 	bl	8029ef6 <_ZdlPvj>
 8009516:	4620      	mov	r0, r4
 8009518:	bd10      	pop	{r4, pc}
	...

0800951c <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 800951c:	b510      	push	{r4, lr}
 800951e:	4604      	mov	r4, r0
 8009520:	f7fc fd0c 	bl	8005f3c <_ZN21Gauge_with_ValuesBaseC1Ev>
 8009524:	4b01      	ldr	r3, [pc, #4]	; (800952c <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8009526:	6023      	str	r3, [r4, #0]
{

}
 8009528:	4620      	mov	r0, r4
 800952a:	bd10      	pop	{r4, pc}
 800952c:	0802e8a4 	.word	0x0802e8a4

08009530 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8009530:	f7fc bcfb 	b.w	8005f2a <_ZN21Gauge_with_ValuesBase10initializeEv>

08009534 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8009534:	4770      	bx	lr

08009536 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8009536:	3804      	subs	r0, #4
 8009538:	4770      	bx	lr

0800953a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800953a:	4770      	bx	lr

0800953c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800953c:	68c0      	ldr	r0, [r0, #12]
 800953e:	6803      	ldr	r3, [r0, #0]
 8009540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009542:	4718      	bx	r3

08009544 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009544:	f1a0 0004 	sub.w	r0, r0, #4
 8009548:	f7ff bff8 	b.w	800953c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800954c <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800954c:	b510      	push	{r4, lr}
 800954e:	2110      	movs	r1, #16
 8009550:	4604      	mov	r4, r0
 8009552:	f020 fcd0 	bl	8029ef6 <_ZdlPvj>
 8009556:	4620      	mov	r0, r4
 8009558:	bd10      	pop	{r4, pc}

0800955a <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800955a:	f1a0 0004 	sub.w	r0, r0, #4
 800955e:	e7f5      	b.n	800954c <_ZN18Main_MenuPresenterD0Ev>

08009560 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8009560:	b510      	push	{r4, lr}
 8009562:	2200      	movs	r2, #0
 8009564:	6082      	str	r2, [r0, #8]
    : view(v)
 8009566:	4a04      	ldr	r2, [pc, #16]	; (8009578 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8009568:	60c1      	str	r1, [r0, #12]
 800956a:	f102 0408 	add.w	r4, r2, #8
 800956e:	3224      	adds	r2, #36	; 0x24
 8009570:	6004      	str	r4, [r0, #0]
 8009572:	6042      	str	r2, [r0, #4]
}
 8009574:	bd10      	pop	{r4, pc}
 8009576:	bf00      	nop
 8009578:	0802e930 	.word	0x0802e930

0800957c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800957c:	4770      	bx	lr
	...

08009580 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8009580:	b510      	push	{r4, lr}
 8009582:	4b03      	ldr	r3, [pc, #12]	; (8009590 <_ZN13Main_MenuViewD1Ev+0x10>)
 8009584:	6003      	str	r3, [r0, #0]
 8009586:	4604      	mov	r4, r0
 8009588:	f7fc fed4 	bl	8006334 <_ZN17Main_MenuViewBaseD1Ev>
 800958c:	4620      	mov	r0, r4
 800958e:	bd10      	pop	{r4, pc}
 8009590:	0802e968 	.word	0x0802e968

08009594 <_ZN13Main_MenuViewD0Ev>:
 8009594:	b510      	push	{r4, lr}
 8009596:	4604      	mov	r4, r0
 8009598:	f7ff fff2 	bl	8009580 <_ZN13Main_MenuViewD1Ev>
 800959c:	4620      	mov	r0, r4
 800959e:	f241 117c 	movw	r1, #4476	; 0x117c
 80095a2:	f020 fca8 	bl	8029ef6 <_ZdlPvj>
 80095a6:	4620      	mov	r0, r4
 80095a8:	bd10      	pop	{r4, pc}
	...

080095ac <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80095ac:	b510      	push	{r4, lr}
 80095ae:	4604      	mov	r4, r0
 80095b0:	f7fc ff0a 	bl	80063c8 <_ZN17Main_MenuViewBaseC1Ev>
 80095b4:	4b01      	ldr	r3, [pc, #4]	; (80095bc <_ZN13Main_MenuViewC1Ev+0x10>)
 80095b6:	6023      	str	r3, [r4, #0]
}
 80095b8:	4620      	mov	r0, r4
 80095ba:	bd10      	pop	{r4, pc}
 80095bc:	0802e968 	.word	0x0802e968

080095c0 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80095c0:	f7fc be94 	b.w	80062ec <_ZN17Main_MenuViewBase11setupScreenEv>

080095c4 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80095c4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80095c6:	4a0a      	ldr	r2, [pc, #40]	; (80095f0 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80095c8:	4605      	mov	r5, r0
 80095ca:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80095cc:	460b      	mov	r3, r1
 80095ce:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80095d2:	2104      	movs	r1, #4
 80095d4:	f00f fd54 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80095d8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80095dc:	f00d fcc8 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80095e0:	b92c      	cbnz	r4, 80095ee <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80095e2:	f00c fbdd 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80095e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80095ea:	f7fb bac7 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80095ee:	bd38      	pop	{r3, r4, r5, pc}
 80095f0:	0802e72c 	.word	0x0802e72c

080095f4 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80095f4:	4770      	bx	lr

080095f6 <_ZThn4_N20MeasurementPresenterD1Ev>:
 80095f6:	3804      	subs	r0, #4
 80095f8:	4770      	bx	lr

080095fa <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80095fa:	4770      	bx	lr

080095fc <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80095fc:	68c0      	ldr	r0, [r0, #12]
 80095fe:	6803      	ldr	r3, [r0, #0]
 8009600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009602:	4718      	bx	r3

08009604 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009604:	f1a0 0004 	sub.w	r0, r0, #4
 8009608:	f7ff bff8 	b.w	80095fc <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800960c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800960c:	b510      	push	{r4, lr}
 800960e:	2110      	movs	r1, #16
 8009610:	4604      	mov	r4, r0
 8009612:	f020 fc70 	bl	8029ef6 <_ZdlPvj>
 8009616:	4620      	mov	r0, r4
 8009618:	bd10      	pop	{r4, pc}

0800961a <_ZThn4_N20MeasurementPresenterD0Ev>:
 800961a:	f1a0 0004 	sub.w	r0, r0, #4
 800961e:	e7f5      	b.n	800960c <_ZN20MeasurementPresenterD0Ev>

08009620 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8009620:	b510      	push	{r4, lr}
 8009622:	2200      	movs	r2, #0
 8009624:	6082      	str	r2, [r0, #8]
    : view(v)
 8009626:	4a04      	ldr	r2, [pc, #16]	; (8009638 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8009628:	60c1      	str	r1, [r0, #12]
 800962a:	f102 0408 	add.w	r4, r2, #8
 800962e:	3224      	adds	r2, #36	; 0x24
 8009630:	6004      	str	r4, [r0, #0]
 8009632:	6042      	str	r2, [r0, #4]
}
 8009634:	bd10      	pop	{r4, pc}
 8009636:	bf00      	nop
 8009638:	0802e998 	.word	0x0802e998

0800963c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800963c:	4770      	bx	lr
	...

08009640 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8009640:	b510      	push	{r4, lr}
 8009642:	4b03      	ldr	r3, [pc, #12]	; (8009650 <_ZN15MeasurementViewD1Ev+0x10>)
 8009644:	6003      	str	r3, [r0, #0]
 8009646:	4604      	mov	r4, r0
 8009648:	f7fd f92e 	bl	80068a8 <_ZN19MeasurementViewBaseD1Ev>
 800964c:	4620      	mov	r0, r4
 800964e:	bd10      	pop	{r4, pc}
 8009650:	0802e9d0 	.word	0x0802e9d0

08009654 <_ZN15MeasurementViewD0Ev>:
 8009654:	b510      	push	{r4, lr}
 8009656:	4604      	mov	r4, r0
 8009658:	f7ff fff2 	bl	8009640 <_ZN15MeasurementViewD1Ev>
 800965c:	4620      	mov	r0, r4
 800965e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009662:	f020 fc48 	bl	8029ef6 <_ZdlPvj>
 8009666:	4620      	mov	r0, r4
 8009668:	bd10      	pop	{r4, pc}
	...

0800966c <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800966c:	b510      	push	{r4, lr}
 800966e:	4604      	mov	r4, r0
 8009670:	f7fd f954 	bl	800691c <_ZN19MeasurementViewBaseC1Ev>
 8009674:	4b01      	ldr	r3, [pc, #4]	; (800967c <_ZN15MeasurementViewC1Ev+0x10>)
 8009676:	6023      	str	r3, [r4, #0]
}
 8009678:	4620      	mov	r0, r4
 800967a:	bd10      	pop	{r4, pc}
 800967c:	0802e9d0 	.word	0x0802e9d0

08009680 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8009680:	f7fd b8ee 	b.w	8006860 <_ZN19MeasurementViewBase11setupScreenEv>

08009684 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8009684:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009686:	4a0a      	ldr	r2, [pc, #40]	; (80096b0 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8009688:	4605      	mov	r5, r0
 800968a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800968c:	460b      	mov	r3, r1
 800968e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009692:	2104      	movs	r1, #4
 8009694:	f00f fcf4 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009698:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800969c:	f00d fc68 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80096a0:	b92c      	cbnz	r4, 80096ae <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80096a2:	f00c fb7d 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80096a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80096aa:	f7fb ba67 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80096ae:	bd38      	pop	{r3, r4, r5, pc}
 80096b0:	0802e72c 	.word	0x0802e72c

080096b4 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80096b4:	4770      	bx	lr

080096b6 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80096b6:	3804      	subs	r0, #4
 80096b8:	4770      	bx	lr

080096ba <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80096ba:	4770      	bx	lr

080096bc <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80096bc:	68c0      	ldr	r0, [r0, #12]
 80096be:	6803      	ldr	r3, [r0, #0]
 80096c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096c2:	4718      	bx	r3

080096c4 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80096c4:	f1a0 0004 	sub.w	r0, r0, #4
 80096c8:	f7ff bff8 	b.w	80096bc <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080096cc <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80096cc:	b510      	push	{r4, lr}
 80096ce:	2110      	movs	r1, #16
 80096d0:	4604      	mov	r4, r0
 80096d2:	f020 fc10 	bl	8029ef6 <_ZdlPvj>
 80096d6:	4620      	mov	r0, r4
 80096d8:	bd10      	pop	{r4, pc}

080096da <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80096da:	f1a0 0004 	sub.w	r0, r0, #4
 80096de:	e7f5      	b.n	80096cc <_ZN29Measurement_AccuratePresenterD0Ev>

080096e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80096e0:	b510      	push	{r4, lr}
 80096e2:	2200      	movs	r2, #0
 80096e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80096e6:	4a04      	ldr	r2, [pc, #16]	; (80096f8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80096e8:	60c1      	str	r1, [r0, #12]
 80096ea:	f102 0408 	add.w	r4, r2, #8
 80096ee:	3224      	adds	r2, #36	; 0x24
 80096f0:	6004      	str	r4, [r0, #0]
 80096f2:	6042      	str	r2, [r0, #4]
}
 80096f4:	bd10      	pop	{r4, pc}
 80096f6:	bf00      	nop
 80096f8:	0802ea00 	.word	0x0802ea00

080096fc <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80096fc:	4770      	bx	lr
	...

08009700 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8009700:	b510      	push	{r4, lr}
 8009702:	4b03      	ldr	r3, [pc, #12]	; (8009710 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8009704:	6003      	str	r3, [r0, #0]
 8009706:	4604      	mov	r4, r0
 8009708:	f7fd fb50 	bl	8006dac <_ZN28Measurement_AccurateViewBaseD1Ev>
 800970c:	4620      	mov	r0, r4
 800970e:	bd10      	pop	{r4, pc}
 8009710:	0802ea38 	.word	0x0802ea38

08009714 <_ZN24Measurement_AccurateViewD0Ev>:
 8009714:	b510      	push	{r4, lr}
 8009716:	4604      	mov	r4, r0
 8009718:	f7ff fff2 	bl	8009700 <_ZN24Measurement_AccurateViewD1Ev>
 800971c:	4620      	mov	r0, r4
 800971e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009722:	f020 fbe8 	bl	8029ef6 <_ZdlPvj>
 8009726:	4620      	mov	r0, r4
 8009728:	bd10      	pop	{r4, pc}
	...

0800972c <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800972c:	b510      	push	{r4, lr}
 800972e:	4604      	mov	r4, r0
 8009730:	f7fd fb76 	bl	8006e20 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8009734:	4b01      	ldr	r3, [pc, #4]	; (800973c <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8009736:	6023      	str	r3, [r4, #0]
}
 8009738:	4620      	mov	r0, r4
 800973a:	bd10      	pop	{r4, pc}
 800973c:	0802ea38 	.word	0x0802ea38

08009740 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8009740:	f7fd bb10 	b.w	8006d64 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08009744 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8009744:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009746:	4a0a      	ldr	r2, [pc, #40]	; (8009770 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8009748:	4605      	mov	r5, r0
 800974a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800974c:	460b      	mov	r3, r1
 800974e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009752:	2104      	movs	r1, #4
 8009754:	f00f fc94 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009758:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800975c:	f00d fc08 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009760:	b92c      	cbnz	r4, 800976e <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8009762:	f00c fb1d 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009766:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800976a:	f7fb ba07 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800976e:	bd38      	pop	{r3, r4, r5, pc}
 8009770:	0802e72c 	.word	0x0802e72c

08009774 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8009774:	4770      	bx	lr

08009776 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8009776:	3804      	subs	r0, #4
 8009778:	4770      	bx	lr

0800977a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800977a:	4770      	bx	lr

0800977c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800977c:	4770      	bx	lr

0800977e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800977e:	b510      	push	{r4, lr}
 8009780:	2110      	movs	r1, #16
 8009782:	4604      	mov	r4, r0
 8009784:	f020 fbb7 	bl	8029ef6 <_ZdlPvj>
 8009788:	4620      	mov	r0, r4
 800978a:	bd10      	pop	{r4, pc}

0800978c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800978c:	f1a0 0004 	sub.w	r0, r0, #4
 8009790:	e7f5      	b.n	800977e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08009792 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8009792:	4770      	bx	lr

08009794 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8009794:	b510      	push	{r4, lr}
 8009796:	2200      	movs	r2, #0
 8009798:	6082      	str	r2, [r0, #8]
    : view(v)
 800979a:	4a04      	ldr	r2, [pc, #16]	; (80097ac <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800979c:	60c1      	str	r1, [r0, #12]
 800979e:	f102 0408 	add.w	r4, r2, #8
 80097a2:	3224      	adds	r2, #36	; 0x24
 80097a4:	6004      	str	r4, [r0, #0]
 80097a6:	6042      	str	r2, [r0, #4]
}
 80097a8:	bd10      	pop	{r4, pc}
 80097aa:	bf00      	nop
 80097ac:	0802ea68 	.word	0x0802ea68

080097b0 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80097b0:	4770      	bx	lr
	...

080097b4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80097b4:	b510      	push	{r4, lr}
 80097b6:	4b03      	ldr	r3, [pc, #12]	; (80097c4 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80097b8:	6003      	str	r3, [r0, #0]
 80097ba:	4604      	mov	r4, r0
 80097bc:	f7fd fd82 	bl	80072c4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80097c0:	4620      	mov	r0, r4
 80097c2:	bd10      	pop	{r4, pc}
 80097c4:	0802eaa0 	.word	0x0802eaa0

080097c8 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80097c8:	b510      	push	{r4, lr}
 80097ca:	4604      	mov	r4, r0
 80097cc:	f7ff fff2 	bl	80097b4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80097d0:	4620      	mov	r0, r4
 80097d2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80097d6:	f020 fb8e 	bl	8029ef6 <_ZdlPvj>
 80097da:	4620      	mov	r0, r4
 80097dc:	bd10      	pop	{r4, pc}
	...

080097e0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80097e0:	b510      	push	{r4, lr}
 80097e2:	4604      	mov	r4, r0
 80097e4:	f7fd fd8e 	bl	8007304 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80097e8:	4b01      	ldr	r3, [pc, #4]	; (80097f0 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80097ea:	6023      	str	r3, [r4, #0]
}
 80097ec:	4620      	mov	r0, r4
 80097ee:	bd10      	pop	{r4, pc}
 80097f0:	0802eaa0 	.word	0x0802eaa0

080097f4 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80097f4:	f7fd bd57 	b.w	80072a6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080097f8 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80097f8:	4770      	bx	lr

080097fa <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80097fa:	3804      	subs	r0, #4
 80097fc:	4770      	bx	lr

080097fe <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80097fe:	4770      	bx	lr

08009800 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8009800:	4770      	bx	lr

08009802 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009802:	b510      	push	{r4, lr}
 8009804:	2110      	movs	r1, #16
 8009806:	4604      	mov	r4, r0
 8009808:	f020 fb75 	bl	8029ef6 <_ZdlPvj>
 800980c:	4620      	mov	r0, r4
 800980e:	bd10      	pop	{r4, pc}

08009810 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009810:	f1a0 0004 	sub.w	r0, r0, #4
 8009814:	e7f5      	b.n	8009802 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08009816 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8009816:	4770      	bx	lr

08009818 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8009818:	b510      	push	{r4, lr}
 800981a:	2200      	movs	r2, #0
 800981c:	6082      	str	r2, [r0, #8]
    : view(v)
 800981e:	4a04      	ldr	r2, [pc, #16]	; (8009830 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8009820:	60c1      	str	r1, [r0, #12]
 8009822:	f102 0408 	add.w	r4, r2, #8
 8009826:	3224      	adds	r2, #36	; 0x24
 8009828:	6004      	str	r4, [r0, #0]
 800982a:	6042      	str	r2, [r0, #4]
}
 800982c:	bd10      	pop	{r4, pc}
 800982e:	bf00      	nop
 8009830:	0802eacc 	.word	0x0802eacc

08009834 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8009834:	4770      	bx	lr
	...

08009838 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8009838:	b510      	push	{r4, lr}
 800983a:	4b03      	ldr	r3, [pc, #12]	; (8009848 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800983c:	6003      	str	r3, [r0, #0]
 800983e:	4604      	mov	r4, r0
 8009840:	f7fd ff06 	bl	8007650 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8009844:	4620      	mov	r0, r4
 8009846:	bd10      	pop	{r4, pc}
 8009848:	0802eb04 	.word	0x0802eb04

0800984c <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800984c:	b510      	push	{r4, lr}
 800984e:	4604      	mov	r4, r0
 8009850:	f7ff fff2 	bl	8009838 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8009854:	4620      	mov	r0, r4
 8009856:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800985a:	f020 fb4c 	bl	8029ef6 <_ZdlPvj>
 800985e:	4620      	mov	r0, r4
 8009860:	bd10      	pop	{r4, pc}
	...

08009864 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8009864:	b510      	push	{r4, lr}
 8009866:	4604      	mov	r4, r0
 8009868:	f7fd ff12 	bl	8007690 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800986c:	4b01      	ldr	r3, [pc, #4]	; (8009874 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800986e:	6023      	str	r3, [r4, #0]
}
 8009870:	4620      	mov	r0, r4
 8009872:	bd10      	pop	{r4, pc}
 8009874:	0802eb04 	.word	0x0802eb04

08009878 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009878:	f7fd bedb 	b.w	8007632 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800987c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800987c:	4770      	bx	lr

0800987e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800987e:	3804      	subs	r0, #4
 8009880:	4770      	bx	lr

08009882 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009882:	4770      	bx	lr

08009884 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009884:	68c0      	ldr	r0, [r0, #12]
 8009886:	6803      	ldr	r3, [r0, #0]
 8009888:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800988a:	4718      	bx	r3

0800988c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800988c:	f1a0 0004 	sub.w	r0, r0, #4
 8009890:	f7ff bff8 	b.w	8009884 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009894 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009894:	b510      	push	{r4, lr}
 8009896:	2110      	movs	r1, #16
 8009898:	4604      	mov	r4, r0
 800989a:	f020 fb2c 	bl	8029ef6 <_ZdlPvj>
 800989e:	4620      	mov	r0, r4
 80098a0:	bd10      	pop	{r4, pc}

080098a2 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80098a2:	f1a0 0004 	sub.w	r0, r0, #4
 80098a6:	e7f5      	b.n	8009894 <_ZN27Measurement_SinglePresenterD0Ev>

080098a8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80098a8:	b510      	push	{r4, lr}
 80098aa:	2200      	movs	r2, #0
 80098ac:	6082      	str	r2, [r0, #8]
    : view(v)
 80098ae:	4a04      	ldr	r2, [pc, #16]	; (80098c0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80098b0:	60c1      	str	r1, [r0, #12]
 80098b2:	f102 0408 	add.w	r4, r2, #8
 80098b6:	3224      	adds	r2, #36	; 0x24
 80098b8:	6004      	str	r4, [r0, #0]
 80098ba:	6042      	str	r2, [r0, #4]
}
 80098bc:	bd10      	pop	{r4, pc}
 80098be:	bf00      	nop
 80098c0:	0802eb30 	.word	0x0802eb30

080098c4 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80098c4:	4770      	bx	lr
	...

080098c8 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80098c8:	b510      	push	{r4, lr}
 80098ca:	4b03      	ldr	r3, [pc, #12]	; (80098d8 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80098cc:	6003      	str	r3, [r0, #0]
 80098ce:	4604      	mov	r4, r0
 80098d0:	f7fe f874 	bl	80079bc <_ZN26Measurement_SingleViewBaseD1Ev>
 80098d4:	4620      	mov	r0, r4
 80098d6:	bd10      	pop	{r4, pc}
 80098d8:	0802eb68 	.word	0x0802eb68

080098dc <_ZN22Measurement_SingleViewD0Ev>:
 80098dc:	b510      	push	{r4, lr}
 80098de:	4604      	mov	r4, r0
 80098e0:	f7ff fff2 	bl	80098c8 <_ZN22Measurement_SingleViewD1Ev>
 80098e4:	4620      	mov	r0, r4
 80098e6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80098ea:	f020 fb04 	bl	8029ef6 <_ZdlPvj>
 80098ee:	4620      	mov	r0, r4
 80098f0:	bd10      	pop	{r4, pc}
	...

080098f4 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80098f4:	b510      	push	{r4, lr}
 80098f6:	4604      	mov	r4, r0
 80098f8:	f7fe f89a 	bl	8007a30 <_ZN26Measurement_SingleViewBaseC1Ev>
 80098fc:	4b01      	ldr	r3, [pc, #4]	; (8009904 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80098fe:	6023      	str	r3, [r4, #0]
}
 8009900:	4620      	mov	r0, r4
 8009902:	bd10      	pop	{r4, pc}
 8009904:	0802eb68 	.word	0x0802eb68

08009908 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009908:	f7fe b834 	b.w	8007974 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800990c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800990c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800990e:	4a0a      	ldr	r2, [pc, #40]	; (8009938 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009910:	4605      	mov	r5, r0
 8009912:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009914:	460b      	mov	r3, r1
 8009916:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800991a:	2104      	movs	r1, #4
 800991c:	f00f fbb0 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009920:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009924:	f00d fb24 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009928:	b92c      	cbnz	r4, 8009936 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800992a:	f00c fa39 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800992e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009932:	f7fb b923 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009936:	bd38      	pop	{r3, r4, r5, pc}
 8009938:	0802e72c 	.word	0x0802e72c

0800993c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800993c:	4770      	bx	lr

0800993e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800993e:	3804      	subs	r0, #4
 8009940:	4770      	bx	lr

08009942 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8009942:	4770      	bx	lr

08009944 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8009944:	4770      	bx	lr

08009946 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8009946:	b510      	push	{r4, lr}
 8009948:	2110      	movs	r1, #16
 800994a:	4604      	mov	r4, r0
 800994c:	f020 fad3 	bl	8029ef6 <_ZdlPvj>
 8009950:	4620      	mov	r0, r4
 8009952:	bd10      	pop	{r4, pc}

08009954 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8009954:	f1a0 0004 	sub.w	r0, r0, #4
 8009958:	e7f5      	b.n	8009946 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800995a <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800995a:	4770      	bx	lr

0800995c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800995c:	b510      	push	{r4, lr}
 800995e:	2200      	movs	r2, #0
 8009960:	6082      	str	r2, [r0, #8]
    : view(v)
 8009962:	4a04      	ldr	r2, [pc, #16]	; (8009974 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8009964:	60c1      	str	r1, [r0, #12]
 8009966:	f102 0408 	add.w	r4, r2, #8
 800996a:	3224      	adds	r2, #36	; 0x24
 800996c:	6004      	str	r4, [r0, #0]
 800996e:	6042      	str	r2, [r0, #4]
}
 8009970:	bd10      	pop	{r4, pc}
 8009972:	bf00      	nop
 8009974:	0802eb98 	.word	0x0802eb98

08009978 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009978:	4770      	bx	lr
	...

0800997c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800997c:	b510      	push	{r4, lr}
 800997e:	4b03      	ldr	r3, [pc, #12]	; (800998c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009980:	6003      	str	r3, [r0, #0]
 8009982:	4604      	mov	r4, r0
 8009984:	f7fe fa9e 	bl	8007ec4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009988:	4620      	mov	r0, r4
 800998a:	bd10      	pop	{r4, pc}
 800998c:	0802ebd0 	.word	0x0802ebd0

08009990 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009990:	b510      	push	{r4, lr}
 8009992:	4604      	mov	r4, r0
 8009994:	f7ff fff2 	bl	800997c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009998:	4620      	mov	r0, r4
 800999a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800999e:	f020 faaa 	bl	8029ef6 <_ZdlPvj>
 80099a2:	4620      	mov	r0, r4
 80099a4:	bd10      	pop	{r4, pc}
	...

080099a8 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 80099a8:	b510      	push	{r4, lr}
 80099aa:	4604      	mov	r4, r0
 80099ac:	f7fe fac4 	bl	8007f38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 80099b0:	4b01      	ldr	r3, [pc, #4]	; (80099b8 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 80099b2:	6023      	str	r3, [r4, #0]
}
 80099b4:	4620      	mov	r0, r4
 80099b6:	bd10      	pop	{r4, pc}
 80099b8:	0802ebd0 	.word	0x0802ebd0

080099bc <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80099bc:	f7fe ba5d 	b.w	8007e7a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080099c0 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80099c0:	b530      	push	{r4, r5, lr}
 80099c2:	4d27      	ldr	r5, [pc, #156]	; (8009a60 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa0>)
 80099c4:	4604      	mov	r4, r0
 80099c6:	6828      	ldr	r0, [r5, #0]
#ifndef SIMULATOR
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();
 80099c8:	6803      	ldr	r3, [r0, #0]
{
 80099ca:	b089      	sub	sp, #36	; 0x24
	touchgfx::HAL::getInstance()->disableInterrupts();
 80099cc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80099ce:	4798      	blx	r3

	int test = 	0;

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);

	test = updateGUI_test();
 80099d0:	f7f7 fce4 	bl	800139c <updateGUI_test>
 80099d4:	9001      	str	r0, [sp, #4]

	uint32_t* Samples = MEAS_start_measure();
 80099d6:	f7f8 f9cf 	bl	8001d78 <MEAS_start_measure>

	SINGLE_MEAS single_meas = single_measurement(Samples);
 80099da:	f7f7 fc15 	bl	8001208 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(single_meas.angle);
 80099de:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80099e2:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80099e6:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 80099ea:	ed8d 0a04 	vstr	s0, [sp, #16]
 80099ee:	edcd 0a05 	vstr	s1, [sp, #20]
 80099f2:	ed8d 1a06 	vstr	s2, [sp, #24]
 80099f6:	edcd 1a07 	vstr	s3, [sp, #28]
	SMD1_gauge.setValue(single_meas.angle);
 80099fa:	9000      	str	r0, [sp, #0]
 80099fc:	f009 fa64 	bl	8012ec8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009a00:	9800      	ldr	r0, [sp, #0]
 8009a02:	f00d fab5 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8009a06:	9b01      	ldr	r3, [sp, #4]
 8009a08:	4a16      	ldr	r2, [pc, #88]	; (8009a64 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa4>)
 8009a0a:	210a      	movs	r1, #10
 8009a0c:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8009a10:	f00f fb36 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8009a14:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8009a18:	f00d faaa 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 8009a1c:	9b06      	ldr	r3, [sp, #24]
 8009a1e:	4a12      	ldr	r2, [pc, #72]	; (8009a68 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa8>)
 8009a20:	9303      	str	r3, [sp, #12]
 8009a22:	210a      	movs	r1, #10
 8009a24:	ab03      	add	r3, sp, #12
 8009a26:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8009a2a:	f00f fd15 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8009a2e:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8009a32:	f00d fa9d 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 8009a36:	9b04      	ldr	r3, [sp, #16]
 8009a38:	4a0b      	ldr	r2, [pc, #44]	; (8009a68 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa8>)
 8009a3a:	9303      	str	r3, [sp, #12]
 8009a3c:	210a      	movs	r1, #10
 8009a3e:	ab03      	add	r3, sp, #12
 8009a40:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8009a44:	f00f fd08 	bl	8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8009a48:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8009a4c:	f00d fa90 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009a50:	6828      	ldr	r0, [r5, #0]

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009a52:	6803      	ldr	r3, [r0, #0]
 8009a54:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 8009a56:	b009      	add	sp, #36	; 0x24
 8009a58:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009a5c:	4718      	bx	r3
 8009a5e:	bf00      	nop
 8009a60:	20012da4 	.word	0x20012da4
 8009a64:	0802e72c 	.word	0x0802e72c
 8009a68:	0802e798 	.word	0x0802e798

08009a6c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8009a6c:	4770      	bx	lr

08009a6e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8009a6e:	3804      	subs	r0, #4
 8009a70:	4770      	bx	lr

08009a72 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8009a72:	4770      	bx	lr

08009a74 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009a74:	4770      	bx	lr

08009a76 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8009a76:	b510      	push	{r4, lr}
 8009a78:	2110      	movs	r1, #16
 8009a7a:	4604      	mov	r4, r0
 8009a7c:	f020 fa3b 	bl	8029ef6 <_ZdlPvj>
 8009a80:	4620      	mov	r0, r4
 8009a82:	bd10      	pop	{r4, pc}

08009a84 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009a84:	f1a0 0004 	sub.w	r0, r0, #4
 8009a88:	e7f5      	b.n	8009a76 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08009a8a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8009a8a:	4770      	bx	lr

08009a8c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009a8c:	b510      	push	{r4, lr}
 8009a8e:	2200      	movs	r2, #0
 8009a90:	6082      	str	r2, [r0, #8]
    : view(v)
 8009a92:	4a04      	ldr	r2, [pc, #16]	; (8009aa4 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009a94:	60c1      	str	r1, [r0, #12]
 8009a96:	f102 0408 	add.w	r4, r2, #8
 8009a9a:	3224      	adds	r2, #36	; 0x24
 8009a9c:	6004      	str	r4, [r0, #0]
 8009a9e:	6042      	str	r2, [r0, #4]
}
 8009aa0:	bd10      	pop	{r4, pc}
 8009aa2:	bf00      	nop
 8009aa4:	0802ec00 	.word	0x0802ec00

08009aa8 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009aa8:	4770      	bx	lr
	...

08009aac <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009aac:	b510      	push	{r4, lr}
 8009aae:	4b03      	ldr	r3, [pc, #12]	; (8009abc <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009ab0:	6003      	str	r3, [r0, #0]
 8009ab2:	4604      	mov	r4, r0
 8009ab4:	f7fe fdb2 	bl	800861c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009ab8:	4620      	mov	r0, r4
 8009aba:	bd10      	pop	{r4, pc}
 8009abc:	0802ec38 	.word	0x0802ec38

08009ac0 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009ac0:	b510      	push	{r4, lr}
 8009ac2:	4604      	mov	r4, r0
 8009ac4:	f7ff fff2 	bl	8009aac <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009ac8:	4620      	mov	r0, r4
 8009aca:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009ace:	f020 fa12 	bl	8029ef6 <_ZdlPvj>
 8009ad2:	4620      	mov	r0, r4
 8009ad4:	bd10      	pop	{r4, pc}
	...

08009ad8 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009ad8:	b510      	push	{r4, lr}
 8009ada:	4604      	mov	r4, r0
 8009adc:	f7fe fdbe 	bl	800865c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009ae0:	4b01      	ldr	r3, [pc, #4]	; (8009ae8 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009ae2:	6023      	str	r3, [r4, #0]
}
 8009ae4:	4620      	mov	r0, r4
 8009ae6:	bd10      	pop	{r4, pc}
 8009ae8:	0802ec38 	.word	0x0802ec38

08009aec <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009aec:	f7fe bd85 	b.w	80085fa <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009af0 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009af0:	2100      	movs	r1, #0
 8009af2:	223c      	movs	r2, #60	; 0x3c
 8009af4:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009af8:	4770      	bx	lr
	...

08009afc <_ZN5Model4tickEv>:

void Model::tick()
{
 8009afc:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009afe:	4d0a      	ldr	r5, [pc, #40]	; (8009b28 <_ZN5Model4tickEv+0x2c>)
{
 8009b00:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009b02:	6828      	ldr	r0, [r5, #0]
 8009b04:	f004 f8ac 	bl	800dc60 <osMessageQueueGetCount>
 8009b08:	b168      	cbz	r0, 8009b26 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8009b0a:	2300      	movs	r3, #0
 8009b0c:	6828      	ldr	r0, [r5, #0]
 8009b0e:	461a      	mov	r2, r3
 8009b10:	1d21      	adds	r1, r4, #4
 8009b12:	f004 f871 	bl	800dbf8 <osMessageQueueGet>
 8009b16:	b930      	cbnz	r0, 8009b26 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8009b18:	6820      	ldr	r0, [r4, #0]
 8009b1a:	6861      	ldr	r1, [r4, #4]
 8009b1c:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8009b1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8009b22:	689b      	ldr	r3, [r3, #8]
 8009b24:	4718      	bx	r3
}
 8009b26:	bd70      	pop	{r4, r5, r6, pc}
 8009b28:	2000018c 	.word	0x2000018c

08009b2c <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8009b2c:	4770      	bx	lr

08009b2e <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8009b2e:	3804      	subs	r0, #4
 8009b30:	4770      	bx	lr

08009b32 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8009b32:	4770      	bx	lr

08009b34 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009b34:	68c0      	ldr	r0, [r0, #12]
 8009b36:	6803      	ldr	r3, [r0, #0]
 8009b38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b3a:	4718      	bx	r3

08009b3c <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009b3c:	f1a0 0004 	sub.w	r0, r0, #4
 8009b40:	f7ff bff8 	b.w	8009b34 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009b44 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009b44:	b510      	push	{r4, lr}
 8009b46:	2110      	movs	r1, #16
 8009b48:	4604      	mov	r4, r0
 8009b4a:	f020 f9d4 	bl	8029ef6 <_ZdlPvj>
 8009b4e:	4620      	mov	r0, r4
 8009b50:	bd10      	pop	{r4, pc}

08009b52 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8009b52:	f1a0 0004 	sub.w	r0, r0, #4
 8009b56:	e7f5      	b.n	8009b44 <_ZN21Project_InfoPresenterD0Ev>

08009b58 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009b58:	b510      	push	{r4, lr}
 8009b5a:	2200      	movs	r2, #0
 8009b5c:	6082      	str	r2, [r0, #8]
    : view(v)
 8009b5e:	4a04      	ldr	r2, [pc, #16]	; (8009b70 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009b60:	60c1      	str	r1, [r0, #12]
 8009b62:	f102 0408 	add.w	r4, r2, #8
 8009b66:	3224      	adds	r2, #36	; 0x24
 8009b68:	6004      	str	r4, [r0, #0]
 8009b6a:	6042      	str	r2, [r0, #4]
}
 8009b6c:	bd10      	pop	{r4, pc}
 8009b6e:	bf00      	nop
 8009b70:	0802ec64 	.word	0x0802ec64

08009b74 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009b74:	4770      	bx	lr
	...

08009b78 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009b78:	b510      	push	{r4, lr}
 8009b7a:	4b03      	ldr	r3, [pc, #12]	; (8009b88 <_ZN16Project_InfoViewD1Ev+0x10>)
 8009b7c:	6003      	str	r3, [r0, #0]
 8009b7e:	4604      	mov	r4, r0
 8009b80:	f7fe ff06 	bl	8008990 <_ZN20Project_InfoViewBaseD1Ev>
 8009b84:	4620      	mov	r0, r4
 8009b86:	bd10      	pop	{r4, pc}
 8009b88:	0802ec9c 	.word	0x0802ec9c

08009b8c <_ZN16Project_InfoViewD0Ev>:
 8009b8c:	b510      	push	{r4, lr}
 8009b8e:	4604      	mov	r4, r0
 8009b90:	f7ff fff2 	bl	8009b78 <_ZN16Project_InfoViewD1Ev>
 8009b94:	4620      	mov	r0, r4
 8009b96:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009b9a:	f020 f9ac 	bl	8029ef6 <_ZdlPvj>
 8009b9e:	4620      	mov	r0, r4
 8009ba0:	bd10      	pop	{r4, pc}
	...

08009ba4 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009ba4:	b510      	push	{r4, lr}
 8009ba6:	4604      	mov	r4, r0
 8009ba8:	f7fe ff1a 	bl	80089e0 <_ZN20Project_InfoViewBaseC1Ev>
 8009bac:	4b01      	ldr	r3, [pc, #4]	; (8009bb4 <_ZN16Project_InfoViewC1Ev+0x10>)
 8009bae:	6023      	str	r3, [r4, #0]
}
 8009bb0:	4620      	mov	r0, r4
 8009bb2:	bd10      	pop	{r4, pc}
 8009bb4:	0802ec9c 	.word	0x0802ec9c

08009bb8 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009bb8:	f7fe bec6 	b.w	8008948 <_ZN20Project_InfoViewBase11setupScreenEv>

08009bbc <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009bbc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009bbe:	4a0a      	ldr	r2, [pc, #40]	; (8009be8 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009bc0:	4605      	mov	r5, r0
 8009bc2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009bc4:	460b      	mov	r3, r1
 8009bc6:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009bca:	2104      	movs	r1, #4
 8009bcc:	f00f fa58 	bl	8019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009bd0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009bd4:	f00d f9cc 	bl	8016f70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009bd8:	b92c      	cbnz	r4, 8009be6 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8009bda:	f00c f8e1 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009bde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009be2:	f7fa bfcb 	b.w	8004b7c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009be6:	bd38      	pop	{r3, r4, r5, pc}
 8009be8:	0802e72c 	.word	0x0802e72c

08009bec <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009bec:	4770      	bx	lr

08009bee <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009bee:	3804      	subs	r0, #4
 8009bf0:	4770      	bx	lr

08009bf2 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009bf2:	4770      	bx	lr

08009bf4 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009bf4:	4770      	bx	lr

08009bf6 <_ZN21Shutting_OffPresenterD0Ev>:
 8009bf6:	b510      	push	{r4, lr}
 8009bf8:	2110      	movs	r1, #16
 8009bfa:	4604      	mov	r4, r0
 8009bfc:	f020 f97b 	bl	8029ef6 <_ZdlPvj>
 8009c00:	4620      	mov	r0, r4
 8009c02:	bd10      	pop	{r4, pc}

08009c04 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009c04:	f1a0 0004 	sub.w	r0, r0, #4
 8009c08:	e7f5      	b.n	8009bf6 <_ZN21Shutting_OffPresenterD0Ev>

08009c0a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8009c0a:	4770      	bx	lr

08009c0c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8009c0c:	b510      	push	{r4, lr}
 8009c0e:	2200      	movs	r2, #0
 8009c10:	6082      	str	r2, [r0, #8]
    : view(v)
 8009c12:	4a04      	ldr	r2, [pc, #16]	; (8009c24 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009c14:	60c1      	str	r1, [r0, #12]
 8009c16:	f102 0408 	add.w	r4, r2, #8
 8009c1a:	3224      	adds	r2, #36	; 0x24
 8009c1c:	6004      	str	r4, [r0, #0]
 8009c1e:	6042      	str	r2, [r0, #4]
}
 8009c20:	bd10      	pop	{r4, pc}
 8009c22:	bf00      	nop
 8009c24:	0802eccc 	.word	0x0802eccc

08009c28 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009c28:	4770      	bx	lr
	...

08009c2c <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8009c2c:	b510      	push	{r4, lr}
 8009c2e:	4b03      	ldr	r3, [pc, #12]	; (8009c3c <_ZN16Shutting_OffViewD1Ev+0x10>)
 8009c30:	6003      	str	r3, [r0, #0]
 8009c32:	4604      	mov	r4, r0
 8009c34:	f7ff f8a2 	bl	8008d7c <_ZN20Shutting_OffViewBaseD1Ev>
 8009c38:	4620      	mov	r0, r4
 8009c3a:	bd10      	pop	{r4, pc}
 8009c3c:	0802ed04 	.word	0x0802ed04

08009c40 <_ZN16Shutting_OffViewD0Ev>:
 8009c40:	b510      	push	{r4, lr}
 8009c42:	4604      	mov	r4, r0
 8009c44:	f7ff fff2 	bl	8009c2c <_ZN16Shutting_OffViewD1Ev>
 8009c48:	4620      	mov	r0, r4
 8009c4a:	2198      	movs	r1, #152	; 0x98
 8009c4c:	f020 f953 	bl	8029ef6 <_ZdlPvj>
 8009c50:	4620      	mov	r0, r4
 8009c52:	bd10      	pop	{r4, pc}

08009c54 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009c54:	b510      	push	{r4, lr}
 8009c56:	4604      	mov	r4, r0
 8009c58:	f7ff f89a 	bl	8008d90 <_ZN20Shutting_OffViewBaseC1Ev>
 8009c5c:	4b01      	ldr	r3, [pc, #4]	; (8009c64 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8009c5e:	6023      	str	r3, [r4, #0]
}
 8009c60:	4620      	mov	r0, r4
 8009c62:	bd10      	pop	{r4, pc}
 8009c64:	0802ed04 	.word	0x0802ed04

08009c68 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009c68:	f7ff b889 	b.w	8008d7e <_ZN20Shutting_OffViewBase11setupScreenEv>

08009c6c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009c6c:	20f0      	movs	r0, #240	; 0xf0
 8009c6e:	4770      	bx	lr

08009c70 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009c70:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009c74:	4770      	bx	lr
 8009c76:	bf00      	nop

08009c78 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009c78:	2029      	movs	r0, #41	; 0x29
 8009c7a:	f7f7 bef5 	b.w	8001a68 <LCD_IO_WriteReg>
 8009c7e:	bf00      	nop

08009c80 <ili9341_DisplayOff>:
 8009c80:	2028      	movs	r0, #40	; 0x28
 8009c82:	f7f7 bef1 	b.w	8001a68 <LCD_IO_WriteReg>
 8009c86:	bf00      	nop

08009c88 <ili9341_Init>:
{
 8009c88:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009c8a:	f7f7 feb3 	bl	80019f4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009c8e:	20ca      	movs	r0, #202	; 0xca
 8009c90:	f7f7 feea 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c94:	20c3      	movs	r0, #195	; 0xc3
 8009c96:	f7f7 febd 	bl	8001a14 <LCD_IO_WriteData>
 8009c9a:	2008      	movs	r0, #8
 8009c9c:	f7f7 feba 	bl	8001a14 <LCD_IO_WriteData>
 8009ca0:	2050      	movs	r0, #80	; 0x50
 8009ca2:	f7f7 feb7 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ca6:	20cf      	movs	r0, #207	; 0xcf
 8009ca8:	f7f7 fede 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cac:	2000      	movs	r0, #0
 8009cae:	f7f7 feb1 	bl	8001a14 <LCD_IO_WriteData>
 8009cb2:	20c1      	movs	r0, #193	; 0xc1
 8009cb4:	f7f7 feae 	bl	8001a14 <LCD_IO_WriteData>
 8009cb8:	2030      	movs	r0, #48	; 0x30
 8009cba:	f7f7 feab 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cbe:	20ed      	movs	r0, #237	; 0xed
 8009cc0:	f7f7 fed2 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cc4:	2064      	movs	r0, #100	; 0x64
 8009cc6:	f7f7 fea5 	bl	8001a14 <LCD_IO_WriteData>
 8009cca:	2003      	movs	r0, #3
 8009ccc:	f7f7 fea2 	bl	8001a14 <LCD_IO_WriteData>
 8009cd0:	2012      	movs	r0, #18
 8009cd2:	f7f7 fe9f 	bl	8001a14 <LCD_IO_WriteData>
 8009cd6:	2081      	movs	r0, #129	; 0x81
 8009cd8:	f7f7 fe9c 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cdc:	20e8      	movs	r0, #232	; 0xe8
 8009cde:	f7f7 fec3 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ce2:	2085      	movs	r0, #133	; 0x85
 8009ce4:	f7f7 fe96 	bl	8001a14 <LCD_IO_WriteData>
 8009ce8:	2000      	movs	r0, #0
 8009cea:	f7f7 fe93 	bl	8001a14 <LCD_IO_WriteData>
 8009cee:	2078      	movs	r0, #120	; 0x78
 8009cf0:	f7f7 fe90 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cf4:	20cb      	movs	r0, #203	; 0xcb
 8009cf6:	f7f7 feb7 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cfa:	2039      	movs	r0, #57	; 0x39
 8009cfc:	f7f7 fe8a 	bl	8001a14 <LCD_IO_WriteData>
 8009d00:	202c      	movs	r0, #44	; 0x2c
 8009d02:	f7f7 fe87 	bl	8001a14 <LCD_IO_WriteData>
 8009d06:	2000      	movs	r0, #0
 8009d08:	f7f7 fe84 	bl	8001a14 <LCD_IO_WriteData>
 8009d0c:	2034      	movs	r0, #52	; 0x34
 8009d0e:	f7f7 fe81 	bl	8001a14 <LCD_IO_WriteData>
 8009d12:	2002      	movs	r0, #2
 8009d14:	f7f7 fe7e 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d18:	20f7      	movs	r0, #247	; 0xf7
 8009d1a:	f7f7 fea5 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d1e:	2020      	movs	r0, #32
 8009d20:	f7f7 fe78 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d24:	20ea      	movs	r0, #234	; 0xea
 8009d26:	f7f7 fe9f 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d2a:	2000      	movs	r0, #0
 8009d2c:	f7f7 fe72 	bl	8001a14 <LCD_IO_WriteData>
 8009d30:	2000      	movs	r0, #0
 8009d32:	f7f7 fe6f 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d36:	20b1      	movs	r0, #177	; 0xb1
 8009d38:	f7f7 fe96 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d3c:	2000      	movs	r0, #0
 8009d3e:	f7f7 fe69 	bl	8001a14 <LCD_IO_WriteData>
 8009d42:	201b      	movs	r0, #27
 8009d44:	f7f7 fe66 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d48:	20b6      	movs	r0, #182	; 0xb6
 8009d4a:	f7f7 fe8d 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d4e:	200a      	movs	r0, #10
 8009d50:	f7f7 fe60 	bl	8001a14 <LCD_IO_WriteData>
 8009d54:	20a2      	movs	r0, #162	; 0xa2
 8009d56:	f7f7 fe5d 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d5a:	20c0      	movs	r0, #192	; 0xc0
 8009d5c:	f7f7 fe84 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d60:	2010      	movs	r0, #16
 8009d62:	f7f7 fe57 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d66:	20c1      	movs	r0, #193	; 0xc1
 8009d68:	f7f7 fe7e 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d6c:	2010      	movs	r0, #16
 8009d6e:	f7f7 fe51 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d72:	20c5      	movs	r0, #197	; 0xc5
 8009d74:	f7f7 fe78 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d78:	2045      	movs	r0, #69	; 0x45
 8009d7a:	f7f7 fe4b 	bl	8001a14 <LCD_IO_WriteData>
 8009d7e:	2015      	movs	r0, #21
 8009d80:	f7f7 fe48 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d84:	20c7      	movs	r0, #199	; 0xc7
 8009d86:	f7f7 fe6f 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d8a:	2090      	movs	r0, #144	; 0x90
 8009d8c:	f7f7 fe42 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d90:	2036      	movs	r0, #54	; 0x36
 8009d92:	f7f7 fe69 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d96:	20c8      	movs	r0, #200	; 0xc8
 8009d98:	f7f7 fe3c 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d9c:	20f2      	movs	r0, #242	; 0xf2
 8009d9e:	f7f7 fe63 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009da2:	2000      	movs	r0, #0
 8009da4:	f7f7 fe36 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009da8:	20b0      	movs	r0, #176	; 0xb0
 8009daa:	f7f7 fe5d 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009dae:	20c2      	movs	r0, #194	; 0xc2
 8009db0:	f7f7 fe30 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009db4:	20b6      	movs	r0, #182	; 0xb6
 8009db6:	f7f7 fe57 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009dba:	200a      	movs	r0, #10
 8009dbc:	f7f7 fe2a 	bl	8001a14 <LCD_IO_WriteData>
 8009dc0:	20a7      	movs	r0, #167	; 0xa7
 8009dc2:	f7f7 fe27 	bl	8001a14 <LCD_IO_WriteData>
 8009dc6:	2027      	movs	r0, #39	; 0x27
 8009dc8:	f7f7 fe24 	bl	8001a14 <LCD_IO_WriteData>
 8009dcc:	2004      	movs	r0, #4
 8009dce:	f7f7 fe21 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009dd2:	202a      	movs	r0, #42	; 0x2a
 8009dd4:	f7f7 fe48 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009dd8:	2000      	movs	r0, #0
 8009dda:	f7f7 fe1b 	bl	8001a14 <LCD_IO_WriteData>
 8009dde:	2000      	movs	r0, #0
 8009de0:	f7f7 fe18 	bl	8001a14 <LCD_IO_WriteData>
 8009de4:	2000      	movs	r0, #0
 8009de6:	f7f7 fe15 	bl	8001a14 <LCD_IO_WriteData>
 8009dea:	20ef      	movs	r0, #239	; 0xef
 8009dec:	f7f7 fe12 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009df0:	202b      	movs	r0, #43	; 0x2b
 8009df2:	f7f7 fe39 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009df6:	2000      	movs	r0, #0
 8009df8:	f7f7 fe0c 	bl	8001a14 <LCD_IO_WriteData>
 8009dfc:	2000      	movs	r0, #0
 8009dfe:	f7f7 fe09 	bl	8001a14 <LCD_IO_WriteData>
 8009e02:	2001      	movs	r0, #1
 8009e04:	f7f7 fe06 	bl	8001a14 <LCD_IO_WriteData>
 8009e08:	203f      	movs	r0, #63	; 0x3f
 8009e0a:	f7f7 fe03 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e0e:	20f6      	movs	r0, #246	; 0xf6
 8009e10:	f7f7 fe2a 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e14:	2001      	movs	r0, #1
 8009e16:	f7f7 fdfd 	bl	8001a14 <LCD_IO_WriteData>
 8009e1a:	2000      	movs	r0, #0
 8009e1c:	f7f7 fdfa 	bl	8001a14 <LCD_IO_WriteData>
 8009e20:	2006      	movs	r0, #6
 8009e22:	f7f7 fdf7 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e26:	202c      	movs	r0, #44	; 0x2c
 8009e28:	f7f7 fe1e 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009e2c:	20c8      	movs	r0, #200	; 0xc8
 8009e2e:	f7f7 fe83 	bl	8001b38 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009e32:	2026      	movs	r0, #38	; 0x26
 8009e34:	f7f7 fe18 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e38:	2001      	movs	r0, #1
 8009e3a:	f7f7 fdeb 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e3e:	20e0      	movs	r0, #224	; 0xe0
 8009e40:	f7f7 fe12 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e44:	200f      	movs	r0, #15
 8009e46:	f7f7 fde5 	bl	8001a14 <LCD_IO_WriteData>
 8009e4a:	2029      	movs	r0, #41	; 0x29
 8009e4c:	f7f7 fde2 	bl	8001a14 <LCD_IO_WriteData>
 8009e50:	2024      	movs	r0, #36	; 0x24
 8009e52:	f7f7 fddf 	bl	8001a14 <LCD_IO_WriteData>
 8009e56:	200c      	movs	r0, #12
 8009e58:	f7f7 fddc 	bl	8001a14 <LCD_IO_WriteData>
 8009e5c:	200e      	movs	r0, #14
 8009e5e:	f7f7 fdd9 	bl	8001a14 <LCD_IO_WriteData>
 8009e62:	2009      	movs	r0, #9
 8009e64:	f7f7 fdd6 	bl	8001a14 <LCD_IO_WriteData>
 8009e68:	204e      	movs	r0, #78	; 0x4e
 8009e6a:	f7f7 fdd3 	bl	8001a14 <LCD_IO_WriteData>
 8009e6e:	2078      	movs	r0, #120	; 0x78
 8009e70:	f7f7 fdd0 	bl	8001a14 <LCD_IO_WriteData>
 8009e74:	203c      	movs	r0, #60	; 0x3c
 8009e76:	f7f7 fdcd 	bl	8001a14 <LCD_IO_WriteData>
 8009e7a:	2009      	movs	r0, #9
 8009e7c:	f7f7 fdca 	bl	8001a14 <LCD_IO_WriteData>
 8009e80:	2013      	movs	r0, #19
 8009e82:	f7f7 fdc7 	bl	8001a14 <LCD_IO_WriteData>
 8009e86:	2005      	movs	r0, #5
 8009e88:	f7f7 fdc4 	bl	8001a14 <LCD_IO_WriteData>
 8009e8c:	2017      	movs	r0, #23
 8009e8e:	f7f7 fdc1 	bl	8001a14 <LCD_IO_WriteData>
 8009e92:	2011      	movs	r0, #17
 8009e94:	f7f7 fdbe 	bl	8001a14 <LCD_IO_WriteData>
 8009e98:	2000      	movs	r0, #0
 8009e9a:	f7f7 fdbb 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e9e:	20e1      	movs	r0, #225	; 0xe1
 8009ea0:	f7f7 fde2 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ea4:	2000      	movs	r0, #0
 8009ea6:	f7f7 fdb5 	bl	8001a14 <LCD_IO_WriteData>
 8009eaa:	2016      	movs	r0, #22
 8009eac:	f7f7 fdb2 	bl	8001a14 <LCD_IO_WriteData>
 8009eb0:	201b      	movs	r0, #27
 8009eb2:	f7f7 fdaf 	bl	8001a14 <LCD_IO_WriteData>
 8009eb6:	2004      	movs	r0, #4
 8009eb8:	f7f7 fdac 	bl	8001a14 <LCD_IO_WriteData>
 8009ebc:	2011      	movs	r0, #17
 8009ebe:	f7f7 fda9 	bl	8001a14 <LCD_IO_WriteData>
 8009ec2:	2007      	movs	r0, #7
 8009ec4:	f7f7 fda6 	bl	8001a14 <LCD_IO_WriteData>
 8009ec8:	2031      	movs	r0, #49	; 0x31
 8009eca:	f7f7 fda3 	bl	8001a14 <LCD_IO_WriteData>
 8009ece:	2033      	movs	r0, #51	; 0x33
 8009ed0:	f7f7 fda0 	bl	8001a14 <LCD_IO_WriteData>
 8009ed4:	2042      	movs	r0, #66	; 0x42
 8009ed6:	f7f7 fd9d 	bl	8001a14 <LCD_IO_WriteData>
 8009eda:	2005      	movs	r0, #5
 8009edc:	f7f7 fd9a 	bl	8001a14 <LCD_IO_WriteData>
 8009ee0:	200c      	movs	r0, #12
 8009ee2:	f7f7 fd97 	bl	8001a14 <LCD_IO_WriteData>
 8009ee6:	200a      	movs	r0, #10
 8009ee8:	f7f7 fd94 	bl	8001a14 <LCD_IO_WriteData>
 8009eec:	2028      	movs	r0, #40	; 0x28
 8009eee:	f7f7 fd91 	bl	8001a14 <LCD_IO_WriteData>
 8009ef2:	202f      	movs	r0, #47	; 0x2f
 8009ef4:	f7f7 fd8e 	bl	8001a14 <LCD_IO_WriteData>
 8009ef8:	200f      	movs	r0, #15
 8009efa:	f7f7 fd8b 	bl	8001a14 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009efe:	2011      	movs	r0, #17
 8009f00:	f7f7 fdb2 	bl	8001a68 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009f04:	20c8      	movs	r0, #200	; 0xc8
 8009f06:	f7f7 fe17 	bl	8001b38 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009f0a:	2029      	movs	r0, #41	; 0x29
 8009f0c:	f7f7 fdac 	bl	8001a68 <LCD_IO_WriteReg>
}
 8009f10:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009f14:	202c      	movs	r0, #44	; 0x2c
 8009f16:	f7f7 bda7 	b.w	8001a68 <LCD_IO_WriteReg>
 8009f1a:	bf00      	nop

08009f1c <ili9341_ReadID>:
{
 8009f1c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009f1e:	f7f7 fd69 	bl	80019f4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009f22:	2103      	movs	r1, #3
 8009f24:	20d3      	movs	r0, #211	; 0xd3
 8009f26:	f7f7 fdc9 	bl	8001abc <LCD_IO_ReadData>
}
 8009f2a:	b280      	uxth	r0, r0
 8009f2c:	bd08      	pop	{r3, pc}
 8009f2e:	bf00      	nop

08009f30 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009f30:	221f      	movs	r2, #31
 8009f32:	210b      	movs	r1, #11
 8009f34:	b2c0      	uxtb	r0, r0
 8009f36:	f7f7 bd0f 	b.w	8001958 <IOE_Write>
 8009f3a:	bf00      	nop

08009f3c <stmpe811_Reset>:
{
 8009f3c:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009f3e:	b2c4      	uxtb	r4, r0
 8009f40:	2202      	movs	r2, #2
 8009f42:	2103      	movs	r1, #3
 8009f44:	4620      	mov	r0, r4
 8009f46:	f7f7 fd07 	bl	8001958 <IOE_Write>
  IOE_Delay(10); 
 8009f4a:	200a      	movs	r0, #10
 8009f4c:	f7f7 fd50 	bl	80019f0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009f50:	4620      	mov	r0, r4
 8009f52:	2200      	movs	r2, #0
 8009f54:	2103      	movs	r1, #3
 8009f56:	f7f7 fcff 	bl	8001958 <IOE_Write>
}
 8009f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009f5e:	2002      	movs	r0, #2
 8009f60:	f7f7 bd46 	b.w	80019f0 <IOE_Delay>

08009f64 <stmpe811_ReadID>:
{
 8009f64:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f66:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009f68:	f7f7 fcf2 	bl	8001950 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f6c:	2100      	movs	r1, #0
 8009f6e:	4620      	mov	r0, r4
 8009f70:	f7f7 fd0a 	bl	8001988 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009f74:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f76:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009f78:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f7a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009f7c:	f7f7 fd04 	bl	8001988 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f80:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009f84:	b280      	uxth	r0, r0
 8009f86:	bd10      	pop	{r4, pc}

08009f88 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009f88:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009f8a:	b2c4      	uxtb	r4, r0
 8009f8c:	2140      	movs	r1, #64	; 0x40
 8009f8e:	4620      	mov	r0, r4
 8009f90:	f7f7 fcfa 	bl	8001988 <IOE_Read>
  
  if(state > 0)
 8009f94:	0603      	lsls	r3, r0, #24
 8009f96:	d40b      	bmi.n	8009fb0 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009f98:	4620      	mov	r0, r4
 8009f9a:	2201      	movs	r2, #1
 8009f9c:	214b      	movs	r1, #75	; 0x4b
 8009f9e:	f7f7 fcdb 	bl	8001958 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009fa2:	4620      	mov	r0, r4
 8009fa4:	2200      	movs	r2, #0
 8009fa6:	214b      	movs	r1, #75	; 0x4b
 8009fa8:	f7f7 fcd6 	bl	8001958 <IOE_Write>
  uint8_t ret = 0;
 8009fac:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009fae:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009fb0:	214c      	movs	r1, #76	; 0x4c
 8009fb2:	4620      	mov	r0, r4
 8009fb4:	f7f7 fce8 	bl	8001988 <IOE_Read>
      ret = 1;
 8009fb8:	3800      	subs	r0, #0
 8009fba:	bf18      	it	ne
 8009fbc:	2001      	movne	r0, #1
}
 8009fbe:	bd10      	pop	{r4, pc}

08009fc0 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009fc0:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009fc2:	210b      	movs	r1, #11
 8009fc4:	b2c0      	uxtb	r0, r0
 8009fc6:	f7f7 fcdf 	bl	8001988 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009fca:	f000 001f 	and.w	r0, r0, #31
 8009fce:	bd08      	pop	{r3, pc}

08009fd0 <stmpe811_TS_GetXY>:
{
 8009fd0:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009fd2:	2304      	movs	r3, #4
{
 8009fd4:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009fd6:	b2c4      	uxtb	r4, r0
{
 8009fd8:	4615      	mov	r5, r2
 8009fda:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009fdc:	eb0d 0203 	add.w	r2, sp, r3
 8009fe0:	21d7      	movs	r1, #215	; 0xd7
 8009fe2:	4620      	mov	r0, r4
 8009fe4:	f7f7 fcec 	bl	80019c0 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009fe8:	9b01      	ldr	r3, [sp, #4]
 8009fea:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009fec:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009fee:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009ff2:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009ff4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009ff6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009ff8:	2201      	movs	r2, #1
 8009ffa:	214b      	movs	r1, #75	; 0x4b
 8009ffc:	f7f7 fcac 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800a000:	2200      	movs	r2, #0
 800a002:	214b      	movs	r1, #75	; 0x4b
 800a004:	4620      	mov	r0, r4
 800a006:	f7f7 fca7 	bl	8001958 <IOE_Write>
}
 800a00a:	b002      	add	sp, #8
 800a00c:	bd70      	pop	{r4, r5, r6, pc}
 800a00e:	bf00      	nop

0800a010 <stmpe811_TS_Start>:
{
 800a010:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a012:	b2c4      	uxtb	r4, r0
 800a014:	2104      	movs	r1, #4
 800a016:	4620      	mov	r0, r4
 800a018:	f7f7 fcb6 	bl	8001988 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a01c:	2104      	movs	r1, #4
 800a01e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a022:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a024:	4620      	mov	r0, r4
 800a026:	f7f7 fc97 	bl	8001958 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800a02a:	2117      	movs	r1, #23
 800a02c:	4620      	mov	r0, r4
 800a02e:	f7f7 fcab 	bl	8001988 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800a032:	2117      	movs	r1, #23
 800a034:	f000 020f 	and.w	r2, r0, #15
 800a038:	4620      	mov	r0, r4
 800a03a:	f7f7 fc8d 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a03e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800a042:	4620      	mov	r0, r4
 800a044:	2104      	movs	r1, #4
 800a046:	f7f7 fc87 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800a04a:	2249      	movs	r2, #73	; 0x49
 800a04c:	2120      	movs	r1, #32
 800a04e:	4620      	mov	r0, r4
 800a050:	f7f7 fc82 	bl	8001958 <IOE_Write>
  IOE_Delay(2); 
 800a054:	2002      	movs	r0, #2
 800a056:	f7f7 fccb 	bl	80019f0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800a05a:	4620      	mov	r0, r4
 800a05c:	2201      	movs	r2, #1
 800a05e:	2121      	movs	r1, #33	; 0x21
 800a060:	f7f7 fc7a 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800a064:	4620      	mov	r0, r4
 800a066:	229a      	movs	r2, #154	; 0x9a
 800a068:	2141      	movs	r1, #65	; 0x41
 800a06a:	f7f7 fc75 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800a06e:	4620      	mov	r0, r4
 800a070:	2201      	movs	r2, #1
 800a072:	214a      	movs	r1, #74	; 0x4a
 800a074:	f7f7 fc70 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800a078:	4620      	mov	r0, r4
 800a07a:	2201      	movs	r2, #1
 800a07c:	214b      	movs	r1, #75	; 0x4b
 800a07e:	f7f7 fc6b 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800a082:	4620      	mov	r0, r4
 800a084:	2200      	movs	r2, #0
 800a086:	214b      	movs	r1, #75	; 0x4b
 800a088:	f7f7 fc66 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800a08c:	4620      	mov	r0, r4
 800a08e:	2201      	movs	r2, #1
 800a090:	2156      	movs	r1, #86	; 0x56
 800a092:	f7f7 fc61 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800a096:	4620      	mov	r0, r4
 800a098:	2201      	movs	r2, #1
 800a09a:	2158      	movs	r1, #88	; 0x58
 800a09c:	f7f7 fc5c 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800a0a0:	4620      	mov	r0, r4
 800a0a2:	2201      	movs	r2, #1
 800a0a4:	2140      	movs	r1, #64	; 0x40
 800a0a6:	f7f7 fc57 	bl	8001958 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800a0aa:	4620      	mov	r0, r4
 800a0ac:	22ff      	movs	r2, #255	; 0xff
 800a0ae:	210b      	movs	r1, #11
 800a0b0:	f7f7 fc52 	bl	8001958 <IOE_Write>
}
 800a0b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800a0b8:	2002      	movs	r0, #2
 800a0ba:	f7f7 bc99 	b.w	80019f0 <IOE_Delay>
 800a0be:	bf00      	nop

0800a0c0 <stmpe811_TS_DisableIT>:
{
 800a0c0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a0c2:	b2c4      	uxtb	r4, r0
 800a0c4:	2109      	movs	r1, #9
 800a0c6:	4620      	mov	r0, r4
 800a0c8:	f7f7 fc5e 	bl	8001988 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800a0cc:	2109      	movs	r1, #9
 800a0ce:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800a0d2:	4620      	mov	r0, r4
 800a0d4:	f7f7 fc40 	bl	8001958 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a0d8:	210a      	movs	r1, #10
 800a0da:	4620      	mov	r0, r4
 800a0dc:	f7f7 fc54 	bl	8001988 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a0e0:	210a      	movs	r1, #10
 800a0e2:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800a0e6:	4620      	mov	r0, r4
}
 800a0e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a0ec:	f7f7 bc34 	b.w	8001958 <IOE_Write>

0800a0f0 <stmpe811_TS_EnableIT>:
{
 800a0f0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a0f2:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800a0f4:	f7f7 fc2e 	bl	8001954 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a0f8:	210a      	movs	r1, #10
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	f7f7 fc44 	bl	8001988 <IOE_Read>
  tmp |= Source; 
 800a100:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a104:	b2c2      	uxtb	r2, r0
 800a106:	210a      	movs	r1, #10
 800a108:	4620      	mov	r0, r4
 800a10a:	f7f7 fc25 	bl	8001958 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a10e:	2109      	movs	r1, #9
 800a110:	4620      	mov	r0, r4
 800a112:	f7f7 fc39 	bl	8001988 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800a116:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a11a:	b2c2      	uxtb	r2, r0
 800a11c:	2109      	movs	r1, #9
 800a11e:	4620      	mov	r0, r4
}
 800a120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a124:	f7f7 bc18 	b.w	8001958 <IOE_Write>

0800a128 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800a128:	4a10      	ldr	r2, [pc, #64]	; (800a16c <stmpe811_Init+0x44>)
 800a12a:	7813      	ldrb	r3, [r2, #0]
 800a12c:	4298      	cmp	r0, r3
 800a12e:	d004      	beq.n	800a13a <stmpe811_Init+0x12>
 800a130:	7851      	ldrb	r1, [r2, #1]
 800a132:	4288      	cmp	r0, r1
 800a134:	d001      	beq.n	800a13a <stmpe811_Init+0x12>
 800a136:	b113      	cbz	r3, 800a13e <stmpe811_Init+0x16>
 800a138:	b101      	cbz	r1, 800a13c <stmpe811_Init+0x14>
 800a13a:	4770      	bx	lr
 800a13c:	2301      	movs	r3, #1
{
 800a13e:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800a140:	b2c4      	uxtb	r4, r0
 800a142:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800a144:	f7f7 fc04 	bl	8001950 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800a148:	2202      	movs	r2, #2
 800a14a:	2103      	movs	r1, #3
 800a14c:	4620      	mov	r0, r4
 800a14e:	f7f7 fc03 	bl	8001958 <IOE_Write>
  IOE_Delay(10); 
 800a152:	200a      	movs	r0, #10
 800a154:	f7f7 fc4c 	bl	80019f0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800a158:	4620      	mov	r0, r4
 800a15a:	2200      	movs	r2, #0
 800a15c:	2103      	movs	r1, #3
 800a15e:	f7f7 fbfb 	bl	8001958 <IOE_Write>
}
 800a162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800a166:	2002      	movs	r0, #2
 800a168:	f7f7 bc42 	b.w	80019f0 <IOE_Delay>
 800a16c:	20001fa4 	.word	0x20001fa4

0800a170 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a170:	4b05      	ldr	r3, [pc, #20]	; (800a188 <SystemInit+0x18>)
 800a172:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a176:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a17a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a17e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a182:	6099      	str	r1, [r3, #8]
#endif
}
 800a184:	4770      	bx	lr
 800a186:	bf00      	nop
 800a188:	e000ed00 	.word	0xe000ed00

0800a18c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a18c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a18e:	4b0b      	ldr	r3, [pc, #44]	; (800a1bc <HAL_Init+0x30>)
 800a190:	681a      	ldr	r2, [r3, #0]
 800a192:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a196:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a198:	681a      	ldr	r2, [r3, #0]
 800a19a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a19e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a1a0:	681a      	ldr	r2, [r3, #0]
 800a1a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a1a6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a1a8:	2003      	movs	r0, #3
 800a1aa:	f000 f82d 	bl	800a208 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a1ae:	2000      	movs	r0, #0
 800a1b0:	f7f8 f894 	bl	80022dc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a1b4:	f7f7 fe14 	bl	8001de0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a1b8:	2000      	movs	r0, #0
 800a1ba:	bd08      	pop	{r3, pc}
 800a1bc:	40023c00 	.word	0x40023c00

0800a1c0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a1c0:	4a03      	ldr	r2, [pc, #12]	; (800a1d0 <HAL_IncTick+0x10>)
 800a1c2:	4b04      	ldr	r3, [pc, #16]	; (800a1d4 <HAL_IncTick+0x14>)
 800a1c4:	6811      	ldr	r1, [r2, #0]
 800a1c6:	781b      	ldrb	r3, [r3, #0]
 800a1c8:	440b      	add	r3, r1
 800a1ca:	6013      	str	r3, [r2, #0]
}
 800a1cc:	4770      	bx	lr
 800a1ce:	bf00      	nop
 800a1d0:	20001fa8 	.word	0x20001fa8
 800a1d4:	2000007c 	.word	0x2000007c

0800a1d8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a1d8:	4b01      	ldr	r3, [pc, #4]	; (800a1e0 <HAL_GetTick+0x8>)
 800a1da:	6818      	ldr	r0, [r3, #0]
}
 800a1dc:	4770      	bx	lr
 800a1de:	bf00      	nop
 800a1e0:	20001fa8 	.word	0x20001fa8

0800a1e4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a1e4:	b538      	push	{r3, r4, r5, lr}
 800a1e6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a1e8:	f7ff fff6 	bl	800a1d8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a1ec:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800a1ee:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800a1f0:	d002      	beq.n	800a1f8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800a1f2:	4b04      	ldr	r3, [pc, #16]	; (800a204 <HAL_Delay+0x20>)
 800a1f4:	781b      	ldrb	r3, [r3, #0]
 800a1f6:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a1f8:	f7ff ffee 	bl	800a1d8 <HAL_GetTick>
 800a1fc:	1b43      	subs	r3, r0, r5
 800a1fe:	42a3      	cmp	r3, r4
 800a200:	d3fa      	bcc.n	800a1f8 <HAL_Delay+0x14>
  {
  }
}
 800a202:	bd38      	pop	{r3, r4, r5, pc}
 800a204:	2000007c 	.word	0x2000007c

0800a208 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a208:	4907      	ldr	r1, [pc, #28]	; (800a228 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a20a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a20c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a20e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a212:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a216:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a218:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a21a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a21e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800a222:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a224:	4770      	bx	lr
 800a226:	bf00      	nop
 800a228:	e000ed00 	.word	0xe000ed00

0800a22c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a22c:	4b1c      	ldr	r3, [pc, #112]	; (800a2a0 <HAL_NVIC_SetPriority+0x74>)
 800a22e:	68db      	ldr	r3, [r3, #12]
 800a230:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a234:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a236:	f1c3 0e07 	rsb	lr, r3, #7
 800a23a:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a23e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a242:	bf28      	it	cs
 800a244:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a248:	f1bc 0f06 	cmp.w	ip, #6
 800a24c:	d91b      	bls.n	800a286 <HAL_NVIC_SetPriority+0x5a>
 800a24e:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a250:	f04f 3cff 	mov.w	ip, #4294967295
 800a254:	fa0c fc03 	lsl.w	ip, ip, r3
 800a258:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a25c:	f04f 3cff 	mov.w	ip, #4294967295
 800a260:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a264:	ea21 010c 	bic.w	r1, r1, ip
 800a268:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800a26a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a26c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800a270:	db0c      	blt.n	800a28c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a272:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800a276:	0109      	lsls	r1, r1, #4
 800a278:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a27c:	b2c9      	uxtb	r1, r1
 800a27e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a282:	f85d fb04 	ldr.w	pc, [sp], #4
 800a286:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a288:	4613      	mov	r3, r2
 800a28a:	e7e7      	b.n	800a25c <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a28c:	4b05      	ldr	r3, [pc, #20]	; (800a2a4 <HAL_NVIC_SetPriority+0x78>)
 800a28e:	f000 000f 	and.w	r0, r0, #15
 800a292:	0109      	lsls	r1, r1, #4
 800a294:	4403      	add	r3, r0
 800a296:	b2c9      	uxtb	r1, r1
 800a298:	7619      	strb	r1, [r3, #24]
 800a29a:	f85d fb04 	ldr.w	pc, [sp], #4
 800a29e:	bf00      	nop
 800a2a0:	e000ed00 	.word	0xe000ed00
 800a2a4:	e000ecfc 	.word	0xe000ecfc

0800a2a8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a2a8:	2800      	cmp	r0, #0
 800a2aa:	db07      	blt.n	800a2bc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a2ac:	0941      	lsrs	r1, r0, #5
 800a2ae:	4a04      	ldr	r2, [pc, #16]	; (800a2c0 <HAL_NVIC_EnableIRQ+0x18>)
 800a2b0:	f000 001f 	and.w	r0, r0, #31
 800a2b4:	2301      	movs	r3, #1
 800a2b6:	4083      	lsls	r3, r0
 800a2b8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a2bc:	4770      	bx	lr
 800a2be:	bf00      	nop
 800a2c0:	e000e100 	.word	0xe000e100

0800a2c4 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a2c4:	b180      	cbz	r0, 800a2e8 <HAL_CRC_Init+0x24>
{
 800a2c6:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a2c8:	7943      	ldrb	r3, [r0, #5]
 800a2ca:	4604      	mov	r4, r0
 800a2cc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a2d0:	b11b      	cbz	r3, 800a2da <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a2d2:	2301      	movs	r3, #1
 800a2d4:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a2d6:	2000      	movs	r0, #0
}
 800a2d8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a2da:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a2dc:	f7f7 fda0 	bl	8001e20 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a2e0:	2301      	movs	r3, #1
 800a2e2:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a2e4:	2000      	movs	r0, #0
}
 800a2e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a2e8:	2001      	movs	r0, #1
}
 800a2ea:	4770      	bx	lr

0800a2ec <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a2ec:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a2f0:	2b02      	cmp	r3, #2
 800a2f2:	d003      	beq.n	800a2fc <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a2f4:	2380      	movs	r3, #128	; 0x80
 800a2f6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a2f8:	2001      	movs	r0, #1
 800a2fa:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a2fc:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a2fe:	2305      	movs	r3, #5
 800a300:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a304:	6813      	ldr	r3, [r2, #0]
 800a306:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a30a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a30c:	6013      	str	r3, [r2, #0]
}
 800a30e:	4770      	bx	lr

0800a310 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a310:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a314:	4770      	bx	lr
 800a316:	bf00      	nop

0800a318 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a31c:	2200      	movs	r2, #0
 800a31e:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a320:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a584 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a324:	4e90      	ldr	r6, [pc, #576]	; (800a568 <HAL_GPIO_Init+0x250>)
{
 800a326:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a328:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a32a:	4689      	mov	r9, r1
 800a32c:	e005      	b.n	800a33a <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a32e:	3301      	adds	r3, #1
 800a330:	2b10      	cmp	r3, #16
 800a332:	f102 0202 	add.w	r2, r2, #2
 800a336:	f000 8095 	beq.w	800a464 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800a33a:	2101      	movs	r1, #1
 800a33c:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a33e:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800a342:	43a1      	bics	r1, r4
 800a344:	d1f3      	bne.n	800a32e <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a346:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800a34a:	f00c 0103 	and.w	r1, ip, #3
 800a34e:	1e4d      	subs	r5, r1, #1
 800a350:	2d01      	cmp	r5, #1
 800a352:	f240 808a 	bls.w	800a46a <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a356:	2903      	cmp	r1, #3
 800a358:	f040 80ca 	bne.w	800a4f0 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a35c:	4091      	lsls	r1, r2
 800a35e:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800a360:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a362:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a364:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a366:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a36a:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a36c:	d0df      	beq.n	800a32e <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a36e:	2100      	movs	r1, #0
 800a370:	9103      	str	r1, [sp, #12]
 800a372:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a376:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800a37a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800a37e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a382:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800a386:	9103      	str	r1, [sp, #12]
 800a388:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a38a:	f023 0103 	bic.w	r1, r3, #3
 800a38e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800a392:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a396:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a39a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a39c:	00bf      	lsls	r7, r7, #2
 800a39e:	f04f 0e0f 	mov.w	lr, #15
 800a3a2:	fa0e fe07 	lsl.w	lr, lr, r7
 800a3a6:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a3aa:	4d70      	ldr	r5, [pc, #448]	; (800a56c <HAL_GPIO_Init+0x254>)
 800a3ac:	42a8      	cmp	r0, r5
 800a3ae:	d02e      	beq.n	800a40e <HAL_GPIO_Init+0xf6>
 800a3b0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a3b4:	42a8      	cmp	r0, r5
 800a3b6:	f000 809f 	beq.w	800a4f8 <HAL_GPIO_Init+0x1e0>
 800a3ba:	4d6d      	ldr	r5, [pc, #436]	; (800a570 <HAL_GPIO_Init+0x258>)
 800a3bc:	42a8      	cmp	r0, r5
 800a3be:	f000 80a2 	beq.w	800a506 <HAL_GPIO_Init+0x1ee>
 800a3c2:	4d6c      	ldr	r5, [pc, #432]	; (800a574 <HAL_GPIO_Init+0x25c>)
 800a3c4:	42a8      	cmp	r0, r5
 800a3c6:	f000 80a5 	beq.w	800a514 <HAL_GPIO_Init+0x1fc>
 800a3ca:	4d6b      	ldr	r5, [pc, #428]	; (800a578 <HAL_GPIO_Init+0x260>)
 800a3cc:	42a8      	cmp	r0, r5
 800a3ce:	f000 80a8 	beq.w	800a522 <HAL_GPIO_Init+0x20a>
 800a3d2:	4d6a      	ldr	r5, [pc, #424]	; (800a57c <HAL_GPIO_Init+0x264>)
 800a3d4:	42a8      	cmp	r0, r5
 800a3d6:	f000 80b2 	beq.w	800a53e <HAL_GPIO_Init+0x226>
 800a3da:	4d69      	ldr	r5, [pc, #420]	; (800a580 <HAL_GPIO_Init+0x268>)
 800a3dc:	42a8      	cmp	r0, r5
 800a3de:	f000 80b5 	beq.w	800a54c <HAL_GPIO_Init+0x234>
 800a3e2:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a588 <HAL_GPIO_Init+0x270>
 800a3e6:	4570      	cmp	r0, lr
 800a3e8:	f000 80a2 	beq.w	800a530 <HAL_GPIO_Init+0x218>
 800a3ec:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a58c <HAL_GPIO_Init+0x274>
 800a3f0:	4570      	cmp	r0, lr
 800a3f2:	f000 80b2 	beq.w	800a55a <HAL_GPIO_Init+0x242>
 800a3f6:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a590 <HAL_GPIO_Init+0x278>
 800a3fa:	4570      	cmp	r0, lr
 800a3fc:	bf0c      	ite	eq
 800a3fe:	f04f 0e09 	moveq.w	lr, #9
 800a402:	f04f 0e0a 	movne.w	lr, #10
 800a406:	fa0e f707 	lsl.w	r7, lr, r7
 800a40a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a40e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a412:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a414:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a418:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a41c:	bf0c      	ite	eq
 800a41e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a420:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a424:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a426:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a428:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a42c:	bf0c      	ite	eq
 800a42e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a430:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a434:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a436:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a438:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a43c:	bf0c      	ite	eq
 800a43e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a440:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a444:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a446:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a448:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a44c:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a450:	bf0c      	ite	eq
 800a452:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a454:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a458:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a45a:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a45c:	f102 0202 	add.w	r2, r2, #2
 800a460:	f47f af6b 	bne.w	800a33a <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a464:	b005      	add	sp, #20
 800a466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a46a:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a46e:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a472:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a476:	2503      	movs	r5, #3
 800a478:	fa05 f802 	lsl.w	r8, r5, r2
 800a47c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a480:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a484:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a486:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a488:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a48c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a490:	409f      	lsls	r7, r3
 800a492:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a496:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a49a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a49c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a49e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a4a2:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a4a6:	4097      	lsls	r7, r2
 800a4a8:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a4ac:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a4ae:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a4b0:	fa01 f102 	lsl.w	r1, r1, r2
 800a4b4:	f47f af54 	bne.w	800a360 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a4b8:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a4bc:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a4c0:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a4c4:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a4c8:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a4ca:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a4ce:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a4d2:	fa07 f708 	lsl.w	r7, r7, r8
 800a4d6:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a4d8:	270f      	movs	r7, #15
 800a4da:	fa07 f808 	lsl.w	r8, r7, r8
 800a4de:	9f00      	ldr	r7, [sp, #0]
 800a4e0:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a4e4:	9f01      	ldr	r7, [sp, #4]
 800a4e6:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a4ea:	f8ce 7020 	str.w	r7, [lr, #32]
 800a4ee:	e737      	b.n	800a360 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a4f0:	2503      	movs	r5, #3
 800a4f2:	4095      	lsls	r5, r2
 800a4f4:	43ed      	mvns	r5, r5
 800a4f6:	e7d1      	b.n	800a49c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a4f8:	f04f 0e01 	mov.w	lr, #1
 800a4fc:	fa0e f707 	lsl.w	r7, lr, r7
 800a500:	ea48 0807 	orr.w	r8, r8, r7
 800a504:	e783      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a506:	f04f 0e02 	mov.w	lr, #2
 800a50a:	fa0e f707 	lsl.w	r7, lr, r7
 800a50e:	ea48 0807 	orr.w	r8, r8, r7
 800a512:	e77c      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a514:	f04f 0e03 	mov.w	lr, #3
 800a518:	fa0e f707 	lsl.w	r7, lr, r7
 800a51c:	ea48 0807 	orr.w	r8, r8, r7
 800a520:	e775      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a522:	f04f 0e04 	mov.w	lr, #4
 800a526:	fa0e f707 	lsl.w	r7, lr, r7
 800a52a:	ea48 0807 	orr.w	r8, r8, r7
 800a52e:	e76e      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a530:	f04f 0e07 	mov.w	lr, #7
 800a534:	fa0e f707 	lsl.w	r7, lr, r7
 800a538:	ea48 0807 	orr.w	r8, r8, r7
 800a53c:	e767      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a53e:	f04f 0e05 	mov.w	lr, #5
 800a542:	fa0e f707 	lsl.w	r7, lr, r7
 800a546:	ea48 0807 	orr.w	r8, r8, r7
 800a54a:	e760      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a54c:	f04f 0e06 	mov.w	lr, #6
 800a550:	fa0e f707 	lsl.w	r7, lr, r7
 800a554:	ea48 0807 	orr.w	r8, r8, r7
 800a558:	e759      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a55a:	f04f 0e08 	mov.w	lr, #8
 800a55e:	fa0e f707 	lsl.w	r7, lr, r7
 800a562:	ea48 0807 	orr.w	r8, r8, r7
 800a566:	e752      	b.n	800a40e <HAL_GPIO_Init+0xf6>
 800a568:	40013c00 	.word	0x40013c00
 800a56c:	40020000 	.word	0x40020000
 800a570:	40020800 	.word	0x40020800
 800a574:	40020c00 	.word	0x40020c00
 800a578:	40021000 	.word	0x40021000
 800a57c:	40021400 	.word	0x40021400
 800a580:	40021800 	.word	0x40021800
 800a584:	40023800 	.word	0x40023800
 800a588:	40021c00 	.word	0x40021c00
 800a58c:	40022000 	.word	0x40022000
 800a590:	40022400 	.word	0x40022400

0800a594 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a594:	6903      	ldr	r3, [r0, #16]
 800a596:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a598:	bf14      	ite	ne
 800a59a:	2001      	movne	r0, #1
 800a59c:	2000      	moveq	r0, #0
 800a59e:	4770      	bx	lr

0800a5a0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a5a0:	b902      	cbnz	r2, 800a5a4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a5a2:	0409      	lsls	r1, r1, #16
 800a5a4:	6181      	str	r1, [r0, #24]
  }
}
 800a5a6:	4770      	bx	lr

0800a5a8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a5a8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a5aa:	ea01 0203 	and.w	r2, r1, r3
 800a5ae:	ea21 0103 	bic.w	r1, r1, r3
 800a5b2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a5b6:	6181      	str	r1, [r0, #24]
}
 800a5b8:	4770      	bx	lr
 800a5ba:	bf00      	nop

0800a5bc <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a5bc:	4770      	bx	lr
 800a5be:	bf00      	nop

0800a5c0 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a5c0:	4a04      	ldr	r2, [pc, #16]	; (800a5d4 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a5c2:	6951      	ldr	r1, [r2, #20]
 800a5c4:	4201      	tst	r1, r0
 800a5c6:	d100      	bne.n	800a5ca <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a5c8:	4770      	bx	lr
{
 800a5ca:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a5cc:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a5ce:	f7ff fff5 	bl	800a5bc <HAL_GPIO_EXTI_Callback>
}
 800a5d2:	bd08      	pop	{r3, pc}
 800a5d4:	40013c00 	.word	0x40013c00

0800a5d8 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5dc:	6804      	ldr	r4, [r0, #0]
{
 800a5de:	b083      	sub	sp, #12
 800a5e0:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5e2:	6823      	ldr	r3, [r4, #0]
{
 800a5e4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a5e8:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a5f0:	4606      	mov	r6, r0
 800a5f2:	468a      	mov	sl, r1
 800a5f4:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5f6:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a5f8:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a5fc:	d136      	bne.n	800a66c <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a5fe:	6965      	ldr	r5, [r4, #20]
 800a600:	07e8      	lsls	r0, r5, #31
 800a602:	d5fc      	bpl.n	800a5fe <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a604:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a608:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a60a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a60e:	d003      	beq.n	800a618 <I2C_RequestMemoryWrite+0x40>
 800a610:	e04f      	b.n	800a6b2 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a612:	6961      	ldr	r1, [r4, #20]
 800a614:	054d      	lsls	r5, r1, #21
 800a616:	d45d      	bmi.n	800a6d4 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a618:	6961      	ldr	r1, [r4, #20]
 800a61a:	078b      	lsls	r3, r1, #30
 800a61c:	d5f9      	bpl.n	800a612 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a61e:	2300      	movs	r3, #0
 800a620:	9301      	str	r3, [sp, #4]
 800a622:	6963      	ldr	r3, [r4, #20]
 800a624:	9301      	str	r3, [sp, #4]
 800a626:	69a3      	ldr	r3, [r4, #24]
 800a628:	9301      	str	r3, [sp, #4]
 800a62a:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a62c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a630:	f040 8088 	bne.w	800a744 <I2C_RequestMemoryWrite+0x16c>
 800a634:	6963      	ldr	r3, [r4, #20]
 800a636:	061a      	lsls	r2, r3, #24
 800a638:	d464      	bmi.n	800a704 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a63a:	6963      	ldr	r3, [r4, #20]
 800a63c:	055b      	lsls	r3, r3, #21
 800a63e:	d5f9      	bpl.n	800a634 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a640:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a642:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a646:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a648:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a64a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a64c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a650:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a654:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a656:	f043 0304 	orr.w	r3, r3, #4
 800a65a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a65c:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a65e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a660:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a662:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a666:	d066      	beq.n	800a736 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a668:	2001      	movs	r0, #1
 800a66a:	e01f      	b.n	800a6ac <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a66c:	6963      	ldr	r3, [r4, #20]
 800a66e:	07d9      	lsls	r1, r3, #31
 800a670:	d4c8      	bmi.n	800a604 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a672:	f7ff fdb1 	bl	800a1d8 <HAL_GetTick>
 800a676:	eba0 000b 	sub.w	r0, r0, fp
 800a67a:	4581      	cmp	r9, r0
 800a67c:	d304      	bcc.n	800a688 <I2C_RequestMemoryWrite+0xb0>
 800a67e:	f1b9 0f00 	cmp.w	r9, #0
 800a682:	d001      	beq.n	800a688 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a684:	6834      	ldr	r4, [r6, #0]
 800a686:	e7b7      	b.n	800a5f8 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a688:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a68a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a68c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a68e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a692:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a696:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a698:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a69a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a69e:	f042 0220 	orr.w	r2, r2, #32
 800a6a2:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a6a4:	680b      	ldr	r3, [r1, #0]
 800a6a6:	05dc      	lsls	r4, r3, #23
 800a6a8:	d435      	bmi.n	800a716 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a6aa:	2003      	movs	r0, #3
}
 800a6ac:	b003      	add	sp, #12
 800a6ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a6b2:	6963      	ldr	r3, [r4, #20]
 800a6b4:	0798      	lsls	r0, r3, #30
 800a6b6:	d4b2      	bmi.n	800a61e <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6b8:	6963      	ldr	r3, [r4, #20]
 800a6ba:	055a      	lsls	r2, r3, #21
 800a6bc:	d40a      	bmi.n	800a6d4 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6be:	f7ff fd8b 	bl	800a1d8 <HAL_GetTick>
 800a6c2:	eba0 000b 	sub.w	r0, r0, fp
 800a6c6:	4581      	cmp	r9, r0
 800a6c8:	d34e      	bcc.n	800a768 <I2C_RequestMemoryWrite+0x190>
 800a6ca:	f1b9 0f00 	cmp.w	r9, #0
 800a6ce:	d04b      	beq.n	800a768 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a6d0:	6834      	ldr	r4, [r6, #0]
 800a6d2:	e79a      	b.n	800a60a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a6d4:	6823      	ldr	r3, [r4, #0]
 800a6d6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a6da:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a6dc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a6de:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a6e2:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a6e4:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a6e6:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a6e8:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a6ec:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a6f0:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a6f2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a6f6:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a6fa:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a6fc:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a6fe:	b003      	add	sp, #12
 800a700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a704:	f1b8 0f01 	cmp.w	r8, #1
 800a708:	d109      	bne.n	800a71e <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a70a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a70c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a70e:	6127      	str	r7, [r4, #16]
}
 800a710:	b003      	add	sp, #12
 800a712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a716:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a71a:	6433      	str	r3, [r6, #64]	; 0x40
 800a71c:	e7c5      	b.n	800a6aa <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a71e:	0a3b      	lsrs	r3, r7, #8
 800a720:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a722:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a726:	d12e      	bne.n	800a786 <I2C_RequestMemoryWrite+0x1ae>
 800a728:	6963      	ldr	r3, [r4, #20]
 800a72a:	0619      	lsls	r1, r3, #24
 800a72c:	d4ed      	bmi.n	800a70a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a72e:	6963      	ldr	r3, [r4, #20]
 800a730:	055a      	lsls	r2, r3, #21
 800a732:	d5f9      	bpl.n	800a728 <I2C_RequestMemoryWrite+0x150>
 800a734:	e784      	b.n	800a640 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a736:	6832      	ldr	r2, [r6, #0]
 800a738:	6813      	ldr	r3, [r2, #0]
 800a73a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a73e:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a740:	6013      	str	r3, [r2, #0]
 800a742:	e7b3      	b.n	800a6ac <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a744:	6963      	ldr	r3, [r4, #20]
 800a746:	061d      	lsls	r5, r3, #24
 800a748:	d4dc      	bmi.n	800a704 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a74a:	6963      	ldr	r3, [r4, #20]
 800a74c:	0559      	lsls	r1, r3, #21
 800a74e:	f53f af77 	bmi.w	800a640 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a752:	f7ff fd41 	bl	800a1d8 <HAL_GetTick>
 800a756:	eba0 000b 	sub.w	r0, r0, fp
 800a75a:	4581      	cmp	r9, r0
 800a75c:	d325      	bcc.n	800a7aa <I2C_RequestMemoryWrite+0x1d2>
 800a75e:	f1b9 0f00 	cmp.w	r9, #0
 800a762:	d022      	beq.n	800a7aa <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a764:	6834      	ldr	r4, [r6, #0]
 800a766:	e761      	b.n	800a62c <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a768:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a76a:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a76c:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a76e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a772:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a776:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a778:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a77c:	f043 0320 	orr.w	r3, r3, #32
 800a780:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a782:	2001      	movs	r0, #1
 800a784:	e792      	b.n	800a6ac <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a786:	6963      	ldr	r3, [r4, #20]
 800a788:	061b      	lsls	r3, r3, #24
 800a78a:	d4be      	bmi.n	800a70a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a78c:	6963      	ldr	r3, [r4, #20]
 800a78e:	0558      	lsls	r0, r3, #21
 800a790:	f53f af56 	bmi.w	800a640 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a794:	f7ff fd20 	bl	800a1d8 <HAL_GetTick>
 800a798:	eba0 000b 	sub.w	r0, r0, fp
 800a79c:	4581      	cmp	r9, r0
 800a79e:	d304      	bcc.n	800a7aa <I2C_RequestMemoryWrite+0x1d2>
 800a7a0:	f1b9 0f00 	cmp.w	r9, #0
 800a7a4:	d001      	beq.n	800a7aa <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7a6:	6834      	ldr	r4, [r6, #0]
 800a7a8:	e7bb      	b.n	800a722 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7aa:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7ac:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7ae:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7b0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a7b4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a7b8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a7ba:	4313      	orrs	r3, r2
 800a7bc:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a7be:	e74d      	b.n	800a65c <I2C_RequestMemoryWrite+0x84>

0800a7c0 <I2C_RequestMemoryRead>:
{
 800a7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7c4:	6804      	ldr	r4, [r0, #0]
{
 800a7c6:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7c8:	6823      	ldr	r3, [r4, #0]
 800a7ca:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a7ce:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a7d0:	6823      	ldr	r3, [r4, #0]
{
 800a7d2:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a7d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a7d8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a7dc:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a7e0:	6023      	str	r3, [r4, #0]
{
 800a7e2:	4606      	mov	r6, r0
 800a7e4:	468b      	mov	fp, r1
 800a7e6:	4617      	mov	r7, r2
 800a7e8:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a7ec:	d13a      	bne.n	800a864 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7ee:	6965      	ldr	r5, [r4, #20]
 800a7f0:	07eb      	lsls	r3, r5, #31
 800a7f2:	d5fc      	bpl.n	800a7ee <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a7f4:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a7f8:	6123      	str	r3, [r4, #16]
 800a7fa:	fa5f fb8b 	uxtb.w	fp, fp
 800a7fe:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a802:	d003      	beq.n	800a80c <I2C_RequestMemoryRead+0x4c>
 800a804:	e069      	b.n	800a8da <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a806:	6965      	ldr	r5, [r4, #20]
 800a808:	056a      	lsls	r2, r5, #21
 800a80a:	d44e      	bmi.n	800a8aa <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a80c:	6965      	ldr	r5, [r4, #20]
 800a80e:	07a9      	lsls	r1, r5, #30
 800a810:	d5f9      	bpl.n	800a806 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a812:	2300      	movs	r3, #0
 800a814:	9301      	str	r3, [sp, #4]
 800a816:	6963      	ldr	r3, [r4, #20]
 800a818:	9301      	str	r3, [sp, #4]
 800a81a:	69a3      	ldr	r3, [r4, #24]
 800a81c:	9301      	str	r3, [sp, #4]
 800a81e:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a820:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a824:	f040 80bd 	bne.w	800a9a2 <I2C_RequestMemoryRead+0x1e2>
 800a828:	6963      	ldr	r3, [r4, #20]
 800a82a:	0618      	lsls	r0, r3, #24
 800a82c:	d468      	bmi.n	800a900 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a82e:	6963      	ldr	r3, [r4, #20]
 800a830:	0559      	lsls	r1, r3, #21
 800a832:	d5f9      	bpl.n	800a828 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a834:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a836:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a83a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a83c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a83e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a840:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a844:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a848:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a84a:	f043 0304 	orr.w	r3, r3, #4
 800a84e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a850:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a852:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a854:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a856:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a85a:	d070      	beq.n	800a93e <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a85c:	2001      	movs	r0, #1
}
 800a85e:	b003      	add	sp, #12
 800a860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a864:	6963      	ldr	r3, [r4, #20]
 800a866:	07dd      	lsls	r5, r3, #31
 800a868:	d4c4      	bmi.n	800a7f4 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a86a:	f7ff fcb5 	bl	800a1d8 <HAL_GetTick>
 800a86e:	eba0 0009 	sub.w	r0, r0, r9
 800a872:	4582      	cmp	sl, r0
 800a874:	d304      	bcc.n	800a880 <I2C_RequestMemoryRead+0xc0>
 800a876:	f1ba 0f00 	cmp.w	sl, #0
 800a87a:	d001      	beq.n	800a880 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a87c:	6834      	ldr	r4, [r6, #0]
 800a87e:	e7b3      	b.n	800a7e8 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a880:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a882:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a884:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a886:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a88a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a88e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a890:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a892:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a896:	f042 0220 	orr.w	r2, r2, #32
 800a89a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a89c:	680b      	ldr	r3, [r1, #0]
 800a89e:	05dc      	lsls	r4, r3, #23
 800a8a0:	d43d      	bmi.n	800a91e <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a8a2:	2003      	movs	r0, #3
}
 800a8a4:	b003      	add	sp, #12
 800a8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8aa:	6823      	ldr	r3, [r4, #0]
 800a8ac:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a8b0:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a8b2:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a8b4:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a8b8:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a8ba:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a8bc:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a8be:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a8c2:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a8c6:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a8c8:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a8cc:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a8d0:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a8d2:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a8d4:	b003      	add	sp, #12
 800a8d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a8da:	6963      	ldr	r3, [r4, #20]
 800a8dc:	079b      	lsls	r3, r3, #30
 800a8de:	d498      	bmi.n	800a812 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8e0:	6963      	ldr	r3, [r4, #20]
 800a8e2:	0558      	lsls	r0, r3, #21
 800a8e4:	d4e1      	bmi.n	800a8aa <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8e6:	f7ff fc77 	bl	800a1d8 <HAL_GetTick>
 800a8ea:	eba0 0009 	sub.w	r0, r0, r9
 800a8ee:	4582      	cmp	sl, r0
 800a8f0:	f0c0 808f 	bcc.w	800aa12 <I2C_RequestMemoryRead+0x252>
 800a8f4:	f1ba 0f00 	cmp.w	sl, #0
 800a8f8:	f000 808b 	beq.w	800aa12 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a8fc:	6834      	ldr	r4, [r6, #0]
 800a8fe:	e77e      	b.n	800a7fe <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a900:	f1b8 0f01 	cmp.w	r8, #1
 800a904:	d10f      	bne.n	800a926 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a906:	b2ff      	uxtb	r7, r7
 800a908:	6127      	str	r7, [r4, #16]
 800a90a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a90e:	d16e      	bne.n	800a9ee <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a910:	6963      	ldr	r3, [r4, #20]
 800a912:	061b      	lsls	r3, r3, #24
 800a914:	d41a      	bmi.n	800a94c <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a916:	6963      	ldr	r3, [r4, #20]
 800a918:	055f      	lsls	r7, r3, #21
 800a91a:	d5f9      	bpl.n	800a910 <I2C_RequestMemoryRead+0x150>
 800a91c:	e78a      	b.n	800a834 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a91e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a922:	6433      	str	r3, [r6, #64]	; 0x40
 800a924:	e7bd      	b.n	800a8a2 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a926:	0a3b      	lsrs	r3, r7, #8
 800a928:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a92a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a92e:	d17e      	bne.n	800aa2e <I2C_RequestMemoryRead+0x26e>
 800a930:	6963      	ldr	r3, [r4, #20]
 800a932:	061d      	lsls	r5, r3, #24
 800a934:	d4e7      	bmi.n	800a906 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a936:	6963      	ldr	r3, [r4, #20]
 800a938:	0558      	lsls	r0, r3, #21
 800a93a:	d5f9      	bpl.n	800a930 <I2C_RequestMemoryRead+0x170>
 800a93c:	e77a      	b.n	800a834 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a93e:	6832      	ldr	r2, [r6, #0]
 800a940:	6813      	ldr	r3, [r2, #0]
 800a942:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a946:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a948:	6013      	str	r3, [r2, #0]
 800a94a:	e7ab      	b.n	800a8a4 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a94c:	6823      	ldr	r3, [r4, #0]
 800a94e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a952:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a954:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a958:	d113      	bne.n	800a982 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a95a:	6963      	ldr	r3, [r4, #20]
 800a95c:	07d8      	lsls	r0, r3, #31
 800a95e:	d5fc      	bpl.n	800a95a <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a960:	f04b 0301 	orr.w	r3, fp, #1
 800a964:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a966:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a96a:	d003      	beq.n	800a974 <I2C_RequestMemoryRead+0x1b4>
 800a96c:	e02b      	b.n	800a9c6 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a96e:	6963      	ldr	r3, [r4, #20]
 800a970:	055b      	lsls	r3, r3, #21
 800a972:	d49a      	bmi.n	800a8aa <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a974:	6963      	ldr	r3, [r4, #20]
 800a976:	43db      	mvns	r3, r3
 800a978:	f013 0302 	ands.w	r3, r3, #2
 800a97c:	d1f7      	bne.n	800a96e <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a97e:	4618      	mov	r0, r3
 800a980:	e790      	b.n	800a8a4 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a982:	6963      	ldr	r3, [r4, #20]
 800a984:	07d9      	lsls	r1, r3, #31
 800a986:	d4eb      	bmi.n	800a960 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a988:	f7ff fc26 	bl	800a1d8 <HAL_GetTick>
 800a98c:	eba0 0009 	sub.w	r0, r0, r9
 800a990:	4582      	cmp	sl, r0
 800a992:	f4ff af75 	bcc.w	800a880 <I2C_RequestMemoryRead+0xc0>
 800a996:	f1ba 0f00 	cmp.w	sl, #0
 800a99a:	f43f af71 	beq.w	800a880 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a99e:	6834      	ldr	r4, [r6, #0]
 800a9a0:	e7d8      	b.n	800a954 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a9a2:	6963      	ldr	r3, [r4, #20]
 800a9a4:	061a      	lsls	r2, r3, #24
 800a9a6:	d4ab      	bmi.n	800a900 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a9a8:	6963      	ldr	r3, [r4, #20]
 800a9aa:	055d      	lsls	r5, r3, #21
 800a9ac:	f53f af42 	bmi.w	800a834 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9b0:	f7ff fc12 	bl	800a1d8 <HAL_GetTick>
 800a9b4:	eba0 0009 	sub.w	r0, r0, r9
 800a9b8:	4582      	cmp	sl, r0
 800a9ba:	d34b      	bcc.n	800aa54 <I2C_RequestMemoryRead+0x294>
 800a9bc:	f1ba 0f00 	cmp.w	sl, #0
 800a9c0:	d048      	beq.n	800aa54 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a9c2:	6834      	ldr	r4, [r6, #0]
 800a9c4:	e72c      	b.n	800a820 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a9c6:	6963      	ldr	r3, [r4, #20]
 800a9c8:	43db      	mvns	r3, r3
 800a9ca:	f013 0302 	ands.w	r3, r3, #2
 800a9ce:	d0d6      	beq.n	800a97e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a9d0:	6963      	ldr	r3, [r4, #20]
 800a9d2:	055a      	lsls	r2, r3, #21
 800a9d4:	f53f af69 	bmi.w	800a8aa <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9d8:	f7ff fbfe 	bl	800a1d8 <HAL_GetTick>
 800a9dc:	eba0 0009 	sub.w	r0, r0, r9
 800a9e0:	4582      	cmp	sl, r0
 800a9e2:	d316      	bcc.n	800aa12 <I2C_RequestMemoryRead+0x252>
 800a9e4:	f1ba 0f00 	cmp.w	sl, #0
 800a9e8:	d013      	beq.n	800aa12 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a9ea:	6834      	ldr	r4, [r6, #0]
 800a9ec:	e7bb      	b.n	800a966 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a9ee:	6963      	ldr	r3, [r4, #20]
 800a9f0:	061d      	lsls	r5, r3, #24
 800a9f2:	d4ab      	bmi.n	800a94c <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a9f4:	6963      	ldr	r3, [r4, #20]
 800a9f6:	055a      	lsls	r2, r3, #21
 800a9f8:	f53f af1c 	bmi.w	800a834 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9fc:	f7ff fbec 	bl	800a1d8 <HAL_GetTick>
 800aa00:	eba0 0009 	sub.w	r0, r0, r9
 800aa04:	4582      	cmp	sl, r0
 800aa06:	d325      	bcc.n	800aa54 <I2C_RequestMemoryRead+0x294>
 800aa08:	f1ba 0f00 	cmp.w	sl, #0
 800aa0c:	d022      	beq.n	800aa54 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aa0e:	6834      	ldr	r4, [r6, #0]
 800aa10:	e77b      	b.n	800a90a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800aa12:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800aa14:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800aa16:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800aa18:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aa1c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aa20:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800aa22:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aa26:	f043 0320 	orr.w	r3, r3, #32
 800aa2a:	6433      	str	r3, [r6, #64]	; 0x40
 800aa2c:	e716      	b.n	800a85c <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aa2e:	6963      	ldr	r3, [r4, #20]
 800aa30:	0619      	lsls	r1, r3, #24
 800aa32:	f53f af68 	bmi.w	800a906 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aa36:	6963      	ldr	r3, [r4, #20]
 800aa38:	055b      	lsls	r3, r3, #21
 800aa3a:	f53f aefb 	bmi.w	800a834 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa3e:	f7ff fbcb 	bl	800a1d8 <HAL_GetTick>
 800aa42:	eba0 0009 	sub.w	r0, r0, r9
 800aa46:	4582      	cmp	sl, r0
 800aa48:	d304      	bcc.n	800aa54 <I2C_RequestMemoryRead+0x294>
 800aa4a:	f1ba 0f00 	cmp.w	sl, #0
 800aa4e:	d001      	beq.n	800aa54 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aa50:	6834      	ldr	r4, [r6, #0]
 800aa52:	e76a      	b.n	800a92a <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aa54:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800aa56:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aa58:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800aa5a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800aa5e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aa62:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800aa64:	4313      	orrs	r3, r2
 800aa66:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800aa68:	e6f2      	b.n	800a850 <I2C_RequestMemoryRead+0x90>
 800aa6a:	bf00      	nop

0800aa6c <HAL_I2C_Init>:
  if (hi2c == NULL)
 800aa6c:	2800      	cmp	r0, #0
 800aa6e:	f000 80b9 	beq.w	800abe4 <HAL_I2C_Init+0x178>
{
 800aa72:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800aa74:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800aa78:	4604      	mov	r4, r0
 800aa7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800aa7e:	2b00      	cmp	r3, #0
 800aa80:	f000 8098 	beq.w	800abb4 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800aa84:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800aa86:	2224      	movs	r2, #36	; 0x24
 800aa88:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800aa8c:	681a      	ldr	r2, [r3, #0]
 800aa8e:	f022 0201 	bic.w	r2, r2, #1
 800aa92:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800aa94:	681a      	ldr	r2, [r3, #0]
 800aa96:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800aa9a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800aa9c:	681a      	ldr	r2, [r3, #0]
 800aa9e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800aaa2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800aaa4:	f001 fe70 	bl	800c788 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800aaa8:	6865      	ldr	r5, [r4, #4]
 800aaaa:	4b4f      	ldr	r3, [pc, #316]	; (800abe8 <HAL_I2C_Init+0x17c>)
 800aaac:	429d      	cmp	r5, r3
 800aaae:	d84f      	bhi.n	800ab50 <HAL_I2C_Init+0xe4>
 800aab0:	4b4e      	ldr	r3, [pc, #312]	; (800abec <HAL_I2C_Init+0x180>)
 800aab2:	4298      	cmp	r0, r3
 800aab4:	d97c      	bls.n	800abb0 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800aab6:	4b4e      	ldr	r3, [pc, #312]	; (800abf0 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aab8:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800aaba:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aabe:	1e43      	subs	r3, r0, #1
 800aac0:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aac4:	6822      	ldr	r2, [r4, #0]
 800aac6:	6851      	ldr	r1, [r2, #4]
 800aac8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aacc:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800aad0:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aad2:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800aad4:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aad8:	f10c 0c01 	add.w	ip, ip, #1
 800aadc:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aae0:	ea41 010c 	orr.w	r1, r1, ip
 800aae4:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aae6:	69d1      	ldr	r1, [r2, #28]
 800aae8:	f640 70fc 	movw	r0, #4092	; 0xffc
 800aaec:	3301      	adds	r3, #1
 800aaee:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800aaf2:	4203      	tst	r3, r0
 800aaf4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aaf8:	d161      	bne.n	800abbe <HAL_I2C_Init+0x152>
 800aafa:	2304      	movs	r3, #4
 800aafc:	430b      	orrs	r3, r1
 800aafe:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800ab00:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800ab04:	6811      	ldr	r1, [r2, #0]
 800ab06:	4303      	orrs	r3, r0
 800ab08:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800ab0c:	430b      	orrs	r3, r1
 800ab0e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800ab10:	6891      	ldr	r1, [r2, #8]
 800ab12:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800ab16:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800ab1a:	4303      	orrs	r3, r0
 800ab1c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ab20:	430b      	orrs	r3, r1
 800ab22:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800ab24:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800ab28:	68d1      	ldr	r1, [r2, #12]
 800ab2a:	4303      	orrs	r3, r0
 800ab2c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ab30:	430b      	orrs	r3, r1
 800ab32:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800ab34:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ab36:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800ab38:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800ab3c:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800ab3e:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ab40:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800ab42:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800ab46:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab48:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800ab4c:	4618      	mov	r0, r3
}
 800ab4e:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800ab50:	4b28      	ldr	r3, [pc, #160]	; (800abf4 <HAL_I2C_Init+0x188>)
 800ab52:	4298      	cmp	r0, r3
 800ab54:	d92c      	bls.n	800abb0 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800ab56:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800ab58:	4b25      	ldr	r3, [pc, #148]	; (800abf0 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800ab5a:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800ab5c:	4e26      	ldr	r6, [pc, #152]	; (800abf8 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800ab5e:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800ab62:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800ab66:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800ab6a:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800ab6c:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800ab70:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800ab74:	fb01 f303 	mul.w	r3, r1, r3
 800ab78:	fba6 6303 	umull	r6, r3, r6, r3
 800ab7c:	6a11      	ldr	r1, [r2, #32]
 800ab7e:	099b      	lsrs	r3, r3, #6
 800ab80:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800ab84:	3301      	adds	r3, #1
 800ab86:	430b      	orrs	r3, r1
 800ab88:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800ab8a:	69d1      	ldr	r1, [r2, #28]
 800ab8c:	68a3      	ldr	r3, [r4, #8]
 800ab8e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800ab92:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ab96:	b9ab      	cbnz	r3, 800abc4 <HAL_I2C_Init+0x158>
 800ab98:	1e43      	subs	r3, r0, #1
 800ab9a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ab9e:	fbb3 f3f5 	udiv	r3, r3, r5
 800aba2:	3301      	adds	r3, #1
 800aba4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aba8:	b1d3      	cbz	r3, 800abe0 <HAL_I2C_Init+0x174>
 800abaa:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800abae:	e7a5      	b.n	800aafc <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800abb0:	2001      	movs	r0, #1
}
 800abb2:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800abb4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800abb8:	f7f7 f94c 	bl	8001e54 <HAL_I2C_MspInit>
 800abbc:	e762      	b.n	800aa84 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800abbe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800abc2:	e79b      	b.n	800aafc <HAL_I2C_Init+0x90>
 800abc4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800abc8:	1e43      	subs	r3, r0, #1
 800abca:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800abce:	fbb3 f3f5 	udiv	r3, r3, r5
 800abd2:	3301      	adds	r3, #1
 800abd4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800abd8:	b113      	cbz	r3, 800abe0 <HAL_I2C_Init+0x174>
 800abda:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800abde:	e78d      	b.n	800aafc <HAL_I2C_Init+0x90>
 800abe0:	2301      	movs	r3, #1
 800abe2:	e78b      	b.n	800aafc <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800abe4:	2001      	movs	r0, #1
}
 800abe6:	4770      	bx	lr
 800abe8:	000186a0 	.word	0x000186a0
 800abec:	001e847f 	.word	0x001e847f
 800abf0:	431bde83 	.word	0x431bde83
 800abf4:	003d08ff 	.word	0x003d08ff
 800abf8:	10624dd3 	.word	0x10624dd3

0800abfc <HAL_I2C_Mem_Write>:
{
 800abfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac00:	4604      	mov	r4, r0
 800ac02:	b083      	sub	sp, #12
 800ac04:	4699      	mov	r9, r3
 800ac06:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800ac0a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ac0c:	460f      	mov	r7, r1
 800ac0e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ac10:	f7ff fae2 	bl	800a1d8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac14:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ac18:	2b20      	cmp	r3, #32
 800ac1a:	d004      	beq.n	800ac26 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800ac1c:	2702      	movs	r7, #2
}
 800ac1e:	4638      	mov	r0, r7
 800ac20:	b003      	add	sp, #12
 800ac22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac26:	4605      	mov	r5, r0
 800ac28:	e005      	b.n	800ac36 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac2a:	f7ff fad5 	bl	800a1d8 <HAL_GetTick>
 800ac2e:	1b40      	subs	r0, r0, r5
 800ac30:	2819      	cmp	r0, #25
 800ac32:	f200 80a8 	bhi.w	800ad86 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac36:	6820      	ldr	r0, [r4, #0]
 800ac38:	6983      	ldr	r3, [r0, #24]
 800ac3a:	ea6f 0c03 	mvn.w	ip, r3
 800ac3e:	f01c 0b02 	ands.w	fp, ip, #2
 800ac42:	d0f2      	beq.n	800ac2a <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800ac44:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ac48:	2b01      	cmp	r3, #1
 800ac4a:	d0e7      	beq.n	800ac1c <HAL_I2C_Mem_Write+0x20>
 800ac4c:	2301      	movs	r3, #1
 800ac4e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ac52:	6803      	ldr	r3, [r0, #0]
 800ac54:	07db      	lsls	r3, r3, #31
 800ac56:	d572      	bpl.n	800ad3e <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ac58:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ac5a:	6807      	ldr	r7, [r0, #0]
 800ac5c:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800ac60:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800ac62:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ac64:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800ac66:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ac68:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800ac6c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800ac70:	2040      	movs	r0, #64	; 0x40
 800ac72:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ac76:	2000      	movs	r0, #0
 800ac78:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800ac7a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800ac7e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800ac80:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ac82:	4856      	ldr	r0, [pc, #344]	; (800addc <HAL_I2C_Mem_Write+0x1e0>)
 800ac84:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ac86:	464b      	mov	r3, r9
 800ac88:	4642      	mov	r2, r8
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	f7ff fca4 	bl	800a5d8 <I2C_RequestMemoryWrite>
 800ac90:	4607      	mov	r7, r0
 800ac92:	bb00      	cbnz	r0, 800acd6 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800ac94:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ac96:	2b00      	cmp	r3, #0
 800ac98:	f000 809e 	beq.w	800add8 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ac9c:	6823      	ldr	r3, [r4, #0]
 800ac9e:	1c72      	adds	r2, r6, #1
 800aca0:	d159      	bne.n	800ad56 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aca2:	695a      	ldr	r2, [r3, #20]
 800aca4:	0610      	lsls	r0, r2, #24
 800aca6:	d41b      	bmi.n	800ace0 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aca8:	695a      	ldr	r2, [r3, #20]
 800acaa:	0551      	lsls	r1, r2, #21
 800acac:	d5f9      	bpl.n	800aca2 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800acae:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800acb0:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800acb4:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800acb6:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800acb8:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800acba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800acbe:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800acc2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800acc4:	f043 0304 	orr.w	r3, r3, #4
 800acc8:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800acca:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800accc:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800acce:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800acd0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800acd4:	d038      	beq.n	800ad48 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800acd6:	2701      	movs	r7, #1
}
 800acd8:	4638      	mov	r0, r7
 800acda:	b003      	add	sp, #12
 800acdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ace0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800ace4:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ace8:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800acea:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800acee:	f811 2b01 	ldrb.w	r2, [r1], #1
 800acf2:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800acf4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800acf6:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800acf8:	3a01      	subs	r2, #1
 800acfa:	b292      	uxth	r2, r2
 800acfc:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800acfe:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ad00:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800ad02:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ad04:	0740      	lsls	r0, r0, #29
 800ad06:	d517      	bpl.n	800ad38 <HAL_I2C_Mem_Write+0x13c>
 800ad08:	b942      	cbnz	r2, 800ad1c <HAL_I2C_Mem_Write+0x120>
 800ad0a:	1c72      	adds	r2, r6, #1
 800ad0c:	d156      	bne.n	800adbc <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ad0e:	695a      	ldr	r2, [r3, #20]
 800ad10:	0750      	lsls	r0, r2, #29
 800ad12:	d446      	bmi.n	800ada2 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ad14:	695a      	ldr	r2, [r3, #20]
 800ad16:	0551      	lsls	r1, r2, #21
 800ad18:	d5f9      	bpl.n	800ad0e <HAL_I2C_Mem_Write+0x112>
 800ad1a:	e7c8      	b.n	800acae <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ad1c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800ad20:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800ad22:	f10c 0102 	add.w	r1, ip, #2
 800ad26:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ad28:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800ad2a:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800ad2e:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800ad30:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800ad32:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800ad34:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800ad36:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ad38:	2a00      	cmp	r2, #0
 800ad3a:	d1b0      	bne.n	800ac9e <HAL_I2C_Mem_Write+0xa2>
 800ad3c:	e7e5      	b.n	800ad0a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800ad3e:	6803      	ldr	r3, [r0, #0]
 800ad40:	f043 0301 	orr.w	r3, r3, #1
 800ad44:	6003      	str	r3, [r0, #0]
 800ad46:	e787      	b.n	800ac58 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad48:	6822      	ldr	r2, [r4, #0]
 800ad4a:	6813      	ldr	r3, [r2, #0]
 800ad4c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800ad50:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad52:	6013      	str	r3, [r2, #0]
 800ad54:	e763      	b.n	800ac1e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ad56:	695a      	ldr	r2, [r3, #20]
 800ad58:	0612      	lsls	r2, r2, #24
 800ad5a:	d4c1      	bmi.n	800ace0 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ad5c:	695a      	ldr	r2, [r3, #20]
 800ad5e:	0551      	lsls	r1, r2, #21
 800ad60:	d4a5      	bmi.n	800acae <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad62:	f7ff fa39 	bl	800a1d8 <HAL_GetTick>
 800ad66:	1b40      	subs	r0, r0, r5
 800ad68:	4286      	cmp	r6, r0
 800ad6a:	d301      	bcc.n	800ad70 <HAL_I2C_Mem_Write+0x174>
 800ad6c:	2e00      	cmp	r6, #0
 800ad6e:	d195      	bne.n	800ac9c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad70:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad72:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad74:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad76:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad7a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad7e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ad80:	4313      	orrs	r3, r2
 800ad82:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800ad84:	e7a1      	b.n	800acca <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad86:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad88:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad8c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad90:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad94:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad96:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad9a:	f043 0320 	orr.w	r3, r3, #32
 800ad9e:	6423      	str	r3, [r4, #64]	; 0x40
 800ada0:	e73c      	b.n	800ac1c <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ada2:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ada4:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ada6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800adaa:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800adac:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800adae:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800adb2:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800adb6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800adba:	e730      	b.n	800ac1e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800adbc:	695a      	ldr	r2, [r3, #20]
 800adbe:	0752      	lsls	r2, r2, #29
 800adc0:	d4ef      	bmi.n	800ada2 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800adc2:	695a      	ldr	r2, [r3, #20]
 800adc4:	0551      	lsls	r1, r2, #21
 800adc6:	f53f af72 	bmi.w	800acae <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800adca:	f7ff fa05 	bl	800a1d8 <HAL_GetTick>
 800adce:	1b40      	subs	r0, r0, r5
 800add0:	4286      	cmp	r6, r0
 800add2:	d3cd      	bcc.n	800ad70 <HAL_I2C_Mem_Write+0x174>
 800add4:	2e00      	cmp	r6, #0
 800add6:	d0cb      	beq.n	800ad70 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800add8:	6823      	ldr	r3, [r4, #0]
 800adda:	e796      	b.n	800ad0a <HAL_I2C_Mem_Write+0x10e>
 800addc:	ffff0000 	.word	0xffff0000

0800ade0 <HAL_I2C_Mem_Read>:
{
 800ade0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ade4:	4604      	mov	r4, r0
 800ade6:	b087      	sub	sp, #28
 800ade8:	4699      	mov	r9, r3
 800adea:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800adee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800adf0:	460f      	mov	r7, r1
 800adf2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800adf4:	f7ff f9f0 	bl	800a1d8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800adf8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800adfc:	2b20      	cmp	r3, #32
 800adfe:	d004      	beq.n	800ae0a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800ae00:	2702      	movs	r7, #2
}
 800ae02:	4638      	mov	r0, r7
 800ae04:	b007      	add	sp, #28
 800ae06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae0a:	4606      	mov	r6, r0
 800ae0c:	e005      	b.n	800ae1a <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae0e:	f7ff f9e3 	bl	800a1d8 <HAL_GetTick>
 800ae12:	1b80      	subs	r0, r0, r6
 800ae14:	2819      	cmp	r0, #25
 800ae16:	f200 80d2 	bhi.w	800afbe <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae1a:	f8d4 c000 	ldr.w	ip, [r4]
 800ae1e:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800ae22:	43c0      	mvns	r0, r0
 800ae24:	f010 0b02 	ands.w	fp, r0, #2
 800ae28:	d0f1      	beq.n	800ae0e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800ae2a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ae2e:	2b01      	cmp	r3, #1
 800ae30:	d0e6      	beq.n	800ae00 <HAL_I2C_Mem_Read+0x20>
 800ae32:	2301      	movs	r3, #1
 800ae34:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ae38:	f8dc 3000 	ldr.w	r3, [ip]
 800ae3c:	07d9      	lsls	r1, r3, #31
 800ae3e:	d537      	bpl.n	800aeb0 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ae40:	f8dc 0000 	ldr.w	r0, [ip]
 800ae44:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800ae48:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800ae4c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800ae4e:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ae50:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ae52:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ae56:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800ae5a:	2040      	movs	r0, #64	; 0x40
 800ae5c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ae60:	2000      	movs	r0, #0
 800ae62:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800ae64:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800ae68:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800ae6a:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ae6c:	4893      	ldr	r0, [pc, #588]	; (800b0bc <HAL_I2C_Mem_Read+0x2dc>)
 800ae6e:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ae70:	4639      	mov	r1, r7
 800ae72:	464b      	mov	r3, r9
 800ae74:	4642      	mov	r2, r8
 800ae76:	4620      	mov	r0, r4
 800ae78:	f7ff fca2 	bl	800a7c0 <I2C_RequestMemoryRead>
 800ae7c:	4607      	mov	r7, r0
 800ae7e:	2800      	cmp	r0, #0
 800ae80:	f040 80ab 	bne.w	800afda <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800ae84:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800ae86:	b9d2      	cbnz	r2, 800aebe <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae88:	6823      	ldr	r3, [r4, #0]
 800ae8a:	9002      	str	r0, [sp, #8]
 800ae8c:	695a      	ldr	r2, [r3, #20]
 800ae8e:	9202      	str	r2, [sp, #8]
 800ae90:	699a      	ldr	r2, [r3, #24]
 800ae92:	9202      	str	r2, [sp, #8]
 800ae94:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae96:	681a      	ldr	r2, [r3, #0]
 800ae98:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ae9c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae9e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800aea0:	2220      	movs	r2, #32
 800aea2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aea6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeaa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800aeae:	e7a8      	b.n	800ae02 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800aeb0:	f8dc 3000 	ldr.w	r3, [ip]
 800aeb4:	f043 0301 	orr.w	r3, r3, #1
 800aeb8:	f8cc 3000 	str.w	r3, [ip]
 800aebc:	e7c0      	b.n	800ae40 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800aebe:	2a01      	cmp	r2, #1
 800aec0:	f000 812c 	beq.w	800b11c <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800aec4:	2a02      	cmp	r2, #2
 800aec6:	f000 80bd 	beq.w	800b044 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aeca:	6823      	ldr	r3, [r4, #0]
 800aecc:	9005      	str	r0, [sp, #20]
 800aece:	6959      	ldr	r1, [r3, #20]
 800aed0:	9105      	str	r1, [sp, #20]
 800aed2:	6999      	ldr	r1, [r3, #24]
 800aed4:	9105      	str	r1, [sp, #20]
 800aed6:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800aed8:	2a03      	cmp	r2, #3
 800aeda:	d849      	bhi.n	800af70 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800aedc:	2a01      	cmp	r2, #1
 800aede:	f000 80eb 	beq.w	800b0b8 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800aee2:	2a02      	cmp	r2, #2
 800aee4:	f000 8089 	beq.w	800affa <HAL_I2C_Mem_Read+0x21a>
 800aee8:	1c69      	adds	r1, r5, #1
 800aeea:	f040 80bb 	bne.w	800b064 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aeee:	695a      	ldr	r2, [r3, #20]
 800aef0:	0752      	lsls	r2, r2, #29
 800aef2:	d5fc      	bpl.n	800aeee <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aef4:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aef6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aef8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aefc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aefe:	691b      	ldr	r3, [r3, #16]
 800af00:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800af02:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800af04:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800af06:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800af08:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800af0a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800af0c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800af0e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800af10:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800af12:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800af14:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800af16:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800af18:	6822      	ldr	r2, [r4, #0]
 800af1a:	f040 80af 	bne.w	800b07c <HAL_I2C_Mem_Read+0x29c>
 800af1e:	6953      	ldr	r3, [r2, #20]
 800af20:	075b      	lsls	r3, r3, #29
 800af22:	d5fc      	bpl.n	800af1e <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af24:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af26:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af28:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800af2c:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af2e:	6913      	ldr	r3, [r2, #16]
 800af30:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800af32:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800af34:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800af36:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af38:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800af3a:	3b01      	subs	r3, #1
 800af3c:	b29b      	uxth	r3, r3
 800af3e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af40:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800af42:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800af44:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800af48:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800af4a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af4e:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800af50:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800af52:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800af54:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800af56:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800af58:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800af5a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800af5c:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800af5e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800af60:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800af62:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800af64:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800af66:	2a00      	cmp	r2, #0
 800af68:	d099      	beq.n	800ae9e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800af6a:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af6c:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800af6e:	d9b5      	bls.n	800aedc <HAL_I2C_Mem_Read+0xfc>
 800af70:	b95d      	cbnz	r5, 800af8a <HAL_I2C_Mem_Read+0x1aa>
 800af72:	e0c5      	b.n	800b100 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800af74:	695a      	ldr	r2, [r3, #20]
 800af76:	06d0      	lsls	r0, r2, #27
 800af78:	f100 80b2 	bmi.w	800b0e0 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af7c:	f7ff f92c 	bl	800a1d8 <HAL_GetTick>
 800af80:	1b80      	subs	r0, r0, r6
 800af82:	4285      	cmp	r5, r0
 800af84:	f0c0 8086 	bcc.w	800b094 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af88:	6823      	ldr	r3, [r4, #0]
 800af8a:	695a      	ldr	r2, [r3, #20]
 800af8c:	0652      	lsls	r2, r2, #25
 800af8e:	d5f1      	bpl.n	800af74 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af90:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af92:	691b      	ldr	r3, [r3, #16]
 800af94:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800af96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800af98:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800af9a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800af9c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800af9e:	3b01      	subs	r3, #1
 800afa0:	b29b      	uxth	r3, r3
 800afa2:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800afa4:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800afa6:	3a01      	subs	r2, #1
 800afa8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800afaa:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800afae:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800afb0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800afb2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800afb6:	d5d6      	bpl.n	800af66 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afb8:	6903      	ldr	r3, [r0, #16]
 800afba:	704b      	strb	r3, [r1, #1]
 800afbc:	e036      	b.n	800b02c <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800afbe:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800afc0:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800afc4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800afc8:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800afcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800afce:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800afd2:	f043 0320 	orr.w	r3, r3, #32
 800afd6:	6423      	str	r3, [r4, #64]	; 0x40
 800afd8:	e712      	b.n	800ae00 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800afda:	2701      	movs	r7, #1
}
 800afdc:	4638      	mov	r0, r7
 800afde:	b007      	add	sp, #28
 800afe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800afe4:	695a      	ldr	r2, [r3, #20]
 800afe6:	0750      	lsls	r0, r2, #29
 800afe8:	d40c      	bmi.n	800b004 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800afea:	f7ff f8f5 	bl	800a1d8 <HAL_GetTick>
 800afee:	1b80      	subs	r0, r0, r6
 800aff0:	4285      	cmp	r5, r0
 800aff2:	d34f      	bcc.n	800b094 <HAL_I2C_Mem_Read+0x2b4>
 800aff4:	2d00      	cmp	r5, #0
 800aff6:	d04d      	beq.n	800b094 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aff8:	6823      	ldr	r3, [r4, #0]
 800affa:	1c69      	adds	r1, r5, #1
 800affc:	d1f2      	bne.n	800afe4 <HAL_I2C_Mem_Read+0x204>
 800affe:	695a      	ldr	r2, [r3, #20]
 800b000:	0752      	lsls	r2, r2, #29
 800b002:	d5fc      	bpl.n	800affe <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b004:	681a      	ldr	r2, [r3, #0]
 800b006:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b00a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b00c:	691a      	ldr	r2, [r3, #16]
 800b00e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b010:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800b012:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800b014:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800b016:	3b01      	subs	r3, #1
 800b018:	b29b      	uxth	r3, r3
 800b01a:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800b01c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b01e:	3b01      	subs	r3, #1
 800b020:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b022:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b024:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b026:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800b028:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b02a:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800b02c:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b02e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800b030:	3301      	adds	r3, #1
 800b032:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800b034:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800b036:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800b038:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800b03a:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800b03c:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800b03e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b040:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b042:	e790      	b.n	800af66 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b044:	6823      	ldr	r3, [r4, #0]
 800b046:	6819      	ldr	r1, [r3, #0]
 800b048:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b04c:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b04e:	6819      	ldr	r1, [r3, #0]
 800b050:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800b054:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b056:	9004      	str	r0, [sp, #16]
 800b058:	6959      	ldr	r1, [r3, #20]
 800b05a:	9104      	str	r1, [sp, #16]
 800b05c:	6999      	ldr	r1, [r3, #24]
 800b05e:	9104      	str	r1, [sp, #16]
 800b060:	9904      	ldr	r1, [sp, #16]
 800b062:	e739      	b.n	800aed8 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b064:	695a      	ldr	r2, [r3, #20]
 800b066:	0750      	lsls	r0, r2, #29
 800b068:	f53f af44 	bmi.w	800aef4 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b06c:	f7ff f8b4 	bl	800a1d8 <HAL_GetTick>
 800b070:	1b80      	subs	r0, r0, r6
 800b072:	4285      	cmp	r5, r0
 800b074:	d30e      	bcc.n	800b094 <HAL_I2C_Mem_Read+0x2b4>
 800b076:	b16d      	cbz	r5, 800b094 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b078:	6823      	ldr	r3, [r4, #0]
 800b07a:	e735      	b.n	800aee8 <HAL_I2C_Mem_Read+0x108>
 800b07c:	6953      	ldr	r3, [r2, #20]
 800b07e:	0758      	lsls	r0, r3, #29
 800b080:	f53f af50 	bmi.w	800af24 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b084:	f7ff f8a8 	bl	800a1d8 <HAL_GetTick>
 800b088:	1b80      	subs	r0, r0, r6
 800b08a:	4285      	cmp	r5, r0
 800b08c:	d302      	bcc.n	800b094 <HAL_I2C_Mem_Read+0x2b4>
 800b08e:	2d00      	cmp	r5, #0
 800b090:	f47f af41 	bne.w	800af16 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b094:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b096:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b098:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b09a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b09e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b0a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b0a4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800b0a8:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b0aa:	f043 0320 	orr.w	r3, r3, #32
}
 800b0ae:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b0b0:	6423      	str	r3, [r4, #64]	; 0x40
}
 800b0b2:	b007      	add	sp, #28
 800b0b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0b8:	b95d      	cbnz	r5, 800b0d2 <HAL_I2C_Mem_Read+0x2f2>
 800b0ba:	e02b      	b.n	800b114 <HAL_I2C_Mem_Read+0x334>
 800b0bc:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b0c0:	695a      	ldr	r2, [r3, #20]
 800b0c2:	06d2      	lsls	r2, r2, #27
 800b0c4:	d40c      	bmi.n	800b0e0 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b0c6:	f7ff f887 	bl	800a1d8 <HAL_GetTick>
 800b0ca:	1b80      	subs	r0, r0, r6
 800b0cc:	4285      	cmp	r5, r0
 800b0ce:	d3e1      	bcc.n	800b094 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b0d0:	6823      	ldr	r3, [r4, #0]
 800b0d2:	695a      	ldr	r2, [r3, #20]
 800b0d4:	0651      	lsls	r1, r2, #25
 800b0d6:	d5f3      	bpl.n	800b0c0 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0d8:	691a      	ldr	r2, [r3, #16]
 800b0da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b0dc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b0de:	e7a5      	b.n	800b02c <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b0e0:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b0e2:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800b0e6:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b0e8:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b0ea:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800b0ec:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b0f0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800b0f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b0f6:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800b0f8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800b0fc:	2701      	movs	r7, #1
 800b0fe:	e680      	b.n	800ae02 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b100:	695a      	ldr	r2, [r3, #20]
 800b102:	0652      	lsls	r2, r2, #25
 800b104:	f53f af44 	bmi.w	800af90 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b108:	695a      	ldr	r2, [r3, #20]
 800b10a:	06d1      	lsls	r1, r2, #27
 800b10c:	d4e8      	bmi.n	800b0e0 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b10e:	f7ff f863 	bl	800a1d8 <HAL_GetTick>
 800b112:	e7bf      	b.n	800b094 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b114:	695a      	ldr	r2, [r3, #20]
 800b116:	0650      	lsls	r0, r2, #25
 800b118:	d5f6      	bpl.n	800b108 <HAL_I2C_Mem_Read+0x328>
 800b11a:	e7dd      	b.n	800b0d8 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b11c:	6823      	ldr	r3, [r4, #0]
 800b11e:	6819      	ldr	r1, [r3, #0]
 800b120:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b124:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b126:	9003      	str	r0, [sp, #12]
 800b128:	6959      	ldr	r1, [r3, #20]
 800b12a:	9103      	str	r1, [sp, #12]
 800b12c:	6999      	ldr	r1, [r3, #24]
 800b12e:	9103      	str	r1, [sp, #12]
 800b130:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b132:	6819      	ldr	r1, [r3, #0]
 800b134:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b138:	6019      	str	r1, [r3, #0]
 800b13a:	e6cd      	b.n	800aed8 <HAL_I2C_Mem_Read+0xf8>

0800b13c <HAL_I2C_MasterTxCpltCallback>:
 800b13c:	4770      	bx	lr
 800b13e:	bf00      	nop

0800b140 <HAL_I2C_MasterRxCpltCallback>:
 800b140:	4770      	bx	lr
 800b142:	bf00      	nop

0800b144 <HAL_I2C_SlaveTxCpltCallback>:
 800b144:	4770      	bx	lr
 800b146:	bf00      	nop

0800b148 <HAL_I2C_SlaveRxCpltCallback>:
 800b148:	4770      	bx	lr
 800b14a:	bf00      	nop

0800b14c <HAL_I2C_AddrCallback>:
}
 800b14c:	4770      	bx	lr
 800b14e:	bf00      	nop

0800b150 <HAL_I2C_ListenCpltCallback>:
 800b150:	4770      	bx	lr
 800b152:	bf00      	nop

0800b154 <HAL_I2C_MemTxCpltCallback>:
 800b154:	4770      	bx	lr
 800b156:	bf00      	nop

0800b158 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b158:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800b15c:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800b15e:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800b160:	b959      	cbnz	r1, 800b17a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b162:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b164:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b166:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b168:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b16a:	d00d      	beq.n	800b188 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800b16c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800b170:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800b172:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b174:	3201      	adds	r2, #1
 800b176:	6502      	str	r2, [r0, #80]	; 0x50
 800b178:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800b17a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b17c:	2901      	cmp	r1, #1
 800b17e:	d009      	beq.n	800b194 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800b180:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b182:	2902      	cmp	r1, #2
 800b184:	d00e      	beq.n	800b1a4 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800b186:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b188:	b2d2      	uxtb	r2, r2
 800b18a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800b18c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b18e:	3202      	adds	r2, #2
 800b190:	6502      	str	r2, [r0, #80]	; 0x50
 800b192:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b194:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800b196:	6801      	ldr	r1, [r0, #0]
 800b198:	b2d2      	uxtb	r2, r2
 800b19a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800b19c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b19e:	3201      	adds	r2, #1
 800b1a0:	6502      	str	r2, [r0, #80]	; 0x50
 800b1a2:	4770      	bx	lr
 800b1a4:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800b1a6:	2a22      	cmp	r2, #34	; 0x22
 800b1a8:	d01f      	beq.n	800b1ea <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1aa:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b1ac:	b289      	uxth	r1, r1
 800b1ae:	b9c1      	cbnz	r1, 800b1e2 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1b0:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b1b2:	b289      	uxth	r1, r1
 800b1b4:	2900      	cmp	r1, #0
 800b1b6:	d1e6      	bne.n	800b186 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800b1b8:	2a21      	cmp	r2, #33	; 0x21
 800b1ba:	d1e4      	bne.n	800b186 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1bc:	6802      	ldr	r2, [r0, #0]
{
 800b1be:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1c0:	6854      	ldr	r4, [r2, #4]
 800b1c2:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800b1c6:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1c8:	6814      	ldr	r4, [r2, #0]
 800b1ca:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800b1ce:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800b1d0:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b1d2:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800b1d4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b1d8:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800b1dc:	f7ff ffba 	bl	800b154 <HAL_I2C_MemTxCpltCallback>
}
 800b1e0:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1e2:	2a21      	cmp	r2, #33	; 0x21
 800b1e4:	d00a      	beq.n	800b1fc <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1e6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800b1e8:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800b1ea:	6801      	ldr	r1, [r0, #0]
 800b1ec:	680a      	ldr	r2, [r1, #0]
 800b1ee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b1f2:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800b1f4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b1f6:	3201      	adds	r2, #1
 800b1f8:	6502      	str	r2, [r0, #80]	; 0x50
 800b1fa:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b1fc:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800b1fe:	6802      	ldr	r2, [r0, #0]
 800b200:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b204:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800b206:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b208:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800b20a:	3a01      	subs	r2, #1
 800b20c:	b292      	uxth	r2, r2
 800b20e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800b210:	4770      	bx	lr
 800b212:	bf00      	nop

0800b214 <HAL_I2C_MemRxCpltCallback>:
 800b214:	4770      	bx	lr
 800b216:	bf00      	nop

0800b218 <HAL_I2C_ErrorCallback>:
 800b218:	4770      	bx	lr
 800b21a:	bf00      	nop

0800b21c <HAL_I2C_AbortCpltCallback>:
 800b21c:	4770      	bx	lr
 800b21e:	bf00      	nop

0800b220 <I2C_DMAAbort>:
{
 800b220:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b222:	4b3a      	ldr	r3, [pc, #232]	; (800b30c <I2C_DMAAbort+0xec>)
 800b224:	4a3a      	ldr	r2, [pc, #232]	; (800b310 <I2C_DMAAbort+0xf0>)
 800b226:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800b228:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800b22a:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b22c:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800b22e:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b230:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800b234:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b236:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b238:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b23c:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b23e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800b242:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b246:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b248:	9301      	str	r3, [sp, #4]
 800b24a:	e005      	b.n	800b258 <I2C_DMAAbort+0x38>
    count--;
 800b24c:	9b01      	ldr	r3, [sp, #4]
 800b24e:	3b01      	subs	r3, #1
 800b250:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b252:	6813      	ldr	r3, [r2, #0]
 800b254:	059b      	lsls	r3, r3, #22
 800b256:	d506      	bpl.n	800b266 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800b258:	9b01      	ldr	r3, [sp, #4]
 800b25a:	2b00      	cmp	r3, #0
 800b25c:	d1f6      	bne.n	800b24c <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800b25e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b260:	f043 0320 	orr.w	r3, r3, #32
 800b264:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800b266:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800b268:	b34c      	cbz	r4, 800b2be <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800b26a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800b26c:	2500      	movs	r5, #0
 800b26e:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800b270:	b1f3      	cbz	r3, 800b2b0 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b272:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b274:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b276:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800b27a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800b27c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b27e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800b280:	2400      	movs	r4, #0
 800b282:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800b284:	6813      	ldr	r3, [r2, #0]
 800b286:	f023 0301 	bic.w	r3, r3, #1
 800b28a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b28c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b290:	2b60      	cmp	r3, #96	; 0x60
 800b292:	d02a      	beq.n	800b2ea <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b294:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800b298:	2928      	cmp	r1, #40	; 0x28
 800b29a:	d019      	beq.n	800b2d0 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800b29c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b29e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b2a0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2a4:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800b2a8:	f7ff ffb6 	bl	800b218 <HAL_I2C_ErrorCallback>
}
 800b2ac:	b002      	add	sp, #8
 800b2ae:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2b0:	6815      	ldr	r5, [r2, #0]
 800b2b2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b2b6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b2b8:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b2ba:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800b2bc:	e7e2      	b.n	800b284 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800b2be:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800b2c0:	b1f3      	cbz	r3, 800b300 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2c2:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b2c4:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2c6:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b2ca:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b2cc:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b2ce:	e7d7      	b.n	800b280 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800b2d0:	6813      	ldr	r3, [r2, #0]
 800b2d2:	f043 0301 	orr.w	r3, r3, #1
 800b2d6:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2d8:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b2da:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2dc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b2e0:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b2e2:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b2e4:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800b2e8:	e7de      	b.n	800b2a8 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b2ea:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800b2ec:	2220      	movs	r2, #32
 800b2ee:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b2f2:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b2f6:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800b2f8:	f7ff ff90 	bl	800b21c <HAL_I2C_AbortCpltCallback>
}
 800b2fc:	b002      	add	sp, #8
 800b2fe:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b300:	6814      	ldr	r4, [r2, #0]
 800b302:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800b306:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800b308:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b30a:	e7bb      	b.n	800b284 <I2C_DMAAbort+0x64>
 800b30c:	20000078 	.word	0x20000078
 800b310:	14f8b589 	.word	0x14f8b589

0800b314 <I2C_ITError>:
{
 800b314:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b316:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800b31a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b31e:	2b10      	cmp	r3, #16
{
 800b320:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b322:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b324:	d039      	beq.n	800b39a <I2C_ITError+0x86>
 800b326:	b2d9      	uxtb	r1, r3
 800b328:	2940      	cmp	r1, #64	; 0x40
 800b32a:	d036      	beq.n	800b39a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b32c:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800b330:	2928      	cmp	r1, #40	; 0x28
 800b332:	d03d      	beq.n	800b3b0 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b334:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b336:	6859      	ldr	r1, [r3, #4]
 800b338:	0508      	lsls	r0, r1, #20
 800b33a:	d407      	bmi.n	800b34c <I2C_ITError+0x38>
 800b33c:	2a60      	cmp	r2, #96	; 0x60
 800b33e:	d005      	beq.n	800b34c <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800b340:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b342:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b344:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b348:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800b34c:	2200      	movs	r2, #0
 800b34e:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b350:	685a      	ldr	r2, [r3, #4]
 800b352:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b356:	d134      	bne.n	800b3c2 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b358:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b35c:	2960      	cmp	r1, #96	; 0x60
 800b35e:	d075      	beq.n	800b44c <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b360:	695a      	ldr	r2, [r3, #20]
 800b362:	0650      	lsls	r0, r2, #25
 800b364:	d505      	bpl.n	800b372 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b366:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b368:	691b      	ldr	r3, [r3, #16]
 800b36a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b36c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b36e:	3301      	adds	r3, #1
 800b370:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800b372:	4620      	mov	r0, r4
 800b374:	f7ff ff50 	bl	800b218 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800b378:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800b37a:	0719      	lsls	r1, r3, #28
 800b37c:	d004      	beq.n	800b388 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b37e:	6822      	ldr	r2, [r4, #0]
 800b380:	6853      	ldr	r3, [r2, #4]
 800b382:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b386:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800b388:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b38c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b38e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800b390:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b392:	d501      	bpl.n	800b398 <I2C_ITError+0x84>
 800b394:	2b28      	cmp	r3, #40	; 0x28
 800b396:	d02f      	beq.n	800b3f8 <I2C_ITError+0xe4>
}
 800b398:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b39a:	2a22      	cmp	r2, #34	; 0x22
 800b39c:	d1c6      	bne.n	800b32c <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b39e:	6823      	ldr	r3, [r4, #0]
 800b3a0:	681a      	ldr	r2, [r3, #0]
 800b3a2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b3a6:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b3a8:	685a      	ldr	r2, [r3, #4]
 800b3aa:	0512      	lsls	r2, r2, #20
 800b3ac:	d5c8      	bpl.n	800b340 <I2C_ITError+0x2c>
 800b3ae:	e7cd      	b.n	800b34c <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b3b0:	2300      	movs	r3, #0
 800b3b2:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b3b4:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b3b6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b3ba:	685a      	ldr	r2, [r3, #4]
 800b3bc:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b3c0:	d0ca      	beq.n	800b358 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b3c2:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b3c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b3c6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b3ca:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b3cc:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b3d0:	2b01      	cmp	r3, #1
 800b3d2:	d01e      	beq.n	800b412 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b3d4:	4b28      	ldr	r3, [pc, #160]	; (800b478 <I2C_ITError+0x164>)
 800b3d6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b3d8:	f7fe ff88 	bl	800a2ec <HAL_DMA_Abort_IT>
 800b3dc:	2800      	cmp	r0, #0
 800b3de:	d0cb      	beq.n	800b378 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b3e0:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b3e2:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b3e4:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b3e6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b3e8:	f023 0301 	bic.w	r3, r3, #1
 800b3ec:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b3ee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b3f2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b3f4:	4798      	blx	r3
 800b3f6:	e7bf      	b.n	800b378 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b3f8:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b3fa:	4920      	ldr	r1, [pc, #128]	; (800b47c <I2C_ITError+0x168>)
 800b3fc:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b3fe:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b400:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b402:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b404:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b408:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b40c:	f7ff fea0 	bl	800b150 <HAL_I2C_ListenCpltCallback>
}
 800b410:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b412:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b414:	4b18      	ldr	r3, [pc, #96]	; (800b478 <I2C_ITError+0x164>)
 800b416:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b418:	f7fe ff68 	bl	800a2ec <HAL_DMA_Abort_IT>
 800b41c:	2800      	cmp	r0, #0
 800b41e:	d0ab      	beq.n	800b378 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b420:	6823      	ldr	r3, [r4, #0]
 800b422:	695a      	ldr	r2, [r3, #20]
 800b424:	0651      	lsls	r1, r2, #25
 800b426:	d506      	bpl.n	800b436 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b428:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b42a:	691b      	ldr	r3, [r3, #16]
 800b42c:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b42e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b430:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b432:	3201      	adds	r2, #1
 800b434:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b436:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b438:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b43a:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b43e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b440:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b442:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b446:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b448:	4798      	blx	r3
 800b44a:	e795      	b.n	800b378 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b44c:	2120      	movs	r1, #32
 800b44e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b452:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b454:	695a      	ldr	r2, [r3, #20]
 800b456:	0652      	lsls	r2, r2, #25
 800b458:	d506      	bpl.n	800b468 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b45a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b45c:	691b      	ldr	r3, [r3, #16]
 800b45e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b460:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b462:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b464:	3201      	adds	r2, #1
 800b466:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b468:	681a      	ldr	r2, [r3, #0]
 800b46a:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b46e:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b470:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b472:	f7ff fed3 	bl	800b21c <HAL_I2C_AbortCpltCallback>
 800b476:	e77f      	b.n	800b378 <I2C_ITError+0x64>
 800b478:	0800b221 	.word	0x0800b221
 800b47c:	ffff0000 	.word	0xffff0000

0800b480 <HAL_I2C_EV_IRQHandler>:
{
 800b480:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b482:	6803      	ldr	r3, [r0, #0]
{
 800b484:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b486:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b488:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b48a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b48e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b492:	2910      	cmp	r1, #16
{
 800b494:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b496:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b498:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b49c:	d022      	beq.n	800b4e4 <HAL_I2C_EV_IRQHandler+0x64>
 800b49e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b4a2:	d01f      	beq.n	800b4e4 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b4a4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b4a6:	2900      	cmp	r1, #0
 800b4a8:	f000 8094 	beq.w	800b5d4 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b4ac:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b4ae:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4b0:	f011 0602 	ands.w	r6, r1, #2
 800b4b4:	d059      	beq.n	800b56a <HAL_I2C_EV_IRQHandler+0xea>
 800b4b6:	0586      	lsls	r6, r0, #22
 800b4b8:	d559      	bpl.n	800b56e <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b4ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b4bc:	b102      	cbz	r2, 800b4c0 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b4be:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b4c0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b4c4:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b4c8:	2a28      	cmp	r2, #40	; 0x28
 800b4ca:	f000 821e 	beq.w	800b90a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4ce:	2200      	movs	r2, #0
 800b4d0:	920c      	str	r2, [sp, #48]	; 0x30
 800b4d2:	6959      	ldr	r1, [r3, #20]
 800b4d4:	910c      	str	r1, [sp, #48]	; 0x30
 800b4d6:	699b      	ldr	r3, [r3, #24]
 800b4d8:	930c      	str	r3, [sp, #48]	; 0x30
 800b4da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b4dc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b4e0:	b00e      	add	sp, #56	; 0x38
 800b4e2:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b4e4:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b4e6:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b4e8:	f011 0f01 	tst.w	r1, #1
 800b4ec:	d11a      	bne.n	800b524 <HAL_I2C_EV_IRQHandler+0xa4>
 800b4ee:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b4f2:	d0f5      	beq.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b4f4:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b4f8:	d0f2      	beq.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4fa:	070d      	lsls	r5, r1, #28
 800b4fc:	d56d      	bpl.n	800b5da <HAL_I2C_EV_IRQHandler+0x15a>
 800b4fe:	0585      	lsls	r5, r0, #22
 800b500:	f140 8083 	bpl.w	800b60a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b504:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b506:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b508:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b50a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b50c:	2900      	cmp	r1, #0
 800b50e:	f000 81e3 	beq.w	800b8d8 <HAL_I2C_EV_IRQHandler+0x458>
 800b512:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b514:	2a00      	cmp	r2, #0
 800b516:	f000 81df 	beq.w	800b8d8 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b51a:	685a      	ldr	r2, [r3, #4]
 800b51c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b520:	605a      	str	r2, [r3, #4]
 800b522:	e7dd      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b524:	0585      	lsls	r5, r0, #22
 800b526:	d56e      	bpl.n	800b606 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b528:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b52a:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b52e:	f000 81e9 	beq.w	800b904 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b532:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b534:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b538:	bf04      	itt	eq
 800b53a:	2208      	moveq	r2, #8
 800b53c:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b53e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b542:	2a40      	cmp	r2, #64	; 0x40
 800b544:	f000 81d7 	beq.w	800b8f6 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b548:	6922      	ldr	r2, [r4, #16]
 800b54a:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b54e:	f000 81b2 	beq.w	800b8b6 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b552:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b554:	2a00      	cmp	r2, #0
 800b556:	f040 81ef 	bne.w	800b938 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b55a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b55c:	11d2      	asrs	r2, r2, #7
 800b55e:	f002 0206 	and.w	r2, r2, #6
 800b562:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b566:	611a      	str	r2, [r3, #16]
 800b568:	e7ba      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b56a:	06cd      	lsls	r5, r1, #27
 800b56c:	d47c      	bmi.n	800b668 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b56e:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b572:	2a21      	cmp	r2, #33	; 0x21
 800b574:	f000 80f5 	beq.w	800b762 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b578:	064e      	lsls	r6, r1, #25
 800b57a:	f140 8132 	bpl.w	800b7e2 <HAL_I2C_EV_IRQHandler+0x362>
 800b57e:	0545      	lsls	r5, r0, #21
 800b580:	f140 812f 	bpl.w	800b7e2 <HAL_I2C_EV_IRQHandler+0x362>
 800b584:	0749      	lsls	r1, r1, #29
 800b586:	f100 812f 	bmi.w	800b7e8 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b58a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b58e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b590:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b592:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b594:	2a00      	cmp	r2, #0
 800b596:	d0a3      	beq.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b598:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b59a:	691b      	ldr	r3, [r3, #16]
 800b59c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b59e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b5a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b5a2:	3b01      	subs	r3, #1
 800b5a4:	b29b      	uxth	r3, r3
 800b5a6:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b5a8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b5aa:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b5ac:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b5ae:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b5b0:	2b00      	cmp	r3, #0
 800b5b2:	d195      	bne.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b5b4:	292a      	cmp	r1, #42	; 0x2a
 800b5b6:	d193      	bne.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5b8:	6822      	ldr	r2, [r4, #0]
 800b5ba:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b5bc:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b5be:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5c0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b5c4:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b5c6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b5c8:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b5ca:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b5ce:	f7ff fdbb 	bl	800b148 <HAL_I2C_SlaveRxCpltCallback>
 800b5d2:	e785      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b5d4:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b5d6:	6959      	ldr	r1, [r3, #20]
 800b5d8:	e76a      	b.n	800b4b0 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b5da:	078d      	lsls	r5, r1, #30
 800b5dc:	d515      	bpl.n	800b60a <HAL_I2C_EV_IRQHandler+0x18a>
 800b5de:	0585      	lsls	r5, r0, #22
 800b5e0:	d513      	bpl.n	800b60a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b5e2:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b5e6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b5e8:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b5ea:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b5ee:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b5f0:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b5f2:	f000 81b3 	beq.w	800b95c <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5f6:	2200      	movs	r2, #0
 800b5f8:	920a      	str	r2, [sp, #40]	; 0x28
 800b5fa:	695a      	ldr	r2, [r3, #20]
 800b5fc:	920a      	str	r2, [sp, #40]	; 0x28
 800b5fe:	699b      	ldr	r3, [r3, #24]
 800b600:	930a      	str	r3, [sp, #40]	; 0x28
 800b602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b604:	e76c      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b606:	070d      	lsls	r5, r1, #28
 800b608:	d5e7      	bpl.n	800b5da <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b60a:	0776      	lsls	r6, r6, #29
 800b60c:	f140 80f5 	bpl.w	800b7fa <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b610:	685d      	ldr	r5, [r3, #4]
 800b612:	052d      	lsls	r5, r5, #20
 800b614:	f53f af64 	bmi.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b618:	060e      	lsls	r6, r1, #24
 800b61a:	f140 8115 	bpl.w	800b848 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b61e:	0545      	lsls	r5, r0, #21
 800b620:	f140 8112 	bpl.w	800b848 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b624:	074e      	lsls	r6, r1, #29
 800b626:	f100 8112 	bmi.w	800b84e <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b62a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b62e:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b630:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b634:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b636:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b638:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b63a:	2800      	cmp	r0, #0
 800b63c:	f040 8235 	bne.w	800baaa <HAL_I2C_EV_IRQHandler+0x62a>
 800b640:	2a21      	cmp	r2, #33	; 0x21
 800b642:	f000 8347 	beq.w	800bcd4 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b646:	2940      	cmp	r1, #64	; 0x40
 800b648:	f47f af4a 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b64c:	2a22      	cmp	r2, #34	; 0x22
 800b64e:	f47f af47 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b652:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b654:	b292      	uxth	r2, r2
 800b656:	2a00      	cmp	r2, #0
 800b658:	f000 8268 	beq.w	800bb2c <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b65c:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b660:	2a40      	cmp	r2, #64	; 0x40
 800b662:	f040 80b4 	bne.w	800b7ce <HAL_I2C_EV_IRQHandler+0x34e>
 800b666:	e0fc      	b.n	800b862 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b668:	0585      	lsls	r5, r0, #22
 800b66a:	d580      	bpl.n	800b56e <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b66c:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b670:	685a      	ldr	r2, [r3, #4]
 800b672:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b676:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b678:	960d      	str	r6, [sp, #52]	; 0x34
 800b67a:	695a      	ldr	r2, [r3, #20]
 800b67c:	920d      	str	r2, [sp, #52]	; 0x34
 800b67e:	681a      	ldr	r2, [r3, #0]
 800b680:	f042 0201 	orr.w	r2, r2, #1
 800b684:	601a      	str	r2, [r3, #0]
 800b686:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b688:	681a      	ldr	r2, [r3, #0]
 800b68a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b68e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b690:	685a      	ldr	r2, [r3, #4]
 800b692:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b694:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b696:	d521      	bpl.n	800b6dc <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b698:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b69c:	2a22      	cmp	r2, #34	; 0x22
 800b69e:	f000 817a 	beq.w	800b996 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b6a2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b6a4:	6802      	ldr	r2, [r0, #0]
 800b6a6:	6852      	ldr	r2, [r2, #4]
 800b6a8:	b292      	uxth	r2, r2
 800b6aa:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b6ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6ae:	b292      	uxth	r2, r2
 800b6b0:	b11a      	cbz	r2, 800b6ba <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b6b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b6b4:	f042 0204 	orr.w	r2, r2, #4
 800b6b8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b6ba:	685a      	ldr	r2, [r3, #4]
 800b6bc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b6c0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b6c2:	f7fe fe25 	bl	800a310 <HAL_DMA_GetState>
 800b6c6:	2801      	cmp	r0, #1
 800b6c8:	d008      	beq.n	800b6dc <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b6ca:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b6cc:	4b99      	ldr	r3, [pc, #612]	; (800b934 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b6ce:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b6d0:	f7fe fe0c 	bl	800a2ec <HAL_DMA_Abort_IT>
 800b6d4:	b110      	cbz	r0, 800b6dc <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b6d6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b6d8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b6da:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b6dc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b6de:	b29b      	uxth	r3, r3
 800b6e0:	b313      	cbz	r3, 800b728 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b6e2:	6823      	ldr	r3, [r4, #0]
 800b6e4:	695a      	ldr	r2, [r3, #20]
 800b6e6:	0752      	lsls	r2, r2, #29
 800b6e8:	d50a      	bpl.n	800b700 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6ec:	691b      	ldr	r3, [r3, #16]
 800b6ee:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b6f0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b6f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b6f4:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b6f6:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b6f8:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b6fa:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b6fc:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b6fe:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b700:	695a      	ldr	r2, [r3, #20]
 800b702:	0656      	lsls	r6, r2, #25
 800b704:	d509      	bpl.n	800b71a <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b706:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b708:	691b      	ldr	r3, [r3, #16]
 800b70a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b70c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b70e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b710:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b712:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b714:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b716:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b718:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b71a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b71c:	b29b      	uxth	r3, r3
 800b71e:	b11b      	cbz	r3, 800b728 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b720:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b722:	f043 0304 	orr.w	r3, r3, #4
 800b726:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b728:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b72a:	2b00      	cmp	r3, #0
 800b72c:	f040 80dd 	bne.w	800b8ea <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b730:	2d2a      	cmp	r5, #42	; 0x2a
 800b732:	f000 8151 	beq.w	800b9d8 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b736:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b73a:	2b28      	cmp	r3, #40	; 0x28
 800b73c:	f000 8154 	beq.w	800b9e8 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b740:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b742:	2b22      	cmp	r3, #34	; 0x22
 800b744:	d002      	beq.n	800b74c <HAL_I2C_EV_IRQHandler+0x2cc>
 800b746:	2d22      	cmp	r5, #34	; 0x22
 800b748:	f47f aeca 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b74c:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b74e:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b750:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b752:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b754:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b758:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b75c:	f7ff fcf4 	bl	800b148 <HAL_I2C_SlaveRxCpltCallback>
 800b760:	e6be      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b762:	060d      	lsls	r5, r1, #24
 800b764:	d528      	bpl.n	800b7b8 <HAL_I2C_EV_IRQHandler+0x338>
 800b766:	0546      	lsls	r6, r0, #21
 800b768:	d526      	bpl.n	800b7b8 <HAL_I2C_EV_IRQHandler+0x338>
 800b76a:	074d      	lsls	r5, r1, #29
 800b76c:	d427      	bmi.n	800b7be <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b76e:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b772:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b774:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b776:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b778:	2900      	cmp	r1, #0
 800b77a:	f43f aeb1 	beq.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b77e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b780:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b784:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b786:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b788:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b78a:	3901      	subs	r1, #1
 800b78c:	b289      	uxth	r1, r1
 800b78e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b790:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b792:	b289      	uxth	r1, r1
 800b794:	2900      	cmp	r1, #0
 800b796:	f47f aea3 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b79a:	2829      	cmp	r0, #41	; 0x29
 800b79c:	f47f aea0 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b7a0:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b7a2:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b7a4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b7a8:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b7aa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b7ac:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b7ae:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b7b2:	f7ff fcc7 	bl	800b144 <HAL_I2C_SlaveTxCpltCallback>
 800b7b6:	e693      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b7b8:	0749      	lsls	r1, r1, #29
 800b7ba:	f57f ae91 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b7be:	0582      	lsls	r2, r0, #22
 800b7c0:	f57f ae8e 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b7c4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7c6:	b292      	uxth	r2, r2
 800b7c8:	2a00      	cmp	r2, #0
 800b7ca:	f43f ae89 	beq.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b7ce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b7d0:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b7d4:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b7d6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b7d8:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b7da:	3b01      	subs	r3, #1
 800b7dc:	b29b      	uxth	r3, r3
 800b7de:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b7e0:	e67e      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b7e2:	074a      	lsls	r2, r1, #29
 800b7e4:	f57f ae7c 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b7e8:	0586      	lsls	r6, r0, #22
 800b7ea:	f57f ae79 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b7ee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7f0:	b292      	uxth	r2, r2
 800b7f2:	2a00      	cmp	r2, #0
 800b7f4:	f43f ae74 	beq.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b7f8:	e01b      	b.n	800b832 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b7fa:	685a      	ldr	r2, [r3, #4]
 800b7fc:	0512      	lsls	r2, r2, #20
 800b7fe:	f53f ae6f 	bmi.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b802:	064e      	lsls	r6, r1, #25
 800b804:	d433      	bmi.n	800b86e <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b806:	0749      	lsls	r1, r1, #29
 800b808:	f57f ae6a 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b80c:	0582      	lsls	r2, r0, #22
 800b80e:	f57f ae67 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b812:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b814:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b816:	b292      	uxth	r2, r2
 800b818:	2a04      	cmp	r2, #4
 800b81a:	f000 8113 	beq.w	800ba44 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b81e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b820:	b292      	uxth	r2, r2
 800b822:	2a03      	cmp	r2, #3
 800b824:	f000 8153 	beq.w	800bace <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b828:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b82a:	b292      	uxth	r2, r2
 800b82c:	2a02      	cmp	r2, #2
 800b82e:	f000 8182 	beq.w	800bb36 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b832:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b834:	691b      	ldr	r3, [r3, #16]
 800b836:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b838:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b83a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b83c:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b83e:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b840:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b842:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b844:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b846:	e64b      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b848:	074d      	lsls	r5, r1, #29
 800b84a:	f57f ae49 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b84e:	0581      	lsls	r1, r0, #22
 800b850:	f57f ae46 	bpl.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b854:	2a21      	cmp	r2, #33	; 0x21
 800b856:	f000 80fd 	beq.w	800ba54 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b85a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b85e:	f47f ae3f 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b862:	4620      	mov	r0, r4
}
 800b864:	b00e      	add	sp, #56	; 0x38
 800b866:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b86a:	f7ff bc75 	b.w	800b158 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b86e:	0545      	lsls	r5, r0, #21
 800b870:	d5c9      	bpl.n	800b806 <HAL_I2C_EV_IRQHandler+0x386>
 800b872:	f011 0104 	ands.w	r1, r1, #4
 800b876:	d1c9      	bne.n	800b80c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b878:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b87c:	2a22      	cmp	r2, #34	; 0x22
 800b87e:	f47f ae2f 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b882:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b884:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b886:	2a03      	cmp	r2, #3
 800b888:	f240 81ec 	bls.w	800bc64 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b88c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b88e:	691b      	ldr	r3, [r3, #16]
 800b890:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b892:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b894:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b896:	3b01      	subs	r3, #1
 800b898:	b29b      	uxth	r3, r3
 800b89a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b89c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b89e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b8a0:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b8a2:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b8a4:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b8a6:	f47f ae1b 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b8aa:	6822      	ldr	r2, [r4, #0]
 800b8ac:	6853      	ldr	r3, [r2, #4]
 800b8ae:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b8b2:	6053      	str	r3, [r2, #4]
 800b8b4:	e614      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b8b6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b8ba:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b8bc:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b8be:	bf16      	itet	ne
 800b8c0:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b8c4:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b8c8:	b2d2      	uxtbne	r2, r2
 800b8ca:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b8cc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b8ce:	b11a      	cbz	r2, 800b8d8 <HAL_I2C_EV_IRQHandler+0x458>
 800b8d0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b8d2:	2a00      	cmp	r2, #0
 800b8d4:	f47f ae21 	bne.w	800b51a <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b8d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b8da:	2a00      	cmp	r2, #0
 800b8dc:	f43f ae00 	beq.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b8e0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b8e2:	2a00      	cmp	r2, #0
 800b8e4:	f47f ae19 	bne.w	800b51a <HAL_I2C_EV_IRQHandler+0x9a>
 800b8e8:	e5fa      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b8ea:	4620      	mov	r0, r4
}
 800b8ec:	b00e      	add	sp, #56	; 0x38
 800b8ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b8f2:	f7ff bd0f 	b.w	800b314 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b8f6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b8f8:	bb52      	cbnz	r2, 800b950 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b8fa:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b8fc:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b900:	611a      	str	r2, [r3, #16]
 800b902:	e5ed      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b904:	2201      	movs	r2, #1
 800b906:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b908:	e619      	b.n	800b53e <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b90a:	685a      	ldr	r2, [r3, #4]
 800b90c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b910:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b912:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b914:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b918:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b91c:	bf54      	ite	pl
 800b91e:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b920:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b922:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b926:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b92a:	4620      	mov	r0, r4
 800b92c:	f7ff fc0e 	bl	800b14c <HAL_I2C_AddrCallback>
 800b930:	e5d6      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800b932:	bf00      	nop
 800b934:	0800b221 	.word	0x0800b221
      else if (hi2c->EventCount == 1U)
 800b938:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b93a:	2a01      	cmp	r2, #1
 800b93c:	f47f add0 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b940:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b942:	11d2      	asrs	r2, r2, #7
 800b944:	f002 0206 	and.w	r2, r2, #6
 800b948:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b94c:	611a      	str	r2, [r3, #16]
 800b94e:	e5c7      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b950:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b952:	f042 0201 	orr.w	r2, r2, #1
 800b956:	b2d2      	uxtb	r2, r2
 800b958:	611a      	str	r2, [r3, #16]
 800b95a:	e5c1      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b95c:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b95e:	b911      	cbnz	r1, 800b966 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b960:	2a40      	cmp	r2, #64	; 0x40
 800b962:	f000 809b 	beq.w	800ba9c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b966:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b968:	b922      	cbnz	r2, 800b974 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b96a:	6921      	ldr	r1, [r4, #16]
 800b96c:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b970:	f000 809f 	beq.w	800bab2 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b974:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b976:	b292      	uxth	r2, r2
 800b978:	2a00      	cmp	r2, #0
 800b97a:	d142      	bne.n	800ba02 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b97c:	9203      	str	r2, [sp, #12]
 800b97e:	695a      	ldr	r2, [r3, #20]
 800b980:	9203      	str	r2, [sp, #12]
 800b982:	699a      	ldr	r2, [r3, #24]
 800b984:	9203      	str	r2, [sp, #12]
 800b986:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b988:	681a      	ldr	r2, [r3, #0]
 800b98a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b98e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b990:	2300      	movs	r3, #0
 800b992:	6523      	str	r3, [r4, #80]	; 0x50
 800b994:	e5a4      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b996:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b998:	6802      	ldr	r2, [r0, #0]
 800b99a:	6852      	ldr	r2, [r2, #4]
 800b99c:	b292      	uxth	r2, r2
 800b99e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b9a0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b9a2:	b292      	uxth	r2, r2
 800b9a4:	b11a      	cbz	r2, 800b9ae <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b9a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b9a8:	f042 0204 	orr.w	r2, r2, #4
 800b9ac:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b9ae:	685a      	ldr	r2, [r3, #4]
 800b9b0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b9b4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b9b6:	f7fe fcab 	bl	800a310 <HAL_DMA_GetState>
 800b9ba:	2801      	cmp	r0, #1
 800b9bc:	f43f ae8e 	beq.w	800b6dc <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b9c0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b9c2:	4b98      	ldr	r3, [pc, #608]	; (800bc24 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b9c4:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b9c6:	f7fe fc91 	bl	800a2ec <HAL_DMA_Abort_IT>
 800b9ca:	2800      	cmp	r0, #0
 800b9cc:	f43f ae86 	beq.w	800b6dc <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b9d0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b9d2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b9d4:	4798      	blx	r3
 800b9d6:	e681      	b.n	800b6dc <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b9d8:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b9da:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b9dc:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b9de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b9e2:	f7ff fbb1 	bl	800b148 <HAL_I2C_SlaveRxCpltCallback>
 800b9e6:	e6a6      	b.n	800b736 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b9e8:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b9ea:	498f      	ldr	r1, [pc, #572]	; (800bc28 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b9ec:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b9ee:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b9f0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b9f2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b9f4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b9f8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b9fc:	f7ff fba8 	bl	800b150 <HAL_I2C_ListenCpltCallback>
 800ba00:	e56e      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800ba02:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ba04:	b292      	uxth	r2, r2
 800ba06:	2a01      	cmp	r2, #1
 800ba08:	d070      	beq.n	800baec <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800ba0a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ba0c:	b292      	uxth	r2, r2
 800ba0e:	2a02      	cmp	r2, #2
 800ba10:	f000 80d6 	beq.w	800bbc0 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba14:	681a      	ldr	r2, [r3, #0]
 800ba16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ba1a:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ba1c:	685a      	ldr	r2, [r3, #4]
 800ba1e:	0511      	lsls	r1, r2, #20
 800ba20:	d508      	bpl.n	800ba34 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ba22:	2820      	cmp	r0, #32
 800ba24:	f200 80f8 	bhi.w	800bc18 <HAL_I2C_EV_IRQHandler+0x798>
 800ba28:	2807      	cmp	r0, #7
 800ba2a:	f200 80ea 	bhi.w	800bc02 <HAL_I2C_EV_IRQHandler+0x782>
 800ba2e:	2801      	cmp	r0, #1
 800ba30:	f000 80ed 	beq.w	800bc0e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba34:	2200      	movs	r2, #0
 800ba36:	9209      	str	r2, [sp, #36]	; 0x24
 800ba38:	695a      	ldr	r2, [r3, #20]
 800ba3a:	9209      	str	r2, [sp, #36]	; 0x24
 800ba3c:	699b      	ldr	r3, [r3, #24]
 800ba3e:	9309      	str	r3, [sp, #36]	; 0x24
 800ba40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ba42:	e7a5      	b.n	800b990 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ba44:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba46:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ba48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba4c:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba4e:	691b      	ldr	r3, [r3, #16]
 800ba50:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ba52:	e6f1      	b.n	800b838 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ba54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ba56:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ba5a:	2a21      	cmp	r2, #33	; 0x21
 800ba5c:	f47f ad40 	bne.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800ba60:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ba62:	b292      	uxth	r2, r2
 800ba64:	2a00      	cmp	r2, #0
 800ba66:	f47f aeb2 	bne.w	800b7ce <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ba6a:	2908      	cmp	r1, #8
 800ba6c:	f000 80e2 	beq.w	800bc34 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ba70:	2920      	cmp	r1, #32
 800ba72:	f000 80df 	beq.w	800bc34 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ba76:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ba7a:	f000 80db 	beq.w	800bc34 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba7e:	6859      	ldr	r1, [r3, #4]
 800ba80:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ba84:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ba86:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ba88:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ba8a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba8c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ba90:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ba92:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ba96:	f7ff fb51 	bl	800b13c <HAL_I2C_MasterTxCpltCallback>
 800ba9a:	e521      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba9c:	9101      	str	r1, [sp, #4]
 800ba9e:	695a      	ldr	r2, [r3, #20]
 800baa0:	9201      	str	r2, [sp, #4]
 800baa2:	699b      	ldr	r3, [r3, #24]
 800baa4:	9301      	str	r3, [sp, #4]
 800baa6:	9b01      	ldr	r3, [sp, #4]
 800baa8:	e51a      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800baaa:	2a21      	cmp	r2, #33	; 0x21
 800baac:	f43f add1 	beq.w	800b652 <HAL_I2C_EV_IRQHandler+0x1d2>
 800bab0:	e5c9      	b.n	800b646 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bab2:	9202      	str	r2, [sp, #8]
 800bab4:	695a      	ldr	r2, [r3, #20]
 800bab6:	9202      	str	r2, [sp, #8]
 800bab8:	699a      	ldr	r2, [r3, #24]
 800baba:	9202      	str	r2, [sp, #8]
 800babc:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800babe:	681a      	ldr	r2, [r3, #0]
 800bac0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bac4:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800bac6:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800bac8:	3301      	adds	r3, #1
 800baca:	6523      	str	r3, [r4, #80]	; 0x50
 800bacc:	e508      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800bace:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800bad0:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800bad2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bad6:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800bad8:	f43f aeab 	beq.w	800b832 <HAL_I2C_EV_IRQHandler+0x3b2>
 800badc:	2902      	cmp	r1, #2
 800bade:	f43f aea8 	beq.w	800b832 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bae2:	681a      	ldr	r2, [r3, #0]
 800bae4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bae8:	601a      	str	r2, [r3, #0]
 800baea:	e6a2      	b.n	800b832 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800baec:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800baf0:	f000 811b 	beq.w	800bd2a <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800baf4:	2808      	cmp	r0, #8
 800baf6:	f000 8108 	beq.w	800bd0a <HAL_I2C_EV_IRQHandler+0x88a>
 800bafa:	2820      	cmp	r0, #32
 800bafc:	f000 8105 	beq.w	800bd0a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800bb00:	2d12      	cmp	r5, #18
 800bb02:	f000 80ff 	beq.w	800bd04 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800bb06:	2810      	cmp	r0, #16
 800bb08:	d804      	bhi.n	800bb14 <HAL_I2C_EV_IRQHandler+0x694>
 800bb0a:	4a48      	ldr	r2, [pc, #288]	; (800bc2c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800bb0c:	40c2      	lsrs	r2, r0
 800bb0e:	07d1      	lsls	r1, r2, #31
 800bb10:	f100 814c 	bmi.w	800bdac <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb14:	681a      	ldr	r2, [r3, #0]
 800bb16:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb1a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb1c:	2200      	movs	r2, #0
 800bb1e:	9206      	str	r2, [sp, #24]
 800bb20:	695a      	ldr	r2, [r3, #20]
 800bb22:	9206      	str	r2, [sp, #24]
 800bb24:	699b      	ldr	r3, [r3, #24]
 800bb26:	9306      	str	r3, [sp, #24]
 800bb28:	9b06      	ldr	r3, [sp, #24]
 800bb2a:	e731      	b.n	800b990 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800bb2c:	685a      	ldr	r2, [r3, #4]
 800bb2e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb32:	605a      	str	r2, [r3, #4]
 800bb34:	e4d4      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800bb36:	3901      	subs	r1, #1
 800bb38:	290f      	cmp	r1, #15
 800bb3a:	d809      	bhi.n	800bb50 <HAL_I2C_EV_IRQHandler+0x6d0>
 800bb3c:	e8df f001 	tbb	[pc, r1]
 800bb40:	3608363b 	.word	0x3608363b
 800bb44:	08080808 	.word	0x08080808
 800bb48:	08080808 	.word	0x08080808
 800bb4c:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb50:	681a      	ldr	r2, [r3, #0]
 800bb52:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bb56:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb58:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bb5a:	691b      	ldr	r3, [r3, #16]
 800bb5c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800bb5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800bb60:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb62:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800bb64:	3b01      	subs	r3, #1
 800bb66:	b29b      	uxth	r3, r3
 800bb68:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb6a:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800bb6c:	1c51      	adds	r1, r2, #1
 800bb6e:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb70:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800bb72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800bb74:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800bb76:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800bb78:	3b01      	subs	r3, #1
 800bb7a:	b29b      	uxth	r3, r3
 800bb7c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800bb7e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800bb80:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800bb82:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800bb86:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800bb88:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800bb8a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800bb8c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb90:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800bb94:	2b40      	cmp	r3, #64	; 0x40
 800bb96:	f000 80f5 	beq.w	800bd84 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb9a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800bb9c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb9e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800bba2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800bba4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800bba6:	f7ff facb 	bl	800b140 <HAL_I2C_MasterRxCpltCallback>
 800bbaa:	e499      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bbac:	681a      	ldr	r2, [r3, #0]
 800bbae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bbb2:	601a      	str	r2, [r3, #0]
 800bbb4:	e7d0      	b.n	800bb58 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bbb6:	681a      	ldr	r2, [r3, #0]
 800bbb8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bbbc:	601a      	str	r2, [r3, #0]
 800bbbe:	e7cb      	b.n	800bb58 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800bbc0:	2810      	cmp	r0, #16
 800bbc2:	d804      	bhi.n	800bbce <HAL_I2C_EV_IRQHandler+0x74e>
 800bbc4:	4a19      	ldr	r2, [pc, #100]	; (800bc2c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800bbc6:	40c2      	lsrs	r2, r0
 800bbc8:	07d2      	lsls	r2, r2, #31
 800bbca:	f100 80c2 	bmi.w	800bd52 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bbce:	681a      	ldr	r2, [r3, #0]
 800bbd0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bbd4:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800bbd6:	681a      	ldr	r2, [r3, #0]
 800bbd8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bbdc:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bbde:	685a      	ldr	r2, [r3, #4]
 800bbe0:	0516      	lsls	r6, r2, #20
 800bbe2:	d506      	bpl.n	800bbf2 <HAL_I2C_EV_IRQHandler+0x772>
 800bbe4:	2820      	cmp	r0, #32
 800bbe6:	f240 80bc 	bls.w	800bd62 <HAL_I2C_EV_IRQHandler+0x8e2>
 800bbea:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800bbee:	f000 80bd 	beq.w	800bd6c <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bbf2:	2200      	movs	r2, #0
 800bbf4:	9208      	str	r2, [sp, #32]
 800bbf6:	695a      	ldr	r2, [r3, #20]
 800bbf8:	9208      	str	r2, [sp, #32]
 800bbfa:	699b      	ldr	r3, [r3, #24]
 800bbfc:	9308      	str	r3, [sp, #32]
 800bbfe:	9b08      	ldr	r3, [sp, #32]
 800bc00:	e6c6      	b.n	800b990 <HAL_I2C_EV_IRQHandler+0x510>
 800bc02:	4a0b      	ldr	r2, [pc, #44]	; (800bc30 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800bc04:	3808      	subs	r0, #8
 800bc06:	40c2      	lsrs	r2, r0
 800bc08:	07d2      	lsls	r2, r2, #31
 800bc0a:	f57f af13 	bpl.w	800ba34 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bc0e:	685a      	ldr	r2, [r3, #4]
 800bc10:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bc14:	605a      	str	r2, [r3, #4]
 800bc16:	e70d      	b.n	800ba34 <HAL_I2C_EV_IRQHandler+0x5b4>
 800bc18:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800bc1c:	f47f af0a 	bne.w	800ba34 <HAL_I2C_EV_IRQHandler+0x5b4>
 800bc20:	e7f5      	b.n	800bc0e <HAL_I2C_EV_IRQHandler+0x78e>
 800bc22:	bf00      	nop
 800bc24:	0800b221 	.word	0x0800b221
 800bc28:	ffff0000 	.word	0xffff0000
 800bc2c:	00010014 	.word	0x00010014
 800bc30:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bc34:	6859      	ldr	r1, [r3, #4]
 800bc36:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bc3a:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bc3c:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800bc3e:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800bc40:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bc42:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800bc46:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800bc48:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800bc4a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bc4e:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bc52:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bc56:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bc58:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bc5a:	f47f af1c 	bne.w	800ba96 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bc5e:	f7ff fa79 	bl	800b154 <HAL_I2C_MemTxCpltCallback>
 800bc62:	e43d      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800bc64:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800bc66:	2802      	cmp	r0, #2
 800bc68:	f43f af60 	beq.w	800bb2c <HAL_I2C_EV_IRQHandler+0x6ac>
 800bc6c:	2a01      	cmp	r2, #1
 800bc6e:	f63f af5d 	bhi.w	800bb2c <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bc72:	4a62      	ldr	r2, [pc, #392]	; (800bdfc <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800bc74:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bc76:	6812      	ldr	r2, [r2, #0]
 800bc78:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800bc7c:	fbb2 f2f0 	udiv	r2, r2, r0
 800bc80:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800bc84:	920b      	str	r2, [sp, #44]	; 0x2c
 800bc86:	e004      	b.n	800bc92 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800bc88:	681a      	ldr	r2, [r3, #0]
 800bc8a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800bc8e:	f000 8092 	beq.w	800bdb6 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800bc92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc94:	3a01      	subs	r2, #1
 800bc96:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800bc98:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bc9a:	2900      	cmp	r1, #0
 800bc9c:	d1f4      	bne.n	800bc88 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bca0:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bca2:	f042 0220 	orr.w	r2, r2, #32
 800bca6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bca8:	685a      	ldr	r2, [r3, #4]
 800bcaa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bcae:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bcb0:	691b      	ldr	r3, [r3, #16]
 800bcb2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bcb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bcb6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800bcb8:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800bcba:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800bcbc:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800bcbe:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800bcc0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bcc2:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800bcc4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800bcc8:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800bcca:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800bcce:	f7ff faa3 	bl	800b218 <HAL_I2C_ErrorCallback>
 800bcd2:	e405      	b.n	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800bcd4:	2d08      	cmp	r5, #8
 800bcd6:	d0ad      	beq.n	800bc34 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bcd8:	2d20      	cmp	r5, #32
 800bcda:	d0ab      	beq.n	800bc34 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bcdc:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800bce0:	d0a8      	beq.n	800bc34 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bce2:	685a      	ldr	r2, [r3, #4]
 800bce4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bce8:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bcea:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bcec:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bcee:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bcf0:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bcf2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bcf6:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800bcf8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bcfc:	f7ff fa1e 	bl	800b13c <HAL_I2C_MasterTxCpltCallback>
 800bd00:	f7ff bbee 	b.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800bd04:	2801      	cmp	r0, #1
 800bd06:	f43f af05 	beq.w	800bb14 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd0a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd0c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd0e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bd12:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd14:	9107      	str	r1, [sp, #28]
 800bd16:	695a      	ldr	r2, [r3, #20]
 800bd18:	9207      	str	r2, [sp, #28]
 800bd1a:	699a      	ldr	r2, [r3, #24]
 800bd1c:	9207      	str	r2, [sp, #28]
 800bd1e:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd20:	681a      	ldr	r2, [r3, #0]
 800bd22:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bd26:	601a      	str	r2, [r3, #0]
 800bd28:	e632      	b.n	800b990 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd2a:	681a      	ldr	r2, [r3, #0]
 800bd2c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bd30:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bd32:	685a      	ldr	r2, [r3, #4]
 800bd34:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bd38:	d02d      	beq.n	800bd96 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd3a:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd3c:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd3e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bd42:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd44:	9104      	str	r1, [sp, #16]
 800bd46:	695a      	ldr	r2, [r3, #20]
 800bd48:	9204      	str	r2, [sp, #16]
 800bd4a:	699b      	ldr	r3, [r3, #24]
 800bd4c:	9304      	str	r3, [sp, #16]
 800bd4e:	9b04      	ldr	r3, [sp, #16]
 800bd50:	e61e      	b.n	800b990 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd52:	681a      	ldr	r2, [r3, #0]
 800bd54:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bd58:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bd5a:	685a      	ldr	r2, [r3, #4]
 800bd5c:	0515      	lsls	r5, r2, #20
 800bd5e:	f57f af48 	bpl.w	800bbf2 <HAL_I2C_EV_IRQHandler+0x772>
 800bd62:	2807      	cmp	r0, #7
 800bd64:	d807      	bhi.n	800bd76 <HAL_I2C_EV_IRQHandler+0x8f6>
 800bd66:	2801      	cmp	r0, #1
 800bd68:	f47f af43 	bne.w	800bbf2 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bd6c:	685a      	ldr	r2, [r3, #4]
 800bd6e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bd72:	605a      	str	r2, [r3, #4]
 800bd74:	e73d      	b.n	800bbf2 <HAL_I2C_EV_IRQHandler+0x772>
 800bd76:	4a22      	ldr	r2, [pc, #136]	; (800be00 <HAL_I2C_EV_IRQHandler+0x980>)
 800bd78:	3808      	subs	r0, #8
 800bd7a:	40c2      	lsrs	r2, r0
 800bd7c:	07d0      	lsls	r0, r2, #31
 800bd7e:	f57f af38 	bpl.w	800bbf2 <HAL_I2C_EV_IRQHandler+0x772>
 800bd82:	e7f3      	b.n	800bd6c <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bd84:	2300      	movs	r3, #0
 800bd86:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bd8a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800bd8c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bd8e:	f7ff fa41 	bl	800b214 <HAL_I2C_MemRxCpltCallback>
 800bd92:	f7ff bba5 	b.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd96:	9205      	str	r2, [sp, #20]
 800bd98:	695a      	ldr	r2, [r3, #20]
 800bd9a:	9205      	str	r2, [sp, #20]
 800bd9c:	699a      	ldr	r2, [r3, #24]
 800bd9e:	9205      	str	r2, [sp, #20]
 800bda0:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bda2:	681a      	ldr	r2, [r3, #0]
 800bda4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bda8:	601a      	str	r2, [r3, #0]
 800bdaa:	e5f1      	b.n	800b990 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bdac:	681a      	ldr	r2, [r3, #0]
 800bdae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bdb2:	601a      	str	r2, [r3, #0]
 800bdb4:	e6b2      	b.n	800bb1c <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bdb6:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bdb8:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bdba:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800bdbe:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bdc0:	6859      	ldr	r1, [r3, #4]
 800bdc2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bdc6:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bdc8:	691b      	ldr	r3, [r3, #16]
 800bdca:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bdcc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bdce:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bdd0:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800bdd2:	b29b      	uxth	r3, r3
 800bdd4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800bdd6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800bdda:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bddc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800bde0:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bde2:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800bde4:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bde6:	f47f aed9 	bne.w	800bb9c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bdea:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bdee:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800bdf0:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bdf2:	f7ff fa0f 	bl	800b214 <HAL_I2C_MemRxCpltCallback>
 800bdf6:	f7ff bb73 	b.w	800b4e0 <HAL_I2C_EV_IRQHandler+0x60>
 800bdfa:	bf00      	nop
 800bdfc:	20000078 	.word	0x20000078
 800be00:	01000101 	.word	0x01000101

0800be04 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800be04:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800be08:	2a20      	cmp	r2, #32
{
 800be0a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800be0c:	fa5f fc82 	uxtb.w	ip, r2
 800be10:	d001      	beq.n	800be16 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800be12:	2002      	movs	r0, #2
  }
}
 800be14:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800be16:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800be18:	2024      	movs	r0, #36	; 0x24
 800be1a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800be1e:	6810      	ldr	r0, [r2, #0]
 800be20:	f020 0001 	bic.w	r0, r0, #1
 800be24:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800be26:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800be28:	f020 0010 	bic.w	r0, r0, #16
 800be2c:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800be2e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800be30:	4301      	orrs	r1, r0
 800be32:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800be34:	6811      	ldr	r1, [r2, #0]
 800be36:	f041 0101 	orr.w	r1, r1, #1
 800be3a:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800be3c:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800be3e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800be42:	4770      	bx	lr

0800be44 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800be44:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800be48:	2a20      	cmp	r2, #32
 800be4a:	d001      	beq.n	800be50 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800be4c:	2002      	movs	r0, #2
  }
}
 800be4e:	4770      	bx	lr
{
 800be50:	b410      	push	{r4}
 800be52:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800be56:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800be58:	2224      	movs	r2, #36	; 0x24
 800be5a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800be5e:	6822      	ldr	r2, [r4, #0]
 800be60:	f022 0201 	bic.w	r2, r2, #1
 800be64:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800be66:	4603      	mov	r3, r0
 800be68:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800be6a:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800be6e:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800be70:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800be72:	b289      	uxth	r1, r1
 800be74:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800be76:	6822      	ldr	r2, [r4, #0]
 800be78:	f042 0201 	orr.w	r2, r2, #1
 800be7c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800be7e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800be82:	2000      	movs	r0, #0
}
 800be84:	f85d 4b04 	ldr.w	r4, [sp], #4
 800be88:	4770      	bx	lr
 800be8a:	bf00      	nop

0800be8c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800be8c:	2800      	cmp	r0, #0
 800be8e:	d069      	beq.n	800bf64 <HAL_LTDC_Init+0xd8>
{
 800be90:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800be92:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800be96:	4604      	mov	r4, r0
 800be98:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be9c:	2b00      	cmp	r3, #0
 800be9e:	d05c      	beq.n	800bf5a <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bea0:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bea2:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bea4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bea8:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800beac:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800beae:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800beb0:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800beb4:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800beb8:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800beba:	6999      	ldr	r1, [r3, #24]
 800bebc:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bebe:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bec0:	430a      	orrs	r2, r1
 800bec2:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bec4:	689a      	ldr	r2, [r3, #8]
 800bec6:	4928      	ldr	r1, [pc, #160]	; (800bf68 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bec8:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800beca:	400a      	ands	r2, r1
 800becc:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bece:	689a      	ldr	r2, [r3, #8]
 800bed0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bed4:	69a0      	ldr	r0, [r4, #24]
 800bed6:	4302      	orrs	r2, r0
 800bed8:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800beda:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bedc:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bede:	400a      	ands	r2, r1
 800bee0:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bee2:	68da      	ldr	r2, [r3, #12]
 800bee4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bee8:	6a20      	ldr	r0, [r4, #32]
 800beea:	4302      	orrs	r2, r0
 800beec:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800beee:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bef0:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bef2:	400a      	ands	r2, r1
 800bef4:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bef6:	691a      	ldr	r2, [r3, #16]
 800bef8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800befc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800befe:	4302      	orrs	r2, r0
 800bf00:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bf02:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bf04:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bf06:	400a      	ands	r2, r1
 800bf08:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bf0a:	695a      	ldr	r2, [r3, #20]
 800bf0c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bf0e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bf12:	430a      	orrs	r2, r1
 800bf14:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bf16:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bf18:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bf1c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bf20:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bf24:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bf26:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bf28:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bf2c:	432a      	orrs	r2, r5
 800bf2e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bf32:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bf36:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bf38:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bf3a:	f042 0206 	orr.w	r2, r2, #6
 800bf3e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bf40:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bf42:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bf46:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bf48:	ea42 020c 	orr.w	r2, r2, ip
 800bf4c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bf4e:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bf52:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bf56:	4608      	mov	r0, r1
}
 800bf58:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bf5a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bf5e:	f7f5 ffe1 	bl	8001f24 <HAL_LTDC_MspInit>
 800bf62:	e79d      	b.n	800bea0 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bf64:	2001      	movs	r0, #1
}
 800bf66:	4770      	bx	lr
 800bf68:	f000f800 	.word	0xf000f800

0800bf6c <HAL_LTDC_ErrorCallback>:
 800bf6c:	4770      	bx	lr
 800bf6e:	bf00      	nop

0800bf70 <HAL_LTDC_ReloadEventCallback>:
 800bf70:	4770      	bx	lr
 800bf72:	bf00      	nop

0800bf74 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bf74:	6803      	ldr	r3, [r0, #0]
{
 800bf76:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bf78:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bf7a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bf7c:	076a      	lsls	r2, r5, #29
{
 800bf7e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bf80:	d501      	bpl.n	800bf86 <HAL_LTDC_IRQHandler+0x12>
 800bf82:	0771      	lsls	r1, r6, #29
 800bf84:	d41d      	bmi.n	800bfc2 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bf86:	07aa      	lsls	r2, r5, #30
 800bf88:	d501      	bpl.n	800bf8e <HAL_LTDC_IRQHandler+0x1a>
 800bf8a:	07b3      	lsls	r3, r6, #30
 800bf8c:	d42d      	bmi.n	800bfea <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bf8e:	07e8      	lsls	r0, r5, #31
 800bf90:	d501      	bpl.n	800bf96 <HAL_LTDC_IRQHandler+0x22>
 800bf92:	07f1      	lsls	r1, r6, #31
 800bf94:	d440      	bmi.n	800c018 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bf96:	072a      	lsls	r2, r5, #28
 800bf98:	d501      	bpl.n	800bf9e <HAL_LTDC_IRQHandler+0x2a>
 800bf9a:	0733      	lsls	r3, r6, #28
 800bf9c:	d400      	bmi.n	800bfa0 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bf9e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bfa0:	6823      	ldr	r3, [r4, #0]
 800bfa2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bfa4:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bfa6:	f022 0208 	bic.w	r2, r2, #8
 800bfaa:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bfac:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bfae:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bfb0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bfb2:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bfb6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bfba:	4620      	mov	r0, r4
 800bfbc:	f7ff ffd8 	bl	800bf70 <HAL_LTDC_ReloadEventCallback>
}
 800bfc0:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bfc2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bfc4:	f022 0204 	bic.w	r2, r2, #4
 800bfc8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bfca:	2204      	movs	r2, #4
 800bfcc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bfce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bfd2:	f043 0301 	orr.w	r3, r3, #1
 800bfd6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bfda:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bfdc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bfe0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bfe4:	f7ff ffc2 	bl	800bf6c <HAL_LTDC_ErrorCallback>
 800bfe8:	e7cd      	b.n	800bf86 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bfea:	6823      	ldr	r3, [r4, #0]
 800bfec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bfee:	f022 0202 	bic.w	r2, r2, #2
 800bff2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bff4:	2202      	movs	r2, #2
 800bff6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bff8:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bffc:	f043 0302 	orr.w	r3, r3, #2
 800c000:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c004:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800c006:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c008:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c00c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c010:	4620      	mov	r0, r4
 800c012:	f7ff ffab 	bl	800bf6c <HAL_LTDC_ErrorCallback>
 800c016:	e7ba      	b.n	800bf8e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c018:	6823      	ldr	r3, [r4, #0]
 800c01a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c01c:	f022 0201 	bic.w	r2, r2, #1
 800c020:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800c022:	2201      	movs	r2, #1
 800c024:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800c026:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800c028:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c02c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800c030:	4620      	mov	r0, r4
 800c032:	f7f6 ff71 	bl	8002f18 <HAL_LTDC_LineEventCallback>
 800c036:	e7ae      	b.n	800bf96 <HAL_LTDC_IRQHandler+0x22>

0800c038 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800c038:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c03c:	2b01      	cmp	r3, #1
 800c03e:	f000 80c2 	beq.w	800c1c6 <HAL_LTDC_ConfigLayer+0x18e>
{
 800c042:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c046:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c04a:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c04e:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c052:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c054:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c056:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c05a:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800c05e:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c062:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800c066:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c06a:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800c06e:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c070:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c074:	460c      	mov	r4, r1
 800c076:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c078:	9301      	str	r3, [sp, #4]
 800c07a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c07c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c07e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800c082:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c086:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c088:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c08a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c08e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c090:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c094:	6823      	ldr	r3, [r4, #0]
 800c096:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c09a:	9b01      	ldr	r3, [sp, #4]
 800c09c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c0a0:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c0a4:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c0a6:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800c0a8:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c0ac:	1c51      	adds	r1, r2, #1
 800c0ae:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800c0b2:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c0b4:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c0b6:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c0ba:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c0be:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800c0c2:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800c0c6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800c0ca:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c0ce:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c0d2:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c0d4:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c0d6:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800c0da:	3301      	adds	r3, #1
 800c0dc:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800c0e0:	4403      	add	r3, r0
 800c0e2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c0e6:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c0ea:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c0ee:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c0f0:	f023 0307 	bic.w	r3, r3, #7
 800c0f4:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c0f8:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c0fc:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c100:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800c104:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800c108:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c10c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800c110:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800c114:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800c118:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c11c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800c120:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800c124:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800c128:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800c12c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800c130:	696b      	ldr	r3, [r5, #20]
 800c132:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800c136:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800c13a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800c13e:	f023 0307 	bic.w	r3, r3, #7
 800c142:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800c146:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800c14a:	4303      	orrs	r3, r0
 800c14c:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c150:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c154:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c156:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c15a:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c15e:	bb69      	cbnz	r1, 800c1bc <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800c160:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c162:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c164:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c166:	fb03 f707 	mul.w	r7, r3, r7
 800c16a:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c16c:	fb02 f303 	mul.w	r3, r2, r3
 800c170:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c174:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c178:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c17a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800c17e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c182:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800c186:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800c18a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800c18e:	f023 0307 	bic.w	r3, r3, #7
 800c192:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c196:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c19a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c19e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c1a0:	4313      	orrs	r3, r2
 800c1a2:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800c1a6:	2300      	movs	r3, #0
  return HAL_OK;
 800c1a8:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c1aa:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800c1ae:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c1b2:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800c1b6:	b003      	add	sp, #12
 800c1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800c1bc:	3901      	subs	r1, #1
 800c1be:	2906      	cmp	r1, #6
 800c1c0:	d903      	bls.n	800c1ca <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c1c2:	2301      	movs	r3, #1
 800c1c4:	e7cd      	b.n	800c162 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800c1c6:	2002      	movs	r0, #2
}
 800c1c8:	4770      	bx	lr
 800c1ca:	4b02      	ldr	r3, [pc, #8]	; (800c1d4 <HAL_LTDC_ConfigLayer+0x19c>)
 800c1cc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800c1d0:	e7c7      	b.n	800c162 <HAL_LTDC_ConfigLayer+0x12a>
 800c1d2:	bf00      	nop
 800c1d4:	0802ed48 	.word	0x0802ed48

0800c1d8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800c1d8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c1dc:	2b01      	cmp	r3, #1
 800c1de:	d019      	beq.n	800c214 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c1e0:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c1e2:	2302      	movs	r3, #2
{
 800c1e4:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c1e6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c1ea:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c1ec:	4c0a      	ldr	r4, [pc, #40]	; (800c218 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c1ee:	f023 0301 	bic.w	r3, r3, #1
 800c1f2:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c1f4:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c1f6:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800c1f8:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c1fa:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800c1fe:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c202:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800c204:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c208:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800c20c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800c210:	4618      	mov	r0, r3
}
 800c212:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800c214:	2002      	movs	r0, #2
}
 800c216:	4770      	bx	lr
 800c218:	40016800 	.word	0x40016800

0800c21c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c21c:	2800      	cmp	r0, #0
 800c21e:	f000 81a2 	beq.w	800c566 <HAL_RCC_OscConfig+0x34a>
{
 800c222:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c226:	6803      	ldr	r3, [r0, #0]
 800c228:	07dd      	lsls	r5, r3, #31
{
 800c22a:	b082      	sub	sp, #8
 800c22c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c22e:	d52f      	bpl.n	800c290 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c230:	499e      	ldr	r1, [pc, #632]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c232:	688a      	ldr	r2, [r1, #8]
 800c234:	f002 020c 	and.w	r2, r2, #12
 800c238:	2a04      	cmp	r2, #4
 800c23a:	f000 80ed 	beq.w	800c418 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c23e:	688a      	ldr	r2, [r1, #8]
 800c240:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c244:	2a08      	cmp	r2, #8
 800c246:	f000 80e3 	beq.w	800c410 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c24a:	6863      	ldr	r3, [r4, #4]
 800c24c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c250:	f000 80ec 	beq.w	800c42c <HAL_RCC_OscConfig+0x210>
 800c254:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800c258:	f000 8175 	beq.w	800c546 <HAL_RCC_OscConfig+0x32a>
 800c25c:	4d93      	ldr	r5, [pc, #588]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c25e:	682a      	ldr	r2, [r5, #0]
 800c260:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800c264:	602a      	str	r2, [r5, #0]
 800c266:	682a      	ldr	r2, [r5, #0]
 800c268:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800c26c:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c26e:	2b00      	cmp	r3, #0
 800c270:	f040 80e1 	bne.w	800c436 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c274:	f7fd ffb0 	bl	800a1d8 <HAL_GetTick>
 800c278:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c27a:	e005      	b.n	800c288 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c27c:	f7fd ffac 	bl	800a1d8 <HAL_GetTick>
 800c280:	1b80      	subs	r0, r0, r6
 800c282:	2864      	cmp	r0, #100	; 0x64
 800c284:	f200 8101 	bhi.w	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c288:	682b      	ldr	r3, [r5, #0]
 800c28a:	039b      	lsls	r3, r3, #14
 800c28c:	d4f6      	bmi.n	800c27c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c28e:	6823      	ldr	r3, [r4, #0]
 800c290:	079f      	lsls	r7, r3, #30
 800c292:	d528      	bpl.n	800c2e6 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c294:	4a85      	ldr	r2, [pc, #532]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c296:	6891      	ldr	r1, [r2, #8]
 800c298:	f011 0f0c 	tst.w	r1, #12
 800c29c:	f000 8090 	beq.w	800c3c0 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c2a0:	6891      	ldr	r1, [r2, #8]
 800c2a2:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c2a6:	2908      	cmp	r1, #8
 800c2a8:	f000 8086 	beq.w	800c3b8 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c2ac:	68e3      	ldr	r3, [r4, #12]
 800c2ae:	2b00      	cmp	r3, #0
 800c2b0:	f000 810e 	beq.w	800c4d0 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800c2b4:	4b7e      	ldr	r3, [pc, #504]	; (800c4b0 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c2b6:	4e7d      	ldr	r6, [pc, #500]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800c2b8:	2201      	movs	r2, #1
 800c2ba:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c2bc:	f7fd ff8c 	bl	800a1d8 <HAL_GetTick>
 800c2c0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c2c2:	e005      	b.n	800c2d0 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c2c4:	f7fd ff88 	bl	800a1d8 <HAL_GetTick>
 800c2c8:	1b40      	subs	r0, r0, r5
 800c2ca:	2802      	cmp	r0, #2
 800c2cc:	f200 80dd 	bhi.w	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c2d0:	6833      	ldr	r3, [r6, #0]
 800c2d2:	0798      	lsls	r0, r3, #30
 800c2d4:	d5f6      	bpl.n	800c2c4 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c2d6:	6833      	ldr	r3, [r6, #0]
 800c2d8:	6922      	ldr	r2, [r4, #16]
 800c2da:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c2de:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c2e2:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c2e4:	6823      	ldr	r3, [r4, #0]
 800c2e6:	071a      	lsls	r2, r3, #28
 800c2e8:	d451      	bmi.n	800c38e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c2ea:	0758      	lsls	r0, r3, #29
 800c2ec:	d52f      	bpl.n	800c34e <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c2ee:	4a6f      	ldr	r2, [pc, #444]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c2f0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c2f2:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800c2f6:	d07f      	beq.n	800c3f8 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800c2f8:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c2fa:	4e6e      	ldr	r6, [pc, #440]	; (800c4b4 <HAL_RCC_OscConfig+0x298>)
 800c2fc:	6833      	ldr	r3, [r6, #0]
 800c2fe:	05d9      	lsls	r1, r3, #23
 800c300:	f140 80b3 	bpl.w	800c46a <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c304:	68a3      	ldr	r3, [r4, #8]
 800c306:	2b01      	cmp	r3, #1
 800c308:	f000 80c3 	beq.w	800c492 <HAL_RCC_OscConfig+0x276>
 800c30c:	2b05      	cmp	r3, #5
 800c30e:	f000 812c 	beq.w	800c56a <HAL_RCC_OscConfig+0x34e>
 800c312:	4e66      	ldr	r6, [pc, #408]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c314:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c316:	f022 0201 	bic.w	r2, r2, #1
 800c31a:	6732      	str	r2, [r6, #112]	; 0x70
 800c31c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c31e:	f022 0204 	bic.w	r2, r2, #4
 800c322:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c324:	2b00      	cmp	r3, #0
 800c326:	f040 80b9 	bne.w	800c49c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800c32a:	f7fd ff55 	bl	800a1d8 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c32e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c332:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c334:	e005      	b.n	800c342 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c336:	f7fd ff4f 	bl	800a1d8 <HAL_GetTick>
 800c33a:	1bc0      	subs	r0, r0, r7
 800c33c:	4540      	cmp	r0, r8
 800c33e:	f200 80a4 	bhi.w	800c48a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c342:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c344:	0798      	lsls	r0, r3, #30
 800c346:	d4f6      	bmi.n	800c336 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800c348:	2d00      	cmp	r5, #0
 800c34a:	f040 8106 	bne.w	800c55a <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c34e:	69a0      	ldr	r0, [r4, #24]
 800c350:	b1c8      	cbz	r0, 800c386 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c352:	4d56      	ldr	r5, [pc, #344]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c354:	68ab      	ldr	r3, [r5, #8]
 800c356:	f003 030c 	and.w	r3, r3, #12
 800c35a:	2b08      	cmp	r3, #8
 800c35c:	f000 80c9 	beq.w	800c4f2 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800c360:	4b53      	ldr	r3, [pc, #332]	; (800c4b0 <HAL_RCC_OscConfig+0x294>)
 800c362:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c364:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c366:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c368:	f000 8109 	beq.w	800c57e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c36c:	f7fd ff34 	bl	800a1d8 <HAL_GetTick>
 800c370:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c372:	e005      	b.n	800c380 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c374:	f7fd ff30 	bl	800a1d8 <HAL_GetTick>
 800c378:	1b00      	subs	r0, r0, r4
 800c37a:	2802      	cmp	r0, #2
 800c37c:	f200 8085 	bhi.w	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c380:	682b      	ldr	r3, [r5, #0]
 800c382:	019b      	lsls	r3, r3, #6
 800c384:	d4f6      	bmi.n	800c374 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c386:	2000      	movs	r0, #0
}
 800c388:	b002      	add	sp, #8
 800c38a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c38e:	6963      	ldr	r3, [r4, #20]
 800c390:	b30b      	cbz	r3, 800c3d6 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800c392:	4b47      	ldr	r3, [pc, #284]	; (800c4b0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c394:	4e45      	ldr	r6, [pc, #276]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800c396:	2201      	movs	r2, #1
 800c398:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c39c:	f7fd ff1c 	bl	800a1d8 <HAL_GetTick>
 800c3a0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c3a2:	e004      	b.n	800c3ae <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c3a4:	f7fd ff18 	bl	800a1d8 <HAL_GetTick>
 800c3a8:	1b40      	subs	r0, r0, r5
 800c3aa:	2802      	cmp	r0, #2
 800c3ac:	d86d      	bhi.n	800c48a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c3ae:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c3b0:	079b      	lsls	r3, r3, #30
 800c3b2:	d5f7      	bpl.n	800c3a4 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c3b4:	6823      	ldr	r3, [r4, #0]
 800c3b6:	e798      	b.n	800c2ea <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c3b8:	6852      	ldr	r2, [r2, #4]
 800c3ba:	0256      	lsls	r6, r2, #9
 800c3bc:	f53f af76 	bmi.w	800c2ac <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c3c0:	4a3a      	ldr	r2, [pc, #232]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c3c2:	6812      	ldr	r2, [r2, #0]
 800c3c4:	0795      	lsls	r5, r2, #30
 800c3c6:	d544      	bpl.n	800c452 <HAL_RCC_OscConfig+0x236>
 800c3c8:	68e2      	ldr	r2, [r4, #12]
 800c3ca:	2a01      	cmp	r2, #1
 800c3cc:	d041      	beq.n	800c452 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c3ce:	2001      	movs	r0, #1
}
 800c3d0:	b002      	add	sp, #8
 800c3d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c3d6:	4a36      	ldr	r2, [pc, #216]	; (800c4b0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c3d8:	4e34      	ldr	r6, [pc, #208]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c3da:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c3de:	f7fd fefb 	bl	800a1d8 <HAL_GetTick>
 800c3e2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c3e4:	e004      	b.n	800c3f0 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c3e6:	f7fd fef7 	bl	800a1d8 <HAL_GetTick>
 800c3ea:	1b40      	subs	r0, r0, r5
 800c3ec:	2802      	cmp	r0, #2
 800c3ee:	d84c      	bhi.n	800c48a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c3f0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c3f2:	079f      	lsls	r7, r3, #30
 800c3f4:	d4f7      	bmi.n	800c3e6 <HAL_RCC_OscConfig+0x1ca>
 800c3f6:	e7dd      	b.n	800c3b4 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c3f8:	9301      	str	r3, [sp, #4]
 800c3fa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c3fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c400:	6413      	str	r3, [r2, #64]	; 0x40
 800c402:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c404:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c408:	9301      	str	r3, [sp, #4]
 800c40a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c40c:	2501      	movs	r5, #1
 800c40e:	e774      	b.n	800c2fa <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c410:	684a      	ldr	r2, [r1, #4]
 800c412:	0250      	lsls	r0, r2, #9
 800c414:	f57f af19 	bpl.w	800c24a <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c418:	4a24      	ldr	r2, [pc, #144]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c41a:	6812      	ldr	r2, [r2, #0]
 800c41c:	0391      	lsls	r1, r2, #14
 800c41e:	f57f af37 	bpl.w	800c290 <HAL_RCC_OscConfig+0x74>
 800c422:	6862      	ldr	r2, [r4, #4]
 800c424:	2a00      	cmp	r2, #0
 800c426:	f47f af33 	bne.w	800c290 <HAL_RCC_OscConfig+0x74>
 800c42a:	e7d0      	b.n	800c3ce <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c42c:	4a1f      	ldr	r2, [pc, #124]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c42e:	6813      	ldr	r3, [r2, #0]
 800c430:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c434:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c436:	f7fd fecf 	bl	800a1d8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c43a:	4e1c      	ldr	r6, [pc, #112]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c43c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c43e:	e004      	b.n	800c44a <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c440:	f7fd feca 	bl	800a1d8 <HAL_GetTick>
 800c444:	1b40      	subs	r0, r0, r5
 800c446:	2864      	cmp	r0, #100	; 0x64
 800c448:	d81f      	bhi.n	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c44a:	6833      	ldr	r3, [r6, #0]
 800c44c:	039a      	lsls	r2, r3, #14
 800c44e:	d5f7      	bpl.n	800c440 <HAL_RCC_OscConfig+0x224>
 800c450:	e71d      	b.n	800c28e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c452:	4916      	ldr	r1, [pc, #88]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c454:	6920      	ldr	r0, [r4, #16]
 800c456:	680a      	ldr	r2, [r1, #0]
 800c458:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c45c:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c460:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c462:	071a      	lsls	r2, r3, #28
 800c464:	f57f af41 	bpl.w	800c2ea <HAL_RCC_OscConfig+0xce>
 800c468:	e791      	b.n	800c38e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c46a:	6833      	ldr	r3, [r6, #0]
 800c46c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c470:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c472:	f7fd feb1 	bl	800a1d8 <HAL_GetTick>
 800c476:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c478:	6833      	ldr	r3, [r6, #0]
 800c47a:	05da      	lsls	r2, r3, #23
 800c47c:	f53f af42 	bmi.w	800c304 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c480:	f7fd feaa 	bl	800a1d8 <HAL_GetTick>
 800c484:	1bc0      	subs	r0, r0, r7
 800c486:	2802      	cmp	r0, #2
 800c488:	d9f6      	bls.n	800c478 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c48a:	2003      	movs	r0, #3
}
 800c48c:	b002      	add	sp, #8
 800c48e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c492:	4a06      	ldr	r2, [pc, #24]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
 800c494:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c496:	f043 0301 	orr.w	r3, r3, #1
 800c49a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c49c:	f7fd fe9c 	bl	800a1d8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c4a0:	4f02      	ldr	r7, [pc, #8]	; (800c4ac <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c4a2:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c4a4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c4a8:	e00b      	b.n	800c4c2 <HAL_RCC_OscConfig+0x2a6>
 800c4aa:	bf00      	nop
 800c4ac:	40023800 	.word	0x40023800
 800c4b0:	42470000 	.word	0x42470000
 800c4b4:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c4b8:	f7fd fe8e 	bl	800a1d8 <HAL_GetTick>
 800c4bc:	1b80      	subs	r0, r0, r6
 800c4be:	4540      	cmp	r0, r8
 800c4c0:	d8e3      	bhi.n	800c48a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c4c2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c4c4:	079b      	lsls	r3, r3, #30
 800c4c6:	d5f7      	bpl.n	800c4b8 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c4c8:	2d00      	cmp	r5, #0
 800c4ca:	f43f af40 	beq.w	800c34e <HAL_RCC_OscConfig+0x132>
 800c4ce:	e044      	b.n	800c55a <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c4d0:	4a42      	ldr	r2, [pc, #264]	; (800c5dc <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c4d2:	4e43      	ldr	r6, [pc, #268]	; (800c5e0 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c4d4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c4d6:	f7fd fe7f 	bl	800a1d8 <HAL_GetTick>
 800c4da:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c4dc:	e004      	b.n	800c4e8 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c4de:	f7fd fe7b 	bl	800a1d8 <HAL_GetTick>
 800c4e2:	1b40      	subs	r0, r0, r5
 800c4e4:	2802      	cmp	r0, #2
 800c4e6:	d8d0      	bhi.n	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c4e8:	6833      	ldr	r3, [r6, #0]
 800c4ea:	0799      	lsls	r1, r3, #30
 800c4ec:	d4f7      	bmi.n	800c4de <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c4ee:	6823      	ldr	r3, [r4, #0]
 800c4f0:	e6f9      	b.n	800c2e6 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c4f2:	2801      	cmp	r0, #1
 800c4f4:	f43f af48 	beq.w	800c388 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c4f8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c4fa:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c4fc:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c500:	4291      	cmp	r1, r2
 800c502:	f47f af64 	bne.w	800c3ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c506:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c508:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c50c:	4291      	cmp	r1, r2
 800c50e:	f47f af5e 	bne.w	800c3ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c512:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c514:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c518:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c51a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c51e:	f47f af56 	bne.w	800c3ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c522:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c524:	0852      	lsrs	r2, r2, #1
 800c526:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c52a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c52c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c530:	f47f af4d 	bne.w	800c3ce <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c534:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c536:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c53a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c53e:	bf14      	ite	ne
 800c540:	2001      	movne	r0, #1
 800c542:	2000      	moveq	r0, #0
 800c544:	e720      	b.n	800c388 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c546:	4b26      	ldr	r3, [pc, #152]	; (800c5e0 <HAL_RCC_OscConfig+0x3c4>)
 800c548:	681a      	ldr	r2, [r3, #0]
 800c54a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c54e:	601a      	str	r2, [r3, #0]
 800c550:	681a      	ldr	r2, [r3, #0]
 800c552:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c556:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c558:	e76d      	b.n	800c436 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c55a:	4a21      	ldr	r2, [pc, #132]	; (800c5e0 <HAL_RCC_OscConfig+0x3c4>)
 800c55c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c55e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c562:	6413      	str	r3, [r2, #64]	; 0x40
 800c564:	e6f3      	b.n	800c34e <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c566:	2001      	movs	r0, #1
}
 800c568:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c56a:	4b1d      	ldr	r3, [pc, #116]	; (800c5e0 <HAL_RCC_OscConfig+0x3c4>)
 800c56c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c56e:	f042 0204 	orr.w	r2, r2, #4
 800c572:	671a      	str	r2, [r3, #112]	; 0x70
 800c574:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c576:	f042 0201 	orr.w	r2, r2, #1
 800c57a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c57c:	e78e      	b.n	800c49c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c57e:	f7fd fe2b 	bl	800a1d8 <HAL_GetTick>
 800c582:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c584:	e005      	b.n	800c592 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c586:	f7fd fe27 	bl	800a1d8 <HAL_GetTick>
 800c58a:	1b80      	subs	r0, r0, r6
 800c58c:	2802      	cmp	r0, #2
 800c58e:	f63f af7c 	bhi.w	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c592:	682b      	ldr	r3, [r5, #0]
 800c594:	0199      	lsls	r1, r3, #6
 800c596:	d4f6      	bmi.n	800c586 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c598:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c59c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c59e:	430b      	orrs	r3, r1
 800c5a0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c5a4:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c5a8:	0852      	lsrs	r2, r2, #1
 800c5aa:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c5ae:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c5b0:	490a      	ldr	r1, [pc, #40]	; (800c5dc <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c5b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c5b6:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c5b8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c5ba:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c5bc:	f7fd fe0c 	bl	800a1d8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c5c0:	4d07      	ldr	r5, [pc, #28]	; (800c5e0 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c5c2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c5c4:	e005      	b.n	800c5d2 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c5c6:	f7fd fe07 	bl	800a1d8 <HAL_GetTick>
 800c5ca:	1b00      	subs	r0, r0, r4
 800c5cc:	2802      	cmp	r0, #2
 800c5ce:	f63f af5c 	bhi.w	800c48a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c5d2:	682b      	ldr	r3, [r5, #0]
 800c5d4:	019a      	lsls	r2, r3, #6
 800c5d6:	d5f6      	bpl.n	800c5c6 <HAL_RCC_OscConfig+0x3aa>
 800c5d8:	e6d5      	b.n	800c386 <HAL_RCC_OscConfig+0x16a>
 800c5da:	bf00      	nop
 800c5dc:	42470000 	.word	0x42470000
 800c5e0:	40023800 	.word	0x40023800

0800c5e4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c5e4:	4916      	ldr	r1, [pc, #88]	; (800c640 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c5e6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c5e8:	688b      	ldr	r3, [r1, #8]
 800c5ea:	f003 030c 	and.w	r3, r3, #12
 800c5ee:	2b04      	cmp	r3, #4
 800c5f0:	d01b      	beq.n	800c62a <HAL_RCC_GetSysClockFreq+0x46>
 800c5f2:	2b08      	cmp	r3, #8
 800c5f4:	d117      	bne.n	800c626 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c5f6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c5f8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c5fa:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c5fc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c600:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c604:	d113      	bne.n	800c62e <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c606:	480f      	ldr	r0, [pc, #60]	; (800c644 <HAL_RCC_GetSysClockFreq+0x60>)
 800c608:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c60c:	fba1 0100 	umull	r0, r1, r1, r0
 800c610:	f7f4 f9d4 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c614:	4b0a      	ldr	r3, [pc, #40]	; (800c640 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c616:	685b      	ldr	r3, [r3, #4]
 800c618:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c61c:	3301      	adds	r3, #1
 800c61e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c620:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c624:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c626:	4807      	ldr	r0, [pc, #28]	; (800c644 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c628:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c62a:	4807      	ldr	r0, [pc, #28]	; (800c648 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c62c:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c62e:	4806      	ldr	r0, [pc, #24]	; (800c648 <HAL_RCC_GetSysClockFreq+0x64>)
 800c630:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c634:	2300      	movs	r3, #0
 800c636:	fba1 0100 	umull	r0, r1, r1, r0
 800c63a:	f7f4 f9bf 	bl	80009bc <__aeabi_uldivmod>
 800c63e:	e7e9      	b.n	800c614 <HAL_RCC_GetSysClockFreq+0x30>
 800c640:	40023800 	.word	0x40023800
 800c644:	00f42400 	.word	0x00f42400
 800c648:	007a1200 	.word	0x007a1200

0800c64c <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c64c:	2800      	cmp	r0, #0
 800c64e:	f000 8087 	beq.w	800c760 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c652:	4a48      	ldr	r2, [pc, #288]	; (800c774 <HAL_RCC_ClockConfig+0x128>)
 800c654:	6813      	ldr	r3, [r2, #0]
 800c656:	f003 030f 	and.w	r3, r3, #15
 800c65a:	428b      	cmp	r3, r1
{
 800c65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c660:	460d      	mov	r5, r1
 800c662:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c664:	d209      	bcs.n	800c67a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c666:	b2cb      	uxtb	r3, r1
 800c668:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c66a:	6813      	ldr	r3, [r2, #0]
 800c66c:	f003 030f 	and.w	r3, r3, #15
 800c670:	428b      	cmp	r3, r1
 800c672:	d002      	beq.n	800c67a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c674:	2001      	movs	r0, #1
}
 800c676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c67a:	6823      	ldr	r3, [r4, #0]
 800c67c:	0798      	lsls	r0, r3, #30
 800c67e:	d514      	bpl.n	800c6aa <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c680:	0759      	lsls	r1, r3, #29
 800c682:	d504      	bpl.n	800c68e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c684:	493c      	ldr	r1, [pc, #240]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c686:	688a      	ldr	r2, [r1, #8]
 800c688:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c68c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c68e:	071a      	lsls	r2, r3, #28
 800c690:	d504      	bpl.n	800c69c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c692:	4939      	ldr	r1, [pc, #228]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c694:	688a      	ldr	r2, [r1, #8]
 800c696:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c69a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c69c:	4936      	ldr	r1, [pc, #216]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c69e:	68a0      	ldr	r0, [r4, #8]
 800c6a0:	688a      	ldr	r2, [r1, #8]
 800c6a2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c6a6:	4302      	orrs	r2, r0
 800c6a8:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c6aa:	07df      	lsls	r7, r3, #31
 800c6ac:	d521      	bpl.n	800c6f2 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c6ae:	6862      	ldr	r2, [r4, #4]
 800c6b0:	2a01      	cmp	r2, #1
 800c6b2:	d057      	beq.n	800c764 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c6b4:	1e93      	subs	r3, r2, #2
 800c6b6:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c6b8:	4b2f      	ldr	r3, [pc, #188]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c6ba:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c6bc:	d94d      	bls.n	800c75a <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c6be:	0799      	lsls	r1, r3, #30
 800c6c0:	d5d8      	bpl.n	800c674 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c6c2:	4e2d      	ldr	r6, [pc, #180]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c6c4:	68b3      	ldr	r3, [r6, #8]
 800c6c6:	f023 0303 	bic.w	r3, r3, #3
 800c6ca:	4313      	orrs	r3, r2
 800c6cc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c6ce:	f7fd fd83 	bl	800a1d8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c6d2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c6d6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c6d8:	e004      	b.n	800c6e4 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c6da:	f7fd fd7d 	bl	800a1d8 <HAL_GetTick>
 800c6de:	1bc0      	subs	r0, r0, r7
 800c6e0:	4540      	cmp	r0, r8
 800c6e2:	d844      	bhi.n	800c76e <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c6e4:	68b3      	ldr	r3, [r6, #8]
 800c6e6:	6862      	ldr	r2, [r4, #4]
 800c6e8:	f003 030c 	and.w	r3, r3, #12
 800c6ec:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c6f0:	d1f3      	bne.n	800c6da <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c6f2:	4a20      	ldr	r2, [pc, #128]	; (800c774 <HAL_RCC_ClockConfig+0x128>)
 800c6f4:	6813      	ldr	r3, [r2, #0]
 800c6f6:	f003 030f 	and.w	r3, r3, #15
 800c6fa:	42ab      	cmp	r3, r5
 800c6fc:	d906      	bls.n	800c70c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c6fe:	b2eb      	uxtb	r3, r5
 800c700:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c702:	6813      	ldr	r3, [r2, #0]
 800c704:	f003 030f 	and.w	r3, r3, #15
 800c708:	42ab      	cmp	r3, r5
 800c70a:	d1b3      	bne.n	800c674 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c70c:	6823      	ldr	r3, [r4, #0]
 800c70e:	075a      	lsls	r2, r3, #29
 800c710:	d506      	bpl.n	800c720 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c712:	4919      	ldr	r1, [pc, #100]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c714:	68e0      	ldr	r0, [r4, #12]
 800c716:	688a      	ldr	r2, [r1, #8]
 800c718:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c71c:	4302      	orrs	r2, r0
 800c71e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c720:	071b      	lsls	r3, r3, #28
 800c722:	d507      	bpl.n	800c734 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c724:	4a14      	ldr	r2, [pc, #80]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c726:	6921      	ldr	r1, [r4, #16]
 800c728:	6893      	ldr	r3, [r2, #8]
 800c72a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c72e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c732:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c734:	f7ff ff56 	bl	800c5e4 <HAL_RCC_GetSysClockFreq>
 800c738:	4a0f      	ldr	r2, [pc, #60]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c73a:	4c10      	ldr	r4, [pc, #64]	; (800c77c <HAL_RCC_ClockConfig+0x130>)
 800c73c:	6892      	ldr	r2, [r2, #8]
 800c73e:	4910      	ldr	r1, [pc, #64]	; (800c780 <HAL_RCC_ClockConfig+0x134>)
 800c740:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c744:	4603      	mov	r3, r0
 800c746:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c748:	480e      	ldr	r0, [pc, #56]	; (800c784 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c74a:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c74c:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c74e:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c750:	f7f5 fdc4 	bl	80022dc <HAL_InitTick>
  return HAL_OK;
 800c754:	2000      	movs	r0, #0
}
 800c756:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c75a:	0198      	lsls	r0, r3, #6
 800c75c:	d4b1      	bmi.n	800c6c2 <HAL_RCC_ClockConfig+0x76>
 800c75e:	e789      	b.n	800c674 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c760:	2001      	movs	r0, #1
}
 800c762:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c764:	4b04      	ldr	r3, [pc, #16]	; (800c778 <HAL_RCC_ClockConfig+0x12c>)
 800c766:	681b      	ldr	r3, [r3, #0]
 800c768:	039e      	lsls	r6, r3, #14
 800c76a:	d4aa      	bmi.n	800c6c2 <HAL_RCC_ClockConfig+0x76>
 800c76c:	e782      	b.n	800c674 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c76e:	2003      	movs	r0, #3
 800c770:	e781      	b.n	800c676 <HAL_RCC_ClockConfig+0x2a>
 800c772:	bf00      	nop
 800c774:	40023c00 	.word	0x40023c00
 800c778:	40023800 	.word	0x40023800
 800c77c:	0802ed30 	.word	0x0802ed30
 800c780:	20000078 	.word	0x20000078
 800c784:	20000080 	.word	0x20000080

0800c788 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c788:	4b04      	ldr	r3, [pc, #16]	; (800c79c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c78a:	4905      	ldr	r1, [pc, #20]	; (800c7a0 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c78c:	689b      	ldr	r3, [r3, #8]
 800c78e:	4a05      	ldr	r2, [pc, #20]	; (800c7a4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c790:	6808      	ldr	r0, [r1, #0]
 800c792:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c796:	5cd3      	ldrb	r3, [r2, r3]
}
 800c798:	40d8      	lsrs	r0, r3
 800c79a:	4770      	bx	lr
 800c79c:	40023800 	.word	0x40023800
 800c7a0:	20000078 	.word	0x20000078
 800c7a4:	0802ed40 	.word	0x0802ed40

0800c7a8 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c7a8:	4b0e      	ldr	r3, [pc, #56]	; (800c7e4 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c7aa:	220f      	movs	r2, #15
 800c7ac:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c7ae:	689a      	ldr	r2, [r3, #8]
 800c7b0:	f002 0203 	and.w	r2, r2, #3
 800c7b4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c7b6:	689a      	ldr	r2, [r3, #8]
 800c7b8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c7bc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c7be:	689a      	ldr	r2, [r3, #8]
 800c7c0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c7c4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c7c6:	689b      	ldr	r3, [r3, #8]
 800c7c8:	08db      	lsrs	r3, r3, #3
{
 800c7ca:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c7cc:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c7d0:	4c05      	ldr	r4, [pc, #20]	; (800c7e8 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c7d2:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c7d4:	6823      	ldr	r3, [r4, #0]
}
 800c7d6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c7da:	f003 030f 	and.w	r3, r3, #15
 800c7de:	600b      	str	r3, [r1, #0]
}
 800c7e0:	4770      	bx	lr
 800c7e2:	bf00      	nop
 800c7e4:	40023800 	.word	0x40023800
 800c7e8:	40023c00 	.word	0x40023c00

0800c7ec <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c7ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c7ee:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c7f0:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c7f4:	b083      	sub	sp, #12
 800c7f6:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c7f8:	d111      	bne.n	800c81e <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c7fa:	f013 0f0c 	tst.w	r3, #12
 800c7fe:	d16f      	bne.n	800c8e0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c800:	0698      	lsls	r0, r3, #26
 800c802:	f100 80c2 	bmi.w	800c98a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c806:	f013 0310 	ands.w	r3, r3, #16
 800c80a:	f000 80bb 	beq.w	800c984 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c80e:	4b89      	ldr	r3, [pc, #548]	; (800ca34 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c810:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c814:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c818:	2000      	movs	r0, #0
}
 800c81a:	b003      	add	sp, #12
 800c81c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c81e:	4b86      	ldr	r3, [pc, #536]	; (800ca38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c820:	4e86      	ldr	r6, [pc, #536]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c822:	2200      	movs	r2, #0
 800c824:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c826:	f7fd fcd7 	bl	800a1d8 <HAL_GetTick>
 800c82a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c82c:	e004      	b.n	800c838 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c82e:	f7fd fcd3 	bl	800a1d8 <HAL_GetTick>
 800c832:	1b43      	subs	r3, r0, r5
 800c834:	2b02      	cmp	r3, #2
 800c836:	d850      	bhi.n	800c8da <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c838:	6833      	ldr	r3, [r6, #0]
 800c83a:	0118      	lsls	r0, r3, #4
 800c83c:	d4f7      	bmi.n	800c82e <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c83e:	6823      	ldr	r3, [r4, #0]
 800c840:	07d9      	lsls	r1, r3, #31
 800c842:	d506      	bpl.n	800c852 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c844:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c848:	0712      	lsls	r2, r2, #28
 800c84a:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c84e:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c852:	079a      	lsls	r2, r3, #30
 800c854:	d515      	bpl.n	800c882 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c856:	4979      	ldr	r1, [pc, #484]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c858:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c85a:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c85e:	6865      	ldr	r5, [r4, #4]
 800c860:	0612      	lsls	r2, r2, #24
 800c862:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c866:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c86a:	4302      	orrs	r2, r0
 800c86c:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c870:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c874:	69e2      	ldr	r2, [r4, #28]
 800c876:	f020 001f 	bic.w	r0, r0, #31
 800c87a:	3a01      	subs	r2, #1
 800c87c:	4302      	orrs	r2, r0
 800c87e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c882:	065b      	lsls	r3, r3, #25
 800c884:	d509      	bpl.n	800c89a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c886:	1d20      	adds	r0, r4, #4
 800c888:	c80b      	ldmia	r0, {r0, r1, r3}
 800c88a:	061b      	lsls	r3, r3, #24
 800c88c:	4a6b      	ldr	r2, [pc, #428]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c88e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c892:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c896:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c89a:	4b67      	ldr	r3, [pc, #412]	; (800ca38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c89c:	4e67      	ldr	r6, [pc, #412]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c89e:	2201      	movs	r2, #1
 800c8a0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c8a2:	f7fd fc99 	bl	800a1d8 <HAL_GetTick>
 800c8a6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c8a8:	e004      	b.n	800c8b4 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c8aa:	f7fd fc95 	bl	800a1d8 <HAL_GetTick>
 800c8ae:	1b40      	subs	r0, r0, r5
 800c8b0:	2802      	cmp	r0, #2
 800c8b2:	d812      	bhi.n	800c8da <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c8b4:	6833      	ldr	r3, [r6, #0]
 800c8b6:	011f      	lsls	r7, r3, #4
 800c8b8:	d5f7      	bpl.n	800c8aa <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c8ba:	6823      	ldr	r3, [r4, #0]
 800c8bc:	e79d      	b.n	800c7fa <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c8be:	f7fd fc8b 	bl	800a1d8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c8c2:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c8c6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c8c8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c8ca:	079b      	lsls	r3, r3, #30
 800c8cc:	f100 80a5 	bmi.w	800ca1a <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c8d0:	f7fd fc82 	bl	800a1d8 <HAL_GetTick>
 800c8d4:	1b80      	subs	r0, r0, r6
 800c8d6:	42b8      	cmp	r0, r7
 800c8d8:	d9f6      	bls.n	800c8c8 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c8da:	2003      	movs	r0, #3
}
 800c8dc:	b003      	add	sp, #12
 800c8de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c8e0:	4b55      	ldr	r3, [pc, #340]	; (800ca38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c8e2:	4e56      	ldr	r6, [pc, #344]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c8e4:	2200      	movs	r2, #0
 800c8e6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c8e8:	f7fd fc76 	bl	800a1d8 <HAL_GetTick>
 800c8ec:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c8ee:	e004      	b.n	800c8fa <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c8f0:	f7fd fc72 	bl	800a1d8 <HAL_GetTick>
 800c8f4:	1b43      	subs	r3, r0, r5
 800c8f6:	2b02      	cmp	r3, #2
 800c8f8:	d8ef      	bhi.n	800c8da <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c8fa:	6833      	ldr	r3, [r6, #0]
 800c8fc:	0098      	lsls	r0, r3, #2
 800c8fe:	d4f7      	bmi.n	800c8f0 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c900:	6822      	ldr	r2, [r4, #0]
 800c902:	0751      	lsls	r1, r2, #29
 800c904:	d515      	bpl.n	800c932 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c906:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c908:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c90c:	6920      	ldr	r0, [r4, #16]
 800c90e:	061b      	lsls	r3, r3, #24
 800c910:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c914:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c918:	430b      	orrs	r3, r1
 800c91a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c91e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c922:	6a21      	ldr	r1, [r4, #32]
 800c924:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c928:	3901      	subs	r1, #1
 800c92a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c92e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c932:	0713      	lsls	r3, r2, #28
 800c934:	d514      	bpl.n	800c960 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c936:	4a41      	ldr	r2, [pc, #260]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c938:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c93a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c93e:	6920      	ldr	r0, [r4, #16]
 800c940:	071b      	lsls	r3, r3, #28
 800c942:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c946:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c94a:	430b      	orrs	r3, r1
 800c94c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c950:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c954:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c956:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c95a:	430b      	orrs	r3, r1
 800c95c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c960:	4b35      	ldr	r3, [pc, #212]	; (800ca38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c962:	4e36      	ldr	r6, [pc, #216]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c964:	2201      	movs	r2, #1
 800c966:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c968:	f7fd fc36 	bl	800a1d8 <HAL_GetTick>
 800c96c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c96e:	e004      	b.n	800c97a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c970:	f7fd fc32 	bl	800a1d8 <HAL_GetTick>
 800c974:	1b40      	subs	r0, r0, r5
 800c976:	2802      	cmp	r0, #2
 800c978:	d8af      	bhi.n	800c8da <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c97a:	6833      	ldr	r3, [r6, #0]
 800c97c:	009f      	lsls	r7, r3, #2
 800c97e:	d5f7      	bpl.n	800c970 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c980:	6823      	ldr	r3, [r4, #0]
 800c982:	e73d      	b.n	800c800 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c984:	4618      	mov	r0, r3
}
 800c986:	b003      	add	sp, #12
 800c988:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c98a:	4b2c      	ldr	r3, [pc, #176]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c98c:	4d2c      	ldr	r5, [pc, #176]	; (800ca40 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c98e:	2200      	movs	r2, #0
 800c990:	9201      	str	r2, [sp, #4]
 800c992:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c994:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c998:	641a      	str	r2, [r3, #64]	; 0x40
 800c99a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c99c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c9a0:	9301      	str	r3, [sp, #4]
 800c9a2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c9a4:	682b      	ldr	r3, [r5, #0]
 800c9a6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c9aa:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c9ac:	f7fd fc14 	bl	800a1d8 <HAL_GetTick>
 800c9b0:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c9b2:	e004      	b.n	800c9be <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c9b4:	f7fd fc10 	bl	800a1d8 <HAL_GetTick>
 800c9b8:	1b83      	subs	r3, r0, r6
 800c9ba:	2b02      	cmp	r3, #2
 800c9bc:	d88d      	bhi.n	800c8da <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c9be:	682b      	ldr	r3, [r5, #0]
 800c9c0:	05d9      	lsls	r1, r3, #23
 800c9c2:	d5f7      	bpl.n	800c9b4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c9c4:	4d1d      	ldr	r5, [pc, #116]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c9c6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c9c8:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c9ca:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c9ce:	d111      	bne.n	800c9f4 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c9d0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c9d4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c9d8:	d021      	beq.n	800ca1e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c9da:	4918      	ldr	r1, [pc, #96]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c9dc:	688a      	ldr	r2, [r1, #8]
 800c9de:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c9e2:	608a      	str	r2, [r1, #8]
 800c9e4:	4a15      	ldr	r2, [pc, #84]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c9e6:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c9e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c9ec:	430b      	orrs	r3, r1
 800c9ee:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c9f0:	6823      	ldr	r3, [r4, #0]
 800c9f2:	e708      	b.n	800c806 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c9f4:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c9f8:	4291      	cmp	r1, r2
 800c9fa:	d0eb      	beq.n	800c9d4 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c9fc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c9fe:	4a0e      	ldr	r2, [pc, #56]	; (800ca38 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800ca00:	2101      	movs	r1, #1
 800ca02:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800ca06:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800ca0a:	2100      	movs	r1, #0
 800ca0c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800ca10:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800ca12:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800ca14:	07da      	lsls	r2, r3, #31
 800ca16:	f53f af52 	bmi.w	800c8be <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800ca1a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ca1c:	e7d8      	b.n	800c9d0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800ca1e:	4807      	ldr	r0, [pc, #28]	; (800ca3c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ca20:	6882      	ldr	r2, [r0, #8]
 800ca22:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800ca26:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800ca2a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800ca2e:	430a      	orrs	r2, r1
 800ca30:	6082      	str	r2, [r0, #8]
 800ca32:	e7d7      	b.n	800c9e4 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800ca34:	42471000 	.word	0x42471000
 800ca38:	42470000 	.word	0x42470000
 800ca3c:	40023800 	.word	0x40023800
 800ca40:	40007000 	.word	0x40007000

0800ca44 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800ca44:	b1f0      	cbz	r0, 800ca84 <HAL_SDRAM_Init+0x40>
{
 800ca46:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800ca48:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ca4c:	460d      	mov	r5, r1
 800ca4e:	4604      	mov	r4, r0
 800ca50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ca54:	b18b      	cbz	r3, 800ca7a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800ca56:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ca58:	2302      	movs	r3, #2
 800ca5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800ca5e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ca62:	f000 fe51 	bl	800d708 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800ca66:	e9d4 0200 	ldrd	r0, r2, [r4]
 800ca6a:	4629      	mov	r1, r5
 800ca6c:	f000 fe8a 	bl	800d784 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800ca70:	2301      	movs	r3, #1
 800ca72:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800ca76:	2000      	movs	r0, #0
}
 800ca78:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800ca7a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800ca7e:	f7f5 fbc5 	bl	800220c <HAL_SDRAM_MspInit>
 800ca82:	e7e8      	b.n	800ca56 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800ca84:	2001      	movs	r0, #1
}
 800ca86:	4770      	bx	lr

0800ca88 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800ca88:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ca8a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800ca8e:	2b02      	cmp	r3, #2
{
 800ca90:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ca92:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800ca94:	d004      	beq.n	800caa0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800ca96:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800ca9a:	2c01      	cmp	r4, #1
 800ca9c:	d001      	beq.n	800caa2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800ca9e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800caa0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800caa2:	460e      	mov	r6, r1
 800caa4:	2302      	movs	r3, #2
 800caa6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800caaa:	6828      	ldr	r0, [r5, #0]
 800caac:	f000 feb6 	bl	800d81c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800cab0:	6833      	ldr	r3, [r6, #0]
 800cab2:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800cab4:	bf06      	itte	eq
 800cab6:	2305      	moveq	r3, #5
 800cab8:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800cabc:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800cac0:	2000      	movs	r0, #0
}
 800cac2:	bd70      	pop	{r4, r5, r6, pc}

0800cac4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800cac4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800cac6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800caca:	2b02      	cmp	r3, #2
{
 800cacc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800cace:	b2d8      	uxtb	r0, r3
 800cad0:	d005      	beq.n	800cade <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800cad2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800cad6:	2b01      	cmp	r3, #1
 800cad8:	b2dd      	uxtb	r5, r3
 800cada:	d001      	beq.n	800cae0 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800cadc:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800cade:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800cae0:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800cae2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800cae4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800cae8:	f000 fec2 	bl	800d870 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800caec:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800caf0:	2000      	movs	r0, #0
}
 800caf2:	bd38      	pop	{r3, r4, r5, pc}

0800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800caf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800caf8:	b082      	sub	sp, #8
 800cafa:	461d      	mov	r5, r3
 800cafc:	4616      	mov	r6, r2
 800cafe:	460c      	mov	r4, r1
 800cb00:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800cb02:	f7fd fb69 	bl	800a1d8 <HAL_GetTick>
 800cb06:	4435      	add	r5, r6
 800cb08:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800cb0a:	f7fd fb65 	bl	800a1d8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800cb0e:	4b27      	ldr	r3, [pc, #156]	; (800cbac <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800cb10:	681b      	ldr	r3, [r3, #0]
 800cb12:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800cb16:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800cb1a:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800cb1c:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800cb1e:	1c73      	adds	r3, r6, #1
 800cb20:	6839      	ldr	r1, [r7, #0]
 800cb22:	d107      	bne.n	800cb34 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800cb24:	688b      	ldr	r3, [r1, #8]
 800cb26:	ea34 0303 	bics.w	r3, r4, r3
 800cb2a:	d0fb      	beq.n	800cb24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800cb2c:	2000      	movs	r0, #0
}
 800cb2e:	b002      	add	sp, #8
 800cb30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800cb34:	688b      	ldr	r3, [r1, #8]
 800cb36:	ea34 0303 	bics.w	r3, r4, r3
 800cb3a:	d1f7      	bne.n	800cb2c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800cb3c:	f7fd fb4c 	bl	800a1d8 <HAL_GetTick>
 800cb40:	eba0 0008 	sub.w	r0, r0, r8
 800cb44:	42a8      	cmp	r0, r5
 800cb46:	d208      	bcs.n	800cb5a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800cb48:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800cb4a:	2b00      	cmp	r3, #0
      count--;
 800cb4c:	9b01      	ldr	r3, [sp, #4]
 800cb4e:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800cb52:	bf08      	it	eq
 800cb54:	2500      	moveq	r5, #0
      count--;
 800cb56:	9301      	str	r3, [sp, #4]
 800cb58:	e7e1      	b.n	800cb1e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb5a:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800cb5e:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb60:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800cb64:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800cb68:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb6a:	d013      	beq.n	800cb94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800cb6c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800cb6e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800cb72:	d107      	bne.n	800cb84 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800cb74:	681a      	ldr	r2, [r3, #0]
 800cb76:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800cb7a:	601a      	str	r2, [r3, #0]
 800cb7c:	681a      	ldr	r2, [r3, #0]
 800cb7e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800cb82:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800cb84:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800cb86:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800cb88:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800cb8c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800cb90:	2003      	movs	r0, #3
 800cb92:	e7cc      	b.n	800cb2e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb94:	68ba      	ldr	r2, [r7, #8]
 800cb96:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800cb9a:	d002      	beq.n	800cba2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800cb9c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800cba0:	d1e4      	bne.n	800cb6c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800cba2:	681a      	ldr	r2, [r3, #0]
 800cba4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cba8:	601a      	str	r2, [r3, #0]
 800cbaa:	e7df      	b.n	800cb6c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800cbac:	20000078 	.word	0x20000078

0800cbb0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800cbb0:	b538      	push	{r3, r4, r5, lr}
 800cbb2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cbb4:	6842      	ldr	r2, [r0, #4]
 800cbb6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800cbba:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cbbc:	d006      	beq.n	800cbcc <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cbbe:	460a      	mov	r2, r1
 800cbc0:	2101      	movs	r1, #1
 800cbc2:	f7ff ff97 	bl	800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cbc6:	b978      	cbnz	r0, 800cbe8 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800cbc8:	2000      	movs	r0, #0
}
 800cbca:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cbcc:	6882      	ldr	r2, [r0, #8]
 800cbce:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800cbd2:	d01c      	beq.n	800cc0e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800cbd4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800cbd8:	d00c      	beq.n	800cbf4 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cbda:	460a      	mov	r2, r1
 800cbdc:	4620      	mov	r0, r4
 800cbde:	2180      	movs	r1, #128	; 0x80
 800cbe0:	f7ff ff88 	bl	800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cbe4:	2800      	cmp	r0, #0
 800cbe6:	d0ef      	beq.n	800cbc8 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cbe8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800cbea:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800cbee:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cbf0:	6563      	str	r3, [r4, #84]	; 0x54
}
 800cbf2:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800cbf4:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cbf6:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800cbf8:	6829      	ldr	r1, [r5, #0]
 800cbfa:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800cbfe:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cc00:	2101      	movs	r1, #1
 800cc02:	f7ff ff77 	bl	800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cc06:	2800      	cmp	r0, #0
 800cc08:	d1ee      	bne.n	800cbe8 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800cc0a:	2000      	movs	r0, #0
 800cc0c:	e7dd      	b.n	800cbca <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800cc0e:	6800      	ldr	r0, [r0, #0]
 800cc10:	6802      	ldr	r2, [r0, #0]
 800cc12:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cc16:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cc18:	460a      	mov	r2, r1
 800cc1a:	4620      	mov	r0, r4
 800cc1c:	2180      	movs	r1, #128	; 0x80
 800cc1e:	f7ff ff69 	bl	800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cc22:	2800      	cmp	r0, #0
 800cc24:	d0d0      	beq.n	800cbc8 <SPI_EndRxTransaction+0x18>
 800cc26:	e7df      	b.n	800cbe8 <SPI_EndRxTransaction+0x38>

0800cc28 <HAL_SPI_Init>:
  if (hspi == NULL)
 800cc28:	2800      	cmp	r0, #0
 800cc2a:	d05c      	beq.n	800cce6 <HAL_SPI_Init+0xbe>
{
 800cc2c:	b570      	push	{r4, r5, r6, lr}
 800cc2e:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800cc30:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800cc32:	2800      	cmp	r0, #0
 800cc34:	d047      	beq.n	800ccc6 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800cc36:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800cc38:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800cc3c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800cc40:	2200      	movs	r2, #0
 800cc42:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800cc44:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800cc48:	2b00      	cmp	r3, #0
 800cc4a:	d042      	beq.n	800ccd2 <HAL_SPI_Init+0xaa>
 800cc4c:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800cc4e:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cc50:	68a5      	ldr	r5, [r4, #8]
 800cc52:	69a2      	ldr	r2, [r4, #24]
 800cc54:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800cc56:	2302      	movs	r3, #2
 800cc58:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800cc5c:	680b      	ldr	r3, [r1, #0]
 800cc5e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cc62:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cc64:	6863      	ldr	r3, [r4, #4]
 800cc66:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800cc6a:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800cc6e:	432b      	orrs	r3, r5
 800cc70:	68e5      	ldr	r5, [r4, #12]
 800cc72:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800cc76:	432b      	orrs	r3, r5
 800cc78:	6925      	ldr	r5, [r4, #16]
 800cc7a:	f005 0502 	and.w	r5, r5, #2
 800cc7e:	432b      	orrs	r3, r5
 800cc80:	6965      	ldr	r5, [r4, #20]
 800cc82:	f005 0501 	and.w	r5, r5, #1
 800cc86:	432b      	orrs	r3, r5
 800cc88:	69e5      	ldr	r5, [r4, #28]
 800cc8a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800cc8e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800cc92:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800cc96:	4333      	orrs	r3, r6
 800cc98:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cc9a:	0c12      	lsrs	r2, r2, #16
 800cc9c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cca0:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cca4:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cca8:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ccac:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ccae:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ccb0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ccb2:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ccb4:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ccb6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800ccba:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ccbc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ccbe:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800ccc0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800ccc4:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ccc6:	6863      	ldr	r3, [r4, #4]
 800ccc8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cccc:	d0b6      	beq.n	800cc3c <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800ccce:	61e0      	str	r0, [r4, #28]
 800ccd0:	e7b4      	b.n	800cc3c <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800ccd2:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800ccd4:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800ccd8:	f7f5 fa12 	bl	8002100 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ccdc:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cce0:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800cce4:	e7b3      	b.n	800cc4e <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800cce6:	2001      	movs	r0, #1
}
 800cce8:	4770      	bx	lr
 800ccea:	bf00      	nop

0800ccec <HAL_SPI_Transmit>:
{
 800ccec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ccf0:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ccf2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ccf6:	2801      	cmp	r0, #1
{
 800ccf8:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800ccfa:	f000 8085 	beq.w	800ce08 <HAL_SPI_Transmit+0x11c>
 800ccfe:	461d      	mov	r5, r3
 800cd00:	2301      	movs	r3, #1
 800cd02:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cd06:	4688      	mov	r8, r1
 800cd08:	4617      	mov	r7, r2
 800cd0a:	f7fd fa65 	bl	800a1d8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cd0e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800cd12:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800cd14:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cd16:	b2d8      	uxtb	r0, r3
 800cd18:	d009      	beq.n	800cd2e <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800cd1a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cd1c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cd1e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cd20:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cd24:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cd28:	b002      	add	sp, #8
 800cd2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cd2e:	f1b8 0f00 	cmp.w	r8, #0
 800cd32:	d0f3      	beq.n	800cd1c <HAL_SPI_Transmit+0x30>
 800cd34:	2f00      	cmp	r7, #0
 800cd36:	d0f1      	beq.n	800cd1c <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cd38:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800cd3a:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800cd3c:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cd40:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cd42:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cd44:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cd48:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800cd4c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cd50:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800cd52:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800cd54:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800cd56:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800cd58:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800cd5a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cd5c:	f000 8085 	beq.w	800ce6a <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd60:	6803      	ldr	r3, [r0, #0]
 800cd62:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800cd64:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd66:	d403      	bmi.n	800cd70 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800cd68:	6803      	ldr	r3, [r0, #0]
 800cd6a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cd6e:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cd70:	68e3      	ldr	r3, [r4, #12]
 800cd72:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cd76:	d04b      	beq.n	800ce10 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd78:	6863      	ldr	r3, [r4, #4]
 800cd7a:	2b00      	cmp	r3, #0
 800cd7c:	f000 8097 	beq.w	800ceae <HAL_SPI_Transmit+0x1c2>
 800cd80:	2f01      	cmp	r7, #1
 800cd82:	f000 8094 	beq.w	800ceae <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800cd86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd88:	b29b      	uxth	r3, r3
 800cd8a:	b1ab      	cbz	r3, 800cdb8 <HAL_SPI_Transmit+0xcc>
 800cd8c:	1c68      	adds	r0, r5, #1
 800cd8e:	f040 8083 	bne.w	800ce98 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cd92:	6823      	ldr	r3, [r4, #0]
 800cd94:	689a      	ldr	r2, [r3, #8]
 800cd96:	0791      	lsls	r1, r2, #30
 800cd98:	f140 8094 	bpl.w	800cec4 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cd9c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cd9e:	7812      	ldrb	r2, [r2, #0]
 800cda0:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cda2:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cda4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cda6:	3901      	subs	r1, #1
 800cda8:	b289      	uxth	r1, r1
 800cdaa:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cdac:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cdae:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800cdb0:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cdb2:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800cdb4:	2900      	cmp	r1, #0
 800cdb6:	d1ec      	bne.n	800cd92 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cdb8:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cdba:	4b5b      	ldr	r3, [pc, #364]	; (800cf28 <HAL_SPI_Transmit+0x23c>)
 800cdbc:	4a5b      	ldr	r2, [pc, #364]	; (800cf2c <HAL_SPI_Transmit+0x240>)
 800cdbe:	681b      	ldr	r3, [r3, #0]
 800cdc0:	fba2 2303 	umull	r2, r3, r2, r3
 800cdc4:	0d5b      	lsrs	r3, r3, #21
 800cdc6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cdca:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cdce:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cdd2:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cdd4:	d107      	bne.n	800cde6 <HAL_SPI_Transmit+0xfa>
 800cdd6:	e098      	b.n	800cf0a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800cdd8:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cdda:	6822      	ldr	r2, [r4, #0]
      count--;
 800cddc:	3b01      	subs	r3, #1
 800cdde:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cde0:	6893      	ldr	r3, [r2, #8]
 800cde2:	061b      	lsls	r3, r3, #24
 800cde4:	d502      	bpl.n	800cdec <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800cde6:	9b01      	ldr	r3, [sp, #4]
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	d1f5      	bne.n	800cdd8 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cdec:	68a3      	ldr	r3, [r4, #8]
 800cdee:	b933      	cbnz	r3, 800cdfe <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cdf0:	6822      	ldr	r2, [r4, #0]
 800cdf2:	9300      	str	r3, [sp, #0]
 800cdf4:	68d3      	ldr	r3, [r2, #12]
 800cdf6:	9300      	str	r3, [sp, #0]
 800cdf8:	6893      	ldr	r3, [r2, #8]
 800cdfa:	9300      	str	r3, [sp, #0]
 800cdfc:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cdfe:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ce00:	3800      	subs	r0, #0
 800ce02:	bf18      	it	ne
 800ce04:	2001      	movne	r0, #1
error:
 800ce06:	e789      	b.n	800cd1c <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800ce08:	2002      	movs	r0, #2
}
 800ce0a:	b002      	add	sp, #8
 800ce0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ce10:	6861      	ldr	r1, [r4, #4]
 800ce12:	2900      	cmp	r1, #0
 800ce14:	d176      	bne.n	800cf04 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ce16:	4643      	mov	r3, r8
 800ce18:	f833 7b02 	ldrh.w	r7, [r3], #2
 800ce1c:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ce1e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ce20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce22:	3b01      	subs	r3, #1
 800ce24:	b29b      	uxth	r3, r3
 800ce26:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ce28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce2a:	b29b      	uxth	r3, r3
 800ce2c:	2b00      	cmp	r3, #0
 800ce2e:	d0c4      	beq.n	800cdba <HAL_SPI_Transmit+0xce>
 800ce30:	1c6b      	adds	r3, r5, #1
 800ce32:	d15e      	bne.n	800cef2 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ce34:	6883      	ldr	r3, [r0, #8]
 800ce36:	079f      	lsls	r7, r3, #30
 800ce38:	d50f      	bpl.n	800ce5a <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ce3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ce3c:	f832 3b02 	ldrh.w	r3, [r2], #2
 800ce40:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800ce42:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ce44:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce46:	3b01      	subs	r3, #1
 800ce48:	b29b      	uxth	r3, r3
 800ce4a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ce4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce4e:	b29b      	uxth	r3, r3
 800ce50:	2b00      	cmp	r3, #0
 800ce52:	d0b1      	beq.n	800cdb8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ce54:	6883      	ldr	r3, [r0, #8]
 800ce56:	079f      	lsls	r7, r3, #30
 800ce58:	d4ef      	bmi.n	800ce3a <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ce5a:	f7fd f9bd 	bl	800a1d8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ce5e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce60:	b29b      	uxth	r3, r3
 800ce62:	2b00      	cmp	r3, #0
 800ce64:	d0a8      	beq.n	800cdb8 <HAL_SPI_Transmit+0xcc>
 800ce66:	6820      	ldr	r0, [r4, #0]
 800ce68:	e7e4      	b.n	800ce34 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800ce6a:	6803      	ldr	r3, [r0, #0]
 800ce6c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ce70:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800ce72:	6803      	ldr	r3, [r0, #0]
 800ce74:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800ce78:	6003      	str	r3, [r0, #0]
 800ce7a:	e771      	b.n	800cd60 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ce7c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ce7e:	7812      	ldrb	r2, [r2, #0]
 800ce80:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ce82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce84:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce86:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce88:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ce8a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce8c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce8e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ce90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce92:	b29b      	uxth	r3, r3
 800ce94:	2b00      	cmp	r3, #0
 800ce96:	d08f      	beq.n	800cdb8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ce98:	6823      	ldr	r3, [r4, #0]
 800ce9a:	689a      	ldr	r2, [r3, #8]
 800ce9c:	0792      	lsls	r2, r2, #30
 800ce9e:	d4ed      	bmi.n	800ce7c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cea0:	f7fd f99a 	bl	800a1d8 <HAL_GetTick>
 800cea4:	1b80      	subs	r0, r0, r6
 800cea6:	42a8      	cmp	r0, r5
 800cea8:	d3f2      	bcc.n	800ce90 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ceaa:	2003      	movs	r0, #3
 800ceac:	e736      	b.n	800cd1c <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ceae:	f898 3000 	ldrb.w	r3, [r8]
 800ceb2:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ceb4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ceb6:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ceb8:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ceba:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cebc:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cebe:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cec0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cec2:	e760      	b.n	800cd86 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cec4:	f7fd f988 	bl	800a1d8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cec8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ceca:	b29b      	uxth	r3, r3
 800cecc:	2b00      	cmp	r3, #0
 800cece:	f47f af60 	bne.w	800cd92 <HAL_SPI_Transmit+0xa6>
 800ced2:	e771      	b.n	800cdb8 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ced4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ced6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ceda:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cedc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cede:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cee0:	3b01      	subs	r3, #1
 800cee2:	b29b      	uxth	r3, r3
 800cee4:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cee6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cee8:	b29b      	uxth	r3, r3
 800ceea:	2b00      	cmp	r3, #0
 800ceec:	f43f af64 	beq.w	800cdb8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cef0:	6822      	ldr	r2, [r4, #0]
 800cef2:	6893      	ldr	r3, [r2, #8]
 800cef4:	0799      	lsls	r1, r3, #30
 800cef6:	d4ed      	bmi.n	800ced4 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cef8:	f7fd f96e 	bl	800a1d8 <HAL_GetTick>
 800cefc:	1b80      	subs	r0, r0, r6
 800cefe:	42a8      	cmp	r0, r5
 800cf00:	d3f1      	bcc.n	800cee6 <HAL_SPI_Transmit+0x1fa>
 800cf02:	e7d2      	b.n	800ceaa <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cf04:	2f01      	cmp	r7, #1
 800cf06:	d18f      	bne.n	800ce28 <HAL_SPI_Transmit+0x13c>
 800cf08:	e785      	b.n	800ce16 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cf0a:	4633      	mov	r3, r6
 800cf0c:	462a      	mov	r2, r5
 800cf0e:	2180      	movs	r1, #128	; 0x80
 800cf10:	4620      	mov	r0, r4
 800cf12:	f7ff fdef 	bl	800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cf16:	2800      	cmp	r0, #0
 800cf18:	f43f af68 	beq.w	800cdec <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cf1c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cf1e:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cf20:	4313      	orrs	r3, r2
 800cf22:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cf24:	6562      	str	r2, [r4, #84]	; 0x54
 800cf26:	e761      	b.n	800cdec <HAL_SPI_Transmit+0x100>
 800cf28:	20000078 	.word	0x20000078
 800cf2c:	165e9f81 	.word	0x165e9f81

0800cf30 <HAL_SPI_TransmitReceive>:
{
 800cf30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf34:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cf36:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cf3a:	2801      	cmp	r0, #1
{
 800cf3c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cf3e:	f000 80ac 	beq.w	800d09a <HAL_SPI_TransmitReceive+0x16a>
 800cf42:	461e      	mov	r6, r3
 800cf44:	2301      	movs	r3, #1
 800cf46:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cf4a:	4690      	mov	r8, r2
 800cf4c:	460f      	mov	r7, r1
 800cf4e:	f7fd f943 	bl	800a1d8 <HAL_GetTick>
 800cf52:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cf54:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cf58:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cf5a:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cf5c:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cf5e:	d011      	beq.n	800cf84 <HAL_SPI_TransmitReceive+0x54>
 800cf60:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cf64:	d009      	beq.n	800cf7a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cf66:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cf68:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cf6a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cf6c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cf70:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cf74:	b002      	add	sp, #8
 800cf76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cf7a:	68a1      	ldr	r1, [r4, #8]
 800cf7c:	2900      	cmp	r1, #0
 800cf7e:	d1f2      	bne.n	800cf66 <HAL_SPI_TransmitReceive+0x36>
 800cf80:	2a04      	cmp	r2, #4
 800cf82:	d1f0      	bne.n	800cf66 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cf84:	2f00      	cmp	r7, #0
 800cf86:	f000 808c 	beq.w	800d0a2 <HAL_SPI_TransmitReceive+0x172>
 800cf8a:	f1b8 0f00 	cmp.w	r8, #0
 800cf8e:	f000 8088 	beq.w	800d0a2 <HAL_SPI_TransmitReceive+0x172>
 800cf92:	2e00      	cmp	r6, #0
 800cf94:	f000 8085 	beq.w	800d0a2 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cf98:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cf9c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cfa0:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cfa2:	bf1c      	itt	ne
 800cfa4:	2205      	movne	r2, #5
 800cfa6:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cfaa:	2200      	movs	r2, #0
 800cfac:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cfae:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cfb2:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cfb4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cfb6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cfb8:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cfba:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cfbc:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cfbe:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cfc0:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cfc2:	d403      	bmi.n	800cfcc <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cfc4:	6811      	ldr	r1, [r2, #0]
 800cfc6:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cfca:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cfcc:	68e1      	ldr	r1, [r4, #12]
 800cfce:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cfd2:	f000 809e 	beq.w	800d112 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cfd6:	2b00      	cmp	r3, #0
 800cfd8:	f000 8091 	beq.w	800d0fe <HAL_SPI_TransmitReceive+0x1ce>
 800cfdc:	2e01      	cmp	r6, #1
 800cfde:	f000 808e 	beq.w	800d0fe <HAL_SPI_TransmitReceive+0x1ce>
 800cfe2:	9b08      	ldr	r3, [sp, #32]
 800cfe4:	3301      	adds	r3, #1
        txallowed = 1U;
 800cfe6:	f04f 0601 	mov.w	r6, #1
 800cfea:	d028      	beq.n	800d03e <HAL_SPI_TransmitReceive+0x10e>
 800cfec:	e05b      	b.n	800d0a6 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cfee:	6821      	ldr	r1, [r4, #0]
 800cff0:	688b      	ldr	r3, [r1, #8]
 800cff2:	0798      	lsls	r0, r3, #30
 800cff4:	d50f      	bpl.n	800d016 <HAL_SPI_TransmitReceive+0xe6>
 800cff6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cff8:	b29b      	uxth	r3, r3
 800cffa:	b163      	cbz	r3, 800d016 <HAL_SPI_TransmitReceive+0xe6>
 800cffc:	b15e      	cbz	r6, 800d016 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cffe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d000:	781b      	ldrb	r3, [r3, #0]
 800d002:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800d004:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d006:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d008:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800d00a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800d00c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800d00e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800d010:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800d012:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d014:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d016:	688a      	ldr	r2, [r1, #8]
 800d018:	f012 0201 	ands.w	r2, r2, #1
 800d01c:	d00d      	beq.n	800d03a <HAL_SPI_TransmitReceive+0x10a>
 800d01e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d020:	b29b      	uxth	r3, r3
 800d022:	b153      	cbz	r3, 800d03a <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d024:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d026:	68c9      	ldr	r1, [r1, #12]
 800d028:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800d02a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800d02c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d02e:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800d030:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800d032:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800d034:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d036:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800d038:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800d03a:	f7fd f8cd 	bl	800a1d8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d03e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d040:	b292      	uxth	r2, r2
 800d042:	2a00      	cmp	r2, #0
 800d044:	d1d3      	bne.n	800cfee <HAL_SPI_TransmitReceive+0xbe>
 800d046:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d048:	b29b      	uxth	r3, r3
 800d04a:	2b00      	cmp	r3, #0
 800d04c:	d1cf      	bne.n	800cfee <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d04e:	4b79      	ldr	r3, [pc, #484]	; (800d234 <HAL_SPI_TransmitReceive+0x304>)
 800d050:	4a79      	ldr	r2, [pc, #484]	; (800d238 <HAL_SPI_TransmitReceive+0x308>)
 800d052:	681b      	ldr	r3, [r3, #0]
 800d054:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d058:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d05a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d05e:	0d5b      	lsrs	r3, r3, #21
 800d060:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d064:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d068:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d06a:	d107      	bne.n	800d07c <HAL_SPI_TransmitReceive+0x14c>
 800d06c:	e0d2      	b.n	800d214 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800d06e:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d070:	6822      	ldr	r2, [r4, #0]
      count--;
 800d072:	3b01      	subs	r3, #1
 800d074:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d076:	6893      	ldr	r3, [r2, #8]
 800d078:	061b      	lsls	r3, r3, #24
 800d07a:	d502      	bpl.n	800d082 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800d07c:	9b01      	ldr	r3, [sp, #4]
 800d07e:	2b00      	cmp	r3, #0
 800d080:	d1f5      	bne.n	800d06e <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800d082:	68a0      	ldr	r0, [r4, #8]
 800d084:	2800      	cmp	r0, #0
 800d086:	f040 8082 	bne.w	800d18e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800d08a:	6823      	ldr	r3, [r4, #0]
 800d08c:	9000      	str	r0, [sp, #0]
 800d08e:	68da      	ldr	r2, [r3, #12]
 800d090:	9200      	str	r2, [sp, #0]
 800d092:	689b      	ldr	r3, [r3, #8]
 800d094:	9300      	str	r3, [sp, #0]
 800d096:	9b00      	ldr	r3, [sp, #0]
 800d098:	e766      	b.n	800cf68 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800d09a:	2002      	movs	r0, #2
}
 800d09c:	b002      	add	sp, #8
 800d09e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800d0a2:	2001      	movs	r0, #1
 800d0a4:	e760      	b.n	800cf68 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d0a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d0a8:	b29b      	uxth	r3, r3
 800d0aa:	b91b      	cbnz	r3, 800d0b4 <HAL_SPI_TransmitReceive+0x184>
 800d0ac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d0ae:	b29b      	uxth	r3, r3
 800d0b0:	2b00      	cmp	r3, #0
 800d0b2:	d0cc      	beq.n	800d04e <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d0b4:	6822      	ldr	r2, [r4, #0]
 800d0b6:	6893      	ldr	r3, [r2, #8]
 800d0b8:	0799      	lsls	r1, r3, #30
 800d0ba:	d50f      	bpl.n	800d0dc <HAL_SPI_TransmitReceive+0x1ac>
 800d0bc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d0be:	b29b      	uxth	r3, r3
 800d0c0:	b163      	cbz	r3, 800d0dc <HAL_SPI_TransmitReceive+0x1ac>
 800d0c2:	b15e      	cbz	r6, 800d0dc <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800d0c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d0c6:	781b      	ldrb	r3, [r3, #0]
 800d0c8:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800d0ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d0cc:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d0ce:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800d0d0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800d0d2:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800d0d4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d0d6:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800d0d8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d0da:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d0dc:	6893      	ldr	r3, [r2, #8]
 800d0de:	f013 0301 	ands.w	r3, r3, #1
 800d0e2:	d004      	beq.n	800d0ee <HAL_SPI_TransmitReceive+0x1be>
 800d0e4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d0e6:	b289      	uxth	r1, r1
 800d0e8:	2900      	cmp	r1, #0
 800d0ea:	f040 8087 	bne.w	800d1fc <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800d0ee:	f7fd f873 	bl	800a1d8 <HAL_GetTick>
 800d0f2:	9b08      	ldr	r3, [sp, #32]
 800d0f4:	1b40      	subs	r0, r0, r5
 800d0f6:	4298      	cmp	r0, r3
 800d0f8:	d3d5      	bcc.n	800d0a6 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800d0fa:	2003      	movs	r0, #3
 800d0fc:	e734      	b.n	800cf68 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800d0fe:	783b      	ldrb	r3, [r7, #0]
 800d100:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800d102:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d104:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d106:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d108:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800d10a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d10c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d10e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d110:	e767      	b.n	800cfe2 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d112:	2b00      	cmp	r3, #0
 800d114:	d13d      	bne.n	800d192 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d116:	f837 3b02 	ldrh.w	r3, [r7], #2
 800d11a:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800d11c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d11e:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d120:	3b01      	subs	r3, #1
 800d122:	b29b      	uxth	r3, r3
 800d124:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d126:	9b08      	ldr	r3, [sp, #32]
 800d128:	3301      	adds	r3, #1
{
 800d12a:	f04f 0601 	mov.w	r6, #1
 800d12e:	d025      	beq.n	800d17c <HAL_SPI_TransmitReceive+0x24c>
 800d130:	e032      	b.n	800d198 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d132:	6823      	ldr	r3, [r4, #0]
 800d134:	689a      	ldr	r2, [r3, #8]
 800d136:	0792      	lsls	r2, r2, #30
 800d138:	d50d      	bpl.n	800d156 <HAL_SPI_TransmitReceive+0x226>
 800d13a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d13c:	b292      	uxth	r2, r2
 800d13e:	b152      	cbz	r2, 800d156 <HAL_SPI_TransmitReceive+0x226>
 800d140:	b14e      	cbz	r6, 800d156 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d142:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d144:	f831 2b02 	ldrh.w	r2, [r1], #2
 800d148:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800d14a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d14c:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d14e:	3a01      	subs	r2, #1
 800d150:	b292      	uxth	r2, r2
        txallowed = 0U;
 800d152:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800d154:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d156:	689a      	ldr	r2, [r3, #8]
 800d158:	f012 0201 	ands.w	r2, r2, #1
 800d15c:	d00c      	beq.n	800d178 <HAL_SPI_TransmitReceive+0x248>
 800d15e:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d160:	b289      	uxth	r1, r1
 800d162:	b149      	cbz	r1, 800d178 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d164:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d166:	68db      	ldr	r3, [r3, #12]
 800d168:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800d16c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d16e:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d170:	3b01      	subs	r3, #1
 800d172:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800d174:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800d176:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d178:	f7fd f82e 	bl	800a1d8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d17c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d17e:	b29b      	uxth	r3, r3
 800d180:	2b00      	cmp	r3, #0
 800d182:	d1d6      	bne.n	800d132 <HAL_SPI_TransmitReceive+0x202>
 800d184:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d186:	b29b      	uxth	r3, r3
 800d188:	2b00      	cmp	r3, #0
 800d18a:	d1d2      	bne.n	800d132 <HAL_SPI_TransmitReceive+0x202>
 800d18c:	e75f      	b.n	800d04e <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800d18e:	2000      	movs	r0, #0
 800d190:	e6ea      	b.n	800cf68 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d192:	2e01      	cmp	r6, #1
 800d194:	d1c7      	bne.n	800d126 <HAL_SPI_TransmitReceive+0x1f6>
 800d196:	e7be      	b.n	800d116 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d198:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d19a:	b29b      	uxth	r3, r3
 800d19c:	b923      	cbnz	r3, 800d1a8 <HAL_SPI_TransmitReceive+0x278>
 800d19e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d1a0:	b29b      	uxth	r3, r3
 800d1a2:	2b00      	cmp	r3, #0
 800d1a4:	f43f af53 	beq.w	800d04e <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d1a8:	6822      	ldr	r2, [r4, #0]
 800d1aa:	6893      	ldr	r3, [r2, #8]
 800d1ac:	079f      	lsls	r7, r3, #30
 800d1ae:	d50d      	bpl.n	800d1cc <HAL_SPI_TransmitReceive+0x29c>
 800d1b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d1b2:	b29b      	uxth	r3, r3
 800d1b4:	b153      	cbz	r3, 800d1cc <HAL_SPI_TransmitReceive+0x29c>
 800d1b6:	b14e      	cbz	r6, 800d1cc <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d1b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d1ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 800d1be:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800d1c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d1c2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d1c4:	3b01      	subs	r3, #1
 800d1c6:	b29b      	uxth	r3, r3
 800d1c8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d1ca:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d1cc:	6893      	ldr	r3, [r2, #8]
 800d1ce:	f013 0301 	ands.w	r3, r3, #1
 800d1d2:	d00c      	beq.n	800d1ee <HAL_SPI_TransmitReceive+0x2be>
 800d1d4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d1d6:	b289      	uxth	r1, r1
 800d1d8:	b149      	cbz	r1, 800d1ee <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d1da:	68d1      	ldr	r1, [r2, #12]
 800d1dc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d1de:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800d1e2:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800d1e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d1e6:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d1e8:	3b01      	subs	r3, #1
 800d1ea:	b29b      	uxth	r3, r3
 800d1ec:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d1ee:	f7fc fff3 	bl	800a1d8 <HAL_GetTick>
 800d1f2:	9b08      	ldr	r3, [sp, #32]
 800d1f4:	1b40      	subs	r0, r0, r5
 800d1f6:	4298      	cmp	r0, r3
 800d1f8:	d3ce      	bcc.n	800d198 <HAL_SPI_TransmitReceive+0x268>
 800d1fa:	e77e      	b.n	800d0fa <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d1fc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d1fe:	68d2      	ldr	r2, [r2, #12]
 800d200:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800d202:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800d204:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d206:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800d208:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800d20a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800d20c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d20e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800d210:	461e      	mov	r6, r3
 800d212:	e76c      	b.n	800d0ee <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d214:	9a08      	ldr	r2, [sp, #32]
 800d216:	462b      	mov	r3, r5
 800d218:	2180      	movs	r1, #128	; 0x80
 800d21a:	4620      	mov	r0, r4
 800d21c:	f7ff fc6a 	bl	800caf4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d220:	2800      	cmp	r0, #0
 800d222:	f43f af2e 	beq.w	800d082 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d226:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d228:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d22a:	4313      	orrs	r3, r2
 800d22c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800d22e:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d230:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800d232:	e699      	b.n	800cf68 <HAL_SPI_TransmitReceive+0x38>
 800d234:	20000078 	.word	0x20000078
 800d238:	165e9f81 	.word	0x165e9f81

0800d23c <HAL_SPI_Receive>:
{
 800d23c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d240:	6846      	ldr	r6, [r0, #4]
 800d242:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800d246:	b082      	sub	sp, #8
 800d248:	4604      	mov	r4, r0
 800d24a:	4690      	mov	r8, r2
 800d24c:	461d      	mov	r5, r3
 800d24e:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d250:	d06e      	beq.n	800d330 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800d252:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800d256:	2b01      	cmp	r3, #1
 800d258:	d076      	beq.n	800d348 <HAL_SPI_Receive+0x10c>
 800d25a:	2301      	movs	r3, #1
 800d25c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d260:	f7fc ffba 	bl	800a1d8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d264:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800d268:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800d26c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d26e:	fa5f f08c 	uxtb.w	r0, ip
 800d272:	d009      	beq.n	800d288 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800d274:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d276:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d278:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d27a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d27e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d282:	b002      	add	sp, #8
 800d284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d288:	2f00      	cmp	r7, #0
 800d28a:	d0f4      	beq.n	800d276 <HAL_SPI_Receive+0x3a>
 800d28c:	f1b8 0f00 	cmp.w	r8, #0
 800d290:	d0f1      	beq.n	800d276 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d292:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d294:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d296:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800d29a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800d29c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d2a0:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d2a4:	f04f 0104 	mov.w	r1, #4
 800d2a8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800d2ac:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d2b0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d2b2:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800d2b4:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800d2b6:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800d2ba:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800d2bc:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d2be:	d107      	bne.n	800d2d0 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800d2c0:	6811      	ldr	r1, [r2, #0]
 800d2c2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d2c6:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800d2c8:	6811      	ldr	r1, [r2, #0]
 800d2ca:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800d2ce:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d2d0:	6811      	ldr	r1, [r2, #0]
 800d2d2:	0648      	lsls	r0, r1, #25
 800d2d4:	d403      	bmi.n	800d2de <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800d2d6:	6811      	ldr	r1, [r2, #0]
 800d2d8:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d2dc:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d2de:	68e1      	ldr	r1, [r4, #12]
 800d2e0:	2900      	cmp	r1, #0
 800d2e2:	d054      	beq.n	800d38e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800d2e4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d2e6:	b289      	uxth	r1, r1
 800d2e8:	b1a9      	cbz	r1, 800d316 <HAL_SPI_Receive+0xda>
 800d2ea:	1c69      	adds	r1, r5, #1
 800d2ec:	d13e      	bne.n	800d36c <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d2ee:	6893      	ldr	r3, [r2, #8]
 800d2f0:	07db      	lsls	r3, r3, #31
 800d2f2:	d544      	bpl.n	800d37e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d2f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d2f6:	68d1      	ldr	r1, [r2, #12]
 800d2f8:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800d2fc:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d300:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d302:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d306:	fa1f fc8c 	uxth.w	ip, ip
 800d30a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d30e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d310:	b29b      	uxth	r3, r3
 800d312:	2b00      	cmp	r3, #0
 800d314:	d1eb      	bne.n	800d2ee <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d316:	4632      	mov	r2, r6
 800d318:	4629      	mov	r1, r5
 800d31a:	4620      	mov	r0, r4
 800d31c:	f7ff fc48 	bl	800cbb0 <SPI_EndRxTransaction>
 800d320:	b108      	cbz	r0, 800d326 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d322:	2320      	movs	r3, #32
 800d324:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d326:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d328:	3800      	subs	r0, #0
 800d32a:	bf18      	it	ne
 800d32c:	2001      	movne	r0, #1
error :
 800d32e:	e7a2      	b.n	800d276 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d330:	6883      	ldr	r3, [r0, #8]
 800d332:	2b00      	cmp	r3, #0
 800d334:	d18d      	bne.n	800d252 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d336:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d338:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d33a:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d33c:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d340:	460a      	mov	r2, r1
 800d342:	f7ff fdf5 	bl	800cf30 <HAL_SPI_TransmitReceive>
 800d346:	e79c      	b.n	800d282 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800d348:	2002      	movs	r0, #2
}
 800d34a:	b002      	add	sp, #8
 800d34c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d350:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d352:	68db      	ldr	r3, [r3, #12]
 800d354:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800d358:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d35a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d35c:	3b01      	subs	r3, #1
 800d35e:	b29b      	uxth	r3, r3
 800d360:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d362:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d364:	b29b      	uxth	r3, r3
 800d366:	2b00      	cmp	r3, #0
 800d368:	d0d5      	beq.n	800d316 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d36a:	6823      	ldr	r3, [r4, #0]
 800d36c:	689a      	ldr	r2, [r3, #8]
 800d36e:	07d2      	lsls	r2, r2, #31
 800d370:	d4ee      	bmi.n	800d350 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d372:	f7fc ff31 	bl	800a1d8 <HAL_GetTick>
 800d376:	1b80      	subs	r0, r0, r6
 800d378:	42a8      	cmp	r0, r5
 800d37a:	d243      	bcs.n	800d404 <HAL_SPI_Receive+0x1c8>
 800d37c:	e7f1      	b.n	800d362 <HAL_SPI_Receive+0x126>
 800d37e:	f7fc ff2b 	bl	800a1d8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d382:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d384:	b29b      	uxth	r3, r3
 800d386:	2b00      	cmp	r3, #0
 800d388:	d0c5      	beq.n	800d316 <HAL_SPI_Receive+0xda>
 800d38a:	6822      	ldr	r2, [r4, #0]
 800d38c:	e7af      	b.n	800d2ee <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800d38e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d390:	b292      	uxth	r2, r2
 800d392:	2a00      	cmp	r2, #0
 800d394:	d0bf      	beq.n	800d316 <HAL_SPI_Receive+0xda>
 800d396:	1c6f      	adds	r7, r5, #1
 800d398:	d013      	beq.n	800d3c2 <HAL_SPI_Receive+0x186>
 800d39a:	e02b      	b.n	800d3f4 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d39c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d39e:	7b1b      	ldrb	r3, [r3, #12]
 800d3a0:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d3a2:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d3a6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d3a8:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d3ac:	fa1f fc8c 	uxth.w	ip, ip
 800d3b0:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d3b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d3b6:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d3b8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d3ba:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d3bc:	2b00      	cmp	r3, #0
 800d3be:	d0aa      	beq.n	800d316 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d3c0:	6823      	ldr	r3, [r4, #0]
 800d3c2:	689a      	ldr	r2, [r3, #8]
 800d3c4:	07d0      	lsls	r0, r2, #31
 800d3c6:	d4e9      	bmi.n	800d39c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d3c8:	f7fc ff06 	bl	800a1d8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d3cc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d3ce:	b29b      	uxth	r3, r3
 800d3d0:	2b00      	cmp	r3, #0
 800d3d2:	d1f5      	bne.n	800d3c0 <HAL_SPI_Receive+0x184>
 800d3d4:	e79f      	b.n	800d316 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d3d6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d3d8:	7b1b      	ldrb	r3, [r3, #12]
 800d3da:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d3dc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d3de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d3e0:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d3e2:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d3e4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d3e6:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d3e8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d3ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d3ec:	b29b      	uxth	r3, r3
 800d3ee:	2b00      	cmp	r3, #0
 800d3f0:	d091      	beq.n	800d316 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d3f2:	6823      	ldr	r3, [r4, #0]
 800d3f4:	689a      	ldr	r2, [r3, #8]
 800d3f6:	07d1      	lsls	r1, r2, #31
 800d3f8:	d4ed      	bmi.n	800d3d6 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d3fa:	f7fc feed 	bl	800a1d8 <HAL_GetTick>
 800d3fe:	1b80      	subs	r0, r0, r6
 800d400:	42a8      	cmp	r0, r5
 800d402:	d3f2      	bcc.n	800d3ea <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d404:	2003      	movs	r0, #3
 800d406:	e736      	b.n	800d276 <HAL_SPI_Receive+0x3a>

0800d408 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d408:	2800      	cmp	r0, #0
 800d40a:	f000 8087 	beq.w	800d51c <HAL_TIM_Base_Init+0x114>
{
 800d40e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d410:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d414:	4604      	mov	r4, r0
 800d416:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d41a:	2b00      	cmp	r3, #0
 800d41c:	d079      	beq.n	800d512 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d41e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d420:	493f      	ldr	r1, [pc, #252]	; (800d520 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d422:	2302      	movs	r3, #2
 800d424:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d428:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d42a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d42c:	d05d      	beq.n	800d4ea <HAL_TIM_Base_Init+0xe2>
 800d42e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d432:	d031      	beq.n	800d498 <HAL_TIM_Base_Init+0x90>
 800d434:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d438:	428a      	cmp	r2, r1
 800d43a:	d02d      	beq.n	800d498 <HAL_TIM_Base_Init+0x90>
 800d43c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d440:	428a      	cmp	r2, r1
 800d442:	d029      	beq.n	800d498 <HAL_TIM_Base_Init+0x90>
 800d444:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d448:	428a      	cmp	r2, r1
 800d44a:	d025      	beq.n	800d498 <HAL_TIM_Base_Init+0x90>
 800d44c:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d450:	428a      	cmp	r2, r1
 800d452:	d04a      	beq.n	800d4ea <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d454:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d458:	428a      	cmp	r2, r1
 800d45a:	d021      	beq.n	800d4a0 <HAL_TIM_Base_Init+0x98>
 800d45c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d460:	428a      	cmp	r2, r1
 800d462:	d01d      	beq.n	800d4a0 <HAL_TIM_Base_Init+0x98>
 800d464:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d468:	428a      	cmp	r2, r1
 800d46a:	d019      	beq.n	800d4a0 <HAL_TIM_Base_Init+0x98>
 800d46c:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d470:	428a      	cmp	r2, r1
 800d472:	d015      	beq.n	800d4a0 <HAL_TIM_Base_Init+0x98>
 800d474:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d478:	428a      	cmp	r2, r1
 800d47a:	d011      	beq.n	800d4a0 <HAL_TIM_Base_Init+0x98>
 800d47c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d480:	428a      	cmp	r2, r1
 800d482:	d00d      	beq.n	800d4a0 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d484:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d486:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d488:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d48c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d48e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d490:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d492:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d494:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d496:	e010      	b.n	800d4ba <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d498:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d49a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d49e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d4a0:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d4a2:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d4a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d4a8:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d4aa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d4ae:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d4b0:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d4b2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d4b4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d4b6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d4b8:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d4ba:	2301      	movs	r3, #1
 800d4bc:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d4be:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d4c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d4c6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d4ca:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d4ce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d4d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d4d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d4da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d4de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d4e2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d4e6:	2000      	movs	r0, #0
}
 800d4e8:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d4ea:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d4ec:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d4ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d4f2:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d4f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d4f8:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d4fa:	69a1      	ldr	r1, [r4, #24]
 800d4fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d500:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d502:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d504:	68e3      	ldr	r3, [r4, #12]
 800d506:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d508:	6863      	ldr	r3, [r4, #4]
 800d50a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d50c:	6963      	ldr	r3, [r4, #20]
 800d50e:	6313      	str	r3, [r2, #48]	; 0x30
 800d510:	e7d3      	b.n	800d4ba <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d512:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d516:	f7f4 fe2f 	bl	8002178 <HAL_TIM_Base_MspInit>
 800d51a:	e780      	b.n	800d41e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d51c:	2001      	movs	r0, #1
}
 800d51e:	4770      	bx	lr
 800d520:	40010000 	.word	0x40010000

0800d524 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d524:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d528:	2b01      	cmp	r3, #1
 800d52a:	d12f      	bne.n	800d58c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d52c:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d52e:	4919      	ldr	r1, [pc, #100]	; (800d594 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d530:	2202      	movs	r2, #2
 800d532:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d536:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d538:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d53a:	f042 0201 	orr.w	r2, r2, #1
 800d53e:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d540:	d019      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d542:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d546:	d016      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d548:	4a13      	ldr	r2, [pc, #76]	; (800d598 <HAL_TIM_Base_Start_IT+0x74>)
 800d54a:	4293      	cmp	r3, r2
 800d54c:	d013      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d54e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d552:	4293      	cmp	r3, r2
 800d554:	d00f      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d556:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d55a:	4293      	cmp	r3, r2
 800d55c:	d00b      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d55e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d562:	4293      	cmp	r3, r2
 800d564:	d007      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d566:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d56a:	4293      	cmp	r3, r2
 800d56c:	d003      	beq.n	800d576 <HAL_TIM_Base_Start_IT+0x52>
 800d56e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d572:	4293      	cmp	r3, r2
 800d574:	d104      	bne.n	800d580 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d576:	689a      	ldr	r2, [r3, #8]
 800d578:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d57c:	2a06      	cmp	r2, #6
 800d57e:	d007      	beq.n	800d590 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d580:	681a      	ldr	r2, [r3, #0]
 800d582:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d586:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d588:	601a      	str	r2, [r3, #0]
 800d58a:	4770      	bx	lr
    return HAL_ERROR;
 800d58c:	2001      	movs	r0, #1
 800d58e:	4770      	bx	lr
  return HAL_OK;
 800d590:	2000      	movs	r0, #0
}
 800d592:	4770      	bx	lr
 800d594:	40010000 	.word	0x40010000
 800d598:	40000400 	.word	0x40000400

0800d59c <HAL_TIM_OC_DelayElapsedCallback>:
 800d59c:	4770      	bx	lr
 800d59e:	bf00      	nop

0800d5a0 <HAL_TIM_IC_CaptureCallback>:
 800d5a0:	4770      	bx	lr
 800d5a2:	bf00      	nop

0800d5a4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d5a4:	4770      	bx	lr
 800d5a6:	bf00      	nop

0800d5a8 <HAL_TIM_TriggerCallback>:
 800d5a8:	4770      	bx	lr
 800d5aa:	bf00      	nop

0800d5ac <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d5ac:	6803      	ldr	r3, [r0, #0]
 800d5ae:	691a      	ldr	r2, [r3, #16]
 800d5b0:	0791      	lsls	r1, r2, #30
{
 800d5b2:	b510      	push	{r4, lr}
 800d5b4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d5b6:	d502      	bpl.n	800d5be <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d5b8:	68da      	ldr	r2, [r3, #12]
 800d5ba:	0792      	lsls	r2, r2, #30
 800d5bc:	d45f      	bmi.n	800d67e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d5be:	691a      	ldr	r2, [r3, #16]
 800d5c0:	0750      	lsls	r0, r2, #29
 800d5c2:	d502      	bpl.n	800d5ca <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d5c4:	68da      	ldr	r2, [r3, #12]
 800d5c6:	0751      	lsls	r1, r2, #29
 800d5c8:	d446      	bmi.n	800d658 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d5ca:	691a      	ldr	r2, [r3, #16]
 800d5cc:	0712      	lsls	r2, r2, #28
 800d5ce:	d502      	bpl.n	800d5d6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d5d0:	68da      	ldr	r2, [r3, #12]
 800d5d2:	0710      	lsls	r0, r2, #28
 800d5d4:	d42e      	bmi.n	800d634 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d5d6:	691a      	ldr	r2, [r3, #16]
 800d5d8:	06d2      	lsls	r2, r2, #27
 800d5da:	d502      	bpl.n	800d5e2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d5dc:	68da      	ldr	r2, [r3, #12]
 800d5de:	06d0      	lsls	r0, r2, #27
 800d5e0:	d418      	bmi.n	800d614 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d5e2:	691a      	ldr	r2, [r3, #16]
 800d5e4:	07d1      	lsls	r1, r2, #31
 800d5e6:	d502      	bpl.n	800d5ee <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d5e8:	68da      	ldr	r2, [r3, #12]
 800d5ea:	07d2      	lsls	r2, r2, #31
 800d5ec:	d45d      	bmi.n	800d6aa <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d5ee:	691a      	ldr	r2, [r3, #16]
 800d5f0:	0610      	lsls	r0, r2, #24
 800d5f2:	d502      	bpl.n	800d5fa <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d5f4:	68da      	ldr	r2, [r3, #12]
 800d5f6:	0611      	lsls	r1, r2, #24
 800d5f8:	d45f      	bmi.n	800d6ba <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d5fa:	691a      	ldr	r2, [r3, #16]
 800d5fc:	0652      	lsls	r2, r2, #25
 800d5fe:	d502      	bpl.n	800d606 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d600:	68da      	ldr	r2, [r3, #12]
 800d602:	0650      	lsls	r0, r2, #25
 800d604:	d461      	bmi.n	800d6ca <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d606:	691a      	ldr	r2, [r3, #16]
 800d608:	0691      	lsls	r1, r2, #26
 800d60a:	d502      	bpl.n	800d612 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d60c:	68da      	ldr	r2, [r3, #12]
 800d60e:	0692      	lsls	r2, r2, #26
 800d610:	d443      	bmi.n	800d69a <HAL_TIM_IRQHandler+0xee>
}
 800d612:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d614:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d618:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d61a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d61c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d61e:	69db      	ldr	r3, [r3, #28]
 800d620:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d624:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d626:	d064      	beq.n	800d6f2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d628:	f7ff ffba 	bl	800d5a0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d62c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d62e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d630:	7722      	strb	r2, [r4, #28]
 800d632:	e7d6      	b.n	800d5e2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d634:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d638:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d63a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d63c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d63e:	69db      	ldr	r3, [r3, #28]
 800d640:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d642:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d644:	d152      	bne.n	800d6ec <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d646:	f7ff ffa9 	bl	800d59c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d64a:	4620      	mov	r0, r4
 800d64c:	f7ff ffaa 	bl	800d5a4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d650:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d652:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d654:	7722      	strb	r2, [r4, #28]
 800d656:	e7be      	b.n	800d5d6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d658:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d65c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d65e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d660:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d662:	699b      	ldr	r3, [r3, #24]
 800d664:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d668:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d66a:	d13c      	bne.n	800d6e6 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d66c:	f7ff ff96 	bl	800d59c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d670:	4620      	mov	r0, r4
 800d672:	f7ff ff97 	bl	800d5a4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d676:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d678:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d67a:	7722      	strb	r2, [r4, #28]
 800d67c:	e7a5      	b.n	800d5ca <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d67e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d682:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d684:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d686:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d688:	699b      	ldr	r3, [r3, #24]
 800d68a:	079b      	lsls	r3, r3, #30
 800d68c:	d025      	beq.n	800d6da <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d68e:	f7ff ff87 	bl	800d5a0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d692:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d694:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d696:	7722      	strb	r2, [r4, #28]
 800d698:	e791      	b.n	800d5be <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d69a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d69e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d6a0:	611a      	str	r2, [r3, #16]
}
 800d6a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d6a6:	f000 b82b 	b.w	800d700 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d6aa:	f06f 0201 	mvn.w	r2, #1
 800d6ae:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d6b0:	4620      	mov	r0, r4
 800d6b2:	f7f4 fa43 	bl	8001b3c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d6b6:	6823      	ldr	r3, [r4, #0]
 800d6b8:	e799      	b.n	800d5ee <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d6ba:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d6be:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d6c0:	4620      	mov	r0, r4
 800d6c2:	f000 f81f 	bl	800d704 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d6c6:	6823      	ldr	r3, [r4, #0]
 800d6c8:	e797      	b.n	800d5fa <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d6ca:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d6ce:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d6d0:	4620      	mov	r0, r4
 800d6d2:	f7ff ff69 	bl	800d5a8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d6d6:	6823      	ldr	r3, [r4, #0]
 800d6d8:	e795      	b.n	800d606 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d6da:	f7ff ff5f 	bl	800d59c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d6de:	4620      	mov	r0, r4
 800d6e0:	f7ff ff60 	bl	800d5a4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d6e4:	e7d5      	b.n	800d692 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d6e6:	f7ff ff5b 	bl	800d5a0 <HAL_TIM_IC_CaptureCallback>
 800d6ea:	e7c4      	b.n	800d676 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d6ec:	f7ff ff58 	bl	800d5a0 <HAL_TIM_IC_CaptureCallback>
 800d6f0:	e7ae      	b.n	800d650 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d6f2:	f7ff ff53 	bl	800d59c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d6f6:	4620      	mov	r0, r4
 800d6f8:	f7ff ff54 	bl	800d5a4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d6fc:	e796      	b.n	800d62c <HAL_TIM_IRQHandler+0x80>
 800d6fe:	bf00      	nop

0800d700 <HAL_TIMEx_CommutCallback>:
 800d700:	4770      	bx	lr
 800d702:	bf00      	nop

0800d704 <HAL_TIMEx_BreakCallback>:
 800d704:	4770      	bx	lr
 800d706:	bf00      	nop

0800d708 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d708:	680b      	ldr	r3, [r1, #0]
{
 800d70a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d70c:	b9d3      	cbnz	r3, 800d744 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d70e:	6803      	ldr	r3, [r0, #0]
 800d710:	684c      	ldr	r4, [r1, #4]
 800d712:	688a      	ldr	r2, [r1, #8]
 800d714:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d718:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d71c:	4323      	orrs	r3, r4
 800d71e:	4313      	orrs	r3, r2
 800d720:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d724:	4323      	orrs	r3, r4
 800d726:	4313      	orrs	r3, r2
 800d728:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d72c:	4323      	orrs	r3, r4
 800d72e:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d732:	4313      	orrs	r3, r2
 800d734:	432b      	orrs	r3, r5
 800d736:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d738:	4323      	orrs	r3, r4
 800d73a:	4313      	orrs	r3, r2
 800d73c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d73e:	bc30      	pop	{r4, r5}
 800d740:	2000      	movs	r0, #0
 800d742:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d744:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d748:	6803      	ldr	r3, [r0, #0]
 800d74a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d74e:	4323      	orrs	r3, r4
 800d750:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d752:	4313      	orrs	r3, r2
 800d754:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d756:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d758:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d75a:	6843      	ldr	r3, [r0, #4]
 800d75c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d760:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d764:	4313      	orrs	r3, r2
 800d766:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d76a:	4323      	orrs	r3, r4
 800d76c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d770:	4313      	orrs	r3, r2
 800d772:	432b      	orrs	r3, r5
 800d774:	698a      	ldr	r2, [r1, #24]
 800d776:	4323      	orrs	r3, r4
 800d778:	4313      	orrs	r3, r2
 800d77a:	6043      	str	r3, [r0, #4]
}
 800d77c:	bc30      	pop	{r4, r5}
 800d77e:	2000      	movs	r0, #0
 800d780:	4770      	bx	lr
 800d782:	bf00      	nop

0800d784 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d784:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d786:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d788:	bb02      	cbnz	r2, 800d7cc <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d78a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d78e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d792:	3c01      	subs	r4, #1
 800d794:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d798:	3a01      	subs	r2, #1
 800d79a:	4313      	orrs	r3, r2
 800d79c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d7a0:	3c01      	subs	r4, #1
 800d7a2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d7a6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d7aa:	3a01      	subs	r2, #1
 800d7ac:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d7b0:	698a      	ldr	r2, [r1, #24]
 800d7b2:	1e69      	subs	r1, r5, #1
 800d7b4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d7b8:	1e61      	subs	r1, r4, #1
 800d7ba:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d7be:	3a01      	subs	r2, #1
 800d7c0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d7c4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d7c6:	bc30      	pop	{r4, r5}
 800d7c8:	2000      	movs	r0, #0
 800d7ca:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d7cc:	68cc      	ldr	r4, [r1, #12]
 800d7ce:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d7d0:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d7d2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d7d6:	3c01      	subs	r4, #1
 800d7d8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d7dc:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d7e0:	3a01      	subs	r2, #1
 800d7e2:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d7e6:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d7e8:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d7ec:	68c3      	ldr	r3, [r0, #12]
 800d7ee:	3c01      	subs	r4, #1
 800d7f0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d7f4:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d7f8:	3a01      	subs	r2, #1
 800d7fa:	690c      	ldr	r4, [r1, #16]
 800d7fc:	4313      	orrs	r3, r2
 800d7fe:	698a      	ldr	r2, [r1, #24]
 800d800:	1e69      	subs	r1, r5, #1
 800d802:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d806:	1e61      	subs	r1, r4, #1
 800d808:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d80c:	3a01      	subs	r2, #1
 800d80e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d812:	60c3      	str	r3, [r0, #12]
}
 800d814:	bc30      	pop	{r4, r5}
 800d816:	2000      	movs	r0, #0
 800d818:	4770      	bx	lr
 800d81a:	bf00      	nop

0800d81c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d81c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d81e:	680b      	ldr	r3, [r1, #0]
{
 800d820:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d822:	684a      	ldr	r2, [r1, #4]
{
 800d824:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d826:	4313      	orrs	r3, r2
 800d828:	6900      	ldr	r0, [r0, #16]
 800d82a:	68ca      	ldr	r2, [r1, #12]
 800d82c:	0d80      	lsrs	r0, r0, #22
 800d82e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d832:	688a      	ldr	r2, [r1, #8]
 800d834:	0580      	lsls	r0, r0, #22
 800d836:	4303      	orrs	r3, r0
 800d838:	3a01      	subs	r2, #1
 800d83a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d83e:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d840:	f7fc fcca 	bl	800a1d8 <HAL_GetTick>
 800d844:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d846:	1c6b      	adds	r3, r5, #1
 800d848:	d105      	bne.n	800d856 <FMC_SDRAM_SendCommand+0x3a>
 800d84a:	69a3      	ldr	r3, [r4, #24]
 800d84c:	f013 0320 	ands.w	r3, r3, #32
 800d850:	d1fb      	bne.n	800d84a <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d852:	4618      	mov	r0, r3
}
 800d854:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d856:	69a3      	ldr	r3, [r4, #24]
 800d858:	f013 0320 	ands.w	r3, r3, #32
 800d85c:	d0f9      	beq.n	800d852 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d85e:	b125      	cbz	r5, 800d86a <FMC_SDRAM_SendCommand+0x4e>
 800d860:	f7fc fcba 	bl	800a1d8 <HAL_GetTick>
 800d864:	1b80      	subs	r0, r0, r6
 800d866:	42a8      	cmp	r0, r5
 800d868:	d9ed      	bls.n	800d846 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d86a:	2003      	movs	r0, #3
}
 800d86c:	bd70      	pop	{r4, r5, r6, pc}
 800d86e:	bf00      	nop

0800d870 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d870:	6943      	ldr	r3, [r0, #20]
 800d872:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d876:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d878:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d87c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d880:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d882:	6151      	str	r1, [r2, #20]
}
 800d884:	4770      	bx	lr
 800d886:	bf00      	nop

0800d888 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d888:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d88a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d88e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d890:	f002 fb00 	bl	800fe94 <xTaskGetSchedulerState>
 800d894:	2801      	cmp	r0, #1
 800d896:	d100      	bne.n	800d89a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d898:	bd08      	pop	{r3, pc}
 800d89a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d89e:	f000 bc41 	b.w	800e124 <xPortSysTickHandler>
 800d8a2:	bf00      	nop

0800d8a4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d8a4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d8a8:	b92b      	cbnz	r3, 800d8b6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d8aa:	4b06      	ldr	r3, [pc, #24]	; (800d8c4 <osKernelInitialize+0x20>)
 800d8ac:	6818      	ldr	r0, [r3, #0]
 800d8ae:	b928      	cbnz	r0, 800d8bc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d8b0:	2201      	movs	r2, #1
 800d8b2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d8b4:	4770      	bx	lr
    stat = osErrorISR;
 800d8b6:	f06f 0005 	mvn.w	r0, #5
 800d8ba:	4770      	bx	lr
    } else {
      stat = osError;
 800d8bc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d8c0:	4770      	bx	lr
 800d8c2:	bf00      	nop
 800d8c4:	20002258 	.word	0x20002258

0800d8c8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d8c8:	b510      	push	{r4, lr}
 800d8ca:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d8ce:	b974      	cbnz	r4, 800d8ee <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d8d0:	4b08      	ldr	r3, [pc, #32]	; (800d8f4 <osKernelStart+0x2c>)
 800d8d2:	681a      	ldr	r2, [r3, #0]
 800d8d4:	2a01      	cmp	r2, #1
 800d8d6:	d107      	bne.n	800d8e8 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d8d8:	4907      	ldr	r1, [pc, #28]	; (800d8f8 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d8da:	2202      	movs	r2, #2
 800d8dc:	77cc      	strb	r4, [r1, #31]
 800d8de:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d8e0:	f002 f8b2 	bl	800fa48 <vTaskStartScheduler>
      stat = osOK;
 800d8e4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d8e6:	bd10      	pop	{r4, pc}
      stat = osError;
 800d8e8:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d8ec:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d8ee:	f06f 0005 	mvn.w	r0, #5
}
 800d8f2:	bd10      	pop	{r4, pc}
 800d8f4:	20002258 	.word	0x20002258
 800d8f8:	e000ed00 	.word	0xe000ed00

0800d8fc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d8fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8fe:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d900:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d902:	4615      	mov	r5, r2
  hTask = NULL;
 800d904:	9405      	str	r4, [sp, #20]
 800d906:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d90a:	b9ea      	cbnz	r2, 800d948 <osThreadNew+0x4c>
 800d90c:	b350      	cbz	r0, 800d964 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d90e:	b1f5      	cbz	r5, 800d94e <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d910:	69ab      	ldr	r3, [r5, #24]
 800d912:	bb5b      	cbnz	r3, 800d96c <osThreadNew+0x70>
 800d914:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d916:	686a      	ldr	r2, [r5, #4]
 800d918:	07d2      	lsls	r2, r2, #31
 800d91a:	d423      	bmi.n	800d964 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d91c:	696e      	ldr	r6, [r5, #20]
 800d91e:	b34e      	cbz	r6, 800d974 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d920:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d924:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d926:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d928:	b34c      	cbz	r4, 800d97e <osThreadNew+0x82>
 800d92a:	68ea      	ldr	r2, [r5, #12]
 800d92c:	2aab      	cmp	r2, #171	; 0xab
 800d92e:	d919      	bls.n	800d964 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d930:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d932:	b1bd      	cbz	r5, 800d964 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d934:	b1b6      	cbz	r6, 800d964 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d936:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d93a:	9300      	str	r3, [sp, #0]
 800d93c:	4662      	mov	r2, ip
 800d93e:	460b      	mov	r3, r1
 800d940:	4639      	mov	r1, r7
 800d942:	f001 ffbf 	bl	800f8c4 <xTaskCreateStatic>
 800d946:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d948:	4620      	mov	r0, r4
 800d94a:	b007      	add	sp, #28
 800d94c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d94e:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d950:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d952:	ac05      	add	r4, sp, #20
 800d954:	9300      	str	r3, [sp, #0]
 800d956:	9401      	str	r4, [sp, #4]
 800d958:	460b      	mov	r3, r1
 800d95a:	4629      	mov	r1, r5
 800d95c:	f001 ffec 	bl	800f938 <xTaskCreate>
 800d960:	2801      	cmp	r0, #1
 800d962:	d00a      	beq.n	800d97a <osThreadNew+0x7e>
        return (NULL);
 800d964:	2400      	movs	r4, #0
}
 800d966:	4620      	mov	r0, r4
 800d968:	b007      	add	sp, #28
 800d96a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d96c:	1e5c      	subs	r4, r3, #1
 800d96e:	2c37      	cmp	r4, #55	; 0x37
 800d970:	d9d1      	bls.n	800d916 <osThreadNew+0x1a>
 800d972:	e7f7      	b.n	800d964 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d974:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d978:	e7d4      	b.n	800d924 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d97a:	9c05      	ldr	r4, [sp, #20]
 800d97c:	e7e4      	b.n	800d948 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d97e:	68ee      	ldr	r6, [r5, #12]
 800d980:	2e00      	cmp	r6, #0
 800d982:	d1e1      	bne.n	800d948 <osThreadNew+0x4c>
 800d984:	692d      	ldr	r5, [r5, #16]
 800d986:	2d00      	cmp	r5, #0
 800d988:	d1de      	bne.n	800d948 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d98a:	fa1f f28c 	uxth.w	r2, ip
 800d98e:	463d      	mov	r5, r7
 800d990:	e7df      	b.n	800d952 <osThreadNew+0x56>
 800d992:	bf00      	nop

0800d994 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d994:	b510      	push	{r4, lr}
 800d996:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d99a:	b92c      	cbnz	r4, 800d9a8 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d99c:	b900      	cbnz	r0, 800d9a0 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d99e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d9a0:	f001 fffc 	bl	800f99c <vTaskDelay>
    stat = osOK;
 800d9a4:	4620      	mov	r0, r4
}
 800d9a6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d9a8:	f06f 0005 	mvn.w	r0, #5
}
 800d9ac:	bd10      	pop	{r4, pc}
 800d9ae:	bf00      	nop

0800d9b0 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d9b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9b2:	b083      	sub	sp, #12
 800d9b4:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d9b8:	b9fe      	cbnz	r6, 800d9fa <osSemaphoreNew+0x4a>
 800d9ba:	b1f0      	cbz	r0, 800d9fa <osSemaphoreNew+0x4a>
 800d9bc:	4288      	cmp	r0, r1
 800d9be:	460f      	mov	r7, r1
 800d9c0:	d31b      	bcc.n	800d9fa <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d9c2:	4615      	mov	r5, r2
 800d9c4:	b192      	cbz	r2, 800d9ec <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d9c6:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d9ca:	b1d2      	cbz	r2, 800da02 <osSemaphoreNew+0x52>
 800d9cc:	2b4f      	cmp	r3, #79	; 0x4f
 800d9ce:	d914      	bls.n	800d9fa <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d9d0:	2801      	cmp	r0, #1
 800d9d2:	d038      	beq.n	800da46 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d9d4:	f000 fd8c 	bl	800e4f0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d9d8:	4604      	mov	r4, r0
 800d9da:	b170      	cbz	r0, 800d9fa <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d9dc:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d9de:	4620      	mov	r0, r4
 800d9e0:	4629      	mov	r1, r5
 800d9e2:	f001 fc37 	bl	800f254 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d9e6:	4620      	mov	r0, r4
 800d9e8:	b003      	add	sp, #12
 800d9ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d9ec:	2801      	cmp	r0, #1
 800d9ee:	d012      	beq.n	800da16 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d9f0:	f000 fdde 	bl	800e5b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d9f4:	4604      	mov	r4, r0
 800d9f6:	2800      	cmp	r0, #0
 800d9f8:	d1f1      	bne.n	800d9de <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d9fa:	2400      	movs	r4, #0
}
 800d9fc:	4620      	mov	r0, r4
 800d9fe:	b003      	add	sp, #12
 800da00:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800da02:	2b00      	cmp	r3, #0
 800da04:	d1f9      	bne.n	800d9fa <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800da06:	2801      	cmp	r0, #1
 800da08:	d005      	beq.n	800da16 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800da0a:	f000 fdd1 	bl	800e5b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800da0e:	4604      	mov	r4, r0
 800da10:	2800      	cmp	r0, #0
 800da12:	d1e3      	bne.n	800d9dc <osSemaphoreNew+0x2c>
 800da14:	e7f1      	b.n	800d9fa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800da16:	2203      	movs	r2, #3
 800da18:	2100      	movs	r1, #0
 800da1a:	2001      	movs	r0, #1
 800da1c:	f000 fd26 	bl	800e46c <xQueueGenericCreate>
 800da20:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800da22:	2c00      	cmp	r4, #0
 800da24:	d0e9      	beq.n	800d9fa <osSemaphoreNew+0x4a>
 800da26:	b917      	cbnz	r7, 800da2e <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800da28:	2d00      	cmp	r5, #0
 800da2a:	d1d7      	bne.n	800d9dc <osSemaphoreNew+0x2c>
 800da2c:	e7d7      	b.n	800d9de <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800da2e:	2300      	movs	r3, #0
 800da30:	461a      	mov	r2, r3
 800da32:	4619      	mov	r1, r3
 800da34:	4620      	mov	r0, r4
 800da36:	f000 fe01 	bl	800e63c <xQueueGenericSend>
 800da3a:	2801      	cmp	r0, #1
 800da3c:	d0f4      	beq.n	800da28 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800da3e:	4620      	mov	r0, r4
 800da40:	f001 fbc2 	bl	800f1c8 <vQueueDelete>
 800da44:	e7d9      	b.n	800d9fa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800da46:	4613      	mov	r3, r2
 800da48:	2203      	movs	r2, #3
 800da4a:	9200      	str	r2, [sp, #0]
 800da4c:	4631      	mov	r1, r6
 800da4e:	4632      	mov	r2, r6
 800da50:	f000 fc9e 	bl	800e390 <xQueueGenericCreateStatic>
 800da54:	4604      	mov	r4, r0
 800da56:	e7e4      	b.n	800da22 <osSemaphoreNew+0x72>

0800da58 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800da58:	b370      	cbz	r0, 800dab8 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800da5a:	b510      	push	{r4, lr}
 800da5c:	460c      	mov	r4, r1
 800da5e:	b082      	sub	sp, #8
 800da60:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800da64:	b1c3      	cbz	r3, 800da98 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800da66:	bb21      	cbnz	r1, 800dab2 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800da68:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800da6a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800da6c:	f001 fb2a 	bl	800f0c4 <xQueueReceiveFromISR>
 800da70:	2801      	cmp	r0, #1
 800da72:	d11a      	bne.n	800daaa <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800da74:	9b01      	ldr	r3, [sp, #4]
 800da76:	b913      	cbnz	r3, 800da7e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800da78:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800da7a:	b002      	add	sp, #8
 800da7c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800da7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da8a:	f3bf 8f4f 	dsb	sy
 800da8e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da92:	4620      	mov	r0, r4
}
 800da94:	b002      	add	sp, #8
 800da96:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800da98:	f001 f98a 	bl	800edb0 <xQueueSemaphoreTake>
 800da9c:	2801      	cmp	r0, #1
 800da9e:	d0eb      	beq.n	800da78 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800daa0:	b11c      	cbz	r4, 800daaa <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800daa2:	f06f 0001 	mvn.w	r0, #1
}
 800daa6:	b002      	add	sp, #8
 800daa8:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800daaa:	f06f 0002 	mvn.w	r0, #2
}
 800daae:	b002      	add	sp, #8
 800dab0:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800dab2:	f06f 0003 	mvn.w	r0, #3
 800dab6:	e7e0      	b.n	800da7a <osSemaphoreAcquire+0x22>
 800dab8:	f06f 0003 	mvn.w	r0, #3
}
 800dabc:	4770      	bx	lr
 800dabe:	bf00      	nop

0800dac0 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dac0:	b330      	cbz	r0, 800db10 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800dac2:	b510      	push	{r4, lr}
 800dac4:	b082      	sub	sp, #8
 800dac6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800daca:	b1ab      	cbz	r3, 800daf8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800dacc:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dace:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800dad0:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dad2:	f000 ff97 	bl	800ea04 <xQueueGiveFromISR>
 800dad6:	2801      	cmp	r0, #1
 800dad8:	d117      	bne.n	800db0a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800dada:	9b01      	ldr	r3, [sp, #4]
 800dadc:	b193      	cbz	r3, 800db04 <osSemaphoreRelease+0x44>
 800dade:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dae2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dae6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800daea:	f3bf 8f4f 	dsb	sy
 800daee:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800daf2:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800daf4:	b002      	add	sp, #8
 800daf6:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800daf8:	461a      	mov	r2, r3
 800dafa:	4619      	mov	r1, r3
 800dafc:	f000 fd9e 	bl	800e63c <xQueueGenericSend>
 800db00:	2801      	cmp	r0, #1
 800db02:	d102      	bne.n	800db0a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800db04:	2000      	movs	r0, #0
}
 800db06:	b002      	add	sp, #8
 800db08:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800db0a:	f06f 0002 	mvn.w	r0, #2
 800db0e:	e7fa      	b.n	800db06 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800db10:	f06f 0003 	mvn.w	r0, #3
}
 800db14:	4770      	bx	lr
 800db16:	bf00      	nop

0800db18 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800db18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db1a:	b085      	sub	sp, #20
 800db1c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800db20:	b987      	cbnz	r7, 800db44 <osMessageQueueNew+0x2c>
 800db22:	4605      	mov	r5, r0
 800db24:	b170      	cbz	r0, 800db44 <osMessageQueueNew+0x2c>
 800db26:	b169      	cbz	r1, 800db44 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800db28:	4614      	mov	r4, r2
 800db2a:	b1ea      	cbz	r2, 800db68 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800db2c:	6893      	ldr	r3, [r2, #8]
 800db2e:	b163      	cbz	r3, 800db4a <osMessageQueueNew+0x32>
 800db30:	68d2      	ldr	r2, [r2, #12]
 800db32:	2a4f      	cmp	r2, #79	; 0x4f
 800db34:	d906      	bls.n	800db44 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800db36:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800db38:	b122      	cbz	r2, 800db44 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800db3a:	6966      	ldr	r6, [r4, #20]
 800db3c:	fb01 f505 	mul.w	r5, r1, r5
 800db40:	42ae      	cmp	r6, r5
 800db42:	d21c      	bcs.n	800db7e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800db44:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800db46:	b005      	add	sp, #20
 800db48:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800db4a:	68d3      	ldr	r3, [r2, #12]
 800db4c:	2b00      	cmp	r3, #0
 800db4e:	d1f9      	bne.n	800db44 <osMessageQueueNew+0x2c>
 800db50:	6913      	ldr	r3, [r2, #16]
 800db52:	2b00      	cmp	r3, #0
 800db54:	d1f6      	bne.n	800db44 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800db56:	6952      	ldr	r2, [r2, #20]
 800db58:	2a00      	cmp	r2, #0
 800db5a:	d1f3      	bne.n	800db44 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800db5c:	f000 fc86 	bl	800e46c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800db60:	2800      	cmp	r0, #0
 800db62:	d0ef      	beq.n	800db44 <osMessageQueueNew+0x2c>
        name = attr->name;
 800db64:	6824      	ldr	r4, [r4, #0]
 800db66:	e003      	b.n	800db70 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800db68:	f000 fc80 	bl	800e46c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800db6c:	2800      	cmp	r0, #0
 800db6e:	d0e9      	beq.n	800db44 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800db70:	4621      	mov	r1, r4
 800db72:	9003      	str	r0, [sp, #12]
 800db74:	f001 fb6e 	bl	800f254 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800db78:	9803      	ldr	r0, [sp, #12]
}
 800db7a:	b005      	add	sp, #20
 800db7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800db7e:	9700      	str	r7, [sp, #0]
 800db80:	f000 fc06 	bl	800e390 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800db84:	2800      	cmp	r0, #0
 800db86:	d1ed      	bne.n	800db64 <osMessageQueueNew+0x4c>
 800db88:	e7dc      	b.n	800db44 <osMessageQueueNew+0x2c>
 800db8a:	bf00      	nop

0800db8c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800db8c:	b570      	push	{r4, r5, r6, lr}
 800db8e:	461c      	mov	r4, r3
 800db90:	b082      	sub	sp, #8
 800db92:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800db96:	b1be      	cbz	r6, 800dbc8 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800db98:	b350      	cbz	r0, 800dbf0 <osMessageQueuePut+0x64>
 800db9a:	b349      	cbz	r1, 800dbf0 <osMessageQueuePut+0x64>
 800db9c:	bb43      	cbnz	r3, 800dbf0 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800db9e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dba0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800dba2:	f000 fec9 	bl	800e938 <xQueueGenericSendFromISR>
 800dba6:	2801      	cmp	r0, #1
 800dba8:	d11e      	bne.n	800dbe8 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dbaa:	9b01      	ldr	r3, [sp, #4]
 800dbac:	b1cb      	cbz	r3, 800dbe2 <osMessageQueuePut+0x56>
 800dbae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dbb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dbb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dbba:	f3bf 8f4f 	dsb	sy
 800dbbe:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dbc2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800dbc4:	b002      	add	sp, #8
 800dbc6:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800dbc8:	b190      	cbz	r0, 800dbf0 <osMessageQueuePut+0x64>
 800dbca:	b189      	cbz	r1, 800dbf0 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dbcc:	4633      	mov	r3, r6
 800dbce:	4622      	mov	r2, r4
 800dbd0:	f000 fd34 	bl	800e63c <xQueueGenericSend>
 800dbd4:	2801      	cmp	r0, #1
 800dbd6:	d004      	beq.n	800dbe2 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800dbd8:	b134      	cbz	r4, 800dbe8 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800dbda:	f06f 0001 	mvn.w	r0, #1
}
 800dbde:	b002      	add	sp, #8
 800dbe0:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800dbe2:	2000      	movs	r0, #0
}
 800dbe4:	b002      	add	sp, #8
 800dbe6:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800dbe8:	f06f 0002 	mvn.w	r0, #2
}
 800dbec:	b002      	add	sp, #8
 800dbee:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800dbf0:	f06f 0003 	mvn.w	r0, #3
 800dbf4:	e7e6      	b.n	800dbc4 <osMessageQueuePut+0x38>
 800dbf6:	bf00      	nop

0800dbf8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800dbf8:	b530      	push	{r4, r5, lr}
 800dbfa:	461c      	mov	r4, r3
 800dbfc:	b083      	sub	sp, #12
 800dbfe:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800dc02:	b1bb      	cbz	r3, 800dc34 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800dc04:	b348      	cbz	r0, 800dc5a <osMessageQueueGet+0x62>
 800dc06:	b341      	cbz	r1, 800dc5a <osMessageQueueGet+0x62>
 800dc08:	bb3c      	cbnz	r4, 800dc5a <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800dc0a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dc0c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800dc0e:	f001 fa59 	bl	800f0c4 <xQueueReceiveFromISR>
 800dc12:	2801      	cmp	r0, #1
 800dc14:	d11d      	bne.n	800dc52 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dc16:	9b01      	ldr	r3, [sp, #4]
 800dc18:	b1c3      	cbz	r3, 800dc4c <osMessageQueueGet+0x54>
 800dc1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc26:	f3bf 8f4f 	dsb	sy
 800dc2a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dc2e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800dc30:	b003      	add	sp, #12
 800dc32:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800dc34:	b188      	cbz	r0, 800dc5a <osMessageQueueGet+0x62>
 800dc36:	b181      	cbz	r1, 800dc5a <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dc38:	4622      	mov	r2, r4
 800dc3a:	f000 ff3b 	bl	800eab4 <xQueueReceive>
 800dc3e:	2801      	cmp	r0, #1
 800dc40:	d004      	beq.n	800dc4c <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800dc42:	b134      	cbz	r4, 800dc52 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800dc44:	f06f 0001 	mvn.w	r0, #1
}
 800dc48:	b003      	add	sp, #12
 800dc4a:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800dc4c:	2000      	movs	r0, #0
}
 800dc4e:	b003      	add	sp, #12
 800dc50:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800dc52:	f06f 0002 	mvn.w	r0, #2
}
 800dc56:	b003      	add	sp, #12
 800dc58:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800dc5a:	f06f 0003 	mvn.w	r0, #3
 800dc5e:	e7e7      	b.n	800dc30 <osMessageQueueGet+0x38>

0800dc60 <osMessageQueueGetCount>:
 800dc60:	b130      	cbz	r0, 800dc70 <osMessageQueueGetCount+0x10>
 800dc62:	f3ef 8305 	mrs	r3, IPSR
 800dc66:	b10b      	cbz	r3, 800dc6c <osMessageQueueGetCount+0xc>
 800dc68:	f001 baa0 	b.w	800f1ac <uxQueueMessagesWaitingFromISR>
 800dc6c:	f001 ba88 	b.w	800f180 <uxQueueMessagesWaiting>
 800dc70:	4770      	bx	lr
 800dc72:	bf00      	nop

0800dc74 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800dc74:	4b04      	ldr	r3, [pc, #16]	; (800dc88 <vApplicationGetIdleTaskMemory+0x14>)
 800dc76:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800dc78:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800dc7a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800dc7c:	4c03      	ldr	r4, [pc, #12]	; (800dc8c <vApplicationGetIdleTaskMemory+0x18>)
 800dc7e:	600c      	str	r4, [r1, #0]
}
 800dc80:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800dc84:	6013      	str	r3, [r2, #0]
}
 800dc86:	4770      	bx	lr
 800dc88:	200021ac 	.word	0x200021ac
 800dc8c:	20001fac 	.word	0x20001fac

0800dc90 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800dc90:	4b05      	ldr	r3, [pc, #20]	; (800dca8 <vApplicationGetTimerTaskMemory+0x18>)
 800dc92:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800dc94:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800dc96:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800dc9a:	4c04      	ldr	r4, [pc, #16]	; (800dcac <vApplicationGetTimerTaskMemory+0x1c>)
 800dc9c:	600c      	str	r4, [r1, #0]
}
 800dc9e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800dca2:	6013      	str	r3, [r2, #0]
}
 800dca4:	4770      	bx	lr
 800dca6:	bf00      	nop
 800dca8:	2000265c 	.word	0x2000265c
 800dcac:	2000225c 	.word	0x2000225c

0800dcb0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800dcb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcb4:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800dcb6:	f001 ff43 	bl	800fb40 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800dcba:	4a54      	ldr	r2, [pc, #336]	; (800de0c <pvPortMalloc+0x15c>)
 800dcbc:	6816      	ldr	r6, [r2, #0]
 800dcbe:	2e00      	cmp	r6, #0
 800dcc0:	d06e      	beq.n	800dda0 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800dcc2:	4b53      	ldr	r3, [pc, #332]	; (800de10 <pvPortMalloc+0x160>)
 800dcc4:	681f      	ldr	r7, [r3, #0]
 800dcc6:	423d      	tst	r5, r7
 800dcc8:	d12e      	bne.n	800dd28 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800dcca:	b36d      	cbz	r5, 800dd28 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800dccc:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800dcd0:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800dcd2:	bf1c      	itt	ne
 800dcd4:	f024 0407 	bicne.w	r4, r4, #7
 800dcd8:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800dcda:	b32c      	cbz	r4, 800dd28 <pvPortMalloc+0x78>
 800dcdc:	f8df c144 	ldr.w	ip, [pc, #324]	; 800de24 <pvPortMalloc+0x174>
 800dce0:	f8dc 5000 	ldr.w	r5, [ip]
 800dce4:	42a5      	cmp	r5, r4
 800dce6:	d31f      	bcc.n	800dd28 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800dce8:	484a      	ldr	r0, [pc, #296]	; (800de14 <pvPortMalloc+0x164>)
 800dcea:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800dcec:	e003      	b.n	800dcf6 <pvPortMalloc+0x46>
 800dcee:	681a      	ldr	r2, [r3, #0]
 800dcf0:	b122      	cbz	r2, 800dcfc <pvPortMalloc+0x4c>
 800dcf2:	4618      	mov	r0, r3
 800dcf4:	4613      	mov	r3, r2
 800dcf6:	6859      	ldr	r1, [r3, #4]
 800dcf8:	42a1      	cmp	r1, r4
 800dcfa:	d3f8      	bcc.n	800dcee <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800dcfc:	42b3      	cmp	r3, r6
 800dcfe:	d013      	beq.n	800dd28 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800dd00:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dd02:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800dd04:	f858 eb08 	ldr.w	lr, [r8], #8
 800dd08:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dd0c:	2a10      	cmp	r2, #16
 800dd0e:	d929      	bls.n	800dd64 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dd10:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dd12:	0748      	lsls	r0, r1, #29
 800dd14:	d00f      	beq.n	800dd36 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800dd16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd1a:	f383 8811 	msr	BASEPRI, r3
 800dd1e:	f3bf 8f6f 	isb	sy
 800dd22:	f3bf 8f4f 	dsb	sy
 800dd26:	e7fe      	b.n	800dd26 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dd28:	f001 ff12 	bl	800fb50 <xTaskResumeAll>
 800dd2c:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dd30:	4640      	mov	r0, r8
 800dd32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dd36:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dd38:	4a36      	ldr	r2, [pc, #216]	; (800de14 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dd3a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dd3c:	4614      	mov	r4, r2
 800dd3e:	6812      	ldr	r2, [r2, #0]
 800dd40:	4291      	cmp	r1, r2
 800dd42:	d8fb      	bhi.n	800dd3c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dd44:	6860      	ldr	r0, [r4, #4]
 800dd46:	eb04 0e00 	add.w	lr, r4, r0
 800dd4a:	4571      	cmp	r1, lr
 800dd4c:	d04b      	beq.n	800dde6 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd4e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd52:	eb01 000e 	add.w	r0, r1, lr
 800dd56:	4282      	cmp	r2, r0
 800dd58:	d051      	beq.n	800ddfe <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dd5a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd5c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dd5e:	bf18      	it	ne
 800dd60:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dd62:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dd64:	4a2c      	ldr	r2, [pc, #176]	; (800de18 <pvPortMalloc+0x168>)
 800dd66:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dd68:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dd6a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800dd6c:	bf38      	it	cc
 800dd6e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800dd70:	4a2a      	ldr	r2, [pc, #168]	; (800de1c <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dd72:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dd76:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dd78:	2000      	movs	r0, #0
 800dd7a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800dd7e:	6813      	ldr	r3, [r2, #0]
 800dd80:	3301      	adds	r3, #1
 800dd82:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800dd84:	f001 fee4 	bl	800fb50 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800dd88:	f018 0f07 	tst.w	r8, #7
 800dd8c:	d0d0      	beq.n	800dd30 <pvPortMalloc+0x80>
 800dd8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd92:	f383 8811 	msr	BASEPRI, r3
 800dd96:	f3bf 8f6f 	isb	sy
 800dd9a:	f3bf 8f4f 	dsb	sy
 800dd9e:	e7fe      	b.n	800dd9e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800dda0:	4b1f      	ldr	r3, [pc, #124]	; (800de20 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800dda2:	075e      	lsls	r6, r3, #29
 800dda4:	d118      	bne.n	800ddd8 <pvPortMalloc+0x128>
 800dda6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800ddaa:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800ddac:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800ddae:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800ddb2:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ddb4:	4a18      	ldr	r2, [pc, #96]	; (800de18 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800ddb6:	4817      	ldr	r0, [pc, #92]	; (800de14 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800ddb8:	4c15      	ldr	r4, [pc, #84]	; (800de10 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800ddba:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800ddbc:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ddbe:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ddc0:	4a18      	ldr	r2, [pc, #96]	; (800de24 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800ddc2:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ddc6:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800ddc8:	2200      	movs	r2, #0
 800ddca:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800ddcc:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800ddce:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800ddd2:	e9c1 6300 	strd	r6, r3, [r1]
}
 800ddd6:	e776      	b.n	800dcc6 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800ddd8:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800ddda:	f021 0107 	bic.w	r1, r1, #7
 800ddde:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dde2:	460b      	mov	r3, r1
 800dde4:	e7e2      	b.n	800ddac <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dde6:	6849      	ldr	r1, [r1, #4]
 800dde8:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ddec:	eb04 010e 	add.w	r1, r4, lr
 800ddf0:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ddf2:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ddf6:	d001      	beq.n	800ddfc <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ddf8:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800ddfa:	e7b2      	b.n	800dd62 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ddfc:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ddfe:	42b2      	cmp	r2, r6
 800de00:	d0ab      	beq.n	800dd5a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800de02:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800de04:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800de06:	4470      	add	r0, lr
 800de08:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800de0a:	e7a6      	b.n	800dd5a <pvPortMalloc+0xaa>
 800de0c:	20002708 	.word	0x20002708
 800de10:	2001270c 	.word	0x2001270c
 800de14:	20012720 	.word	0x20012720
 800de18:	20012714 	.word	0x20012714
 800de1c:	20012718 	.word	0x20012718
 800de20:	2000270c 	.word	0x2000270c
 800de24:	20012710 	.word	0x20012710

0800de28 <vPortFree>:
	if( pv != NULL )
 800de28:	b1d0      	cbz	r0, 800de60 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800de2a:	4a2c      	ldr	r2, [pc, #176]	; (800dedc <vPortFree+0xb4>)
 800de2c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800de30:	6812      	ldr	r2, [r2, #0]
 800de32:	4213      	tst	r3, r2
 800de34:	d00b      	beq.n	800de4e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800de36:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800de3a:	b191      	cbz	r1, 800de62 <vPortFree+0x3a>
 800de3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de40:	f383 8811 	msr	BASEPRI, r3
 800de44:	f3bf 8f6f 	isb	sy
 800de48:	f3bf 8f4f 	dsb	sy
 800de4c:	e7fe      	b.n	800de4c <vPortFree+0x24>
 800de4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de52:	f383 8811 	msr	BASEPRI, r3
 800de56:	f3bf 8f6f 	isb	sy
 800de5a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800de5e:	e7fe      	b.n	800de5e <vPortFree+0x36>
 800de60:	4770      	bx	lr
{
 800de62:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800de64:	ea23 0302 	bic.w	r3, r3, r2
{
 800de68:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800de6a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800de6e:	4c1c      	ldr	r4, [pc, #112]	; (800dee0 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800de70:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800de72:	f001 fe65 	bl	800fb40 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800de76:	9801      	ldr	r0, [sp, #4]
 800de78:	6822      	ldr	r2, [r4, #0]
 800de7a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800de7e:	4b19      	ldr	r3, [pc, #100]	; (800dee4 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800de80:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800de82:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800de84:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800de86:	461a      	mov	r2, r3
 800de88:	681b      	ldr	r3, [r3, #0]
 800de8a:	4298      	cmp	r0, r3
 800de8c:	d8fb      	bhi.n	800de86 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800de8e:	6854      	ldr	r4, [r2, #4]
 800de90:	eb02 0e04 	add.w	lr, r2, r4
 800de94:	4570      	cmp	r0, lr
 800de96:	d010      	beq.n	800deba <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800de98:	eb00 0c01 	add.w	ip, r0, r1
 800de9c:	4563      	cmp	r3, ip
 800de9e:	d014      	beq.n	800deca <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dea0:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dea2:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dea4:	bf18      	it	ne
 800dea6:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dea8:	4a0f      	ldr	r2, [pc, #60]	; (800dee8 <vPortFree+0xc0>)
 800deaa:	6813      	ldr	r3, [r2, #0]
 800deac:	3301      	adds	r3, #1
 800deae:	6013      	str	r3, [r2, #0]
}
 800deb0:	b002      	add	sp, #8
 800deb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800deb6:	f001 be4b 	b.w	800fb50 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800deba:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800debc:	1850      	adds	r0, r2, r1
 800debe:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dec0:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dec2:	d001      	beq.n	800dec8 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dec4:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800dec6:	e7ef      	b.n	800dea8 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dec8:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800deca:	4c08      	ldr	r4, [pc, #32]	; (800deec <vPortFree+0xc4>)
 800decc:	6824      	ldr	r4, [r4, #0]
 800dece:	42a3      	cmp	r3, r4
 800ded0:	d0e6      	beq.n	800dea0 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ded2:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ded6:	4421      	add	r1, r4
 800ded8:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800deda:	e7e1      	b.n	800dea0 <vPortFree+0x78>
 800dedc:	2001270c 	.word	0x2001270c
 800dee0:	20012710 	.word	0x20012710
 800dee4:	20012720 	.word	0x20012720
 800dee8:	2001271c 	.word	0x2001271c
 800deec:	20002708 	.word	0x20002708

0800def0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800def0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800def4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800def8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800defa:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800defe:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800df02:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800df04:	4770      	bx	lr
 800df06:	bf00      	nop

0800df08 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800df08:	2300      	movs	r3, #0
 800df0a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800df0c:	4770      	bx	lr
 800df0e:	bf00      	nop

0800df10 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800df10:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800df12:	689a      	ldr	r2, [r3, #8]
 800df14:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800df16:	6802      	ldr	r2, [r0, #0]
{
 800df18:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800df1a:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800df1c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800df1e:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800df20:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800df22:	6099      	str	r1, [r3, #8]
}
 800df24:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800df28:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800df2a:	6002      	str	r2, [r0, #0]
}
 800df2c:	4770      	bx	lr
 800df2e:	bf00      	nop

0800df30 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800df30:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800df32:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800df34:	1c6b      	adds	r3, r5, #1
 800df36:	d010      	beq.n	800df5a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800df38:	f100 0308 	add.w	r3, r0, #8
 800df3c:	461c      	mov	r4, r3
 800df3e:	685b      	ldr	r3, [r3, #4]
 800df40:	681a      	ldr	r2, [r3, #0]
 800df42:	42aa      	cmp	r2, r5
 800df44:	d9fa      	bls.n	800df3c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800df46:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800df48:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800df4a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800df4c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800df4e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800df50:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800df52:	6108      	str	r0, [r1, #16]
}
 800df54:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800df56:	6002      	str	r2, [r0, #0]
}
 800df58:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800df5a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800df5c:	6863      	ldr	r3, [r4, #4]
 800df5e:	e7f2      	b.n	800df46 <vListInsert+0x16>

0800df60 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800df60:	6903      	ldr	r3, [r0, #16]
{
 800df62:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800df64:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800df68:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800df6a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800df6c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800df6e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800df70:	bf08      	it	eq
 800df72:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800df74:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800df76:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800df7a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800df7c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800df7e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800df80:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800df82:	6818      	ldr	r0, [r3, #0]
}
 800df84:	4770      	bx	lr
 800df86:	bf00      	nop

0800df88 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800df88:	4808      	ldr	r0, [pc, #32]	; (800dfac <prvPortStartFirstTask+0x24>)
 800df8a:	6800      	ldr	r0, [r0, #0]
 800df8c:	6800      	ldr	r0, [r0, #0]
 800df8e:	f380 8808 	msr	MSP, r0
 800df92:	f04f 0000 	mov.w	r0, #0
 800df96:	f380 8814 	msr	CONTROL, r0
 800df9a:	b662      	cpsie	i
 800df9c:	b661      	cpsie	f
 800df9e:	f3bf 8f4f 	dsb	sy
 800dfa2:	f3bf 8f6f 	isb	sy
 800dfa6:	df00      	svc	0
 800dfa8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800dfaa:	0000      	.short	0x0000
 800dfac:	e000ed08 	.word	0xe000ed08

0800dfb0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800dfb0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800dfc0 <vPortEnableVFP+0x10>
 800dfb4:	6801      	ldr	r1, [r0, #0]
 800dfb6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800dfba:	6001      	str	r1, [r0, #0]
 800dfbc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800dfbe:	0000      	.short	0x0000
 800dfc0:	e000ed88 	.word	0xe000ed88

0800dfc4 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800dfc4:	4b0e      	ldr	r3, [pc, #56]	; (800e000 <prvTaskExitError+0x3c>)
 800dfc6:	681b      	ldr	r3, [r3, #0]
{
 800dfc8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800dfca:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800dfcc:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800dfce:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800dfd0:	d008      	beq.n	800dfe4 <prvTaskExitError+0x20>
 800dfd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfd6:	f383 8811 	msr	BASEPRI, r3
 800dfda:	f3bf 8f6f 	isb	sy
 800dfde:	f3bf 8f4f 	dsb	sy
 800dfe2:	e7fe      	b.n	800dfe2 <prvTaskExitError+0x1e>
 800dfe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfe8:	f383 8811 	msr	BASEPRI, r3
 800dfec:	f3bf 8f6f 	isb	sy
 800dff0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800dff4:	9b01      	ldr	r3, [sp, #4]
 800dff6:	2b00      	cmp	r3, #0
 800dff8:	d0fc      	beq.n	800dff4 <prvTaskExitError+0x30>
}
 800dffa:	b002      	add	sp, #8
 800dffc:	4770      	bx	lr
 800dffe:	bf00      	nop
 800e000:	20000084 	.word	0x20000084

0800e004 <pxPortInitialiseStack>:
{
 800e004:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e006:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e00a:	4c07      	ldr	r4, [pc, #28]	; (800e028 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e00c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e010:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e014:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e018:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e01c:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800e020:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e024:	3844      	subs	r0, #68	; 0x44
 800e026:	4770      	bx	lr
 800e028:	0800dfc5 	.word	0x0800dfc5
 800e02c:	00000000 	.word	0x00000000

0800e030 <SVC_Handler>:
	__asm volatile (
 800e030:	4b07      	ldr	r3, [pc, #28]	; (800e050 <pxCurrentTCBConst2>)
 800e032:	6819      	ldr	r1, [r3, #0]
 800e034:	6808      	ldr	r0, [r1, #0]
 800e036:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e03a:	f380 8809 	msr	PSP, r0
 800e03e:	f3bf 8f6f 	isb	sy
 800e042:	f04f 0000 	mov.w	r0, #0
 800e046:	f380 8811 	msr	BASEPRI, r0
 800e04a:	4770      	bx	lr
 800e04c:	f3af 8000 	nop.w

0800e050 <pxCurrentTCBConst2>:
 800e050:	20012770 	.word	0x20012770

0800e054 <vPortEnterCritical>:
 800e054:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e058:	f383 8811 	msr	BASEPRI, r3
 800e05c:	f3bf 8f6f 	isb	sy
 800e060:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e064:	4a0b      	ldr	r2, [pc, #44]	; (800e094 <vPortEnterCritical+0x40>)
 800e066:	6813      	ldr	r3, [r2, #0]
 800e068:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e06a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e06c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e06e:	d000      	beq.n	800e072 <vPortEnterCritical+0x1e>
}
 800e070:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e072:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e076:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800e07a:	b2db      	uxtb	r3, r3
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	d0f7      	beq.n	800e070 <vPortEnterCritical+0x1c>
 800e080:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e084:	f383 8811 	msr	BASEPRI, r3
 800e088:	f3bf 8f6f 	isb	sy
 800e08c:	f3bf 8f4f 	dsb	sy
 800e090:	e7fe      	b.n	800e090 <vPortEnterCritical+0x3c>
 800e092:	bf00      	nop
 800e094:	20000084 	.word	0x20000084

0800e098 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e098:	4a08      	ldr	r2, [pc, #32]	; (800e0bc <vPortExitCritical+0x24>)
 800e09a:	6813      	ldr	r3, [r2, #0]
 800e09c:	b943      	cbnz	r3, 800e0b0 <vPortExitCritical+0x18>
 800e09e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a2:	f383 8811 	msr	BASEPRI, r3
 800e0a6:	f3bf 8f6f 	isb	sy
 800e0aa:	f3bf 8f4f 	dsb	sy
 800e0ae:	e7fe      	b.n	800e0ae <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e0b0:	3b01      	subs	r3, #1
 800e0b2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e0b4:	b90b      	cbnz	r3, 800e0ba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e0b6:	f383 8811 	msr	BASEPRI, r3
}
 800e0ba:	4770      	bx	lr
 800e0bc:	20000084 	.word	0x20000084

0800e0c0 <PendSV_Handler>:
	__asm volatile
 800e0c0:	f3ef 8009 	mrs	r0, PSP
 800e0c4:	f3bf 8f6f 	isb	sy
 800e0c8:	4b15      	ldr	r3, [pc, #84]	; (800e120 <pxCurrentTCBConst>)
 800e0ca:	681a      	ldr	r2, [r3, #0]
 800e0cc:	f01e 0f10 	tst.w	lr, #16
 800e0d0:	bf08      	it	eq
 800e0d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e0d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0da:	6010      	str	r0, [r2, #0]
 800e0dc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e0e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e0e4:	f380 8811 	msr	BASEPRI, r0
 800e0e8:	f3bf 8f4f 	dsb	sy
 800e0ec:	f3bf 8f6f 	isb	sy
 800e0f0:	f001 fd54 	bl	800fb9c <vTaskSwitchContext>
 800e0f4:	f04f 0000 	mov.w	r0, #0
 800e0f8:	f380 8811 	msr	BASEPRI, r0
 800e0fc:	bc09      	pop	{r0, r3}
 800e0fe:	6819      	ldr	r1, [r3, #0]
 800e100:	6808      	ldr	r0, [r1, #0]
 800e102:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e106:	f01e 0f10 	tst.w	lr, #16
 800e10a:	bf08      	it	eq
 800e10c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e110:	f380 8809 	msr	PSP, r0
 800e114:	f3bf 8f6f 	isb	sy
 800e118:	4770      	bx	lr
 800e11a:	bf00      	nop
 800e11c:	f3af 8000 	nop.w

0800e120 <pxCurrentTCBConst>:
 800e120:	20012770 	.word	0x20012770

0800e124 <xPortSysTickHandler>:
{
 800e124:	b508      	push	{r3, lr}
	__asm volatile
 800e126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e12a:	f383 8811 	msr	BASEPRI, r3
 800e12e:	f3bf 8f6f 	isb	sy
 800e132:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e136:	f001 fd21 	bl	800fb7c <xTaskIncrementTick>
 800e13a:	b128      	cbz	r0, 800e148 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e13c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e140:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e144:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e148:	2300      	movs	r3, #0
 800e14a:	f383 8811 	msr	BASEPRI, r3
}
 800e14e:	bd08      	pop	{r3, pc}

0800e150 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e150:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e154:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e156:	4906      	ldr	r1, [pc, #24]	; (800e170 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e158:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e15a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e15c:	680b      	ldr	r3, [r1, #0]
 800e15e:	4905      	ldr	r1, [pc, #20]	; (800e174 <vPortSetupTimerInterrupt+0x24>)
 800e160:	fba1 1303 	umull	r1, r3, r1, r3
 800e164:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e166:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e168:	3b01      	subs	r3, #1
 800e16a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e16c:	6110      	str	r0, [r2, #16]
}
 800e16e:	4770      	bx	lr
 800e170:	20000078 	.word	0x20000078
 800e174:	10624dd3 	.word	0x10624dd3

0800e178 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e178:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e17c:	4a49      	ldr	r2, [pc, #292]	; (800e2a4 <xPortStartScheduler+0x12c>)
 800e17e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e182:	4291      	cmp	r1, r2
 800e184:	d043      	beq.n	800e20e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e186:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e18a:	4b47      	ldr	r3, [pc, #284]	; (800e2a8 <xPortStartScheduler+0x130>)
 800e18c:	429a      	cmp	r2, r3
 800e18e:	d035      	beq.n	800e1fc <xPortStartScheduler+0x84>
{
 800e190:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e192:	4b46      	ldr	r3, [pc, #280]	; (800e2ac <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e194:	4846      	ldr	r0, [pc, #280]	; (800e2b0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e196:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e198:	4c46      	ldr	r4, [pc, #280]	; (800e2b4 <xPortStartScheduler+0x13c>)
{
 800e19a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e19c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e19e:	b2d2      	uxtb	r2, r2
 800e1a0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e1a2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e1a4:	781b      	ldrb	r3, [r3, #0]
 800e1a6:	b2db      	uxtb	r3, r3
 800e1a8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e1ac:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e1b0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e1b4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e1b8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e1ba:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e1bc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e1be:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e1c0:	bf48      	it	mi
 800e1c2:	2206      	movmi	r2, #6
 800e1c4:	d511      	bpl.n	800e1ea <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e1c6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e1ca:	005b      	lsls	r3, r3, #1
 800e1cc:	b2db      	uxtb	r3, r3
 800e1ce:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e1d2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e1d6:	0609      	lsls	r1, r1, #24
 800e1d8:	4610      	mov	r0, r2
 800e1da:	f102 32ff 	add.w	r2, r2, #4294967295
 800e1de:	d4f2      	bmi.n	800e1c6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e1e0:	2803      	cmp	r0, #3
 800e1e2:	6020      	str	r0, [r4, #0]
 800e1e4:	f88d 3007 	strb.w	r3, [sp, #7]
 800e1e8:	d01a      	beq.n	800e220 <xPortStartScheduler+0xa8>
	__asm volatile
 800e1ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1ee:	f383 8811 	msr	BASEPRI, r3
 800e1f2:	f3bf 8f6f 	isb	sy
 800e1f6:	f3bf 8f4f 	dsb	sy
 800e1fa:	e7fe      	b.n	800e1fa <xPortStartScheduler+0x82>
 800e1fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e200:	f383 8811 	msr	BASEPRI, r3
 800e204:	f3bf 8f6f 	isb	sy
 800e208:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e20c:	e7fe      	b.n	800e20c <xPortStartScheduler+0x94>
 800e20e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e212:	f383 8811 	msr	BASEPRI, r3
 800e216:	f3bf 8f6f 	isb	sy
 800e21a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e21e:	e7fe      	b.n	800e21e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e220:	9b02      	ldr	r3, [sp, #8]
 800e222:	4a22      	ldr	r2, [pc, #136]	; (800e2ac <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e224:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e228:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e22c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e22e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e230:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e232:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e236:	4c20      	ldr	r4, [pc, #128]	; (800e2b8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e238:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e23c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e240:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e244:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e248:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e24c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e24e:	f7ff ff7f 	bl	800e150 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e252:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e254:	f7ff feac 	bl	800dfb0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e258:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e25c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e260:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e264:	f7ff fe90 	bl	800df88 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e268:	f001 fc98 	bl	800fb9c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e26c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e26e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e270:	3301      	adds	r3, #1
 800e272:	d008      	beq.n	800e286 <xPortStartScheduler+0x10e>
 800e274:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e278:	f383 8811 	msr	BASEPRI, r3
 800e27c:	f3bf 8f6f 	isb	sy
 800e280:	f3bf 8f4f 	dsb	sy
 800e284:	e7fe      	b.n	800e284 <xPortStartScheduler+0x10c>
 800e286:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e28a:	f383 8811 	msr	BASEPRI, r3
 800e28e:	f3bf 8f6f 	isb	sy
 800e292:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e296:	9b03      	ldr	r3, [sp, #12]
 800e298:	2b00      	cmp	r3, #0
 800e29a:	d0fc      	beq.n	800e296 <xPortStartScheduler+0x11e>
}
 800e29c:	2000      	movs	r0, #0
 800e29e:	b004      	add	sp, #16
 800e2a0:	bd70      	pop	{r4, r5, r6, pc}
 800e2a2:	bf00      	nop
 800e2a4:	410fc271 	.word	0x410fc271
 800e2a8:	410fc270 	.word	0x410fc270
 800e2ac:	e000e400 	.word	0xe000e400
 800e2b0:	20012728 	.word	0x20012728
 800e2b4:	2001272c 	.word	0x2001272c
 800e2b8:	20000084 	.word	0x20000084

0800e2bc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e2bc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e2c0:	2b0f      	cmp	r3, #15
 800e2c2:	d90e      	bls.n	800e2e2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e2c4:	4911      	ldr	r1, [pc, #68]	; (800e30c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e2c6:	4a12      	ldr	r2, [pc, #72]	; (800e310 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e2c8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e2ca:	7812      	ldrb	r2, [r2, #0]
 800e2cc:	429a      	cmp	r2, r3
 800e2ce:	d908      	bls.n	800e2e2 <vPortValidateInterruptPriority+0x26>
 800e2d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2d4:	f383 8811 	msr	BASEPRI, r3
 800e2d8:	f3bf 8f6f 	isb	sy
 800e2dc:	f3bf 8f4f 	dsb	sy
 800e2e0:	e7fe      	b.n	800e2e0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e2e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e2e6:	4a0b      	ldr	r2, [pc, #44]	; (800e314 <vPortValidateInterruptPriority+0x58>)
 800e2e8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e2ec:	6812      	ldr	r2, [r2, #0]
 800e2ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e2f2:	4293      	cmp	r3, r2
 800e2f4:	d908      	bls.n	800e308 <vPortValidateInterruptPriority+0x4c>
 800e2f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2fa:	f383 8811 	msr	BASEPRI, r3
 800e2fe:	f3bf 8f6f 	isb	sy
 800e302:	f3bf 8f4f 	dsb	sy
 800e306:	e7fe      	b.n	800e306 <vPortValidateInterruptPriority+0x4a>
	}
 800e308:	4770      	bx	lr
 800e30a:	bf00      	nop
 800e30c:	e000e3f0 	.word	0xe000e3f0
 800e310:	20012728 	.word	0x20012728
 800e314:	2001272c 	.word	0x2001272c

0800e318 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e318:	b570      	push	{r4, r5, r6, lr}
 800e31a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e31c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e31e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e320:	b920      	cbnz	r0, 800e32c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e322:	6825      	ldr	r5, [r4, #0]
 800e324:	b34d      	cbz	r5, 800e37a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e326:	3601      	adds	r6, #1
 800e328:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e32a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e32c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e32e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e330:	b97d      	cbnz	r5, 800e352 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e332:	6860      	ldr	r0, [r4, #4]
 800e334:	f01c fff1 	bl	802b31a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e338:	6863      	ldr	r3, [r4, #4]
 800e33a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e33c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e33e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e340:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e342:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e344:	bf24      	itt	cs
 800e346:	6823      	ldrcs	r3, [r4, #0]
 800e348:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e34a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e34c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e34e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e350:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e352:	68e0      	ldr	r0, [r4, #12]
 800e354:	f01c ffe1 	bl	802b31a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e358:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e35a:	68e3      	ldr	r3, [r4, #12]
 800e35c:	4251      	negs	r1, r2
 800e35e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e360:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e362:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e364:	4293      	cmp	r3, r2
 800e366:	d202      	bcs.n	800e36e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e368:	68a3      	ldr	r3, [r4, #8]
 800e36a:	440b      	add	r3, r1
 800e36c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e36e:	2d02      	cmp	r5, #2
 800e370:	d008      	beq.n	800e384 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e372:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e374:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e376:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e378:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e37a:	68a0      	ldr	r0, [r4, #8]
 800e37c:	f001 fde0 	bl	800ff40 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e380:	60a5      	str	r5, [r4, #8]
 800e382:	e7d0      	b.n	800e326 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e384:	2e01      	cmp	r6, #1
 800e386:	bf38      	it	cc
 800e388:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e38a:	2000      	movs	r0, #0
 800e38c:	e7cc      	b.n	800e328 <prvCopyDataToQueue+0x10>
 800e38e:	bf00      	nop

0800e390 <xQueueGenericCreateStatic>:
	{
 800e390:	b530      	push	{r4, r5, lr}
 800e392:	b083      	sub	sp, #12
 800e394:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e398:	b940      	cbnz	r0, 800e3ac <xQueueGenericCreateStatic+0x1c>
 800e39a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e39e:	f383 8811 	msr	BASEPRI, r3
 800e3a2:	f3bf 8f6f 	isb	sy
 800e3a6:	f3bf 8f4f 	dsb	sy
 800e3aa:	e7fe      	b.n	800e3aa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e3ac:	461d      	mov	r5, r3
 800e3ae:	b17b      	cbz	r3, 800e3d0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e3b0:	b302      	cbz	r2, 800e3f4 <xQueueGenericCreateStatic+0x64>
 800e3b2:	b1b1      	cbz	r1, 800e3e2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e3b4:	2350      	movs	r3, #80	; 0x50
 800e3b6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e3b8:	9b01      	ldr	r3, [sp, #4]
 800e3ba:	2b50      	cmp	r3, #80	; 0x50
 800e3bc:	d023      	beq.n	800e406 <xQueueGenericCreateStatic+0x76>
 800e3be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3c2:	f383 8811 	msr	BASEPRI, r3
 800e3c6:	f3bf 8f6f 	isb	sy
 800e3ca:	f3bf 8f4f 	dsb	sy
 800e3ce:	e7fe      	b.n	800e3ce <xQueueGenericCreateStatic+0x3e>
 800e3d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3d4:	f383 8811 	msr	BASEPRI, r3
 800e3d8:	f3bf 8f6f 	isb	sy
 800e3dc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e3e0:	e7fe      	b.n	800e3e0 <xQueueGenericCreateStatic+0x50>
 800e3e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3e6:	f383 8811 	msr	BASEPRI, r3
 800e3ea:	f3bf 8f6f 	isb	sy
 800e3ee:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e3f2:	e7fe      	b.n	800e3f2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e3f4:	bb89      	cbnz	r1, 800e45a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e3f6:	2250      	movs	r2, #80	; 0x50
 800e3f8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e3fa:	9a01      	ldr	r2, [sp, #4]
 800e3fc:	2a50      	cmp	r2, #80	; 0x50
 800e3fe:	d1de      	bne.n	800e3be <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e400:	9a01      	ldr	r2, [sp, #4]
 800e402:	462a      	mov	r2, r5
 800e404:	e000      	b.n	800e408 <xQueueGenericCreateStatic+0x78>
 800e406:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e408:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e40a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e40c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e410:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e414:	f7ff fe1e 	bl	800e054 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e418:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e41c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e41e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e420:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e424:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e426:	4401      	add	r1, r0
 800e428:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e42a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e42c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e42e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e430:	21ff      	movs	r1, #255	; 0xff
 800e432:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e436:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e438:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e43c:	f105 0010 	add.w	r0, r5, #16
 800e440:	f7ff fd56 	bl	800def0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e444:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e448:	f7ff fd52 	bl	800def0 <vListInitialise>
	taskEXIT_CRITICAL();
 800e44c:	f7ff fe24 	bl	800e098 <vPortExitCritical>
	}
 800e450:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e452:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e456:	b003      	add	sp, #12
 800e458:	bd30      	pop	{r4, r5, pc}
 800e45a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e45e:	f383 8811 	msr	BASEPRI, r3
 800e462:	f3bf 8f6f 	isb	sy
 800e466:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e46a:	e7fe      	b.n	800e46a <xQueueGenericCreateStatic+0xda>

0800e46c <xQueueGenericCreate>:
	{
 800e46c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e46e:	b940      	cbnz	r0, 800e482 <xQueueGenericCreate+0x16>
 800e470:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e474:	f383 8811 	msr	BASEPRI, r3
 800e478:	f3bf 8f6f 	isb	sy
 800e47c:	f3bf 8f4f 	dsb	sy
 800e480:	e7fe      	b.n	800e480 <xQueueGenericCreate+0x14>
 800e482:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e484:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e488:	3050      	adds	r0, #80	; 0x50
 800e48a:	460e      	mov	r6, r1
 800e48c:	4617      	mov	r7, r2
 800e48e:	f7ff fc0f 	bl	800dcb0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e492:	4604      	mov	r4, r0
 800e494:	b340      	cbz	r0, 800e4e8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e496:	2300      	movs	r3, #0
 800e498:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e49c:	b336      	cbz	r6, 800e4ec <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e49e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e4a2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e4a4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e4a8:	f7ff fdd4 	bl	800e054 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4ac:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e4b0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e4b2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4b4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4b8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4ba:	440a      	add	r2, r1
 800e4bc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e4be:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4c0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e4c2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e4c4:	22ff      	movs	r2, #255	; 0xff
 800e4c6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4ca:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e4cc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e4d0:	f104 0010 	add.w	r0, r4, #16
 800e4d4:	f7ff fd0c 	bl	800def0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e4d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e4dc:	f7ff fd08 	bl	800def0 <vListInitialise>
	taskEXIT_CRITICAL();
 800e4e0:	f7ff fdda 	bl	800e098 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e4e4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e4e8:	4620      	mov	r0, r4
 800e4ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e4ec:	4603      	mov	r3, r0
 800e4ee:	e7d8      	b.n	800e4a2 <xQueueGenericCreate+0x36>

0800e4f0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e4f0:	b940      	cbnz	r0, 800e504 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e4f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4f6:	f383 8811 	msr	BASEPRI, r3
 800e4fa:	f3bf 8f6f 	isb	sy
 800e4fe:	f3bf 8f4f 	dsb	sy
 800e502:	e7fe      	b.n	800e502 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e504:	4288      	cmp	r0, r1
 800e506:	d208      	bcs.n	800e51a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e50c:	f383 8811 	msr	BASEPRI, r3
 800e510:	f3bf 8f6f 	isb	sy
 800e514:	f3bf 8f4f 	dsb	sy
 800e518:	e7fe      	b.n	800e518 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e51a:	b530      	push	{r4, r5, lr}
 800e51c:	4615      	mov	r5, r2
 800e51e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e520:	2a00      	cmp	r2, #0
 800e522:	d03c      	beq.n	800e59e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e524:	2350      	movs	r3, #80	; 0x50
 800e526:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e528:	9b03      	ldr	r3, [sp, #12]
 800e52a:	2b50      	cmp	r3, #80	; 0x50
 800e52c:	d008      	beq.n	800e540 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e52e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e532:	f383 8811 	msr	BASEPRI, r3
 800e536:	f3bf 8f6f 	isb	sy
 800e53a:	f3bf 8f4f 	dsb	sy
 800e53e:	e7fe      	b.n	800e53e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e540:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e542:	2301      	movs	r3, #1
 800e544:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e548:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e54a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e54e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e550:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e552:	f7ff fd7f 	bl	800e054 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e556:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e55a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e55c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e55e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e562:	1ac3      	subs	r3, r0, r3
 800e564:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e566:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e568:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e56c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e570:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e572:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e574:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e578:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e57a:	f105 0010 	add.w	r0, r5, #16
 800e57e:	f7ff fcb7 	bl	800def0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e582:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e586:	f7ff fcb3 	bl	800def0 <vListInitialise>
	taskEXIT_CRITICAL();
 800e58a:	f7ff fd85 	bl	800e098 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e58e:	9901      	ldr	r1, [sp, #4]
 800e590:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e592:	2302      	movs	r3, #2
	}
 800e594:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e596:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e59a:	b005      	add	sp, #20
 800e59c:	bd30      	pop	{r4, r5, pc}
 800e59e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5a2:	f383 8811 	msr	BASEPRI, r3
 800e5a6:	f3bf 8f6f 	isb	sy
 800e5aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e5ae:	e7fe      	b.n	800e5ae <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e5b0 <xQueueCreateCountingSemaphore>:
	{
 800e5b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e5b2:	b940      	cbnz	r0, 800e5c6 <xQueueCreateCountingSemaphore+0x16>
 800e5b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5b8:	f383 8811 	msr	BASEPRI, r3
 800e5bc:	f3bf 8f6f 	isb	sy
 800e5c0:	f3bf 8f4f 	dsb	sy
 800e5c4:	e7fe      	b.n	800e5c4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e5c6:	4288      	cmp	r0, r1
 800e5c8:	460e      	mov	r6, r1
 800e5ca:	4604      	mov	r4, r0
 800e5cc:	d208      	bcs.n	800e5e0 <xQueueCreateCountingSemaphore+0x30>
 800e5ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5d2:	f383 8811 	msr	BASEPRI, r3
 800e5d6:	f3bf 8f6f 	isb	sy
 800e5da:	f3bf 8f4f 	dsb	sy
 800e5de:	e7fe      	b.n	800e5de <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e5e0:	2050      	movs	r0, #80	; 0x50
 800e5e2:	f7ff fb65 	bl	800dcb0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e5e6:	4605      	mov	r5, r0
 800e5e8:	b330      	cbz	r0, 800e638 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e5ea:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e5ec:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e5f0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e5f4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e5f6:	f7ff fd2d 	bl	800e054 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e5fa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e5fe:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e600:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e602:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e606:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e608:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e60a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e60c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e60e:	22ff      	movs	r2, #255	; 0xff
 800e610:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e614:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e616:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e618:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e61c:	f105 0010 	add.w	r0, r5, #16
 800e620:	f7ff fc66 	bl	800def0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e624:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e628:	f7ff fc62 	bl	800def0 <vListInitialise>
	taskEXIT_CRITICAL();
 800e62c:	f7ff fd34 	bl	800e098 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e630:	2302      	movs	r3, #2
 800e632:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e636:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e638:	4628      	mov	r0, r5
 800e63a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e63c <xQueueGenericSend>:
{
 800e63c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e640:	b085      	sub	sp, #20
 800e642:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e644:	2800      	cmp	r0, #0
 800e646:	f000 80a4 	beq.w	800e792 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e64a:	4688      	mov	r8, r1
 800e64c:	461f      	mov	r7, r3
 800e64e:	4604      	mov	r4, r0
 800e650:	2900      	cmp	r1, #0
 800e652:	f000 8091 	beq.w	800e778 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e656:	2f02      	cmp	r7, #2
 800e658:	d10b      	bne.n	800e672 <xQueueGenericSend+0x36>
 800e65a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e65c:	2b01      	cmp	r3, #1
 800e65e:	d008      	beq.n	800e672 <xQueueGenericSend+0x36>
 800e660:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e664:	f383 8811 	msr	BASEPRI, r3
 800e668:	f3bf 8f6f 	isb	sy
 800e66c:	f3bf 8f4f 	dsb	sy
 800e670:	e7fe      	b.n	800e670 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e672:	f001 fc0f 	bl	800fe94 <xTaskGetSchedulerState>
 800e676:	4605      	mov	r5, r0
 800e678:	2800      	cmp	r0, #0
 800e67a:	f000 8093 	beq.w	800e7a4 <xQueueGenericSend+0x168>
 800e67e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e680:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e684:	f7ff fce6 	bl	800e054 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e688:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e68a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e68c:	429a      	cmp	r2, r3
 800e68e:	f0c0 80ef 	bcc.w	800e870 <xQueueGenericSend+0x234>
 800e692:	2f02      	cmp	r7, #2
 800e694:	f000 80ec 	beq.w	800e870 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e698:	9801      	ldr	r0, [sp, #4]
 800e69a:	2800      	cmp	r0, #0
 800e69c:	f000 8101 	beq.w	800e8a2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e6a0:	2d00      	cmp	r5, #0
 800e6a2:	f000 80e1 	beq.w	800e868 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e6a6:	f7ff fcf7 	bl	800e098 <vPortExitCritical>
		vTaskSuspendAll();
 800e6aa:	f001 fa49 	bl	800fb40 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e6ae:	f7ff fcd1 	bl	800e054 <vPortEnterCritical>
 800e6b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e6b6:	2bff      	cmp	r3, #255	; 0xff
 800e6b8:	bf04      	itt	eq
 800e6ba:	2300      	moveq	r3, #0
 800e6bc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e6c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6c4:	2bff      	cmp	r3, #255	; 0xff
 800e6c6:	bf04      	itt	eq
 800e6c8:	2300      	moveq	r3, #0
 800e6ca:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e6ce:	f7ff fce3 	bl	800e098 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e6d2:	a901      	add	r1, sp, #4
 800e6d4:	a802      	add	r0, sp, #8
 800e6d6:	f001 fb8f 	bl	800fdf8 <xTaskCheckForTimeOut>
 800e6da:	2800      	cmp	r0, #0
 800e6dc:	f040 80e6 	bne.w	800e8ac <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e6e0:	f7ff fcb8 	bl	800e054 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e6e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e6e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e6e8:	429a      	cmp	r2, r3
 800e6ea:	d068      	beq.n	800e7be <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e6ec:	f7ff fcd4 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6f0:	f7ff fcb0 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6f4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e6f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6fa:	2d00      	cmp	r5, #0
 800e6fc:	dc04      	bgt.n	800e708 <xQueueGenericSend+0xcc>
 800e6fe:	e011      	b.n	800e724 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e700:	1e6a      	subs	r2, r5, #1
 800e702:	b2d3      	uxtb	r3, r2
 800e704:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e706:	b16b      	cbz	r3, 800e724 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e708:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e70a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e70c:	b153      	cbz	r3, 800e724 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e70e:	f001 fb1f 	bl	800fd50 <xTaskRemoveFromEventList>
 800e712:	2800      	cmp	r0, #0
 800e714:	d0f4      	beq.n	800e700 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e716:	f001 fbb7 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800e71a:	1e6a      	subs	r2, r5, #1
 800e71c:	b2d3      	uxtb	r3, r2
 800e71e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e720:	2b00      	cmp	r3, #0
 800e722:	d1f1      	bne.n	800e708 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e724:	23ff      	movs	r3, #255	; 0xff
 800e726:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e72a:	f7ff fcb5 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e72e:	f7ff fc91 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e732:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e736:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e738:	2d00      	cmp	r5, #0
 800e73a:	dd14      	ble.n	800e766 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e73c:	f104 0910 	add.w	r9, r4, #16
 800e740:	e003      	b.n	800e74a <xQueueGenericSend+0x10e>
				--cRxLock;
 800e742:	1e6a      	subs	r2, r5, #1
 800e744:	b2d3      	uxtb	r3, r2
 800e746:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e748:	b16b      	cbz	r3, 800e766 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e74a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e74c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e74e:	b153      	cbz	r3, 800e766 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e750:	f001 fafe 	bl	800fd50 <xTaskRemoveFromEventList>
 800e754:	2800      	cmp	r0, #0
 800e756:	d0f4      	beq.n	800e742 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e758:	f001 fb96 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800e75c:	1e6a      	subs	r2, r5, #1
 800e75e:	b2d3      	uxtb	r3, r2
 800e760:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e762:	2b00      	cmp	r3, #0
 800e764:	d1f1      	bne.n	800e74a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e766:	23ff      	movs	r3, #255	; 0xff
 800e768:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e76c:	f7ff fc94 	bl	800e098 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e770:	f001 f9ee 	bl	800fb50 <xTaskResumeAll>
 800e774:	2501      	movs	r5, #1
 800e776:	e785      	b.n	800e684 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e778:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e77a:	2b00      	cmp	r3, #0
 800e77c:	f43f af6b 	beq.w	800e656 <xQueueGenericSend+0x1a>
 800e780:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e784:	f383 8811 	msr	BASEPRI, r3
 800e788:	f3bf 8f6f 	isb	sy
 800e78c:	f3bf 8f4f 	dsb	sy
 800e790:	e7fe      	b.n	800e790 <xQueueGenericSend+0x154>
 800e792:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e796:	f383 8811 	msr	BASEPRI, r3
 800e79a:	f3bf 8f6f 	isb	sy
 800e79e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e7a2:	e7fe      	b.n	800e7a2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e7a4:	9b01      	ldr	r3, [sp, #4]
 800e7a6:	2b00      	cmp	r3, #0
 800e7a8:	f43f af6a 	beq.w	800e680 <xQueueGenericSend+0x44>
 800e7ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b0:	f383 8811 	msr	BASEPRI, r3
 800e7b4:	f3bf 8f6f 	isb	sy
 800e7b8:	f3bf 8f4f 	dsb	sy
 800e7bc:	e7fe      	b.n	800e7bc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e7be:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e7c2:	f7ff fc69 	bl	800e098 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e7c6:	9901      	ldr	r1, [sp, #4]
 800e7c8:	4648      	mov	r0, r9
 800e7ca:	f001 fa33 	bl	800fc34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e7ce:	f7ff fc41 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e7d2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e7d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7d8:	2d00      	cmp	r5, #0
 800e7da:	dc04      	bgt.n	800e7e6 <xQueueGenericSend+0x1aa>
 800e7dc:	e011      	b.n	800e802 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e7de:	1e6b      	subs	r3, r5, #1
 800e7e0:	b2da      	uxtb	r2, r3
 800e7e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7e4:	b16a      	cbz	r2, 800e802 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7e8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7ea:	b153      	cbz	r3, 800e802 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7ec:	f001 fab0 	bl	800fd50 <xTaskRemoveFromEventList>
 800e7f0:	2800      	cmp	r0, #0
 800e7f2:	d0f4      	beq.n	800e7de <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e7f4:	f001 fb48 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800e7f8:	1e6b      	subs	r3, r5, #1
 800e7fa:	b2da      	uxtb	r2, r3
 800e7fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7fe:	2a00      	cmp	r2, #0
 800e800:	d1f1      	bne.n	800e7e6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e802:	23ff      	movs	r3, #255	; 0xff
 800e804:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e808:	f7ff fc46 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e80c:	f7ff fc22 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e810:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e814:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e816:	2d00      	cmp	r5, #0
 800e818:	dc04      	bgt.n	800e824 <xQueueGenericSend+0x1e8>
 800e81a:	e011      	b.n	800e840 <xQueueGenericSend+0x204>
				--cRxLock;
 800e81c:	1e6b      	subs	r3, r5, #1
 800e81e:	b2da      	uxtb	r2, r3
 800e820:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e822:	b16a      	cbz	r2, 800e840 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e824:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e826:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e828:	b153      	cbz	r3, 800e840 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e82a:	f001 fa91 	bl	800fd50 <xTaskRemoveFromEventList>
 800e82e:	2800      	cmp	r0, #0
 800e830:	d0f4      	beq.n	800e81c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e832:	f001 fb29 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800e836:	1e6b      	subs	r3, r5, #1
 800e838:	b2da      	uxtb	r2, r3
 800e83a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e83c:	2a00      	cmp	r2, #0
 800e83e:	d1f1      	bne.n	800e824 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e840:	23ff      	movs	r3, #255	; 0xff
 800e842:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e846:	f7ff fc27 	bl	800e098 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e84a:	f001 f981 	bl	800fb50 <xTaskResumeAll>
 800e84e:	2800      	cmp	r0, #0
 800e850:	d190      	bne.n	800e774 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e852:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e856:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e85a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e85e:	f3bf 8f4f 	dsb	sy
 800e862:	f3bf 8f6f 	isb	sy
 800e866:	e785      	b.n	800e774 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e868:	a802      	add	r0, sp, #8
 800e86a:	f001 fab9 	bl	800fde0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e86e:	e71a      	b.n	800e6a6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e870:	463a      	mov	r2, r7
 800e872:	4641      	mov	r1, r8
 800e874:	4620      	mov	r0, r4
 800e876:	f7ff fd4f 	bl	800e318 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e87a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e87c:	2b00      	cmp	r3, #0
 800e87e:	d153      	bne.n	800e928 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e880:	b148      	cbz	r0, 800e896 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e882:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e886:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e88a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e88e:	f3bf 8f4f 	dsb	sy
 800e892:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e896:	f7ff fbff 	bl	800e098 <vPortExitCritical>
				return pdPASS;
 800e89a:	2001      	movs	r0, #1
}
 800e89c:	b005      	add	sp, #20
 800e89e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e8a2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e8a4:	f7ff fbf8 	bl	800e098 <vPortExitCritical>
					return errQUEUE_FULL;
 800e8a8:	9800      	ldr	r0, [sp, #0]
 800e8aa:	e7f7      	b.n	800e89c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e8ac:	f7ff fbd2 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e8b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e8b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8b6:	2d00      	cmp	r5, #0
 800e8b8:	dd10      	ble.n	800e8dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8ba:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e8be:	e003      	b.n	800e8c8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e8c0:	1e6b      	subs	r3, r5, #1
 800e8c2:	b2da      	uxtb	r2, r3
 800e8c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8c6:	b14a      	cbz	r2, 800e8dc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8ca:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8cc:	b133      	cbz	r3, 800e8dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8ce:	f001 fa3f 	bl	800fd50 <xTaskRemoveFromEventList>
 800e8d2:	2800      	cmp	r0, #0
 800e8d4:	d0f4      	beq.n	800e8c0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e8d6:	f001 fad7 	bl	800fe88 <vTaskMissedYield>
 800e8da:	e7f1      	b.n	800e8c0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e8dc:	23ff      	movs	r3, #255	; 0xff
 800e8de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e8e2:	f7ff fbd9 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e8e6:	f7ff fbb5 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e8ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e8ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e8f0:	2d00      	cmp	r5, #0
 800e8f2:	dd10      	ble.n	800e916 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e8f4:	f104 0610 	add.w	r6, r4, #16
 800e8f8:	e003      	b.n	800e902 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e8fa:	1e6b      	subs	r3, r5, #1
 800e8fc:	b2da      	uxtb	r2, r3
 800e8fe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e900:	b14a      	cbz	r2, 800e916 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e902:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e904:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e906:	b133      	cbz	r3, 800e916 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e908:	f001 fa22 	bl	800fd50 <xTaskRemoveFromEventList>
 800e90c:	2800      	cmp	r0, #0
 800e90e:	d0f4      	beq.n	800e8fa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e910:	f001 faba 	bl	800fe88 <vTaskMissedYield>
 800e914:	e7f1      	b.n	800e8fa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e916:	23ff      	movs	r3, #255	; 0xff
 800e918:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e91c:	f7ff fbbc 	bl	800e098 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e920:	f001 f916 	bl	800fb50 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e924:	2000      	movs	r0, #0
 800e926:	e7b9      	b.n	800e89c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e928:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e92c:	f001 fa10 	bl	800fd50 <xTaskRemoveFromEventList>
 800e930:	2800      	cmp	r0, #0
 800e932:	d0b0      	beq.n	800e896 <xQueueGenericSend+0x25a>
 800e934:	e7a5      	b.n	800e882 <xQueueGenericSend+0x246>
 800e936:	bf00      	nop

0800e938 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e938:	2800      	cmp	r0, #0
 800e93a:	d04b      	beq.n	800e9d4 <xQueueGenericSendFromISR+0x9c>
{
 800e93c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e940:	460e      	mov	r6, r1
 800e942:	4617      	mov	r7, r2
 800e944:	461d      	mov	r5, r3
 800e946:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e948:	b321      	cbz	r1, 800e994 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e94a:	2d02      	cmp	r5, #2
 800e94c:	d10b      	bne.n	800e966 <xQueueGenericSendFromISR+0x2e>
 800e94e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e950:	2b01      	cmp	r3, #1
 800e952:	d008      	beq.n	800e966 <xQueueGenericSendFromISR+0x2e>
 800e954:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e958:	f383 8811 	msr	BASEPRI, r3
 800e95c:	f3bf 8f6f 	isb	sy
 800e960:	f3bf 8f4f 	dsb	sy
 800e964:	e7fe      	b.n	800e964 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e966:	f7ff fca9 	bl	800e2bc <vPortValidateInterruptPriority>
	__asm volatile
 800e96a:	f3ef 8811 	mrs	r8, BASEPRI
 800e96e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e972:	f383 8811 	msr	BASEPRI, r3
 800e976:	f3bf 8f6f 	isb	sy
 800e97a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e97e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e980:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e982:	429a      	cmp	r2, r3
 800e984:	d312      	bcc.n	800e9ac <xQueueGenericSendFromISR+0x74>
 800e986:	2d02      	cmp	r5, #2
 800e988:	d010      	beq.n	800e9ac <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e98a:	2000      	movs	r0, #0
	__asm volatile
 800e98c:	f388 8811 	msr	BASEPRI, r8
}
 800e990:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e994:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e996:	2b00      	cmp	r3, #0
 800e998:	d0d7      	beq.n	800e94a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e99a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e99e:	f383 8811 	msr	BASEPRI, r3
 800e9a2:	f3bf 8f6f 	isb	sy
 800e9a6:	f3bf 8f4f 	dsb	sy
 800e9aa:	e7fe      	b.n	800e9aa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e9ac:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e9ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e9b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e9b4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e9b6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e9b8:	4620      	mov	r0, r4
 800e9ba:	f7ff fcad 	bl	800e318 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e9be:	1c6b      	adds	r3, r5, #1
 800e9c0:	d011      	beq.n	800e9e6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e9c2:	1c6b      	adds	r3, r5, #1
 800e9c4:	b25b      	sxtb	r3, r3
 800e9c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e9ca:	2001      	movs	r0, #1
	__asm volatile
 800e9cc:	f388 8811 	msr	BASEPRI, r8
}
 800e9d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e9d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9d8:	f383 8811 	msr	BASEPRI, r3
 800e9dc:	f3bf 8f6f 	isb	sy
 800e9e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e9e4:	e7fe      	b.n	800e9e4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e9e8:	2b00      	cmp	r3, #0
 800e9ea:	d0ee      	beq.n	800e9ca <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e9f0:	f001 f9ae 	bl	800fd50 <xTaskRemoveFromEventList>
 800e9f4:	2800      	cmp	r0, #0
 800e9f6:	d0e8      	beq.n	800e9ca <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e9f8:	2f00      	cmp	r7, #0
 800e9fa:	d0e6      	beq.n	800e9ca <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e9fc:	2001      	movs	r0, #1
 800e9fe:	6038      	str	r0, [r7, #0]
 800ea00:	e7c4      	b.n	800e98c <xQueueGenericSendFromISR+0x54>
 800ea02:	bf00      	nop

0800ea04 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800ea04:	b370      	cbz	r0, 800ea64 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ea06:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800ea08:	b570      	push	{r4, r5, r6, lr}
 800ea0a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800ea0c:	b143      	cbz	r3, 800ea20 <xQueueGiveFromISR+0x1c>
 800ea0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea12:	f383 8811 	msr	BASEPRI, r3
 800ea16:	f3bf 8f6f 	isb	sy
 800ea1a:	f3bf 8f4f 	dsb	sy
 800ea1e:	e7fe      	b.n	800ea1e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ea20:	6803      	ldr	r3, [r0, #0]
 800ea22:	460c      	mov	r4, r1
 800ea24:	b33b      	cbz	r3, 800ea76 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ea26:	f7ff fc49 	bl	800e2bc <vPortValidateInterruptPriority>
	__asm volatile
 800ea2a:	f3ef 8511 	mrs	r5, BASEPRI
 800ea2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea32:	f383 8811 	msr	BASEPRI, r3
 800ea36:	f3bf 8f6f 	isb	sy
 800ea3a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ea3e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ea40:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ea42:	429a      	cmp	r2, r3
 800ea44:	d923      	bls.n	800ea8e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ea46:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ea4a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800ea4c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ea4e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ea50:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800ea52:	d020      	beq.n	800ea96 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ea54:	3301      	adds	r3, #1
 800ea56:	b25b      	sxtb	r3, r3
 800ea58:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800ea5c:	2001      	movs	r0, #1
	__asm volatile
 800ea5e:	f385 8811 	msr	BASEPRI, r5
}
 800ea62:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800ea64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea68:	f383 8811 	msr	BASEPRI, r3
 800ea6c:	f3bf 8f6f 	isb	sy
 800ea70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ea74:	e7fe      	b.n	800ea74 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ea76:	6883      	ldr	r3, [r0, #8]
 800ea78:	2b00      	cmp	r3, #0
 800ea7a:	d0d4      	beq.n	800ea26 <xQueueGiveFromISR+0x22>
 800ea7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea80:	f383 8811 	msr	BASEPRI, r3
 800ea84:	f3bf 8f6f 	isb	sy
 800ea88:	f3bf 8f4f 	dsb	sy
 800ea8c:	e7fe      	b.n	800ea8c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800ea8e:	2000      	movs	r0, #0
	__asm volatile
 800ea90:	f385 8811 	msr	BASEPRI, r5
}
 800ea94:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea96:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ea98:	2b00      	cmp	r3, #0
 800ea9a:	d0df      	beq.n	800ea5c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea9c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800eaa0:	f001 f956 	bl	800fd50 <xTaskRemoveFromEventList>
 800eaa4:	2800      	cmp	r0, #0
 800eaa6:	d0d9      	beq.n	800ea5c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800eaa8:	2c00      	cmp	r4, #0
 800eaaa:	d0d7      	beq.n	800ea5c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800eaac:	2001      	movs	r0, #1
 800eaae:	6020      	str	r0, [r4, #0]
 800eab0:	e7ee      	b.n	800ea90 <xQueueGiveFromISR+0x8c>
 800eab2:	bf00      	nop

0800eab4 <xQueueReceive>:
{
 800eab4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eab8:	b085      	sub	sp, #20
 800eaba:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800eabc:	2800      	cmp	r0, #0
 800eabe:	f000 815c 	beq.w	800ed7a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eac2:	460f      	mov	r7, r1
 800eac4:	4604      	mov	r4, r0
 800eac6:	2900      	cmp	r1, #0
 800eac8:	d079      	beq.n	800ebbe <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eaca:	f001 f9e3 	bl	800fe94 <xTaskGetSchedulerState>
 800eace:	2800      	cmp	r0, #0
 800ead0:	f000 8081 	beq.w	800ebd6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800ead4:	f7ff fabe 	bl	800e054 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ead8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eada:	2d00      	cmp	r5, #0
 800eadc:	f040 8138 	bne.w	800ed50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eae0:	9b01      	ldr	r3, [sp, #4]
 800eae2:	2b00      	cmp	r3, #0
 800eae4:	f000 80d5 	beq.w	800ec92 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eae8:	a802      	add	r0, sp, #8
 800eaea:	f001 f979 	bl	800fde0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800eaee:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eaf0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800eaf4:	f7ff fad0 	bl	800e098 <vPortExitCritical>
		vTaskSuspendAll();
 800eaf8:	f001 f822 	bl	800fb40 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800eafc:	f7ff faaa 	bl	800e054 <vPortEnterCritical>
 800eb00:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb04:	2bff      	cmp	r3, #255	; 0xff
 800eb06:	bf08      	it	eq
 800eb08:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800eb0c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb10:	2bff      	cmp	r3, #255	; 0xff
 800eb12:	bf08      	it	eq
 800eb14:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800eb18:	f7ff fabe 	bl	800e098 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800eb1c:	a901      	add	r1, sp, #4
 800eb1e:	a802      	add	r0, sp, #8
 800eb20:	f001 f96a 	bl	800fdf8 <xTaskCheckForTimeOut>
 800eb24:	2800      	cmp	r0, #0
 800eb26:	d163      	bne.n	800ebf0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800eb28:	f7ff fa94 	bl	800e054 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eb2c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eb2e:	2b00      	cmp	r3, #0
 800eb30:	f000 80b5 	beq.w	800ec9e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800eb34:	f7ff fab0 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb38:	f7ff fa8c 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb3c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb42:	2d00      	cmp	r5, #0
 800eb44:	dc04      	bgt.n	800eb50 <xQueueReceive+0x9c>
 800eb46:	e011      	b.n	800eb6c <xQueueReceive+0xb8>
			--cTxLock;
 800eb48:	1e6b      	subs	r3, r5, #1
 800eb4a:	b2da      	uxtb	r2, r3
 800eb4c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb4e:	b16a      	cbz	r2, 800eb6c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb50:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb52:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb54:	b153      	cbz	r3, 800eb6c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb56:	f001 f8fb 	bl	800fd50 <xTaskRemoveFromEventList>
 800eb5a:	2800      	cmp	r0, #0
 800eb5c:	d0f4      	beq.n	800eb48 <xQueueReceive+0x94>
						vTaskMissedYield();
 800eb5e:	f001 f993 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800eb62:	1e6b      	subs	r3, r5, #1
 800eb64:	b2da      	uxtb	r2, r3
 800eb66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb68:	2a00      	cmp	r2, #0
 800eb6a:	d1f1      	bne.n	800eb50 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb6c:	23ff      	movs	r3, #255	; 0xff
 800eb6e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb72:	f7ff fa91 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb76:	f7ff fa6d 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb80:	2d00      	cmp	r5, #0
 800eb82:	dd14      	ble.n	800ebae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb84:	f104 0910 	add.w	r9, r4, #16
 800eb88:	e003      	b.n	800eb92 <xQueueReceive+0xde>
				--cRxLock;
 800eb8a:	1e6b      	subs	r3, r5, #1
 800eb8c:	b2da      	uxtb	r2, r3
 800eb8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb90:	b16a      	cbz	r2, 800ebae <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb92:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb94:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb96:	b153      	cbz	r3, 800ebae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb98:	f001 f8da 	bl	800fd50 <xTaskRemoveFromEventList>
 800eb9c:	2800      	cmp	r0, #0
 800eb9e:	d0f4      	beq.n	800eb8a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800eba0:	f001 f972 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800eba4:	1e6b      	subs	r3, r5, #1
 800eba6:	b2da      	uxtb	r2, r3
 800eba8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebaa:	2a00      	cmp	r2, #0
 800ebac:	d1f1      	bne.n	800eb92 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800ebae:	23ff      	movs	r3, #255	; 0xff
 800ebb0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ebb4:	f7ff fa70 	bl	800e098 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ebb8:	f000 ffca 	bl	800fb50 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ebbc:	e060      	b.n	800ec80 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ebbe:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ebc0:	2b00      	cmp	r3, #0
 800ebc2:	d082      	beq.n	800eaca <xQueueReceive+0x16>
	__asm volatile
 800ebc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebc8:	f383 8811 	msr	BASEPRI, r3
 800ebcc:	f3bf 8f6f 	isb	sy
 800ebd0:	f3bf 8f4f 	dsb	sy
 800ebd4:	e7fe      	b.n	800ebd4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ebd6:	9b01      	ldr	r3, [sp, #4]
 800ebd8:	2b00      	cmp	r3, #0
 800ebda:	f43f af7b 	beq.w	800ead4 <xQueueReceive+0x20>
 800ebde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebe2:	f383 8811 	msr	BASEPRI, r3
 800ebe6:	f3bf 8f6f 	isb	sy
 800ebea:	f3bf 8f4f 	dsb	sy
 800ebee:	e7fe      	b.n	800ebee <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800ebf0:	f7ff fa30 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ebf4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebf8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ebfa:	2d00      	cmp	r5, #0
 800ebfc:	dc04      	bgt.n	800ec08 <xQueueReceive+0x154>
 800ebfe:	e011      	b.n	800ec24 <xQueueReceive+0x170>
			--cTxLock;
 800ec00:	1e6b      	subs	r3, r5, #1
 800ec02:	b2da      	uxtb	r2, r3
 800ec04:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec06:	b16a      	cbz	r2, 800ec24 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec08:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec0a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec0c:	b153      	cbz	r3, 800ec24 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec0e:	f001 f89f 	bl	800fd50 <xTaskRemoveFromEventList>
 800ec12:	2800      	cmp	r0, #0
 800ec14:	d0f4      	beq.n	800ec00 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800ec16:	f001 f937 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800ec1a:	1e6b      	subs	r3, r5, #1
 800ec1c:	b2da      	uxtb	r2, r3
 800ec1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec20:	2a00      	cmp	r2, #0
 800ec22:	d1f1      	bne.n	800ec08 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800ec24:	23ff      	movs	r3, #255	; 0xff
 800ec26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ec2a:	f7ff fa35 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec2e:	f7ff fa11 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ec32:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec36:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec38:	2d00      	cmp	r5, #0
 800ec3a:	dd14      	ble.n	800ec66 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec3c:	f104 0910 	add.w	r9, r4, #16
 800ec40:	e003      	b.n	800ec4a <xQueueReceive+0x196>
				--cRxLock;
 800ec42:	1e6b      	subs	r3, r5, #1
 800ec44:	b2da      	uxtb	r2, r3
 800ec46:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec48:	b16a      	cbz	r2, 800ec66 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec4a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec4c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec4e:	b153      	cbz	r3, 800ec66 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec50:	f001 f87e 	bl	800fd50 <xTaskRemoveFromEventList>
 800ec54:	2800      	cmp	r0, #0
 800ec56:	d0f4      	beq.n	800ec42 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ec58:	f001 f916 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800ec5c:	1e6b      	subs	r3, r5, #1
 800ec5e:	b2da      	uxtb	r2, r3
 800ec60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec62:	2a00      	cmp	r2, #0
 800ec64:	d1f1      	bne.n	800ec4a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ec66:	23ff      	movs	r3, #255	; 0xff
 800ec68:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ec6c:	f7ff fa14 	bl	800e098 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ec70:	f000 ff6e 	bl	800fb50 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ec74:	f7ff f9ee 	bl	800e054 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ec78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ec7a:	b153      	cbz	r3, 800ec92 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ec7c:	f7ff fa0c 	bl	800e098 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ec80:	f7ff f9e8 	bl	800e054 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec84:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ec86:	2d00      	cmp	r5, #0
 800ec88:	d162      	bne.n	800ed50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ec8a:	9b01      	ldr	r3, [sp, #4]
 800ec8c:	2b00      	cmp	r3, #0
 800ec8e:	f47f af31 	bne.w	800eaf4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ec92:	f7ff fa01 	bl	800e098 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ec96:	2000      	movs	r0, #0
}
 800ec98:	b005      	add	sp, #20
 800ec9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ec9e:	f7ff f9fb 	bl	800e098 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eca2:	9901      	ldr	r1, [sp, #4]
 800eca4:	4630      	mov	r0, r6
 800eca6:	f000 ffc5 	bl	800fc34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ecaa:	f7ff f9d3 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ecae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecb2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecb4:	2d00      	cmp	r5, #0
 800ecb6:	dc04      	bgt.n	800ecc2 <xQueueReceive+0x20e>
 800ecb8:	e011      	b.n	800ecde <xQueueReceive+0x22a>
			--cTxLock;
 800ecba:	1e6b      	subs	r3, r5, #1
 800ecbc:	b2da      	uxtb	r2, r3
 800ecbe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecc0:	b16a      	cbz	r2, 800ecde <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecc4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecc6:	b153      	cbz	r3, 800ecde <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecc8:	f001 f842 	bl	800fd50 <xTaskRemoveFromEventList>
 800eccc:	2800      	cmp	r0, #0
 800ecce:	d0f4      	beq.n	800ecba <xQueueReceive+0x206>
						vTaskMissedYield();
 800ecd0:	f001 f8da 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800ecd4:	1e6b      	subs	r3, r5, #1
 800ecd6:	b2da      	uxtb	r2, r3
 800ecd8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecda:	2a00      	cmp	r2, #0
 800ecdc:	d1f1      	bne.n	800ecc2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ecde:	23ff      	movs	r3, #255	; 0xff
 800ece0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ece4:	f7ff f9d8 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ece8:	f7ff f9b4 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ecec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ecf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecf2:	2d00      	cmp	r5, #0
 800ecf4:	dd14      	ble.n	800ed20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecf6:	f104 0910 	add.w	r9, r4, #16
 800ecfa:	e003      	b.n	800ed04 <xQueueReceive+0x250>
				--cRxLock;
 800ecfc:	1e6b      	subs	r3, r5, #1
 800ecfe:	b2da      	uxtb	r2, r3
 800ed00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed02:	b16a      	cbz	r2, 800ed20 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed06:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed08:	b153      	cbz	r3, 800ed20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed0a:	f001 f821 	bl	800fd50 <xTaskRemoveFromEventList>
 800ed0e:	2800      	cmp	r0, #0
 800ed10:	d0f4      	beq.n	800ecfc <xQueueReceive+0x248>
					vTaskMissedYield();
 800ed12:	f001 f8b9 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800ed16:	1e6b      	subs	r3, r5, #1
 800ed18:	b2da      	uxtb	r2, r3
 800ed1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed1c:	2a00      	cmp	r2, #0
 800ed1e:	d1f1      	bne.n	800ed04 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed20:	23ff      	movs	r3, #255	; 0xff
 800ed22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed26:	f7ff f9b7 	bl	800e098 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ed2a:	f000 ff11 	bl	800fb50 <xTaskResumeAll>
 800ed2e:	2800      	cmp	r0, #0
 800ed30:	d1a6      	bne.n	800ec80 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800ed32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ed36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ed3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ed3e:	f3bf 8f4f 	dsb	sy
 800ed42:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800ed46:	f7ff f985 	bl	800e054 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ed4a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ed4c:	2d00      	cmp	r5, #0
 800ed4e:	d09c      	beq.n	800ec8a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ed50:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ed52:	b152      	cbz	r2, 800ed6a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ed54:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ed56:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ed58:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ed5a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ed5c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ed5e:	bf24      	itt	cs
 800ed60:	6821      	ldrcs	r1, [r4, #0]
 800ed62:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ed64:	4638      	mov	r0, r7
 800ed66:	f01c fad8 	bl	802b31a <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ed6a:	3d01      	subs	r5, #1
 800ed6c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed6e:	6923      	ldr	r3, [r4, #16]
 800ed70:	b963      	cbnz	r3, 800ed8c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800ed72:	f7ff f991 	bl	800e098 <vPortExitCritical>
				return pdPASS;
 800ed76:	2001      	movs	r0, #1
 800ed78:	e78e      	b.n	800ec98 <xQueueReceive+0x1e4>
 800ed7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed7e:	f383 8811 	msr	BASEPRI, r3
 800ed82:	f3bf 8f6f 	isb	sy
 800ed86:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ed8a:	e7fe      	b.n	800ed8a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed8c:	f104 0010 	add.w	r0, r4, #16
 800ed90:	f000 ffde 	bl	800fd50 <xTaskRemoveFromEventList>
 800ed94:	2800      	cmp	r0, #0
 800ed96:	d0ec      	beq.n	800ed72 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800ed98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ed9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eda0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eda4:	f3bf 8f4f 	dsb	sy
 800eda8:	f3bf 8f6f 	isb	sy
 800edac:	e7e1      	b.n	800ed72 <xQueueReceive+0x2be>
 800edae:	bf00      	nop

0800edb0 <xQueueSemaphoreTake>:
{
 800edb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800edb4:	b084      	sub	sp, #16
 800edb6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800edb8:	2800      	cmp	r0, #0
 800edba:	d05c      	beq.n	800ee76 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800edbc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800edbe:	4604      	mov	r4, r0
 800edc0:	b147      	cbz	r7, 800edd4 <xQueueSemaphoreTake+0x24>
 800edc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edc6:	f383 8811 	msr	BASEPRI, r3
 800edca:	f3bf 8f6f 	isb	sy
 800edce:	f3bf 8f4f 	dsb	sy
 800edd2:	e7fe      	b.n	800edd2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800edd4:	f001 f85e 	bl	800fe94 <xTaskGetSchedulerState>
 800edd8:	4605      	mov	r5, r0
 800edda:	2800      	cmp	r0, #0
 800eddc:	d054      	beq.n	800ee88 <xQueueSemaphoreTake+0xd8>
 800edde:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ede0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ede4:	f7ff f936 	bl	800e054 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ede8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800edea:	2b00      	cmp	r3, #0
 800edec:	f040 8148 	bne.w	800f080 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800edf0:	9b01      	ldr	r3, [sp, #4]
 800edf2:	2b00      	cmp	r3, #0
 800edf4:	f000 813a 	beq.w	800f06c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800edf8:	2d00      	cmp	r5, #0
 800edfa:	f000 809d 	beq.w	800ef38 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800edfe:	f7ff f94b 	bl	800e098 <vPortExitCritical>
		vTaskSuspendAll();
 800ee02:	f000 fe9d 	bl	800fb40 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ee06:	f7ff f925 	bl	800e054 <vPortEnterCritical>
 800ee0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee0e:	2bff      	cmp	r3, #255	; 0xff
 800ee10:	bf04      	itt	eq
 800ee12:	2300      	moveq	r3, #0
 800ee14:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ee18:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee1c:	2bff      	cmp	r3, #255	; 0xff
 800ee1e:	bf04      	itt	eq
 800ee20:	2300      	moveq	r3, #0
 800ee22:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ee26:	f7ff f937 	bl	800e098 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ee2a:	a901      	add	r1, sp, #4
 800ee2c:	a802      	add	r0, sp, #8
 800ee2e:	f000 ffe3 	bl	800fdf8 <xTaskCheckForTimeOut>
 800ee32:	2800      	cmp	r0, #0
 800ee34:	d135      	bne.n	800eea2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ee36:	f7ff f90d 	bl	800e054 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ee3a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ee3c:	2b00      	cmp	r3, #0
 800ee3e:	f000 80a4 	beq.w	800ef8a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ee42:	f7ff f929 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee46:	f7ff f905 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee50:	2d00      	cmp	r5, #0
 800ee52:	dc05      	bgt.n	800ee60 <xQueueSemaphoreTake+0xb0>
 800ee54:	e074      	b.n	800ef40 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ee56:	1e6b      	subs	r3, r5, #1
 800ee58:	b2da      	uxtb	r2, r3
 800ee5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee5c:	2a00      	cmp	r2, #0
 800ee5e:	d06f      	beq.n	800ef40 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee60:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee62:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee64:	2b00      	cmp	r3, #0
 800ee66:	d06b      	beq.n	800ef40 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee68:	f000 ff72 	bl	800fd50 <xTaskRemoveFromEventList>
 800ee6c:	2800      	cmp	r0, #0
 800ee6e:	d0f2      	beq.n	800ee56 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ee70:	f001 f80a 	bl	800fe88 <vTaskMissedYield>
 800ee74:	e7ef      	b.n	800ee56 <xQueueSemaphoreTake+0xa6>
 800ee76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee7a:	f383 8811 	msr	BASEPRI, r3
 800ee7e:	f3bf 8f6f 	isb	sy
 800ee82:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ee86:	e7fe      	b.n	800ee86 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ee88:	9b01      	ldr	r3, [sp, #4]
 800ee8a:	2b00      	cmp	r3, #0
 800ee8c:	f000 80d4 	beq.w	800f038 <xQueueSemaphoreTake+0x288>
 800ee90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee94:	f383 8811 	msr	BASEPRI, r3
 800ee98:	f3bf 8f6f 	isb	sy
 800ee9c:	f3bf 8f4f 	dsb	sy
 800eea0:	e7fe      	b.n	800eea0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800eea2:	f7ff f8d7 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eea6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eeaa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eeac:	2d00      	cmp	r5, #0
 800eeae:	dc04      	bgt.n	800eeba <xQueueSemaphoreTake+0x10a>
 800eeb0:	e011      	b.n	800eed6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800eeb2:	1e6b      	subs	r3, r5, #1
 800eeb4:	b2da      	uxtb	r2, r3
 800eeb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eeb8:	b16a      	cbz	r2, 800eed6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eeba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eebc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eebe:	b153      	cbz	r3, 800eed6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eec0:	f000 ff46 	bl	800fd50 <xTaskRemoveFromEventList>
 800eec4:	2800      	cmp	r0, #0
 800eec6:	d0f4      	beq.n	800eeb2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800eec8:	f000 ffde 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800eecc:	1e6b      	subs	r3, r5, #1
 800eece:	b2da      	uxtb	r2, r3
 800eed0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eed2:	2a00      	cmp	r2, #0
 800eed4:	d1f1      	bne.n	800eeba <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800eed6:	23ff      	movs	r3, #255	; 0xff
 800eed8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eedc:	f7ff f8dc 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eee0:	f7ff f8b8 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eee4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eee8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eeea:	2d00      	cmp	r5, #0
 800eeec:	dd14      	ble.n	800ef18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeee:	f104 0810 	add.w	r8, r4, #16
 800eef2:	e003      	b.n	800eefc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800eef4:	1e6b      	subs	r3, r5, #1
 800eef6:	b2da      	uxtb	r2, r3
 800eef8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eefa:	b16a      	cbz	r2, 800ef18 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eefc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eefe:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef00:	b153      	cbz	r3, 800ef18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef02:	f000 ff25 	bl	800fd50 <xTaskRemoveFromEventList>
 800ef06:	2800      	cmp	r0, #0
 800ef08:	d0f4      	beq.n	800eef4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ef0a:	f000 ffbd 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800ef0e:	1e6b      	subs	r3, r5, #1
 800ef10:	b2da      	uxtb	r2, r3
 800ef12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef14:	2a00      	cmp	r2, #0
 800ef16:	d1f1      	bne.n	800eefc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef18:	23ff      	movs	r3, #255	; 0xff
 800ef1a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ef1e:	f7ff f8bb 	bl	800e098 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ef22:	f000 fe15 	bl	800fb50 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ef26:	f7ff f895 	bl	800e054 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ef2a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	d07c      	beq.n	800f02a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ef30:	f7ff f8b2 	bl	800e098 <vPortExitCritical>
	return xReturn;
 800ef34:	2501      	movs	r5, #1
 800ef36:	e755      	b.n	800ede4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ef38:	a802      	add	r0, sp, #8
 800ef3a:	f000 ff51 	bl	800fde0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ef3e:	e75e      	b.n	800edfe <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef40:	23ff      	movs	r3, #255	; 0xff
 800ef42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef46:	f7ff f8a7 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef4a:	f7ff f883 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ef52:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef54:	2d00      	cmp	r5, #0
 800ef56:	dd10      	ble.n	800ef7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef58:	f104 0810 	add.w	r8, r4, #16
 800ef5c:	e003      	b.n	800ef66 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ef5e:	1e6b      	subs	r3, r5, #1
 800ef60:	b2da      	uxtb	r2, r3
 800ef62:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef64:	b14a      	cbz	r2, 800ef7a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef66:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef68:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef6a:	b133      	cbz	r3, 800ef7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef6c:	f000 fef0 	bl	800fd50 <xTaskRemoveFromEventList>
 800ef70:	2800      	cmp	r0, #0
 800ef72:	d0f4      	beq.n	800ef5e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ef74:	f000 ff88 	bl	800fe88 <vTaskMissedYield>
 800ef78:	e7f1      	b.n	800ef5e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef7a:	23ff      	movs	r3, #255	; 0xff
 800ef7c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ef80:	f7ff f88a 	bl	800e098 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ef84:	f000 fde4 	bl	800fb50 <xTaskResumeAll>
 800ef88:	e7d4      	b.n	800ef34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ef8a:	f7ff f885 	bl	800e098 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ef8e:	6823      	ldr	r3, [r4, #0]
 800ef90:	2b00      	cmp	r3, #0
 800ef92:	d062      	beq.n	800f05a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ef94:	9901      	ldr	r1, [sp, #4]
 800ef96:	4630      	mov	r0, r6
 800ef98:	f000 fe4c 	bl	800fc34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ef9c:	f7ff f85a 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800efa0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800efa4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800efa6:	2d00      	cmp	r5, #0
 800efa8:	dc04      	bgt.n	800efb4 <xQueueSemaphoreTake+0x204>
 800efaa:	e00d      	b.n	800efc8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800efac:	1e6b      	subs	r3, r5, #1
 800efae:	b2da      	uxtb	r2, r3
 800efb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800efb2:	b14a      	cbz	r2, 800efc8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800efb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800efb6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800efb8:	b133      	cbz	r3, 800efc8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800efba:	f000 fec9 	bl	800fd50 <xTaskRemoveFromEventList>
 800efbe:	2800      	cmp	r0, #0
 800efc0:	d0f4      	beq.n	800efac <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800efc2:	f000 ff61 	bl	800fe88 <vTaskMissedYield>
 800efc6:	e7f1      	b.n	800efac <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800efc8:	23ff      	movs	r3, #255	; 0xff
 800efca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800efce:	f7ff f863 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800efd2:	f7ff f83f 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800efd6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800efda:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efdc:	2d00      	cmp	r5, #0
 800efde:	dd10      	ble.n	800f002 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efe0:	f104 0810 	add.w	r8, r4, #16
 800efe4:	e003      	b.n	800efee <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800efe6:	1e6b      	subs	r3, r5, #1
 800efe8:	b2da      	uxtb	r2, r3
 800efea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efec:	b14a      	cbz	r2, 800f002 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eff0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eff2:	b133      	cbz	r3, 800f002 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eff4:	f000 feac 	bl	800fd50 <xTaskRemoveFromEventList>
 800eff8:	2800      	cmp	r0, #0
 800effa:	d0f4      	beq.n	800efe6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800effc:	f000 ff44 	bl	800fe88 <vTaskMissedYield>
 800f000:	e7f1      	b.n	800efe6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800f002:	23ff      	movs	r3, #255	; 0xff
 800f004:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f008:	f7ff f846 	bl	800e098 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f00c:	f000 fda0 	bl	800fb50 <xTaskResumeAll>
 800f010:	2800      	cmp	r0, #0
 800f012:	d18f      	bne.n	800ef34 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800f014:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f018:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f01c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f020:	f3bf 8f4f 	dsb	sy
 800f024:	f3bf 8f6f 	isb	sy
 800f028:	e784      	b.n	800ef34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f02a:	f7ff f835 	bl	800e098 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800f02e:	b92f      	cbnz	r7, 800f03c <xQueueSemaphoreTake+0x28c>
}
 800f030:	4638      	mov	r0, r7
 800f032:	b004      	add	sp, #16
 800f034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f038:	4607      	mov	r7, r0
 800f03a:	e6d1      	b.n	800ede0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800f03c:	f7ff f80a 	bl	800e054 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f040:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f042:	b119      	cbz	r1, 800f04c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f044:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f046:	6819      	ldr	r1, [r3, #0]
 800f048:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f04c:	68a0      	ldr	r0, [r4, #8]
 800f04e:	f000 ffbd 	bl	800ffcc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f052:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800f054:	f7ff f820 	bl	800e098 <vPortExitCritical>
 800f058:	e7ea      	b.n	800f030 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800f05a:	f7fe fffb 	bl	800e054 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f05e:	68a0      	ldr	r0, [r4, #8]
 800f060:	f000 ff28 	bl	800feb4 <xTaskPriorityInherit>
 800f064:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800f066:	f7ff f817 	bl	800e098 <vPortExitCritical>
 800f06a:	e793      	b.n	800ef94 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f06c:	b197      	cbz	r7, 800f094 <xQueueSemaphoreTake+0x2e4>
 800f06e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f072:	f383 8811 	msr	BASEPRI, r3
 800f076:	f3bf 8f6f 	isb	sy
 800f07a:	f3bf 8f4f 	dsb	sy
 800f07e:	e7fe      	b.n	800f07e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f080:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f082:	3b01      	subs	r3, #1
 800f084:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f086:	b1ca      	cbz	r2, 800f0bc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f088:	6923      	ldr	r3, [r4, #16]
 800f08a:	b933      	cbnz	r3, 800f09a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800f08c:	f7ff f804 	bl	800e098 <vPortExitCritical>
				return pdPASS;
 800f090:	2701      	movs	r7, #1
 800f092:	e7cd      	b.n	800f030 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800f094:	f7ff f800 	bl	800e098 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f098:	e7ca      	b.n	800f030 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f09a:	f104 0010 	add.w	r0, r4, #16
 800f09e:	f000 fe57 	bl	800fd50 <xTaskRemoveFromEventList>
 800f0a2:	2800      	cmp	r0, #0
 800f0a4:	d0f2      	beq.n	800f08c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800f0a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f0aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f0ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f0b2:	f3bf 8f4f 	dsb	sy
 800f0b6:	f3bf 8f6f 	isb	sy
 800f0ba:	e7e7      	b.n	800f08c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f0bc:	f000 ffda 	bl	8010074 <pvTaskIncrementMutexHeldCount>
 800f0c0:	60a0      	str	r0, [r4, #8]
 800f0c2:	e7e1      	b.n	800f088 <xQueueSemaphoreTake+0x2d8>

0800f0c4 <xQueueReceiveFromISR>:
{
 800f0c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800f0c8:	b310      	cbz	r0, 800f110 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f0ca:	460e      	mov	r6, r1
 800f0cc:	4617      	mov	r7, r2
 800f0ce:	4604      	mov	r4, r0
 800f0d0:	b191      	cbz	r1, 800f0f8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f0d2:	f7ff f8f3 	bl	800e2bc <vPortValidateInterruptPriority>
	__asm volatile
 800f0d6:	f3ef 8911 	mrs	r9, BASEPRI
 800f0da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0de:	f383 8811 	msr	BASEPRI, r3
 800f0e2:	f3bf 8f6f 	isb	sy
 800f0e6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f0ea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f0ec:	b9cd      	cbnz	r5, 800f122 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800f0ee:	4628      	mov	r0, r5
	__asm volatile
 800f0f0:	f389 8811 	msr	BASEPRI, r9
}
 800f0f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f0f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f0fa:	2b00      	cmp	r3, #0
 800f0fc:	d0e9      	beq.n	800f0d2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800f0fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f102:	f383 8811 	msr	BASEPRI, r3
 800f106:	f3bf 8f6f 	isb	sy
 800f10a:	f3bf 8f4f 	dsb	sy
 800f10e:	e7fe      	b.n	800f10e <xQueueReceiveFromISR+0x4a>
 800f110:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f114:	f383 8811 	msr	BASEPRI, r3
 800f118:	f3bf 8f6f 	isb	sy
 800f11c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f120:	e7fe      	b.n	800f120 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f122:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f126:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f128:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f12c:	b152      	cbz	r2, 800f144 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f12e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f130:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f132:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f134:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f136:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f138:	bf24      	itt	cs
 800f13a:	6821      	ldrcs	r1, [r4, #0]
 800f13c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f13e:	4630      	mov	r0, r6
 800f140:	f01c f8eb 	bl	802b31a <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f144:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f146:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f14a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f14c:	d009      	beq.n	800f162 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f14e:	f108 0301 	add.w	r3, r8, #1
 800f152:	b25b      	sxtb	r3, r3
 800f154:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f158:	2001      	movs	r0, #1
	__asm volatile
 800f15a:	f389 8811 	msr	BASEPRI, r9
}
 800f15e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f162:	6923      	ldr	r3, [r4, #16]
 800f164:	2b00      	cmp	r3, #0
 800f166:	d0f7      	beq.n	800f158 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f168:	f104 0010 	add.w	r0, r4, #16
 800f16c:	f000 fdf0 	bl	800fd50 <xTaskRemoveFromEventList>
 800f170:	2800      	cmp	r0, #0
 800f172:	d0f1      	beq.n	800f158 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f174:	2f00      	cmp	r7, #0
 800f176:	d0ef      	beq.n	800f158 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f178:	2001      	movs	r0, #1
 800f17a:	6038      	str	r0, [r7, #0]
 800f17c:	e7b8      	b.n	800f0f0 <xQueueReceiveFromISR+0x2c>
 800f17e:	bf00      	nop

0800f180 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f180:	b158      	cbz	r0, 800f19a <uxQueueMessagesWaiting+0x1a>
{
 800f182:	b510      	push	{r4, lr}
 800f184:	4604      	mov	r4, r0
 800f186:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f188:	f7fe ff64 	bl	800e054 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f18c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f18e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f190:	f7fe ff82 	bl	800e098 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f194:	9801      	ldr	r0, [sp, #4]
 800f196:	b002      	add	sp, #8
 800f198:	bd10      	pop	{r4, pc}
	__asm volatile
 800f19a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f19e:	f383 8811 	msr	BASEPRI, r3
 800f1a2:	f3bf 8f6f 	isb	sy
 800f1a6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f1aa:	e7fe      	b.n	800f1aa <uxQueueMessagesWaiting+0x2a>

0800f1ac <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f1ac:	b108      	cbz	r0, 800f1b2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f1ae:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f1b0:	4770      	bx	lr
 800f1b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1b6:	f383 8811 	msr	BASEPRI, r3
 800f1ba:	f3bf 8f6f 	isb	sy
 800f1be:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f1c2:	e7fe      	b.n	800f1c2 <uxQueueMessagesWaitingFromISR+0x16>
 800f1c4:	0000      	movs	r0, r0
	...

0800f1c8 <vQueueDelete>:
	configASSERT( pxQueue );
 800f1c8:	b1f0      	cbz	r0, 800f208 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f1ca:	4b21      	ldr	r3, [pc, #132]	; (800f250 <vQueueDelete+0x88>)
 800f1cc:	685a      	ldr	r2, [r3, #4]
 800f1ce:	4290      	cmp	r0, r2
 800f1d0:	d025      	beq.n	800f21e <vQueueDelete+0x56>
 800f1d2:	68da      	ldr	r2, [r3, #12]
 800f1d4:	4290      	cmp	r0, r2
 800f1d6:	d02c      	beq.n	800f232 <vQueueDelete+0x6a>
 800f1d8:	695a      	ldr	r2, [r3, #20]
 800f1da:	4290      	cmp	r0, r2
 800f1dc:	d02b      	beq.n	800f236 <vQueueDelete+0x6e>
 800f1de:	69da      	ldr	r2, [r3, #28]
 800f1e0:	4290      	cmp	r0, r2
 800f1e2:	d02a      	beq.n	800f23a <vQueueDelete+0x72>
 800f1e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f1e6:	4290      	cmp	r0, r2
 800f1e8:	d029      	beq.n	800f23e <vQueueDelete+0x76>
 800f1ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f1ec:	4290      	cmp	r0, r2
 800f1ee:	d01e      	beq.n	800f22e <vQueueDelete+0x66>
 800f1f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f1f2:	4290      	cmp	r0, r2
 800f1f4:	d025      	beq.n	800f242 <vQueueDelete+0x7a>
 800f1f6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f1f8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f1fa:	bf08      	it	eq
 800f1fc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f1fe:	d00f      	beq.n	800f220 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f200:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f204:	b14b      	cbz	r3, 800f21a <vQueueDelete+0x52>
}
 800f206:	4770      	bx	lr
 800f208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f20c:	f383 8811 	msr	BASEPRI, r3
 800f210:	f3bf 8f6f 	isb	sy
 800f214:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f218:	e7fe      	b.n	800f218 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f21a:	f7fe be05 	b.w	800de28 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f21e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f220:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f248 <vQueueDelete+0x80>
 800f224:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f228:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f22c:	e7e8      	b.n	800f200 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f22e:	2205      	movs	r2, #5
 800f230:	e7f6      	b.n	800f220 <vQueueDelete+0x58>
 800f232:	2201      	movs	r2, #1
 800f234:	e7f4      	b.n	800f220 <vQueueDelete+0x58>
 800f236:	2202      	movs	r2, #2
 800f238:	e7f2      	b.n	800f220 <vQueueDelete+0x58>
 800f23a:	2203      	movs	r2, #3
 800f23c:	e7f0      	b.n	800f220 <vQueueDelete+0x58>
 800f23e:	2204      	movs	r2, #4
 800f240:	e7ee      	b.n	800f220 <vQueueDelete+0x58>
 800f242:	2206      	movs	r2, #6
 800f244:	e7ec      	b.n	800f220 <vQueueDelete+0x58>
 800f246:	bf00      	nop
	...
 800f250:	20012730 	.word	0x20012730

0800f254 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f254:	4b12      	ldr	r3, [pc, #72]	; (800f2a0 <vQueueAddToRegistry+0x4c>)
 800f256:	681a      	ldr	r2, [r3, #0]
 800f258:	b17a      	cbz	r2, 800f27a <vQueueAddToRegistry+0x26>
 800f25a:	689a      	ldr	r2, [r3, #8]
 800f25c:	b162      	cbz	r2, 800f278 <vQueueAddToRegistry+0x24>
 800f25e:	691a      	ldr	r2, [r3, #16]
 800f260:	b192      	cbz	r2, 800f288 <vQueueAddToRegistry+0x34>
 800f262:	699a      	ldr	r2, [r3, #24]
 800f264:	b192      	cbz	r2, 800f28c <vQueueAddToRegistry+0x38>
 800f266:	6a1a      	ldr	r2, [r3, #32]
 800f268:	b192      	cbz	r2, 800f290 <vQueueAddToRegistry+0x3c>
 800f26a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f26c:	b192      	cbz	r2, 800f294 <vQueueAddToRegistry+0x40>
 800f26e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f270:	b192      	cbz	r2, 800f298 <vQueueAddToRegistry+0x44>
 800f272:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f274:	b192      	cbz	r2, 800f29c <vQueueAddToRegistry+0x48>
	}
 800f276:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f278:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f27a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f27e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f282:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f286:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f288:	2202      	movs	r2, #2
 800f28a:	e7f6      	b.n	800f27a <vQueueAddToRegistry+0x26>
 800f28c:	2203      	movs	r2, #3
 800f28e:	e7f4      	b.n	800f27a <vQueueAddToRegistry+0x26>
 800f290:	2204      	movs	r2, #4
 800f292:	e7f2      	b.n	800f27a <vQueueAddToRegistry+0x26>
 800f294:	2205      	movs	r2, #5
 800f296:	e7f0      	b.n	800f27a <vQueueAddToRegistry+0x26>
 800f298:	2206      	movs	r2, #6
 800f29a:	e7ee      	b.n	800f27a <vQueueAddToRegistry+0x26>
 800f29c:	2207      	movs	r2, #7
 800f29e:	e7ec      	b.n	800f27a <vQueueAddToRegistry+0x26>
 800f2a0:	20012730 	.word	0x20012730

0800f2a4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f2a4:	b570      	push	{r4, r5, r6, lr}
 800f2a6:	4605      	mov	r5, r0
 800f2a8:	460e      	mov	r6, r1
 800f2aa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f2ac:	f7fe fed2 	bl	800e054 <vPortEnterCritical>
 800f2b0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f2b4:	2bff      	cmp	r3, #255	; 0xff
 800f2b6:	bf04      	itt	eq
 800f2b8:	2300      	moveq	r3, #0
 800f2ba:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f2be:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f2c2:	2bff      	cmp	r3, #255	; 0xff
 800f2c4:	bf04      	itt	eq
 800f2c6:	2300      	moveq	r3, #0
 800f2c8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f2cc:	f7fe fee4 	bl	800e098 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f2d0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f2d2:	2b00      	cmp	r3, #0
 800f2d4:	d043      	beq.n	800f35e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f2d6:	f7fe febd 	bl	800e054 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f2da:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f2de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f2e0:	2c00      	cmp	r4, #0
 800f2e2:	dd14      	ble.n	800f30e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f2e4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f2e8:	e003      	b.n	800f2f2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f2ea:	1e63      	subs	r3, r4, #1
 800f2ec:	b2da      	uxtb	r2, r3
 800f2ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f2f0:	b16a      	cbz	r2, 800f30e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f2f2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f2f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f2f6:	b153      	cbz	r3, 800f30e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f2f8:	f000 fd2a 	bl	800fd50 <xTaskRemoveFromEventList>
 800f2fc:	2800      	cmp	r0, #0
 800f2fe:	d0f4      	beq.n	800f2ea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f300:	f000 fdc2 	bl	800fe88 <vTaskMissedYield>
			--cTxLock;
 800f304:	1e63      	subs	r3, r4, #1
 800f306:	b2da      	uxtb	r2, r3
 800f308:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f30a:	2a00      	cmp	r2, #0
 800f30c:	d1f1      	bne.n	800f2f2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f30e:	23ff      	movs	r3, #255	; 0xff
 800f310:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f314:	f7fe fec0 	bl	800e098 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f318:	f7fe fe9c 	bl	800e054 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f31c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f320:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f322:	2c00      	cmp	r4, #0
 800f324:	dd14      	ble.n	800f350 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f326:	f105 0610 	add.w	r6, r5, #16
 800f32a:	e003      	b.n	800f334 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f32c:	1e63      	subs	r3, r4, #1
 800f32e:	b2da      	uxtb	r2, r3
 800f330:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f332:	b16a      	cbz	r2, 800f350 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f334:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f336:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f338:	b153      	cbz	r3, 800f350 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f33a:	f000 fd09 	bl	800fd50 <xTaskRemoveFromEventList>
 800f33e:	2800      	cmp	r0, #0
 800f340:	d0f4      	beq.n	800f32c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f342:	f000 fda1 	bl	800fe88 <vTaskMissedYield>
				--cRxLock;
 800f346:	1e63      	subs	r3, r4, #1
 800f348:	b2da      	uxtb	r2, r3
 800f34a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f34c:	2a00      	cmp	r2, #0
 800f34e:	d1f1      	bne.n	800f334 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f350:	23ff      	movs	r3, #255	; 0xff
 800f352:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f356:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f35a:	f7fe be9d 	b.w	800e098 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f35e:	4622      	mov	r2, r4
 800f360:	4631      	mov	r1, r6
 800f362:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f366:	f000 fca9 	bl	800fcbc <vTaskPlaceOnEventListRestricted>
 800f36a:	e7b4      	b.n	800f2d6 <vQueueWaitForMessageRestricted+0x32>

0800f36c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f36c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f370:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f372:	f7fe fe6f 	bl	800e054 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f376:	4a34      	ldr	r2, [pc, #208]	; (800f448 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f378:	4e34      	ldr	r6, [pc, #208]	; (800f44c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f37a:	6813      	ldr	r3, [r2, #0]
 800f37c:	3301      	adds	r3, #1
 800f37e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f380:	6833      	ldr	r3, [r6, #0]
 800f382:	2b00      	cmp	r3, #0
 800f384:	d032      	beq.n	800f3ec <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f386:	4c32      	ldr	r4, [pc, #200]	; (800f450 <prvAddNewTaskToReadyList+0xe4>)
 800f388:	6823      	ldr	r3, [r4, #0]
 800f38a:	b33b      	cbz	r3, 800f3dc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f38c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f38e:	4f31      	ldr	r7, [pc, #196]	; (800f454 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f390:	4a31      	ldr	r2, [pc, #196]	; (800f458 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f392:	4932      	ldr	r1, [pc, #200]	; (800f45c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f394:	6813      	ldr	r3, [r2, #0]
 800f396:	3301      	adds	r3, #1
 800f398:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f39a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f39c:	680b      	ldr	r3, [r1, #0]
 800f39e:	4283      	cmp	r3, r0
 800f3a0:	bf38      	it	cc
 800f3a2:	6008      	strcc	r0, [r1, #0]
 800f3a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f3a8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f3ac:	1d29      	adds	r1, r5, #4
 800f3ae:	f7fe fdaf 	bl	800df10 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f3b2:	f7fe fe71 	bl	800e098 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f3b6:	6823      	ldr	r3, [r4, #0]
 800f3b8:	b173      	cbz	r3, 800f3d8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f3ba:	6832      	ldr	r2, [r6, #0]
 800f3bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f3be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f3c0:	429a      	cmp	r2, r3
 800f3c2:	d209      	bcs.n	800f3d8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f3c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f3c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f3cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f3d0:	f3bf 8f4f 	dsb	sy
 800f3d4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f3d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f3dc:	6833      	ldr	r3, [r6, #0]
 800f3de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f3e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3e2:	4f1c      	ldr	r7, [pc, #112]	; (800f454 <prvAddNewTaskToReadyList+0xe8>)
 800f3e4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f3e6:	bf98      	it	ls
 800f3e8:	6035      	strls	r5, [r6, #0]
 800f3ea:	e7d1      	b.n	800f390 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f3ec:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f3ee:	6813      	ldr	r3, [r2, #0]
 800f3f0:	2b01      	cmp	r3, #1
 800f3f2:	d003      	beq.n	800f3fc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f3f4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f3f6:	4f17      	ldr	r7, [pc, #92]	; (800f454 <prvAddNewTaskToReadyList+0xe8>)
 800f3f8:	4c15      	ldr	r4, [pc, #84]	; (800f450 <prvAddNewTaskToReadyList+0xe4>)
 800f3fa:	e7c9      	b.n	800f390 <prvAddNewTaskToReadyList+0x24>
 800f3fc:	4f15      	ldr	r7, [pc, #84]	; (800f454 <prvAddNewTaskToReadyList+0xe8>)
 800f3fe:	463c      	mov	r4, r7
 800f400:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f404:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f406:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f408:	f7fe fd72 	bl	800def0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f40c:	45a0      	cmp	r8, r4
 800f40e:	d1f9      	bne.n	800f404 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f410:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f474 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f414:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f478 <prvAddNewTaskToReadyList+0x10c>
 800f418:	4c0d      	ldr	r4, [pc, #52]	; (800f450 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f41a:	4648      	mov	r0, r9
 800f41c:	f7fe fd68 	bl	800def0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f420:	4640      	mov	r0, r8
 800f422:	f7fe fd65 	bl	800def0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f426:	480e      	ldr	r0, [pc, #56]	; (800f460 <prvAddNewTaskToReadyList+0xf4>)
 800f428:	f7fe fd62 	bl	800def0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f42c:	480d      	ldr	r0, [pc, #52]	; (800f464 <prvAddNewTaskToReadyList+0xf8>)
 800f42e:	f7fe fd5f 	bl	800def0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f432:	480d      	ldr	r0, [pc, #52]	; (800f468 <prvAddNewTaskToReadyList+0xfc>)
 800f434:	f7fe fd5c 	bl	800def0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f438:	4b0c      	ldr	r3, [pc, #48]	; (800f46c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f43a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f43c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f440:	4b0b      	ldr	r3, [pc, #44]	; (800f470 <prvAddNewTaskToReadyList+0x104>)
 800f442:	f8c3 8000 	str.w	r8, [r3]
}
 800f446:	e7a3      	b.n	800f390 <prvAddNewTaskToReadyList+0x24>
 800f448:	20012bdc 	.word	0x20012bdc
 800f44c:	20012770 	.word	0x20012770
 800f450:	20012c38 	.word	0x20012c38
 800f454:	2001277c 	.word	0x2001277c
 800f458:	20012be8 	.word	0x20012be8
 800f45c:	20012bec 	.word	0x20012bec
 800f460:	20012c24 	.word	0x20012c24
 800f464:	20012c50 	.word	0x20012c50
 800f468:	20012c3c 	.word	0x20012c3c
 800f46c:	20012774 	.word	0x20012774
 800f470:	20012778 	.word	0x20012778
 800f474:	20012bf0 	.word	0x20012bf0
 800f478:	20012c04 	.word	0x20012c04

0800f47c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f47c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f480:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f482:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f486:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f48a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f48c:	4606      	mov	r6, r0
 800f48e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f490:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f492:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f494:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f496:	f01b fe1a 	bl	802b0ce <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f49a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f49c:	f1a9 0904 	sub.w	r9, r9, #4
 800f4a0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f4a2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f4a6:	2d00      	cmp	r5, #0
 800f4a8:	d079      	beq.n	800f59e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4aa:	782b      	ldrb	r3, [r5, #0]
 800f4ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f4b0:	2b00      	cmp	r3, #0
 800f4b2:	d03b      	beq.n	800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4b4:	786b      	ldrb	r3, [r5, #1]
 800f4b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f4ba:	2b00      	cmp	r3, #0
 800f4bc:	d036      	beq.n	800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4be:	78ab      	ldrb	r3, [r5, #2]
 800f4c0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f4c4:	b393      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4c6:	78eb      	ldrb	r3, [r5, #3]
 800f4c8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f4cc:	b373      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4ce:	792b      	ldrb	r3, [r5, #4]
 800f4d0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f4d4:	b353      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4d6:	796b      	ldrb	r3, [r5, #5]
 800f4d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f4dc:	b333      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4de:	79ab      	ldrb	r3, [r5, #6]
 800f4e0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f4e4:	b313      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4e6:	79eb      	ldrb	r3, [r5, #7]
 800f4e8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f4ec:	b1f3      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4ee:	7a2b      	ldrb	r3, [r5, #8]
 800f4f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f4f4:	b1d3      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4f6:	7a6b      	ldrb	r3, [r5, #9]
 800f4f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f4fc:	b1b3      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4fe:	7aab      	ldrb	r3, [r5, #10]
 800f500:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f504:	b193      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f506:	7aeb      	ldrb	r3, [r5, #11]
 800f508:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f50c:	b173      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f50e:	7b2b      	ldrb	r3, [r5, #12]
 800f510:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f514:	b153      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f516:	7b6b      	ldrb	r3, [r5, #13]
 800f518:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f51c:	b133      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f51e:	7bab      	ldrb	r3, [r5, #14]
 800f520:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f524:	b113      	cbz	r3, 800f52c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f526:	7beb      	ldrb	r3, [r5, #15]
 800f528:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f52c:	2300      	movs	r3, #0
 800f52e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f532:	9d08      	ldr	r5, [sp, #32]
 800f534:	2d37      	cmp	r5, #55	; 0x37
 800f536:	bf28      	it	cs
 800f538:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f53a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f53e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f540:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f542:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f544:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f548:	f7fe fcde 	bl	800df08 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f54c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f550:	f104 0018 	add.w	r0, r4, #24
 800f554:	f7fe fcd8 	bl	800df08 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f558:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f55a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f55e:	4651      	mov	r1, sl
 800f560:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f562:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f564:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f566:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f56a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f56e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f572:	f01b fdac 	bl	802b0ce <memset>
 800f576:	4b0b      	ldr	r3, [pc, #44]	; (800f5a4 <prvInitialiseNewTask.constprop.0+0x128>)
 800f578:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f57a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f57e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f580:	463a      	mov	r2, r7
 800f582:	4631      	mov	r1, r6
 800f584:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f586:	6625      	str	r5, [r4, #96]	; 0x60
 800f588:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f58a:	f7fe fd3b 	bl	800e004 <pxPortInitialiseStack>
 800f58e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f590:	f1b8 0f00 	cmp.w	r8, #0
 800f594:	d001      	beq.n	800f59a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f596:	f8c8 4000 	str.w	r4, [r8]
}
 800f59a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f59e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f5a2:	e7c6      	b.n	800f532 <prvInitialiseNewTask.constprop.0+0xb6>
 800f5a4:	20013700 	.word	0x20013700

0800f5a8 <prvIdleTask>:
{
 800f5a8:	b580      	push	{r7, lr}
 800f5aa:	4d23      	ldr	r5, [pc, #140]	; (800f638 <prvIdleTask+0x90>)
 800f5ac:	4f23      	ldr	r7, [pc, #140]	; (800f63c <prvIdleTask+0x94>)
 800f5ae:	4e24      	ldr	r6, [pc, #144]	; (800f640 <prvIdleTask+0x98>)
 800f5b0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f644 <prvIdleTask+0x9c>
				taskYIELD();
 800f5b4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f5b8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f5bc:	682b      	ldr	r3, [r5, #0]
 800f5be:	b35b      	cbz	r3, 800f618 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f5c0:	f7fe fd48 	bl	800e054 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5c4:	68fb      	ldr	r3, [r7, #12]
 800f5c6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f5c8:	1d20      	adds	r0, r4, #4
 800f5ca:	f7fe fcc9 	bl	800df60 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f5ce:	6833      	ldr	r3, [r6, #0]
 800f5d0:	3b01      	subs	r3, #1
 800f5d2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f5d4:	682b      	ldr	r3, [r5, #0]
 800f5d6:	3b01      	subs	r3, #1
 800f5d8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f5da:	f7fe fd5d 	bl	800e098 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f5de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f5e2:	f01b fdbd 	bl	802b160 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f5e6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f5ea:	b163      	cbz	r3, 800f606 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f5ec:	2b01      	cmp	r3, #1
 800f5ee:	d01e      	beq.n	800f62e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f5f0:	2b02      	cmp	r3, #2
 800f5f2:	d0e3      	beq.n	800f5bc <prvIdleTask+0x14>
 800f5f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5f8:	f383 8811 	msr	BASEPRI, r3
 800f5fc:	f3bf 8f6f 	isb	sy
 800f600:	f3bf 8f4f 	dsb	sy
 800f604:	e7fe      	b.n	800f604 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f606:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f608:	f7fe fc0e 	bl	800de28 <vPortFree>
				vPortFree( pxTCB );
 800f60c:	4620      	mov	r0, r4
 800f60e:	f7fe fc0b 	bl	800de28 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f612:	682b      	ldr	r3, [r5, #0]
 800f614:	2b00      	cmp	r3, #0
 800f616:	d1d3      	bne.n	800f5c0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f618:	f8d8 3000 	ldr.w	r3, [r8]
 800f61c:	2b01      	cmp	r3, #1
 800f61e:	d9cd      	bls.n	800f5bc <prvIdleTask+0x14>
				taskYIELD();
 800f620:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f624:	f3bf 8f4f 	dsb	sy
 800f628:	f3bf 8f6f 	isb	sy
 800f62c:	e7c6      	b.n	800f5bc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f62e:	4620      	mov	r0, r4
 800f630:	f7fe fbfa 	bl	800de28 <vPortFree>
 800f634:	e7c2      	b.n	800f5bc <prvIdleTask+0x14>
 800f636:	bf00      	nop
 800f638:	20012be0 	.word	0x20012be0
 800f63c:	20012c50 	.word	0x20012c50
 800f640:	20012bdc 	.word	0x20012bdc
 800f644:	2001277c 	.word	0x2001277c

0800f648 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f64c:	4b47      	ldr	r3, [pc, #284]	; (800f76c <xTaskIncrementTick.part.0+0x124>)
 800f64e:	681e      	ldr	r6, [r3, #0]
 800f650:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f652:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f654:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f656:	2e00      	cmp	r6, #0
 800f658:	d040      	beq.n	800f6dc <xTaskIncrementTick.part.0+0x94>
 800f65a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f780 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f65e:	f8db 3000 	ldr.w	r3, [fp]
 800f662:	429e      	cmp	r6, r3
 800f664:	d347      	bcc.n	800f6f6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f666:	4f42      	ldr	r7, [pc, #264]	; (800f770 <xTaskIncrementTick.part.0+0x128>)
 800f668:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f784 <xTaskIncrementTick.part.0+0x13c>
 800f66c:	683b      	ldr	r3, [r7, #0]
 800f66e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f788 <xTaskIncrementTick.part.0+0x140>
 800f672:	681d      	ldr	r5, [r3, #0]
 800f674:	2d00      	cmp	r5, #0
 800f676:	d073      	beq.n	800f760 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f678:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f78c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f67c:	2500      	movs	r5, #0
 800f67e:	e022      	b.n	800f6c6 <xTaskIncrementTick.part.0+0x7e>
 800f680:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f682:	f7fe fc6d 	bl	800df60 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f686:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f688:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f68a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f68e:	b113      	cbz	r3, 800f696 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f690:	f7fe fc66 	bl	800df60 <uxListRemove>
 800f694:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f696:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f698:	f8d8 2000 	ldr.w	r2, [r8]
 800f69c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f6a0:	4293      	cmp	r3, r2
 800f6a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f6a6:	bf88      	it	hi
 800f6a8:	f8c8 3000 	strhi.w	r3, [r8]
 800f6ac:	f7fe fc30 	bl	800df10 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f6b0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f6b4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f6b6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f6b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f6ba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f6bc:	4291      	cmp	r1, r2
 800f6be:	bf28      	it	cs
 800f6c0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	d04c      	beq.n	800f760 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6c6:	683b      	ldr	r3, [r7, #0]
 800f6c8:	68db      	ldr	r3, [r3, #12]
 800f6ca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f6cc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f6ce:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f6d0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f6d2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f6d4:	d2d4      	bcs.n	800f680 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f6d6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f6da:	e011      	b.n	800f700 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f6dc:	4b24      	ldr	r3, [pc, #144]	; (800f770 <xTaskIncrementTick.part.0+0x128>)
 800f6de:	681a      	ldr	r2, [r3, #0]
 800f6e0:	6812      	ldr	r2, [r2, #0]
 800f6e2:	b30a      	cbz	r2, 800f728 <xTaskIncrementTick.part.0+0xe0>
 800f6e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6e8:	f383 8811 	msr	BASEPRI, r3
 800f6ec:	f3bf 8f6f 	isb	sy
 800f6f0:	f3bf 8f4f 	dsb	sy
 800f6f4:	e7fe      	b.n	800f6f4 <xTaskIncrementTick.part.0+0xac>
 800f6f6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f784 <xTaskIncrementTick.part.0+0x13c>
 800f6fa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f788 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f6fe:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f700:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f704:	491b      	ldr	r1, [pc, #108]	; (800f774 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f706:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f708:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f70c:	009b      	lsls	r3, r3, #2
 800f70e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f712:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f714:	2a02      	cmp	r2, #2
 800f716:	bf28      	it	cs
 800f718:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f71a:	2b00      	cmp	r3, #0
}
 800f71c:	bf0c      	ite	eq
 800f71e:	4628      	moveq	r0, r5
 800f720:	2001      	movne	r0, #1
 800f722:	b003      	add	sp, #12
 800f724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f728:	4a13      	ldr	r2, [pc, #76]	; (800f778 <xTaskIncrementTick.part.0+0x130>)
 800f72a:	6818      	ldr	r0, [r3, #0]
 800f72c:	6811      	ldr	r1, [r2, #0]
 800f72e:	6019      	str	r1, [r3, #0]
 800f730:	4912      	ldr	r1, [pc, #72]	; (800f77c <xTaskIncrementTick.part.0+0x134>)
 800f732:	6010      	str	r0, [r2, #0]
 800f734:	680a      	ldr	r2, [r1, #0]
 800f736:	3201      	adds	r2, #1
 800f738:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f73a:	681a      	ldr	r2, [r3, #0]
 800f73c:	6812      	ldr	r2, [r2, #0]
 800f73e:	b932      	cbnz	r2, 800f74e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f740:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f780 <xTaskIncrementTick.part.0+0x138>
 800f744:	f04f 33ff 	mov.w	r3, #4294967295
 800f748:	f8cb 3000 	str.w	r3, [fp]
 800f74c:	e787      	b.n	800f65e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f74e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f750:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f780 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f754:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f756:	68db      	ldr	r3, [r3, #12]
 800f758:	685b      	ldr	r3, [r3, #4]
 800f75a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f75e:	e77e      	b.n	800f65e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f760:	f04f 33ff 	mov.w	r3, #4294967295
 800f764:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f768:	e7ca      	b.n	800f700 <xTaskIncrementTick.part.0+0xb8>
 800f76a:	bf00      	nop
 800f76c:	20012c64 	.word	0x20012c64
 800f770:	20012774 	.word	0x20012774
 800f774:	20012c68 	.word	0x20012c68
 800f778:	20012778 	.word	0x20012778
 800f77c:	20012c1c 	.word	0x20012c1c
 800f780:	20012c18 	.word	0x20012c18
 800f784:	2001277c 	.word	0x2001277c
 800f788:	20012770 	.word	0x20012770
 800f78c:	20012bec 	.word	0x20012bec

0800f790 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f794:	4d41      	ldr	r5, [pc, #260]	; (800f89c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f796:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f798:	f7fe fc5c 	bl	800e054 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f79c:	682b      	ldr	r3, [r5, #0]
 800f79e:	3b01      	subs	r3, #1
 800f7a0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f7a2:	682b      	ldr	r3, [r5, #0]
 800f7a4:	2b00      	cmp	r3, #0
 800f7a6:	d161      	bne.n	800f86c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f7a8:	4b3d      	ldr	r3, [pc, #244]	; (800f8a0 <xTaskResumeAll.part.0+0x110>)
 800f7aa:	681b      	ldr	r3, [r3, #0]
 800f7ac:	2b00      	cmp	r3, #0
 800f7ae:	d05d      	beq.n	800f86c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f7b0:	4e3c      	ldr	r6, [pc, #240]	; (800f8a4 <xTaskResumeAll.part.0+0x114>)
 800f7b2:	6833      	ldr	r3, [r6, #0]
 800f7b4:	2b00      	cmp	r3, #0
 800f7b6:	d06e      	beq.n	800f896 <xTaskResumeAll.part.0+0x106>
 800f7b8:	4f3b      	ldr	r7, [pc, #236]	; (800f8a8 <xTaskResumeAll.part.0+0x118>)
 800f7ba:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f8b8 <xTaskResumeAll.part.0+0x128>
 800f7be:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f8bc <xTaskResumeAll.part.0+0x12c>
 800f7c2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f8c0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f7c6:	68f3      	ldr	r3, [r6, #12]
 800f7c8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f7ca:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f7ce:	f104 0018 	add.w	r0, r4, #24
 800f7d2:	f7fe fbc5 	bl	800df60 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f7d6:	4658      	mov	r0, fp
 800f7d8:	f7fe fbc2 	bl	800df60 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f7dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f7de:	683a      	ldr	r2, [r7, #0]
 800f7e0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f7e4:	4293      	cmp	r3, r2
 800f7e6:	4659      	mov	r1, fp
 800f7e8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f7ec:	bf88      	it	hi
 800f7ee:	603b      	strhi	r3, [r7, #0]
 800f7f0:	f7fe fb8e 	bl	800df10 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f7f4:	f8d8 3000 	ldr.w	r3, [r8]
 800f7f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f7fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7fc:	429a      	cmp	r2, r3
 800f7fe:	d33d      	bcc.n	800f87c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f800:	2301      	movs	r3, #1
 800f802:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f806:	6833      	ldr	r3, [r6, #0]
 800f808:	2b00      	cmp	r3, #0
 800f80a:	d1dc      	bne.n	800f7c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f80c:	4b27      	ldr	r3, [pc, #156]	; (800f8ac <xTaskResumeAll.part.0+0x11c>)
 800f80e:	681a      	ldr	r2, [r3, #0]
 800f810:	6812      	ldr	r2, [r2, #0]
 800f812:	2a00      	cmp	r2, #0
 800f814:	d03a      	beq.n	800f88c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f816:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f818:	4b25      	ldr	r3, [pc, #148]	; (800f8b0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f81a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f81c:	68d2      	ldr	r2, [r2, #12]
 800f81e:	6852      	ldr	r2, [r2, #4]
 800f820:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f822:	4e24      	ldr	r6, [pc, #144]	; (800f8b4 <xTaskResumeAll.part.0+0x124>)
 800f824:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f826:	b194      	cbz	r4, 800f84e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f828:	2701      	movs	r7, #1
 800f82a:	e006      	b.n	800f83a <xTaskResumeAll.part.0+0xaa>
 800f82c:	f7ff ff0c 	bl	800f648 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f830:	b108      	cbz	r0, 800f836 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f832:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f836:	3c01      	subs	r4, #1
 800f838:	d008      	beq.n	800f84c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f83a:	682b      	ldr	r3, [r5, #0]
 800f83c:	2b00      	cmp	r3, #0
 800f83e:	d0f5      	beq.n	800f82c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f840:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f842:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f844:	f103 0301 	add.w	r3, r3, #1
 800f848:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f84a:	d1f6      	bne.n	800f83a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f84c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f84e:	f8da 3000 	ldr.w	r3, [sl]
 800f852:	b15b      	cbz	r3, 800f86c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f854:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f858:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f85c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f860:	f3bf 8f4f 	dsb	sy
 800f864:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f868:	2001      	movs	r0, #1
 800f86a:	e000      	b.n	800f86e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f86c:	2000      	movs	r0, #0
 800f86e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f870:	f7fe fc12 	bl	800e098 <vPortExitCritical>
}
 800f874:	9801      	ldr	r0, [sp, #4]
 800f876:	b003      	add	sp, #12
 800f878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f87c:	6833      	ldr	r3, [r6, #0]
 800f87e:	2b00      	cmp	r3, #0
 800f880:	d1a1      	bne.n	800f7c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f882:	4b0a      	ldr	r3, [pc, #40]	; (800f8ac <xTaskResumeAll.part.0+0x11c>)
 800f884:	681a      	ldr	r2, [r3, #0]
 800f886:	6812      	ldr	r2, [r2, #0]
 800f888:	2a00      	cmp	r2, #0
 800f88a:	d1c4      	bne.n	800f816 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f88c:	4b08      	ldr	r3, [pc, #32]	; (800f8b0 <xTaskResumeAll.part.0+0x120>)
 800f88e:	f04f 32ff 	mov.w	r2, #4294967295
 800f892:	601a      	str	r2, [r3, #0]
 800f894:	e7c5      	b.n	800f822 <xTaskResumeAll.part.0+0x92>
 800f896:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f8c0 <xTaskResumeAll.part.0+0x130>
 800f89a:	e7c2      	b.n	800f822 <xTaskResumeAll.part.0+0x92>
 800f89c:	20012be4 	.word	0x20012be4
 800f8a0:	20012bdc 	.word	0x20012bdc
 800f8a4:	20012c24 	.word	0x20012c24
 800f8a8:	20012bec 	.word	0x20012bec
 800f8ac:	20012774 	.word	0x20012774
 800f8b0:	20012c18 	.word	0x20012c18
 800f8b4:	20012c20 	.word	0x20012c20
 800f8b8:	2001277c 	.word	0x2001277c
 800f8bc:	20012770 	.word	0x20012770
 800f8c0:	20012c68 	.word	0x20012c68

0800f8c4 <xTaskCreateStatic>:
	{
 800f8c4:	b530      	push	{r4, r5, lr}
 800f8c6:	b087      	sub	sp, #28
 800f8c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f8ca:	b1c4      	cbz	r4, 800f8fe <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f8cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f8ce:	b16d      	cbz	r5, 800f8ec <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f8d0:	25ac      	movs	r5, #172	; 0xac
 800f8d2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f8d4:	9d05      	ldr	r5, [sp, #20]
 800f8d6:	2dac      	cmp	r5, #172	; 0xac
 800f8d8:	d01a      	beq.n	800f910 <xTaskCreateStatic+0x4c>
 800f8da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8de:	f383 8811 	msr	BASEPRI, r3
 800f8e2:	f3bf 8f6f 	isb	sy
 800f8e6:	f3bf 8f4f 	dsb	sy
 800f8ea:	e7fe      	b.n	800f8ea <xTaskCreateStatic+0x26>
 800f8ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8f0:	f383 8811 	msr	BASEPRI, r3
 800f8f4:	f3bf 8f6f 	isb	sy
 800f8f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f8fc:	e7fe      	b.n	800f8fc <xTaskCreateStatic+0x38>
 800f8fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f902:	f383 8811 	msr	BASEPRI, r3
 800f906:	f3bf 8f6f 	isb	sy
 800f90a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f90e:	e7fe      	b.n	800f90e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f910:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f912:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f914:	2402      	movs	r4, #2
 800f916:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f91a:	ac04      	add	r4, sp, #16
 800f91c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f920:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f922:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f924:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f926:	f7ff fda9 	bl	800f47c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f92a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f92c:	f7ff fd1e 	bl	800f36c <prvAddNewTaskToReadyList>
	}
 800f930:	9804      	ldr	r0, [sp, #16]
 800f932:	b007      	add	sp, #28
 800f934:	bd30      	pop	{r4, r5, pc}
 800f936:	bf00      	nop

0800f938 <xTaskCreate>:
	{
 800f938:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f93c:	4607      	mov	r7, r0
 800f93e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f940:	0090      	lsls	r0, r2, #2
	{
 800f942:	4615      	mov	r5, r2
 800f944:	4688      	mov	r8, r1
 800f946:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f948:	f7fe f9b2 	bl	800dcb0 <pvPortMalloc>
			if( pxStack != NULL )
 800f94c:	b1d8      	cbz	r0, 800f986 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f94e:	4604      	mov	r4, r0
 800f950:	20ac      	movs	r0, #172	; 0xac
 800f952:	f7fe f9ad 	bl	800dcb0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f956:	4606      	mov	r6, r0
 800f958:	b1d0      	cbz	r0, 800f990 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f95a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f95c:	2400      	movs	r4, #0
 800f95e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f962:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f964:	9401      	str	r4, [sp, #4]
 800f966:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f968:	9602      	str	r6, [sp, #8]
 800f96a:	464b      	mov	r3, r9
 800f96c:	462a      	mov	r2, r5
 800f96e:	4641      	mov	r1, r8
 800f970:	4638      	mov	r0, r7
 800f972:	9400      	str	r4, [sp, #0]
 800f974:	f7ff fd82 	bl	800f47c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f978:	4630      	mov	r0, r6
 800f97a:	f7ff fcf7 	bl	800f36c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f97e:	2001      	movs	r0, #1
	}
 800f980:	b005      	add	sp, #20
 800f982:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f986:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f98a:	b005      	add	sp, #20
 800f98c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f990:	4620      	mov	r0, r4
 800f992:	f7fe fa49 	bl	800de28 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f996:	f04f 30ff 	mov.w	r0, #4294967295
 800f99a:	e7f1      	b.n	800f980 <xTaskCreate+0x48>

0800f99c <vTaskDelay>:
	{
 800f99c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f99e:	b950      	cbnz	r0, 800f9b6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f9a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f9a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f9a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f9ac:	f3bf 8f4f 	dsb	sy
 800f9b0:	f3bf 8f6f 	isb	sy
	}
 800f9b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f9b6:	4d1e      	ldr	r5, [pc, #120]	; (800fa30 <vTaskDelay+0x94>)
 800f9b8:	682b      	ldr	r3, [r5, #0]
 800f9ba:	b143      	cbz	r3, 800f9ce <vTaskDelay+0x32>
 800f9bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9c0:	f383 8811 	msr	BASEPRI, r3
 800f9c4:	f3bf 8f6f 	isb	sy
 800f9c8:	f3bf 8f4f 	dsb	sy
 800f9cc:	e7fe      	b.n	800f9cc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f9ce:	682b      	ldr	r3, [r5, #0]
 800f9d0:	3301      	adds	r3, #1
 800f9d2:	4604      	mov	r4, r0
 800f9d4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f9d6:	4b17      	ldr	r3, [pc, #92]	; (800fa34 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f9d8:	4e17      	ldr	r6, [pc, #92]	; (800fa38 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f9da:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f9dc:	6830      	ldr	r0, [r6, #0]
 800f9de:	3004      	adds	r0, #4
 800f9e0:	f7fe fabe 	bl	800df60 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f9e4:	6833      	ldr	r3, [r6, #0]
 800f9e6:	19e4      	adds	r4, r4, r7
 800f9e8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f9ea:	d310      	bcc.n	800fa0e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f9ec:	4b13      	ldr	r3, [pc, #76]	; (800fa3c <vTaskDelay+0xa0>)
 800f9ee:	6818      	ldr	r0, [r3, #0]
 800f9f0:	6831      	ldr	r1, [r6, #0]
 800f9f2:	3104      	adds	r1, #4
 800f9f4:	f7fe fa9c 	bl	800df30 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f9f8:	682b      	ldr	r3, [r5, #0]
 800f9fa:	b9a3      	cbnz	r3, 800fa26 <vTaskDelay+0x8a>
 800f9fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa00:	f383 8811 	msr	BASEPRI, r3
 800fa04:	f3bf 8f6f 	isb	sy
 800fa08:	f3bf 8f4f 	dsb	sy
 800fa0c:	e7fe      	b.n	800fa0c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa0e:	4b0c      	ldr	r3, [pc, #48]	; (800fa40 <vTaskDelay+0xa4>)
 800fa10:	6818      	ldr	r0, [r3, #0]
 800fa12:	6831      	ldr	r1, [r6, #0]
 800fa14:	3104      	adds	r1, #4
 800fa16:	f7fe fa8b 	bl	800df30 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800fa1a:	4b0a      	ldr	r3, [pc, #40]	; (800fa44 <vTaskDelay+0xa8>)
 800fa1c:	681a      	ldr	r2, [r3, #0]
 800fa1e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800fa20:	bf38      	it	cc
 800fa22:	601c      	strcc	r4, [r3, #0]
 800fa24:	e7e8      	b.n	800f9f8 <vTaskDelay+0x5c>
 800fa26:	f7ff feb3 	bl	800f790 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800fa2a:	2800      	cmp	r0, #0
 800fa2c:	d0b8      	beq.n	800f9a0 <vTaskDelay+0x4>
	}
 800fa2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fa30:	20012be4 	.word	0x20012be4
 800fa34:	20012c64 	.word	0x20012c64
 800fa38:	20012770 	.word	0x20012770
 800fa3c:	20012778 	.word	0x20012778
 800fa40:	20012774 	.word	0x20012774
 800fa44:	20012c18 	.word	0x20012c18

0800fa48 <vTaskStartScheduler>:
{
 800fa48:	b530      	push	{r4, r5, lr}
 800fa4a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fa4c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800fa4e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fa50:	a906      	add	r1, sp, #24
 800fa52:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800fa54:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fa58:	f7fe f90c 	bl	800dc74 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800fa5c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fa60:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800fa62:	b1bb      	cbz	r3, 800fa94 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800fa64:	b16d      	cbz	r5, 800fa82 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fa66:	21ac      	movs	r1, #172	; 0xac
 800fa68:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800fa6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fa6c:	29ac      	cmp	r1, #172	; 0xac
 800fa6e:	d01a      	beq.n	800faa6 <vTaskStartScheduler+0x5e>
 800fa70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa74:	f383 8811 	msr	BASEPRI, r3
 800fa78:	f3bf 8f6f 	isb	sy
 800fa7c:	f3bf 8f4f 	dsb	sy
 800fa80:	e7fe      	b.n	800fa80 <vTaskStartScheduler+0x38>
 800fa82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa86:	f383 8811 	msr	BASEPRI, r3
 800fa8a:	f3bf 8f6f 	isb	sy
 800fa8e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fa92:	e7fe      	b.n	800fa92 <vTaskStartScheduler+0x4a>
 800fa94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa98:	f383 8811 	msr	BASEPRI, r3
 800fa9c:	f3bf 8f6f 	isb	sy
 800faa0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800faa4:	e7fe      	b.n	800faa4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800faa6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800faa8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800faaa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800faac:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fab0:	4623      	mov	r3, r4
 800fab2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800fab6:	491b      	ldr	r1, [pc, #108]	; (800fb24 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fab8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800faba:	9400      	str	r4, [sp, #0]
 800fabc:	481a      	ldr	r0, [pc, #104]	; (800fb28 <vTaskStartScheduler+0xe0>)
 800fabe:	f7ff fcdd 	bl	800f47c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fac2:	4628      	mov	r0, r5
 800fac4:	f7ff fc52 	bl	800f36c <prvAddNewTaskToReadyList>
		return xReturn;
 800fac8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800faca:	b1eb      	cbz	r3, 800fb08 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800facc:	f000 fc6e 	bl	80103ac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fad0:	2801      	cmp	r0, #1
 800fad2:	d11b      	bne.n	800fb0c <vTaskStartScheduler+0xc4>
 800fad4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fad8:	f383 8811 	msr	BASEPRI, r3
 800fadc:	f3bf 8f6f 	isb	sy
 800fae0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fae4:	4b11      	ldr	r3, [pc, #68]	; (800fb2c <vTaskStartScheduler+0xe4>)
 800fae6:	4a12      	ldr	r2, [pc, #72]	; (800fb30 <vTaskStartScheduler+0xe8>)
 800fae8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800faea:	4912      	ldr	r1, [pc, #72]	; (800fb34 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800faec:	3358      	adds	r3, #88	; 0x58
 800faee:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800faf0:	4a11      	ldr	r2, [pc, #68]	; (800fb38 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800faf2:	4b12      	ldr	r3, [pc, #72]	; (800fb3c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800faf4:	f04f 35ff 	mov.w	r5, #4294967295
 800faf8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800fafa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fafc:	601c      	str	r4, [r3, #0]
}
 800fafe:	b00b      	add	sp, #44	; 0x2c
 800fb00:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800fb04:	f7fe bb38 	b.w	800e178 <xPortStartScheduler>
}
 800fb08:	b00b      	add	sp, #44	; 0x2c
 800fb0a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800fb0c:	3001      	adds	r0, #1
 800fb0e:	d1fb      	bne.n	800fb08 <vTaskStartScheduler+0xc0>
 800fb10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb14:	f383 8811 	msr	BASEPRI, r3
 800fb18:	f3bf 8f6f 	isb	sy
 800fb1c:	f3bf 8f4f 	dsb	sy
 800fb20:	e7fe      	b.n	800fb20 <vTaskStartScheduler+0xd8>
 800fb22:	bf00      	nop
 800fb24:	0802ed64 	.word	0x0802ed64
 800fb28:	0800f5a9 	.word	0x0800f5a9
 800fb2c:	20012770 	.word	0x20012770
 800fb30:	20000160 	.word	0x20000160
 800fb34:	20012c18 	.word	0x20012c18
 800fb38:	20012c38 	.word	0x20012c38
 800fb3c:	20012c64 	.word	0x20012c64

0800fb40 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fb40:	4a02      	ldr	r2, [pc, #8]	; (800fb4c <vTaskSuspendAll+0xc>)
 800fb42:	6813      	ldr	r3, [r2, #0]
 800fb44:	3301      	adds	r3, #1
 800fb46:	6013      	str	r3, [r2, #0]
}
 800fb48:	4770      	bx	lr
 800fb4a:	bf00      	nop
 800fb4c:	20012be4 	.word	0x20012be4

0800fb50 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800fb50:	4b06      	ldr	r3, [pc, #24]	; (800fb6c <xTaskResumeAll+0x1c>)
 800fb52:	681b      	ldr	r3, [r3, #0]
 800fb54:	b943      	cbnz	r3, 800fb68 <xTaskResumeAll+0x18>
 800fb56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb5a:	f383 8811 	msr	BASEPRI, r3
 800fb5e:	f3bf 8f6f 	isb	sy
 800fb62:	f3bf 8f4f 	dsb	sy
 800fb66:	e7fe      	b.n	800fb66 <xTaskResumeAll+0x16>
 800fb68:	f7ff be12 	b.w	800f790 <xTaskResumeAll.part.0>
 800fb6c:	20012be4 	.word	0x20012be4

0800fb70 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fb70:	4b01      	ldr	r3, [pc, #4]	; (800fb78 <xTaskGetTickCount+0x8>)
 800fb72:	6818      	ldr	r0, [r3, #0]
}
 800fb74:	4770      	bx	lr
 800fb76:	bf00      	nop
 800fb78:	20012c64 	.word	0x20012c64

0800fb7c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fb7c:	4b05      	ldr	r3, [pc, #20]	; (800fb94 <xTaskIncrementTick+0x18>)
 800fb7e:	681b      	ldr	r3, [r3, #0]
 800fb80:	b90b      	cbnz	r3, 800fb86 <xTaskIncrementTick+0xa>
 800fb82:	f7ff bd61 	b.w	800f648 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800fb86:	4a04      	ldr	r2, [pc, #16]	; (800fb98 <xTaskIncrementTick+0x1c>)
 800fb88:	6813      	ldr	r3, [r2, #0]
 800fb8a:	3301      	adds	r3, #1
}
 800fb8c:	2000      	movs	r0, #0
		++xPendedTicks;
 800fb8e:	6013      	str	r3, [r2, #0]
}
 800fb90:	4770      	bx	lr
 800fb92:	bf00      	nop
 800fb94:	20012be4 	.word	0x20012be4
 800fb98:	20012c20 	.word	0x20012c20

0800fb9c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fb9c:	4b1f      	ldr	r3, [pc, #124]	; (800fc1c <vTaskSwitchContext+0x80>)
 800fb9e:	681b      	ldr	r3, [r3, #0]
 800fba0:	b11b      	cbz	r3, 800fbaa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fba2:	4b1f      	ldr	r3, [pc, #124]	; (800fc20 <vTaskSwitchContext+0x84>)
 800fba4:	2201      	movs	r2, #1
 800fba6:	601a      	str	r2, [r3, #0]
 800fba8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fbaa:	4a1d      	ldr	r2, [pc, #116]	; (800fc20 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fbac:	491d      	ldr	r1, [pc, #116]	; (800fc24 <vTaskSwitchContext+0x88>)
{
 800fbae:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fbb0:	4c1d      	ldr	r4, [pc, #116]	; (800fc28 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fbb2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fbb4:	6823      	ldr	r3, [r4, #0]
 800fbb6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fbba:	0092      	lsls	r2, r2, #2
 800fbbc:	0098      	lsls	r0, r3, #2
 800fbbe:	588a      	ldr	r2, [r1, r2]
 800fbc0:	b942      	cbnz	r2, 800fbd4 <vTaskSwitchContext+0x38>
 800fbc2:	b313      	cbz	r3, 800fc0a <vTaskSwitchContext+0x6e>
 800fbc4:	3b01      	subs	r3, #1
 800fbc6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fbca:	0098      	lsls	r0, r3, #2
 800fbcc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fbd0:	2a00      	cmp	r2, #0
 800fbd2:	d0f6      	beq.n	800fbc2 <vTaskSwitchContext+0x26>
 800fbd4:	4418      	add	r0, r3
 800fbd6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fbda:	4662      	mov	r2, ip
 800fbdc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fbe0:	6849      	ldr	r1, [r1, #4]
 800fbe2:	f8cc 1004 	str.w	r1, [ip, #4]
 800fbe6:	3208      	adds	r2, #8
 800fbe8:	4291      	cmp	r1, r2
 800fbea:	bf08      	it	eq
 800fbec:	6849      	ldreq	r1, [r1, #4]
 800fbee:	4a0f      	ldr	r2, [pc, #60]	; (800fc2c <vTaskSwitchContext+0x90>)
 800fbf0:	bf08      	it	eq
 800fbf2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fbf6:	68c9      	ldr	r1, [r1, #12]
 800fbf8:	6011      	str	r1, [r2, #0]
 800fbfa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fbfc:	6813      	ldr	r3, [r2, #0]
 800fbfe:	4a0c      	ldr	r2, [pc, #48]	; (800fc30 <vTaskSwitchContext+0x94>)
}
 800fc00:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fc04:	3358      	adds	r3, #88	; 0x58
 800fc06:	6013      	str	r3, [r2, #0]
}
 800fc08:	4770      	bx	lr
 800fc0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc0e:	f383 8811 	msr	BASEPRI, r3
 800fc12:	f3bf 8f6f 	isb	sy
 800fc16:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fc1a:	e7fe      	b.n	800fc1a <vTaskSwitchContext+0x7e>
 800fc1c:	20012be4 	.word	0x20012be4
 800fc20:	20012c68 	.word	0x20012c68
 800fc24:	2001277c 	.word	0x2001277c
 800fc28:	20012bec 	.word	0x20012bec
 800fc2c:	20012770 	.word	0x20012770
 800fc30:	20000160 	.word	0x20000160

0800fc34 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fc34:	b1d0      	cbz	r0, 800fc6c <vTaskPlaceOnEventList+0x38>
{
 800fc36:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fc38:	4d1a      	ldr	r5, [pc, #104]	; (800fca4 <vTaskPlaceOnEventList+0x70>)
 800fc3a:	460c      	mov	r4, r1
 800fc3c:	6829      	ldr	r1, [r5, #0]
 800fc3e:	3118      	adds	r1, #24
 800fc40:	f7fe f976 	bl	800df30 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fc44:	4b18      	ldr	r3, [pc, #96]	; (800fca8 <vTaskPlaceOnEventList+0x74>)
 800fc46:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc48:	6828      	ldr	r0, [r5, #0]
 800fc4a:	3004      	adds	r0, #4
 800fc4c:	f7fe f988 	bl	800df60 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fc50:	1c63      	adds	r3, r4, #1
 800fc52:	d014      	beq.n	800fc7e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fc54:	682b      	ldr	r3, [r5, #0]
 800fc56:	19a4      	adds	r4, r4, r6
 800fc58:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fc5a:	d317      	bcc.n	800fc8c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc5c:	4b13      	ldr	r3, [pc, #76]	; (800fcac <vTaskPlaceOnEventList+0x78>)
 800fc5e:	6818      	ldr	r0, [r3, #0]
 800fc60:	6829      	ldr	r1, [r5, #0]
}
 800fc62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc66:	3104      	adds	r1, #4
 800fc68:	f7fe b962 	b.w	800df30 <vListInsert>
 800fc6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc70:	f383 8811 	msr	BASEPRI, r3
 800fc74:	f3bf 8f6f 	isb	sy
 800fc78:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fc7c:	e7fe      	b.n	800fc7c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc7e:	6829      	ldr	r1, [r5, #0]
 800fc80:	480b      	ldr	r0, [pc, #44]	; (800fcb0 <vTaskPlaceOnEventList+0x7c>)
}
 800fc82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc86:	3104      	adds	r1, #4
 800fc88:	f7fe b942 	b.w	800df10 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc8c:	4b09      	ldr	r3, [pc, #36]	; (800fcb4 <vTaskPlaceOnEventList+0x80>)
 800fc8e:	6818      	ldr	r0, [r3, #0]
 800fc90:	6829      	ldr	r1, [r5, #0]
 800fc92:	3104      	adds	r1, #4
 800fc94:	f7fe f94c 	bl	800df30 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fc98:	4b07      	ldr	r3, [pc, #28]	; (800fcb8 <vTaskPlaceOnEventList+0x84>)
 800fc9a:	681a      	ldr	r2, [r3, #0]
 800fc9c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fc9e:	bf38      	it	cc
 800fca0:	601c      	strcc	r4, [r3, #0]
}
 800fca2:	bd70      	pop	{r4, r5, r6, pc}
 800fca4:	20012770 	.word	0x20012770
 800fca8:	20012c64 	.word	0x20012c64
 800fcac:	20012778 	.word	0x20012778
 800fcb0:	20012c3c 	.word	0x20012c3c
 800fcb4:	20012774 	.word	0x20012774
 800fcb8:	20012c18 	.word	0x20012c18

0800fcbc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fcbc:	b330      	cbz	r0, 800fd0c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fcbe:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fcc0:	4e1d      	ldr	r6, [pc, #116]	; (800fd38 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fcc2:	460c      	mov	r4, r1
 800fcc4:	6831      	ldr	r1, [r6, #0]
 800fcc6:	4615      	mov	r5, r2
 800fcc8:	3118      	adds	r1, #24
 800fcca:	f7fe f921 	bl	800df10 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fcce:	4b1b      	ldr	r3, [pc, #108]	; (800fd3c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fcd0:	b985      	cbnz	r5, 800fcf4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fcd2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fcd4:	6830      	ldr	r0, [r6, #0]
 800fcd6:	3004      	adds	r0, #4
 800fcd8:	f7fe f942 	bl	800df60 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fcdc:	6833      	ldr	r3, [r6, #0]
 800fcde:	1964      	adds	r4, r4, r5
 800fce0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fce2:	d31c      	bcc.n	800fd1e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fce4:	4b16      	ldr	r3, [pc, #88]	; (800fd40 <vTaskPlaceOnEventListRestricted+0x84>)
 800fce6:	6818      	ldr	r0, [r3, #0]
 800fce8:	6831      	ldr	r1, [r6, #0]
	}
 800fcea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fcee:	3104      	adds	r1, #4
 800fcf0:	f7fe b91e 	b.w	800df30 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fcf4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fcf6:	6830      	ldr	r0, [r6, #0]
 800fcf8:	3004      	adds	r0, #4
 800fcfa:	f7fe f931 	bl	800df60 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fcfe:	6831      	ldr	r1, [r6, #0]
 800fd00:	4810      	ldr	r0, [pc, #64]	; (800fd44 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fd02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fd06:	3104      	adds	r1, #4
 800fd08:	f7fe b902 	b.w	800df10 <vListInsertEnd>
 800fd0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd10:	f383 8811 	msr	BASEPRI, r3
 800fd14:	f3bf 8f6f 	isb	sy
 800fd18:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fd1c:	e7fe      	b.n	800fd1c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fd1e:	4b0a      	ldr	r3, [pc, #40]	; (800fd48 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fd20:	6818      	ldr	r0, [r3, #0]
 800fd22:	6831      	ldr	r1, [r6, #0]
 800fd24:	3104      	adds	r1, #4
 800fd26:	f7fe f903 	bl	800df30 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fd2a:	4b08      	ldr	r3, [pc, #32]	; (800fd4c <vTaskPlaceOnEventListRestricted+0x90>)
 800fd2c:	681a      	ldr	r2, [r3, #0]
 800fd2e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fd30:	bf38      	it	cc
 800fd32:	601c      	strcc	r4, [r3, #0]
	}
 800fd34:	bd70      	pop	{r4, r5, r6, pc}
 800fd36:	bf00      	nop
 800fd38:	20012770 	.word	0x20012770
 800fd3c:	20012c64 	.word	0x20012c64
 800fd40:	20012778 	.word	0x20012778
 800fd44:	20012c3c 	.word	0x20012c3c
 800fd48:	20012774 	.word	0x20012774
 800fd4c:	20012c18 	.word	0x20012c18

0800fd50 <xTaskRemoveFromEventList>:
{
 800fd50:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fd52:	68c3      	ldr	r3, [r0, #12]
 800fd54:	68dc      	ldr	r4, [r3, #12]
{
 800fd56:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fd58:	2c00      	cmp	r4, #0
 800fd5a:	d02b      	beq.n	800fdb4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fd5c:	f104 0518 	add.w	r5, r4, #24
 800fd60:	4628      	mov	r0, r5
 800fd62:	f7fe f8fd 	bl	800df60 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fd66:	4b18      	ldr	r3, [pc, #96]	; (800fdc8 <xTaskRemoveFromEventList+0x78>)
 800fd68:	681b      	ldr	r3, [r3, #0]
 800fd6a:	b17b      	cbz	r3, 800fd8c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fd6c:	4817      	ldr	r0, [pc, #92]	; (800fdcc <xTaskRemoveFromEventList+0x7c>)
 800fd6e:	4629      	mov	r1, r5
 800fd70:	f7fe f8ce 	bl	800df10 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fd74:	4b16      	ldr	r3, [pc, #88]	; (800fdd0 <xTaskRemoveFromEventList+0x80>)
 800fd76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fd78:	681b      	ldr	r3, [r3, #0]
 800fd7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd7c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fd7e:	bf85      	ittet	hi
 800fd80:	4b14      	ldrhi	r3, [pc, #80]	; (800fdd4 <xTaskRemoveFromEventList+0x84>)
 800fd82:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fd84:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fd86:	6018      	strhi	r0, [r3, #0]
}
 800fd88:	b003      	add	sp, #12
 800fd8a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fd8c:	1d21      	adds	r1, r4, #4
 800fd8e:	4608      	mov	r0, r1
 800fd90:	9101      	str	r1, [sp, #4]
 800fd92:	f7fe f8e5 	bl	800df60 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fd96:	4a10      	ldr	r2, [pc, #64]	; (800fdd8 <xTaskRemoveFromEventList+0x88>)
 800fd98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fd9a:	6810      	ldr	r0, [r2, #0]
 800fd9c:	9901      	ldr	r1, [sp, #4]
 800fd9e:	4283      	cmp	r3, r0
 800fda0:	480e      	ldr	r0, [pc, #56]	; (800fddc <xTaskRemoveFromEventList+0x8c>)
 800fda2:	bf88      	it	hi
 800fda4:	6013      	strhi	r3, [r2, #0]
 800fda6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fdaa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fdae:	f7fe f8af 	bl	800df10 <vListInsertEnd>
 800fdb2:	e7df      	b.n	800fd74 <xTaskRemoveFromEventList+0x24>
 800fdb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdb8:	f383 8811 	msr	BASEPRI, r3
 800fdbc:	f3bf 8f6f 	isb	sy
 800fdc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fdc4:	e7fe      	b.n	800fdc4 <xTaskRemoveFromEventList+0x74>
 800fdc6:	bf00      	nop
 800fdc8:	20012be4 	.word	0x20012be4
 800fdcc:	20012c24 	.word	0x20012c24
 800fdd0:	20012770 	.word	0x20012770
 800fdd4:	20012c68 	.word	0x20012c68
 800fdd8:	20012bec 	.word	0x20012bec
 800fddc:	2001277c 	.word	0x2001277c

0800fde0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fde0:	4a03      	ldr	r2, [pc, #12]	; (800fdf0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fde2:	4b04      	ldr	r3, [pc, #16]	; (800fdf4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fde4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fde6:	681b      	ldr	r3, [r3, #0]
 800fde8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fdec:	4770      	bx	lr
 800fdee:	bf00      	nop
 800fdf0:	20012c1c 	.word	0x20012c1c
 800fdf4:	20012c64 	.word	0x20012c64

0800fdf8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fdf8:	b328      	cbz	r0, 800fe46 <xTaskCheckForTimeOut+0x4e>
{
 800fdfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdfc:	460d      	mov	r5, r1
 800fdfe:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fe00:	b1c1      	cbz	r1, 800fe34 <xTaskCheckForTimeOut+0x3c>
 800fe02:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fe04:	f7fe f926 	bl	800e054 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fe08:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fe0a:	4a1d      	ldr	r2, [pc, #116]	; (800fe80 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fe0c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fe0e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fe10:	d030      	beq.n	800fe74 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fe12:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fe84 <xTaskCheckForTimeOut+0x8c>
 800fe16:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fe1a:	f8dc 7000 	ldr.w	r7, [ip]
 800fe1e:	42be      	cmp	r6, r7
 800fe20:	d01a      	beq.n	800fe58 <xTaskCheckForTimeOut+0x60>
 800fe22:	4288      	cmp	r0, r1
 800fe24:	d818      	bhi.n	800fe58 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fe26:	2001      	movs	r0, #1
 800fe28:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fe2a:	f7fe f935 	bl	800e098 <vPortExitCritical>
}
 800fe2e:	9801      	ldr	r0, [sp, #4]
 800fe30:	b003      	add	sp, #12
 800fe32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe38:	f383 8811 	msr	BASEPRI, r3
 800fe3c:	f3bf 8f6f 	isb	sy
 800fe40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fe44:	e7fe      	b.n	800fe44 <xTaskCheckForTimeOut+0x4c>
 800fe46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe4a:	f383 8811 	msr	BASEPRI, r3
 800fe4e:	f3bf 8f6f 	isb	sy
 800fe52:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fe56:	e7fe      	b.n	800fe56 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fe58:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fe5c:	4573      	cmp	r3, lr
 800fe5e:	d90b      	bls.n	800fe78 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fe60:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fe62:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fe66:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fe68:	4403      	add	r3, r0
 800fe6a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fe6c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fe6e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fe72:	e7d9      	b.n	800fe28 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fe74:	2000      	movs	r0, #0
 800fe76:	e7d7      	b.n	800fe28 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fe78:	2300      	movs	r3, #0
 800fe7a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fe7c:	2001      	movs	r0, #1
 800fe7e:	e7d3      	b.n	800fe28 <xTaskCheckForTimeOut+0x30>
 800fe80:	20012c64 	.word	0x20012c64
 800fe84:	20012c1c 	.word	0x20012c1c

0800fe88 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fe88:	4b01      	ldr	r3, [pc, #4]	; (800fe90 <vTaskMissedYield+0x8>)
 800fe8a:	2201      	movs	r2, #1
 800fe8c:	601a      	str	r2, [r3, #0]
}
 800fe8e:	4770      	bx	lr
 800fe90:	20012c68 	.word	0x20012c68

0800fe94 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fe94:	4b05      	ldr	r3, [pc, #20]	; (800feac <xTaskGetSchedulerState+0x18>)
 800fe96:	681b      	ldr	r3, [r3, #0]
 800fe98:	b133      	cbz	r3, 800fea8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fe9a:	4b05      	ldr	r3, [pc, #20]	; (800feb0 <xTaskGetSchedulerState+0x1c>)
 800fe9c:	6818      	ldr	r0, [r3, #0]
 800fe9e:	fab0 f080 	clz	r0, r0
 800fea2:	0940      	lsrs	r0, r0, #5
 800fea4:	0040      	lsls	r0, r0, #1
 800fea6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fea8:	2001      	movs	r0, #1
	}
 800feaa:	4770      	bx	lr
 800feac:	20012c38 	.word	0x20012c38
 800feb0:	20012be4 	.word	0x20012be4

0800feb4 <xTaskPriorityInherit>:
	{
 800feb4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800feb6:	4604      	mov	r4, r0
	{
 800feb8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800feba:	b1c8      	cbz	r0, 800fef0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800febc:	4d1d      	ldr	r5, [pc, #116]	; (800ff34 <xTaskPriorityInherit+0x80>)
 800febe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fec0:	682a      	ldr	r2, [r5, #0]
 800fec2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fec4:	4293      	cmp	r3, r2
 800fec6:	d215      	bcs.n	800fef4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fec8:	6982      	ldr	r2, [r0, #24]
 800feca:	2a00      	cmp	r2, #0
 800fecc:	db04      	blt.n	800fed8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fece:	682a      	ldr	r2, [r5, #0]
 800fed0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fed2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fed6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fed8:	4e17      	ldr	r6, [pc, #92]	; (800ff38 <xTaskPriorityInherit+0x84>)
 800feda:	6962      	ldr	r2, [r4, #20]
 800fedc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fee0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fee4:	429a      	cmp	r2, r3
 800fee6:	d00e      	beq.n	800ff06 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fee8:	682b      	ldr	r3, [r5, #0]
 800feea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800feec:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800feee:	2001      	movs	r0, #1
	}
 800fef0:	b002      	add	sp, #8
 800fef2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fef4:	682b      	ldr	r3, [r5, #0]
 800fef6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fef8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fefa:	4298      	cmp	r0, r3
 800fefc:	bf2c      	ite	cs
 800fefe:	2000      	movcs	r0, #0
 800ff00:	2001      	movcc	r0, #1
	}
 800ff02:	b002      	add	sp, #8
 800ff04:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff06:	1d21      	adds	r1, r4, #4
 800ff08:	4608      	mov	r0, r1
 800ff0a:	9101      	str	r1, [sp, #4]
 800ff0c:	f7fe f828 	bl	800df60 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ff10:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ff12:	4b0a      	ldr	r3, [pc, #40]	; (800ff3c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ff14:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ff16:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ff18:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ff1a:	4290      	cmp	r0, r2
 800ff1c:	bf88      	it	hi
 800ff1e:	6018      	strhi	r0, [r3, #0]
 800ff20:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ff24:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800ff28:	9901      	ldr	r1, [sp, #4]
 800ff2a:	f7fd fff1 	bl	800df10 <vListInsertEnd>
				xReturn = pdTRUE;
 800ff2e:	2001      	movs	r0, #1
 800ff30:	e7de      	b.n	800fef0 <xTaskPriorityInherit+0x3c>
 800ff32:	bf00      	nop
 800ff34:	20012770 	.word	0x20012770
 800ff38:	2001277c 	.word	0x2001277c
 800ff3c:	20012bec 	.word	0x20012bec

0800ff40 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800ff40:	b318      	cbz	r0, 800ff8a <xTaskPriorityDisinherit+0x4a>
	{
 800ff42:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800ff44:	4b1e      	ldr	r3, [pc, #120]	; (800ffc0 <xTaskPriorityDisinherit+0x80>)
 800ff46:	681c      	ldr	r4, [r3, #0]
 800ff48:	4284      	cmp	r4, r0
	{
 800ff4a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800ff4c:	d008      	beq.n	800ff60 <xTaskPriorityDisinherit+0x20>
 800ff4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff52:	f383 8811 	msr	BASEPRI, r3
 800ff56:	f3bf 8f6f 	isb	sy
 800ff5a:	f3bf 8f4f 	dsb	sy
 800ff5e:	e7fe      	b.n	800ff5e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800ff60:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ff62:	b14b      	cbz	r3, 800ff78 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ff64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ff66:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ff68:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ff6a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ff6c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ff6e:	d000      	beq.n	800ff72 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ff70:	b16b      	cbz	r3, 800ff8e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800ff72:	2000      	movs	r0, #0
	}
 800ff74:	b002      	add	sp, #8
 800ff76:	bd10      	pop	{r4, pc}
 800ff78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff7c:	f383 8811 	msr	BASEPRI, r3
 800ff80:	f3bf 8f6f 	isb	sy
 800ff84:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ff88:	e7fe      	b.n	800ff88 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800ff8a:	2000      	movs	r0, #0
	}
 800ff8c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff8e:	1d21      	adds	r1, r4, #4
 800ff90:	4608      	mov	r0, r1
 800ff92:	9101      	str	r1, [sp, #4]
 800ff94:	f7fd ffe4 	bl	800df60 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ff98:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ff9a:	4a0a      	ldr	r2, [pc, #40]	; (800ffc4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ff9c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ff9e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800ffa2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ffa4:	6810      	ldr	r0, [r2, #0]
 800ffa6:	9901      	ldr	r1, [sp, #4]
 800ffa8:	4283      	cmp	r3, r0
 800ffaa:	4807      	ldr	r0, [pc, #28]	; (800ffc8 <xTaskPriorityDisinherit+0x88>)
 800ffac:	bf88      	it	hi
 800ffae:	6013      	strhi	r3, [r2, #0]
 800ffb0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ffb4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ffb8:	f7fd ffaa 	bl	800df10 <vListInsertEnd>
					xReturn = pdTRUE;
 800ffbc:	2001      	movs	r0, #1
		return xReturn;
 800ffbe:	e7d9      	b.n	800ff74 <xTaskPriorityDisinherit+0x34>
 800ffc0:	20012770 	.word	0x20012770
 800ffc4:	20012bec 	.word	0x20012bec
 800ffc8:	2001277c 	.word	0x2001277c

0800ffcc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800ffcc:	2800      	cmp	r0, #0
 800ffce:	d041      	beq.n	8010054 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800ffd0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800ffd2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800ffd4:	b083      	sub	sp, #12
 800ffd6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800ffd8:	b153      	cbz	r3, 800fff0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ffda:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ffdc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ffde:	4281      	cmp	r1, r0
 800ffe0:	bf38      	it	cc
 800ffe2:	4601      	movcc	r1, r0
 800ffe4:	428a      	cmp	r2, r1
 800ffe6:	d001      	beq.n	800ffec <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ffe8:	2b01      	cmp	r3, #1
 800ffea:	d00a      	beq.n	8010002 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800ffec:	b003      	add	sp, #12
 800ffee:	bd30      	pop	{r4, r5, pc}
 800fff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fff4:	f383 8811 	msr	BASEPRI, r3
 800fff8:	f3bf 8f6f 	isb	sy
 800fffc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010000:	e7fe      	b.n	8010000 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8010002:	4b19      	ldr	r3, [pc, #100]	; (8010068 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8010004:	681b      	ldr	r3, [r3, #0]
 8010006:	42a3      	cmp	r3, r4
 8010008:	d025      	beq.n	8010056 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801000a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 801000c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801000e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010010:	bfa8      	it	ge
 8010012:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010016:	4d15      	ldr	r5, [pc, #84]	; (801006c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010018:	bfa8      	it	ge
 801001a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801001c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8010020:	6961      	ldr	r1, [r4, #20]
 8010022:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8010026:	4299      	cmp	r1, r3
 8010028:	d1e0      	bne.n	800ffec <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801002a:	1d21      	adds	r1, r4, #4
 801002c:	4608      	mov	r0, r1
 801002e:	9101      	str	r1, [sp, #4]
 8010030:	f7fd ff96 	bl	800df60 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8010034:	4b0e      	ldr	r3, [pc, #56]	; (8010070 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8010036:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8010038:	681a      	ldr	r2, [r3, #0]
 801003a:	9901      	ldr	r1, [sp, #4]
 801003c:	4290      	cmp	r0, r2
 801003e:	bf88      	it	hi
 8010040:	6018      	strhi	r0, [r3, #0]
 8010042:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8010046:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 801004a:	b003      	add	sp, #12
 801004c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8010050:	f7fd bf5e 	b.w	800df10 <vListInsertEnd>
 8010054:	4770      	bx	lr
 8010056:	f04f 0350 	mov.w	r3, #80	; 0x50
 801005a:	f383 8811 	msr	BASEPRI, r3
 801005e:	f3bf 8f6f 	isb	sy
 8010062:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8010066:	e7fe      	b.n	8010066 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8010068:	20012770 	.word	0x20012770
 801006c:	2001277c 	.word	0x2001277c
 8010070:	20012bec 	.word	0x20012bec

08010074 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8010074:	4b04      	ldr	r3, [pc, #16]	; (8010088 <pvTaskIncrementMutexHeldCount+0x14>)
 8010076:	681a      	ldr	r2, [r3, #0]
 8010078:	b11a      	cbz	r2, 8010082 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801007a:	6819      	ldr	r1, [r3, #0]
 801007c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801007e:	3201      	adds	r2, #1
 8010080:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8010082:	6818      	ldr	r0, [r3, #0]
	}
 8010084:	4770      	bx	lr
 8010086:	bf00      	nop
 8010088:	20012770 	.word	0x20012770

0801008c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801008c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010090:	4e22      	ldr	r6, [pc, #136]	; (801011c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8010092:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8010124 <prvSwitchTimerLists+0x98>
{
 8010096:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8010098:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801009c:	e00d      	b.n	80100ba <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801009e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80100a0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80100a2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80100a4:	1d25      	adds	r5, r4, #4
 80100a6:	4628      	mov	r0, r5
 80100a8:	f7fd ff5a 	bl	800df60 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80100ac:	6a23      	ldr	r3, [r4, #32]
 80100ae:	4620      	mov	r0, r4
 80100b0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80100b2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80100b6:	075b      	lsls	r3, r3, #29
 80100b8:	d40a      	bmi.n	80100d0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80100ba:	6833      	ldr	r3, [r6, #0]
 80100bc:	681a      	ldr	r2, [r3, #0]
 80100be:	2a00      	cmp	r2, #0
 80100c0:	d1ed      	bne.n	801009e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 80100c2:	4a17      	ldr	r2, [pc, #92]	; (8010120 <prvSwitchTimerLists+0x94>)
 80100c4:	6811      	ldr	r1, [r2, #0]
 80100c6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 80100c8:	6013      	str	r3, [r2, #0]
}
 80100ca:	b005      	add	sp, #20
 80100cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80100d0:	69a3      	ldr	r3, [r4, #24]
 80100d2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 80100d4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100d6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 80100d8:	d205      	bcs.n	80100e6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100da:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80100dc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80100de:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100e0:	f7fd ff26 	bl	800df30 <vListInsert>
 80100e4:	e7e9      	b.n	80100ba <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 80100e6:	f8d9 3000 	ldr.w	r3, [r9]
 80100ea:	b16b      	cbz	r3, 8010108 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80100ec:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80100f0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80100f2:	f7ff fecf 	bl	800fe94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80100f6:	2300      	movs	r3, #0
 80100f8:	f8d9 0000 	ldr.w	r0, [r9]
 80100fc:	461a      	mov	r2, r3
 80100fe:	4669      	mov	r1, sp
 8010100:	f7fe fa9c 	bl	800e63c <xQueueGenericSend>
				configASSERT( xResult );
 8010104:	2800      	cmp	r0, #0
 8010106:	d1d8      	bne.n	80100ba <prvSwitchTimerLists+0x2e>
 8010108:	f04f 0350 	mov.w	r3, #80	; 0x50
 801010c:	f383 8811 	msr	BASEPRI, r3
 8010110:	f3bf 8f6f 	isb	sy
 8010114:	f3bf 8f4f 	dsb	sy
 8010118:	e7fe      	b.n	8010118 <prvSwitchTimerLists+0x8c>
 801011a:	bf00      	nop
 801011c:	20012c6c 	.word	0x20012c6c
 8010120:	20012c70 	.word	0x20012c70
 8010124:	20012d90 	.word	0x20012d90

08010128 <prvTimerTask>:
{
 8010128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801012c:	4e9b      	ldr	r6, [pc, #620]	; (801039c <prvTimerTask+0x274>)
 801012e:	4d9c      	ldr	r5, [pc, #624]	; (80103a0 <prvTimerTask+0x278>)
 8010130:	4c9c      	ldr	r4, [pc, #624]	; (80103a4 <prvTimerTask+0x27c>)
 8010132:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8010134:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8010138:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801013c:	6833      	ldr	r3, [r6, #0]
 801013e:	681f      	ldr	r7, [r3, #0]
 8010140:	2f00      	cmp	r7, #0
 8010142:	f000 80a8 	beq.w	8010296 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010146:	68db      	ldr	r3, [r3, #12]
 8010148:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801014a:	f7ff fcf9 	bl	800fb40 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801014e:	f7ff fd0f 	bl	800fb70 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010152:	682a      	ldr	r2, [r5, #0]
 8010154:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8010156:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010158:	f0c0 80ae 	bcc.w	80102b8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801015c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 801015e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8010160:	f240 80b4 	bls.w	80102cc <prvTimerTask+0x1a4>
 8010164:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8010166:	6820      	ldr	r0, [r4, #0]
 8010168:	eba7 010a 	sub.w	r1, r7, sl
 801016c:	f7ff f89a 	bl	800f2a4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8010170:	f7ff fcee 	bl	800fb50 <xTaskResumeAll>
 8010174:	b928      	cbnz	r0, 8010182 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8010176:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801017a:	f3bf 8f4f 	dsb	sy
 801017e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010182:	6820      	ldr	r0, [r4, #0]
 8010184:	2200      	movs	r2, #0
 8010186:	a902      	add	r1, sp, #8
 8010188:	f7fe fc94 	bl	800eab4 <xQueueReceive>
 801018c:	2800      	cmp	r0, #0
 801018e:	d0d5      	beq.n	801013c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010190:	9b02      	ldr	r3, [sp, #8]
 8010192:	2b00      	cmp	r3, #0
 8010194:	db76      	blt.n	8010284 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010196:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010198:	697b      	ldr	r3, [r7, #20]
 801019a:	b113      	cbz	r3, 80101a2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801019c:	1d38      	adds	r0, r7, #4
 801019e:	f7fd fedf 	bl	800df60 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80101a2:	f7ff fce5 	bl	800fb70 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80101a6:	682b      	ldr	r3, [r5, #0]
 80101a8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80101aa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80101ac:	f0c0 808b 	bcc.w	80102c6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 80101b0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 80101b2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 80101b6:	2b09      	cmp	r3, #9
 80101b8:	d8e3      	bhi.n	8010182 <prvTimerTask+0x5a>
 80101ba:	e8df f003 	tbb	[pc, r3]
 80101be:	0505      	.short	0x0505
 80101c0:	5a3d5305 	.word	0x5a3d5305
 80101c4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80101c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80101cc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80101ce:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80101d0:	f043 0301 	orr.w	r3, r3, #1
 80101d4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80101d8:	9b03      	ldr	r3, [sp, #12]
 80101da:	1899      	adds	r1, r3, r2
 80101dc:	bf2c      	ite	cs
 80101de:	2001      	movcs	r0, #1
 80101e0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 80101e2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80101e4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 80101e6:	f200 808c 	bhi.w	8010302 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80101ea:	ebaa 0303 	sub.w	r3, sl, r3
 80101ee:	429a      	cmp	r2, r3
 80101f0:	d832      	bhi.n	8010258 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80101f2:	6a3b      	ldr	r3, [r7, #32]
 80101f4:	4638      	mov	r0, r7
 80101f6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80101f8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80101fc:	075b      	lsls	r3, r3, #29
 80101fe:	d5c0      	bpl.n	8010182 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8010200:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010202:	9903      	ldr	r1, [sp, #12]
 8010204:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8010206:	b172      	cbz	r2, 8010226 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010208:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801020a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801020e:	2300      	movs	r3, #0
 8010210:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010212:	f7ff fe3f 	bl	800fe94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010216:	2300      	movs	r3, #0
 8010218:	6820      	ldr	r0, [r4, #0]
 801021a:	461a      	mov	r2, r3
 801021c:	a906      	add	r1, sp, #24
 801021e:	f7fe fa0d 	bl	800e63c <xQueueGenericSend>
							configASSERT( xResult );
 8010222:	2800      	cmp	r0, #0
 8010224:	d1ad      	bne.n	8010182 <prvTimerTask+0x5a>
 8010226:	f04f 0350 	mov.w	r3, #80	; 0x50
 801022a:	f383 8811 	msr	BASEPRI, r3
 801022e:	f3bf 8f6f 	isb	sy
 8010232:	f3bf 8f4f 	dsb	sy
 8010236:	e7fe      	b.n	8010236 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010238:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801023c:	f043 0301 	orr.w	r3, r3, #1
 8010240:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8010244:	9b03      	ldr	r3, [sp, #12]
 8010246:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010248:	2b00      	cmp	r3, #0
 801024a:	f000 809d 	beq.w	8010388 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801024e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8010250:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010252:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010254:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8010256:	d85e      	bhi.n	8010316 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010258:	4b53      	ldr	r3, [pc, #332]	; (80103a8 <prvTimerTask+0x280>)
 801025a:	1d39      	adds	r1, r7, #4
 801025c:	6818      	ldr	r0, [r3, #0]
 801025e:	f7fd fe67 	bl	800df30 <vListInsert>
	return xProcessTimerNow;
 8010262:	e78e      	b.n	8010182 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010264:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010268:	f023 0301 	bic.w	r3, r3, #1
 801026c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010270:	e787      	b.n	8010182 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010272:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010276:	079a      	lsls	r2, r3, #30
 8010278:	d552      	bpl.n	8010320 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801027a:	f023 0301 	bic.w	r3, r3, #1
 801027e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010282:	e77e      	b.n	8010182 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010284:	9b03      	ldr	r3, [sp, #12]
 8010286:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801028a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801028c:	9b02      	ldr	r3, [sp, #8]
 801028e:	2b00      	cmp	r3, #0
 8010290:	f6ff af77 	blt.w	8010182 <prvTimerTask+0x5a>
 8010294:	e77f      	b.n	8010196 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010296:	f7ff fc53 	bl	800fb40 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801029a:	f7ff fc69 	bl	800fb70 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801029e:	682a      	ldr	r2, [r5, #0]
 80102a0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 80102a2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80102a4:	d808      	bhi.n	80102b8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80102a6:	4b40      	ldr	r3, [pc, #256]	; (80103a8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 80102a8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80102ac:	681a      	ldr	r2, [r3, #0]
 80102ae:	6812      	ldr	r2, [r2, #0]
 80102b0:	fab2 f282 	clz	r2, r2
 80102b4:	0952      	lsrs	r2, r2, #5
 80102b6:	e756      	b.n	8010166 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 80102b8:	f7ff fee8 	bl	801008c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80102bc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80102c0:	f7ff fc46 	bl	800fb50 <xTaskResumeAll>
 80102c4:	e75d      	b.n	8010182 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80102c6:	f7ff fee1 	bl	801008c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80102ca:	e771      	b.n	80101b0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80102cc:	f7ff fc40 	bl	800fb50 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80102d0:	6832      	ldr	r2, [r6, #0]
 80102d2:	68d2      	ldr	r2, [r2, #12]
 80102d4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80102d8:	f10b 0104 	add.w	r1, fp, #4
 80102dc:	4608      	mov	r0, r1
 80102de:	9101      	str	r1, [sp, #4]
 80102e0:	f7fd fe3e 	bl	800df60 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80102e4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 80102e8:	9901      	ldr	r1, [sp, #4]
 80102ea:	f010 0f04 	tst.w	r0, #4
 80102ee:	d11b      	bne.n	8010328 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80102f0:	f020 0001 	bic.w	r0, r0, #1
 80102f4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80102f8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80102fc:	4658      	mov	r0, fp
 80102fe:	4798      	blx	r3
}
 8010300:	e73f      	b.n	8010182 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010302:	4553      	cmp	r3, sl
 8010304:	d902      	bls.n	801030c <prvTimerTask+0x1e4>
 8010306:	2800      	cmp	r0, #0
 8010308:	f43f af73 	beq.w	80101f2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801030c:	6830      	ldr	r0, [r6, #0]
 801030e:	1d39      	adds	r1, r7, #4
 8010310:	f7fd fe0e 	bl	800df30 <vListInsert>
	return xProcessTimerNow;
 8010314:	e735      	b.n	8010182 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010316:	6830      	ldr	r0, [r6, #0]
 8010318:	1d39      	adds	r1, r7, #4
 801031a:	f7fd fe09 	bl	800df30 <vListInsert>
 801031e:	e730      	b.n	8010182 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8010320:	4638      	mov	r0, r7
 8010322:	f7fd fd81 	bl	800de28 <vPortFree>
 8010326:	e72c      	b.n	8010182 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010328:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801032c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010330:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8010332:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010334:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010338:	d903      	bls.n	8010342 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801033a:	6830      	ldr	r0, [r6, #0]
 801033c:	f7fd fdf8 	bl	800df30 <vListInsert>
	return xProcessTimerNow;
 8010340:	e7da      	b.n	80102f8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010342:	ebaa 0307 	sub.w	r3, sl, r7
 8010346:	429a      	cmp	r2, r3
 8010348:	d819      	bhi.n	801037e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801034a:	6823      	ldr	r3, [r4, #0]
 801034c:	b173      	cbz	r3, 801036c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801034e:	2300      	movs	r3, #0
 8010350:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8010352:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010354:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010358:	f7ff fd9c 	bl	800fe94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801035c:	2300      	movs	r3, #0
 801035e:	6820      	ldr	r0, [r4, #0]
 8010360:	461a      	mov	r2, r3
 8010362:	a906      	add	r1, sp, #24
 8010364:	f7fe f96a 	bl	800e63c <xQueueGenericSend>
			configASSERT( xResult );
 8010368:	2800      	cmp	r0, #0
 801036a:	d1c5      	bne.n	80102f8 <prvTimerTask+0x1d0>
 801036c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010370:	f383 8811 	msr	BASEPRI, r3
 8010374:	f3bf 8f6f 	isb	sy
 8010378:	f3bf 8f4f 	dsb	sy
 801037c:	e7fe      	b.n	801037c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801037e:	4b0a      	ldr	r3, [pc, #40]	; (80103a8 <prvTimerTask+0x280>)
 8010380:	6818      	ldr	r0, [r3, #0]
 8010382:	f7fd fdd5 	bl	800df30 <vListInsert>
	return xProcessTimerNow;
 8010386:	e7b7      	b.n	80102f8 <prvTimerTask+0x1d0>
 8010388:	f04f 0350 	mov.w	r3, #80	; 0x50
 801038c:	f383 8811 	msr	BASEPRI, r3
 8010390:	f3bf 8f6f 	isb	sy
 8010394:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010398:	e7fe      	b.n	8010398 <prvTimerTask+0x270>
 801039a:	bf00      	nop
 801039c:	20012c6c 	.word	0x20012c6c
 80103a0:	20012d3c 	.word	0x20012d3c
 80103a4:	20012d90 	.word	0x20012d90
 80103a8:	20012c70 	.word	0x20012c70

080103ac <xTimerCreateTimerTask>:
{
 80103ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80103ae:	4c23      	ldr	r4, [pc, #140]	; (801043c <xTimerCreateTimerTask+0x90>)
{
 80103b0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 80103b2:	f7fd fe4f 	bl	800e054 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80103b6:	6825      	ldr	r5, [r4, #0]
 80103b8:	b335      	cbz	r5, 8010408 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 80103ba:	f7fd fe6d 	bl	800e098 <vPortExitCritical>
	if( xTimerQueue != NULL )
 80103be:	6823      	ldr	r3, [r4, #0]
 80103c0:	b1cb      	cbz	r3, 80103f6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80103c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80103c4:	aa07      	add	r2, sp, #28
 80103c6:	a906      	add	r1, sp, #24
 80103c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80103ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80103ce:	f7fd fc5f 	bl	800dc90 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80103d2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 80103d6:	2302      	movs	r3, #2
 80103d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80103dc:	9300      	str	r3, [sp, #0]
 80103de:	9a07      	ldr	r2, [sp, #28]
 80103e0:	4917      	ldr	r1, [pc, #92]	; (8010440 <xTimerCreateTimerTask+0x94>)
 80103e2:	4818      	ldr	r0, [pc, #96]	; (8010444 <xTimerCreateTimerTask+0x98>)
 80103e4:	4623      	mov	r3, r4
 80103e6:	f7ff fa6d 	bl	800f8c4 <xTaskCreateStatic>
 80103ea:	4b17      	ldr	r3, [pc, #92]	; (8010448 <xTimerCreateTimerTask+0x9c>)
 80103ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80103ee:	b110      	cbz	r0, 80103f6 <xTimerCreateTimerTask+0x4a>
}
 80103f0:	2001      	movs	r0, #1
 80103f2:	b009      	add	sp, #36	; 0x24
 80103f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103fa:	f383 8811 	msr	BASEPRI, r3
 80103fe:	f3bf 8f6f 	isb	sy
 8010402:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010406:	e7fe      	b.n	8010406 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010408:	4f10      	ldr	r7, [pc, #64]	; (801044c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801040a:	4e11      	ldr	r6, [pc, #68]	; (8010450 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801040c:	4638      	mov	r0, r7
 801040e:	f7fd fd6f 	bl	800def0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010412:	4630      	mov	r0, r6
 8010414:	f7fd fd6c 	bl	800def0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010418:	4a0e      	ldr	r2, [pc, #56]	; (8010454 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801041a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801041c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801041e:	4a0e      	ldr	r2, [pc, #56]	; (8010458 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010420:	4b0e      	ldr	r3, [pc, #56]	; (801045c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8010422:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010424:	2110      	movs	r1, #16
 8010426:	4a0e      	ldr	r2, [pc, #56]	; (8010460 <xTimerCreateTimerTask+0xb4>)
 8010428:	200a      	movs	r0, #10
 801042a:	f7fd ffb1 	bl	800e390 <xQueueGenericCreateStatic>
 801042e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8010430:	2800      	cmp	r0, #0
 8010432:	d0c2      	beq.n	80103ba <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010434:	490b      	ldr	r1, [pc, #44]	; (8010464 <xTimerCreateTimerTask+0xb8>)
 8010436:	f7fe ff0d 	bl	800f254 <vQueueAddToRegistry>
 801043a:	e7be      	b.n	80103ba <xTimerCreateTimerTask+0xe>
 801043c:	20012d90 	.word	0x20012d90
 8010440:	0802ed74 	.word	0x0802ed74
 8010444:	08010129 	.word	0x08010129
 8010448:	20012d94 	.word	0x20012d94
 801044c:	20012d14 	.word	0x20012d14
 8010450:	20012d28 	.word	0x20012d28
 8010454:	20012c6c 	.word	0x20012c6c
 8010458:	20012c70 	.word	0x20012c70
 801045c:	20012d40 	.word	0x20012d40
 8010460:	20012c74 	.word	0x20012c74
 8010464:	0802ed6c 	.word	0x0802ed6c

08010468 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010468:	8880      	ldrh	r0, [r0, #4]
 801046a:	4770      	bx	lr

0801046c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801046c:	b570      	push	{r4, r5, r6, lr}
 801046e:	6803      	ldr	r3, [r0, #0]
 8010470:	4605      	mov	r5, r0
 8010472:	460c      	mov	r4, r1
 8010474:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010476:	2100      	movs	r1, #0
 8010478:	4798      	blx	r3
 801047a:	682b      	ldr	r3, [r5, #0]
 801047c:	4606      	mov	r6, r0
 801047e:	6a1b      	ldr	r3, [r3, #32]
 8010480:	4628      	mov	r0, r5
 8010482:	4798      	blx	r3
 8010484:	1ba4      	subs	r4, r4, r6
 8010486:	b2a4      	uxth	r4, r4
 8010488:	fbb4 f0f0 	udiv	r0, r4, r0
 801048c:	bd70      	pop	{r4, r5, r6, pc}

0801048e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801048e:	2300      	movs	r3, #0
 8010490:	8083      	strh	r3, [r0, #4]
 8010492:	4770      	bx	lr

08010494 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010494:	b510      	push	{r4, lr}
 8010496:	6803      	ldr	r3, [r0, #0]
 8010498:	8881      	ldrh	r1, [r0, #4]
 801049a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801049c:	4604      	mov	r4, r0
 801049e:	4798      	blx	r3
 80104a0:	88a3      	ldrh	r3, [r4, #4]
 80104a2:	3301      	adds	r3, #1
 80104a4:	80a3      	strh	r3, [r4, #4]
 80104a6:	bd10      	pop	{r4, pc}

080104a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80104a8:	6803      	ldr	r3, [r0, #0]
 80104aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80104ac:	4718      	bx	r3

080104ae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80104ae:	4770      	bx	lr

080104b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80104b0:	4a02      	ldr	r2, [pc, #8]	; (80104bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80104b2:	6002      	str	r2, [r0, #0]
 80104b4:	2200      	movs	r2, #0
 80104b6:	8082      	strh	r2, [r0, #4]
 80104b8:	4770      	bx	lr
 80104ba:	bf00      	nop
 80104bc:	0802ed84 	.word	0x0802ed84

080104c0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80104c0:	b510      	push	{r4, lr}
 80104c2:	6803      	ldr	r3, [r0, #0]
 80104c4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80104c8:	4604      	mov	r4, r0
 80104ca:	4798      	blx	r3
 80104cc:	b110      	cbz	r0, 80104d4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80104ce:	4620      	mov	r0, r4
 80104d0:	f7f2 fc9a 	bl	8002e08 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80104d4:	bd10      	pop	{r4, pc}

080104d6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80104d6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80104da:	4770      	bx	lr

080104dc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80104dc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80104e0:	4770      	bx	lr

080104e2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80104e2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80104e6:	4770      	bx	lr

080104e8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80104e8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80104ec:	4770      	bx	lr

080104ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80104ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80104f0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80104f4:	461e      	mov	r6, r3
 80104f6:	6803      	ldr	r3, [r0, #0]
 80104f8:	460f      	mov	r7, r1
 80104fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80104fe:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010502:	4604      	mov	r4, r0
 8010504:	4615      	mov	r5, r2
 8010506:	4798      	blx	r3
 8010508:	b93e      	cbnz	r6, 801051a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801050a:	1bed      	subs	r5, r5, r7
 801050c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010510:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010514:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8010518:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801051a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801051e:	e7f7      	b.n	8010510 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010520 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010520:	b510      	push	{r4, lr}
 8010522:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010526:	600c      	str	r4, [r1, #0]
 8010528:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801052c:	6011      	str	r1, [r2, #0]
 801052e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010532:	801a      	strh	r2, [r3, #0]
 8010534:	9b02      	ldr	r3, [sp, #8]
 8010536:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801053a:	801a      	strh	r2, [r3, #0]
 801053c:	bd10      	pop	{r4, pc}

0801053e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801053e:	b510      	push	{r4, lr}
 8010540:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010544:	600c      	str	r4, [r1, #0]
 8010546:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801054a:	6011      	str	r1, [r2, #0]
 801054c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010550:	801a      	strh	r2, [r3, #0]
 8010552:	bd10      	pop	{r4, pc}

08010554 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010554:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010558:	600b      	str	r3, [r1, #0]
 801055a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801055e:	6013      	str	r3, [r2, #0]
 8010560:	4770      	bx	lr

08010562 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010562:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010566:	4770      	bx	lr

08010568 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010568:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801056c:	4770      	bx	lr

0801056e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801056e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010572:	4770      	bx	lr

08010574 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010574:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010578:	4770      	bx	lr

0801057a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801057a:	4770      	bx	lr

0801057c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801057c:	b510      	push	{r4, lr}
 801057e:	21b4      	movs	r1, #180	; 0xb4
 8010580:	4604      	mov	r4, r0
 8010582:	f019 fcb8 	bl	8029ef6 <_ZdlPvj>
 8010586:	4620      	mov	r0, r4
 8010588:	bd10      	pop	{r4, pc}

0801058a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801058a:	b570      	push	{r4, r5, r6, lr}
 801058c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010590:	428d      	cmp	r5, r1
 8010592:	bfb8      	it	lt
 8010594:	460d      	movlt	r5, r1
 8010596:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801059a:	428d      	cmp	r5, r1
 801059c:	4604      	mov	r4, r0
 801059e:	bfa8      	it	ge
 80105a0:	460d      	movge	r5, r1
 80105a2:	4616      	mov	r6, r2
 80105a4:	b99a      	cbnz	r2, 80105ce <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80105a6:	6803      	ldr	r3, [r0, #0]
 80105a8:	4629      	mov	r1, r5
 80105aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80105ae:	4798      	blx	r3
 80105b0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80105b4:	b368      	cbz	r0, 8010612 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80105b6:	6803      	ldr	r3, [r0, #0]
 80105b8:	68db      	ldr	r3, [r3, #12]
 80105ba:	4798      	blx	r3
 80105bc:	b348      	cbz	r0, 8010612 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80105be:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80105c2:	6803      	ldr	r3, [r0, #0]
 80105c4:	4621      	mov	r1, r4
 80105c6:	689b      	ldr	r3, [r3, #8]
 80105c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105cc:	4718      	bx	r3
 80105ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80105d2:	2b00      	cmp	r3, #0
 80105d4:	dd08      	ble.n	80105e8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80105d6:	f005 fbe3 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 80105da:	4621      	mov	r1, r4
 80105dc:	3004      	adds	r0, #4
 80105de:	f005 fc2c 	bl	8015e3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80105e2:	2300      	movs	r3, #0
 80105e4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80105e8:	6823      	ldr	r3, [r4, #0]
 80105ea:	4620      	mov	r0, r4
 80105ec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80105f0:	4798      	blx	r3
 80105f2:	2300      	movs	r3, #0
 80105f4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80105f8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80105fc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010600:	f005 fbce 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 8010604:	4621      	mov	r1, r4
 8010606:	3004      	adds	r0, #4
 8010608:	f005 fcc0 	bl	8015f8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801060c:	2301      	movs	r3, #1
 801060e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010612:	bd70      	pop	{r4, r5, r6, pc}

08010614 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010614:	b510      	push	{r4, lr}
 8010616:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801061a:	4299      	cmp	r1, r3
 801061c:	bfb8      	it	lt
 801061e:	4619      	movlt	r1, r3
 8010620:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010624:	4299      	cmp	r1, r3
 8010626:	bfa8      	it	ge
 8010628:	4619      	movge	r1, r3
 801062a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801062e:	428b      	cmp	r3, r1
 8010630:	4604      	mov	r4, r0
 8010632:	d010      	beq.n	8010656 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010634:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010638:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801063c:	b158      	cbz	r0, 8010656 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801063e:	6803      	ldr	r3, [r0, #0]
 8010640:	68db      	ldr	r3, [r3, #12]
 8010642:	4798      	blx	r3
 8010644:	b138      	cbz	r0, 8010656 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010646:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801064a:	6803      	ldr	r3, [r0, #0]
 801064c:	4621      	mov	r1, r4
 801064e:	689b      	ldr	r3, [r3, #8]
 8010650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010654:	4718      	bx	r3
 8010656:	bd10      	pop	{r4, pc}

08010658 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801065a:	4604      	mov	r4, r0
 801065c:	460d      	mov	r5, r1
 801065e:	b1a9      	cbz	r1, 801068c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010660:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010664:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010668:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801066c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010670:	ab01      	add	r3, sp, #4
 8010672:	1a12      	subs	r2, r2, r0
 8010674:	1b89      	subs	r1, r1, r6
 8010676:	1a38      	subs	r0, r7, r0
 8010678:	f006 fe48 	bl	801730c <_ZN8touchgfx6muldivElllRl>
 801067c:	4629      	mov	r1, r5
 801067e:	ab01      	add	r3, sp, #4
 8010680:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010684:	4430      	add	r0, r6
 8010686:	f006 fe41 	bl	801730c <_ZN8touchgfx6muldivElllRl>
 801068a:	b285      	uxth	r5, r0
 801068c:	4628      	mov	r0, r5
 801068e:	b003      	add	sp, #12
 8010690:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010692 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010692:	b570      	push	{r4, r5, r6, lr}
 8010694:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010698:	4604      	mov	r4, r0
 801069a:	2b00      	cmp	r3, #0
 801069c:	d035      	beq.n	801070a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801069e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80106a2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80106a6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80106aa:	3001      	adds	r0, #1
 80106ac:	1ad2      	subs	r2, r2, r3
 80106ae:	b212      	sxth	r2, r2
 80106b0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 80106b4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80106b8:	2100      	movs	r1, #0
 80106ba:	b280      	uxth	r0, r0
 80106bc:	47a8      	blx	r5
 80106be:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80106c2:	6823      	ldr	r3, [r4, #0]
 80106c4:	4401      	add	r1, r0
 80106c6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80106ca:	4620      	mov	r0, r4
 80106cc:	4798      	blx	r3
 80106ce:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80106d2:	429a      	cmp	r2, r3
 80106d4:	db19      	blt.n	801070a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80106d6:	2500      	movs	r5, #0
 80106d8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80106dc:	f005 fb60 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 80106e0:	4621      	mov	r1, r4
 80106e2:	3004      	adds	r0, #4
 80106e4:	f005 fba9 	bl	8015e3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80106e8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80106ec:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80106f0:	b158      	cbz	r0, 801070a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80106f2:	6803      	ldr	r3, [r0, #0]
 80106f4:	68db      	ldr	r3, [r3, #12]
 80106f6:	4798      	blx	r3
 80106f8:	b138      	cbz	r0, 801070a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80106fa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80106fe:	6803      	ldr	r3, [r0, #0]
 8010700:	4621      	mov	r1, r4
 8010702:	689b      	ldr	r3, [r3, #8]
 8010704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010708:	4718      	bx	r3
 801070a:	bd70      	pop	{r4, r5, r6, pc}

0801070c <_ZN8touchgfx8DrawableC1Ev>:
 801070c:	4a0a      	ldr	r2, [pc, #40]	; (8010738 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801070e:	6002      	str	r2, [r0, #0]
 8010710:	2200      	movs	r2, #0
 8010712:	8082      	strh	r2, [r0, #4]
 8010714:	80c2      	strh	r2, [r0, #6]
 8010716:	8102      	strh	r2, [r0, #8]
 8010718:	8142      	strh	r2, [r0, #10]
 801071a:	8182      	strh	r2, [r0, #12]
 801071c:	81c2      	strh	r2, [r0, #14]
 801071e:	8202      	strh	r2, [r0, #16]
 8010720:	8242      	strh	r2, [r0, #18]
 8010722:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010726:	61c2      	str	r2, [r0, #28]
 8010728:	8402      	strh	r2, [r0, #32]
 801072a:	8442      	strh	r2, [r0, #34]	; 0x22
 801072c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010730:	2201      	movs	r2, #1
 8010732:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010736:	4770      	bx	lr
 8010738:	0802f524 	.word	0x0802f524

0801073c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801073c:	b570      	push	{r4, r5, r6, lr}
 801073e:	6803      	ldr	r3, [r0, #0]
 8010740:	4604      	mov	r4, r0
 8010742:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010744:	4615      	mov	r5, r2
 8010746:	4798      	blx	r3
 8010748:	6823      	ldr	r3, [r4, #0]
 801074a:	4629      	mov	r1, r5
 801074c:	4620      	mov	r0, r4
 801074e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010750:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010754:	4718      	bx	r3

08010756 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010756:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801075a:	4604      	mov	r4, r0
 801075c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010760:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010764:	460e      	mov	r6, r1
 8010766:	4615      	mov	r5, r2
 8010768:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801076c:	4619      	mov	r1, r3
 801076e:	463a      	mov	r2, r7
 8010770:	3058      	adds	r0, #88	; 0x58
 8010772:	4698      	mov	r8, r3
 8010774:	f7ff ffe2 	bl	801073c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010778:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801077c:	4446      	add	r6, r8
 801077e:	42b3      	cmp	r3, r6
 8010780:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010784:	bfb8      	it	lt
 8010786:	8126      	strhlt	r6, [r4, #8]
 8010788:	443d      	add	r5, r7
 801078a:	42ab      	cmp	r3, r5
 801078c:	bfb8      	it	lt
 801078e:	8165      	strhlt	r5, [r4, #10]
 8010790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010794 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010794:	b510      	push	{r4, lr}
 8010796:	4604      	mov	r4, r0
 8010798:	302c      	adds	r0, #44	; 0x2c
 801079a:	f002 fdf8 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801079e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80107a2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80107a6:	4620      	mov	r0, r4
 80107a8:	f7ff ffc8 	bl	801073c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80107ac:	bd10      	pop	{r4, pc}
	...

080107b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 80107b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80107b2:	4604      	mov	r4, r0
 80107b4:	4626      	mov	r6, r4
 80107b6:	2500      	movs	r5, #0
 80107b8:	f7ff ffa8 	bl	801070c <_ZN8touchgfx8DrawableC1Ev>
 80107bc:	4b23      	ldr	r3, [pc, #140]	; (801084c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 80107be:	62a5      	str	r5, [r4, #40]	; 0x28
 80107c0:	f846 3b2c 	str.w	r3, [r6], #44
 80107c4:	2226      	movs	r2, #38	; 0x26
 80107c6:	4629      	mov	r1, r5
 80107c8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80107cc:	4630      	mov	r0, r6
 80107ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 80107d2:	f01a fc7c 	bl	802b0ce <memset>
 80107d6:	4630      	mov	r0, r6
 80107d8:	f7ff ff98 	bl	801070c <_ZN8touchgfx8DrawableC1Ev>
 80107dc:	a902      	add	r1, sp, #8
 80107de:	4b1c      	ldr	r3, [pc, #112]	; (8010850 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 80107e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80107e2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 80107e6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80107ea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 80107ee:	4630      	mov	r0, r6
 80107f0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80107f4:	f002 fdcb 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80107f8:	4638      	mov	r0, r7
 80107fa:	f7ff ff87 	bl	801070c <_ZN8touchgfx8DrawableC1Ev>
 80107fe:	4b15      	ldr	r3, [pc, #84]	; (8010854 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010800:	65a3      	str	r3, [r4, #88]	; 0x58
 8010802:	2364      	movs	r3, #100	; 0x64
 8010804:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010808:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801080c:	4b12      	ldr	r3, [pc, #72]	; (8010858 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801080e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010812:	4629      	mov	r1, r5
 8010814:	4630      	mov	r0, r6
 8010816:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801081a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801081e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010822:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010826:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801082a:	f7f2 fa49 	bl	8002cc0 <_ZN8touchgfx8Drawable4setXEs>
 801082e:	4629      	mov	r1, r5
 8010830:	4630      	mov	r0, r6
 8010832:	f7f2 fa47 	bl	8002cc4 <_ZN8touchgfx8Drawable4setYEs>
 8010836:	4631      	mov	r1, r6
 8010838:	4620      	mov	r0, r4
 801083a:	f000 f819 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801083e:	4620      	mov	r0, r4
 8010840:	4639      	mov	r1, r7
 8010842:	f000 f815 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010846:	4620      	mov	r0, r4
 8010848:	b003      	add	sp, #12
 801084a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801084c:	0802edb8 	.word	0x0802edb8
 8010850:	0802f3e0 	.word	0x0802f3e0
 8010854:	0802ee8c 	.word	0x0802ee8c
 8010858:	08017a6b 	.word	0x08017a6b

0801085c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801085c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801085e:	2000      	movs	r0, #0
 8010860:	b12b      	cbz	r3, 801086e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010862:	b920      	cbnz	r0, 801086e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010864:	1a5a      	subs	r2, r3, r1
 8010866:	4250      	negs	r0, r2
 8010868:	4150      	adcs	r0, r2
 801086a:	699b      	ldr	r3, [r3, #24]
 801086c:	e7f8      	b.n	8010860 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801086e:	4770      	bx	lr

08010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010870:	2300      	movs	r3, #0
 8010872:	6148      	str	r0, [r1, #20]
 8010874:	618b      	str	r3, [r1, #24]
 8010876:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010878:	b913      	cbnz	r3, 8010880 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801087a:	6281      	str	r1, [r0, #40]	; 0x28
 801087c:	4770      	bx	lr
 801087e:	4613      	mov	r3, r2
 8010880:	699a      	ldr	r2, [r3, #24]
 8010882:	2a00      	cmp	r2, #0
 8010884:	d1fb      	bne.n	801087e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010886:	6199      	str	r1, [r3, #24]
 8010888:	4770      	bx	lr

0801088a <_ZN8touchgfx9Container9removeAllEv>:
 801088a:	2200      	movs	r2, #0
 801088c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801088e:	b123      	cbz	r3, 801089a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010890:	6999      	ldr	r1, [r3, #24]
 8010892:	6281      	str	r1, [r0, #40]	; 0x28
 8010894:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010898:	e7f8      	b.n	801088c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801089a:	4770      	bx	lr

0801089c <_ZN8touchgfx9Container6unlinkEv>:
 801089c:	2300      	movs	r3, #0
 801089e:	6283      	str	r3, [r0, #40]	; 0x28
 80108a0:	4770      	bx	lr

080108a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80108a2:	2200      	movs	r2, #0
 80108a4:	8002      	strh	r2, [r0, #0]
 80108a6:	8042      	strh	r2, [r0, #2]
 80108a8:	8082      	strh	r2, [r0, #4]
 80108aa:	80c2      	strh	r2, [r0, #6]
 80108ac:	4770      	bx	lr

080108ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80108ae:	b570      	push	{r4, r5, r6, lr}
 80108b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80108b2:	460d      	mov	r5, r1
 80108b4:	4616      	mov	r6, r2
 80108b6:	b13c      	cbz	r4, 80108c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80108b8:	6823      	ldr	r3, [r4, #0]
 80108ba:	4620      	mov	r0, r4
 80108bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80108be:	4632      	mov	r2, r6
 80108c0:	4629      	mov	r1, r5
 80108c2:	4798      	blx	r3
 80108c4:	69a4      	ldr	r4, [r4, #24]
 80108c6:	e7f6      	b.n	80108b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80108c8:	bd70      	pop	{r4, r5, r6, pc}

080108ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80108ca:	b538      	push	{r3, r4, r5, lr}
 80108cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80108ce:	460d      	mov	r5, r1
 80108d0:	b134      	cbz	r4, 80108e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80108d2:	682b      	ldr	r3, [r5, #0]
 80108d4:	4621      	mov	r1, r4
 80108d6:	689b      	ldr	r3, [r3, #8]
 80108d8:	4628      	mov	r0, r5
 80108da:	4798      	blx	r3
 80108dc:	69a4      	ldr	r4, [r4, #24]
 80108de:	e7f7      	b.n	80108d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80108e0:	bd38      	pop	{r3, r4, r5, pc}

080108e2 <_ZN8touchgfx9ContainerD1Ev>:
 80108e2:	4770      	bx	lr

080108e4 <_ZN8touchgfx9ContainerD0Ev>:
 80108e4:	b510      	push	{r4, lr}
 80108e6:	212c      	movs	r1, #44	; 0x2c
 80108e8:	4604      	mov	r4, r0
 80108ea:	f019 fb04 	bl	8029ef6 <_ZdlPvj>
 80108ee:	4620      	mov	r0, r4
 80108f0:	bd10      	pop	{r4, pc}

080108f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80108f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80108f4:	b19b      	cbz	r3, 801091e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80108f6:	428b      	cmp	r3, r1
 80108f8:	d109      	bne.n	801090e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80108fa:	699a      	ldr	r2, [r3, #24]
 80108fc:	2100      	movs	r1, #0
 80108fe:	6159      	str	r1, [r3, #20]
 8010900:	6282      	str	r2, [r0, #40]	; 0x28
 8010902:	b902      	cbnz	r2, 8010906 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010904:	4770      	bx	lr
 8010906:	6199      	str	r1, [r3, #24]
 8010908:	4770      	bx	lr
 801090a:	4613      	mov	r3, r2
 801090c:	b13a      	cbz	r2, 801091e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801090e:	699a      	ldr	r2, [r3, #24]
 8010910:	428a      	cmp	r2, r1
 8010912:	d1fa      	bne.n	801090a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010914:	698a      	ldr	r2, [r1, #24]
 8010916:	619a      	str	r2, [r3, #24]
 8010918:	2300      	movs	r3, #0
 801091a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801091e:	4770      	bx	lr

08010920 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010920:	b410      	push	{r4}
 8010922:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010924:	4604      	mov	r4, r0
 8010926:	b92b      	cbnz	r3, 8010934 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010928:	6803      	ldr	r3, [r0, #0]
 801092a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801092e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010930:	4611      	mov	r1, r2
 8010932:	4718      	bx	r3
 8010934:	b941      	cbnz	r1, 8010948 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010936:	6193      	str	r3, [r2, #24]
 8010938:	6282      	str	r2, [r0, #40]	; 0x28
 801093a:	6154      	str	r4, [r2, #20]
 801093c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010940:	4770      	bx	lr
 8010942:	4603      	mov	r3, r0
 8010944:	2800      	cmp	r0, #0
 8010946:	d0f9      	beq.n	801093c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010948:	4299      	cmp	r1, r3
 801094a:	6998      	ldr	r0, [r3, #24]
 801094c:	d1f9      	bne.n	8010942 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801094e:	6190      	str	r0, [r2, #24]
 8010950:	618a      	str	r2, [r1, #24]
 8010952:	e7f2      	b.n	801093a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010954 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010954:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010958:	461f      	mov	r7, r3
 801095a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801095e:	460d      	mov	r5, r1
 8010960:	4616      	mov	r6, r2
 8010962:	b103      	cbz	r3, 8010966 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010964:	6038      	str	r0, [r7, #0]
 8010966:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010968:	b314      	cbz	r4, 80109b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801096a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801096e:	b1eb      	cbz	r3, 80109ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010970:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010974:	428d      	cmp	r5, r1
 8010976:	db19      	blt.n	80109ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010978:	8923      	ldrh	r3, [r4, #8]
 801097a:	b289      	uxth	r1, r1
 801097c:	440b      	add	r3, r1
 801097e:	b21b      	sxth	r3, r3
 8010980:	429d      	cmp	r5, r3
 8010982:	da13      	bge.n	80109ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010984:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010988:	4296      	cmp	r6, r2
 801098a:	db0f      	blt.n	80109ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801098c:	8963      	ldrh	r3, [r4, #10]
 801098e:	b292      	uxth	r2, r2
 8010990:	4413      	add	r3, r2
 8010992:	b21b      	sxth	r3, r3
 8010994:	429e      	cmp	r6, r3
 8010996:	da09      	bge.n	80109ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010998:	6823      	ldr	r3, [r4, #0]
 801099a:	1ab2      	subs	r2, r6, r2
 801099c:	1a69      	subs	r1, r5, r1
 801099e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80109a2:	b212      	sxth	r2, r2
 80109a4:	463b      	mov	r3, r7
 80109a6:	b209      	sxth	r1, r1
 80109a8:	4620      	mov	r0, r4
 80109aa:	47c0      	blx	r8
 80109ac:	69a4      	ldr	r4, [r4, #24]
 80109ae:	e7db      	b.n	8010968 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80109b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080109b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80109b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109b8:	4c6e      	ldr	r4, [pc, #440]	; (8010b74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80109ba:	b0a1      	sub	sp, #132	; 0x84
 80109bc:	6824      	ldr	r4, [r4, #0]
 80109be:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80109c0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80109c4:	9303      	str	r3, [sp, #12]
 80109c6:	2400      	movs	r4, #0
 80109c8:	802c      	strh	r4, [r5, #0]
 80109ca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80109cc:	802c      	strh	r4, [r5, #0]
 80109ce:	601c      	str	r4, [r3, #0]
 80109d0:	4606      	mov	r6, r0
 80109d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80109d6:	f7ff ffbd 	bl	8010954 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80109da:	f1b9 0f03 	cmp.w	r9, #3
 80109de:	f340 80c2 	ble.w	8010b66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80109e2:	4631      	mov	r1, r6
 80109e4:	a80c      	add	r0, sp, #48	; 0x30
 80109e6:	f006 fb5f 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80109ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80109ee:	9306      	str	r3, [sp, #24]
 80109f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80109f4:	9307      	str	r3, [sp, #28]
 80109f6:	9b03      	ldr	r3, [sp, #12]
 80109f8:	f8d3 a000 	ldr.w	sl, [r3]
 80109fc:	f1ba 0f00 	cmp.w	sl, #0
 8010a00:	f000 80b4 	beq.w	8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010a04:	4651      	mov	r1, sl
 8010a06:	a810      	add	r0, sp, #64	; 0x40
 8010a08:	f006 fb4e 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a0c:	9b01      	ldr	r3, [sp, #4]
 8010a0e:	9a06      	ldr	r2, [sp, #24]
 8010a10:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010a14:	189d      	adds	r5, r3, r2
 8010a16:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010a1a:	9a07      	ldr	r2, [sp, #28]
 8010a1c:	2002      	movs	r0, #2
 8010a1e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010a22:	4419      	add	r1, r3
 8010a24:	1a6d      	subs	r5, r5, r1
 8010a26:	9b02      	ldr	r3, [sp, #8]
 8010a28:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010a2c:	4413      	add	r3, r2
 8010a2e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010a32:	fb92 f2f0 	sdiv	r2, r2, r0
 8010a36:	440a      	add	r2, r1
 8010a38:	1a9b      	subs	r3, r3, r2
 8010a3a:	435b      	muls	r3, r3
 8010a3c:	fb05 3505 	mla	r5, r5, r5, r3
 8010a40:	4f4d      	ldr	r7, [pc, #308]	; (8010b78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010a42:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010a44:	ac10      	add	r4, sp, #64	; 0x40
 8010a46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a48:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010a4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a4c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010a4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a50:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010a54:	f1b9 0f0c 	cmp.w	r9, #12
 8010a58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010a5c:	f04f 0303 	mov.w	r3, #3
 8010a60:	bfc8      	it	gt
 8010a62:	4698      	movgt	r8, r3
 8010a64:	f8cd 9000 	str.w	r9, [sp]
 8010a68:	f04f 0400 	mov.w	r4, #0
 8010a6c:	bfdc      	itt	le
 8010a6e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010a72:	fb92 f8f3 	sdivle	r8, r2, r3
 8010a76:	1c63      	adds	r3, r4, #1
 8010a78:	aa10      	add	r2, sp, #64	; 0x40
 8010a7a:	f004 0401 	and.w	r4, r4, #1
 8010a7e:	9308      	str	r3, [sp, #32]
 8010a80:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010a84:	9b00      	ldr	r3, [sp, #0]
 8010a86:	fb93 f3f8 	sdiv	r3, r3, r8
 8010a8a:	b29b      	uxth	r3, r3
 8010a8c:	3404      	adds	r4, #4
 8010a8e:	f04f 0b00 	mov.w	fp, #0
 8010a92:	9304      	str	r3, [sp, #16]
 8010a94:	9a04      	ldr	r2, [sp, #16]
 8010a96:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010a9a:	fb13 f302 	smulbb	r3, r3, r2
 8010a9e:	9a01      	ldr	r2, [sp, #4]
 8010aa0:	b29b      	uxth	r3, r3
 8010aa2:	1899      	adds	r1, r3, r2
 8010aa4:	9305      	str	r3, [sp, #20]
 8010aa6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010aaa:	b209      	sxth	r1, r1
 8010aac:	4299      	cmp	r1, r3
 8010aae:	db4d      	blt.n	8010b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010ab0:	8932      	ldrh	r2, [r6, #8]
 8010ab2:	4413      	add	r3, r2
 8010ab4:	b21b      	sxth	r3, r3
 8010ab6:	4299      	cmp	r1, r3
 8010ab8:	da48      	bge.n	8010b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010aba:	9b04      	ldr	r3, [sp, #16]
 8010abc:	6827      	ldr	r7, [r4, #0]
 8010abe:	fb17 f703 	smulbb	r7, r7, r3
 8010ac2:	9b02      	ldr	r3, [sp, #8]
 8010ac4:	b2bf      	uxth	r7, r7
 8010ac6:	18fa      	adds	r2, r7, r3
 8010ac8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010acc:	b212      	sxth	r2, r2
 8010ace:	429a      	cmp	r2, r3
 8010ad0:	db3c      	blt.n	8010b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010ad2:	8970      	ldrh	r0, [r6, #10]
 8010ad4:	4403      	add	r3, r0
 8010ad6:	b21b      	sxth	r3, r3
 8010ad8:	429a      	cmp	r2, r3
 8010ada:	da37      	bge.n	8010b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010adc:	2300      	movs	r3, #0
 8010ade:	930b      	str	r3, [sp, #44]	; 0x2c
 8010ae0:	4630      	mov	r0, r6
 8010ae2:	ab0b      	add	r3, sp, #44	; 0x2c
 8010ae4:	f7ff ff36 	bl	8010954 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010ae8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010aea:	b37a      	cbz	r2, 8010b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010aec:	4552      	cmp	r2, sl
 8010aee:	d02d      	beq.n	8010b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010af0:	4611      	mov	r1, r2
 8010af2:	a80e      	add	r0, sp, #56	; 0x38
 8010af4:	9209      	str	r2, [sp, #36]	; 0x24
 8010af6:	f006 fad7 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010afa:	9a06      	ldr	r2, [sp, #24]
 8010afc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010b00:	9b01      	ldr	r3, [sp, #4]
 8010b02:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010b06:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010b0a:	4413      	add	r3, r2
 8010b0c:	f04f 0e02 	mov.w	lr, #2
 8010b10:	fb91 f1fe 	sdiv	r1, r1, lr
 8010b14:	4401      	add	r1, r0
 8010b16:	1a58      	subs	r0, r3, r1
 8010b18:	9a07      	ldr	r2, [sp, #28]
 8010b1a:	9b02      	ldr	r3, [sp, #8]
 8010b1c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010b20:	fb9c fcfe 	sdiv	ip, ip, lr
 8010b24:	4413      	add	r3, r2
 8010b26:	448c      	add	ip, r1
 8010b28:	eba3 030c 	sub.w	r3, r3, ip
 8010b2c:	435b      	muls	r3, r3
 8010b2e:	fb00 3300 	mla	r3, r0, r0, r3
 8010b32:	42ab      	cmp	r3, r5
 8010b34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010b36:	d208      	bcs.n	8010b4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010b38:	9803      	ldr	r0, [sp, #12]
 8010b3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010b3c:	6001      	str	r1, [r0, #0]
 8010b3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010b40:	9805      	ldr	r0, [sp, #20]
 8010b42:	8008      	strh	r0, [r1, #0]
 8010b44:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010b46:	461d      	mov	r5, r3
 8010b48:	800f      	strh	r7, [r1, #0]
 8010b4a:	4692      	mov	sl, r2
 8010b4c:	f10b 0b01 	add.w	fp, fp, #1
 8010b50:	f1bb 0f04 	cmp.w	fp, #4
 8010b54:	f104 0408 	add.w	r4, r4, #8
 8010b58:	d19c      	bne.n	8010a94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010b5a:	9b00      	ldr	r3, [sp, #0]
 8010b5c:	9c08      	ldr	r4, [sp, #32]
 8010b5e:	444b      	add	r3, r9
 8010b60:	4544      	cmp	r4, r8
 8010b62:	9300      	str	r3, [sp, #0]
 8010b64:	d187      	bne.n	8010a76 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010b66:	b021      	add	sp, #132	; 0x84
 8010b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b6c:	f04f 35ff 	mov.w	r5, #4294967295
 8010b70:	e766      	b.n	8010a40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010b72:	bf00      	nop
 8010b74:	20012da4 	.word	0x20012da4
 8010b78:	0802be00 	.word	0x0802be00

08010b7c <_ZN8touchgfx4RectaNERKS0_>:
 8010b7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b80:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010b84:	888c      	ldrh	r4, [r1, #4]
 8010b86:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010b8a:	443c      	add	r4, r7
 8010b8c:	b2a4      	uxth	r4, r4
 8010b8e:	fa0f f884 	sxth.w	r8, r4
 8010b92:	45c1      	cmp	r9, r8
 8010b94:	da2f      	bge.n	8010bf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010b96:	8882      	ldrh	r2, [r0, #4]
 8010b98:	444a      	add	r2, r9
 8010b9a:	b292      	uxth	r2, r2
 8010b9c:	fa0f fe82 	sxth.w	lr, r2
 8010ba0:	4577      	cmp	r7, lr
 8010ba2:	da28      	bge.n	8010bf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010ba4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010ba8:	88cb      	ldrh	r3, [r1, #6]
 8010baa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010bae:	442b      	add	r3, r5
 8010bb0:	b21b      	sxth	r3, r3
 8010bb2:	429e      	cmp	r6, r3
 8010bb4:	da1f      	bge.n	8010bf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010bb6:	88c3      	ldrh	r3, [r0, #6]
 8010bb8:	4433      	add	r3, r6
 8010bba:	b29b      	uxth	r3, r3
 8010bbc:	fa0f fc83 	sxth.w	ip, r3
 8010bc0:	4565      	cmp	r5, ip
 8010bc2:	da18      	bge.n	8010bf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010bc4:	454f      	cmp	r7, r9
 8010bc6:	bfb8      	it	lt
 8010bc8:	464f      	movlt	r7, r9
 8010bca:	42b5      	cmp	r5, r6
 8010bcc:	bfb8      	it	lt
 8010bce:	4635      	movlt	r5, r6
 8010bd0:	45f0      	cmp	r8, lr
 8010bd2:	bfd8      	it	le
 8010bd4:	4622      	movle	r2, r4
 8010bd6:	1bd2      	subs	r2, r2, r7
 8010bd8:	8082      	strh	r2, [r0, #4]
 8010bda:	884a      	ldrh	r2, [r1, #2]
 8010bdc:	88c9      	ldrh	r1, [r1, #6]
 8010bde:	8007      	strh	r7, [r0, #0]
 8010be0:	440a      	add	r2, r1
 8010be2:	b292      	uxth	r2, r2
 8010be4:	b211      	sxth	r1, r2
 8010be6:	458c      	cmp	ip, r1
 8010be8:	bfa8      	it	ge
 8010bea:	4613      	movge	r3, r2
 8010bec:	1b5b      	subs	r3, r3, r5
 8010bee:	80c3      	strh	r3, [r0, #6]
 8010bf0:	8045      	strh	r5, [r0, #2]
 8010bf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010bf6:	2300      	movs	r3, #0
 8010bf8:	8003      	strh	r3, [r0, #0]
 8010bfa:	8043      	strh	r3, [r0, #2]
 8010bfc:	8083      	strh	r3, [r0, #4]
 8010bfe:	80c3      	strh	r3, [r0, #6]
 8010c00:	e7f7      	b.n	8010bf2 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010c02 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010c02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010c06:	2b00      	cmp	r3, #0
 8010c08:	dd06      	ble.n	8010c18 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010c0a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010c0e:	2800      	cmp	r0, #0
 8010c10:	bfcc      	ite	gt
 8010c12:	2000      	movgt	r0, #0
 8010c14:	2001      	movle	r0, #1
 8010c16:	4770      	bx	lr
 8010c18:	2001      	movs	r0, #1
 8010c1a:	4770      	bx	lr

08010c1c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c20:	2300      	movs	r3, #0
 8010c22:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010c24:	8003      	strh	r3, [r0, #0]
 8010c26:	4604      	mov	r4, r0
 8010c28:	8043      	strh	r3, [r0, #2]
 8010c2a:	8083      	strh	r3, [r0, #4]
 8010c2c:	80c3      	strh	r3, [r0, #6]
 8010c2e:	2d00      	cmp	r5, #0
 8010c30:	d040      	beq.n	8010cb4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010c32:	1d28      	adds	r0, r5, #4
 8010c34:	f7ff ffe5 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c38:	b988      	cbnz	r0, 8010c5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010c3a:	4620      	mov	r0, r4
 8010c3c:	f7ff ffe1 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010c44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010c48:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010c4c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010c50:	b138      	cbz	r0, 8010c62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010c52:	8022      	strh	r2, [r4, #0]
 8010c54:	8063      	strh	r3, [r4, #2]
 8010c56:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010c5a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010c5e:	69ad      	ldr	r5, [r5, #24]
 8010c60:	e7e5      	b.n	8010c2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010c62:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010c66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010c6a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010c6e:	4290      	cmp	r0, r2
 8010c70:	4607      	mov	r7, r0
 8010c72:	bfa8      	it	ge
 8010c74:	4617      	movge	r7, r2
 8010c76:	4472      	add	r2, lr
 8010c78:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010c7c:	8027      	strh	r7, [r4, #0]
 8010c7e:	4299      	cmp	r1, r3
 8010c80:	460e      	mov	r6, r1
 8010c82:	4440      	add	r0, r8
 8010c84:	bfa8      	it	ge
 8010c86:	461e      	movge	r6, r3
 8010c88:	4471      	add	r1, lr
 8010c8a:	4463      	add	r3, ip
 8010c8c:	b200      	sxth	r0, r0
 8010c8e:	b212      	sxth	r2, r2
 8010c90:	b209      	sxth	r1, r1
 8010c92:	b21b      	sxth	r3, r3
 8010c94:	4290      	cmp	r0, r2
 8010c96:	bfac      	ite	ge
 8010c98:	ebc7 0200 	rsbge	r2, r7, r0
 8010c9c:	ebc7 0202 	rsblt	r2, r7, r2
 8010ca0:	4299      	cmp	r1, r3
 8010ca2:	bfac      	ite	ge
 8010ca4:	ebc6 0301 	rsbge	r3, r6, r1
 8010ca8:	ebc6 0303 	rsblt	r3, r6, r3
 8010cac:	8066      	strh	r6, [r4, #2]
 8010cae:	80a2      	strh	r2, [r4, #4]
 8010cb0:	80e3      	strh	r3, [r4, #6]
 8010cb2:	e7d4      	b.n	8010c5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010cb4:	4620      	mov	r0, r4
 8010cb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010cba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010cba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010cbe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010cc2:	b383      	cbz	r3, 8010d26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010cc4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010cc6:	b374      	cbz	r4, 8010d26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010cc8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010ccc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010cd0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010cd4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010cd8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010cdc:	b303      	cbz	r3, 8010d20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010cde:	4668      	mov	r0, sp
 8010ce0:	1d21      	adds	r1, r4, #4
 8010ce2:	f8ad 5000 	strh.w	r5, [sp]
 8010ce6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010cea:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010cee:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010cf2:	f7ff ff43 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8010cf6:	4668      	mov	r0, sp
 8010cf8:	f7ff ff83 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cfc:	b980      	cbnz	r0, 8010d20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010cfe:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d02:	88a2      	ldrh	r2, [r4, #4]
 8010d04:	1a9b      	subs	r3, r3, r2
 8010d06:	f8ad 3000 	strh.w	r3, [sp]
 8010d0a:	88e2      	ldrh	r2, [r4, #6]
 8010d0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d10:	1a9b      	subs	r3, r3, r2
 8010d12:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010d16:	6823      	ldr	r3, [r4, #0]
 8010d18:	4669      	mov	r1, sp
 8010d1a:	689b      	ldr	r3, [r3, #8]
 8010d1c:	4620      	mov	r0, r4
 8010d1e:	4798      	blx	r3
 8010d20:	69a4      	ldr	r4, [r4, #24]
 8010d22:	2c00      	cmp	r4, #0
 8010d24:	d1d8      	bne.n	8010cd8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010d26:	b002      	add	sp, #8
 8010d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010d2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010d2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010d2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010d32:	460d      	mov	r5, r1
 8010d34:	4616      	mov	r6, r2
 8010d36:	b323      	cbz	r3, 8010d82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010d38:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010d3a:	b314      	cbz	r4, 8010d82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010d3c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010d40:	b1eb      	cbz	r3, 8010d7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010d42:	6828      	ldr	r0, [r5, #0]
 8010d44:	6869      	ldr	r1, [r5, #4]
 8010d46:	466b      	mov	r3, sp
 8010d48:	c303      	stmia	r3!, {r0, r1}
 8010d4a:	4668      	mov	r0, sp
 8010d4c:	1d21      	adds	r1, r4, #4
 8010d4e:	f7ff ff15 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8010d52:	4668      	mov	r0, sp
 8010d54:	f7ff ff55 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d58:	b988      	cbnz	r0, 8010d7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010d5a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d5e:	88a2      	ldrh	r2, [r4, #4]
 8010d60:	1a9b      	subs	r3, r3, r2
 8010d62:	f8ad 3000 	strh.w	r3, [sp]
 8010d66:	88e2      	ldrh	r2, [r4, #6]
 8010d68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d6c:	1a9b      	subs	r3, r3, r2
 8010d6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010d72:	6823      	ldr	r3, [r4, #0]
 8010d74:	4632      	mov	r2, r6
 8010d76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010d78:	4669      	mov	r1, sp
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	4798      	blx	r3
 8010d7e:	69a4      	ldr	r4, [r4, #24]
 8010d80:	e7db      	b.n	8010d3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010d82:	b002      	add	sp, #8
 8010d84:	bd70      	pop	{r4, r5, r6, pc}

08010d86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010d86:	b513      	push	{r0, r1, r4, lr}
 8010d88:	6803      	ldr	r3, [r0, #0]
 8010d8a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010d8e:	2300      	movs	r3, #0
 8010d90:	e9cd 3300 	strd	r3, r3, [sp]
 8010d94:	466b      	mov	r3, sp
 8010d96:	47a0      	blx	r4
 8010d98:	b002      	add	sp, #8
 8010d9a:	bd10      	pop	{r4, pc}

08010d9c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010d9c:	2301      	movs	r3, #1
 8010d9e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010da2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010da6:	4770      	bx	lr

08010da8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010da8:	2301      	movs	r3, #1
 8010daa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010dae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010db2:	4770      	bx	lr

08010db4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010db4:	6843      	ldr	r3, [r0, #4]
 8010db6:	2201      	movs	r2, #1
 8010db8:	725a      	strb	r2, [r3, #9]
 8010dba:	6840      	ldr	r0, [r0, #4]
 8010dbc:	6803      	ldr	r3, [r0, #0]
 8010dbe:	691b      	ldr	r3, [r3, #16]
 8010dc0:	4718      	bx	r3

08010dc2 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010dc2:	6840      	ldr	r0, [r0, #4]
 8010dc4:	6803      	ldr	r3, [r0, #0]
 8010dc6:	689b      	ldr	r3, [r3, #8]
 8010dc8:	4718      	bx	r3

08010dca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010dca:	b530      	push	{r4, r5, lr}
 8010dcc:	b08b      	sub	sp, #44	; 0x2c
 8010dce:	6804      	ldr	r4, [r0, #0]
 8010dd0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010dd4:	9509      	str	r5, [sp, #36]	; 0x24
 8010dd6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010dda:	9508      	str	r5, [sp, #32]
 8010ddc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010de0:	9507      	str	r5, [sp, #28]
 8010de2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010de6:	9506      	str	r5, [sp, #24]
 8010de8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010dec:	9505      	str	r5, [sp, #20]
 8010dee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010df2:	9504      	str	r5, [sp, #16]
 8010df4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010df8:	9503      	str	r5, [sp, #12]
 8010dfa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010dfe:	9502      	str	r5, [sp, #8]
 8010e00:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010e04:	e9cd 3500 	strd	r3, r5, [sp]
 8010e08:	4613      	mov	r3, r2
 8010e0a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010e0c:	2200      	movs	r2, #0
 8010e0e:	47a0      	blx	r4
 8010e10:	b00b      	add	sp, #44	; 0x2c
 8010e12:	bd30      	pop	{r4, r5, pc}

08010e14 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010e14:	4b04      	ldr	r3, [pc, #16]	; (8010e28 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010e16:	781b      	ldrb	r3, [r3, #0]
 8010e18:	b123      	cbz	r3, 8010e24 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010e1a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010e1e:	f080 0001 	eor.w	r0, r0, #1
 8010e22:	4770      	bx	lr
 8010e24:	2001      	movs	r0, #1
 8010e26:	4770      	bx	lr
 8010e28:	20012da2 	.word	0x20012da2

08010e2c <_ZN8touchgfx3HAL8endFrameEv>:
 8010e2c:	b510      	push	{r4, lr}
 8010e2e:	4604      	mov	r4, r0
 8010e30:	6840      	ldr	r0, [r0, #4]
 8010e32:	6803      	ldr	r3, [r0, #0]
 8010e34:	689b      	ldr	r3, [r3, #8]
 8010e36:	4798      	blx	r3
 8010e38:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010e3c:	b113      	cbz	r3, 8010e44 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010e3e:	2301      	movs	r3, #1
 8010e40:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010e44:	bd10      	pop	{r4, pc}

08010e46 <_ZN8touchgfx3HAL10initializeEv>:
 8010e46:	b510      	push	{r4, lr}
 8010e48:	4604      	mov	r4, r0
 8010e4a:	f7f1 fd25 	bl	8002898 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010e4e:	f7f1 fc31 	bl	80026b4 <_ZN8touchgfx4GPIO4initEv>
 8010e52:	6860      	ldr	r0, [r4, #4]
 8010e54:	6803      	ldr	r3, [r0, #0]
 8010e56:	68db      	ldr	r3, [r3, #12]
 8010e58:	4798      	blx	r3
 8010e5a:	68e0      	ldr	r0, [r4, #12]
 8010e5c:	6803      	ldr	r3, [r0, #0]
 8010e5e:	689b      	ldr	r3, [r3, #8]
 8010e60:	4798      	blx	r3
 8010e62:	6823      	ldr	r3, [r4, #0]
 8010e64:	4620      	mov	r0, r4
 8010e66:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010e68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e6c:	4718      	bx	r3
	...

08010e70 <_ZN8touchgfx3HAL4tickEv>:
 8010e70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010e72:	6803      	ldr	r3, [r0, #0]
 8010e74:	4d5b      	ldr	r5, [pc, #364]	; (8010fe4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010e76:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010e7a:	4604      	mov	r4, r0
 8010e7c:	4798      	blx	r3
 8010e7e:	2800      	cmp	r0, #0
 8010e80:	f000 8095 	beq.w	8010fae <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010e84:	2001      	movs	r0, #1
 8010e86:	f7f1 fbc7 	bl	8002618 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010e8a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010e8e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010e92:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010e96:	2600      	movs	r6, #0
 8010e98:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010e9c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010ea0:	b133      	cbz	r3, 8010eb0 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010ea2:	6823      	ldr	r3, [r4, #0]
 8010ea4:	4620      	mov	r0, r4
 8010ea6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010eaa:	4798      	blx	r3
 8010eac:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010eb0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010eb4:	6862      	ldr	r2, [r4, #4]
 8010eb6:	f083 0301 	eor.w	r3, r3, #1
 8010eba:	7253      	strb	r3, [r2, #9]
 8010ebc:	2601      	movs	r6, #1
 8010ebe:	702e      	strb	r6, [r5, #0]
 8010ec0:	f004 ff6e 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 8010ec4:	6803      	ldr	r3, [r0, #0]
 8010ec6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010ec8:	4798      	blx	r3
 8010eca:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010ece:	b90b      	cbnz	r3, 8010ed4 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010ed0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010ed4:	f004 ff64 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 8010ed8:	6803      	ldr	r3, [r0, #0]
 8010eda:	695b      	ldr	r3, [r3, #20]
 8010edc:	4798      	blx	r3
 8010ede:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010ee0:	6803      	ldr	r3, [r0, #0]
 8010ee2:	691b      	ldr	r3, [r3, #16]
 8010ee4:	4798      	blx	r3
 8010ee6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010eea:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010eee:	3b01      	subs	r3, #1
 8010ef0:	b2db      	uxtb	r3, r3
 8010ef2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010ef6:	b10a      	cbz	r2, 8010efc <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010ef8:	2b00      	cmp	r3, #0
 8010efa:	d1eb      	bne.n	8010ed4 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010efc:	4a3a      	ldr	r2, [pc, #232]	; (8010fe8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010efe:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010f02:	7813      	ldrb	r3, [r2, #0]
 8010f04:	3301      	adds	r3, #1
 8010f06:	b25b      	sxtb	r3, r3
 8010f08:	4299      	cmp	r1, r3
 8010f0a:	7013      	strb	r3, [r2, #0]
 8010f0c:	dc10      	bgt.n	8010f30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010f0e:	68e0      	ldr	r0, [r4, #12]
 8010f10:	2300      	movs	r3, #0
 8010f12:	7013      	strb	r3, [r2, #0]
 8010f14:	6803      	ldr	r3, [r0, #0]
 8010f16:	aa03      	add	r2, sp, #12
 8010f18:	68db      	ldr	r3, [r3, #12]
 8010f1a:	a902      	add	r1, sp, #8
 8010f1c:	4798      	blx	r3
 8010f1e:	6823      	ldr	r3, [r4, #0]
 8010f20:	2800      	cmp	r0, #0
 8010f22:	d050      	beq.n	8010fc6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010f24:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010f28:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010f2c:	4620      	mov	r0, r4
 8010f2e:	4798      	blx	r3
 8010f30:	6960      	ldr	r0, [r4, #20]
 8010f32:	2300      	movs	r3, #0
 8010f34:	f88d 3007 	strb.w	r3, [sp, #7]
 8010f38:	b158      	cbz	r0, 8010f52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010f3a:	6803      	ldr	r3, [r0, #0]
 8010f3c:	f10d 0107 	add.w	r1, sp, #7
 8010f40:	68db      	ldr	r3, [r3, #12]
 8010f42:	4798      	blx	r3
 8010f44:	b128      	cbz	r0, 8010f52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010f46:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010f48:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010f4c:	6803      	ldr	r3, [r0, #0]
 8010f4e:	68db      	ldr	r3, [r3, #12]
 8010f50:	4798      	blx	r3
 8010f52:	f104 001c 	add.w	r0, r4, #28
 8010f56:	f015 feb9 	bl	8026ccc <_ZN8touchgfx8Gestures4tickEv>
 8010f5a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010f5e:	b30b      	cbz	r3, 8010fa4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010f60:	6920      	ldr	r0, [r4, #16]
 8010f62:	6803      	ldr	r3, [r0, #0]
 8010f64:	691b      	ldr	r3, [r3, #16]
 8010f66:	4798      	blx	r3
 8010f68:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010f6a:	4606      	mov	r6, r0
 8010f6c:	b903      	cbnz	r3, 8010f70 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010f6e:	6760      	str	r0, [r4, #116]	; 0x74
 8010f70:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010f72:	4a1e      	ldr	r2, [pc, #120]	; (8010fec <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010f74:	1af3      	subs	r3, r6, r3
 8010f76:	4293      	cmp	r3, r2
 8010f78:	d914      	bls.n	8010fa4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010f7a:	6920      	ldr	r0, [r4, #16]
 8010f7c:	6803      	ldr	r3, [r0, #0]
 8010f7e:	699b      	ldr	r3, [r3, #24]
 8010f80:	4798      	blx	r3
 8010f82:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010f84:	2264      	movs	r2, #100	; 0x64
 8010f86:	1af3      	subs	r3, r6, r3
 8010f88:	fbb3 f3f2 	udiv	r3, r3, r2
 8010f8c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010f90:	2800      	cmp	r0, #0
 8010f92:	dc1d      	bgt.n	8010fd0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010f94:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010f98:	6920      	ldr	r0, [r4, #16]
 8010f9a:	6803      	ldr	r3, [r0, #0]
 8010f9c:	2100      	movs	r1, #0
 8010f9e:	69db      	ldr	r3, [r3, #28]
 8010fa0:	4798      	blx	r3
 8010fa2:	6766      	str	r6, [r4, #116]	; 0x74
 8010fa4:	f004 fefc 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 8010fa8:	6803      	ldr	r3, [r0, #0]
 8010faa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010fac:	4798      	blx	r3
 8010fae:	6823      	ldr	r3, [r4, #0]
 8010fb0:	4620      	mov	r0, r4
 8010fb2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010fb6:	4798      	blx	r3
 8010fb8:	2001      	movs	r0, #1
 8010fba:	f7f1 fb45 	bl	8002648 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010fbe:	2300      	movs	r3, #0
 8010fc0:	702b      	strb	r3, [r5, #0]
 8010fc2:	b004      	add	sp, #16
 8010fc4:	bd70      	pop	{r4, r5, r6, pc}
 8010fc6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010fca:	4620      	mov	r0, r4
 8010fcc:	4798      	blx	r3
 8010fce:	e7af      	b.n	8010f30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010fd0:	2863      	cmp	r0, #99	; 0x63
 8010fd2:	bfcb      	itete	gt
 8010fd4:	2300      	movgt	r3, #0
 8010fd6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010fda:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010fde:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010fe2:	e7d9      	b.n	8010f98 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010fe4:	20012da8 	.word	0x20012da8
 8010fe8:	20012da9 	.word	0x20012da9
 8010fec:	05f5e100 	.word	0x05f5e100

08010ff0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010ff0:	b510      	push	{r4, lr}
 8010ff2:	4604      	mov	r4, r0
 8010ff4:	f7f1 fc80 	bl	80028f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010ff8:	6863      	ldr	r3, [r4, #4]
 8010ffa:	2200      	movs	r2, #0
 8010ffc:	729a      	strb	r2, [r3, #10]
 8010ffe:	bd10      	pop	{r4, pc}

08011000 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011000:	65c1      	str	r1, [r0, #92]	; 0x5c
 8011002:	301c      	adds	r0, #28
 8011004:	f015 be60 	b.w	8026cc8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011008 <_ZN8touchgfx3HAL5touchEll>:
 8011008:	b530      	push	{r4, r5, lr}
 801100a:	b087      	sub	sp, #28
 801100c:	4604      	mov	r4, r0
 801100e:	a804      	add	r0, sp, #16
 8011010:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011014:	f004 fc90 	bl	8015938 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011018:	9b04      	ldr	r3, [sp, #16]
 801101a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801101e:	a906      	add	r1, sp, #24
 8011020:	9b05      	ldr	r3, [sp, #20]
 8011022:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011026:	a803      	add	r0, sp, #12
 8011028:	f004 fcd8 	bl	80159dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801102c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011030:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011034:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011038:	f104 001c 	add.w	r0, r4, #28
 801103c:	b189      	cbz	r1, 8011062 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801103e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8011042:	9300      	str	r3, [sp, #0]
 8011044:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011048:	4613      	mov	r3, r2
 801104a:	462a      	mov	r2, r5
 801104c:	f015 fe4c 	bl	8026ce8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011050:	b128      	cbz	r0, 801105e <_ZN8touchgfx3HAL5touchEll+0x56>
 8011052:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011056:	6623      	str	r3, [r4, #96]	; 0x60
 8011058:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801105c:	6663      	str	r3, [r4, #100]	; 0x64
 801105e:	b007      	add	sp, #28
 8011060:	bd30      	pop	{r4, r5, pc}
 8011062:	f015 fe81 	bl	8026d68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011066:	2301      	movs	r3, #1
 8011068:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801106c:	e7f1      	b.n	8011052 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801106e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801106e:	b510      	push	{r4, lr}
 8011070:	2b00      	cmp	r3, #0
 8011072:	d046      	beq.n	8011102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011074:	ea81 0002 	eor.w	r0, r1, r2
 8011078:	07c4      	lsls	r4, r0, #31
 801107a:	d508      	bpl.n	801108e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801107c:	440b      	add	r3, r1
 801107e:	3a01      	subs	r2, #1
 8011080:	428b      	cmp	r3, r1
 8011082:	d93e      	bls.n	8011102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011084:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011088:	f801 0b01 	strb.w	r0, [r1], #1
 801108c:	e7f8      	b.n	8011080 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801108e:	07d0      	lsls	r0, r2, #31
 8011090:	bf42      	ittt	mi
 8011092:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011096:	f801 0b01 	strbmi.w	r0, [r1], #1
 801109a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801109e:	2b01      	cmp	r3, #1
 80110a0:	d911      	bls.n	80110c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80110a2:	ea81 0402 	eor.w	r4, r1, r2
 80110a6:	07a4      	lsls	r4, r4, #30
 80110a8:	4610      	mov	r0, r2
 80110aa:	d022      	beq.n	80110f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80110ac:	f023 0401 	bic.w	r4, r3, #1
 80110b0:	440c      	add	r4, r1
 80110b2:	428c      	cmp	r4, r1
 80110b4:	4602      	mov	r2, r0
 80110b6:	d904      	bls.n	80110c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80110b8:	8812      	ldrh	r2, [r2, #0]
 80110ba:	f821 2b02 	strh.w	r2, [r1], #2
 80110be:	3002      	adds	r0, #2
 80110c0:	e7f7      	b.n	80110b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80110c2:	f003 0301 	and.w	r3, r3, #1
 80110c6:	f023 0003 	bic.w	r0, r3, #3
 80110ca:	4408      	add	r0, r1
 80110cc:	4288      	cmp	r0, r1
 80110ce:	4614      	mov	r4, r2
 80110d0:	d904      	bls.n	80110dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80110d2:	6824      	ldr	r4, [r4, #0]
 80110d4:	f841 4b04 	str.w	r4, [r1], #4
 80110d8:	3204      	adds	r2, #4
 80110da:	e7f7      	b.n	80110cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80110dc:	f003 0303 	and.w	r3, r3, #3
 80110e0:	440b      	add	r3, r1
 80110e2:	3a01      	subs	r2, #1
 80110e4:	428b      	cmp	r3, r1
 80110e6:	d90c      	bls.n	8011102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80110e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80110ec:	f801 0b01 	strb.w	r0, [r1], #1
 80110f0:	e7f8      	b.n	80110e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80110f2:	0790      	lsls	r0, r2, #30
 80110f4:	d0e7      	beq.n	80110c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80110f6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80110fa:	f821 0b02 	strh.w	r0, [r1], #2
 80110fe:	3b02      	subs	r3, #2
 8011100:	e7e1      	b.n	80110c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011102:	2001      	movs	r0, #1
 8011104:	bd10      	pop	{r4, pc}

08011106 <_ZN8touchgfx3HAL7noTouchEv>:
 8011106:	b510      	push	{r4, lr}
 8011108:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801110c:	4604      	mov	r4, r0
 801110e:	b153      	cbz	r3, 8011126 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011110:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011114:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011118:	2101      	movs	r1, #1
 801111a:	301c      	adds	r0, #28
 801111c:	f015 fe24 	bl	8026d68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011120:	2300      	movs	r3, #0
 8011122:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011126:	bd10      	pop	{r4, pc}

08011128 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011128:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801112c:	b085      	sub	sp, #20
 801112e:	ad04      	add	r5, sp, #16
 8011130:	4604      	mov	r4, r0
 8011132:	2000      	movs	r0, #0
 8011134:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011138:	69a0      	ldr	r0, [r4, #24]
 801113a:	6806      	ldr	r6, [r0, #0]
 801113c:	9501      	str	r5, [sp, #4]
 801113e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011142:	9500      	str	r5, [sp, #0]
 8011144:	6835      	ldr	r5, [r6, #0]
 8011146:	4699      	mov	r9, r3
 8011148:	460f      	mov	r7, r1
 801114a:	4690      	mov	r8, r2
 801114c:	47a8      	blx	r5
 801114e:	4d10      	ldr	r5, [pc, #64]	; (8011190 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011150:	4606      	mov	r6, r0
 8011152:	f8a5 9000 	strh.w	r9, [r5]
 8011156:	f7f3 fbd5 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 801115a:	6803      	ldr	r3, [r0, #0]
 801115c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801115e:	4798      	blx	r3
 8011160:	b128      	cbz	r0, 801116e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011162:	2801      	cmp	r0, #1
 8011164:	d00b      	beq.n	801117e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011166:	4630      	mov	r0, r6
 8011168:	b005      	add	sp, #20
 801116a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801116e:	882b      	ldrh	r3, [r5, #0]
 8011170:	fb08 7203 	mla	r2, r8, r3, r7
 8011174:	9b03      	ldr	r3, [sp, #12]
 8011176:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801117a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801117c:	e7f3      	b.n	8011166 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801117e:	882a      	ldrh	r2, [r5, #0]
 8011180:	9b03      	ldr	r3, [sp, #12]
 8011182:	fb08 7202 	mla	r2, r8, r2, r7
 8011186:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801118a:	1a9a      	subs	r2, r3, r2
 801118c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801118e:	e7ea      	b.n	8011166 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011190:	20012d9e 	.word	0x20012d9e

08011194 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011194:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011196:	b08b      	sub	sp, #44	; 0x2c
 8011198:	4617      	mov	r7, r2
 801119a:	4604      	mov	r4, r0
 801119c:	460e      	mov	r6, r1
 801119e:	461d      	mov	r5, r3
 80111a0:	f7f3 fbb0 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 80111a4:	6803      	ldr	r3, [r0, #0]
 80111a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111a8:	4798      	blx	r3
 80111aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80111ae:	9007      	str	r0, [sp, #28]
 80111b0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80111b4:	4b0d      	ldr	r3, [pc, #52]	; (80111ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80111b6:	6822      	ldr	r2, [r4, #0]
 80111b8:	881b      	ldrh	r3, [r3, #0]
 80111ba:	9306      	str	r3, [sp, #24]
 80111bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80111c0:	9305      	str	r3, [sp, #20]
 80111c2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80111c6:	9304      	str	r3, [sp, #16]
 80111c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80111cc:	9303      	str	r3, [sp, #12]
 80111ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80111d2:	9302      	str	r3, [sp, #8]
 80111d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80111d8:	e9cd 5300 	strd	r5, r3, [sp]
 80111dc:	4631      	mov	r1, r6
 80111de:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80111e0:	463b      	mov	r3, r7
 80111e2:	2200      	movs	r2, #0
 80111e4:	4620      	mov	r0, r4
 80111e6:	47a8      	blx	r5
 80111e8:	b00b      	add	sp, #44	; 0x2c
 80111ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111ec:	20012d9e 	.word	0x20012d9e

080111f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80111f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111f4:	4698      	mov	r8, r3
 80111f6:	6803      	ldr	r3, [r0, #0]
 80111f8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80111fa:	4b15      	ldr	r3, [pc, #84]	; (8011250 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80111fc:	b08b      	sub	sp, #44	; 0x2c
 80111fe:	4617      	mov	r7, r2
 8011200:	f8b3 9000 	ldrh.w	r9, [r3]
 8011204:	460e      	mov	r6, r1
 8011206:	4604      	mov	r4, r0
 8011208:	f7f3 fb7c 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 801120c:	6803      	ldr	r3, [r0, #0]
 801120e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011210:	4798      	blx	r3
 8011212:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011216:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801121a:	2302      	movs	r3, #2
 801121c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011220:	2301      	movs	r3, #1
 8011222:	9305      	str	r3, [sp, #20]
 8011224:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011228:	9304      	str	r3, [sp, #16]
 801122a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801122e:	9303      	str	r3, [sp, #12]
 8011230:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011234:	9302      	str	r3, [sp, #8]
 8011236:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801123a:	2200      	movs	r2, #0
 801123c:	e9cd 8300 	strd	r8, r3, [sp]
 8011240:	4631      	mov	r1, r6
 8011242:	463b      	mov	r3, r7
 8011244:	4620      	mov	r0, r4
 8011246:	47a8      	blx	r5
 8011248:	b00b      	add	sp, #44	; 0x2c
 801124a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801124e:	bf00      	nop
 8011250:	20012d9e 	.word	0x20012d9e

08011254 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011254:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011258:	4698      	mov	r8, r3
 801125a:	6803      	ldr	r3, [r0, #0]
 801125c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801125e:	4b11      	ldr	r3, [pc, #68]	; (80112a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011260:	b087      	sub	sp, #28
 8011262:	f8b3 9000 	ldrh.w	r9, [r3]
 8011266:	460e      	mov	r6, r1
 8011268:	4617      	mov	r7, r2
 801126a:	4604      	mov	r4, r0
 801126c:	f7f3 fb4a 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 8011270:	6803      	ldr	r3, [r0, #0]
 8011272:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011274:	4798      	blx	r3
 8011276:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801127a:	f8cd 900c 	str.w	r9, [sp, #12]
 801127e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011282:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011286:	9302      	str	r3, [sp, #8]
 8011288:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801128c:	9301      	str	r3, [sp, #4]
 801128e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011292:	9300      	str	r3, [sp, #0]
 8011294:	463a      	mov	r2, r7
 8011296:	4643      	mov	r3, r8
 8011298:	4631      	mov	r1, r6
 801129a:	4620      	mov	r0, r4
 801129c:	47a8      	blx	r5
 801129e:	b007      	add	sp, #28
 80112a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112a4:	20012d9e 	.word	0x20012d9e

080112a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80112a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112ac:	4604      	mov	r4, r0
 80112ae:	b08f      	sub	sp, #60	; 0x3c
 80112b0:	4610      	mov	r0, r2
 80112b2:	460d      	mov	r5, r1
 80112b4:	4691      	mov	r9, r2
 80112b6:	461e      	mov	r6, r3
 80112b8:	f008 f8f0 	bl	801949c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80112bc:	2800      	cmp	r0, #0
 80112be:	f000 809d 	beq.w	80113fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80112c2:	6823      	ldr	r3, [r4, #0]
 80112c4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011460 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80112c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80112ca:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011464 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80112ce:	4f61      	ldr	r7, [pc, #388]	; (8011454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80112d0:	4620      	mov	r0, r4
 80112d2:	4798      	blx	r3
 80112d4:	6823      	ldr	r3, [r4, #0]
 80112d6:	4620      	mov	r0, r4
 80112d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112da:	4798      	blx	r3
 80112dc:	f8bb 3000 	ldrh.w	r3, [fp]
 80112e0:	9301      	str	r3, [sp, #4]
 80112e2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80112e6:	f8ba 3000 	ldrh.w	r3, [sl]
 80112ea:	9302      	str	r3, [sp, #8]
 80112ec:	883b      	ldrh	r3, [r7, #0]
 80112ee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80112f2:	9303      	str	r3, [sp, #12]
 80112f4:	4b58      	ldr	r3, [pc, #352]	; (8011458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80112f6:	9305      	str	r3, [sp, #20]
 80112f8:	881a      	ldrh	r2, [r3, #0]
 80112fa:	9204      	str	r2, [sp, #16]
 80112fc:	4640      	mov	r0, r8
 80112fe:	f008 f961 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011302:	8038      	strh	r0, [r7, #0]
 8011304:	4640      	mov	r0, r8
 8011306:	f008 f991 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801130a:	9b05      	ldr	r3, [sp, #20]
 801130c:	b280      	uxth	r0, r0
 801130e:	8018      	strh	r0, [r3, #0]
 8011310:	4b52      	ldr	r3, [pc, #328]	; (801145c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011312:	781b      	ldrb	r3, [r3, #0]
 8011314:	2b00      	cmp	r3, #0
 8011316:	d174      	bne.n	8011402 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011318:	883b      	ldrh	r3, [r7, #0]
 801131a:	f8ab 3000 	strh.w	r3, [fp]
 801131e:	f8aa 0000 	strh.w	r0, [sl]
 8011322:	4648      	mov	r0, r9
 8011324:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011328:	f008 f8b8 	bl	801949c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801132c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011330:	2200      	movs	r2, #0
 8011332:	4611      	mov	r1, r2
 8011334:	4628      	mov	r0, r5
 8011336:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801133a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801133e:	f7f1 ff56 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8011342:	2301      	movs	r3, #1
 8011344:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011348:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801134c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011350:	2b00      	cmp	r3, #0
 8011352:	dd5c      	ble.n	801140e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011354:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011358:	2b00      	cmp	r3, #0
 801135a:	dd58      	ble.n	801140e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801135c:	462a      	mov	r2, r5
 801135e:	ab0a      	add	r3, sp, #40	; 0x28
 8011360:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011364:	6851      	ldr	r1, [r2, #4]
 8011366:	c303      	stmia	r3!, {r0, r1}
 8011368:	4631      	mov	r1, r6
 801136a:	a80a      	add	r0, sp, #40	; 0x28
 801136c:	f7ff fc06 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8011370:	4b38      	ldr	r3, [pc, #224]	; (8011454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011372:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011376:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801137a:	2100      	movs	r1, #0
 801137c:	aa0a      	add	r2, sp, #40	; 0x28
 801137e:	4b36      	ldr	r3, [pc, #216]	; (8011458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011380:	910c      	str	r1, [sp, #48]	; 0x30
 8011382:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011386:	f9b3 3000 	ldrsh.w	r3, [r3]
 801138a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801138e:	ab08      	add	r3, sp, #32
 8011390:	e883 0003 	stmia.w	r3, {r0, r1}
 8011394:	4618      	mov	r0, r3
 8011396:	a90c      	add	r1, sp, #48	; 0x30
 8011398:	f7ff fbf0 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 801139c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801139e:	2b00      	cmp	r3, #0
 80113a0:	d13c      	bne.n	801141c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80113a2:	2000      	movs	r0, #0
 80113a4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80113a8:	2600      	movs	r6, #0
 80113aa:	682a      	ldr	r2, [r5, #0]
 80113ac:	696b      	ldr	r3, [r5, #20]
 80113ae:	616e      	str	r6, [r5, #20]
 80113b0:	9305      	str	r3, [sp, #20]
 80113b2:	6892      	ldr	r2, [r2, #8]
 80113b4:	a908      	add	r1, sp, #32
 80113b6:	4628      	mov	r0, r5
 80113b8:	4790      	blx	r2
 80113ba:	9b05      	ldr	r3, [sp, #20]
 80113bc:	616b      	str	r3, [r5, #20]
 80113be:	4652      	mov	r2, sl
 80113c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80113c4:	4649      	mov	r1, r9
 80113c6:	4628      	mov	r0, r5
 80113c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80113cc:	f7f1 ff0f 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 80113d0:	4b23      	ldr	r3, [pc, #140]	; (8011460 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80113d2:	9a01      	ldr	r2, [sp, #4]
 80113d4:	801a      	strh	r2, [r3, #0]
 80113d6:	4b23      	ldr	r3, [pc, #140]	; (8011464 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80113d8:	9a02      	ldr	r2, [sp, #8]
 80113da:	801a      	strh	r2, [r3, #0]
 80113dc:	4b1d      	ldr	r3, [pc, #116]	; (8011454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80113de:	9a03      	ldr	r2, [sp, #12]
 80113e0:	801a      	strh	r2, [r3, #0]
 80113e2:	4b1d      	ldr	r3, [pc, #116]	; (8011458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80113e4:	9a04      	ldr	r2, [sp, #16]
 80113e6:	801a      	strh	r2, [r3, #0]
 80113e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80113ec:	6823      	ldr	r3, [r4, #0]
 80113ee:	4620      	mov	r0, r4
 80113f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80113f2:	4798      	blx	r3
 80113f4:	6823      	ldr	r3, [r4, #0]
 80113f6:	4620      	mov	r0, r4
 80113f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113fa:	4798      	blx	r3
 80113fc:	b00f      	add	sp, #60	; 0x3c
 80113fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011402:	883b      	ldrh	r3, [r7, #0]
 8011404:	f8ab 0000 	strh.w	r0, [fp]
 8011408:	f8aa 3000 	strh.w	r3, [sl]
 801140c:	e789      	b.n	8011322 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801140e:	462a      	mov	r2, r5
 8011410:	ab0a      	add	r3, sp, #40	; 0x28
 8011412:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011416:	6851      	ldr	r1, [r2, #4]
 8011418:	c303      	stmia	r3!, {r0, r1}
 801141a:	e7a9      	b.n	8011370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801141c:	a807      	add	r0, sp, #28
 801141e:	f008 fa41 	bl	80198a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011422:	4606      	mov	r6, r0
 8011424:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011426:	6803      	ldr	r3, [r0, #0]
 8011428:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801142a:	4798      	blx	r3
 801142c:	4286      	cmp	r6, r0
 801142e:	d1b8      	bne.n	80113a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011430:	f7f3 fa68 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 8011434:	6803      	ldr	r3, [r0, #0]
 8011436:	4606      	mov	r6, r0
 8011438:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801143a:	9305      	str	r3, [sp, #20]
 801143c:	a807      	add	r0, sp, #28
 801143e:	f008 fa31 	bl	80198a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011442:	9b05      	ldr	r3, [sp, #20]
 8011444:	4601      	mov	r1, r0
 8011446:	4630      	mov	r0, r6
 8011448:	4798      	blx	r3
 801144a:	f080 0001 	eor.w	r0, r0, #1
 801144e:	b2c0      	uxtb	r0, r0
 8011450:	e7a8      	b.n	80113a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011452:	bf00      	nop
 8011454:	20012d98 	.word	0x20012d98
 8011458:	20012d9a 	.word	0x20012d9a
 801145c:	20012d9c 	.word	0x20012d9c
 8011460:	20012d9e 	.word	0x20012d9e
 8011464:	20012da0 	.word	0x20012da0

08011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011468:	b510      	push	{r4, lr}
 801146a:	4b07      	ldr	r3, [pc, #28]	; (8011488 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801146c:	781b      	ldrb	r3, [r3, #0]
 801146e:	4604      	mov	r4, r0
 8011470:	b13b      	cbz	r3, 8011482 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011472:	6803      	ldr	r3, [r0, #0]
 8011474:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011476:	4798      	blx	r3
 8011478:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801147a:	4283      	cmp	r3, r0
 801147c:	d101      	bne.n	8011482 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801147e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011480:	bd10      	pop	{r4, pc}
 8011482:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011484:	e7fc      	b.n	8011480 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011486:	bf00      	nop
 8011488:	20012da2 	.word	0x20012da2

0801148c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801148c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011490:	b08a      	sub	sp, #40	; 0x28
 8011492:	461d      	mov	r5, r3
 8011494:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011498:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801149c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80114a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80114a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114ac:	2400      	movs	r4, #0
 80114ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80114b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80114b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114ba:	4690      	mov	r8, r2
 80114bc:	4607      	mov	r7, r0
 80114be:	9404      	str	r4, [sp, #16]
 80114c0:	f88d 4020 	strb.w	r4, [sp, #32]
 80114c4:	f7ff ffd0 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114c8:	fb06 8505 	mla	r5, r6, r5, r8
 80114cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80114d0:	6878      	ldr	r0, [r7, #4]
 80114d2:	9505      	str	r5, [sp, #20]
 80114d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80114d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80114dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80114e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80114e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80114e8:	6803      	ldr	r3, [r0, #0]
 80114ea:	a901      	add	r1, sp, #4
 80114ec:	685b      	ldr	r3, [r3, #4]
 80114ee:	4798      	blx	r3
 80114f0:	b00a      	add	sp, #40	; 0x28
 80114f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080114f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80114f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80114fa:	b08b      	sub	sp, #44	; 0x2c
 80114fc:	2400      	movs	r4, #0
 80114fe:	461d      	mov	r5, r3
 8011500:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011504:	4688      	mov	r8, r1
 8011506:	4691      	mov	r9, r2
 8011508:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801150c:	9404      	str	r4, [sp, #16]
 801150e:	4607      	mov	r7, r0
 8011510:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011514:	f7ff ffa8 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011518:	fb06 9505 	mla	r5, r6, r5, r9
 801151c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011520:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011524:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011528:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801152c:	6878      	ldr	r0, [r7, #4]
 801152e:	9505      	str	r5, [sp, #20]
 8011530:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011534:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011538:	f8ad 601e 	strh.w	r6, [sp, #30]
 801153c:	f8cd 8010 	str.w	r8, [sp, #16]
 8011540:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011544:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011548:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801154c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011550:	6803      	ldr	r3, [r0, #0]
 8011552:	a901      	add	r1, sp, #4
 8011554:	685b      	ldr	r3, [r3, #4]
 8011556:	4798      	blx	r3
 8011558:	b00b      	add	sp, #44	; 0x2c
 801155a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011560 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011564:	b08a      	sub	sp, #40	; 0x28
 8011566:	4698      	mov	r8, r3
 8011568:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801156c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011570:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011574:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011578:	2300      	movs	r3, #0
 801157a:	2d0b      	cmp	r5, #11
 801157c:	4606      	mov	r6, r0
 801157e:	9304      	str	r3, [sp, #16]
 8011580:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011584:	d138      	bne.n	80115f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011586:	2380      	movs	r3, #128	; 0x80
 8011588:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801158c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011590:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011594:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011598:	f8ad 301a 	strh.w	r3, [sp, #26]
 801159c:	f88d 0020 	strb.w	r0, [sp, #32]
 80115a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80115a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115a8:	4630      	mov	r0, r6
 80115aa:	9203      	str	r2, [sp, #12]
 80115ac:	f7ff ff5c 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80115b0:	2c0b      	cmp	r4, #11
 80115b2:	bf98      	it	ls
 80115b4:	4b1b      	ldrls	r3, [pc, #108]	; (8011624 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80115b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80115ba:	bf98      	it	ls
 80115bc:	5d19      	ldrbls	r1, [r3, r4]
 80115be:	f8ad 701e 	strh.w	r7, [sp, #30]
 80115c2:	bf88      	it	hi
 80115c4:	2100      	movhi	r1, #0
 80115c6:	fb02 8307 	mla	r3, r2, r7, r8
 80115ca:	10c9      	asrs	r1, r1, #3
 80115cc:	fb01 0003 	mla	r0, r1, r3, r0
 80115d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80115d4:	9005      	str	r0, [sp, #20]
 80115d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80115da:	6870      	ldr	r0, [r6, #4]
 80115dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80115e0:	2300      	movs	r3, #0
 80115e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80115e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80115ea:	6803      	ldr	r3, [r0, #0]
 80115ec:	a901      	add	r1, sp, #4
 80115ee:	685b      	ldr	r3, [r3, #4]
 80115f0:	4798      	blx	r3
 80115f2:	b00a      	add	sp, #40	; 0x28
 80115f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115f8:	2d02      	cmp	r5, #2
 80115fa:	d109      	bne.n	8011610 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80115fc:	28ff      	cmp	r0, #255	; 0xff
 80115fe:	d105      	bne.n	801160c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011600:	f1bc 0f00 	cmp.w	ip, #0
 8011604:	bf14      	ite	ne
 8011606:	2340      	movne	r3, #64	; 0x40
 8011608:	2320      	moveq	r3, #32
 801160a:	e7bd      	b.n	8011588 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801160c:	2340      	movs	r3, #64	; 0x40
 801160e:	e7bb      	b.n	8011588 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011610:	28ff      	cmp	r0, #255	; 0xff
 8011612:	d105      	bne.n	8011620 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011614:	f1bc 0f00 	cmp.w	ip, #0
 8011618:	bf14      	ite	ne
 801161a:	2304      	movne	r3, #4
 801161c:	2301      	moveq	r3, #1
 801161e:	e7b3      	b.n	8011588 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011620:	2304      	movs	r3, #4
 8011622:	e7b1      	b.n	8011588 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011624:	0802ef14 	.word	0x0802ef14

08011628 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801162c:	b08b      	sub	sp, #44	; 0x2c
 801162e:	461d      	mov	r5, r3
 8011630:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011634:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011638:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801163c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011640:	bf14      	ite	ne
 8011642:	2308      	movne	r3, #8
 8011644:	2302      	moveq	r3, #2
 8011646:	2400      	movs	r4, #0
 8011648:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801164c:	4688      	mov	r8, r1
 801164e:	4693      	mov	fp, r2
 8011650:	9404      	str	r4, [sp, #16]
 8011652:	4607      	mov	r7, r0
 8011654:	f7ff ff08 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011658:	2e0b      	cmp	r6, #11
 801165a:	bf98      	it	ls
 801165c:	4b15      	ldrls	r3, [pc, #84]	; (80116b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801165e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011662:	bf98      	it	ls
 8011664:	5d9c      	ldrbls	r4, [r3, r6]
 8011666:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801166a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801166e:	fb05 b50a 	mla	r5, r5, sl, fp
 8011672:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011676:	f8ad 301a 	strh.w	r3, [sp, #26]
 801167a:	10e4      	asrs	r4, r4, #3
 801167c:	fb04 0405 	mla	r4, r4, r5, r0
 8011680:	2300      	movs	r3, #0
 8011682:	6878      	ldr	r0, [r7, #4]
 8011684:	9405      	str	r4, [sp, #20]
 8011686:	f8ad 301c 	strh.w	r3, [sp, #28]
 801168a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801168e:	f8cd 8010 	str.w	r8, [sp, #16]
 8011692:	f88d 9020 	strb.w	r9, [sp, #32]
 8011696:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801169a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801169e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80116a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80116a6:	6803      	ldr	r3, [r0, #0]
 80116a8:	a901      	add	r1, sp, #4
 80116aa:	685b      	ldr	r3, [r3, #4]
 80116ac:	4798      	blx	r3
 80116ae:	b00b      	add	sp, #44	; 0x2c
 80116b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116b4:	0802ef14 	.word	0x0802ef14

080116b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80116b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116bc:	461e      	mov	r6, r3
 80116be:	4b0a      	ldr	r3, [pc, #40]	; (80116e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80116c0:	460f      	mov	r7, r1
 80116c2:	881d      	ldrh	r5, [r3, #0]
 80116c4:	4690      	mov	r8, r2
 80116c6:	f7f3 f91d 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 80116ca:	6803      	ldr	r3, [r0, #0]
 80116cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116ce:	4798      	blx	r3
 80116d0:	280b      	cmp	r0, #11
 80116d2:	bf9a      	itte	ls
 80116d4:	4b05      	ldrls	r3, [pc, #20]	; (80116ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80116d6:	5c1c      	ldrbls	r4, [r3, r0]
 80116d8:	2400      	movhi	r4, #0
 80116da:	fb08 7005 	mla	r0, r8, r5, r7
 80116de:	10e4      	asrs	r4, r4, #3
 80116e0:	fb04 6000 	mla	r0, r4, r0, r6
 80116e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80116e8:	20012d9e 	.word	0x20012d9e
 80116ec:	0802ef14 	.word	0x0802ef14

080116f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80116f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80116f2:	b08b      	sub	sp, #44	; 0x2c
 80116f4:	461f      	mov	r7, r3
 80116f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80116fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80116fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011702:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011706:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801170a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801170e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011712:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011716:	2500      	movs	r5, #0
 8011718:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801171c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011720:	4604      	mov	r4, r0
 8011722:	4616      	mov	r6, r2
 8011724:	9504      	str	r5, [sp, #16]
 8011726:	f7ff fe9f 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801172a:	463a      	mov	r2, r7
 801172c:	4631      	mov	r1, r6
 801172e:	4603      	mov	r3, r0
 8011730:	4620      	mov	r0, r4
 8011732:	f7ff ffc1 	bl	80116b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011736:	4b0e      	ldr	r3, [pc, #56]	; (8011770 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011738:	9005      	str	r0, [sp, #20]
 801173a:	881b      	ldrh	r3, [r3, #0]
 801173c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011740:	f7f3 f8e0 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 8011744:	6803      	ldr	r3, [r0, #0]
 8011746:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011748:	4798      	blx	r3
 801174a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801174c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011750:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011754:	9304      	str	r3, [sp, #16]
 8011756:	6860      	ldr	r0, [r4, #4]
 8011758:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801175c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011760:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011764:	6803      	ldr	r3, [r0, #0]
 8011766:	a901      	add	r1, sp, #4
 8011768:	685b      	ldr	r3, [r3, #4]
 801176a:	4798      	blx	r3
 801176c:	b00b      	add	sp, #44	; 0x2c
 801176e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011770:	20012d9e 	.word	0x20012d9e

08011774 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011774:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011776:	b08d      	sub	sp, #52	; 0x34
 8011778:	466b      	mov	r3, sp
 801177a:	e883 0006 	stmia.w	r3, {r1, r2}
 801177e:	2300      	movs	r3, #0
 8011780:	9306      	str	r3, [sp, #24]
 8011782:	6803      	ldr	r3, [r0, #0]
 8011784:	f8bd 6000 	ldrh.w	r6, [sp]
 8011788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801178a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801178e:	2501      	movs	r5, #1
 8011790:	9503      	str	r5, [sp, #12]
 8011792:	4604      	mov	r4, r0
 8011794:	4798      	blx	r3
 8011796:	463a      	mov	r2, r7
 8011798:	4631      	mov	r1, r6
 801179a:	4603      	mov	r3, r0
 801179c:	4620      	mov	r0, r4
 801179e:	f7ff ff8b 	bl	80116b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80117a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80117a4:	9307      	str	r3, [sp, #28]
 80117a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80117aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80117ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80117b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80117b6:	4b0f      	ldr	r3, [pc, #60]	; (80117f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80117b8:	9004      	str	r0, [sp, #16]
 80117ba:	881b      	ldrh	r3, [r3, #0]
 80117bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80117c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80117c4:	f7f3 f89e 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 80117c8:	6803      	ldr	r3, [r0, #0]
 80117ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117cc:	4798      	blx	r3
 80117ce:	23ff      	movs	r3, #255	; 0xff
 80117d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80117d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80117d8:	6860      	ldr	r0, [r4, #4]
 80117da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80117de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80117e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80117e6:	6803      	ldr	r3, [r0, #0]
 80117e8:	a903      	add	r1, sp, #12
 80117ea:	685b      	ldr	r3, [r3, #4]
 80117ec:	4798      	blx	r3
 80117ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80117f0:	b00d      	add	sp, #52	; 0x34
 80117f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117f4:	20012d9e 	.word	0x20012d9e

080117f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80117f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117fc:	b08c      	sub	sp, #48	; 0x30
 80117fe:	461e      	mov	r6, r3
 8011800:	466d      	mov	r5, sp
 8011802:	2300      	movs	r3, #0
 8011804:	e885 0006 	stmia.w	r5, {r1, r2}
 8011808:	9306      	str	r3, [sp, #24]
 801180a:	6803      	ldr	r3, [r0, #0]
 801180c:	f8bd 7000 	ldrh.w	r7, [sp]
 8011810:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011812:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011816:	2501      	movs	r5, #1
 8011818:	9503      	str	r5, [sp, #12]
 801181a:	4604      	mov	r4, r0
 801181c:	4798      	blx	r3
 801181e:	4642      	mov	r2, r8
 8011820:	4639      	mov	r1, r7
 8011822:	4603      	mov	r3, r0
 8011824:	4620      	mov	r0, r4
 8011826:	f7ff ff47 	bl	80116b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801182a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801182e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011832:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011836:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801183a:	4b11      	ldr	r3, [pc, #68]	; (8011880 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801183c:	9004      	str	r0, [sp, #16]
 801183e:	881b      	ldrh	r3, [r3, #0]
 8011840:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011844:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011846:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801184a:	9607      	str	r6, [sp, #28]
 801184c:	f7f3 f85a 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 8011850:	6803      	ldr	r3, [r0, #0]
 8011852:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011854:	4798      	blx	r3
 8011856:	23ff      	movs	r3, #255	; 0xff
 8011858:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801185c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011860:	6860      	ldr	r0, [r4, #4]
 8011862:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011866:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801186a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801186e:	6803      	ldr	r3, [r0, #0]
 8011870:	a903      	add	r1, sp, #12
 8011872:	685b      	ldr	r3, [r3, #4]
 8011874:	4798      	blx	r3
 8011876:	4630      	mov	r0, r6
 8011878:	b00c      	add	sp, #48	; 0x30
 801187a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801187e:	bf00      	nop
 8011880:	20012d9e 	.word	0x20012d9e

08011884 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011886:	b085      	sub	sp, #20
 8011888:	ac02      	add	r4, sp, #8
 801188a:	e884 0006 	stmia.w	r4, {r1, r2}
 801188e:	4605      	mov	r5, r0
 8011890:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011894:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011898:	f7ff fde6 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801189c:	463a      	mov	r2, r7
 801189e:	4603      	mov	r3, r0
 80118a0:	4631      	mov	r1, r6
 80118a2:	4628      	mov	r0, r5
 80118a4:	f7ff ff08 	bl	80116b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80118a8:	4a05      	ldr	r2, [pc, #20]	; (80118c0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80118aa:	682b      	ldr	r3, [r5, #0]
 80118ac:	8812      	ldrh	r2, [r2, #0]
 80118ae:	9200      	str	r2, [sp, #0]
 80118b0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80118b2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80118b6:	4603      	mov	r3, r0
 80118b8:	4628      	mov	r0, r5
 80118ba:	47b0      	blx	r6
 80118bc:	b005      	add	sp, #20
 80118be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80118c0:	20012d9e 	.word	0x20012d9e

080118c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80118c4:	b570      	push	{r4, r5, r6, lr}
 80118c6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80118ca:	4604      	mov	r4, r0
 80118cc:	b19b      	cbz	r3, 80118f6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80118ce:	2002      	movs	r0, #2
 80118d0:	f7f0 fed2 	bl	8002678 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80118d4:	2300      	movs	r3, #0
 80118d6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80118da:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80118de:	6823      	ldr	r3, [r4, #0]
 80118e0:	4620      	mov	r0, r4
 80118e2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80118e6:	f7ff fdbf 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80118ea:	462b      	mov	r3, r5
 80118ec:	4601      	mov	r1, r0
 80118ee:	4620      	mov	r0, r4
 80118f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118f4:	4718      	bx	r3
 80118f6:	bd70      	pop	{r4, r5, r6, pc}

080118f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80118f8:	b538      	push	{r3, r4, r5, lr}
 80118fa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80118fe:	428b      	cmp	r3, r1
 8011900:	4604      	mov	r4, r0
 8011902:	460d      	mov	r5, r1
 8011904:	d006      	beq.n	8011914 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011906:	6803      	ldr	r3, [r0, #0]
 8011908:	b929      	cbnz	r1, 8011916 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801190a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801190e:	4798      	blx	r3
 8011910:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011914:	bd38      	pop	{r3, r4, r5, pc}
 8011916:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801191a:	e7f8      	b.n	801190e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801191c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801191c:	b510      	push	{r4, lr}
 801191e:	4b0d      	ldr	r3, [pc, #52]	; (8011954 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011920:	781b      	ldrb	r3, [r3, #0]
 8011922:	4604      	mov	r4, r0
 8011924:	b95b      	cbnz	r3, 801193e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011926:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801192a:	2b02      	cmp	r3, #2
 801192c:	d007      	beq.n	801193e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801192e:	6840      	ldr	r0, [r0, #4]
 8011930:	f000 f92c 	bl	8011b8c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011934:	b118      	cbz	r0, 801193e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011936:	6862      	ldr	r2, [r4, #4]
 8011938:	7a53      	ldrb	r3, [r2, #9]
 801193a:	2b00      	cmp	r3, #0
 801193c:	d0fc      	beq.n	8011938 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801193e:	f7f0 ffd3 	bl	80028e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011942:	4620      	mov	r0, r4
 8011944:	2100      	movs	r1, #0
 8011946:	f7ff ffd7 	bl	80118f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801194a:	4620      	mov	r0, r4
 801194c:	f7ff fd8c 	bl	8011468 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011950:	bd10      	pop	{r4, pc}
 8011952:	bf00      	nop
 8011954:	20012da2 	.word	0x20012da2

08011958 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011958:	b570      	push	{r4, r5, r6, lr}
 801195a:	4604      	mov	r4, r0
 801195c:	6803      	ldr	r3, [r0, #0]
 801195e:	b919      	cbnz	r1, 8011968 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011960:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011966:	4718      	bx	r3
 8011968:	2200      	movs	r2, #0
 801196a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801196e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011972:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011974:	4798      	blx	r3
 8011976:	6863      	ldr	r3, [r4, #4]
 8011978:	2101      	movs	r1, #1
 801197a:	4605      	mov	r5, r0
 801197c:	7299      	strb	r1, [r3, #10]
 801197e:	4620      	mov	r0, r4
 8011980:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011984:	f7ff ffb8 	bl	80118f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011988:	4628      	mov	r0, r5
 801198a:	bd70      	pop	{r4, r5, r6, pc}

0801198c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801198c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011990:	1a13      	subs	r3, r2, r0
 8011992:	4258      	negs	r0, r3
 8011994:	4158      	adcs	r0, r3
 8011996:	4770      	bx	lr

08011998 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011998:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801199c:	1a9b      	subs	r3, r3, r2
 801199e:	2b00      	cmp	r3, #0
 80119a0:	bfdc      	itt	le
 80119a2:	6882      	ldrle	r2, [r0, #8]
 80119a4:	189b      	addle	r3, r3, r2
 80119a6:	2b01      	cmp	r3, #1
 80119a8:	bfcc      	ite	gt
 80119aa:	2000      	movgt	r0, #0
 80119ac:	2001      	movle	r0, #1
 80119ae:	4770      	bx	lr

080119b0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80119b0:	6902      	ldr	r2, [r0, #16]
 80119b2:	6843      	ldr	r3, [r0, #4]
 80119b4:	2024      	movs	r0, #36	; 0x24
 80119b6:	fb00 3002 	mla	r0, r0, r2, r3
 80119ba:	4770      	bx	lr

080119bc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80119bc:	6803      	ldr	r3, [r0, #0]
 80119be:	691b      	ldr	r3, [r3, #16]
 80119c0:	4718      	bx	r3

080119c2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80119c2:	b570      	push	{r4, r5, r6, lr}
 80119c4:	2301      	movs	r3, #1
 80119c6:	7203      	strb	r3, [r0, #8]
 80119c8:	4604      	mov	r4, r0
 80119ca:	6840      	ldr	r0, [r0, #4]
 80119cc:	6803      	ldr	r3, [r0, #0]
 80119ce:	699b      	ldr	r3, [r3, #24]
 80119d0:	4798      	blx	r3
 80119d2:	6803      	ldr	r3, [r0, #0]
 80119d4:	2b40      	cmp	r3, #64	; 0x40
 80119d6:	4605      	mov	r5, r0
 80119d8:	d00c      	beq.n	80119f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80119da:	d810      	bhi.n	80119fe <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80119dc:	2b04      	cmp	r3, #4
 80119de:	d01d      	beq.n	8011a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80119e0:	d804      	bhi.n	80119ec <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80119e2:	2b01      	cmp	r3, #1
 80119e4:	d006      	beq.n	80119f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80119e6:	2b02      	cmp	r3, #2
 80119e8:	d02c      	beq.n	8011a44 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80119ea:	bd70      	pop	{r4, r5, r6, pc}
 80119ec:	2b08      	cmp	r3, #8
 80119ee:	d01d      	beq.n	8011a2c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80119f0:	2b20      	cmp	r3, #32
 80119f2:	d1fa      	bne.n	80119ea <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80119f4:	6823      	ldr	r3, [r4, #0]
 80119f6:	4620      	mov	r0, r4
 80119f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80119fa:	4798      	blx	r3
 80119fc:	e013      	b.n	8011a26 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80119fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011a02:	d0f7      	beq.n	80119f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a04:	d804      	bhi.n	8011a10 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011a06:	2b80      	cmp	r3, #128	; 0x80
 8011a08:	d0f4      	beq.n	80119f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a0a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011a0e:	e7f0      	b.n	80119f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011a10:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011a14:	d0ee      	beq.n	80119f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a16:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011a1a:	e7e5      	b.n	80119e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011a1c:	6823      	ldr	r3, [r4, #0]
 8011a1e:	7f01      	ldrb	r1, [r0, #28]
 8011a20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011a22:	4620      	mov	r0, r4
 8011a24:	4798      	blx	r3
 8011a26:	6823      	ldr	r3, [r4, #0]
 8011a28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a2a:	e006      	b.n	8011a3a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011a2c:	6823      	ldr	r3, [r4, #0]
 8011a2e:	7f01      	ldrb	r1, [r0, #28]
 8011a30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011a32:	4620      	mov	r0, r4
 8011a34:	4798      	blx	r3
 8011a36:	6823      	ldr	r3, [r4, #0]
 8011a38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011a3a:	4629      	mov	r1, r5
 8011a3c:	4620      	mov	r0, r4
 8011a3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a42:	4718      	bx	r3
 8011a44:	6823      	ldr	r3, [r4, #0]
 8011a46:	4620      	mov	r0, r4
 8011a48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011a4a:	4798      	blx	r3
 8011a4c:	e7f3      	b.n	8011a36 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011a4e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011a4e:	4770      	bx	lr

08011a50 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011a50:	4770      	bx	lr

08011a52 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011a52:	4770      	bx	lr

08011a54 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011a54:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011a58:	1ad2      	subs	r2, r2, r3
 8011a5a:	2a00      	cmp	r2, #0
 8011a5c:	b510      	push	{r4, lr}
 8011a5e:	bfdc      	itt	le
 8011a60:	6884      	ldrle	r4, [r0, #8]
 8011a62:	1912      	addle	r2, r2, r4
 8011a64:	2a01      	cmp	r2, #1
 8011a66:	dd16      	ble.n	8011a96 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011a68:	6842      	ldr	r2, [r0, #4]
 8011a6a:	2424      	movs	r4, #36	; 0x24
 8011a6c:	fb04 2303 	mla	r3, r4, r3, r2
 8011a70:	f101 0220 	add.w	r2, r1, #32
 8011a74:	f851 4b04 	ldr.w	r4, [r1], #4
 8011a78:	f843 4b04 	str.w	r4, [r3], #4
 8011a7c:	4291      	cmp	r1, r2
 8011a7e:	d1f9      	bne.n	8011a74 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011a80:	780a      	ldrb	r2, [r1, #0]
 8011a82:	701a      	strb	r2, [r3, #0]
 8011a84:	68c3      	ldr	r3, [r0, #12]
 8011a86:	6882      	ldr	r2, [r0, #8]
 8011a88:	f3bf 8f5b 	dmb	ish
 8011a8c:	3301      	adds	r3, #1
 8011a8e:	429a      	cmp	r2, r3
 8011a90:	bfd8      	it	le
 8011a92:	1a9b      	suble	r3, r3, r2
 8011a94:	60c3      	str	r3, [r0, #12]
 8011a96:	bd10      	pop	{r4, pc}

08011a98 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011a98:	6903      	ldr	r3, [r0, #16]
 8011a9a:	6882      	ldr	r2, [r0, #8]
 8011a9c:	f3bf 8f5b 	dmb	ish
 8011aa0:	3301      	adds	r3, #1
 8011aa2:	429a      	cmp	r2, r3
 8011aa4:	bfd8      	it	le
 8011aa6:	1a9b      	suble	r3, r3, r2
 8011aa8:	6103      	str	r3, [r0, #16]
 8011aaa:	4770      	bx	lr

08011aac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011aac:	b570      	push	{r4, r5, r6, lr}
 8011aae:	4604      	mov	r4, r0
 8011ab0:	460e      	mov	r6, r1
 8011ab2:	6860      	ldr	r0, [r4, #4]
 8011ab4:	6803      	ldr	r3, [r0, #0]
 8011ab6:	685b      	ldr	r3, [r3, #4]
 8011ab8:	4798      	blx	r3
 8011aba:	2800      	cmp	r0, #0
 8011abc:	d1f9      	bne.n	8011ab2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011abe:	4d0d      	ldr	r5, [pc, #52]	; (8011af4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011ac0:	6828      	ldr	r0, [r5, #0]
 8011ac2:	6803      	ldr	r3, [r0, #0]
 8011ac4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011ac6:	4798      	blx	r3
 8011ac8:	f7f0 ff1c 	bl	8002904 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011acc:	6828      	ldr	r0, [r5, #0]
 8011ace:	2101      	movs	r1, #1
 8011ad0:	f7ff ff12 	bl	80118f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011ad4:	6860      	ldr	r0, [r4, #4]
 8011ad6:	6803      	ldr	r3, [r0, #0]
 8011ad8:	4631      	mov	r1, r6
 8011ada:	689b      	ldr	r3, [r3, #8]
 8011adc:	4798      	blx	r3
 8011ade:	6823      	ldr	r3, [r4, #0]
 8011ae0:	4620      	mov	r0, r4
 8011ae2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ae4:	4798      	blx	r3
 8011ae6:	6828      	ldr	r0, [r5, #0]
 8011ae8:	6803      	ldr	r3, [r0, #0]
 8011aea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011aee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011af0:	4718      	bx	r3
 8011af2:	bf00      	nop
 8011af4:	20012da4 	.word	0x20012da4

08011af8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011af8:	b508      	push	{r3, lr}
 8011afa:	f7f0 fef5 	bl	80028e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011afe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b02:	f7f0 bef9 	b.w	80028f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011b06 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011b06:	b510      	push	{r4, lr}
 8011b08:	2114      	movs	r1, #20
 8011b0a:	4604      	mov	r4, r0
 8011b0c:	f018 f9f3 	bl	8029ef6 <_ZdlPvj>
 8011b10:	4620      	mov	r0, r4
 8011b12:	bd10      	pop	{r4, pc}

08011b14 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011b14:	b510      	push	{r4, lr}
 8011b16:	4604      	mov	r4, r0
 8011b18:	6840      	ldr	r0, [r0, #4]
 8011b1a:	6803      	ldr	r3, [r0, #0]
 8011b1c:	681b      	ldr	r3, [r3, #0]
 8011b1e:	4798      	blx	r3
 8011b20:	b948      	cbnz	r0, 8011b36 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b22:	7a63      	ldrb	r3, [r4, #9]
 8011b24:	b13b      	cbz	r3, 8011b36 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b26:	7a23      	ldrb	r3, [r4, #8]
 8011b28:	b92b      	cbnz	r3, 8011b36 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b2a:	6823      	ldr	r3, [r4, #0]
 8011b2c:	4620      	mov	r0, r4
 8011b2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b34:	4718      	bx	r3
 8011b36:	bd10      	pop	{r4, pc}

08011b38 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011b38:	b570      	push	{r4, r5, r6, lr}
 8011b3a:	4604      	mov	r4, r0
 8011b3c:	6840      	ldr	r0, [r0, #4]
 8011b3e:	6803      	ldr	r3, [r0, #0]
 8011b40:	681b      	ldr	r3, [r3, #0]
 8011b42:	4798      	blx	r3
 8011b44:	4605      	mov	r5, r0
 8011b46:	b930      	cbnz	r0, 8011b56 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011b48:	7a23      	ldrb	r3, [r4, #8]
 8011b4a:	b123      	cbz	r3, 8011b56 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011b4c:	6860      	ldr	r0, [r4, #4]
 8011b4e:	6803      	ldr	r3, [r0, #0]
 8011b50:	695b      	ldr	r3, [r3, #20]
 8011b52:	4798      	blx	r3
 8011b54:	7225      	strb	r5, [r4, #8]
 8011b56:	6860      	ldr	r0, [r4, #4]
 8011b58:	6803      	ldr	r3, [r0, #0]
 8011b5a:	681b      	ldr	r3, [r3, #0]
 8011b5c:	4798      	blx	r3
 8011b5e:	b928      	cbnz	r0, 8011b6c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011b60:	6823      	ldr	r3, [r4, #0]
 8011b62:	4620      	mov	r0, r4
 8011b64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b6a:	4718      	bx	r3
 8011b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b70:	f7f0 bed0 	b.w	8002914 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011b74 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011b74:	b510      	push	{r4, lr}
 8011b76:	4c04      	ldr	r4, [pc, #16]	; (8011b88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011b78:	6082      	str	r2, [r0, #8]
 8011b7a:	2200      	movs	r2, #0
 8011b7c:	e9c0 4100 	strd	r4, r1, [r0]
 8011b80:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011b84:	bd10      	pop	{r4, pc}
 8011b86:	bf00      	nop
 8011b88:	0802ef28 	.word	0x0802ef28

08011b8c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011b8c:	6840      	ldr	r0, [r0, #4]
 8011b8e:	6803      	ldr	r3, [r0, #0]
 8011b90:	681b      	ldr	r3, [r3, #0]
 8011b92:	4718      	bx	r3

08011b94 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011b94:	4b06      	ldr	r3, [pc, #24]	; (8011bb0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011b96:	60c1      	str	r1, [r0, #12]
 8011b98:	094a      	lsrs	r2, r1, #5
 8011b9a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011b9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011ba2:	4313      	orrs	r3, r2
 8011ba4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011ba8:	4319      	orrs	r1, r3
 8011baa:	8201      	strh	r1, [r0, #16]
 8011bac:	4770      	bx	lr
 8011bae:	bf00      	nop
 8011bb0:	fffff800 	.word	0xfffff800

08011bb4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011bb4:	f1a0 0008 	sub.w	r0, r0, #8
 8011bb8:	e7ec      	b.n	8011b94 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011bba:	bf00      	nop

08011bbc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011bbc:	b508      	push	{r3, lr}
 8011bbe:	4b05      	ldr	r3, [pc, #20]	; (8011bd4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011bc0:	6818      	ldr	r0, [r3, #0]
 8011bc2:	6803      	ldr	r3, [r0, #0]
 8011bc4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011bc8:	4798      	blx	r3
 8011bca:	1e43      	subs	r3, r0, #1
 8011bcc:	4258      	negs	r0, r3
 8011bce:	4158      	adcs	r0, r3
 8011bd0:	bd08      	pop	{r3, pc}
 8011bd2:	bf00      	nop
 8011bd4:	20012da4 	.word	0x20012da4

08011bd8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011bd8:	4770      	bx	lr

08011bda <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011bda:	3808      	subs	r0, #8
 8011bdc:	4770      	bx	lr

08011bde <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011bde:	b430      	push	{r4, r5}
 8011be0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011be4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011be8:	8a02      	ldrh	r2, [r0, #16]
 8011bea:	9202      	str	r2, [sp, #8]
 8011bec:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011bf0:	68c2      	ldr	r2, [r0, #12]
 8011bf2:	4629      	mov	r1, r5
 8011bf4:	4620      	mov	r0, r4
 8011bf6:	bc30      	pop	{r4, r5}
 8011bf8:	f7f1 b94e 	b.w	8002e98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011bfc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011bfc:	f7f1 b94a 	b.w	8002e94 <_ZN8touchgfx5paint8tearDownEv>

08011c00 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011c00:	b510      	push	{r4, lr}
 8011c02:	2114      	movs	r1, #20
 8011c04:	4604      	mov	r4, r0
 8011c06:	f018 f976 	bl	8029ef6 <_ZdlPvj>
 8011c0a:	4620      	mov	r0, r4
 8011c0c:	bd10      	pop	{r4, pc}

08011c0e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011c0e:	f1a0 0008 	sub.w	r0, r0, #8
 8011c12:	e7f5      	b.n	8011c00 <_ZN8touchgfx13PainterRGB565D0Ev>

08011c14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011c14:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011c16:	6803      	ldr	r3, [r0, #0]
 8011c18:	460d      	mov	r5, r1
 8011c1a:	4604      	mov	r4, r0
 8011c1c:	4601      	mov	r1, r0
 8011c1e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011c20:	a802      	add	r0, sp, #8
 8011c22:	4798      	blx	r3
 8011c24:	6828      	ldr	r0, [r5, #0]
 8011c26:	6869      	ldr	r1, [r5, #4]
 8011c28:	466b      	mov	r3, sp
 8011c2a:	c303      	stmia	r3!, {r0, r1}
 8011c2c:	4668      	mov	r0, sp
 8011c2e:	4619      	mov	r1, r3
 8011c30:	f7fe ffa4 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8011c34:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011c36:	b188      	cbz	r0, 8011c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011c38:	6803      	ldr	r3, [r0, #0]
 8011c3a:	1d21      	adds	r1, r4, #4
 8011c3c:	68db      	ldr	r3, [r3, #12]
 8011c3e:	4798      	blx	r3
 8011c40:	b160      	cbz	r0, 8011c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011c42:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011c46:	2b00      	cmp	r3, #0
 8011c48:	dd08      	ble.n	8011c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011c4a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011c4e:	2d00      	cmp	r5, #0
 8011c50:	dd04      	ble.n	8011c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011c52:	4a2b      	ldr	r2, [pc, #172]	; (8011d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011c54:	7812      	ldrb	r2, [r2, #0]
 8011c56:	b11a      	cbz	r2, 8011c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011c58:	2a01      	cmp	r2, #1
 8011c5a:	d029      	beq.n	8011cb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011c5c:	b004      	add	sp, #16
 8011c5e:	bd70      	pop	{r4, r5, r6, pc}
 8011c60:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c64:	441d      	add	r5, r3
 8011c66:	b2ad      	uxth	r5, r5
 8011c68:	b22e      	sxth	r6, r5
 8011c6a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011c6e:	42b3      	cmp	r3, r6
 8011c70:	daf4      	bge.n	8011c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011c72:	6823      	ldr	r3, [r4, #0]
 8011c74:	4669      	mov	r1, sp
 8011c76:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011c78:	4620      	mov	r0, r4
 8011c7a:	4798      	blx	r3
 8011c7c:	b940      	cbnz	r0, 8011c90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011c7e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011c82:	2b01      	cmp	r3, #1
 8011c84:	d004      	beq.n	8011c90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011c86:	3301      	adds	r3, #1
 8011c88:	105b      	asrs	r3, r3, #1
 8011c8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011c8e:	e7f0      	b.n	8011c72 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011c90:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011c94:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c98:	4413      	add	r3, r2
 8011c9a:	b29b      	uxth	r3, r3
 8011c9c:	441a      	add	r2, r3
 8011c9e:	b212      	sxth	r2, r2
 8011ca0:	4296      	cmp	r6, r2
 8011ca2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011ca6:	dae0      	bge.n	8011c6a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011ca8:	1aeb      	subs	r3, r5, r3
 8011caa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011cae:	e7dc      	b.n	8011c6a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011cb0:	f8bd 5000 	ldrh.w	r5, [sp]
 8011cb4:	441d      	add	r5, r3
 8011cb6:	b2ad      	uxth	r5, r5
 8011cb8:	b22e      	sxth	r6, r5
 8011cba:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011cbe:	42b3      	cmp	r3, r6
 8011cc0:	dacc      	bge.n	8011c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011cc2:	6823      	ldr	r3, [r4, #0]
 8011cc4:	4669      	mov	r1, sp
 8011cc6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011cc8:	4620      	mov	r0, r4
 8011cca:	4798      	blx	r3
 8011ccc:	b940      	cbnz	r0, 8011ce0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011cce:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011cd2:	2b01      	cmp	r3, #1
 8011cd4:	d004      	beq.n	8011ce0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011cd6:	3301      	adds	r3, #1
 8011cd8:	105b      	asrs	r3, r3, #1
 8011cda:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011cde:	e7f0      	b.n	8011cc2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011ce0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011ce4:	f8bd 3000 	ldrh.w	r3, [sp]
 8011ce8:	4413      	add	r3, r2
 8011cea:	b29b      	uxth	r3, r3
 8011cec:	441a      	add	r2, r3
 8011cee:	b212      	sxth	r2, r2
 8011cf0:	4296      	cmp	r6, r2
 8011cf2:	f8ad 3000 	strh.w	r3, [sp]
 8011cf6:	dae0      	bge.n	8011cba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011cf8:	1aeb      	subs	r3, r5, r3
 8011cfa:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011cfe:	e7dc      	b.n	8011cba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011d00:	20012d9c 	.word	0x20012d9c

08011d04 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011d04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011d06:	6803      	ldr	r3, [r0, #0]
 8011d08:	4604      	mov	r4, r0
 8011d0a:	4601      	mov	r1, r0
 8011d0c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011d0e:	4668      	mov	r0, sp
 8011d10:	4798      	blx	r3
 8011d12:	2100      	movs	r1, #0
 8011d14:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011d18:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d1c:	9102      	str	r1, [sp, #8]
 8011d1e:	4668      	mov	r0, sp
 8011d20:	a902      	add	r1, sp, #8
 8011d22:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011d26:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011d2a:	f7fe ff27 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8011d2e:	6823      	ldr	r3, [r4, #0]
 8011d30:	4669      	mov	r1, sp
 8011d32:	691b      	ldr	r3, [r3, #16]
 8011d34:	4620      	mov	r0, r4
 8011d36:	4798      	blx	r3
 8011d38:	b004      	add	sp, #16
 8011d3a:	bd10      	pop	{r4, pc}

08011d3c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011d3c:	2101      	movs	r1, #1
 8011d3e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011d42:	490b      	ldr	r1, [pc, #44]	; (8011d70 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011d44:	6001      	str	r1, [r0, #0]
 8011d46:	2200      	movs	r2, #0
 8011d48:	21ff      	movs	r1, #255	; 0xff
 8011d4a:	8082      	strh	r2, [r0, #4]
 8011d4c:	80c2      	strh	r2, [r0, #6]
 8011d4e:	8102      	strh	r2, [r0, #8]
 8011d50:	8142      	strh	r2, [r0, #10]
 8011d52:	8182      	strh	r2, [r0, #12]
 8011d54:	81c2      	strh	r2, [r0, #14]
 8011d56:	8202      	strh	r2, [r0, #16]
 8011d58:	8242      	strh	r2, [r0, #18]
 8011d5a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011d5e:	61c2      	str	r2, [r0, #28]
 8011d60:	8402      	strh	r2, [r0, #32]
 8011d62:	8442      	strh	r2, [r0, #34]	; 0x22
 8011d64:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011d68:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011d6c:	6282      	str	r2, [r0, #40]	; 0x28
 8011d6e:	4770      	bx	lr
 8011d70:	0802ef84 	.word	0x0802ef84

08011d74 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011d74:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011d78:	4602      	mov	r2, r0
 8011d7a:	cb03      	ldmia	r3!, {r0, r1}
 8011d7c:	6010      	str	r0, [r2, #0]
 8011d7e:	6051      	str	r1, [r2, #4]
 8011d80:	4610      	mov	r0, r2
 8011d82:	4770      	bx	lr

08011d84 <_ZN8touchgfx4LineD1Ev>:
 8011d84:	4770      	bx	lr

08011d86 <_ZN8touchgfx4LineD0Ev>:
 8011d86:	b510      	push	{r4, lr}
 8011d88:	2170      	movs	r1, #112	; 0x70
 8011d8a:	4604      	mov	r4, r0
 8011d8c:	f018 f8b3 	bl	8029ef6 <_ZdlPvj>
 8011d90:	4620      	mov	r0, r4
 8011d92:	bd10      	pop	{r4, pc}

08011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011d94:	b507      	push	{r0, r1, r2, lr}
 8011d96:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011d9a:	ab01      	add	r3, sp, #4
 8011d9c:	6809      	ldr	r1, [r1, #0]
 8011d9e:	6800      	ldr	r0, [r0, #0]
 8011da0:	f005 fab4 	bl	801730c <_ZN8touchgfx6muldivElllRl>
 8011da4:	b003      	add	sp, #12
 8011da6:	f85d fb04 	ldr.w	pc, [sp], #4

08011daa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011daa:	6800      	ldr	r0, [r0, #0]
 8011dac:	2800      	cmp	r0, #0
 8011dae:	bfb9      	ittee	lt
 8011db0:	2320      	movlt	r3, #32
 8011db2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011db6:	301f      	addge	r0, #31
 8011db8:	1140      	asrge	r0, r0, #5
 8011dba:	4770      	bx	lr

08011dbc <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dc0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011dc4:	b089      	sub	sp, #36	; 0x24
 8011dc6:	4604      	mov	r4, r0
 8011dc8:	b353      	cbz	r3, 8011e20 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011dca:	6803      	ldr	r3, [r0, #0]
 8011dcc:	4601      	mov	r1, r0
 8011dce:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011dd0:	a802      	add	r0, sp, #8
 8011dd2:	4798      	blx	r3
 8011dd4:	2220      	movs	r2, #32
 8011dd6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011dda:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011ddc:	fb9a f0f2 	sdiv	r0, sl, r2
 8011de0:	fb91 f5f2 	sdiv	r5, r1, r2
 8011de4:	1b40      	subs	r0, r0, r5
 8011de6:	2800      	cmp	r0, #0
 8011de8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011dea:	fb93 f6f2 	sdiv	r6, r3, r2
 8011dee:	bfb8      	it	lt
 8011df0:	4240      	neglt	r0, r0
 8011df2:	0076      	lsls	r6, r6, #1
 8011df4:	4286      	cmp	r6, r0
 8011df6:	f8d4 b000 	ldr.w	fp, [r4]
 8011dfa:	dc0c      	bgt.n	8011e16 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011dfc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011dfe:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011e02:	fb95 f0f2 	sdiv	r0, r5, r2
 8011e06:	fb98 f7f2 	sdiv	r7, r8, r2
 8011e0a:	1bc0      	subs	r0, r0, r7
 8011e0c:	2800      	cmp	r0, #0
 8011e0e:	bfb8      	it	lt
 8011e10:	4240      	neglt	r0, r0
 8011e12:	4286      	cmp	r6, r0
 8011e14:	dd07      	ble.n	8011e26 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011e16:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011e1a:	a902      	add	r1, sp, #8
 8011e1c:	4620      	mov	r0, r4
 8011e1e:	4798      	blx	r3
 8011e20:	b009      	add	sp, #36	; 0x24
 8011e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e26:	3301      	adds	r3, #1
 8011e28:	2002      	movs	r0, #2
 8011e2a:	f10d 0920 	add.w	r9, sp, #32
 8011e2e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011e32:	4103      	asrs	r3, r0
 8011e34:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011e38:	eb01 060a 	add.w	r6, r1, sl
 8011e3c:	eb08 0705 	add.w	r7, r8, r5
 8011e40:	fb96 f6f0 	sdiv	r6, r6, r0
 8011e44:	fb97 f7f0 	sdiv	r7, r7, r0
 8011e48:	4648      	mov	r0, r9
 8011e4a:	9101      	str	r1, [sp, #4]
 8011e4c:	b236      	sxth	r6, r6
 8011e4e:	b23f      	sxth	r7, r7
 8011e50:	fb96 f6f2 	sdiv	r6, r6, r2
 8011e54:	fb97 f7f2 	sdiv	r7, r7, r2
 8011e58:	f7ff ffa7 	bl	8011daa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011e5c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011e60:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011e64:	9901      	ldr	r1, [sp, #4]
 8011e66:	4293      	cmp	r3, r2
 8011e68:	fa1f fe87 	uxth.w	lr, r7
 8011e6c:	fa1f fc86 	uxth.w	ip, r6
 8011e70:	eba1 0a0a 	sub.w	sl, r1, sl
 8011e74:	b280      	uxth	r0, r0
 8011e76:	da54      	bge.n	8011f22 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011e78:	ebac 0100 	sub.w	r1, ip, r0
 8011e7c:	b289      	uxth	r1, r1
 8011e7e:	4460      	add	r0, ip
 8011e80:	f1ba 0f00 	cmp.w	sl, #0
 8011e84:	b20e      	sxth	r6, r1
 8011e86:	b280      	uxth	r0, r0
 8011e88:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011e8c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011e90:	da29      	bge.n	8011ee6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011e92:	eba8 0505 	sub.w	r5, r8, r5
 8011e96:	2d00      	cmp	r5, #0
 8011e98:	da2a      	bge.n	8011ef0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011e9a:	fa1f f88a 	uxth.w	r8, sl
 8011e9e:	eba0 0008 	sub.w	r0, r0, r8
 8011ea2:	fa1f f58c 	uxth.w	r5, ip
 8011ea6:	4443      	add	r3, r8
 8011ea8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011eac:	1a59      	subs	r1, r3, r1
 8011eae:	ebae 0005 	sub.w	r0, lr, r5
 8011eb2:	f8ad a010 	strh.w	sl, [sp, #16]
 8011eb6:	f8ad c012 	strh.w	ip, [sp, #18]
 8011eba:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011ebe:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011ec2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011ec6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011eca:	442a      	add	r2, r5
 8011ecc:	eba2 0e0e 	sub.w	lr, r2, lr
 8011ed0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011ed4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011ed8:	a904      	add	r1, sp, #16
 8011eda:	4620      	mov	r0, r4
 8011edc:	4798      	blx	r3
 8011ede:	6823      	ldr	r3, [r4, #0]
 8011ee0:	4649      	mov	r1, r9
 8011ee2:	691b      	ldr	r3, [r3, #16]
 8011ee4:	e79a      	b.n	8011e1c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011ee6:	d003      	beq.n	8011ef0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011ee8:	eba8 0505 	sub.w	r5, r8, r5
 8011eec:	2d00      	cmp	r5, #0
 8011eee:	dcd4      	bgt.n	8011e9a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011ef0:	fa1f f88a 	uxth.w	r8, sl
 8011ef4:	4443      	add	r3, r8
 8011ef6:	fa1f f58c 	uxth.w	r5, ip
 8011efa:	1a59      	subs	r1, r3, r1
 8011efc:	eba0 0008 	sub.w	r0, r0, r8
 8011f00:	ebae 0305 	sub.w	r3, lr, r5
 8011f04:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011f08:	f8ad c012 	strh.w	ip, [sp, #18]
 8011f0c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011f10:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011f14:	f8ad a018 	strh.w	sl, [sp, #24]
 8011f18:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011f1c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011f20:	e7d3      	b.n	8011eca <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011f22:	ebae 0100 	sub.w	r1, lr, r0
 8011f26:	b289      	uxth	r1, r1
 8011f28:	4470      	add	r0, lr
 8011f2a:	f1ba 0f00 	cmp.w	sl, #0
 8011f2e:	b20f      	sxth	r7, r1
 8011f30:	b280      	uxth	r0, r0
 8011f32:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011f36:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011f3a:	da20      	bge.n	8011f7e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011f3c:	eba8 0505 	sub.w	r5, r8, r5
 8011f40:	2d00      	cmp	r5, #0
 8011f42:	da21      	bge.n	8011f88 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011f44:	fa1f f88e 	uxth.w	r8, lr
 8011f48:	fa1f f58a 	uxth.w	r5, sl
 8011f4c:	4443      	add	r3, r8
 8011f4e:	442a      	add	r2, r5
 8011f50:	f8ad e010 	strh.w	lr, [sp, #16]
 8011f54:	1b40      	subs	r0, r0, r5
 8011f56:	ebac 0e08 	sub.w	lr, ip, r8
 8011f5a:	1a51      	subs	r1, r2, r1
 8011f5c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011f60:	f8ad a012 	strh.w	sl, [sp, #18]
 8011f64:	f8ad e014 	strh.w	lr, [sp, #20]
 8011f68:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011f6c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011f70:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011f74:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011f78:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011f7c:	e7aa      	b.n	8011ed4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011f7e:	d003      	beq.n	8011f88 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011f80:	eba8 0505 	sub.w	r5, r8, r5
 8011f84:	2d00      	cmp	r5, #0
 8011f86:	dcdd      	bgt.n	8011f44 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011f88:	fa1f f58e 	uxth.w	r5, lr
 8011f8c:	fa1f f88a 	uxth.w	r8, sl
 8011f90:	4442      	add	r2, r8
 8011f92:	442b      	add	r3, r5
 8011f94:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011f98:	1a51      	subs	r1, r2, r1
 8011f9a:	ebac 0705 	sub.w	r7, ip, r5
 8011f9e:	eba0 0008 	sub.w	r0, r0, r8
 8011fa2:	eba3 0c0c 	sub.w	ip, r3, ip
 8011fa6:	f8ad e010 	strh.w	lr, [sp, #16]
 8011faa:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011fae:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011fb2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011fb6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011fba:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011fbe:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011fc2:	e787      	b.n	8011ed4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011fc4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011fc4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011fc8:	fb90 f2f3 	sdiv	r2, r0, r3
 8011fcc:	fb02 0013 	mls	r0, r2, r3, r0
 8011fd0:	2800      	cmp	r0, #0
 8011fd2:	bfb8      	it	lt
 8011fd4:	18c0      	addlt	r0, r0, r3
 8011fd6:	285a      	cmp	r0, #90	; 0x5a
 8011fd8:	4b09      	ldr	r3, [pc, #36]	; (8012000 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011fda:	dc02      	bgt.n	8011fe2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011fdc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011fe0:	4770      	bx	lr
 8011fe2:	28b4      	cmp	r0, #180	; 0xb4
 8011fe4:	dc02      	bgt.n	8011fec <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011fe6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011fea:	e7f7      	b.n	8011fdc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011fec:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011ff0:	bfd4      	ite	le
 8011ff2:	38b4      	suble	r0, #180	; 0xb4
 8011ff4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011ff8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011ffc:	4240      	negs	r0, r0
 8011ffe:	4770      	bx	lr
 8012000:	0802f050 	.word	0x0802f050

08012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8012004:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012008:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801200a:	fb90 f2f3 	sdiv	r2, r0, r3
 801200e:	fb02 0013 	mls	r0, r2, r3, r0
 8012012:	2800      	cmp	r0, #0
 8012014:	bfb8      	it	lt
 8012016:	18c0      	addlt	r0, r0, r3
 8012018:	1144      	asrs	r4, r0, #5
 801201a:	f000 061f 	and.w	r6, r0, #31
 801201e:	4620      	mov	r0, r4
 8012020:	f7ff ffd0 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012024:	4605      	mov	r5, r0
 8012026:	b90e      	cbnz	r6, 801202c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012028:	b002      	add	sp, #8
 801202a:	bd70      	pop	{r4, r5, r6, pc}
 801202c:	1c60      	adds	r0, r4, #1
 801202e:	f7ff ffc9 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012032:	ab01      	add	r3, sp, #4
 8012034:	2220      	movs	r2, #32
 8012036:	4631      	mov	r1, r6
 8012038:	1b40      	subs	r0, r0, r5
 801203a:	f005 f967 	bl	801730c <_ZN8touchgfx6muldivElllRl>
 801203e:	4428      	add	r0, r5
 8012040:	e7f2      	b.n	8012028 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08012042 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8012042:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8012046:	bf2c      	ite	cs
 8012048:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801204c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012050:	2300      	movs	r3, #0
 8012052:	1899      	adds	r1, r3, r2
 8012054:	4288      	cmp	r0, r1
 8012056:	bf24      	itt	cs
 8012058:	1853      	addcs	r3, r2, r1
 801205a:	1a40      	subcs	r0, r0, r1
 801205c:	0892      	lsrs	r2, r2, #2
 801205e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8012062:	d1f6      	bne.n	8012052 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8012064:	4618      	mov	r0, r3
 8012066:	4770      	bx	lr

08012068 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012068:	b510      	push	{r4, lr}
 801206a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801206e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8012072:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8012076:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801207a:	13a4      	asrs	r4, r4, #14
 801207c:	139b      	asrs	r3, r3, #14
 801207e:	429c      	cmp	r4, r3
 8012080:	bfb8      	it	lt
 8012082:	461c      	movlt	r4, r3
 8012084:	2c01      	cmp	r4, #1
 8012086:	dd07      	ble.n	8012098 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012088:	fb91 f1f4 	sdiv	r1, r1, r4
 801208c:	fb90 f0f4 	sdiv	r0, r0, r4
 8012090:	f7ff ffea 	bl	8012068 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012094:	4360      	muls	r0, r4
 8012096:	bd10      	pop	{r4, pc}
 8012098:	4340      	muls	r0, r0
 801209a:	fb01 0001 	mla	r0, r1, r1, r0
 801209e:	f7ff ffd0 	bl	8012042 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80120a2:	e7f8      	b.n	8012096 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080120a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 80120a4:	2800      	cmp	r0, #0
 80120a6:	b508      	push	{r3, lr}
 80120a8:	da05      	bge.n	80120b6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 80120aa:	4240      	negs	r0, r0
 80120ac:	f7ff fffa 	bl	80120a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80120b0:	4240      	negs	r0, r0
 80120b2:	b240      	sxtb	r0, r0
 80120b4:	bd08      	pop	{r3, pc}
 80120b6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80120ba:	dc11      	bgt.n	80120e0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80120bc:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80120c0:	dd09      	ble.n	80120d6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80120c2:	4340      	muls	r0, r0
 80120c4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80120c8:	f7ff ffbb 	bl	8012042 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80120cc:	f7ff ffea 	bl	80120a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80120d0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80120d4:	e7ed      	b.n	80120b2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80120d6:	3003      	adds	r0, #3
 80120d8:	10c0      	asrs	r0, r0, #3
 80120da:	4b02      	ldr	r3, [pc, #8]	; (80120e4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80120dc:	5618      	ldrsb	r0, [r3, r0]
 80120de:	e7e9      	b.n	80120b4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80120e0:	2000      	movs	r0, #0
 80120e2:	e7e7      	b.n	80120b4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80120e4:	0802eff4 	.word	0x0802eff4

080120e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80120e8:	4281      	cmp	r1, r0
 80120ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120ec:	460c      	mov	r4, r1
 80120ee:	4615      	mov	r5, r2
 80120f0:	dd07      	ble.n	8012102 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80120f2:	4601      	mov	r1, r0
 80120f4:	4620      	mov	r0, r4
 80120f6:	f7ff fff7 	bl	80120e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80120fa:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80120fe:	b003      	add	sp, #12
 8012100:	bd30      	pop	{r4, r5, pc}
 8012102:	f7ff ffb1 	bl	8012068 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012106:	6028      	str	r0, [r5, #0]
 8012108:	2800      	cmp	r0, #0
 801210a:	d0f8      	beq.n	80120fe <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801210c:	4602      	mov	r2, r0
 801210e:	ab01      	add	r3, sp, #4
 8012110:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012114:	4620      	mov	r0, r4
 8012116:	f005 f8f9 	bl	801730c <_ZN8touchgfx6muldivElllRl>
 801211a:	f7ff ffc3 	bl	80120a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801211e:	e7ee      	b.n	80120fe <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012120 <_ZN8touchgfx4LineC1Ev>:
 8012120:	b510      	push	{r4, lr}
 8012122:	4604      	mov	r4, r0
 8012124:	f7ff fe0a 	bl	8011d3c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012128:	4b0c      	ldr	r3, [pc, #48]	; (801215c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801212a:	6023      	str	r3, [r4, #0]
 801212c:	2220      	movs	r2, #32
 801212e:	2300      	movs	r3, #0
 8012130:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012132:	2212      	movs	r2, #18
 8012134:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012138:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801213c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012140:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012144:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012148:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801214c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012150:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012154:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012156:	60a3      	str	r3, [r4, #8]
 8012158:	4620      	mov	r0, r4
 801215a:	bd10      	pop	{r4, pc}
 801215c:	0802f110 	.word	0x0802f110

08012160 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012160:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012164:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012166:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012168:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801216a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801216c:	1aff      	subs	r7, r7, r3
 801216e:	4604      	mov	r4, r0
 8012170:	eba5 0502 	sub.w	r5, r5, r2
 8012174:	d142      	bne.n	80121fc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012176:	b955      	cbnz	r5, 801218e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012178:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801217c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012180:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012184:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012188:	b002      	add	sp, #8
 801218a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801218e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012192:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012196:	4629      	mov	r1, r5
 8012198:	4642      	mov	r2, r8
 801219a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801219c:	f005 f8d5 	bl	801734a <_ZN8touchgfx6muldivElll>
 80121a0:	2502      	movs	r5, #2
 80121a2:	4642      	mov	r2, r8
 80121a4:	fb90 f6f5 	sdiv	r6, r0, r5
 80121a8:	4639      	mov	r1, r7
 80121aa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80121ac:	f005 f8cd 	bl	801734a <_ZN8touchgfx6muldivElll>
 80121b0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 80121b4:	fb90 f5f5 	sdiv	r5, r0, r5
 80121b8:	f1b9 0f00 	cmp.w	r9, #0
 80121bc:	d067      	beq.n	801228e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80121be:	f1b9 0f02 	cmp.w	r9, #2
 80121c2:	d878      	bhi.n	80122b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80121c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80121c6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80121c8:	1b93      	subs	r3, r2, r6
 80121ca:	1b5b      	subs	r3, r3, r5
 80121cc:	6463      	str	r3, [r4, #68]	; 0x44
 80121ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80121d0:	18e9      	adds	r1, r5, r3
 80121d2:	1b89      	subs	r1, r1, r6
 80121d4:	6561      	str	r1, [r4, #84]	; 0x54
 80121d6:	1b81      	subs	r1, r0, r6
 80121d8:	4429      	add	r1, r5
 80121da:	64a1      	str	r1, [r4, #72]	; 0x48
 80121dc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80121de:	4430      	add	r0, r6
 80121e0:	186f      	adds	r7, r5, r1
 80121e2:	4432      	add	r2, r6
 80121e4:	1b49      	subs	r1, r1, r5
 80121e6:	4437      	add	r7, r6
 80121e8:	4428      	add	r0, r5
 80121ea:	4431      	add	r1, r6
 80121ec:	1b52      	subs	r2, r2, r5
 80121ee:	1b5b      	subs	r3, r3, r5
 80121f0:	65a7      	str	r7, [r4, #88]	; 0x58
 80121f2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80121f4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80121f6:	6522      	str	r2, [r4, #80]	; 0x50
 80121f8:	1b9b      	subs	r3, r3, r6
 80121fa:	e05b      	b.n	80122b4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80121fc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012200:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012204:	2d00      	cmp	r5, #0
 8012206:	d0c6      	beq.n	8012196 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012208:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801220c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012210:	fb93 f2f8 	sdiv	r2, r3, r8
 8012214:	fb08 3312 	mls	r3, r8, r2, r3
 8012218:	b353      	cbz	r3, 8012270 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801221a:	fb98 f2f3 	sdiv	r2, r8, r3
 801221e:	fb03 8812 	mls	r8, r3, r2, r8
 8012222:	f1b8 0f00 	cmp.w	r8, #0
 8012226:	d1f3      	bne.n	8012210 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012228:	2b01      	cmp	r3, #1
 801222a:	bf1c      	itt	ne
 801222c:	fb95 f5f3 	sdivne	r5, r5, r3
 8012230:	fb97 f7f3 	sdivne	r7, r7, r3
 8012234:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012238:	f24b 5104 	movw	r1, #46340	; 0xb504
 801223c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012240:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012244:	428b      	cmp	r3, r1
 8012246:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801224a:	4608      	mov	r0, r1
 801224c:	dd01      	ble.n	8012252 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801224e:	428a      	cmp	r2, r1
 8012250:	dc10      	bgt.n	8012274 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012252:	fb90 f3f3 	sdiv	r3, r0, r3
 8012256:	fb90 f2f2 	sdiv	r2, r0, r2
 801225a:	4293      	cmp	r3, r2
 801225c:	bfa8      	it	ge
 801225e:	4613      	movge	r3, r2
 8012260:	435f      	muls	r7, r3
 8012262:	435d      	muls	r5, r3
 8012264:	4629      	mov	r1, r5
 8012266:	4638      	mov	r0, r7
 8012268:	f7ff fefe 	bl	8012068 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801226c:	4680      	mov	r8, r0
 801226e:	e792      	b.n	8012196 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012270:	4643      	mov	r3, r8
 8012272:	e7d9      	b.n	8012228 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012274:	fb93 f3f1 	sdiv	r3, r3, r1
 8012278:	fb92 f2f1 	sdiv	r2, r2, r1
 801227c:	4293      	cmp	r3, r2
 801227e:	bfcc      	ite	gt
 8012280:	3301      	addgt	r3, #1
 8012282:	1c53      	addle	r3, r2, #1
 8012284:	fb97 f7f3 	sdiv	r7, r7, r3
 8012288:	fb95 f5f3 	sdiv	r5, r5, r3
 801228c:	e7ea      	b.n	8012264 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801228e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012290:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012292:	1b93      	subs	r3, r2, r6
 8012294:	6463      	str	r3, [r4, #68]	; 0x44
 8012296:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012298:	18e9      	adds	r1, r5, r3
 801229a:	6561      	str	r1, [r4, #84]	; 0x54
 801229c:	1b81      	subs	r1, r0, r6
 801229e:	64a1      	str	r1, [r4, #72]	; 0x48
 80122a0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80122a2:	4430      	add	r0, r6
 80122a4:	186f      	adds	r7, r5, r1
 80122a6:	4432      	add	r2, r6
 80122a8:	1b49      	subs	r1, r1, r5
 80122aa:	65a7      	str	r7, [r4, #88]	; 0x58
 80122ac:	64e0      	str	r0, [r4, #76]	; 0x4c
 80122ae:	65e1      	str	r1, [r4, #92]	; 0x5c
 80122b0:	6522      	str	r2, [r4, #80]	; 0x50
 80122b2:	1b5b      	subs	r3, r3, r5
 80122b4:	6623      	str	r3, [r4, #96]	; 0x60
 80122b6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80122b8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80122ba:	9200      	str	r2, [sp, #0]
 80122bc:	9301      	str	r3, [sp, #4]
 80122be:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80122c2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80122c6:	680f      	ldr	r7, [r1, #0]
 80122c8:	9800      	ldr	r0, [sp, #0]
 80122ca:	42ba      	cmp	r2, r7
 80122cc:	bfa8      	it	ge
 80122ce:	463a      	movge	r2, r7
 80122d0:	4287      	cmp	r7, r0
 80122d2:	bfc8      	it	gt
 80122d4:	9700      	strgt	r7, [sp, #0]
 80122d6:	690f      	ldr	r7, [r1, #16]
 80122d8:	9801      	ldr	r0, [sp, #4]
 80122da:	42bb      	cmp	r3, r7
 80122dc:	bfa8      	it	ge
 80122de:	463b      	movge	r3, r7
 80122e0:	3104      	adds	r1, #4
 80122e2:	4287      	cmp	r7, r0
 80122e4:	bfc8      	it	gt
 80122e6:	9701      	strgt	r7, [sp, #4]
 80122e8:	458c      	cmp	ip, r1
 80122ea:	d1ec      	bne.n	80122c6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80122ec:	4668      	mov	r0, sp
 80122ee:	2720      	movs	r7, #32
 80122f0:	fb92 f8f7 	sdiv	r8, r2, r7
 80122f4:	fb93 f7f7 	sdiv	r7, r3, r7
 80122f8:	f7ff fd57 	bl	8011daa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80122fc:	4682      	mov	sl, r0
 80122fe:	a801      	add	r0, sp, #4
 8012300:	f7ff fd53 	bl	8011daa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012304:	ebaa 0208 	sub.w	r2, sl, r8
 8012308:	1bc0      	subs	r0, r0, r7
 801230a:	f1b9 0f01 	cmp.w	r9, #1
 801230e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012312:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012316:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801231a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801231e:	f47f af33 	bne.w	8012188 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012322:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012324:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012326:	1b83      	subs	r3, r0, r6
 8012328:	6463      	str	r3, [r4, #68]	; 0x44
 801232a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801232c:	18ea      	adds	r2, r5, r3
 801232e:	6562      	str	r2, [r4, #84]	; 0x54
 8012330:	1b8a      	subs	r2, r1, r6
 8012332:	64a2      	str	r2, [r4, #72]	; 0x48
 8012334:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012336:	4431      	add	r1, r6
 8012338:	18af      	adds	r7, r5, r2
 801233a:	4406      	add	r6, r0
 801233c:	1b52      	subs	r2, r2, r5
 801233e:	1b5d      	subs	r5, r3, r5
 8012340:	65a7      	str	r7, [r4, #88]	; 0x58
 8012342:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012344:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012346:	6526      	str	r6, [r4, #80]	; 0x50
 8012348:	6625      	str	r5, [r4, #96]	; 0x60
 801234a:	e71d      	b.n	8012188 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801234c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801234c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801234e:	428b      	cmp	r3, r1
 8012350:	d102      	bne.n	8012358 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012352:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012354:	4293      	cmp	r3, r2
 8012356:	d003      	beq.n	8012360 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012358:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801235c:	f7ff bf00 	b.w	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012360:	4770      	bx	lr

08012362 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012362:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012364:	428b      	cmp	r3, r1
 8012366:	d102      	bne.n	801236e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012368:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801236a:	4293      	cmp	r3, r2
 801236c:	d003      	beq.n	8012376 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801236e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012372:	f7ff bef5 	b.w	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012376:	4770      	bx	lr

08012378 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012378:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801237c:	f7ff bef0 	b.w	8012160 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012380 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012384:	b0a0      	sub	sp, #128	; 0x80
 8012386:	4604      	mov	r4, r0
 8012388:	460a      	mov	r2, r1
 801238a:	4601      	mov	r1, r0
 801238c:	a804      	add	r0, sp, #16
 801238e:	f014 fe3b 	bl	8027008 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012392:	2300      	movs	r3, #0
 8012394:	9301      	str	r3, [sp, #4]
 8012396:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801239a:	2b01      	cmp	r3, #1
 801239c:	d17c      	bne.n	8012498 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801239e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80123a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80123a2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80123a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80123a6:	1ac0      	subs	r0, r0, r3
 80123a8:	eba1 0102 	sub.w	r1, r1, r2
 80123ac:	d437      	bmi.n	801241e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80123ae:	2900      	cmp	r1, #0
 80123b0:	aa01      	add	r2, sp, #4
 80123b2:	db2e      	blt.n	8012412 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80123b4:	f7ff fe98 	bl	80120e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80123b8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80123bc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80123be:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80123c0:	a804      	add	r0, sp, #16
 80123c2:	f014 ffa1 	bl	8027308 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80123c6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80123c8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80123ca:	a804      	add	r0, sp, #16
 80123cc:	f014 ffe9 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80123d0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80123d2:	2db3      	cmp	r5, #179	; 0xb3
 80123d4:	dc33      	bgt.n	801243e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80123d6:	eba6 0805 	sub.w	r8, r6, r5
 80123da:	4640      	mov	r0, r8
 80123dc:	f7ff fdf2 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 80123e0:	a902      	add	r1, sp, #8
 80123e2:	9002      	str	r0, [sp, #8]
 80123e4:	a801      	add	r0, sp, #4
 80123e6:	f7ff fcd5 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80123ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80123ec:	1847      	adds	r7, r0, r1
 80123ee:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80123f2:	f7ff fde7 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 80123f6:	a903      	add	r1, sp, #12
 80123f8:	9003      	str	r0, [sp, #12]
 80123fa:	a801      	add	r0, sp, #4
 80123fc:	f7ff fcca 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012400:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012402:	4639      	mov	r1, r7
 8012404:	1a12      	subs	r2, r2, r0
 8012406:	a804      	add	r0, sp, #16
 8012408:	f014 ffcb 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801240c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801240e:	441d      	add	r5, r3
 8012410:	e7df      	b.n	80123d2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012412:	4249      	negs	r1, r1
 8012414:	f7ff fe68 	bl	80120e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012418:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801241c:	e7ce      	b.n	80123bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801241e:	2900      	cmp	r1, #0
 8012420:	f1c0 0000 	rsb	r0, r0, #0
 8012424:	aa01      	add	r2, sp, #4
 8012426:	db04      	blt.n	8012432 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012428:	f7ff fe5e 	bl	80120e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801242c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012430:	e7c4      	b.n	80123bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012432:	4249      	negs	r1, r1
 8012434:	f7ff fe58 	bl	80120e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012438:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801243c:	e7be      	b.n	80123bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801243e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012440:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012442:	a804      	add	r0, sp, #16
 8012444:	f014 ffad 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012448:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801244a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801244c:	a804      	add	r0, sp, #16
 801244e:	f014 ffa8 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012452:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012454:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012458:	2d00      	cmp	r5, #0
 801245a:	dd31      	ble.n	80124c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801245c:	eb05 0806 	add.w	r8, r5, r6
 8012460:	4640      	mov	r0, r8
 8012462:	f7ff fdaf 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012466:	a902      	add	r1, sp, #8
 8012468:	9002      	str	r0, [sp, #8]
 801246a:	a801      	add	r0, sp, #4
 801246c:	f7ff fc92 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012470:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012472:	1847      	adds	r7, r0, r1
 8012474:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012478:	f7ff fda4 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 801247c:	a903      	add	r1, sp, #12
 801247e:	9003      	str	r0, [sp, #12]
 8012480:	a801      	add	r0, sp, #4
 8012482:	f7ff fc87 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012486:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012488:	4639      	mov	r1, r7
 801248a:	1a12      	subs	r2, r2, r0
 801248c:	a804      	add	r0, sp, #16
 801248e:	f014 ff88 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012492:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012494:	1aed      	subs	r5, r5, r3
 8012496:	e7df      	b.n	8012458 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012498:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801249a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801249c:	a804      	add	r0, sp, #16
 801249e:	f014 ff33 	bl	8027308 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80124a2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80124a4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80124a6:	a804      	add	r0, sp, #16
 80124a8:	f014 ff7b 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80124ac:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80124ae:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80124b0:	a804      	add	r0, sp, #16
 80124b2:	f014 ff76 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80124b6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80124b8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80124ba:	a804      	add	r0, sp, #16
 80124bc:	f014 ff71 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80124c0:	21ff      	movs	r1, #255	; 0xff
 80124c2:	a804      	add	r0, sp, #16
 80124c4:	f014 fe5c 	bl	8027180 <_ZN8touchgfx6Canvas6renderEh>
 80124c8:	4b04      	ldr	r3, [pc, #16]	; (80124dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80124ca:	9304      	str	r3, [sp, #16]
 80124cc:	4604      	mov	r4, r0
 80124ce:	a80c      	add	r0, sp, #48	; 0x30
 80124d0:	f001 f8cc 	bl	801366c <_ZN8touchgfx7OutlineD1Ev>
 80124d4:	4620      	mov	r0, r4
 80124d6:	b020      	add	sp, #128	; 0x80
 80124d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124dc:	0802f938 	.word	0x0802f938

080124e0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80124e0:	2000      	movs	r0, #0
 80124e2:	4770      	bx	lr

080124e4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80124e4:	4b07      	ldr	r3, [pc, #28]	; (8012504 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80124e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80124e8:	881b      	ldrh	r3, [r3, #0]
 80124ea:	4293      	cmp	r3, r2
 80124ec:	bf81      	itttt	hi
 80124ee:	4b06      	ldrhi	r3, [pc, #24]	; (8012508 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80124f0:	681b      	ldrhi	r3, [r3, #0]
 80124f2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80124f6:	7858      	ldrbhi	r0, [r3, #1]
 80124f8:	bf8c      	ite	hi
 80124fa:	f000 0003 	andhi.w	r0, r0, #3
 80124fe:	2000      	movls	r0, #0
 8012500:	4770      	bx	lr
 8012502:	bf00      	nop
 8012504:	20012e00 	.word	0x20012e00
 8012508:	20012dfc 	.word	0x20012dfc

0801250c <_ZN8touchgfx8TextAreaD1Ev>:
 801250c:	4770      	bx	lr
	...

08012510 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012514:	4b10      	ldr	r3, [pc, #64]	; (8012558 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012516:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012518:	881b      	ldrh	r3, [r3, #0]
 801251a:	428b      	cmp	r3, r1
 801251c:	4604      	mov	r4, r0
 801251e:	d918      	bls.n	8012552 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012520:	6803      	ldr	r3, [r0, #0]
 8012522:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012524:	4b0d      	ldr	r3, [pc, #52]	; (801255c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012526:	6818      	ldr	r0, [r3, #0]
 8012528:	f7f6 fe44 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 801252c:	6823      	ldr	r3, [r4, #0]
 801252e:	4606      	mov	r6, r0
 8012530:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012532:	4620      	mov	r0, r4
 8012534:	4798      	blx	r3
 8012536:	6823      	ldr	r3, [r4, #0]
 8012538:	4607      	mov	r7, r0
 801253a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801253e:	4620      	mov	r0, r4
 8012540:	4798      	blx	r3
 8012542:	463a      	mov	r2, r7
 8012544:	4603      	mov	r3, r0
 8012546:	4631      	mov	r1, r6
 8012548:	4620      	mov	r0, r4
 801254a:	46ac      	mov	ip, r5
 801254c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012550:	4760      	bx	ip
 8012552:	2000      	movs	r0, #0
 8012554:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012558:	20012e00 	.word	0x20012e00
 801255c:	20012e08 	.word	0x20012e08

08012560 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012560:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012564:	4b17      	ldr	r3, [pc, #92]	; (80125c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012566:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012568:	881b      	ldrh	r3, [r3, #0]
 801256a:	428b      	cmp	r3, r1
 801256c:	4604      	mov	r4, r0
 801256e:	d926      	bls.n	80125be <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012570:	4b15      	ldr	r3, [pc, #84]	; (80125c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012572:	681b      	ldr	r3, [r3, #0]
 8012574:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012578:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801257c:	4b13      	ldr	r3, [pc, #76]	; (80125cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801257e:	7855      	ldrb	r5, [r2, #1]
 8012580:	681b      	ldr	r3, [r3, #0]
 8012582:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012586:	6833      	ldr	r3, [r6, #0]
 8012588:	69df      	ldr	r7, [r3, #28]
 801258a:	4b11      	ldr	r3, [pc, #68]	; (80125d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801258c:	6818      	ldr	r0, [r3, #0]
 801258e:	f7f6 fe11 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8012592:	6823      	ldr	r3, [r4, #0]
 8012594:	4680      	mov	r8, r0
 8012596:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012598:	4620      	mov	r0, r4
 801259a:	4798      	blx	r3
 801259c:	6823      	ldr	r3, [r4, #0]
 801259e:	4681      	mov	r9, r0
 80125a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80125a4:	4620      	mov	r0, r4
 80125a6:	4798      	blx	r3
 80125a8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80125ac:	9000      	str	r0, [sp, #0]
 80125ae:	464b      	mov	r3, r9
 80125b0:	4642      	mov	r2, r8
 80125b2:	4629      	mov	r1, r5
 80125b4:	4630      	mov	r0, r6
 80125b6:	47b8      	blx	r7
 80125b8:	b003      	add	sp, #12
 80125ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80125be:	2000      	movs	r0, #0
 80125c0:	e7fa      	b.n	80125b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80125c2:	bf00      	nop
 80125c4:	20012e00 	.word	0x20012e00
 80125c8:	20012dfc 	.word	0x20012dfc
 80125cc:	20012e04 	.word	0x20012e04
 80125d0:	20012e08 	.word	0x20012e08

080125d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80125d4:	b40e      	push	{r1, r2, r3}
 80125d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80125da:	4b2f      	ldr	r3, [pc, #188]	; (8012698 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80125dc:	881a      	ldrh	r2, [r3, #0]
 80125de:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80125e0:	429a      	cmp	r2, r3
 80125e2:	b09d      	sub	sp, #116	; 0x74
 80125e4:	4604      	mov	r4, r0
 80125e6:	d954      	bls.n	8012692 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80125e8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801269c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80125ec:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80126a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80125f0:	aa26      	add	r2, sp, #152	; 0x98
 80125f2:	9202      	str	r2, [sp, #8]
 80125f4:	f8d9 2000 	ldr.w	r2, [r9]
 80125f8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80125fc:	f8d8 3000 	ldr.w	r3, [r8]
 8012600:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012604:	682b      	ldr	r3, [r5, #0]
 8012606:	4628      	mov	r0, r5
 8012608:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801260a:	4798      	blx	r3
 801260c:	b207      	sxth	r7, r0
 801260e:	4606      	mov	r6, r0
 8012610:	a803      	add	r0, sp, #12
 8012612:	f005 fa57 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8012616:	682b      	ldr	r3, [r5, #0]
 8012618:	4628      	mov	r0, r5
 801261a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801261c:	4798      	blx	r3
 801261e:	682b      	ldr	r3, [r5, #0]
 8012620:	4682      	mov	sl, r0
 8012622:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012624:	4628      	mov	r0, r5
 8012626:	4798      	blx	r3
 8012628:	4653      	mov	r3, sl
 801262a:	9000      	str	r0, [sp, #0]
 801262c:	9a02      	ldr	r2, [sp, #8]
 801262e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012630:	a803      	add	r0, sp, #12
 8012632:	f005 faa2 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012636:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012638:	f8d9 3000 	ldr.w	r3, [r9]
 801263c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012640:	8925      	ldrh	r5, [r4, #8]
 8012642:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012646:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801264a:	eba5 050c 	sub.w	r5, r5, ip
 801264e:	784a      	ldrb	r2, [r1, #1]
 8012650:	f8d8 3000 	ldr.w	r3, [r8]
 8012654:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012658:	b22d      	sxth	r5, r5
 801265a:	9500      	str	r5, [sp, #0]
 801265c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012660:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012664:	a803      	add	r0, sp, #12
 8012666:	f002 feed 	bl	8015444 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801266a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801266e:	18b9      	adds	r1, r7, r2
 8012670:	2900      	cmp	r1, #0
 8012672:	b203      	sxth	r3, r0
 8012674:	dd0b      	ble.n	801268e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012676:	3b01      	subs	r3, #1
 8012678:	fb13 f302 	smulbb	r3, r3, r2
 801267c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012680:	b21f      	sxth	r7, r3
 8012682:	4638      	mov	r0, r7
 8012684:	b01d      	add	sp, #116	; 0x74
 8012686:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801268a:	b003      	add	sp, #12
 801268c:	4770      	bx	lr
 801268e:	2b00      	cmp	r3, #0
 8012690:	dcf7      	bgt.n	8012682 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012692:	2700      	movs	r7, #0
 8012694:	e7f5      	b.n	8012682 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012696:	bf00      	nop
 8012698:	20012e00 	.word	0x20012e00
 801269c:	20012dfc 	.word	0x20012dfc
 80126a0:	20012e04 	.word	0x20012e04

080126a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80126a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126a8:	4bbc      	ldr	r3, [pc, #752]	; (801299c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80126aa:	460c      	mov	r4, r1
 80126ac:	881b      	ldrh	r3, [r3, #0]
 80126ae:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80126b0:	428b      	cmp	r3, r1
 80126b2:	b0a9      	sub	sp, #164	; 0xa4
 80126b4:	4680      	mov	r8, r0
 80126b6:	d809      	bhi.n	80126cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80126b8:	2300      	movs	r3, #0
 80126ba:	f04f 32ff 	mov.w	r2, #4294967295
 80126be:	e9c0 3200 	strd	r3, r2, [r0]
 80126c2:	6083      	str	r3, [r0, #8]
 80126c4:	4640      	mov	r0, r8
 80126c6:	b029      	add	sp, #164	; 0xa4
 80126c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126cc:	4eb4      	ldr	r6, [pc, #720]	; (80129a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80126ce:	6833      	ldr	r3, [r6, #0]
 80126d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80126d4:	4bb3      	ldr	r3, [pc, #716]	; (80129a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80126d6:	681b      	ldr	r3, [r3, #0]
 80126d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80126dc:	4bb2      	ldr	r3, [pc, #712]	; (80129a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80126de:	6818      	ldr	r0, [r3, #0]
 80126e0:	f7f6 fd68 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80126e4:	682b      	ldr	r3, [r5, #0]
 80126e6:	4681      	mov	r9, r0
 80126e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126ea:	4628      	mov	r0, r5
 80126ec:	4798      	blx	r3
 80126ee:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80126f0:	b203      	sxth	r3, r0
 80126f2:	4407      	add	r7, r0
 80126f4:	9304      	str	r3, [sp, #16]
 80126f6:	b2bb      	uxth	r3, r7
 80126f8:	9303      	str	r3, [sp, #12]
 80126fa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80126fe:	4682      	mov	sl, r0
 8012700:	a80f      	add	r0, sp, #60	; 0x3c
 8012702:	2b00      	cmp	r3, #0
 8012704:	f040 80a6 	bne.w	8012854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012708:	f005 f9dc 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 801270c:	682b      	ldr	r3, [r5, #0]
 801270e:	4628      	mov	r0, r5
 8012710:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012712:	4798      	blx	r3
 8012714:	682b      	ldr	r3, [r5, #0]
 8012716:	4606      	mov	r6, r0
 8012718:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801271a:	4628      	mov	r0, r5
 801271c:	4798      	blx	r3
 801271e:	6823      	ldr	r3, [r4, #0]
 8012720:	4607      	mov	r7, r0
 8012722:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012724:	4620      	mov	r0, r4
 8012726:	4798      	blx	r3
 8012728:	6823      	ldr	r3, [r4, #0]
 801272a:	4683      	mov	fp, r0
 801272c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012730:	4620      	mov	r0, r4
 8012732:	4798      	blx	r3
 8012734:	463b      	mov	r3, r7
 8012736:	e9cd b000 	strd	fp, r0, [sp]
 801273a:	4649      	mov	r1, r9
 801273c:	4632      	mov	r2, r6
 801273e:	a80f      	add	r0, sp, #60	; 0x3c
 8012740:	f005 fa30 	bl	8017ba4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012744:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012748:	f8df b254 	ldr.w	fp, [pc, #596]	; 80129a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801274c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012750:	f04f 0600 	mov.w	r6, #0
 8012754:	bf0c      	ite	eq
 8012756:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801275a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801275e:	4637      	mov	r7, r6
 8012760:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012762:	f8db 3000 	ldr.w	r3, [fp]
 8012766:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801276a:	4629      	mov	r1, r5
 801276c:	785b      	ldrb	r3, [r3, #1]
 801276e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012772:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012776:	a80f      	add	r0, sp, #60	; 0x3c
 8012778:	f002 fb7f 	bl	8014e7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801277c:	9b03      	ldr	r3, [sp, #12]
 801277e:	4286      	cmp	r6, r0
 8012780:	bfb8      	it	lt
 8012782:	4606      	movlt	r6, r0
 8012784:	3701      	adds	r7, #1
 8012786:	eba9 0903 	sub.w	r9, r9, r3
 801278a:	a80f      	add	r0, sp, #60	; 0x3c
 801278c:	b236      	sxth	r6, r6
 801278e:	b2bf      	uxth	r7, r7
 8012790:	fa0f f989 	sxth.w	r9, r9
 8012794:	f005 f9bd 	bl	8017b12 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012798:	b918      	cbnz	r0, 80127a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801279a:	7a2b      	ldrb	r3, [r5, #8]
 801279c:	444b      	add	r3, r9
 801279e:	2b00      	cmp	r3, #0
 80127a0:	dcde      	bgt.n	8012760 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80127a2:	9b03      	ldr	r3, [sp, #12]
 80127a4:	9a04      	ldr	r2, [sp, #16]
 80127a6:	f895 9009 	ldrb.w	r9, [r5, #9]
 80127aa:	fb13 f707 	smulbb	r7, r3, r7
 80127ae:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80127b0:	1aff      	subs	r7, r7, r3
 80127b2:	b2bf      	uxth	r7, r7
 80127b4:	b23b      	sxth	r3, r7
 80127b6:	429a      	cmp	r2, r3
 80127b8:	bfa8      	it	ge
 80127ba:	4657      	movge	r7, sl
 80127bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80127c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80127c4:	6823      	ldr	r3, [r4, #0]
 80127c6:	bf08      	it	eq
 80127c8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80127cc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80127ce:	bf18      	it	ne
 80127d0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80127d4:	4620      	mov	r0, r4
 80127d6:	4798      	blx	r3
 80127d8:	444f      	add	r7, r9
 80127da:	fa1f f987 	uxth.w	r9, r7
 80127de:	2801      	cmp	r0, #1
 80127e0:	fa0f f789 	sxth.w	r7, r9
 80127e4:	b2b3      	uxth	r3, r6
 80127e6:	f000 80e1 	beq.w	80129ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80127ea:	2802      	cmp	r0, #2
 80127ec:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80127f0:	f000 80e2 	beq.w	80129b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80127f4:	7aea      	ldrb	r2, [r5, #11]
 80127f6:	7b2d      	ldrb	r5, [r5, #12]
 80127f8:	b236      	sxth	r6, r6
 80127fa:	1ab6      	subs	r6, r6, r2
 80127fc:	442a      	add	r2, r5
 80127fe:	4413      	add	r3, r2
 8012800:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012804:	fa1f fa86 	uxth.w	sl, r6
 8012808:	b29b      	uxth	r3, r3
 801280a:	2a02      	cmp	r2, #2
 801280c:	fa0f fb8a 	sxth.w	fp, sl
 8012810:	b21e      	sxth	r6, r3
 8012812:	f000 80d5 	beq.w	80129c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012816:	2a03      	cmp	r2, #3
 8012818:	f000 80dd 	beq.w	80129d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801281c:	2a01      	cmp	r2, #1
 801281e:	f040 80e5 	bne.w	80129ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012822:	8925      	ldrh	r5, [r4, #8]
 8012824:	4633      	mov	r3, r6
 8012826:	eba5 0909 	sub.w	r9, r5, r9
 801282a:	463e      	mov	r6, r7
 801282c:	465d      	mov	r5, fp
 801282e:	461f      	mov	r7, r3
 8012830:	fa0f fb89 	sxth.w	fp, r9
 8012834:	4b5c      	ldr	r3, [pc, #368]	; (80129a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012836:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012838:	6818      	ldr	r0, [r3, #0]
 801283a:	f7f6 fcbb 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 801283e:	f8a8 b000 	strh.w	fp, [r8]
 8012842:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012846:	f8a8 6004 	strh.w	r6, [r8, #4]
 801284a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801284e:	f8c8 0008 	str.w	r0, [r8, #8]
 8012852:	e737      	b.n	80126c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012854:	f005 f936 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8012858:	682b      	ldr	r3, [r5, #0]
 801285a:	4628      	mov	r0, r5
 801285c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801285e:	4798      	blx	r3
 8012860:	682b      	ldr	r3, [r5, #0]
 8012862:	4607      	mov	r7, r0
 8012864:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012866:	4628      	mov	r0, r5
 8012868:	4798      	blx	r3
 801286a:	6823      	ldr	r3, [r4, #0]
 801286c:	4683      	mov	fp, r0
 801286e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012870:	4620      	mov	r0, r4
 8012872:	4798      	blx	r3
 8012874:	6822      	ldr	r2, [r4, #0]
 8012876:	9005      	str	r0, [sp, #20]
 8012878:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801287c:	4620      	mov	r0, r4
 801287e:	4790      	blx	r2
 8012880:	9b05      	ldr	r3, [sp, #20]
 8012882:	9001      	str	r0, [sp, #4]
 8012884:	463a      	mov	r2, r7
 8012886:	4649      	mov	r1, r9
 8012888:	9300      	str	r3, [sp, #0]
 801288a:	a80f      	add	r0, sp, #60	; 0x3c
 801288c:	465b      	mov	r3, fp
 801288e:	f005 f989 	bl	8017ba4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012892:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012896:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801289a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801289c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80128a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80128a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80128a8:	bf0a      	itet	eq
 80128aa:	464a      	moveq	r2, r9
 80128ac:	461a      	movne	r2, r3
 80128ae:	4699      	moveq	r9, r3
 80128b0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80128b4:	1ad2      	subs	r2, r2, r3
 80128b6:	6833      	ldr	r3, [r6, #0]
 80128b8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80128bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80128c0:	af0f      	add	r7, sp, #60	; 0x3c
 80128c2:	7859      	ldrb	r1, [r3, #1]
 80128c4:	9707      	str	r7, [sp, #28]
 80128c6:	2300      	movs	r3, #0
 80128c8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80128cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80128d0:	f88d 1020 	strb.w	r1, [sp, #32]
 80128d4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80128d8:	9509      	str	r5, [sp, #36]	; 0x24
 80128da:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80128de:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80128e2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80128e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80128ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80128ee:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80128f2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80128f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80128fa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80128fe:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012902:	b350      	cbz	r0, 801295a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012904:	682b      	ldr	r3, [r5, #0]
 8012906:	4628      	mov	r0, r5
 8012908:	695b      	ldr	r3, [r3, #20]
 801290a:	4798      	blx	r3
 801290c:	4607      	mov	r7, r0
 801290e:	b320      	cbz	r0, 801295a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012910:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012912:	6803      	ldr	r3, [r0, #0]
 8012914:	4639      	mov	r1, r7
 8012916:	68db      	ldr	r3, [r3, #12]
 8012918:	4798      	blx	r3
 801291a:	4606      	mov	r6, r0
 801291c:	b1e8      	cbz	r0, 801295a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801291e:	7b43      	ldrb	r3, [r0, #13]
 8012920:	7a82      	ldrb	r2, [r0, #10]
 8012922:	005b      	lsls	r3, r3, #1
 8012924:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012928:	4313      	orrs	r3, r2
 801292a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801292e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012932:	2b06      	cmp	r3, #6
 8012934:	d111      	bne.n	801295a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012936:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012938:	6803      	ldr	r3, [r0, #0]
 801293a:	4632      	mov	r2, r6
 801293c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801293e:	4639      	mov	r1, r7
 8012940:	4798      	blx	r3
 8012942:	7b73      	ldrb	r3, [r6, #13]
 8012944:	005b      	lsls	r3, r3, #1
 8012946:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801294a:	7ab3      	ldrb	r3, [r6, #10]
 801294c:	4313      	orrs	r3, r2
 801294e:	4418      	add	r0, r3
 8012950:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012954:	4418      	add	r0, r3
 8012956:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801295a:	2600      	movs	r6, #0
 801295c:	4637      	mov	r7, r6
 801295e:	a806      	add	r0, sp, #24
 8012960:	f002 fc6c 	bl	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012964:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012968:	9b03      	ldr	r3, [sp, #12]
 801296a:	4286      	cmp	r6, r0
 801296c:	eba9 0903 	sub.w	r9, r9, r3
 8012970:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012974:	bfb8      	it	lt
 8012976:	4606      	movlt	r6, r0
 8012978:	3701      	adds	r7, #1
 801297a:	b236      	sxth	r6, r6
 801297c:	b2bf      	uxth	r7, r7
 801297e:	fa0f f989 	sxth.w	r9, r9
 8012982:	2b00      	cmp	r3, #0
 8012984:	f43f af0d 	beq.w	80127a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012988:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801298c:	2b00      	cmp	r3, #0
 801298e:	f47f af08 	bne.w	80127a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012992:	7a2b      	ldrb	r3, [r5, #8]
 8012994:	444b      	add	r3, r9
 8012996:	2b00      	cmp	r3, #0
 8012998:	dce1      	bgt.n	801295e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801299a:	e702      	b.n	80127a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801299c:	20012e00 	.word	0x20012e00
 80129a0:	20012dfc 	.word	0x20012dfc
 80129a4:	20012e04 	.word	0x20012e04
 80129a8:	20012e08 	.word	0x20012e08
 80129ac:	ebaa 0606 	sub.w	r6, sl, r6
 80129b0:	2002      	movs	r0, #2
 80129b2:	fb96 f6f0 	sdiv	r6, r6, r0
 80129b6:	e71d      	b.n	80127f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80129b8:	441e      	add	r6, r3
 80129ba:	ebaa 0606 	sub.w	r6, sl, r6
 80129be:	e719      	b.n	80127f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80129c0:	8925      	ldrh	r5, [r4, #8]
 80129c2:	1aed      	subs	r5, r5, r3
 80129c4:	eba5 050a 	sub.w	r5, r5, sl
 80129c8:	fa0f fb85 	sxth.w	fp, r5
 80129cc:	8965      	ldrh	r5, [r4, #10]
 80129ce:	eba5 0509 	sub.w	r5, r5, r9
 80129d2:	b22d      	sxth	r5, r5
 80129d4:	e72e      	b.n	8012834 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80129d6:	8965      	ldrh	r5, [r4, #10]
 80129d8:	1aed      	subs	r5, r5, r3
 80129da:	eba5 050a 	sub.w	r5, r5, sl
 80129de:	4633      	mov	r3, r6
 80129e0:	b22d      	sxth	r5, r5
 80129e2:	463e      	mov	r6, r7
 80129e4:	f04f 0b00 	mov.w	fp, #0
 80129e8:	461f      	mov	r7, r3
 80129ea:	e723      	b.n	8012834 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80129ec:	2500      	movs	r5, #0
 80129ee:	e721      	b.n	8012834 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080129f0 <_ZN8touchgfx8TextAreaD0Ev>:
 80129f0:	b510      	push	{r4, lr}
 80129f2:	2148      	movs	r1, #72	; 0x48
 80129f4:	4604      	mov	r4, r0
 80129f6:	f017 fa7e 	bl	8029ef6 <_ZdlPvj>
 80129fa:	4620      	mov	r0, r4
 80129fc:	bd10      	pop	{r4, pc}
	...

08012a00 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012a00:	b513      	push	{r0, r1, r4, lr}
 8012a02:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012a06:	4604      	mov	r4, r0
 8012a08:	b1fb      	cbz	r3, 8012a4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a0a:	4b16      	ldr	r3, [pc, #88]	; (8012a64 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012a0c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012a0e:	881b      	ldrh	r3, [r3, #0]
 8012a10:	428b      	cmp	r3, r1
 8012a12:	d91a      	bls.n	8012a4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a14:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012a18:	2b00      	cmp	r3, #0
 8012a1a:	dd16      	ble.n	8012a4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a1c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012a20:	2b00      	cmp	r3, #0
 8012a22:	dd12      	ble.n	8012a4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a24:	4b10      	ldr	r3, [pc, #64]	; (8012a68 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012a26:	6818      	ldr	r0, [r3, #0]
 8012a28:	f7f6 fbc4 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8012a2c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012a30:	6822      	ldr	r2, [r4, #0]
 8012a32:	2b00      	cmp	r3, #0
 8012a34:	db06      	blt.n	8012a44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012a36:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012a3a:	2b00      	cmp	r3, #0
 8012a3c:	db02      	blt.n	8012a44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012a3e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012a40:	4298      	cmp	r0, r3
 8012a42:	d004      	beq.n	8012a4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012a44:	6953      	ldr	r3, [r2, #20]
 8012a46:	4620      	mov	r0, r4
 8012a48:	4798      	blx	r3
 8012a4a:	b002      	add	sp, #8
 8012a4c:	bd10      	pop	{r4, pc}
 8012a4e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012a52:	c903      	ldmia	r1, {r0, r1}
 8012a54:	466b      	mov	r3, sp
 8012a56:	e883 0003 	stmia.w	r3, {r0, r1}
 8012a5a:	6912      	ldr	r2, [r2, #16]
 8012a5c:	4619      	mov	r1, r3
 8012a5e:	4620      	mov	r0, r4
 8012a60:	4790      	blx	r2
 8012a62:	e7f2      	b.n	8012a4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a64:	20012e00 	.word	0x20012e00
 8012a68:	20012e08 	.word	0x20012e08

08012a6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012a6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a70:	4b44      	ldr	r3, [pc, #272]	; (8012b84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012a72:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012a74:	881b      	ldrh	r3, [r3, #0]
 8012a76:	4293      	cmp	r3, r2
 8012a78:	b08e      	sub	sp, #56	; 0x38
 8012a7a:	4604      	mov	r4, r0
 8012a7c:	d97e      	bls.n	8012b7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012a7e:	6808      	ldr	r0, [r1, #0]
 8012a80:	4d41      	ldr	r5, [pc, #260]	; (8012b88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012a82:	6849      	ldr	r1, [r1, #4]
 8012a84:	ab05      	add	r3, sp, #20
 8012a86:	c303      	stmia	r3!, {r0, r1}
 8012a88:	4611      	mov	r1, r2
 8012a8a:	6828      	ldr	r0, [r5, #0]
 8012a8c:	f7f6 fb92 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8012a90:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012a94:	2b00      	cmp	r3, #0
 8012a96:	db11      	blt.n	8012abc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012a98:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012a9c:	2b00      	cmp	r3, #0
 8012a9e:	db0d      	blt.n	8012abc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012aa0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012aa2:	4298      	cmp	r0, r3
 8012aa4:	d10a      	bne.n	8012abc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012aa6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012aaa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012aae:	ab09      	add	r3, sp, #36	; 0x24
 8012ab0:	e883 0003 	stmia.w	r3, {r0, r1}
 8012ab4:	4619      	mov	r1, r3
 8012ab6:	a805      	add	r0, sp, #20
 8012ab8:	f7fe f860 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8012abc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012ac0:	2b00      	cmp	r3, #0
 8012ac2:	dd5b      	ble.n	8012b7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012ac4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012ac8:	2b00      	cmp	r3, #0
 8012aca:	dd57      	ble.n	8012b7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012acc:	4f2f      	ldr	r7, [pc, #188]	; (8012b8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012ace:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012ad0:	683b      	ldr	r3, [r7, #0]
 8012ad2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012ad6:	4b2e      	ldr	r3, [pc, #184]	; (8012b90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012ad8:	681b      	ldr	r3, [r3, #0]
 8012ada:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012ade:	2e00      	cmp	r6, #0
 8012ae0:	d04c      	beq.n	8012b7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012ae2:	6823      	ldr	r3, [r4, #0]
 8012ae4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012ae8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012aea:	4620      	mov	r0, r4
 8012aec:	4798      	blx	r3
 8012aee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012af0:	683b      	ldr	r3, [r7, #0]
 8012af2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012af6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012afa:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012afe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012b00:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012b04:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012b08:	785b      	ldrb	r3, [r3, #1]
 8012b0a:	9609      	str	r6, [sp, #36]	; 0x24
 8012b0c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012b10:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012b14:	4b1f      	ldr	r3, [pc, #124]	; (8012b94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012b16:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012b1a:	681b      	ldr	r3, [r3, #0]
 8012b1c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012b20:	910b      	str	r1, [sp, #44]	; 0x2c
 8012b22:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012b26:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012b2a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012b2e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012b32:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012b36:	b10a      	cbz	r2, 8012b3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012b38:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012b3a:	b906      	cbnz	r6, 8012b3e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012b3c:	689e      	ldr	r6, [r3, #8]
 8012b3e:	af07      	add	r7, sp, #28
 8012b40:	4621      	mov	r1, r4
 8012b42:	4638      	mov	r0, r7
 8012b44:	f004 fab0 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012b4a:	6828      	ldr	r0, [r5, #0]
 8012b4c:	f7f6 fb32 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 8012b50:	6823      	ldr	r3, [r4, #0]
 8012b52:	4605      	mov	r5, r0
 8012b54:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012b56:	4620      	mov	r0, r4
 8012b58:	4798      	blx	r3
 8012b5a:	6823      	ldr	r3, [r4, #0]
 8012b5c:	4680      	mov	r8, r0
 8012b5e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012b62:	4620      	mov	r0, r4
 8012b64:	4798      	blx	r3
 8012b66:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012b6a:	ab09      	add	r3, sp, #36	; 0x24
 8012b6c:	9300      	str	r3, [sp, #0]
 8012b6e:	9501      	str	r5, [sp, #4]
 8012b70:	ab05      	add	r3, sp, #20
 8012b72:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012b76:	4630      	mov	r0, r6
 8012b78:	f7f6 face 	bl	8009118 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012b7c:	b00e      	add	sp, #56	; 0x38
 8012b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b82:	bf00      	nop
 8012b84:	20012e00 	.word	0x20012e00
 8012b88:	20012e08 	.word	0x20012e08
 8012b8c:	20012dfc 	.word	0x20012dfc
 8012b90:	20012e04 	.word	0x20012e04
 8012b94:	20012da4 	.word	0x20012da4

08012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012b98:	b538      	push	{r3, r4, r5, lr}
 8012b9a:	4b0e      	ldr	r3, [pc, #56]	; (8012bd4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012b9c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012b9e:	881b      	ldrh	r3, [r3, #0]
 8012ba0:	429a      	cmp	r2, r3
 8012ba2:	4604      	mov	r4, r0
 8012ba4:	d214      	bcs.n	8012bd0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012ba6:	6803      	ldr	r3, [r0, #0]
 8012ba8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012baa:	4798      	blx	r3
 8012bac:	6823      	ldr	r3, [r4, #0]
 8012bae:	4605      	mov	r5, r0
 8012bb0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012bb2:	4620      	mov	r0, r4
 8012bb4:	4798      	blx	r3
 8012bb6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012bba:	b22d      	sxth	r5, r5
 8012bbc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012bc0:	4601      	mov	r1, r0
 8012bc2:	bf06      	itte	eq
 8012bc4:	4602      	moveq	r2, r0
 8012bc6:	4629      	moveq	r1, r5
 8012bc8:	462a      	movne	r2, r5
 8012bca:	4620      	mov	r0, r4
 8012bcc:	f7fd fdb6 	bl	801073c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012bd0:	bd38      	pop	{r3, r4, r5, pc}
 8012bd2:	bf00      	nop
 8012bd4:	20012e00 	.word	0x20012e00

08012bd8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012bd8:	b530      	push	{r4, r5, lr}
 8012bda:	888b      	ldrh	r3, [r1, #4]
 8012bdc:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012bde:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012be2:	b085      	sub	sp, #20
 8012be4:	4604      	mov	r4, r0
 8012be6:	b923      	cbnz	r3, 8012bf2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012be8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012bec:	b90b      	cbnz	r3, 8012bf2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012bee:	f7ff ffd3 	bl	8012b98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012bf2:	6823      	ldr	r3, [r4, #0]
 8012bf4:	466d      	mov	r5, sp
 8012bf6:	4621      	mov	r1, r4
 8012bf8:	4628      	mov	r0, r5
 8012bfa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012bfe:	4798      	blx	r3
 8012c00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012c04:	343c      	adds	r4, #60	; 0x3c
 8012c06:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012c0a:	b005      	add	sp, #20
 8012c0c:	bd30      	pop	{r4, r5, pc}

08012c0e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012c0e:	2300      	movs	r3, #0
 8012c10:	8083      	strh	r3, [r0, #4]
 8012c12:	80c3      	strh	r3, [r0, #6]
 8012c14:	8003      	strh	r3, [r0, #0]
 8012c16:	8043      	strh	r3, [r0, #2]
 8012c18:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012c1c:	2bff      	cmp	r3, #255	; 0xff
 8012c1e:	bf01      	itttt	eq
 8012c20:	890b      	ldrheq	r3, [r1, #8]
 8012c22:	8083      	strheq	r3, [r0, #4]
 8012c24:	894b      	ldrheq	r3, [r1, #10]
 8012c26:	80c3      	strheq	r3, [r0, #6]
 8012c28:	4770      	bx	lr
	...

08012c2c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012c2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c2e:	4604      	mov	r4, r0
 8012c30:	6808      	ldr	r0, [r1, #0]
 8012c32:	6849      	ldr	r1, [r1, #4]
 8012c34:	466b      	mov	r3, sp
 8012c36:	c303      	stmia	r3!, {r0, r1}
 8012c38:	6823      	ldr	r3, [r4, #0]
 8012c3a:	4669      	mov	r1, sp
 8012c3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c3e:	4620      	mov	r0, r4
 8012c40:	4798      	blx	r3
 8012c42:	4b08      	ldr	r3, [pc, #32]	; (8012c64 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012c44:	681b      	ldr	r3, [r3, #0]
 8012c46:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012c4a:	b10a      	cbz	r2, 8012c50 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012c4c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012c4e:	b900      	cbnz	r0, 8012c52 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012c50:	6898      	ldr	r0, [r3, #8]
 8012c52:	6803      	ldr	r3, [r0, #0]
 8012c54:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012c56:	6a1d      	ldr	r5, [r3, #32]
 8012c58:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012c5c:	4669      	mov	r1, sp
 8012c5e:	47a8      	blx	r5
 8012c60:	b003      	add	sp, #12
 8012c62:	bd30      	pop	{r4, r5, pc}
 8012c64:	20012da4 	.word	0x20012da4

08012c68 <_ZN8touchgfx3BoxD1Ev>:
 8012c68:	4770      	bx	lr

08012c6a <_ZN8touchgfx3BoxD0Ev>:
 8012c6a:	b510      	push	{r4, lr}
 8012c6c:	212c      	movs	r1, #44	; 0x2c
 8012c6e:	4604      	mov	r4, r0
 8012c70:	f017 f941 	bl	8029ef6 <_ZdlPvj>
 8012c74:	4620      	mov	r0, r4
 8012c76:	bd10      	pop	{r4, pc}

08012c78 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012c78:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012c7c:	b12a      	cbz	r2, 8012c8a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012c7e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012c82:	b112      	cbz	r2, 8012c8a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012c84:	6803      	ldr	r3, [r0, #0]
 8012c86:	695b      	ldr	r3, [r3, #20]
 8012c88:	4718      	bx	r3
 8012c8a:	4770      	bx	lr

08012c8c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012c8c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012c90:	600b      	str	r3, [r1, #0]
 8012c92:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012c96:	6013      	str	r3, [r2, #0]
 8012c98:	4770      	bx	lr

08012c9a <_ZN8touchgfx5Gauge8setWidthEs>:
 8012c9a:	8101      	strh	r1, [r0, #8]
 8012c9c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012ca0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012ca4:	4770      	bx	lr

08012ca6 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012ca6:	8141      	strh	r1, [r0, #10]
 8012ca8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012cac:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012cb0:	4770      	bx	lr

08012cb2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012cb2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012cb6:	4770      	bx	lr

08012cb8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012cb8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012cbc:	4770      	bx	lr

08012cbe <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012cbe:	4770      	bx	lr

08012cc0 <_ZN8touchgfx5GaugeD1Ev>:
 8012cc0:	4770      	bx	lr

08012cc2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012cc2:	b538      	push	{r3, r4, r5, lr}
 8012cc4:	4604      	mov	r4, r0
 8012cc6:	460d      	mov	r5, r1
 8012cc8:	f7fd fc51 	bl	801056e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012ccc:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012cd0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012cd4:	bd38      	pop	{r3, r4, r5, pc}

08012cd6 <_ZN8touchgfx5GaugeD0Ev>:
 8012cd6:	b510      	push	{r4, lr}
 8012cd8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012cdc:	4604      	mov	r4, r0
 8012cde:	f017 f90a 	bl	8029ef6 <_ZdlPvj>
 8012ce2:	4620      	mov	r0, r4
 8012ce4:	bd10      	pop	{r4, pc}

08012ce6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012ce6:	b510      	push	{r4, lr}
 8012ce8:	6803      	ldr	r3, [r0, #0]
 8012cea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012cee:	4604      	mov	r4, r0
 8012cf0:	4798      	blx	r3
 8012cf2:	b170      	cbz	r0, 8012d12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012cf4:	6823      	ldr	r3, [r4, #0]
 8012cf6:	4620      	mov	r0, r4
 8012cf8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012cfc:	4798      	blx	r3
 8012cfe:	b140      	cbz	r0, 8012d12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012d00:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012d04:	b12b      	cbz	r3, 8012d12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012d06:	6823      	ldr	r3, [r4, #0]
 8012d08:	4620      	mov	r0, r4
 8012d0a:	695b      	ldr	r3, [r3, #20]
 8012d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d10:	4718      	bx	r3
 8012d12:	bd10      	pop	{r4, pc}

08012d14 <_ZN8touchgfx5GaugeC1Ev>:
 8012d14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012d16:	4604      	mov	r4, r0
 8012d18:	4626      	mov	r6, r4
 8012d1a:	f7fd fd49 	bl	80107b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012d1e:	4b18      	ldr	r3, [pc, #96]	; (8012d80 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012d20:	f846 3bb4 	str.w	r3, [r6], #180
 8012d24:	a902      	add	r1, sp, #8
 8012d26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012d2a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012d2e:	4630      	mov	r0, r6
 8012d30:	f015 f970 	bl	8028014 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012d34:	2500      	movs	r5, #0
 8012d36:	2301      	movs	r3, #1
 8012d38:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012d3c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012d40:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012d44:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012d48:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012d4c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012d50:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012d54:	4638      	mov	r0, r7
 8012d56:	f014 fba1 	bl	802749c <_ZN8touchgfx6CircleC1Ev>
 8012d5a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012d5e:	4620      	mov	r0, r4
 8012d60:	f7fd fdc7 	bl	80108f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012d64:	4639      	mov	r1, r7
 8012d66:	4620      	mov	r0, r4
 8012d68:	f7fd fd82 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012d6c:	4620      	mov	r0, r4
 8012d6e:	4631      	mov	r1, r6
 8012d70:	f7fd fd7e 	bl	8010870 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012d74:	4620      	mov	r0, r4
 8012d76:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012d7a:	b003      	add	sp, #12
 8012d7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d7e:	bf00      	nop
 8012d80:	0802f280 	.word	0x0802f280

08012d84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012d84:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012d88:	4770      	bx	lr

08012d8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012d8a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012d8e:	4770      	bx	lr

08012d90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012d90:	b538      	push	{r3, r4, r5, lr}
 8012d92:	8902      	ldrh	r2, [r0, #8]
 8012d94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012d98:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012d9c:	4604      	mov	r4, r0
 8012d9e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012da2:	2200      	movs	r2, #0
 8012da4:	4611      	mov	r1, r2
 8012da6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012daa:	4628      	mov	r0, r5
 8012dac:	f7f0 fa1f 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 8012db0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012db4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012db8:	1a9b      	subs	r3, r3, r2
 8012dba:	ee07 3a90 	vmov	s15, r3
 8012dbe:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012dc2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012dc6:	1a9b      	subs	r3, r3, r2
 8012dc8:	ee07 3a10 	vmov	s14, r3
 8012dcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012dd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dd4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012dd8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012ddc:	4628      	mov	r0, r5
 8012dde:	f015 f965 	bl	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012de2:	4b16      	ldr	r3, [pc, #88]	; (8012e3c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012de4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012de8:	4628      	mov	r0, r5
 8012dea:	f015 f95f 	bl	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012dee:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012df2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012df6:	ee07 3a90 	vmov	s15, r3
 8012dfa:	ee07 2a10 	vmov	s14, r2
 8012dfe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e06:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012e0a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012e0e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012e12:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012e16:	4628      	mov	r0, r5
 8012e18:	f015 f948 	bl	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012e1c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012e20:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012e24:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012e28:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012e2c:	4628      	mov	r0, r5
 8012e2e:	f015 f93d 	bl	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012e32:	2301      	movs	r3, #1
 8012e34:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012e38:	bd38      	pop	{r3, r4, r5, pc}
 8012e3a:	bf00      	nop
 8012e3c:	43960000 	.word	0x43960000

08012e40 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012e40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e42:	4604      	mov	r4, r0
 8012e44:	a802      	add	r0, sp, #8
 8012e46:	4616      	mov	r6, r2
 8012e48:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012e4c:	461d      	mov	r5, r3
 8012e4e:	4601      	mov	r1, r0
 8012e50:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012e54:	f015 fa80 	bl	8028358 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012e58:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012e5c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012e60:	4620      	mov	r0, r4
 8012e62:	f7ff ff95 	bl	8012d90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012e66:	b002      	add	sp, #8
 8012e68:	bd70      	pop	{r4, r5, r6, pc}

08012e6a <_ZN8touchgfx5Gauge9setCenterEii>:
 8012e6a:	b570      	push	{r4, r5, r6, lr}
 8012e6c:	4606      	mov	r6, r0
 8012e6e:	460d      	mov	r5, r1
 8012e70:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012e74:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012e78:	4614      	mov	r4, r2
 8012e7a:	f7ff ff89 	bl	8012d90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012e7e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012e82:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012e86:	1aa4      	subs	r4, r4, r2
 8012e88:	1a6d      	subs	r5, r5, r1
 8012e8a:	0164      	lsls	r4, r4, #5
 8012e8c:	016d      	lsls	r5, r5, #5
 8012e8e:	3410      	adds	r4, #16
 8012e90:	3510      	adds	r5, #16
 8012e92:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012e96:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012e9a:	bd70      	pop	{r4, r5, r6, pc}

08012e9c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012e9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012e9e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012ea0:	0149      	lsls	r1, r1, #5
 8012ea2:	4299      	cmp	r1, r3
 8012ea4:	4604      	mov	r4, r0
 8012ea6:	9101      	str	r1, [sp, #4]
 8012ea8:	d00b      	beq.n	8012ec2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012eaa:	4601      	mov	r1, r0
 8012eac:	aa01      	add	r2, sp, #4
 8012eae:	a802      	add	r0, sp, #8
 8012eb0:	f014 fcf2 	bl	8027898 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012eb4:	9b01      	ldr	r3, [sp, #4]
 8012eb6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012eb8:	6823      	ldr	r3, [r4, #0]
 8012eba:	a902      	add	r1, sp, #8
 8012ebc:	691b      	ldr	r3, [r3, #16]
 8012ebe:	4620      	mov	r0, r4
 8012ec0:	4798      	blx	r3
 8012ec2:	b004      	add	sp, #16
 8012ec4:	bd10      	pop	{r4, pc}
	...

08012ec8 <_ZN8touchgfx5Gauge8setValueEi>:
 8012ec8:	b570      	push	{r4, r5, r6, lr}
 8012eca:	4604      	mov	r4, r0
 8012ecc:	f7fd fba2 	bl	8010614 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012ed0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012ed4:	429a      	cmp	r2, r3
 8012ed6:	bfac      	ite	ge
 8012ed8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012edc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012ee0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012ee4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012ee8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012eec:	1ac9      	subs	r1, r1, r3
 8012eee:	2900      	cmp	r1, #0
 8012ef0:	bfb8      	it	lt
 8012ef2:	4249      	neglt	r1, r1
 8012ef4:	b289      	uxth	r1, r1
 8012ef6:	4620      	mov	r0, r4
 8012ef8:	f7fd fbae 	bl	8010658 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012efc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012f00:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012f04:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012f6c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012f08:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012f70 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012f0c:	429a      	cmp	r2, r3
 8012f0e:	4605      	mov	r5, r0
 8012f10:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012f14:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012f18:	da15      	bge.n	8012f46 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012f1a:	1b5b      	subs	r3, r3, r5
 8012f1c:	ee07 3a90 	vmov	s15, r3
 8012f20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f24:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012f28:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012f2c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012f30:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012f34:	f015 f829 	bl	8027f8a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012f38:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012f3c:	1b49      	subs	r1, r1, r5
 8012f3e:	4630      	mov	r0, r6
 8012f40:	f7ff ffac 	bl	8012e9c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012f44:	bd70      	pop	{r4, r5, r6, pc}
 8012f46:	442b      	add	r3, r5
 8012f48:	ee07 3a90 	vmov	s15, r3
 8012f4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f50:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012f54:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012f58:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012f5c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012f60:	f015 f813 	bl	8027f8a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012f64:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012f68:	4429      	add	r1, r5
 8012f6a:	e7e8      	b.n	8012f3e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012f6c:	43340000 	.word	0x43340000
 8012f70:	40490fdb 	.word	0x40490fdb

08012f74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012f74:	b510      	push	{r4, lr}
 8012f76:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012f7a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012f7e:	0149      	lsls	r1, r1, #5
 8012f80:	0152      	lsls	r2, r2, #5
 8012f82:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012f86:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012f8a:	4604      	mov	r4, r0
 8012f8c:	f7fd faec 	bl	8010568 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012f90:	4601      	mov	r1, r0
 8012f92:	4620      	mov	r0, r4
 8012f94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f98:	f7ff bf96 	b.w	8012ec8 <_ZN8touchgfx5Gauge8setValueEi>

08012f9c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012f9c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012fa0:	4770      	bx	lr

08012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012fa2:	b570      	push	{r4, r5, r6, lr}
 8012fa4:	880b      	ldrh	r3, [r1, #0]
 8012fa6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012fa8:	4605      	mov	r5, r0
 8012faa:	8813      	ldrh	r3, [r2, #0]
 8012fac:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012fb0:	4604      	mov	r4, r0
 8012fb2:	4628      	mov	r0, r5
 8012fb4:	f006 fb06 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012fb8:	4606      	mov	r6, r0
 8012fba:	4628      	mov	r0, r5
 8012fbc:	f006 fb36 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012fc0:	6823      	ldr	r3, [r4, #0]
 8012fc2:	4605      	mov	r5, r0
 8012fc4:	4631      	mov	r1, r6
 8012fc6:	4620      	mov	r0, r4
 8012fc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012fca:	4798      	blx	r3
 8012fcc:	6823      	ldr	r3, [r4, #0]
 8012fce:	4629      	mov	r1, r5
 8012fd0:	4620      	mov	r0, r4
 8012fd2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012fd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012fd8:	4718      	bx	r3

08012fda <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012fda:	b510      	push	{r4, lr}
 8012fdc:	4604      	mov	r4, r0
 8012fde:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012fe0:	b150      	cbz	r0, 8012ff8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012fe2:	6803      	ldr	r3, [r0, #0]
 8012fe4:	68db      	ldr	r3, [r3, #12]
 8012fe6:	4798      	blx	r3
 8012fe8:	b130      	cbz	r0, 8012ff8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012fea:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012fec:	6803      	ldr	r3, [r0, #0]
 8012fee:	4621      	mov	r1, r4
 8012ff0:	689b      	ldr	r3, [r3, #8]
 8012ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ff6:	4718      	bx	r3
 8012ff8:	bd10      	pop	{r4, pc}

08012ffa <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012ffa:	b510      	push	{r4, lr}
 8012ffc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013000:	2bff      	cmp	r3, #255	; 0xff
 8013002:	4604      	mov	r4, r0
 8013004:	d006      	beq.n	8013014 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013006:	2300      	movs	r3, #0
 8013008:	8003      	strh	r3, [r0, #0]
 801300a:	8043      	strh	r3, [r0, #2]
 801300c:	8083      	strh	r3, [r0, #4]
 801300e:	80c3      	strh	r3, [r0, #6]
 8013010:	4620      	mov	r0, r4
 8013012:	bd10      	pop	{r4, pc}
 8013014:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013018:	b11b      	cbz	r3, 8013022 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801301a:	3130      	adds	r1, #48	; 0x30
 801301c:	f006 fb3a 	bl	8019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013020:	e7f6      	b.n	8013010 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013022:	312e      	adds	r1, #46	; 0x2e
 8013024:	e7fa      	b.n	801301c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013028 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013028:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801302c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013030:	b08a      	sub	sp, #40	; 0x28
 8013032:	4604      	mov	r4, r0
 8013034:	4688      	mov	r8, r1
 8013036:	2b00      	cmp	r3, #0
 8013038:	d066      	beq.n	8013108 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801303a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801303c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013040:	a805      	add	r0, sp, #20
 8013042:	f006 fabf 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013046:	4607      	mov	r7, r0
 8013048:	a805      	add	r0, sp, #20
 801304a:	f006 faef 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801304e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013052:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013056:	4432      	add	r2, r6
 8013058:	b292      	uxth	r2, r2
 801305a:	2300      	movs	r3, #0
 801305c:	fa0f fc82 	sxth.w	ip, r2
 8013060:	459c      	cmp	ip, r3
 8013062:	9306      	str	r3, [sp, #24]
 8013064:	dd52      	ble.n	801310c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013066:	42b7      	cmp	r7, r6
 8013068:	dd50      	ble.n	801310c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801306a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801306e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013072:	442b      	add	r3, r5
 8013074:	b29b      	uxth	r3, r3
 8013076:	b219      	sxth	r1, r3
 8013078:	2900      	cmp	r1, #0
 801307a:	dd47      	ble.n	801310c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801307c:	42a8      	cmp	r0, r5
 801307e:	dd45      	ble.n	801310c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013080:	4567      	cmp	r7, ip
 8013082:	bfb8      	it	lt
 8013084:	b2ba      	uxthlt	r2, r7
 8013086:	4288      	cmp	r0, r1
 8013088:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801308c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013090:	bfb8      	it	lt
 8013092:	b283      	uxthlt	r3, r0
 8013094:	1b92      	subs	r2, r2, r6
 8013096:	1b5b      	subs	r3, r3, r5
 8013098:	f8ad 201c 	strh.w	r2, [sp, #28]
 801309c:	f8ad 301e 	strh.w	r3, [sp, #30]
 80130a0:	f8ad 6018 	strh.w	r6, [sp, #24]
 80130a4:	f8ad 501a 	strh.w	r5, [sp, #26]
 80130a8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80130ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80130b0:	429a      	cmp	r2, r3
 80130b2:	d026      	beq.n	8013102 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80130b4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80130b8:	2b00      	cmp	r3, #0
 80130ba:	dd22      	ble.n	8013102 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80130bc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80130c0:	2b00      	cmp	r3, #0
 80130c2:	dd1e      	ble.n	8013102 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80130c4:	2300      	movs	r3, #0
 80130c6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80130ca:	6823      	ldr	r3, [r4, #0]
 80130cc:	a908      	add	r1, sp, #32
 80130ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130d0:	4620      	mov	r0, r4
 80130d2:	4798      	blx	r3
 80130d4:	4b0f      	ldr	r3, [pc, #60]	; (8013114 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80130d6:	681b      	ldr	r3, [r3, #0]
 80130d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80130dc:	b10a      	cbz	r2, 80130e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80130de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80130e0:	b900      	cbnz	r0, 80130e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80130e2:	6898      	ldr	r0, [r3, #8]
 80130e4:	6801      	ldr	r1, [r0, #0]
 80130e6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80130ea:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80130ee:	2501      	movs	r5, #1
 80130f0:	9502      	str	r5, [sp, #8]
 80130f2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80130f6:	9401      	str	r4, [sp, #4]
 80130f8:	ac06      	add	r4, sp, #24
 80130fa:	9400      	str	r4, [sp, #0]
 80130fc:	688c      	ldr	r4, [r1, #8]
 80130fe:	a905      	add	r1, sp, #20
 8013100:	47a0      	blx	r4
 8013102:	b00a      	add	sp, #40	; 0x28
 8013104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013108:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801310a:	e797      	b.n	801303c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801310c:	2300      	movs	r3, #0
 801310e:	9307      	str	r3, [sp, #28]
 8013110:	e7ca      	b.n	80130a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013112:	bf00      	nop
 8013114:	20012da4 	.word	0x20012da4

08013118 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013118:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801311c:	b12a      	cbz	r2, 801312a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801311e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013122:	b112      	cbz	r2, 801312a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013124:	6803      	ldr	r3, [r0, #0]
 8013126:	695b      	ldr	r3, [r3, #20]
 8013128:	4718      	bx	r3
 801312a:	4770      	bx	lr

0801312c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801312c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013130:	4b2f      	ldr	r3, [pc, #188]	; (80131f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013132:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013134:	881b      	ldrh	r3, [r3, #0]
 8013136:	4293      	cmp	r3, r2
 8013138:	b08d      	sub	sp, #52	; 0x34
 801313a:	4604      	mov	r4, r0
 801313c:	460f      	mov	r7, r1
 801313e:	d954      	bls.n	80131ea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013140:	4b2c      	ldr	r3, [pc, #176]	; (80131f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013142:	6819      	ldr	r1, [r3, #0]
 8013144:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013148:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801314c:	4a2a      	ldr	r2, [pc, #168]	; (80131f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801314e:	6812      	ldr	r2, [r2, #0]
 8013150:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013154:	2900      	cmp	r1, #0
 8013156:	d048      	beq.n	80131ea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013158:	785a      	ldrb	r2, [r3, #1]
 801315a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801315e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013162:	4b26      	ldr	r3, [pc, #152]	; (80131fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013164:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013168:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801316c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013170:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013172:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8013176:	9107      	str	r1, [sp, #28]
 8013178:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801317c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013180:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013184:	681a      	ldr	r2, [r3, #0]
 8013186:	f88d 8020 	strb.w	r8, [sp, #32]
 801318a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801318e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013192:	9609      	str	r6, [sp, #36]	; 0x24
 8013194:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013198:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801319c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80131a0:	b10b      	cbz	r3, 80131a6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80131a2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80131a4:	b905      	cbnz	r5, 80131a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80131a6:	6895      	ldr	r5, [r2, #8]
 80131a8:	ae05      	add	r6, sp, #20
 80131aa:	4621      	mov	r1, r4
 80131ac:	4630      	mov	r0, r6
 80131ae:	f003 ff7b 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80131b2:	4b13      	ldr	r3, [pc, #76]	; (8013200 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80131b4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80131b6:	6818      	ldr	r0, [r3, #0]
 80131b8:	f7f5 fffc 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80131bc:	6823      	ldr	r3, [r4, #0]
 80131be:	4680      	mov	r8, r0
 80131c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80131c2:	4620      	mov	r0, r4
 80131c4:	4798      	blx	r3
 80131c6:	6823      	ldr	r3, [r4, #0]
 80131c8:	4681      	mov	r9, r0
 80131ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80131ce:	4620      	mov	r0, r4
 80131d0:	4798      	blx	r3
 80131d2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80131d6:	ab07      	add	r3, sp, #28
 80131d8:	9300      	str	r3, [sp, #0]
 80131da:	f8cd 8004 	str.w	r8, [sp, #4]
 80131de:	463b      	mov	r3, r7
 80131e0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80131e4:	4628      	mov	r0, r5
 80131e6:	f7f5 ff97 	bl	8009118 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80131ea:	b00d      	add	sp, #52	; 0x34
 80131ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80131f0:	20012e00 	.word	0x20012e00
 80131f4:	20012dfc 	.word	0x20012dfc
 80131f8:	20012e04 	.word	0x20012e04
 80131fc:	20012da4 	.word	0x20012da4
 8013200:	20012e08 	.word	0x20012e08

08013204 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013204:	4770      	bx	lr

08013206 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013206:	4770      	bx	lr

08013208 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013208:	b510      	push	{r4, lr}
 801320a:	213c      	movs	r1, #60	; 0x3c
 801320c:	4604      	mov	r4, r0
 801320e:	f016 fe72 	bl	8029ef6 <_ZdlPvj>
 8013212:	4620      	mov	r0, r4
 8013214:	bd10      	pop	{r4, pc}

08013216 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013216:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801321a:	461c      	mov	r4, r3
 801321c:	4606      	mov	r6, r0
 801321e:	9f06      	ldr	r7, [sp, #24]
 8013220:	f7ff febf 	bl	8012fa2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013224:	8823      	ldrh	r3, [r4, #0]
 8013226:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013228:	883b      	ldrh	r3, [r7, #0]
 801322a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801322c:	4638      	mov	r0, r7
 801322e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013232:	f006 f9c7 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013236:	f04f 0802 	mov.w	r8, #2
 801323a:	fb95 f5f8 	sdiv	r5, r5, r8
 801323e:	b2ad      	uxth	r5, r5
 8013240:	fb90 f0f8 	sdiv	r0, r0, r8
 8013244:	1a2d      	subs	r5, r5, r0
 8013246:	8735      	strh	r5, [r6, #56]	; 0x38
 8013248:	4638      	mov	r0, r7
 801324a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801324e:	fb94 f4f8 	sdiv	r4, r4, r8
 8013252:	f006 f9eb 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013256:	b2a4      	uxth	r4, r4
 8013258:	fb90 f0f8 	sdiv	r0, r0, r8
 801325c:	1a24      	subs	r4, r4, r0
 801325e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013264 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013268:	4604      	mov	r4, r0
 801326a:	b08c      	sub	sp, #48	; 0x30
 801326c:	460d      	mov	r5, r1
 801326e:	f7ff fedb 	bl	8013028 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013272:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013276:	2b00      	cmp	r3, #0
 8013278:	d05d      	beq.n	8013336 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801327a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801327c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013280:	a805      	add	r0, sp, #20
 8013282:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013286:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801328a:	f006 f99b 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801328e:	4606      	mov	r6, r0
 8013290:	a805      	add	r0, sp, #20
 8013292:	f006 f9cb 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013296:	6869      	ldr	r1, [r5, #4]
 8013298:	f8ad 001e 	strh.w	r0, [sp, #30]
 801329c:	6828      	ldr	r0, [r5, #0]
 801329e:	f8ad 8018 	strh.w	r8, [sp, #24]
 80132a2:	ab08      	add	r3, sp, #32
 80132a4:	ad08      	add	r5, sp, #32
 80132a6:	c303      	stmia	r3!, {r0, r1}
 80132a8:	a906      	add	r1, sp, #24
 80132aa:	4628      	mov	r0, r5
 80132ac:	f8ad 701a 	strh.w	r7, [sp, #26]
 80132b0:	f8ad 601c 	strh.w	r6, [sp, #28]
 80132b4:	f7fd fc62 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 80132b8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80132bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80132c0:	429a      	cmp	r2, r3
 80132c2:	d035      	beq.n	8013330 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80132c4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80132c8:	2b00      	cmp	r3, #0
 80132ca:	dd31      	ble.n	8013330 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80132cc:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80132d0:	2b00      	cmp	r3, #0
 80132d2:	dd2d      	ble.n	8013330 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80132d4:	2300      	movs	r3, #0
 80132d6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80132da:	6823      	ldr	r3, [r4, #0]
 80132dc:	a90a      	add	r1, sp, #40	; 0x28
 80132de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132e0:	4620      	mov	r0, r4
 80132e2:	4798      	blx	r3
 80132e4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80132e8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80132ea:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80132ee:	1a9b      	subs	r3, r3, r2
 80132f0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80132f4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80132f6:	1ac9      	subs	r1, r1, r3
 80132f8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80132fc:	490f      	ldr	r1, [pc, #60]	; (801333c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80132fe:	6809      	ldr	r1, [r1, #0]
 8013300:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013304:	b108      	cbz	r0, 801330a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013306:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013308:	b900      	cbnz	r0, 801330c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801330a:	6888      	ldr	r0, [r1, #8]
 801330c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013310:	440b      	add	r3, r1
 8013312:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013316:	2601      	movs	r6, #1
 8013318:	440a      	add	r2, r1
 801331a:	6801      	ldr	r1, [r0, #0]
 801331c:	9602      	str	r6, [sp, #8]
 801331e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013322:	e9cd 5400 	strd	r5, r4, [sp]
 8013326:	b21b      	sxth	r3, r3
 8013328:	688c      	ldr	r4, [r1, #8]
 801332a:	b212      	sxth	r2, r2
 801332c:	a905      	add	r1, sp, #20
 801332e:	47a0      	blx	r4
 8013330:	b00c      	add	sp, #48	; 0x30
 8013332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013336:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013338:	e7a0      	b.n	801327c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801333a:	bf00      	nop
 801333c:	20012da4 	.word	0x20012da4

08013340 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013340:	b510      	push	{r4, lr}
 8013342:	2101      	movs	r1, #1
 8013344:	2200      	movs	r2, #0
 8013346:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801334a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801334e:	4c0e      	ldr	r4, [pc, #56]	; (8013388 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013350:	8082      	strh	r2, [r0, #4]
 8013352:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013356:	80c2      	strh	r2, [r0, #6]
 8013358:	8102      	strh	r2, [r0, #8]
 801335a:	8142      	strh	r2, [r0, #10]
 801335c:	8182      	strh	r2, [r0, #12]
 801335e:	81c2      	strh	r2, [r0, #14]
 8013360:	8202      	strh	r2, [r0, #16]
 8013362:	8242      	strh	r2, [r0, #18]
 8013364:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013368:	61c2      	str	r2, [r0, #28]
 801336a:	8402      	strh	r2, [r0, #32]
 801336c:	8442      	strh	r2, [r0, #34]	; 0x22
 801336e:	6282      	str	r2, [r0, #40]	; 0x28
 8013370:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013374:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013376:	8601      	strh	r1, [r0, #48]	; 0x30
 8013378:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801337c:	6004      	str	r4, [r0, #0]
 801337e:	8681      	strh	r1, [r0, #52]	; 0x34
 8013380:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013382:	8702      	strh	r2, [r0, #56]	; 0x38
 8013384:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013386:	bd10      	pop	{r4, pc}
 8013388:	0802f368 	.word	0x0802f368

0801338c <_ZN8touchgfx5ImageD1Ev>:
 801338c:	4770      	bx	lr

0801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801338e:	b570      	push	{r4, r5, r6, lr}
 8013390:	880b      	ldrh	r3, [r1, #0]
 8013392:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013394:	4604      	mov	r4, r0
 8013396:	4608      	mov	r0, r1
 8013398:	460d      	mov	r5, r1
 801339a:	f006 f913 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801339e:	4606      	mov	r6, r0
 80133a0:	4628      	mov	r0, r5
 80133a2:	f006 f943 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133a6:	6823      	ldr	r3, [r4, #0]
 80133a8:	4605      	mov	r5, r0
 80133aa:	4631      	mov	r1, r6
 80133ac:	4620      	mov	r0, r4
 80133ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80133b0:	4798      	blx	r3
 80133b2:	6823      	ldr	r3, [r4, #0]
 80133b4:	4629      	mov	r1, r5
 80133b6:	4620      	mov	r0, r4
 80133b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80133ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80133be:	4718      	bx	r3

080133c0 <_ZN8touchgfx5ImageD0Ev>:
 80133c0:	b510      	push	{r4, lr}
 80133c2:	212c      	movs	r1, #44	; 0x2c
 80133c4:	4604      	mov	r4, r0
 80133c6:	f016 fd96 	bl	8029ef6 <_ZdlPvj>
 80133ca:	4620      	mov	r0, r4
 80133cc:	bd10      	pop	{r4, pc}

080133ce <_ZNK8touchgfx5Image12getSolidRectEv>:
 80133ce:	b510      	push	{r4, lr}
 80133d0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80133d4:	2bff      	cmp	r3, #255	; 0xff
 80133d6:	4604      	mov	r4, r0
 80133d8:	d006      	beq.n	80133e8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80133da:	2300      	movs	r3, #0
 80133dc:	8003      	strh	r3, [r0, #0]
 80133de:	8043      	strh	r3, [r0, #2]
 80133e0:	8083      	strh	r3, [r0, #4]
 80133e2:	80c3      	strh	r3, [r0, #6]
 80133e4:	4620      	mov	r0, r4
 80133e6:	bd10      	pop	{r4, pc}
 80133e8:	3126      	adds	r1, #38	; 0x26
 80133ea:	f006 f953 	bl	8019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80133ee:	e7f9      	b.n	80133e4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080133f0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80133f0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80133f4:	b12a      	cbz	r2, 8013402 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80133f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80133fa:	b112      	cbz	r2, 8013402 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80133fc:	6803      	ldr	r3, [r0, #0]
 80133fe:	695b      	ldr	r3, [r3, #20]
 8013400:	4718      	bx	r3
 8013402:	4770      	bx	lr

08013404 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013408:	4604      	mov	r4, r0
 801340a:	b088      	sub	sp, #32
 801340c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013410:	2500      	movs	r5, #0
 8013412:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013414:	460f      	mov	r7, r1
 8013416:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801341a:	a904      	add	r1, sp, #16
 801341c:	4606      	mov	r6, r0
 801341e:	4798      	blx	r3
 8013420:	4620      	mov	r0, r4
 8013422:	f006 f8cf 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013426:	4680      	mov	r8, r0
 8013428:	4620      	mov	r0, r4
 801342a:	f006 f8ff 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801342e:	9506      	str	r5, [sp, #24]
 8013430:	ad06      	add	r5, sp, #24
 8013432:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013436:	4639      	mov	r1, r7
 8013438:	4628      	mov	r0, r5
 801343a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801343e:	f7fd fb9d 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8013442:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013446:	2b00      	cmp	r3, #0
 8013448:	dd19      	ble.n	801347e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801344a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801344e:	2b00      	cmp	r3, #0
 8013450:	dd15      	ble.n	801347e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013452:	4b0c      	ldr	r3, [pc, #48]	; (8013484 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013454:	681b      	ldr	r3, [r3, #0]
 8013456:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801345a:	b10a      	cbz	r2, 8013460 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801345c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801345e:	b900      	cbnz	r0, 8013462 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013460:	6898      	ldr	r0, [r3, #8]
 8013462:	6801      	ldr	r1, [r0, #0]
 8013464:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013468:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801346c:	2701      	movs	r7, #1
 801346e:	9702      	str	r7, [sp, #8]
 8013470:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013474:	e9cd 5600 	strd	r5, r6, [sp]
 8013478:	688d      	ldr	r5, [r1, #8]
 801347a:	4621      	mov	r1, r4
 801347c:	47a8      	blx	r5
 801347e:	b008      	add	sp, #32
 8013480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013484:	20012da4 	.word	0x20012da4

08013488 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013488:	4770      	bx	lr

0801348a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801348a:	b510      	push	{r4, lr}
 801348c:	2148      	movs	r1, #72	; 0x48
 801348e:	4604      	mov	r4, r0
 8013490:	f016 fd31 	bl	8029ef6 <_ZdlPvj>
 8013494:	4620      	mov	r0, r4
 8013496:	bd10      	pop	{r4, pc}

08013498 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013498:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801349c:	b08d      	sub	sp, #52	; 0x34
 801349e:	4604      	mov	r4, r0
 80134a0:	460f      	mov	r7, r1
 80134a2:	f7ff fdc1 	bl	8013028 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80134a6:	4a55      	ldr	r2, [pc, #340]	; (80135fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80134a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80134aa:	8812      	ldrh	r2, [r2, #0]
 80134ac:	429a      	cmp	r2, r3
 80134ae:	f240 8082 	bls.w	80135b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80134b2:	4d53      	ldr	r5, [pc, #332]	; (8013600 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80134b4:	682a      	ldr	r2, [r5, #0]
 80134b6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80134ba:	4b52      	ldr	r3, [pc, #328]	; (8013604 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80134bc:	681b      	ldr	r3, [r3, #0]
 80134be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80134c2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80134c6:	2200      	movs	r2, #0
 80134c8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80134cc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80134d0:	2a03      	cmp	r2, #3
 80134d2:	d811      	bhi.n	80134f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80134d4:	e8df f002 	tbb	[pc, r2]
 80134d8:	89727902 	.word	0x89727902
 80134dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80134e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80134e4:	1ad2      	subs	r2, r2, r3
 80134e6:	2002      	movs	r0, #2
 80134e8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80134ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80134f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80134f4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80134f8:	f10d 080c 	add.w	r8, sp, #12
 80134fc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013500:	f10d 0914 	add.w	r9, sp, #20
 8013504:	e889 0003 	stmia.w	r9, {r0, r1}
 8013508:	4639      	mov	r1, r7
 801350a:	4648      	mov	r0, r9
 801350c:	f7fd fb36 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8013510:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013514:	2b00      	cmp	r3, #0
 8013516:	dd4e      	ble.n	80135b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013518:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801351c:	2b00      	cmp	r3, #0
 801351e:	dd4a      	ble.n	80135b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013520:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013524:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013528:	1a9b      	subs	r3, r3, r2
 801352a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801352e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013532:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013536:	1a9b      	subs	r3, r3, r2
 8013538:	f8ad 3016 	strh.w	r3, [sp, #22]
 801353c:	6823      	ldr	r3, [r4, #0]
 801353e:	4641      	mov	r1, r8
 8013540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013542:	4620      	mov	r0, r4
 8013544:	4798      	blx	r3
 8013546:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801354a:	2b00      	cmp	r3, #0
 801354c:	d053      	beq.n	80135f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801354e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013550:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013552:	682b      	ldr	r3, [r5, #0]
 8013554:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013558:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801355c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013560:	785b      	ldrb	r3, [r3, #1]
 8013562:	9209      	str	r2, [sp, #36]	; 0x24
 8013564:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013568:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801356c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013570:	2300      	movs	r3, #0
 8013572:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013576:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801357a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801357e:	4b22      	ldr	r3, [pc, #136]	; (8013608 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013580:	9607      	str	r6, [sp, #28]
 8013582:	681b      	ldr	r3, [r3, #0]
 8013584:	f88d 5020 	strb.w	r5, [sp, #32]
 8013588:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801358c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013590:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013594:	b10a      	cbz	r2, 801359a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013596:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013598:	b904      	cbnz	r4, 801359c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801359a:	689c      	ldr	r4, [r3, #8]
 801359c:	4b1b      	ldr	r3, [pc, #108]	; (801360c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801359e:	6818      	ldr	r0, [r3, #0]
 80135a0:	f7f5 fe08 	bl	80091b4 <_ZNK8touchgfx5Texts7getTextEt>
 80135a4:	ab07      	add	r3, sp, #28
 80135a6:	9001      	str	r0, [sp, #4]
 80135a8:	9300      	str	r3, [sp, #0]
 80135aa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80135ae:	464b      	mov	r3, r9
 80135b0:	4620      	mov	r0, r4
 80135b2:	f7f5 fdb1 	bl	8009118 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80135b6:	b00d      	add	sp, #52	; 0x34
 80135b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80135bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80135c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80135c4:	1ad2      	subs	r2, r2, r3
 80135c6:	3201      	adds	r2, #1
 80135c8:	e78d      	b.n	80134e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80135ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80135ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80135d2:	1ad2      	subs	r2, r2, r3
 80135d4:	3201      	adds	r2, #1
 80135d6:	2002      	movs	r0, #2
 80135d8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80135dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80135e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80135e4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80135e8:	e786      	b.n	80134f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80135ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80135ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80135f2:	1ad2      	subs	r2, r2, r3
 80135f4:	e7ef      	b.n	80135d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80135f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80135f8:	e7aa      	b.n	8013550 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80135fa:	bf00      	nop
 80135fc:	20012e00 	.word	0x20012e00
 8013600:	20012dfc 	.word	0x20012dfc
 8013604:	20012e04 	.word	0x20012e04
 8013608:	20012da4 	.word	0x20012da4
 801360c:	20012e08 	.word	0x20012e08

08013610 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013610:	b510      	push	{r4, lr}
 8013612:	2101      	movs	r1, #1
 8013614:	4c13      	ldr	r4, [pc, #76]	; (8013664 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013616:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801361a:	2200      	movs	r2, #0
 801361c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013620:	6004      	str	r4, [r0, #0]
 8013622:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013626:	4c10      	ldr	r4, [pc, #64]	; (8013668 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013628:	8082      	strh	r2, [r0, #4]
 801362a:	80c2      	strh	r2, [r0, #6]
 801362c:	8102      	strh	r2, [r0, #8]
 801362e:	8142      	strh	r2, [r0, #10]
 8013630:	8182      	strh	r2, [r0, #12]
 8013632:	81c2      	strh	r2, [r0, #14]
 8013634:	8202      	strh	r2, [r0, #16]
 8013636:	8242      	strh	r2, [r0, #18]
 8013638:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801363c:	61c2      	str	r2, [r0, #28]
 801363e:	8402      	strh	r2, [r0, #32]
 8013640:	8442      	strh	r2, [r0, #34]	; 0x22
 8013642:	6282      	str	r2, [r0, #40]	; 0x28
 8013644:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013648:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801364a:	8601      	strh	r1, [r0, #48]	; 0x30
 801364c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013650:	6344      	str	r4, [r0, #52]	; 0x34
 8013652:	8701      	strh	r1, [r0, #56]	; 0x38
 8013654:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013658:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801365c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013660:	bd10      	pop	{r4, pc}
 8013662:	bf00      	nop
 8013664:	0802f44c 	.word	0x0802f44c
 8013668:	0802c8b8 	.word	0x0802c8b8

0801366c <_ZN8touchgfx7OutlineD1Ev>:
 801366c:	4770      	bx	lr

0801366e <_ZN8touchgfx7OutlineD0Ev>:
 801366e:	b510      	push	{r4, lr}
 8013670:	2130      	movs	r1, #48	; 0x30
 8013672:	4604      	mov	r4, r0
 8013674:	f016 fc3f 	bl	8029ef6 <_ZdlPvj>
 8013678:	4620      	mov	r0, r4
 801367a:	bd10      	pop	{r4, pc}

0801367c <_ZN8touchgfx7Outline5resetEv>:
 801367c:	b510      	push	{r4, lr}
 801367e:	4604      	mov	r4, r0
 8013680:	f000 fe96 	bl	80143b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013684:	60e0      	str	r0, [r4, #12]
 8013686:	f000 fe99 	bl	80143bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801368a:	68e3      	ldr	r3, [r4, #12]
 801368c:	6123      	str	r3, [r4, #16]
 801368e:	08c0      	lsrs	r0, r0, #3
 8013690:	2200      	movs	r2, #0
 8013692:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013696:	3801      	subs	r0, #1
 8013698:	6060      	str	r0, [r4, #4]
 801369a:	60a2      	str	r2, [r4, #8]
 801369c:	8019      	strh	r1, [r3, #0]
 801369e:	8059      	strh	r1, [r3, #2]
 80136a0:	809a      	strh	r2, [r3, #4]
 80136a2:	80da      	strh	r2, [r3, #6]
 80136a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80136a6:	f023 0301 	bic.w	r3, r3, #1
 80136aa:	f043 0302 	orr.w	r3, r3, #2
 80136ae:	6263      	str	r3, [r4, #36]	; 0x24
 80136b0:	bd10      	pop	{r4, pc}
	...

080136b4 <_ZN8touchgfx7OutlineC1Ev>:
 80136b4:	b510      	push	{r4, lr}
 80136b6:	4b0a      	ldr	r3, [pc, #40]	; (80136e0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80136b8:	6003      	str	r3, [r0, #0]
 80136ba:	2300      	movs	r3, #0
 80136bc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80136c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80136c4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80136c8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80136cc:	6243      	str	r3, [r0, #36]	; 0x24
 80136ce:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80136d2:	4604      	mov	r4, r0
 80136d4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80136d8:	f7ff ffd0 	bl	801367c <_ZN8touchgfx7Outline5resetEv>
 80136dc:	4620      	mov	r0, r4
 80136de:	bd10      	pop	{r4, pc}
 80136e0:	0802f4c0 	.word	0x0802f4c0

080136e4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80136e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136e8:	b093      	sub	sp, #76	; 0x4c
 80136ea:	1156      	asrs	r6, r2, #5
 80136ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80136ee:	9305      	str	r3, [sp, #20]
 80136f0:	f004 051f 	and.w	r5, r4, #31
 80136f4:	1153      	asrs	r3, r2, #5
 80136f6:	9504      	str	r5, [sp, #16]
 80136f8:	1165      	asrs	r5, r4, #5
 80136fa:	9303      	str	r3, [sp, #12]
 80136fc:	42ae      	cmp	r6, r5
 80136fe:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013702:	9306      	str	r3, [sp, #24]
 8013704:	f002 031f 	and.w	r3, r2, #31
 8013708:	f040 80f8 	bne.w	80138fc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801370c:	9c04      	ldr	r4, [sp, #16]
 801370e:	9a05      	ldr	r2, [sp, #20]
 8013710:	42a3      	cmp	r3, r4
 8013712:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013716:	6902      	ldr	r2, [r0, #16]
 8013718:	d125      	bne.n	8013766 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801371a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801371e:	459e      	cmp	lr, r3
 8013720:	d103      	bne.n	801372a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013722:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013726:	429e      	cmp	r6, r3
 8013728:	d035      	beq.n	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801372a:	88d1      	ldrh	r1, [r2, #6]
 801372c:	8893      	ldrh	r3, [r2, #4]
 801372e:	430b      	orrs	r3, r1
 8013730:	d010      	beq.n	8013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013732:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013736:	2b00      	cmp	r3, #0
 8013738:	db0c      	blt.n	8013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801373a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801373c:	428b      	cmp	r3, r1
 801373e:	da09      	bge.n	8013754 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013740:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013744:	428b      	cmp	r3, r1
 8013746:	bf38      	it	cc
 8013748:	3208      	addcc	r2, #8
 801374a:	f103 0301 	add.w	r3, r3, #1
 801374e:	bf38      	it	cc
 8013750:	6102      	strcc	r2, [r0, #16]
 8013752:	6083      	str	r3, [r0, #8]
 8013754:	6903      	ldr	r3, [r0, #16]
 8013756:	9a03      	ldr	r2, [sp, #12]
 8013758:	f8a3 e000 	strh.w	lr, [r3]
 801375c:	805a      	strh	r2, [r3, #2]
 801375e:	2200      	movs	r2, #0
 8013760:	809a      	strh	r2, [r3, #4]
 8013762:	80da      	strh	r2, [r3, #6]
 8013764:	e017      	b.n	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013766:	9c05      	ldr	r4, [sp, #20]
 8013768:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801376c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013770:	f004 041f 	and.w	r4, r4, #31
 8013774:	114e      	asrs	r6, r1, #5
 8013776:	9402      	str	r4, [sp, #8]
 8013778:	9c04      	ldr	r4, [sp, #16]
 801377a:	4576      	cmp	r6, lr
 801377c:	f001 0c1f 	and.w	ip, r1, #31
 8013780:	eba4 0403 	sub.w	r4, r4, r3
 8013784:	d10a      	bne.n	801379c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013786:	9b02      	ldr	r3, [sp, #8]
 8013788:	449c      	add	ip, r3
 801378a:	44a0      	add	r8, r4
 801378c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013790:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013794:	80d4      	strh	r4, [r2, #6]
 8013796:	b013      	add	sp, #76	; 0x4c
 8013798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801379c:	9d05      	ldr	r5, [sp, #20]
 801379e:	1a69      	subs	r1, r5, r1
 80137a0:	bf5b      	ittet	pl
 80137a2:	f1cc 0520 	rsbpl	r5, ip, #32
 80137a6:	436c      	mulpl	r4, r5
 80137a8:	2500      	movmi	r5, #0
 80137aa:	2520      	movpl	r5, #32
 80137ac:	bf44      	itt	mi
 80137ae:	fb04 f40c 	mulmi.w	r4, r4, ip
 80137b2:	4249      	negmi	r1, r1
 80137b4:	9501      	str	r5, [sp, #4]
 80137b6:	9f01      	ldr	r7, [sp, #4]
 80137b8:	fb94 f5f1 	sdiv	r5, r4, r1
 80137bc:	fb01 4415 	mls	r4, r1, r5, r4
 80137c0:	bf54      	ite	pl
 80137c2:	f04f 0901 	movpl.w	r9, #1
 80137c6:	f04f 39ff 	movmi.w	r9, #4294967295
 80137ca:	2c00      	cmp	r4, #0
 80137cc:	bfb8      	it	lt
 80137ce:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80137d2:	44bc      	add	ip, r7
 80137d4:	44a8      	add	r8, r5
 80137d6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80137da:	f8a2 8004 	strh.w	r8, [r2, #4]
 80137de:	f8a2 c006 	strh.w	ip, [r2, #6]
 80137e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80137e6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80137ea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80137ee:	bfb8      	it	lt
 80137f0:	1864      	addlt	r4, r4, r1
 80137f2:	ea58 0202 	orrs.w	r2, r8, r2
 80137f6:	444e      	add	r6, r9
 80137f8:	d011      	beq.n	801381e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80137fa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80137fe:	f1b8 0f00 	cmp.w	r8, #0
 8013802:	db0c      	blt.n	801381e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013804:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013806:	4590      	cmp	r8, r2
 8013808:	da09      	bge.n	801381e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801380a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801380e:	4590      	cmp	r8, r2
 8013810:	bf3c      	itt	cc
 8013812:	f10c 0208 	addcc.w	r2, ip, #8
 8013816:	6102      	strcc	r2, [r0, #16]
 8013818:	f108 0201 	add.w	r2, r8, #1
 801381c:	6082      	str	r2, [r0, #8]
 801381e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013822:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013826:	f8ac 6000 	strh.w	r6, [ip]
 801382a:	2700      	movs	r7, #0
 801382c:	45b6      	cmp	lr, r6
 801382e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013832:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013836:	f8ac 7006 	strh.w	r7, [ip, #6]
 801383a:	442b      	add	r3, r5
 801383c:	d04d      	beq.n	80138da <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801383e:	9f04      	ldr	r7, [sp, #16]
 8013840:	1aff      	subs	r7, r7, r3
 8013842:	443d      	add	r5, r7
 8013844:	016d      	lsls	r5, r5, #5
 8013846:	fb95 f8f1 	sdiv	r8, r5, r1
 801384a:	fb01 5518 	mls	r5, r1, r8, r5
 801384e:	2d00      	cmp	r5, #0
 8013850:	bfb8      	it	lt
 8013852:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013856:	f108 0701 	add.w	r7, r8, #1
 801385a:	bfb8      	it	lt
 801385c:	186d      	addlt	r5, r5, r1
 801385e:	1a64      	subs	r4, r4, r1
 8013860:	9703      	str	r7, [sp, #12]
 8013862:	f04f 0a00 	mov.w	sl, #0
 8013866:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801386a:	1964      	adds	r4, r4, r5
 801386c:	bf58      	it	pl
 801386e:	9f03      	ldrpl	r7, [sp, #12]
 8013870:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013874:	bf48      	it	mi
 8013876:	4647      	movmi	r7, r8
 8013878:	44bb      	add	fp, r7
 801387a:	f8ac b004 	strh.w	fp, [ip, #4]
 801387e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013882:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013886:	f8ac b006 	strh.w	fp, [ip, #6]
 801388a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801388e:	443b      	add	r3, r7
 8013890:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013894:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013898:	bf58      	it	pl
 801389a:	1a64      	subpl	r4, r4, r1
 801389c:	ea5b 0707 	orrs.w	r7, fp, r7
 80138a0:	444e      	add	r6, r9
 80138a2:	d011      	beq.n	80138c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80138a4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80138a8:	f1bb 0f00 	cmp.w	fp, #0
 80138ac:	db0c      	blt.n	80138c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80138ae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80138b0:	45bb      	cmp	fp, r7
 80138b2:	da09      	bge.n	80138c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80138b4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80138b8:	45bb      	cmp	fp, r7
 80138ba:	bf3c      	itt	cc
 80138bc:	f10c 0708 	addcc.w	r7, ip, #8
 80138c0:	6107      	strcc	r7, [r0, #16]
 80138c2:	f10b 0701 	add.w	r7, fp, #1
 80138c6:	6087      	str	r7, [r0, #8]
 80138c8:	6907      	ldr	r7, [r0, #16]
 80138ca:	45b6      	cmp	lr, r6
 80138cc:	803e      	strh	r6, [r7, #0]
 80138ce:	807a      	strh	r2, [r7, #2]
 80138d0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80138d4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80138d8:	d1c5      	bne.n	8013866 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80138da:	9a04      	ldr	r2, [sp, #16]
 80138dc:	1ad3      	subs	r3, r2, r3
 80138de:	6902      	ldr	r2, [r0, #16]
 80138e0:	8891      	ldrh	r1, [r2, #4]
 80138e2:	88d6      	ldrh	r6, [r2, #6]
 80138e4:	4419      	add	r1, r3
 80138e6:	8091      	strh	r1, [r2, #4]
 80138e8:	9902      	ldr	r1, [sp, #8]
 80138ea:	f101 0c20 	add.w	ip, r1, #32
 80138ee:	9901      	ldr	r1, [sp, #4]
 80138f0:	ebac 0c01 	sub.w	ip, ip, r1
 80138f4:	fb03 630c 	mla	r3, r3, ip, r6
 80138f8:	80d3      	strh	r3, [r2, #6]
 80138fa:	e74c      	b.n	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80138fc:	9d05      	ldr	r5, [sp, #20]
 80138fe:	1aa2      	subs	r2, r4, r2
 8013900:	eba5 0501 	sub.w	r5, r5, r1
 8013904:	9508      	str	r5, [sp, #32]
 8013906:	9202      	str	r2, [sp, #8]
 8013908:	f140 8128 	bpl.w	8013b5c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801390c:	9a03      	ldr	r2, [sp, #12]
 801390e:	2a00      	cmp	r2, #0
 8013910:	f6ff af41 	blt.w	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013914:	9a02      	ldr	r2, [sp, #8]
 8013916:	4252      	negs	r2, r2
 8013918:	9202      	str	r2, [sp, #8]
 801391a:	9a06      	ldr	r2, [sp, #24]
 801391c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013920:	f04f 34ff 	mov.w	r4, #4294967295
 8013924:	9206      	str	r2, [sp, #24]
 8013926:	462a      	mov	r2, r5
 8013928:	940b      	str	r4, [sp, #44]	; 0x2c
 801392a:	435a      	muls	r2, r3
 801392c:	2400      	movs	r4, #0
 801392e:	9d02      	ldr	r5, [sp, #8]
 8013930:	9401      	str	r4, [sp, #4]
 8013932:	9c02      	ldr	r4, [sp, #8]
 8013934:	fb92 f4f4 	sdiv	r4, r2, r4
 8013938:	fb05 2214 	mls	r2, r5, r4, r2
 801393c:	2a00      	cmp	r2, #0
 801393e:	9207      	str	r2, [sp, #28]
 8013940:	bfbc      	itt	lt
 8013942:	1952      	addlt	r2, r2, r5
 8013944:	9207      	strlt	r2, [sp, #28]
 8013946:	9a01      	ldr	r2, [sp, #4]
 8013948:	6905      	ldr	r5, [r0, #16]
 801394a:	bfb8      	it	lt
 801394c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013950:	eb04 0901 	add.w	r9, r4, r1
 8013954:	429a      	cmp	r2, r3
 8013956:	ea4f 1669 	mov.w	r6, r9, asr #5
 801395a:	f040 8112 	bne.w	8013b82 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801395e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013962:	429e      	cmp	r6, r3
 8013964:	d104      	bne.n	8013970 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013966:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801396a:	9a03      	ldr	r2, [sp, #12]
 801396c:	429a      	cmp	r2, r3
 801396e:	d01b      	beq.n	80139a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013970:	88ea      	ldrh	r2, [r5, #6]
 8013972:	88ab      	ldrh	r3, [r5, #4]
 8013974:	4313      	orrs	r3, r2
 8013976:	d010      	beq.n	801399a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013978:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801397c:	2a00      	cmp	r2, #0
 801397e:	db0c      	blt.n	801399a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013980:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013982:	429a      	cmp	r2, r3
 8013984:	da09      	bge.n	801399a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013986:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801398a:	429a      	cmp	r2, r3
 801398c:	bf38      	it	cc
 801398e:	3508      	addcc	r5, #8
 8013990:	f102 0201 	add.w	r2, r2, #1
 8013994:	bf38      	it	cc
 8013996:	6105      	strcc	r5, [r0, #16]
 8013998:	6082      	str	r2, [r0, #8]
 801399a:	6903      	ldr	r3, [r0, #16]
 801399c:	9a03      	ldr	r2, [sp, #12]
 801399e:	805a      	strh	r2, [r3, #2]
 80139a0:	2200      	movs	r2, #0
 80139a2:	801e      	strh	r6, [r3, #0]
 80139a4:	809a      	strh	r2, [r3, #4]
 80139a6:	80da      	strh	r2, [r3, #6]
 80139a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139aa:	9a03      	ldr	r2, [sp, #12]
 80139ac:	6901      	ldr	r1, [r0, #16]
 80139ae:	441a      	add	r2, r3
 80139b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80139b4:	42b3      	cmp	r3, r6
 80139b6:	d103      	bne.n	80139c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80139b8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80139bc:	429a      	cmp	r2, r3
 80139be:	d01a      	beq.n	80139f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80139c0:	88cc      	ldrh	r4, [r1, #6]
 80139c2:	888b      	ldrh	r3, [r1, #4]
 80139c4:	4323      	orrs	r3, r4
 80139c6:	d010      	beq.n	80139ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80139c8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80139cc:	2c00      	cmp	r4, #0
 80139ce:	db0c      	blt.n	80139ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80139d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80139d2:	429c      	cmp	r4, r3
 80139d4:	da09      	bge.n	80139ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80139d6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80139da:	429c      	cmp	r4, r3
 80139dc:	bf38      	it	cc
 80139de:	3108      	addcc	r1, #8
 80139e0:	f104 0401 	add.w	r4, r4, #1
 80139e4:	bf38      	it	cc
 80139e6:	6101      	strcc	r1, [r0, #16]
 80139e8:	6084      	str	r4, [r0, #8]
 80139ea:	6903      	ldr	r3, [r0, #16]
 80139ec:	2100      	movs	r1, #0
 80139ee:	801e      	strh	r6, [r3, #0]
 80139f0:	805a      	strh	r2, [r3, #2]
 80139f2:	8099      	strh	r1, [r3, #4]
 80139f4:	80d9      	strh	r1, [r3, #6]
 80139f6:	9b06      	ldr	r3, [sp, #24]
 80139f8:	4293      	cmp	r3, r2
 80139fa:	f000 8082 	beq.w	8013b02 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80139fe:	9b08      	ldr	r3, [sp, #32]
 8013a00:	9c02      	ldr	r4, [sp, #8]
 8013a02:	9902      	ldr	r1, [sp, #8]
 8013a04:	015b      	lsls	r3, r3, #5
 8013a06:	fb93 f1f1 	sdiv	r1, r3, r1
 8013a0a:	fb04 3311 	mls	r3, r4, r1, r3
 8013a0e:	2b00      	cmp	r3, #0
 8013a10:	9103      	str	r1, [sp, #12]
 8013a12:	9308      	str	r3, [sp, #32]
 8013a14:	da04      	bge.n	8013a20 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013a16:	1e4b      	subs	r3, r1, #1
 8013a18:	9303      	str	r3, [sp, #12]
 8013a1a:	9b08      	ldr	r3, [sp, #32]
 8013a1c:	4423      	add	r3, r4
 8013a1e:	9308      	str	r3, [sp, #32]
 8013a20:	9b07      	ldr	r3, [sp, #28]
 8013a22:	9902      	ldr	r1, [sp, #8]
 8013a24:	1a5b      	subs	r3, r3, r1
 8013a26:	9307      	str	r3, [sp, #28]
 8013a28:	9b01      	ldr	r3, [sp, #4]
 8013a2a:	f1c3 0320 	rsb	r3, r3, #32
 8013a2e:	930e      	str	r3, [sp, #56]	; 0x38
 8013a30:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013a32:	9b01      	ldr	r3, [sp, #4]
 8013a34:	1a5b      	subs	r3, r3, r1
 8013a36:	464f      	mov	r7, r9
 8013a38:	930a      	str	r3, [sp, #40]	; 0x28
 8013a3a:	2600      	movs	r6, #0
 8013a3c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013a40:	185b      	adds	r3, r3, r1
 8013a42:	bf58      	it	pl
 8013a44:	9902      	ldrpl	r1, [sp, #8]
 8013a46:	9307      	str	r3, [sp, #28]
 8013a48:	bf5d      	ittte	pl
 8013a4a:	1a5b      	subpl	r3, r3, r1
 8013a4c:	9307      	strpl	r3, [sp, #28]
 8013a4e:	9b03      	ldrpl	r3, [sp, #12]
 8013a50:	9903      	ldrmi	r1, [sp, #12]
 8013a52:	bf58      	it	pl
 8013a54:	1c59      	addpl	r1, r3, #1
 8013a56:	4489      	add	r9, r1
 8013a58:	2a00      	cmp	r2, #0
 8013a5a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8013a5e:	db2e      	blt.n	8013abe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013a60:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013a62:	4293      	cmp	r3, r2
 8013a64:	dd2b      	ble.n	8013abe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013a66:	9c01      	ldr	r4, [sp, #4]
 8013a68:	6905      	ldr	r5, [r0, #16]
 8013a6a:	46a0      	mov	r8, r4
 8013a6c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013a6e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013a72:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013a76:	45a0      	cmp	r8, r4
 8013a78:	f040 814f 	bne.w	8013d1a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8013a7c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013a80:	4551      	cmp	r1, sl
 8013a82:	d103      	bne.n	8013a8c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013a84:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013a88:	4291      	cmp	r1, r2
 8013a8a:	d018      	beq.n	8013abe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013a8c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013a90:	d00f      	beq.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a92:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013a96:	2900      	cmp	r1, #0
 8013a98:	db0b      	blt.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a9a:	428b      	cmp	r3, r1
 8013a9c:	dd09      	ble.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a9e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013aa2:	4299      	cmp	r1, r3
 8013aa4:	bf38      	it	cc
 8013aa6:	3508      	addcc	r5, #8
 8013aa8:	f101 0101 	add.w	r1, r1, #1
 8013aac:	bf38      	it	cc
 8013aae:	6105      	strcc	r5, [r0, #16]
 8013ab0:	6081      	str	r1, [r0, #8]
 8013ab2:	6903      	ldr	r3, [r0, #16]
 8013ab4:	f8a3 a000 	strh.w	sl, [r3]
 8013ab8:	805a      	strh	r2, [r3, #2]
 8013aba:	809e      	strh	r6, [r3, #4]
 8013abc:	80de      	strh	r6, [r3, #6]
 8013abe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013ac0:	6901      	ldr	r1, [r0, #16]
 8013ac2:	441a      	add	r2, r3
 8013ac4:	88cc      	ldrh	r4, [r1, #6]
 8013ac6:	888b      	ldrh	r3, [r1, #4]
 8013ac8:	4323      	orrs	r3, r4
 8013aca:	d010      	beq.n	8013aee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013acc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013ad0:	2c00      	cmp	r4, #0
 8013ad2:	db0c      	blt.n	8013aee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013ad4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013ad6:	429c      	cmp	r4, r3
 8013ad8:	da09      	bge.n	8013aee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013ada:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013ade:	429c      	cmp	r4, r3
 8013ae0:	bf38      	it	cc
 8013ae2:	3108      	addcc	r1, #8
 8013ae4:	f104 0401 	add.w	r4, r4, #1
 8013ae8:	bf38      	it	cc
 8013aea:	6101      	strcc	r1, [r0, #16]
 8013aec:	6084      	str	r4, [r0, #8]
 8013aee:	6903      	ldr	r3, [r0, #16]
 8013af0:	f8a3 a000 	strh.w	sl, [r3]
 8013af4:	805a      	strh	r2, [r3, #2]
 8013af6:	809e      	strh	r6, [r3, #4]
 8013af8:	80de      	strh	r6, [r3, #6]
 8013afa:	9b06      	ldr	r3, [sp, #24]
 8013afc:	4293      	cmp	r3, r2
 8013afe:	464f      	mov	r7, r9
 8013b00:	d19c      	bne.n	8013a3c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013b02:	9b01      	ldr	r3, [sp, #4]
 8013b04:	6907      	ldr	r7, [r0, #16]
 8013b06:	f1c3 0620 	rsb	r6, r3, #32
 8013b0a:	9b05      	ldr	r3, [sp, #20]
 8013b0c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013b10:	9b04      	ldr	r3, [sp, #16]
 8013b12:	429e      	cmp	r6, r3
 8013b14:	f040 81cc 	bne.w	8013eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013b18:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013b1c:	459e      	cmp	lr, r3
 8013b1e:	d104      	bne.n	8013b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013b20:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013b24:	429a      	cmp	r2, r3
 8013b26:	f43f ae36 	beq.w	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013b2a:	88f9      	ldrh	r1, [r7, #6]
 8013b2c:	88bb      	ldrh	r3, [r7, #4]
 8013b2e:	430b      	orrs	r3, r1
 8013b30:	d010      	beq.n	8013b54 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013b32:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013b36:	2b00      	cmp	r3, #0
 8013b38:	db0c      	blt.n	8013b54 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013b3a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013b3c:	428b      	cmp	r3, r1
 8013b3e:	da09      	bge.n	8013b54 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013b40:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013b44:	428b      	cmp	r3, r1
 8013b46:	bf38      	it	cc
 8013b48:	3708      	addcc	r7, #8
 8013b4a:	f103 0301 	add.w	r3, r3, #1
 8013b4e:	bf38      	it	cc
 8013b50:	6107      	strcc	r7, [r0, #16]
 8013b52:	6083      	str	r3, [r0, #8]
 8013b54:	6903      	ldr	r3, [r0, #16]
 8013b56:	f8a3 e000 	strh.w	lr, [r3]
 8013b5a:	e5ff      	b.n	801375c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013b5c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013b5e:	9c03      	ldr	r4, [sp, #12]
 8013b60:	42a2      	cmp	r2, r4
 8013b62:	f6ff ae18 	blt.w	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013b66:	9c06      	ldr	r4, [sp, #24]
 8013b68:	42a2      	cmp	r2, r4
 8013b6a:	bfb8      	it	lt
 8013b6c:	3201      	addlt	r2, #1
 8013b6e:	9c08      	ldr	r4, [sp, #32]
 8013b70:	bfb8      	it	lt
 8013b72:	9206      	strlt	r2, [sp, #24]
 8013b74:	f1c3 0220 	rsb	r2, r3, #32
 8013b78:	4362      	muls	r2, r4
 8013b7a:	2401      	movs	r4, #1
 8013b7c:	940b      	str	r4, [sp, #44]	; 0x2c
 8013b7e:	2420      	movs	r4, #32
 8013b80:	e6d5      	b.n	801392e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013b82:	f009 021f 	and.w	r2, r9, #31
 8013b86:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013b8a:	920c      	str	r2, [sp, #48]	; 0x30
 8013b8c:	9a01      	ldr	r2, [sp, #4]
 8013b8e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013b92:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013b96:	45b0      	cmp	r8, r6
 8013b98:	f001 011f 	and.w	r1, r1, #31
 8013b9c:	eba2 0203 	sub.w	r2, r2, r3
 8013ba0:	d108      	bne.n	8013bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013ba2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013ba4:	4419      	add	r1, r3
 8013ba6:	4496      	add	lr, r2
 8013ba8:	fb02 a101 	mla	r1, r2, r1, sl
 8013bac:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013bb0:	80e9      	strh	r1, [r5, #6]
 8013bb2:	e6f9      	b.n	80139a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013bb4:	2c00      	cmp	r4, #0
 8013bb6:	f2c0 80a9 	blt.w	8013d0c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013bba:	2701      	movs	r7, #1
 8013bbc:	f1c1 0c20 	rsb	ip, r1, #32
 8013bc0:	970a      	str	r7, [sp, #40]	; 0x28
 8013bc2:	fb02 f20c 	mul.w	r2, r2, ip
 8013bc6:	2720      	movs	r7, #32
 8013bc8:	9709      	str	r7, [sp, #36]	; 0x24
 8013bca:	fb92 fcf4 	sdiv	ip, r2, r4
 8013bce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013bd0:	fb04 221c 	mls	r2, r4, ip, r2
 8013bd4:	2a00      	cmp	r2, #0
 8013bd6:	bfb8      	it	lt
 8013bd8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013bdc:	4439      	add	r1, r7
 8013bde:	fb0c a101 	mla	r1, ip, r1, sl
 8013be2:	80e9      	strh	r1, [r5, #6]
 8013be4:	44e6      	add	lr, ip
 8013be6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013be8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013bec:	eb08 0501 	add.w	r5, r8, r1
 8013bf0:	6901      	ldr	r1, [r0, #16]
 8013bf2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013bf6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013bfa:	bfb8      	it	lt
 8013bfc:	1912      	addlt	r2, r2, r4
 8013bfe:	ea58 070e 	orrs.w	r7, r8, lr
 8013c02:	d010      	beq.n	8013c26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013c04:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013c08:	f1be 0f00 	cmp.w	lr, #0
 8013c0c:	db0b      	blt.n	8013c26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013c0e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c10:	45be      	cmp	lr, r7
 8013c12:	da08      	bge.n	8013c26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013c14:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013c18:	45be      	cmp	lr, r7
 8013c1a:	bf3c      	itt	cc
 8013c1c:	3108      	addcc	r1, #8
 8013c1e:	6101      	strcc	r1, [r0, #16]
 8013c20:	f10e 0101 	add.w	r1, lr, #1
 8013c24:	6081      	str	r1, [r0, #8]
 8013c26:	6901      	ldr	r1, [r0, #16]
 8013c28:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013c2c:	800d      	strh	r5, [r1, #0]
 8013c2e:	f04f 0e00 	mov.w	lr, #0
 8013c32:	42ae      	cmp	r6, r5
 8013c34:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013c38:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013c3c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013c40:	4463      	add	r3, ip
 8013c42:	d054      	beq.n	8013cee <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013c44:	9901      	ldr	r1, [sp, #4]
 8013c46:	1ac9      	subs	r1, r1, r3
 8013c48:	4461      	add	r1, ip
 8013c4a:	0149      	lsls	r1, r1, #5
 8013c4c:	fb91 fef4 	sdiv	lr, r1, r4
 8013c50:	fb04 111e 	mls	r1, r4, lr, r1
 8013c54:	2900      	cmp	r1, #0
 8013c56:	bfb8      	it	lt
 8013c58:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013c5c:	f10e 0701 	add.w	r7, lr, #1
 8013c60:	bfb8      	it	lt
 8013c62:	1909      	addlt	r1, r1, r4
 8013c64:	1b12      	subs	r2, r2, r4
 8013c66:	970d      	str	r7, [sp, #52]	; 0x34
 8013c68:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013c6c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013c6e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013c72:	1852      	adds	r2, r2, r1
 8013c74:	bf54      	ite	pl
 8013c76:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013c7a:	46f4      	movmi	ip, lr
 8013c7c:	44e3      	add	fp, ip
 8013c7e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013c82:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013c86:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013c8a:	f8aa b006 	strh.w	fp, [sl, #6]
 8013c8e:	4463      	add	r3, ip
 8013c90:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c94:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013c98:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013c9c:	bf58      	it	pl
 8013c9e:	1b12      	subpl	r2, r2, r4
 8013ca0:	443d      	add	r5, r7
 8013ca2:	ea5b 070a 	orrs.w	r7, fp, sl
 8013ca6:	d014      	beq.n	8013cd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013ca8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013cac:	f1ba 0f00 	cmp.w	sl, #0
 8013cb0:	db0f      	blt.n	8013cd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013cb2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013cb4:	45ba      	cmp	sl, r7
 8013cb6:	da0c      	bge.n	8013cd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013cb8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013cbc:	45ba      	cmp	sl, r7
 8013cbe:	bf38      	it	cc
 8013cc0:	f10c 0c08 	addcc.w	ip, ip, #8
 8013cc4:	f10a 0a01 	add.w	sl, sl, #1
 8013cc8:	bf38      	it	cc
 8013cca:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013cce:	f8c0 a008 	str.w	sl, [r0, #8]
 8013cd2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013cd6:	f04f 0700 	mov.w	r7, #0
 8013cda:	42ae      	cmp	r6, r5
 8013cdc:	f8ac 5000 	strh.w	r5, [ip]
 8013ce0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013ce4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013ce8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013cec:	d1bc      	bne.n	8013c68 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013cee:	6904      	ldr	r4, [r0, #16]
 8013cf0:	9a01      	ldr	r2, [sp, #4]
 8013cf2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013cf4:	1ad3      	subs	r3, r2, r3
 8013cf6:	88a2      	ldrh	r2, [r4, #4]
 8013cf8:	441a      	add	r2, r3
 8013cfa:	80a2      	strh	r2, [r4, #4]
 8013cfc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013cfe:	3120      	adds	r1, #32
 8013d00:	1a89      	subs	r1, r1, r2
 8013d02:	88e2      	ldrh	r2, [r4, #6]
 8013d04:	fb03 2301 	mla	r3, r3, r1, r2
 8013d08:	80e3      	strh	r3, [r4, #6]
 8013d0a:	e64d      	b.n	80139a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013d0c:	f04f 37ff 	mov.w	r7, #4294967295
 8013d10:	970a      	str	r7, [sp, #40]	; 0x28
 8013d12:	434a      	muls	r2, r1
 8013d14:	4264      	negs	r4, r4
 8013d16:	2700      	movs	r7, #0
 8013d18:	e756      	b.n	8013bc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013d1a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013d1e:	f009 031f 	and.w	r3, r9, #31
 8013d22:	45d0      	cmp	r8, sl
 8013d24:	f007 071f 	and.w	r7, r7, #31
 8013d28:	930f      	str	r3, [sp, #60]	; 0x3c
 8013d2a:	fa1f fc8c 	uxth.w	ip, ip
 8013d2e:	fa1f fe8e 	uxth.w	lr, lr
 8013d32:	d10a      	bne.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013d34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013d36:	449c      	add	ip, r3
 8013d38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013d3a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013d3e:	441f      	add	r7, r3
 8013d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013d42:	fb03 e707 	mla	r7, r3, r7, lr
 8013d46:	80ef      	strh	r7, [r5, #6]
 8013d48:	e6b9      	b.n	8013abe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013d4a:	2900      	cmp	r1, #0
 8013d4c:	f2c0 80a8 	blt.w	8013ea0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013d50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013d52:	f1c7 0320 	rsb	r3, r7, #32
 8013d56:	4363      	muls	r3, r4
 8013d58:	2401      	movs	r4, #1
 8013d5a:	940d      	str	r4, [sp, #52]	; 0x34
 8013d5c:	2420      	movs	r4, #32
 8013d5e:	940c      	str	r4, [sp, #48]	; 0x30
 8013d60:	fb93 f4f1 	sdiv	r4, r3, r1
 8013d64:	fb01 3b14 	mls	fp, r1, r4, r3
 8013d68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d6a:	f1bb 0f00 	cmp.w	fp, #0
 8013d6e:	bfb8      	it	lt
 8013d70:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013d74:	441f      	add	r7, r3
 8013d76:	fb04 e707 	mla	r7, r4, r7, lr
 8013d7a:	44a4      	add	ip, r4
 8013d7c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013d80:	80ef      	strh	r7, [r5, #6]
 8013d82:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d88:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013d8c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d90:	bfb8      	it	lt
 8013d92:	448b      	addlt	fp, r1
 8013d94:	eb08 0503 	add.w	r5, r8, r3
 8013d98:	ea5e 0307 	orrs.w	r3, lr, r7
 8013d9c:	d011      	beq.n	8013dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d9e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013da2:	f1be 0f00 	cmp.w	lr, #0
 8013da6:	db0c      	blt.n	8013dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013da8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013daa:	45be      	cmp	lr, r7
 8013dac:	da09      	bge.n	8013dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013dae:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013db2:	45be      	cmp	lr, r7
 8013db4:	bf3c      	itt	cc
 8013db6:	f10c 0708 	addcc.w	r7, ip, #8
 8013dba:	6107      	strcc	r7, [r0, #16]
 8013dbc:	f10e 0701 	add.w	r7, lr, #1
 8013dc0:	6087      	str	r7, [r0, #8]
 8013dc2:	6907      	ldr	r7, [r0, #16]
 8013dc4:	b213      	sxth	r3, r2
 8013dc6:	9310      	str	r3, [sp, #64]	; 0x40
 8013dc8:	807b      	strh	r3, [r7, #2]
 8013dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013dcc:	803d      	strh	r5, [r7, #0]
 8013dce:	4555      	cmp	r5, sl
 8013dd0:	80be      	strh	r6, [r7, #4]
 8013dd2:	80fe      	strh	r6, [r7, #6]
 8013dd4:	eb04 0c03 	add.w	ip, r4, r3
 8013dd8:	d051      	beq.n	8013e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013dda:	9b01      	ldr	r3, [sp, #4]
 8013ddc:	eba3 070c 	sub.w	r7, r3, ip
 8013de0:	443c      	add	r4, r7
 8013de2:	0164      	lsls	r4, r4, #5
 8013de4:	fb94 f8f1 	sdiv	r8, r4, r1
 8013de8:	fb01 4418 	mls	r4, r1, r8, r4
 8013dec:	2c00      	cmp	r4, #0
 8013dee:	bfb8      	it	lt
 8013df0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013df4:	ebab 0301 	sub.w	r3, fp, r1
 8013df8:	f108 0701 	add.w	r7, r8, #1
 8013dfc:	bfb8      	it	lt
 8013dfe:	1864      	addlt	r4, r4, r1
 8013e00:	9309      	str	r3, [sp, #36]	; 0x24
 8013e02:	9711      	str	r7, [sp, #68]	; 0x44
 8013e04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e06:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013e0a:	191b      	adds	r3, r3, r4
 8013e0c:	bf58      	it	pl
 8013e0e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013e10:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013e14:	9309      	str	r3, [sp, #36]	; 0x24
 8013e16:	bf48      	it	mi
 8013e18:	4647      	movmi	r7, r8
 8013e1a:	44bb      	add	fp, r7
 8013e1c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013e20:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013e24:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013e28:	f8ae b006 	strh.w	fp, [lr, #6]
 8013e2c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013e30:	44bc      	add	ip, r7
 8013e32:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013e34:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013e38:	443d      	add	r5, r7
 8013e3a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013e3e:	bf5c      	itt	pl
 8013e40:	1a5b      	subpl	r3, r3, r1
 8013e42:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013e44:	ea5b 0307 	orrs.w	r3, fp, r7
 8013e48:	d011      	beq.n	8013e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013e4a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013e4e:	f1bb 0f00 	cmp.w	fp, #0
 8013e52:	db0c      	blt.n	8013e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013e54:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013e56:	45bb      	cmp	fp, r7
 8013e58:	da09      	bge.n	8013e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013e5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013e5e:	45bb      	cmp	fp, r7
 8013e60:	bf3c      	itt	cc
 8013e62:	f10e 0708 	addcc.w	r7, lr, #8
 8013e66:	6107      	strcc	r7, [r0, #16]
 8013e68:	f10b 0701 	add.w	r7, fp, #1
 8013e6c:	6087      	str	r7, [r0, #8]
 8013e6e:	6907      	ldr	r7, [r0, #16]
 8013e70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e72:	803d      	strh	r5, [r7, #0]
 8013e74:	4555      	cmp	r5, sl
 8013e76:	807b      	strh	r3, [r7, #2]
 8013e78:	80be      	strh	r6, [r7, #4]
 8013e7a:	80fe      	strh	r6, [r7, #6]
 8013e7c:	d1c2      	bne.n	8013e04 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013e7e:	9b01      	ldr	r3, [sp, #4]
 8013e80:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013e82:	eba3 0c0c 	sub.w	ip, r3, ip
 8013e86:	6903      	ldr	r3, [r0, #16]
 8013e88:	8899      	ldrh	r1, [r3, #4]
 8013e8a:	4461      	add	r1, ip
 8013e8c:	8099      	strh	r1, [r3, #4]
 8013e8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013e90:	3720      	adds	r7, #32
 8013e92:	1a7f      	subs	r7, r7, r1
 8013e94:	88d9      	ldrh	r1, [r3, #6]
 8013e96:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013e9a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013e9e:	e60e      	b.n	8013abe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013ea0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ea2:	f04f 34ff 	mov.w	r4, #4294967295
 8013ea6:	940d      	str	r4, [sp, #52]	; 0x34
 8013ea8:	437b      	muls	r3, r7
 8013eaa:	4249      	negs	r1, r1
 8013eac:	2400      	movs	r4, #0
 8013eae:	e756      	b.n	8013d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013eb0:	9905      	ldr	r1, [sp, #20]
 8013eb2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013eb6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013eba:	f001 011f 	and.w	r1, r1, #31
 8013ebe:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013ec2:	9102      	str	r1, [sp, #8]
 8013ec4:	9904      	ldr	r1, [sp, #16]
 8013ec6:	45f3      	cmp	fp, lr
 8013ec8:	f009 0c1f 	and.w	ip, r9, #31
 8013ecc:	eba1 0406 	sub.w	r4, r1, r6
 8013ed0:	d108      	bne.n	8013ee4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013ed2:	9b02      	ldr	r3, [sp, #8]
 8013ed4:	449c      	add	ip, r3
 8013ed6:	44a0      	add	r8, r4
 8013ed8:	fb04 a40c 	mla	r4, r4, ip, sl
 8013edc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013ee0:	80fc      	strh	r4, [r7, #6]
 8013ee2:	e458      	b.n	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013ee4:	9905      	ldr	r1, [sp, #20]
 8013ee6:	ebb1 0109 	subs.w	r1, r1, r9
 8013eea:	bf5b      	ittet	pl
 8013eec:	f1cc 0520 	rsbpl	r5, ip, #32
 8013ef0:	436c      	mulpl	r4, r5
 8013ef2:	2500      	movmi	r5, #0
 8013ef4:	2520      	movpl	r5, #32
 8013ef6:	bf44      	itt	mi
 8013ef8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013efc:	4249      	negmi	r1, r1
 8013efe:	9501      	str	r5, [sp, #4]
 8013f00:	9b01      	ldr	r3, [sp, #4]
 8013f02:	fb94 f5f1 	sdiv	r5, r4, r1
 8013f06:	fb01 4415 	mls	r4, r1, r5, r4
 8013f0a:	bf54      	ite	pl
 8013f0c:	f04f 0901 	movpl.w	r9, #1
 8013f10:	f04f 39ff 	movmi.w	r9, #4294967295
 8013f14:	2c00      	cmp	r4, #0
 8013f16:	bfb8      	it	lt
 8013f18:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013f1c:	449c      	add	ip, r3
 8013f1e:	44a8      	add	r8, r5
 8013f20:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013f24:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013f28:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013f2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f30:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013f34:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013f38:	bfb8      	it	lt
 8013f3a:	1864      	addlt	r4, r4, r1
 8013f3c:	ea58 0707 	orrs.w	r7, r8, r7
 8013f40:	eb0b 0309 	add.w	r3, fp, r9
 8013f44:	d011      	beq.n	8013f6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013f46:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013f4a:	f1b8 0f00 	cmp.w	r8, #0
 8013f4e:	db0c      	blt.n	8013f6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013f50:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013f52:	45b8      	cmp	r8, r7
 8013f54:	da09      	bge.n	8013f6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013f56:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013f5a:	45b8      	cmp	r8, r7
 8013f5c:	bf3c      	itt	cc
 8013f5e:	f10c 0708 	addcc.w	r7, ip, #8
 8013f62:	6107      	strcc	r7, [r0, #16]
 8013f64:	f108 0701 	add.w	r7, r8, #1
 8013f68:	6087      	str	r7, [r0, #8]
 8013f6a:	6907      	ldr	r7, [r0, #16]
 8013f6c:	f04f 0c00 	mov.w	ip, #0
 8013f70:	b212      	sxth	r2, r2
 8013f72:	459e      	cmp	lr, r3
 8013f74:	803b      	strh	r3, [r7, #0]
 8013f76:	807a      	strh	r2, [r7, #2]
 8013f78:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013f7c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013f80:	442e      	add	r6, r5
 8013f82:	d04d      	beq.n	8014020 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013f84:	9f04      	ldr	r7, [sp, #16]
 8013f86:	1bbf      	subs	r7, r7, r6
 8013f88:	443d      	add	r5, r7
 8013f8a:	016d      	lsls	r5, r5, #5
 8013f8c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013f90:	fb01 5518 	mls	r5, r1, r8, r5
 8013f94:	4565      	cmp	r5, ip
 8013f96:	bfb8      	it	lt
 8013f98:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013f9c:	f108 0701 	add.w	r7, r8, #1
 8013fa0:	bfb8      	it	lt
 8013fa2:	186d      	addlt	r5, r5, r1
 8013fa4:	1a64      	subs	r4, r4, r1
 8013fa6:	9703      	str	r7, [sp, #12]
 8013fa8:	f04f 0a00 	mov.w	sl, #0
 8013fac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013fb0:	1964      	adds	r4, r4, r5
 8013fb2:	bf58      	it	pl
 8013fb4:	9f03      	ldrpl	r7, [sp, #12]
 8013fb6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013fba:	bf48      	it	mi
 8013fbc:	4647      	movmi	r7, r8
 8013fbe:	44bb      	add	fp, r7
 8013fc0:	f8ac b004 	strh.w	fp, [ip, #4]
 8013fc4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013fc8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013fcc:	f8ac b006 	strh.w	fp, [ip, #6]
 8013fd0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013fd4:	443e      	add	r6, r7
 8013fd6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013fda:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013fde:	bf58      	it	pl
 8013fe0:	1a64      	subpl	r4, r4, r1
 8013fe2:	ea5b 0707 	orrs.w	r7, fp, r7
 8013fe6:	444b      	add	r3, r9
 8013fe8:	d011      	beq.n	801400e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013fea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013fee:	f1bb 0f00 	cmp.w	fp, #0
 8013ff2:	db0c      	blt.n	801400e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013ff4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ff6:	45bb      	cmp	fp, r7
 8013ff8:	da09      	bge.n	801400e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013ffa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013ffe:	45bb      	cmp	fp, r7
 8014000:	bf3c      	itt	cc
 8014002:	f10c 0708 	addcc.w	r7, ip, #8
 8014006:	6107      	strcc	r7, [r0, #16]
 8014008:	f10b 0701 	add.w	r7, fp, #1
 801400c:	6087      	str	r7, [r0, #8]
 801400e:	6907      	ldr	r7, [r0, #16]
 8014010:	459e      	cmp	lr, r3
 8014012:	803b      	strh	r3, [r7, #0]
 8014014:	807a      	strh	r2, [r7, #2]
 8014016:	f8a7 a004 	strh.w	sl, [r7, #4]
 801401a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801401e:	d1c5      	bne.n	8013fac <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014020:	9b04      	ldr	r3, [sp, #16]
 8014022:	1b9e      	subs	r6, r3, r6
 8014024:	6903      	ldr	r3, [r0, #16]
 8014026:	889a      	ldrh	r2, [r3, #4]
 8014028:	4432      	add	r2, r6
 801402a:	809a      	strh	r2, [r3, #4]
 801402c:	9a02      	ldr	r2, [sp, #8]
 801402e:	f102 0c20 	add.w	ip, r2, #32
 8014032:	9a01      	ldr	r2, [sp, #4]
 8014034:	ebac 0c02 	sub.w	ip, ip, r2
 8014038:	88da      	ldrh	r2, [r3, #6]
 801403a:	fb06 260c 	mla	r6, r6, ip, r2
 801403e:	80de      	strh	r6, [r3, #6]
 8014040:	f7ff bba9 	b.w	8013796 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014044 <_ZN8touchgfx7Outline6lineToEii>:
 8014044:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014046:	079b      	lsls	r3, r3, #30
 8014048:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801404a:	460e      	mov	r6, r1
 801404c:	4615      	mov	r5, r2
 801404e:	d511      	bpl.n	8014074 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014050:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014054:	ea86 0701 	eor.w	r7, r6, r1
 8014058:	ea85 0302 	eor.w	r3, r5, r2
 801405c:	433b      	orrs	r3, r7
 801405e:	d009      	beq.n	8014074 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014060:	4633      	mov	r3, r6
 8014062:	9500      	str	r5, [sp, #0]
 8014064:	f7ff fb3e 	bl	80136e4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014068:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801406a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801406e:	f043 0301 	orr.w	r3, r3, #1
 8014072:	6243      	str	r3, [r0, #36]	; 0x24
 8014074:	b003      	add	sp, #12
 8014076:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014078 <_ZN8touchgfx7Outline6moveToEii>:
 8014078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801407a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801407c:	4615      	mov	r5, r2
 801407e:	079a      	lsls	r2, r3, #30
 8014080:	4604      	mov	r4, r0
 8014082:	460e      	mov	r6, r1
 8014084:	d401      	bmi.n	801408a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014086:	f7ff faf9 	bl	801367c <_ZN8touchgfx7Outline5resetEv>
 801408a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801408c:	07db      	lsls	r3, r3, #31
 801408e:	d504      	bpl.n	801409a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014090:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014094:	4620      	mov	r0, r4
 8014096:	f7ff ffd5 	bl	8014044 <_ZN8touchgfx7Outline6lineToEii>
 801409a:	6923      	ldr	r3, [r4, #16]
 801409c:	f9b3 2000 	ldrsh.w	r2, [r3]
 80140a0:	1170      	asrs	r0, r6, #5
 80140a2:	4290      	cmp	r0, r2
 80140a4:	ea4f 1165 	mov.w	r1, r5, asr #5
 80140a8:	d103      	bne.n	80140b2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80140aa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80140ae:	4291      	cmp	r1, r2
 80140b0:	d01a      	beq.n	80140e8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80140b2:	88df      	ldrh	r7, [r3, #6]
 80140b4:	889a      	ldrh	r2, [r3, #4]
 80140b6:	433a      	orrs	r2, r7
 80140b8:	d010      	beq.n	80140dc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80140ba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80140be:	2a00      	cmp	r2, #0
 80140c0:	db0c      	blt.n	80140dc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80140c2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80140c4:	42ba      	cmp	r2, r7
 80140c6:	da09      	bge.n	80140dc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80140c8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80140cc:	42ba      	cmp	r2, r7
 80140ce:	bf38      	it	cc
 80140d0:	3308      	addcc	r3, #8
 80140d2:	f102 0201 	add.w	r2, r2, #1
 80140d6:	bf38      	it	cc
 80140d8:	6123      	strcc	r3, [r4, #16]
 80140da:	60a2      	str	r2, [r4, #8]
 80140dc:	6923      	ldr	r3, [r4, #16]
 80140de:	2200      	movs	r2, #0
 80140e0:	8018      	strh	r0, [r3, #0]
 80140e2:	8059      	strh	r1, [r3, #2]
 80140e4:	809a      	strh	r2, [r3, #4]
 80140e6:	80da      	strh	r2, [r3, #6]
 80140e8:	6166      	str	r6, [r4, #20]
 80140ea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80140ee:	6225      	str	r5, [r4, #32]
 80140f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080140f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80140f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80140f6:	b0d0      	sub	sp, #320	; 0x140
 80140f8:	466c      	mov	r4, sp
 80140fa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80140fe:	4627      	mov	r7, r4
 8014100:	1a0d      	subs	r5, r1, r0
 8014102:	2d48      	cmp	r5, #72	; 0x48
 8014104:	f100 0308 	add.w	r3, r0, #8
 8014108:	f340 80d5 	ble.w	80142b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801410c:	112d      	asrs	r5, r5, #4
 801410e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014112:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014116:	6816      	ldr	r6, [r2, #0]
 8014118:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801411c:	6006      	str	r6, [r0, #0]
 801411e:	6856      	ldr	r6, [r2, #4]
 8014120:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014124:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014128:	6046      	str	r6, [r0, #4]
 801412a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801412e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014132:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014136:	f8a2 c006 	strh.w	ip, [r2, #6]
 801413a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801413e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014142:	4565      	cmp	r5, ip
 8014144:	f1a1 0208 	sub.w	r2, r1, #8
 8014148:	db06      	blt.n	8014158 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801414a:	d119      	bne.n	8014180 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801414c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014150:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014154:	42ae      	cmp	r6, r5
 8014156:	dd13      	ble.n	8014180 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014158:	460e      	mov	r6, r1
 801415a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801415e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014162:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014166:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801416a:	601d      	str	r5, [r3, #0]
 801416c:	6875      	ldr	r5, [r6, #4]
 801416e:	605d      	str	r5, [r3, #4]
 8014170:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014174:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014178:	f821 8c04 	strh.w	r8, [r1, #-4]
 801417c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014180:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014184:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014188:	42ae      	cmp	r6, r5
 801418a:	db06      	blt.n	801419a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801418c:	d116      	bne.n	80141bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801418e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014192:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014196:	45ac      	cmp	ip, r5
 8014198:	da10      	bge.n	80141bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801419a:	681d      	ldr	r5, [r3, #0]
 801419c:	f9b0 8000 	ldrsh.w	r8, [r0]
 80141a0:	6005      	str	r5, [r0, #0]
 80141a2:	685d      	ldr	r5, [r3, #4]
 80141a4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80141a8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80141ac:	f8a0 8008 	strh.w	r8, [r0, #8]
 80141b0:	6045      	str	r5, [r0, #4]
 80141b2:	8146      	strh	r6, [r0, #10]
 80141b4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80141b8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80141bc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80141c0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80141c4:	4565      	cmp	r5, ip
 80141c6:	db06      	blt.n	80141d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80141c8:	d119      	bne.n	80141fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80141ca:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80141ce:	f9b0 5000 	ldrsh.w	r5, [r0]
 80141d2:	42ae      	cmp	r6, r5
 80141d4:	da13      	bge.n	80141fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80141d6:	460e      	mov	r6, r1
 80141d8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80141dc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80141e0:	6005      	str	r5, [r0, #0]
 80141e2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80141e6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80141ea:	6875      	ldr	r5, [r6, #4]
 80141ec:	6045      	str	r5, [r0, #4]
 80141ee:	f821 9c08 	strh.w	r9, [r1, #-8]
 80141f2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80141f6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80141fa:	f821 ec02 	strh.w	lr, [r1, #-2]
 80141fe:	3308      	adds	r3, #8
 8014200:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014204:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014208:	45e6      	cmp	lr, ip
 801420a:	dbf8      	blt.n	80141fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801420c:	d105      	bne.n	801421a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801420e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014212:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014216:	42ae      	cmp	r6, r5
 8014218:	dbf1      	blt.n	80141fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801421a:	4615      	mov	r5, r2
 801421c:	3a08      	subs	r2, #8
 801421e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014222:	45b4      	cmp	ip, r6
 8014224:	dbf9      	blt.n	801421a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014226:	d105      	bne.n	8014234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014228:	f9b0 8000 	ldrsh.w	r8, [r0]
 801422c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014230:	45b0      	cmp	r8, r6
 8014232:	dbf2      	blt.n	801421a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014234:	4293      	cmp	r3, r2
 8014236:	f1a5 0608 	sub.w	r6, r5, #8
 801423a:	d816      	bhi.n	801426a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801423c:	f8d6 c000 	ldr.w	ip, [r6]
 8014240:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014244:	f8c3 c000 	str.w	ip, [r3]
 8014248:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801424c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014250:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014254:	f8c3 c004 	str.w	ip, [r3, #4]
 8014258:	f825 ac08 	strh.w	sl, [r5, #-8]
 801425c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014260:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014264:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014268:	e7c9      	b.n	80141fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801426a:	f8d6 e000 	ldr.w	lr, [r6]
 801426e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014272:	f8c0 e000 	str.w	lr, [r0]
 8014276:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801427a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801427e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014282:	f8c0 e004 	str.w	lr, [r0, #4]
 8014286:	f825 ac08 	strh.w	sl, [r5, #-8]
 801428a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801428e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014292:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014296:	1acd      	subs	r5, r1, r3
 8014298:	1a16      	subs	r6, r2, r0
 801429a:	10ed      	asrs	r5, r5, #3
 801429c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80142a0:	bfb5      	itete	lt
 80142a2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80142a6:	e9c4 3100 	strdge	r3, r1, [r4]
 80142aa:	460a      	movlt	r2, r1
 80142ac:	4603      	movge	r3, r0
 80142ae:	3408      	adds	r4, #8
 80142b0:	4618      	mov	r0, r3
 80142b2:	4611      	mov	r1, r2
 80142b4:	e724      	b.n	8014100 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80142b6:	4299      	cmp	r1, r3
 80142b8:	d928      	bls.n	801430c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80142ba:	f1a3 0210 	sub.w	r2, r3, #16
 80142be:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80142c2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80142c6:	45ac      	cmp	ip, r5
 80142c8:	db06      	blt.n	80142d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80142ca:	d11d      	bne.n	8014308 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80142cc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80142d0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80142d4:	42ae      	cmp	r6, r5
 80142d6:	da17      	bge.n	8014308 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80142d8:	4615      	mov	r5, r2
 80142da:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80142de:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80142e2:	6116      	str	r6, [r2, #16]
 80142e4:	686e      	ldr	r6, [r5, #4]
 80142e6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80142ea:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80142ee:	f8a2 9008 	strh.w	r9, [r2, #8]
 80142f2:	42a8      	cmp	r0, r5
 80142f4:	6156      	str	r6, [r2, #20]
 80142f6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80142fa:	f8a2 800c 	strh.w	r8, [r2, #12]
 80142fe:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014302:	f1a2 0208 	sub.w	r2, r2, #8
 8014306:	d1da      	bne.n	80142be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014308:	3308      	adds	r3, #8
 801430a:	e7d4      	b.n	80142b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801430c:	42bc      	cmp	r4, r7
 801430e:	d903      	bls.n	8014318 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014310:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014314:	3c08      	subs	r4, #8
 8014316:	e6f3      	b.n	8014100 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014318:	b050      	add	sp, #320	; 0x140
 801431a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801431e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801431e:	b510      	push	{r4, lr}
 8014320:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014322:	07da      	lsls	r2, r3, #31
 8014324:	4604      	mov	r4, r0
 8014326:	d507      	bpl.n	8014338 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014328:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801432c:	f7ff fe8a 	bl	8014044 <_ZN8touchgfx7Outline6lineToEii>
 8014330:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014332:	f023 0301 	bic.w	r3, r3, #1
 8014336:	6243      	str	r3, [r0, #36]	; 0x24
 8014338:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801433a:	079b      	lsls	r3, r3, #30
 801433c:	d521      	bpl.n	8014382 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801433e:	6923      	ldr	r3, [r4, #16]
 8014340:	88d9      	ldrh	r1, [r3, #6]
 8014342:	889a      	ldrh	r2, [r3, #4]
 8014344:	430a      	orrs	r2, r1
 8014346:	d010      	beq.n	801436a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014348:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801434c:	2a00      	cmp	r2, #0
 801434e:	db0c      	blt.n	801436a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014350:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014352:	428a      	cmp	r2, r1
 8014354:	da09      	bge.n	801436a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014356:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801435a:	4291      	cmp	r1, r2
 801435c:	bf88      	it	hi
 801435e:	3308      	addhi	r3, #8
 8014360:	f102 0201 	add.w	r2, r2, #1
 8014364:	bf88      	it	hi
 8014366:	6123      	strhi	r3, [r4, #16]
 8014368:	60a2      	str	r2, [r4, #8]
 801436a:	68a1      	ldr	r1, [r4, #8]
 801436c:	b129      	cbz	r1, 801437a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801436e:	6863      	ldr	r3, [r4, #4]
 8014370:	4299      	cmp	r1, r3
 8014372:	d802      	bhi.n	801437a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014374:	68e0      	ldr	r0, [r4, #12]
 8014376:	f7ff febc 	bl	80140f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801437a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801437c:	f023 0302 	bic.w	r3, r3, #2
 8014380:	6263      	str	r3, [r4, #36]	; 0x24
 8014382:	68e0      	ldr	r0, [r4, #12]
 8014384:	bd10      	pop	{r4, pc}
	...

08014388 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014388:	4b02      	ldr	r3, [pc, #8]	; (8014394 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801438a:	6018      	str	r0, [r3, #0]
 801438c:	4b02      	ldr	r3, [pc, #8]	; (8014398 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801438e:	6019      	str	r1, [r3, #0]
 8014390:	4770      	bx	lr
 8014392:	bf00      	nop
 8014394:	20012dac 	.word	0x20012dac
 8014398:	20012db0 	.word	0x20012db0

0801439c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801439c:	4a02      	ldr	r2, [pc, #8]	; (80143a8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801439e:	2300      	movs	r3, #0
 80143a0:	6013      	str	r3, [r2, #0]
 80143a2:	4a02      	ldr	r2, [pc, #8]	; (80143ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80143a4:	6013      	str	r3, [r2, #0]
 80143a6:	4770      	bx	lr
 80143a8:	20012dac 	.word	0x20012dac
 80143ac:	20012db0 	.word	0x20012db0

080143b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80143b0:	4b01      	ldr	r3, [pc, #4]	; (80143b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80143b2:	6818      	ldr	r0, [r3, #0]
 80143b4:	4770      	bx	lr
 80143b6:	bf00      	nop
 80143b8:	20012dac 	.word	0x20012dac

080143bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80143bc:	4b01      	ldr	r3, [pc, #4]	; (80143c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80143be:	6818      	ldr	r0, [r3, #0]
 80143c0:	4770      	bx	lr
 80143c2:	bf00      	nop
 80143c4:	20012db0 	.word	0x20012db0

080143c8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80143c8:	b510      	push	{r4, lr}
 80143ca:	6803      	ldr	r3, [r0, #0]
 80143cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143ce:	460c      	mov	r4, r1
 80143d0:	4798      	blx	r3
 80143d2:	1b03      	subs	r3, r0, r4
 80143d4:	4258      	negs	r0, r3
 80143d6:	4158      	adcs	r0, r3
 80143d8:	bd10      	pop	{r4, pc}
	...

080143dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80143dc:	4b01      	ldr	r3, [pc, #4]	; (80143e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80143de:	6019      	str	r1, [r3, #0]
 80143e0:	4770      	bx	lr
 80143e2:	bf00      	nop
 80143e4:	20012db4 	.word	0x20012db4

080143e8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80143e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143ec:	4696      	mov	lr, r2
 80143ee:	4605      	mov	r5, r0
 80143f0:	4614      	mov	r4, r2
 80143f2:	460e      	mov	r6, r1
 80143f4:	461f      	mov	r7, r3
 80143f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80143fa:	b097      	sub	sp, #92	; 0x5c
 80143fc:	f10d 0c1c 	add.w	ip, sp, #28
 8014400:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014404:	f8de 3000 	ldr.w	r3, [lr]
 8014408:	f8cc 3000 	str.w	r3, [ip]
 801440c:	f104 0e14 	add.w	lr, r4, #20
 8014410:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014414:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014418:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801441c:	f8de 3000 	ldr.w	r3, [lr]
 8014420:	f8cc 3000 	str.w	r3, [ip]
 8014424:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014428:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801442c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014430:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014434:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014438:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801443c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014440:	f8de 3000 	ldr.w	r3, [lr]
 8014444:	f8cc 3000 	str.w	r3, [ip]
 8014448:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801444a:	682b      	ldr	r3, [r5, #0]
 801444c:	9201      	str	r2, [sp, #4]
 801444e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014452:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014454:	9200      	str	r2, [sp, #0]
 8014456:	f8cd 8008 	str.w	r8, [sp, #8]
 801445a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801445e:	aa07      	add	r2, sp, #28
 8014460:	463b      	mov	r3, r7
 8014462:	4631      	mov	r1, r6
 8014464:	4628      	mov	r0, r5
 8014466:	47d8      	blx	fp
 8014468:	46a6      	mov	lr, r4
 801446a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801446e:	f10d 0c1c 	add.w	ip, sp, #28
 8014472:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014476:	f8de 3000 	ldr.w	r3, [lr]
 801447a:	f8cc 3000 	str.w	r3, [ip]
 801447e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014482:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014486:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801448a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801448e:	343c      	adds	r4, #60	; 0x3c
 8014490:	f8de 3000 	ldr.w	r3, [lr]
 8014494:	f8cc 3000 	str.w	r3, [ip]
 8014498:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801449a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801449e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80144a2:	6823      	ldr	r3, [r4, #0]
 80144a4:	f8cc 3000 	str.w	r3, [ip]
 80144a8:	682b      	ldr	r3, [r5, #0]
 80144aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80144ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80144b0:	9201      	str	r2, [sp, #4]
 80144b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80144b4:	9200      	str	r2, [sp, #0]
 80144b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80144ba:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80144bc:	aa07      	add	r2, sp, #28
 80144be:	463b      	mov	r3, r7
 80144c0:	4631      	mov	r1, r6
 80144c2:	4628      	mov	r0, r5
 80144c4:	47a0      	blx	r4
 80144c6:	b017      	add	sp, #92	; 0x5c
 80144c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80144cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144d0:	b08d      	sub	sp, #52	; 0x34
 80144d2:	4688      	mov	r8, r1
 80144d4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80144d6:	f8d3 c000 	ldr.w	ip, [r3]
 80144da:	680f      	ldr	r7, [r1, #0]
 80144dc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80144e0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80144e4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80144e8:	edd3 6a07 	vldr	s13, [r3, #28]
 80144ec:	9918      	ldr	r1, [sp, #96]	; 0x60
 80144ee:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80144f2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80144f6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80144fa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80144fe:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014502:	eba7 070c 	sub.w	r7, r7, ip
 8014506:	42bc      	cmp	r4, r7
 8014508:	bfa8      	it	ge
 801450a:	463c      	movge	r4, r7
 801450c:	ee07 4a90 	vmov	s15, r4
 8014510:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014514:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014518:	ee25 4a04 	vmul.f32	s8, s10, s8
 801451c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014520:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014524:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014528:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801452c:	eb09 0e0c 	add.w	lr, r9, ip
 8014530:	4571      	cmp	r1, lr
 8014532:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014536:	ee32 1a05 	vadd.f32	s2, s4, s10
 801453a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801453e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014542:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014546:	f340 808d 	ble.w	8014664 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801454a:	eba1 060e 	sub.w	r6, r1, lr
 801454e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014552:	ee07 5a10 	vmov	s14, r5
 8014556:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801455a:	2d00      	cmp	r5, #0
 801455c:	fb04 6615 	mls	r6, r4, r5, r6
 8014560:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014564:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014568:	eea7 1a05 	vfma.f32	s2, s14, s10
 801456c:	dd13      	ble.n	8014596 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801456e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014572:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014576:	eef5 6a40 	vcmp.f32	s13, #0.0
 801457a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801457e:	bf18      	it	ne
 8014580:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014584:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014588:	bf08      	it	eq
 801458a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801458e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014592:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014596:	fb05 f204 	mul.w	r2, r5, r4
 801459a:	1abf      	subs	r7, r7, r2
 801459c:	4494      	add	ip, r2
 801459e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80145a2:	4411      	add	r1, r2
 80145a4:	eb09 020c 	add.w	r2, r9, ip
 80145a8:	443a      	add	r2, r7
 80145aa:	b209      	sxth	r1, r1
 80145ac:	428a      	cmp	r2, r1
 80145ae:	bfc4      	itt	gt
 80145b0:	eba1 0209 	subgt.w	r2, r1, r9
 80145b4:	eba2 070c 	subgt.w	r7, r2, ip
 80145b8:	2f00      	cmp	r7, #0
 80145ba:	dd50      	ble.n	801465e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80145bc:	fb97 f1f4 	sdiv	r1, r7, r4
 80145c0:	fb04 7211 	mls	r2, r4, r1, r7
 80145c4:	b90a      	cbnz	r2, 80145ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80145c6:	3901      	subs	r1, #1
 80145c8:	4622      	mov	r2, r4
 80145ca:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80145ce:	6840      	ldr	r0, [r0, #4]
 80145d0:	900b      	str	r0, [sp, #44]	; 0x2c
 80145d2:	f8d0 a000 	ldr.w	sl, [r0]
 80145d6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80145d8:	9008      	str	r0, [sp, #32]
 80145da:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80145de:	9818      	ldr	r0, [sp, #96]	; 0x60
 80145e0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80145e4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80145e8:	695b      	ldr	r3, [r3, #20]
 80145ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80145ec:	445b      	add	r3, fp
 80145ee:	eef0 6a42 	vmov.f32	s13, s4
 80145f2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80145f6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80145fa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80145fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014602:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014606:	9307      	str	r3, [sp, #28]
 8014608:	ee17 7a90 	vmov	r7, s15
 801460c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014610:	eeb0 7a61 	vmov.f32	s14, s3
 8014614:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014618:	ee16 3a90 	vmov	r3, s13
 801461c:	fb97 f7f4 	sdiv	r7, r7, r4
 8014620:	ee17 ca90 	vmov	ip, s15
 8014624:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014628:	fb9c fcf4 	sdiv	ip, ip, r4
 801462c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014630:	9302      	str	r3, [sp, #8]
 8014632:	ee17 3a10 	vmov	r3, s14
 8014636:	44b6      	add	lr, r6
 8014638:	fb04 e505 	mla	r5, r4, r5, lr
 801463c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014640:	fb07 3706 	mla	r7, r7, r6, r3
 8014644:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014648:	e9cd 4700 	strd	r4, r7, [sp]
 801464c:	2900      	cmp	r1, #0
 801464e:	bfcc      	ite	gt
 8014650:	46a1      	movgt	r9, r4
 8014652:	4691      	movle	r9, r2
 8014654:	eba9 0306 	sub.w	r3, r9, r6
 8014658:	f8da 4008 	ldr.w	r4, [sl, #8]
 801465c:	47a0      	blx	r4
 801465e:	b00d      	add	sp, #52	; 0x34
 8014660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014664:	2500      	movs	r5, #0
 8014666:	462e      	mov	r6, r5
 8014668:	e799      	b.n	801459e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801466c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801466c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014670:	b0db      	sub	sp, #364	; 0x16c
 8014672:	461d      	mov	r5, r3
 8014674:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014678:	930a      	str	r3, [sp, #40]	; 0x28
 801467a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801467e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014680:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014684:	9310      	str	r3, [sp, #64]	; 0x40
 8014686:	6803      	ldr	r3, [r0, #0]
 8014688:	910f      	str	r1, [sp, #60]	; 0x3c
 801468a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801468c:	9009      	str	r0, [sp, #36]	; 0x24
 801468e:	4614      	mov	r4, r2
 8014690:	4629      	mov	r1, r5
 8014692:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014696:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801469a:	47b8      	blx	r7
 801469c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801469e:	6058      	str	r0, [r3, #4]
 80146a0:	2800      	cmp	r0, #0
 80146a2:	f000 83a1 	beq.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146a6:	682b      	ldr	r3, [r5, #0]
 80146a8:	9314      	str	r3, [sp, #80]	; 0x50
 80146aa:	686b      	ldr	r3, [r5, #4]
 80146ac:	9315      	str	r3, [sp, #84]	; 0x54
 80146ae:	4bc4      	ldr	r3, [pc, #784]	; (80149c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80146b0:	ed94 7a02 	vldr	s14, [r4, #8]
 80146b4:	7819      	ldrb	r1, [r3, #0]
 80146b6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80146ba:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80146be:	2900      	cmp	r1, #0
 80146c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80146c4:	bf16      	itet	ne
 80146c6:	4619      	movne	r1, r3
 80146c8:	4611      	moveq	r1, r2
 80146ca:	4613      	movne	r3, r2
 80146cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146d0:	9116      	str	r1, [sp, #88]	; 0x58
 80146d2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80146d6:	f240 8387 	bls.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146da:	ed94 7a07 	vldr	s14, [r4, #28]
 80146de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80146e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146e6:	f240 837f 	bls.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146ea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80146ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80146f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146f6:	f240 8377 	bls.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146fa:	6822      	ldr	r2, [r4, #0]
 80146fc:	4bb1      	ldr	r3, [pc, #708]	; (80149c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80146fe:	429a      	cmp	r2, r3
 8014700:	f2c0 8372 	blt.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014704:	49b0      	ldr	r1, [pc, #704]	; (80149c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014706:	6963      	ldr	r3, [r4, #20]
 8014708:	428a      	cmp	r2, r1
 801470a:	f300 836d 	bgt.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801470e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014712:	48ae      	ldr	r0, [pc, #696]	; (80149cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014714:	33ff      	adds	r3, #255	; 0xff
 8014716:	4283      	cmp	r3, r0
 8014718:	f200 8366 	bhi.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801471c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801471e:	4dac      	ldr	r5, [pc, #688]	; (80149d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014720:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014724:	33ff      	adds	r3, #255	; 0xff
 8014726:	42ab      	cmp	r3, r5
 8014728:	f200 835e 	bhi.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801472c:	6862      	ldr	r2, [r4, #4]
 801472e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014732:	33ff      	adds	r3, #255	; 0xff
 8014734:	4283      	cmp	r3, r0
 8014736:	f200 8357 	bhi.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801473a:	69a1      	ldr	r1, [r4, #24]
 801473c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014740:	33ff      	adds	r3, #255	; 0xff
 8014742:	4283      	cmp	r3, r0
 8014744:	f200 8350 	bhi.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014748:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801474a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801474e:	30ff      	adds	r0, #255	; 0xff
 8014750:	42a8      	cmp	r0, r5
 8014752:	f200 8349 	bhi.w	8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014756:	428a      	cmp	r2, r1
 8014758:	f280 8110 	bge.w	801497c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801475c:	429a      	cmp	r2, r3
 801475e:	f300 8119 	bgt.w	8014994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014762:	4299      	cmp	r1, r3
 8014764:	f280 811d 	bge.w	80149a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014768:	2502      	movs	r5, #2
 801476a:	2701      	movs	r7, #1
 801476c:	46a9      	mov	r9, r5
 801476e:	46b8      	mov	r8, r7
 8014770:	f04f 0a00 	mov.w	sl, #0
 8014774:	4621      	mov	r1, r4
 8014776:	a849      	add	r0, sp, #292	; 0x124
 8014778:	f003 feec 	bl	8018554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801477c:	4622      	mov	r2, r4
 801477e:	4653      	mov	r3, sl
 8014780:	a949      	add	r1, sp, #292	; 0x124
 8014782:	f8cd 9000 	str.w	r9, [sp]
 8014786:	a819      	add	r0, sp, #100	; 0x64
 8014788:	f004 f814 	bl	80187b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801478c:	4622      	mov	r2, r4
 801478e:	4653      	mov	r3, sl
 8014790:	a949      	add	r1, sp, #292	; 0x124
 8014792:	f8cd 8000 	str.w	r8, [sp]
 8014796:	a829      	add	r0, sp, #164	; 0xa4
 8014798:	f004 f80c 	bl	80187b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801479c:	4643      	mov	r3, r8
 801479e:	4622      	mov	r2, r4
 80147a0:	a949      	add	r1, sp, #292	; 0x124
 80147a2:	f8cd 9000 	str.w	r9, [sp]
 80147a6:	a839      	add	r0, sp, #228	; 0xe4
 80147a8:	f004 f804 	bl	80187b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80147ac:	42af      	cmp	r7, r5
 80147ae:	bfb5      	itete	lt
 80147b0:	2300      	movlt	r3, #0
 80147b2:	2301      	movge	r3, #1
 80147b4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80147b6:	930e      	strge	r3, [sp, #56]	; 0x38
 80147b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80147ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80147be:	af12      	add	r7, sp, #72	; 0x48
 80147c0:	bfb9      	ittee	lt
 80147c2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80147c4:	ac19      	addlt	r4, sp, #100	; 0x64
 80147c6:	ad19      	addge	r5, sp, #100	; 0x64
 80147c8:	ac29      	addge	r4, sp, #164	; 0xa4
 80147ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80147ce:	b928      	cbnz	r0, 80147dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80147d0:	4b80      	ldr	r3, [pc, #512]	; (80149d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80147d2:	6818      	ldr	r0, [r3, #0]
 80147d4:	6803      	ldr	r3, [r0, #0]
 80147d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80147d8:	4798      	blx	r3
 80147da:	6038      	str	r0, [r7, #0]
 80147dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80147de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80147e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80147e6:	930c      	str	r3, [sp, #48]	; 0x30
 80147e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80147ea:	6963      	ldr	r3, [r4, #20]
 80147ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80147ee:	440b      	add	r3, r1
 80147f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80147f4:	4408      	add	r0, r1
 80147f6:	b200      	sxth	r0, r0
 80147f8:	4283      	cmp	r3, r0
 80147fa:	900d      	str	r0, [sp, #52]	; 0x34
 80147fc:	f280 80dd 	bge.w	80149ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014800:	428b      	cmp	r3, r1
 8014802:	da08      	bge.n	8014816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014804:	2a00      	cmp	r2, #0
 8014806:	dd06      	ble.n	8014816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014808:	1acb      	subs	r3, r1, r3
 801480a:	429a      	cmp	r2, r3
 801480c:	f2c0 80e4 	blt.w	80149d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014810:	2b00      	cmp	r3, #0
 8014812:	f300 80e2 	bgt.w	80149da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014816:	6967      	ldr	r7, [r4, #20]
 8014818:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801481a:	443b      	add	r3, r7
 801481c:	461f      	mov	r7, r3
 801481e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014820:	1bdf      	subs	r7, r3, r7
 8014822:	4297      	cmp	r7, r2
 8014824:	bfa8      	it	ge
 8014826:	4617      	movge	r7, r2
 8014828:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801482c:	2f00      	cmp	r7, #0
 801482e:	f340 8166 	ble.w	8014afe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014832:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014834:	6829      	ldr	r1, [r5, #0]
 8014836:	f9b3 2000 	ldrsh.w	r2, [r3]
 801483a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801483e:	6820      	ldr	r0, [r4, #0]
 8014840:	4411      	add	r1, r2
 8014842:	4299      	cmp	r1, r3
 8014844:	dd1a      	ble.n	801487c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014846:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801484a:	440b      	add	r3, r1
 801484c:	4402      	add	r2, r0
 801484e:	b21b      	sxth	r3, r3
 8014850:	429a      	cmp	r2, r3
 8014852:	dc13      	bgt.n	801487c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014856:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014858:	681b      	ldr	r3, [r3, #0]
 801485a:	9206      	str	r2, [sp, #24]
 801485c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801485e:	9205      	str	r2, [sp, #20]
 8014860:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014862:	9500      	str	r5, [sp, #0]
 8014864:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014868:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801486a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801486c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014870:	a912      	add	r1, sp, #72	; 0x48
 8014872:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014876:	aa49      	add	r2, sp, #292	; 0x124
 8014878:	4623      	mov	r3, r4
 801487a:	47c8      	blx	r9
 801487c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014880:	441a      	add	r2, r3
 8014882:	6963      	ldr	r3, [r4, #20]
 8014884:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014888:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801488c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014890:	68a1      	ldr	r1, [r4, #8]
 8014892:	ed94 6a08 	vldr	s12, [r4, #32]
 8014896:	6022      	str	r2, [r4, #0]
 8014898:	3301      	adds	r3, #1
 801489a:	6163      	str	r3, [r4, #20]
 801489c:	69a3      	ldr	r3, [r4, #24]
 801489e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80148a2:	3b01      	subs	r3, #1
 80148a4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80148a8:	61a3      	str	r3, [r4, #24]
 80148aa:	6923      	ldr	r3, [r4, #16]
 80148ac:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80148b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80148b4:	edd4 6a07 	vldr	s13, [r4, #28]
 80148b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80148bc:	440b      	add	r3, r1
 80148be:	68e1      	ldr	r1, [r4, #12]
 80148c0:	6123      	str	r3, [r4, #16]
 80148c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80148c6:	428b      	cmp	r3, r1
 80148c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80148cc:	db15      	blt.n	80148fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80148ce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80148d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80148d6:	3201      	adds	r2, #1
 80148d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80148dc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80148e0:	6022      	str	r2, [r4, #0]
 80148e2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80148e6:	1a5b      	subs	r3, r3, r1
 80148e8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80148ec:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80148f0:	6123      	str	r3, [r4, #16]
 80148f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80148f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80148fa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80148fe:	441a      	add	r2, r3
 8014900:	696b      	ldr	r3, [r5, #20]
 8014902:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014906:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801490a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801490e:	68a9      	ldr	r1, [r5, #8]
 8014910:	ed95 6a08 	vldr	s12, [r5, #32]
 8014914:	602a      	str	r2, [r5, #0]
 8014916:	3301      	adds	r3, #1
 8014918:	616b      	str	r3, [r5, #20]
 801491a:	69ab      	ldr	r3, [r5, #24]
 801491c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014920:	3b01      	subs	r3, #1
 8014922:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014926:	61ab      	str	r3, [r5, #24]
 8014928:	692b      	ldr	r3, [r5, #16]
 801492a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801492e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014932:	edd5 6a07 	vldr	s13, [r5, #28]
 8014936:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801493a:	440b      	add	r3, r1
 801493c:	68e9      	ldr	r1, [r5, #12]
 801493e:	612b      	str	r3, [r5, #16]
 8014940:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014944:	428b      	cmp	r3, r1
 8014946:	edc5 6a07 	vstr	s13, [r5, #28]
 801494a:	db15      	blt.n	8014978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801494c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014950:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014954:	3201      	adds	r2, #1
 8014956:	edc5 6a07 	vstr	s13, [r5, #28]
 801495a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801495e:	602a      	str	r2, [r5, #0]
 8014960:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014964:	1a5b      	subs	r3, r3, r1
 8014966:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801496a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801496e:	612b      	str	r3, [r5, #16]
 8014970:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014974:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014978:	3f01      	subs	r7, #1
 801497a:	e757      	b.n	801482c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801497c:	4299      	cmp	r1, r3
 801497e:	dc13      	bgt.n	80149a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014980:	429a      	cmp	r2, r3
 8014982:	da14      	bge.n	80149ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014984:	2502      	movs	r5, #2
 8014986:	2703      	movs	r7, #3
 8014988:	46a9      	mov	r9, r5
 801498a:	f04f 0800 	mov.w	r8, #0
 801498e:	f04f 0a01 	mov.w	sl, #1
 8014992:	e6ef      	b.n	8014774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014994:	2501      	movs	r5, #1
 8014996:	2700      	movs	r7, #0
 8014998:	46a9      	mov	r9, r5
 801499a:	46b8      	mov	r8, r7
 801499c:	f04f 0a02 	mov.w	sl, #2
 80149a0:	e6e8      	b.n	8014774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80149a2:	2501      	movs	r5, #1
 80149a4:	2702      	movs	r7, #2
 80149a6:	e6e1      	b.n	801476c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80149a8:	2500      	movs	r5, #0
 80149aa:	2701      	movs	r7, #1
 80149ac:	e7f4      	b.n	8014998 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80149ae:	2702      	movs	r7, #2
 80149b0:	2503      	movs	r5, #3
 80149b2:	f04f 0900 	mov.w	r9, #0
 80149b6:	46b8      	mov	r8, r7
 80149b8:	e7e9      	b.n	801498e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80149ba:	4613      	mov	r3, r2
 80149bc:	e728      	b.n	8014810 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80149be:	bf00      	nop
 80149c0:	20012d9c 	.word	0x20012d9c
 80149c4:	fffd8f01 	.word	0xfffd8f01
 80149c8:	00027100 	.word	0x00027100
 80149cc:	0004e1ff 	.word	0x0004e1ff
 80149d0:	0004e1fe 	.word	0x0004e1fe
 80149d4:	20012da4 	.word	0x20012da4
 80149d8:	4613      	mov	r3, r2
 80149da:	992b      	ldr	r1, [sp, #172]	; 0xac
 80149dc:	9111      	str	r1, [sp, #68]	; 0x44
 80149de:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80149e2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80149e6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80149e8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80149ec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80149f0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80149f4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80149f8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80149fc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014a00:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014a04:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014a08:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8014a0c:	469e      	mov	lr, r3
 8014a0e:	469c      	mov	ip, r3
 8014a10:	f04f 0900 	mov.w	r9, #0
 8014a14:	f1bc 0f00 	cmp.w	ip, #0
 8014a18:	d147      	bne.n	8014aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8014a1a:	eb03 0c07 	add.w	ip, r3, r7
 8014a1e:	1ad7      	subs	r7, r2, r3
 8014a20:	f1b9 0f00 	cmp.w	r9, #0
 8014a24:	d009      	beq.n	8014a3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014a26:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8014a2a:	9029      	str	r0, [sp, #164]	; 0xa4
 8014a2c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014a30:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014a34:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014a38:	912d      	str	r1, [sp, #180]	; 0xb4
 8014a3a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014a3c:	9111      	str	r1, [sp, #68]	; 0x44
 8014a3e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014a42:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014a46:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014a4a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014a4e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014a52:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014a56:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014a5a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014a5e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014a62:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014a66:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014a6a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014a6e:	f04f 0800 	mov.w	r8, #0
 8014a72:	f1be 0f00 	cmp.w	lr, #0
 8014a76:	d031      	beq.n	8014adc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014a78:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014a7a:	4431      	add	r1, r6
 8014a7c:	4549      	cmp	r1, r9
 8014a7e:	4450      	add	r0, sl
 8014a80:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014a84:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014a88:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014a8c:	db08      	blt.n	8014aa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8014a8e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014a92:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014a96:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014a9a:	3001      	adds	r0, #1
 8014a9c:	eba1 0109 	sub.w	r1, r1, r9
 8014aa0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014aa4:	f04f 0801 	mov.w	r8, #1
 8014aa8:	e7e3      	b.n	8014a72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8014aaa:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014aac:	4431      	add	r1, r6
 8014aae:	4541      	cmp	r1, r8
 8014ab0:	4450      	add	r0, sl
 8014ab2:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014ab6:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014aba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014abe:	db08      	blt.n	8014ad2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014ac0:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014ac4:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014ac8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014acc:	3001      	adds	r0, #1
 8014ace:	eba1 0108 	sub.w	r1, r1, r8
 8014ad2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014ad6:	f04f 0901 	mov.w	r9, #1
 8014ada:	e79b      	b.n	8014a14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014adc:	449c      	add	ip, r3
 8014ade:	1aff      	subs	r7, r7, r3
 8014ae0:	f1b8 0f00 	cmp.w	r8, #0
 8014ae4:	d009      	beq.n	8014afa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014ae6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014aea:	9019      	str	r0, [sp, #100]	; 0x64
 8014aec:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014af0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014af4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014af8:	911d      	str	r1, [sp, #116]	; 0x74
 8014afa:	1ad2      	subs	r2, r2, r3
 8014afc:	e68b      	b.n	8014816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014afe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014b00:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014b02:	2b00      	cmp	r3, #0
 8014b04:	f000 80d1 	beq.w	8014caa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014b08:	ad19      	add	r5, sp, #100	; 0x64
 8014b0a:	ac39      	add	r4, sp, #228	; 0xe4
 8014b0c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014b0e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014b12:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014b16:	930c      	str	r3, [sp, #48]	; 0x30
 8014b18:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014b1a:	6963      	ldr	r3, [r4, #20]
 8014b1c:	440b      	add	r3, r1
 8014b1e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014b22:	4408      	add	r0, r1
 8014b24:	b200      	sxth	r0, r0
 8014b26:	4283      	cmp	r3, r0
 8014b28:	900d      	str	r0, [sp, #52]	; 0x34
 8014b2a:	f280 80c1 	bge.w	8014cb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014b2e:	428b      	cmp	r3, r1
 8014b30:	da08      	bge.n	8014b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014b32:	2a00      	cmp	r2, #0
 8014b34:	dd06      	ble.n	8014b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014b36:	1acb      	subs	r3, r1, r3
 8014b38:	429a      	cmp	r2, r3
 8014b3a:	f2c0 80bb 	blt.w	8014cb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014b3e:	2b00      	cmp	r3, #0
 8014b40:	f300 80b9 	bgt.w	8014cb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014b44:	6967      	ldr	r7, [r4, #20]
 8014b46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014b48:	443b      	add	r3, r7
 8014b4a:	461f      	mov	r7, r3
 8014b4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014b4e:	1bdf      	subs	r7, r3, r7
 8014b50:	4297      	cmp	r7, r2
 8014b52:	bfa8      	it	ge
 8014b54:	4617      	movge	r7, r2
 8014b56:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014b5a:	2f00      	cmp	r7, #0
 8014b5c:	f340 813c 	ble.w	8014dd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014b60:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014b62:	6829      	ldr	r1, [r5, #0]
 8014b64:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014b68:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014b6c:	6820      	ldr	r0, [r4, #0]
 8014b6e:	4411      	add	r1, r2
 8014b70:	4299      	cmp	r1, r3
 8014b72:	dd1a      	ble.n	8014baa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014b74:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014b78:	440b      	add	r3, r1
 8014b7a:	4402      	add	r2, r0
 8014b7c:	b21b      	sxth	r3, r3
 8014b7e:	429a      	cmp	r2, r3
 8014b80:	dc13      	bgt.n	8014baa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014b82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014b86:	681b      	ldr	r3, [r3, #0]
 8014b88:	9206      	str	r2, [sp, #24]
 8014b8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014b8c:	9205      	str	r2, [sp, #20]
 8014b8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b90:	9500      	str	r5, [sp, #0]
 8014b92:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014b96:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014b98:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014b9a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014b9e:	a912      	add	r1, sp, #72	; 0x48
 8014ba0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014ba4:	aa49      	add	r2, sp, #292	; 0x124
 8014ba6:	4623      	mov	r3, r4
 8014ba8:	47c8      	blx	r9
 8014baa:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014bae:	441a      	add	r2, r3
 8014bb0:	6963      	ldr	r3, [r4, #20]
 8014bb2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014bb6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014bba:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014bbe:	68a1      	ldr	r1, [r4, #8]
 8014bc0:	ed94 6a08 	vldr	s12, [r4, #32]
 8014bc4:	6022      	str	r2, [r4, #0]
 8014bc6:	3301      	adds	r3, #1
 8014bc8:	6163      	str	r3, [r4, #20]
 8014bca:	69a3      	ldr	r3, [r4, #24]
 8014bcc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014bd0:	3b01      	subs	r3, #1
 8014bd2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014bd6:	61a3      	str	r3, [r4, #24]
 8014bd8:	6923      	ldr	r3, [r4, #16]
 8014bda:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014bde:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014be2:	edd4 6a07 	vldr	s13, [r4, #28]
 8014be6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014bea:	440b      	add	r3, r1
 8014bec:	68e1      	ldr	r1, [r4, #12]
 8014bee:	6123      	str	r3, [r4, #16]
 8014bf0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014bf4:	428b      	cmp	r3, r1
 8014bf6:	edc4 6a07 	vstr	s13, [r4, #28]
 8014bfa:	db15      	blt.n	8014c28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014bfc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014c00:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014c04:	3201      	adds	r2, #1
 8014c06:	edc4 6a07 	vstr	s13, [r4, #28]
 8014c0a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014c0e:	6022      	str	r2, [r4, #0]
 8014c10:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014c14:	1a5b      	subs	r3, r3, r1
 8014c16:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014c1a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014c1e:	6123      	str	r3, [r4, #16]
 8014c20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014c24:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014c28:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014c2c:	441a      	add	r2, r3
 8014c2e:	696b      	ldr	r3, [r5, #20]
 8014c30:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014c34:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014c38:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014c3c:	68a9      	ldr	r1, [r5, #8]
 8014c3e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014c42:	602a      	str	r2, [r5, #0]
 8014c44:	3301      	adds	r3, #1
 8014c46:	616b      	str	r3, [r5, #20]
 8014c48:	69ab      	ldr	r3, [r5, #24]
 8014c4a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014c4e:	3b01      	subs	r3, #1
 8014c50:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014c54:	61ab      	str	r3, [r5, #24]
 8014c56:	692b      	ldr	r3, [r5, #16]
 8014c58:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014c5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014c60:	edd5 6a07 	vldr	s13, [r5, #28]
 8014c64:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014c68:	440b      	add	r3, r1
 8014c6a:	68e9      	ldr	r1, [r5, #12]
 8014c6c:	612b      	str	r3, [r5, #16]
 8014c6e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014c72:	428b      	cmp	r3, r1
 8014c74:	edc5 6a07 	vstr	s13, [r5, #28]
 8014c78:	db15      	blt.n	8014ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014c7a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014c7e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014c82:	3201      	adds	r2, #1
 8014c84:	edc5 6a07 	vstr	s13, [r5, #28]
 8014c88:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014c8c:	602a      	str	r2, [r5, #0]
 8014c8e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014c92:	1a5b      	subs	r3, r3, r1
 8014c94:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014c98:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014c9c:	612b      	str	r3, [r5, #16]
 8014c9e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014ca2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014ca6:	3f01      	subs	r7, #1
 8014ca8:	e757      	b.n	8014b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014caa:	ad39      	add	r5, sp, #228	; 0xe4
 8014cac:	ac19      	add	r4, sp, #100	; 0x64
 8014cae:	e72d      	b.n	8014b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014cb0:	4613      	mov	r3, r2
 8014cb2:	e744      	b.n	8014b3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014cb4:	4613      	mov	r3, r2
 8014cb6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014cba:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014cbc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014cc0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014cc4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014cc8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014ccc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014cd0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014cd4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014cd8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014cda:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014cde:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014ce2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014ce6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014cea:	960e      	str	r6, [sp, #56]	; 0x38
 8014cec:	469e      	mov	lr, r3
 8014cee:	461f      	mov	r7, r3
 8014cf0:	f04f 0900 	mov.w	r9, #0
 8014cf4:	2f00      	cmp	r7, #0
 8014cf6:	d146      	bne.n	8014d86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014cf8:	449c      	add	ip, r3
 8014cfa:	1ad7      	subs	r7, r2, r3
 8014cfc:	f1b9 0f00 	cmp.w	r9, #0
 8014d00:	d009      	beq.n	8014d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014d02:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014d06:	9039      	str	r0, [sp, #228]	; 0xe4
 8014d08:	913d      	str	r1, [sp, #244]	; 0xf4
 8014d0a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014d0e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014d12:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014d16:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014d18:	910e      	str	r1, [sp, #56]	; 0x38
 8014d1a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014d1e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014d22:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014d26:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014d2a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014d2e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014d32:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014d36:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014d3a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014d3e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014d42:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014d46:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014d4a:	f04f 0800 	mov.w	r8, #0
 8014d4e:	f1be 0f00 	cmp.w	lr, #0
 8014d52:	d030      	beq.n	8014db6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014d54:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014d56:	4431      	add	r1, r6
 8014d58:	4549      	cmp	r1, r9
 8014d5a:	4450      	add	r0, sl
 8014d5c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014d60:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014d64:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014d68:	db08      	blt.n	8014d7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014d6a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014d6e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014d72:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014d76:	3001      	adds	r0, #1
 8014d78:	eba1 0109 	sub.w	r1, r1, r9
 8014d7c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014d80:	f04f 0801 	mov.w	r8, #1
 8014d84:	e7e3      	b.n	8014d4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014d86:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014d88:	4431      	add	r1, r6
 8014d8a:	4541      	cmp	r1, r8
 8014d8c:	4450      	add	r0, sl
 8014d8e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014d92:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014d96:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014d9a:	db08      	blt.n	8014dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014d9c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014da0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014da4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014da8:	3001      	adds	r0, #1
 8014daa:	eba1 0108 	sub.w	r1, r1, r8
 8014dae:	3f01      	subs	r7, #1
 8014db0:	f04f 0901 	mov.w	r9, #1
 8014db4:	e79e      	b.n	8014cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014db6:	449c      	add	ip, r3
 8014db8:	1aff      	subs	r7, r7, r3
 8014dba:	f1b8 0f00 	cmp.w	r8, #0
 8014dbe:	d009      	beq.n	8014dd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014dc0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014dc4:	9019      	str	r0, [sp, #100]	; 0x64
 8014dc6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014dca:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014dce:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014dd2:	911d      	str	r1, [sp, #116]	; 0x74
 8014dd4:	1ad2      	subs	r2, r2, r3
 8014dd6:	e6b5      	b.n	8014b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014dd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014dda:	681b      	ldr	r3, [r3, #0]
 8014ddc:	b923      	cbnz	r3, 8014de8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014dde:	4b04      	ldr	r3, [pc, #16]	; (8014df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014de0:	6818      	ldr	r0, [r3, #0]
 8014de2:	6803      	ldr	r3, [r0, #0]
 8014de4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014de6:	4798      	blx	r3
 8014de8:	b05b      	add	sp, #364	; 0x16c
 8014dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dee:	bf00      	nop
 8014df0:	20012da4 	.word	0x20012da4

08014df4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014df4:	b570      	push	{r4, r5, r6, lr}
 8014df6:	4604      	mov	r4, r0
 8014df8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014dfc:	9805      	ldr	r0, [sp, #20]
 8014dfe:	6061      	str	r1, [r4, #4]
 8014e00:	2500      	movs	r5, #0
 8014e02:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014e06:	8263      	strh	r3, [r4, #18]
 8014e08:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014e0c:	8025      	strh	r5, [r4, #0]
 8014e0e:	7221      	strb	r1, [r4, #8]
 8014e10:	7266      	strb	r6, [r4, #9]
 8014e12:	60e0      	str	r0, [r4, #12]
 8014e14:	8222      	strh	r2, [r4, #16]
 8014e16:	82a3      	strh	r3, [r4, #20]
 8014e18:	82e5      	strh	r5, [r4, #22]
 8014e1a:	8325      	strh	r5, [r4, #24]
 8014e1c:	8365      	strh	r5, [r4, #26]
 8014e1e:	83a5      	strh	r5, [r4, #28]
 8014e20:	83e5      	strh	r5, [r4, #30]
 8014e22:	8425      	strh	r5, [r4, #32]
 8014e24:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014e28:	b32e      	cbz	r6, 8014e76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014e2a:	6803      	ldr	r3, [r0, #0]
 8014e2c:	695b      	ldr	r3, [r3, #20]
 8014e2e:	4798      	blx	r3
 8014e30:	4606      	mov	r6, r0
 8014e32:	b300      	cbz	r0, 8014e76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014e34:	68e0      	ldr	r0, [r4, #12]
 8014e36:	6803      	ldr	r3, [r0, #0]
 8014e38:	4631      	mov	r1, r6
 8014e3a:	68db      	ldr	r3, [r3, #12]
 8014e3c:	4798      	blx	r3
 8014e3e:	4605      	mov	r5, r0
 8014e40:	b1c8      	cbz	r0, 8014e76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014e42:	7b43      	ldrb	r3, [r0, #13]
 8014e44:	7a82      	ldrb	r2, [r0, #10]
 8014e46:	005b      	lsls	r3, r3, #1
 8014e48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014e4c:	4313      	orrs	r3, r2
 8014e4e:	8423      	strh	r3, [r4, #32]
 8014e50:	7a63      	ldrb	r3, [r4, #9]
 8014e52:	2b06      	cmp	r3, #6
 8014e54:	d10f      	bne.n	8014e76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014e56:	68e0      	ldr	r0, [r4, #12]
 8014e58:	6803      	ldr	r3, [r0, #0]
 8014e5a:	462a      	mov	r2, r5
 8014e5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e5e:	4631      	mov	r1, r6
 8014e60:	4798      	blx	r3
 8014e62:	7b6b      	ldrb	r3, [r5, #13]
 8014e64:	005b      	lsls	r3, r3, #1
 8014e66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014e6a:	7aab      	ldrb	r3, [r5, #10]
 8014e6c:	4313      	orrs	r3, r2
 8014e6e:	4418      	add	r0, r3
 8014e70:	8c23      	ldrh	r3, [r4, #32]
 8014e72:	4418      	add	r0, r3
 8014e74:	8420      	strh	r0, [r4, #32]
 8014e76:	4620      	mov	r0, r4
 8014e78:	bd70      	pop	{r4, r5, r6, pc}

08014e7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014e7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e7e:	2400      	movs	r4, #0
 8014e80:	b085      	sub	sp, #20
 8014e82:	4681      	mov	r9, r0
 8014e84:	4688      	mov	r8, r1
 8014e86:	4692      	mov	sl, r2
 8014e88:	469b      	mov	fp, r3
 8014e8a:	4627      	mov	r7, r4
 8014e8c:	4625      	mov	r5, r4
 8014e8e:	4626      	mov	r6, r4
 8014e90:	4554      	cmp	r4, sl
 8014e92:	da2a      	bge.n	8014eea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e94:	2300      	movs	r3, #0
 8014e96:	9303      	str	r3, [sp, #12]
 8014e98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e9c:	429d      	cmp	r5, r3
 8014e9e:	d004      	beq.n	8014eaa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014ea0:	f242 030b 	movw	r3, #8203	; 0x200b
 8014ea4:	429d      	cmp	r5, r3
 8014ea6:	bf18      	it	ne
 8014ea8:	462f      	movne	r7, r5
 8014eaa:	ab03      	add	r3, sp, #12
 8014eac:	4642      	mov	r2, r8
 8014eae:	4659      	mov	r1, fp
 8014eb0:	4648      	mov	r0, r9
 8014eb2:	f003 f965 	bl	8018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014eb6:	4605      	mov	r5, r0
 8014eb8:	b1b8      	cbz	r0, 8014eea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014eba:	280a      	cmp	r0, #10
 8014ebc:	d015      	beq.n	8014eea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014ebe:	9a03      	ldr	r2, [sp, #12]
 8014ec0:	b18a      	cbz	r2, 8014ee6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014ec2:	7b50      	ldrb	r0, [r2, #13]
 8014ec4:	7a93      	ldrb	r3, [r2, #10]
 8014ec6:	8895      	ldrh	r5, [r2, #4]
 8014ec8:	0040      	lsls	r0, r0, #1
 8014eca:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014ece:	4303      	orrs	r3, r0
 8014ed0:	9301      	str	r3, [sp, #4]
 8014ed2:	f8d8 3000 	ldr.w	r3, [r8]
 8014ed6:	4639      	mov	r1, r7
 8014ed8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014eda:	4640      	mov	r0, r8
 8014edc:	4798      	blx	r3
 8014ede:	9b01      	ldr	r3, [sp, #4]
 8014ee0:	4418      	add	r0, r3
 8014ee2:	4406      	add	r6, r0
 8014ee4:	b2b6      	uxth	r6, r6
 8014ee6:	3401      	adds	r4, #1
 8014ee8:	e7d2      	b.n	8014e90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014eea:	4630      	mov	r0, r6
 8014eec:	b005      	add	sp, #20
 8014eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ef2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014ef2:	2a02      	cmp	r2, #2
 8014ef4:	b530      	push	{r4, r5, lr}
 8014ef6:	d011      	beq.n	8014f1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014ef8:	2a03      	cmp	r2, #3
 8014efa:	d01c      	beq.n	8014f36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014efc:	2a01      	cmp	r2, #1
 8014efe:	d10c      	bne.n	8014f1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014f00:	888b      	ldrh	r3, [r1, #4]
 8014f02:	8801      	ldrh	r1, [r0, #0]
 8014f04:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014f08:	8844      	ldrh	r4, [r0, #2]
 8014f0a:	8004      	strh	r4, [r0, #0]
 8014f0c:	1a5b      	subs	r3, r3, r1
 8014f0e:	1a9b      	subs	r3, r3, r2
 8014f10:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014f14:	8043      	strh	r3, [r0, #2]
 8014f16:	8081      	strh	r1, [r0, #4]
 8014f18:	80c2      	strh	r2, [r0, #6]
 8014f1a:	bd30      	pop	{r4, r5, pc}
 8014f1c:	88cb      	ldrh	r3, [r1, #6]
 8014f1e:	8842      	ldrh	r2, [r0, #2]
 8014f20:	1a9b      	subs	r3, r3, r2
 8014f22:	88c2      	ldrh	r2, [r0, #6]
 8014f24:	1a9b      	subs	r3, r3, r2
 8014f26:	888a      	ldrh	r2, [r1, #4]
 8014f28:	8801      	ldrh	r1, [r0, #0]
 8014f2a:	8043      	strh	r3, [r0, #2]
 8014f2c:	1a52      	subs	r2, r2, r1
 8014f2e:	8881      	ldrh	r1, [r0, #4]
 8014f30:	1a52      	subs	r2, r2, r1
 8014f32:	8002      	strh	r2, [r0, #0]
 8014f34:	e7f1      	b.n	8014f1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014f36:	88cb      	ldrh	r3, [r1, #6]
 8014f38:	8841      	ldrh	r1, [r0, #2]
 8014f3a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014f3e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014f42:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014f46:	8045      	strh	r5, [r0, #2]
 8014f48:	1a5b      	subs	r3, r3, r1
 8014f4a:	1a9b      	subs	r3, r3, r2
 8014f4c:	8003      	strh	r3, [r0, #0]
 8014f4e:	8082      	strh	r2, [r0, #4]
 8014f50:	80c4      	strh	r4, [r0, #6]
 8014f52:	e7e2      	b.n	8014f1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014f54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f58:	b09f      	sub	sp, #124	; 0x7c
 8014f5a:	9116      	str	r1, [sp, #88]	; 0x58
 8014f5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8014f5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014f60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014f62:	8809      	ldrh	r1, [r1, #0]
 8014f64:	889b      	ldrh	r3, [r3, #4]
 8014f66:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014f6a:	9212      	str	r2, [sp, #72]	; 0x48
 8014f6c:	440b      	add	r3, r1
 8014f6e:	b21b      	sxth	r3, r3
 8014f70:	9310      	str	r3, [sp, #64]	; 0x40
 8014f72:	f8d8 3000 	ldr.w	r3, [r8]
 8014f76:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014f7a:	7b19      	ldrb	r1, [r3, #12]
 8014f7c:	7adb      	ldrb	r3, [r3, #11]
 8014f7e:	9011      	str	r0, [sp, #68]	; 0x44
 8014f80:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014f84:	9114      	str	r1, [sp, #80]	; 0x50
 8014f86:	9315      	str	r3, [sp, #84]	; 0x54
 8014f88:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014f8c:	2a00      	cmp	r2, #0
 8014f8e:	d06a      	beq.n	8015066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014f90:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014f94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014f96:	2b06      	cmp	r3, #6
 8014f98:	bf14      	ite	ne
 8014f9a:	2301      	movne	r3, #1
 8014f9c:	2302      	moveq	r3, #2
 8014f9e:	4413      	add	r3, r2
 8014fa0:	f04f 0900 	mov.w	r9, #0
 8014fa4:	930f      	str	r3, [sp, #60]	; 0x3c
 8014fa6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014faa:	464c      	mov	r4, r9
 8014fac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014fb0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014fb4:	4293      	cmp	r3, r2
 8014fb6:	f280 808f 	bge.w	80150d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014fba:	2300      	movs	r3, #0
 8014fbc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014fc0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014fc4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014fc8:	429c      	cmp	r4, r3
 8014fca:	d006      	beq.n	8014fda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014fcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014fce:	f242 020b 	movw	r2, #8203	; 0x200b
 8014fd2:	4294      	cmp	r4, r2
 8014fd4:	bf18      	it	ne
 8014fd6:	4623      	movne	r3, r4
 8014fd8:	930d      	str	r3, [sp, #52]	; 0x34
 8014fda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014fdc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014fde:	f8d8 2000 	ldr.w	r2, [r8]
 8014fe2:	428b      	cmp	r3, r1
 8014fe4:	db41      	blt.n	801506a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014fe6:	6813      	ldr	r3, [r2, #0]
 8014fe8:	4610      	mov	r0, r2
 8014fea:	695b      	ldr	r3, [r3, #20]
 8014fec:	4798      	blx	r3
 8014fee:	4604      	mov	r4, r0
 8014ff0:	f8d8 0000 	ldr.w	r0, [r8]
 8014ff4:	6803      	ldr	r3, [r0, #0]
 8014ff6:	aa1d      	add	r2, sp, #116	; 0x74
 8014ff8:	689d      	ldr	r5, [r3, #8]
 8014ffa:	4621      	mov	r1, r4
 8014ffc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015000:	47a8      	blx	r5
 8015002:	901c      	str	r0, [sp, #112]	; 0x70
 8015004:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015008:	429c      	cmp	r4, r3
 801500a:	f000 80eb 	beq.w	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801500e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015012:	429c      	cmp	r4, r3
 8015014:	f000 80e6 	beq.w	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015018:	2c00      	cmp	r4, #0
 801501a:	f000 80f8 	beq.w	801520e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801501e:	2c0a      	cmp	r4, #10
 8015020:	d060      	beq.n	80150e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015022:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015024:	b36a      	cbz	r2, 8015082 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015026:	8894      	ldrh	r4, [r2, #4]
 8015028:	f1bb 0f00 	cmp.w	fp, #0
 801502c:	d03b      	beq.n	80150a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801502e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015032:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015036:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801503a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801503e:	f1bb 0f01 	cmp.w	fp, #1
 8015042:	ea49 0903 	orr.w	r9, r9, r3
 8015046:	d134      	bne.n	80150b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015048:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801504a:	eba6 0609 	sub.w	r6, r6, r9
 801504e:	2b00      	cmp	r3, #0
 8015050:	d14f      	bne.n	80150f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015052:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015054:	eb09 0306 	add.w	r3, r9, r6
 8015058:	4413      	add	r3, r2
 801505a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801505c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015060:	4293      	cmp	r3, r2
 8015062:	da51      	bge.n	8015108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015064:	e038      	b.n	80150d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015066:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015068:	e79a      	b.n	8014fa0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801506a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801506e:	9301      	str	r3, [sp, #4]
 8015070:	ab1d      	add	r3, sp, #116	; 0x74
 8015072:	9300      	str	r3, [sp, #0]
 8015074:	4659      	mov	r1, fp
 8015076:	ab1c      	add	r3, sp, #112	; 0x70
 8015078:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801507a:	f003 f8ca 	bl	8018212 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801507e:	4604      	mov	r4, r0
 8015080:	e7c0      	b.n	8015004 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015082:	f8d8 0000 	ldr.w	r0, [r8]
 8015086:	6803      	ldr	r3, [r0, #0]
 8015088:	691b      	ldr	r3, [r3, #16]
 801508a:	4798      	blx	r3
 801508c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015090:	4298      	cmp	r0, r3
 8015092:	f000 80a7 	beq.w	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015096:	f242 030b 	movw	r3, #8203	; 0x200b
 801509a:	4298      	cmp	r0, r3
 801509c:	f000 80a2 	beq.w	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80150a0:	f1bb 0f00 	cmp.w	fp, #0
 80150a4:	d100      	bne.n	80150a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80150a6:	444e      	add	r6, r9
 80150a8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80150aa:	2a00      	cmp	r2, #0
 80150ac:	d1bf      	bne.n	801502e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80150ae:	4691      	mov	r9, r2
 80150b0:	e098      	b.n	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80150b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80150b4:	2b00      	cmp	r3, #0
 80150b6:	f000 80ac 	beq.w	8015212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80150ba:	f1bb 0f00 	cmp.w	fp, #0
 80150be:	d118      	bne.n	80150f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80150c0:	f8d8 0000 	ldr.w	r0, [r8]
 80150c4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80150c6:	6803      	ldr	r3, [r0, #0]
 80150c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80150ca:	4798      	blx	r3
 80150cc:	4406      	add	r6, r0
 80150ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80150d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80150d2:	1af3      	subs	r3, r6, r3
 80150d4:	4293      	cmp	r3, r2
 80150d6:	dd17      	ble.n	8015108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80150d8:	2c00      	cmp	r4, #0
 80150da:	f000 8098 	beq.w	801520e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80150de:	2c0a      	cmp	r4, #10
 80150e0:	f040 8086 	bne.w	80151f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80150e4:	240a      	movs	r4, #10
 80150e6:	fab4 f084 	clz	r0, r4
 80150ea:	0940      	lsrs	r0, r0, #5
 80150ec:	b01f      	add	sp, #124	; 0x7c
 80150ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150f2:	f8d8 0000 	ldr.w	r0, [r8]
 80150f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80150f8:	6803      	ldr	r3, [r0, #0]
 80150fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80150fc:	4798      	blx	r3
 80150fe:	f1bb 0f01 	cmp.w	fp, #1
 8015102:	eba6 0600 	sub.w	r6, r6, r0
 8015106:	d0a4      	beq.n	8015052 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015108:	981c      	ldr	r0, [sp, #112]	; 0x70
 801510a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801510c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015110:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015114:	7b43      	ldrb	r3, [r0, #13]
 8015116:	015b      	lsls	r3, r3, #5
 8015118:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801511c:	7983      	ldrb	r3, [r0, #6]
 801511e:	4431      	add	r1, r6
 8015120:	4313      	orrs	r3, r2
 8015122:	440b      	add	r3, r1
 8015124:	42bb      	cmp	r3, r7
 8015126:	db5d      	blt.n	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015128:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801512a:	4299      	cmp	r1, r3
 801512c:	da5a      	bge.n	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801512e:	f8d8 0000 	ldr.w	r0, [r8]
 8015132:	6803      	ldr	r3, [r0, #0]
 8015134:	42b7      	cmp	r7, r6
 8015136:	bfc8      	it	gt
 8015138:	1bbf      	subgt	r7, r7, r6
 801513a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801513c:	bfcc      	ite	gt
 801513e:	b2bf      	uxthgt	r7, r7
 8015140:	2700      	movle	r7, #0
 8015142:	4798      	blx	r3
 8015144:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015146:	7b5a      	ldrb	r2, [r3, #13]
 8015148:	00d1      	lsls	r1, r2, #3
 801514a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801514e:	7a19      	ldrb	r1, [r3, #8]
 8015150:	4329      	orrs	r1, r5
 8015152:	0655      	lsls	r5, r2, #25
 8015154:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015156:	bf44      	itt	mi
 8015158:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801515c:	b209      	sxthmi	r1, r1
 801515e:	1945      	adds	r5, r0, r5
 8015160:	1a6d      	subs	r5, r5, r1
 8015162:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015164:	b2ad      	uxth	r5, r5
 8015166:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801516a:	fa0f fa85 	sxth.w	sl, r5
 801516e:	4551      	cmp	r1, sl
 8015170:	dd3c      	ble.n	80151ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015172:	0112      	lsls	r2, r2, #4
 8015174:	79d8      	ldrb	r0, [r3, #7]
 8015176:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801517a:	4302      	orrs	r2, r0
 801517c:	4492      	add	sl, r2
 801517e:	4551      	cmp	r1, sl
 8015180:	dc30      	bgt.n	80151e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015182:	1b4d      	subs	r5, r1, r5
 8015184:	b22d      	sxth	r5, r5
 8015186:	468a      	mov	sl, r1
 8015188:	9319      	str	r3, [sp, #100]	; 0x64
 801518a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801518c:	f8d8 0000 	ldr.w	r0, [r8]
 8015190:	681a      	ldr	r2, [r3, #0]
 8015192:	6801      	ldr	r1, [r0, #0]
 8015194:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015196:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015198:	9313      	str	r3, [sp, #76]	; 0x4c
 801519a:	9218      	str	r2, [sp, #96]	; 0x60
 801519c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801519e:	4788      	blx	r1
 80151a0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80151a4:	910b      	str	r1, [sp, #44]	; 0x2c
 80151a6:	f898 100e 	ldrb.w	r1, [r8, #14]
 80151aa:	910a      	str	r1, [sp, #40]	; 0x28
 80151ac:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80151b0:	9109      	str	r1, [sp, #36]	; 0x24
 80151b2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80151b6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80151b8:	9305      	str	r3, [sp, #20]
 80151ba:	b2ad      	uxth	r5, r5
 80151bc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80151c0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80151c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80151c6:	9304      	str	r3, [sp, #16]
 80151c8:	4437      	add	r7, r6
 80151ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80151cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80151ce:	9206      	str	r2, [sp, #24]
 80151d0:	b23f      	sxth	r7, r7
 80151d2:	f8cd a004 	str.w	sl, [sp, #4]
 80151d6:	9700      	str	r7, [sp, #0]
 80151d8:	681a      	ldr	r2, [r3, #0]
 80151da:	9916      	ldr	r1, [sp, #88]	; 0x58
 80151dc:	685b      	ldr	r3, [r3, #4]
 80151de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80151e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80151e2:	47a8      	blx	r5
 80151e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151e6:	3301      	adds	r3, #1
 80151e8:	930e      	str	r3, [sp, #56]	; 0x38
 80151ea:	e6e1      	b.n	8014fb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80151ec:	2500      	movs	r5, #0
 80151ee:	e7cb      	b.n	8015188 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80151f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80151f2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80151f4:	3501      	adds	r5, #1
 80151f6:	429d      	cmp	r5, r3
 80151f8:	f6bf af75 	bge.w	80150e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80151fc:	4659      	mov	r1, fp
 80151fe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015200:	f7f3 ff46 	bl	8009090 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015204:	4604      	mov	r4, r0
 8015206:	b110      	cbz	r0, 801520e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015208:	280a      	cmp	r0, #10
 801520a:	d1f2      	bne.n	80151f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801520c:	e76a      	b.n	80150e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801520e:	2400      	movs	r4, #0
 8015210:	e769      	b.n	80150e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015212:	f1bb 0f00 	cmp.w	fp, #0
 8015216:	f43f af5a 	beq.w	80150ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801521a:	e775      	b.n	8015108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801521c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801521c:	b530      	push	{r4, r5, lr}
 801521e:	8ac4      	ldrh	r4, [r0, #22]
 8015220:	8b45      	ldrh	r5, [r0, #26]
 8015222:	8343      	strh	r3, [r0, #26]
 8015224:	442c      	add	r4, r5
 8015226:	1ae4      	subs	r4, r4, r3
 8015228:	82c4      	strh	r4, [r0, #22]
 801522a:	8b83      	ldrh	r3, [r0, #28]
 801522c:	8b04      	ldrh	r4, [r0, #24]
 801522e:	4422      	add	r2, r4
 8015230:	440c      	add	r4, r1
 8015232:	1a59      	subs	r1, r3, r1
 8015234:	83c2      	strh	r2, [r0, #30]
 8015236:	8304      	strh	r4, [r0, #24]
 8015238:	8381      	strh	r1, [r0, #28]
 801523a:	bd30      	pop	{r4, r5, pc}

0801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801523c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015240:	4604      	mov	r4, r0
 8015242:	8a47      	ldrh	r7, [r0, #18]
 8015244:	68c0      	ldr	r0, [r0, #12]
 8015246:	6803      	ldr	r3, [r0, #0]
 8015248:	b085      	sub	sp, #20
 801524a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801524c:	4798      	blx	r3
 801524e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015252:	7a63      	ldrb	r3, [r4, #9]
 8015254:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015258:	42b7      	cmp	r7, r6
 801525a:	f103 33ff 	add.w	r3, r3, #4294967295
 801525e:	bfac      	ite	ge
 8015260:	f04f 0900 	movge.w	r9, #0
 8015264:	f04f 0901 	movlt.w	r9, #1
 8015268:	2b05      	cmp	r3, #5
 801526a:	d804      	bhi.n	8015276 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801526c:	e8df f003 	tbb	[pc, r3]
 8015270:	470e0854 	.word	0x470e0854
 8015274:	4c4c      	.short	0x4c4c
 8015276:	2500      	movs	r5, #0
 8015278:	46a9      	mov	r9, r5
 801527a:	462e      	mov	r6, r5
 801527c:	462f      	mov	r7, r5
 801527e:	e00d      	b.n	801529c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015280:	42b7      	cmp	r7, r6
 8015282:	bfb4      	ite	lt
 8015284:	2600      	movlt	r6, #0
 8015286:	2601      	movge	r6, #1
 8015288:	2500      	movs	r5, #0
 801528a:	e7f7      	b.n	801527c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801528c:	42b7      	cmp	r7, r6
 801528e:	464d      	mov	r5, r9
 8015290:	f04f 0900 	mov.w	r9, #0
 8015294:	bfb4      	ite	lt
 8015296:	2600      	movlt	r6, #0
 8015298:	2601      	movge	r6, #1
 801529a:	464f      	mov	r7, r9
 801529c:	f04f 0800 	mov.w	r8, #0
 80152a0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80152a4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80152a8:	f8cd 8004 	str.w	r8, [sp, #4]
 80152ac:	2300      	movs	r3, #0
 80152ae:	9303      	str	r3, [sp, #12]
 80152b0:	8823      	ldrh	r3, [r4, #0]
 80152b2:	2b20      	cmp	r3, #32
 80152b4:	d034      	beq.n	8015320 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80152b6:	f242 010b 	movw	r1, #8203	; 0x200b
 80152ba:	1a5a      	subs	r2, r3, r1
 80152bc:	f1d2 0a00 	rsbs	sl, r2, #0
 80152c0:	eb4a 0a02 	adc.w	sl, sl, r2
 80152c4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80152c8:	4293      	cmp	r3, r2
 80152ca:	d009      	beq.n	80152e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80152cc:	428b      	cmp	r3, r1
 80152ce:	9a01      	ldr	r2, [sp, #4]
 80152d0:	bf18      	it	ne
 80152d2:	461a      	movne	r2, r3
 80152d4:	9201      	str	r2, [sp, #4]
 80152d6:	bf0c      	ite	eq
 80152d8:	f04f 0a01 	moveq.w	sl, #1
 80152dc:	f04f 0a00 	movne.w	sl, #0
 80152e0:	ab03      	add	r3, sp, #12
 80152e2:	68e2      	ldr	r2, [r4, #12]
 80152e4:	7a21      	ldrb	r1, [r4, #8]
 80152e6:	6860      	ldr	r0, [r4, #4]
 80152e8:	f002 ff4a 	bl	8018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80152ec:	8020      	strh	r0, [r4, #0]
 80152ee:	b9d8      	cbnz	r0, 8015328 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80152f0:	8ba2      	ldrh	r2, [r4, #28]
 80152f2:	2300      	movs	r3, #0
 80152f4:	4611      	mov	r1, r2
 80152f6:	4620      	mov	r0, r4
 80152f8:	f7ff ff90 	bl	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80152fc:	e06e      	b.n	80153dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80152fe:	2500      	movs	r5, #0
 8015300:	46a9      	mov	r9, r5
 8015302:	462e      	mov	r6, r5
 8015304:	2701      	movs	r7, #1
 8015306:	e7c9      	b.n	801529c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015308:	42b7      	cmp	r7, r6
 801530a:	f04f 0500 	mov.w	r5, #0
 801530e:	bfb4      	ite	lt
 8015310:	2700      	movlt	r7, #0
 8015312:	2701      	movge	r7, #1
 8015314:	462e      	mov	r6, r5
 8015316:	e7c1      	b.n	801529c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015318:	2500      	movs	r5, #0
 801531a:	46a9      	mov	r9, r5
 801531c:	2601      	movs	r6, #1
 801531e:	e7ad      	b.n	801527c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015320:	9301      	str	r3, [sp, #4]
 8015322:	f04f 0a01 	mov.w	sl, #1
 8015326:	e7db      	b.n	80152e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015328:	8b63      	ldrh	r3, [r4, #26]
 801532a:	280a      	cmp	r0, #10
 801532c:	f103 0301 	add.w	r3, r3, #1
 8015330:	8363      	strh	r3, [r4, #26]
 8015332:	d0dd      	beq.n	80152f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015334:	9a03      	ldr	r2, [sp, #12]
 8015336:	bb62      	cbnz	r2, 8015392 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015338:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801533c:	4298      	cmp	r0, r3
 801533e:	d003      	beq.n	8015348 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015340:	f242 030b 	movw	r3, #8203	; 0x200b
 8015344:	4298      	cmp	r0, r3
 8015346:	d1b1      	bne.n	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015348:	8823      	ldrh	r3, [r4, #0]
 801534a:	8ba1      	ldrh	r1, [r4, #28]
 801534c:	2b20      	cmp	r3, #32
 801534e:	d003      	beq.n	8015358 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015350:	f242 000b 	movw	r0, #8203	; 0x200b
 8015354:	4283      	cmp	r3, r0
 8015356:	d131      	bne.n	80153bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015358:	f1ba 0f00 	cmp.w	sl, #0
 801535c:	bf0a      	itet	eq
 801535e:	4688      	moveq	r8, r1
 8015360:	4650      	movne	r0, sl
 8015362:	2001      	moveq	r0, #1
 8015364:	440a      	add	r2, r1
 8015366:	8b23      	ldrh	r3, [r4, #24]
 8015368:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801536c:	b292      	uxth	r2, r2
 801536e:	83a2      	strh	r2, [r4, #28]
 8015370:	4413      	add	r3, r2
 8015372:	f1b9 0f00 	cmp.w	r9, #0
 8015376:	d102      	bne.n	801537e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015378:	2d00      	cmp	r5, #0
 801537a:	d042      	beq.n	8015402 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801537c:	b300      	cbz	r0, 80153c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801537e:	8c21      	ldrh	r1, [r4, #32]
 8015380:	4419      	add	r1, r3
 8015382:	458c      	cmp	ip, r1
 8015384:	da37      	bge.n	80153f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015386:	8ae1      	ldrh	r1, [r4, #22]
 8015388:	2900      	cmp	r1, #0
 801538a:	d034      	beq.n	80153f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801538c:	4563      	cmp	r3, ip
 801538e:	dd8d      	ble.n	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015390:	e01d      	b.n	80153ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015392:	8893      	ldrh	r3, [r2, #4]
 8015394:	8023      	strh	r3, [r4, #0]
 8015396:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801539a:	9901      	ldr	r1, [sp, #4]
 801539c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80153a0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80153a4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80153a8:	ea4b 0b00 	orr.w	fp, fp, r0
 80153ac:	68e0      	ldr	r0, [r4, #12]
 80153ae:	6803      	ldr	r3, [r0, #0]
 80153b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80153b2:	4798      	blx	r3
 80153b4:	eb0b 0200 	add.w	r2, fp, r0
 80153b8:	b292      	uxth	r2, r2
 80153ba:	e7c5      	b.n	8015348 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80153bc:	2000      	movs	r0, #0
 80153be:	e7d1      	b.n	8015364 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80153c0:	4563      	cmp	r3, ip
 80153c2:	f77f af73 	ble.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153c6:	8ae3      	ldrh	r3, [r4, #22]
 80153c8:	2b00      	cmp	r3, #0
 80153ca:	f43f af6f 	beq.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153ce:	2301      	movs	r3, #1
 80153d0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80153d4:	8c22      	ldrh	r2, [r4, #32]
 80153d6:	8be3      	ldrh	r3, [r4, #30]
 80153d8:	4413      	add	r3, r2
 80153da:	83e3      	strh	r3, [r4, #30]
 80153dc:	68e0      	ldr	r0, [r4, #12]
 80153de:	6803      	ldr	r3, [r0, #0]
 80153e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80153e2:	4798      	blx	r3
 80153e4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80153e8:	4418      	add	r0, r3
 80153ea:	8a63      	ldrh	r3, [r4, #18]
 80153ec:	1a18      	subs	r0, r3, r0
 80153ee:	8260      	strh	r0, [r4, #18]
 80153f0:	b005      	add	sp, #20
 80153f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153f6:	2300      	movs	r3, #0
 80153f8:	4611      	mov	r1, r2
 80153fa:	4620      	mov	r0, r4
 80153fc:	f7ff ff0e 	bl	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015400:	e754      	b.n	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015402:	4563      	cmp	r3, ip
 8015404:	dd14      	ble.n	8015430 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015406:	b117      	cbz	r7, 801540e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015408:	2301      	movs	r3, #1
 801540a:	460a      	mov	r2, r1
 801540c:	e772      	b.n	80152f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801540e:	2e00      	cmp	r6, #0
 8015410:	f43f af4c 	beq.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015414:	2800      	cmp	r0, #0
 8015416:	f47f af49 	bne.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801541a:	f1ba 0f00 	cmp.w	sl, #0
 801541e:	d002      	beq.n	8015426 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015420:	2301      	movs	r3, #1
 8015422:	4642      	mov	r2, r8
 8015424:	e767      	b.n	80152f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015426:	8ae3      	ldrh	r3, [r4, #22]
 8015428:	2b00      	cmp	r3, #0
 801542a:	f43f af3f 	beq.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801542e:	e7d5      	b.n	80153dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015430:	2800      	cmp	r0, #0
 8015432:	f47f af3b 	bne.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015436:	f1ba 0f00 	cmp.w	sl, #0
 801543a:	f43f af37 	beq.w	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801543e:	2301      	movs	r3, #1
 8015440:	4642      	mov	r2, r8
 8015442:	e7da      	b.n	80153fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015444 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015444:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015446:	4605      	mov	r5, r0
 8015448:	b08f      	sub	sp, #60	; 0x3c
 801544a:	4617      	mov	r7, r2
 801544c:	461c      	mov	r4, r3
 801544e:	460e      	mov	r6, r1
 8015450:	b1d1      	cbz	r1, 8015488 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015452:	681b      	ldr	r3, [r3, #0]
 8015454:	4620      	mov	r0, r4
 8015456:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015458:	4798      	blx	r3
 801545a:	4240      	negs	r0, r0
 801545c:	b200      	sxth	r0, r0
 801545e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015462:	9603      	str	r6, [sp, #12]
 8015464:	9700      	str	r7, [sp, #0]
 8015466:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801546a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801546e:	4629      	mov	r1, r5
 8015470:	a805      	add	r0, sp, #20
 8015472:	f7ff fcbf 	bl	8014df4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015476:	2401      	movs	r4, #1
 8015478:	a805      	add	r0, sp, #20
 801547a:	f7ff fedf 	bl	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801547e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015482:	b163      	cbz	r3, 801549e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015484:	3401      	adds	r4, #1
 8015486:	e7f7      	b.n	8015478 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015488:	f002 ff48 	bl	801831c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801548c:	2401      	movs	r4, #1
 801548e:	280a      	cmp	r0, #10
 8015490:	4628      	mov	r0, r5
 8015492:	bf08      	it	eq
 8015494:	3401      	addeq	r4, #1
 8015496:	f002 ff41 	bl	801831c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801549a:	2800      	cmp	r0, #0
 801549c:	d1f7      	bne.n	801548e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801549e:	b2a0      	uxth	r0, r4
 80154a0:	b00f      	add	sp, #60	; 0x3c
 80154a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080154a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80154a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154a8:	b0e3      	sub	sp, #396	; 0x18c
 80154aa:	461c      	mov	r4, r3
 80154ac:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80154ae:	4683      	mov	fp, r0
 80154b0:	4688      	mov	r8, r1
 80154b2:	2b00      	cmp	r3, #0
 80154b4:	f000 8112 	beq.w	80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80154b8:	6823      	ldr	r3, [r4, #0]
 80154ba:	2b00      	cmp	r3, #0
 80154bc:	f000 810e 	beq.w	80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80154c0:	7ba3      	ldrb	r3, [r4, #14]
 80154c2:	2b00      	cmp	r3, #0
 80154c4:	f000 810a 	beq.w	80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80154c8:	6810      	ldr	r0, [r2, #0]
 80154ca:	6851      	ldr	r1, [r2, #4]
 80154cc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80154d0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80154d4:	ad0a      	add	r5, sp, #40	; 0x28
 80154d6:	462b      	mov	r3, r5
 80154d8:	c303      	stmia	r3!, {r0, r1}
 80154da:	2100      	movs	r1, #0
 80154dc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80154e0:	910c      	str	r1, [sp, #48]	; 0x30
 80154e2:	79a2      	ldrb	r2, [r4, #6]
 80154e4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80154e8:	a90c      	add	r1, sp, #48	; 0x30
 80154ea:	4628      	mov	r0, r5
 80154ec:	f7ff fd01 	bl	8014ef2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80154f0:	a90c      	add	r1, sp, #48	; 0x30
 80154f2:	4608      	mov	r0, r1
 80154f4:	79a2      	ldrb	r2, [r4, #6]
 80154f6:	f7ff fcfc 	bl	8014ef2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80154fa:	a817      	add	r0, sp, #92	; 0x5c
 80154fc:	f002 fae2 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8015500:	6820      	ldr	r0, [r4, #0]
 8015502:	6803      	ldr	r3, [r0, #0]
 8015504:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015506:	4798      	blx	r3
 8015508:	4606      	mov	r6, r0
 801550a:	6820      	ldr	r0, [r4, #0]
 801550c:	6803      	ldr	r3, [r0, #0]
 801550e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015510:	4798      	blx	r3
 8015512:	4633      	mov	r3, r6
 8015514:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015516:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015518:	9000      	str	r0, [sp, #0]
 801551a:	a817      	add	r0, sp, #92	; 0x5c
 801551c:	f002 fb2d 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015520:	6820      	ldr	r0, [r4, #0]
 8015522:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015526:	6803      	ldr	r3, [r0, #0]
 8015528:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801552a:	4798      	blx	r3
 801552c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015530:	6823      	ldr	r3, [r4, #0]
 8015532:	4607      	mov	r7, r0
 8015534:	4406      	add	r6, r0
 8015536:	a830      	add	r0, sp, #192	; 0xc0
 8015538:	f893 9009 	ldrb.w	r9, [r3, #9]
 801553c:	f002 fac2 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8015540:	7c23      	ldrb	r3, [r4, #16]
 8015542:	b17b      	cbz	r3, 8015564 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015544:	6820      	ldr	r0, [r4, #0]
 8015546:	6803      	ldr	r3, [r0, #0]
 8015548:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801554a:	4798      	blx	r3
 801554c:	9009      	str	r0, [sp, #36]	; 0x24
 801554e:	6820      	ldr	r0, [r4, #0]
 8015550:	6802      	ldr	r2, [r0, #0]
 8015552:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015554:	4790      	blx	r2
 8015556:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015558:	9000      	str	r0, [sp, #0]
 801555a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801555c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801555e:	a830      	add	r0, sp, #192	; 0xc0
 8015560:	f002 fb0b 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015564:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015568:	7be2      	ldrb	r2, [r4, #15]
 801556a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801556e:	1a8a      	subs	r2, r1, r2
 8015570:	7c21      	ldrb	r1, [r4, #16]
 8015572:	9103      	str	r1, [sp, #12]
 8015574:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015578:	9102      	str	r1, [sp, #8]
 801557a:	6821      	ldr	r1, [r4, #0]
 801557c:	9101      	str	r1, [sp, #4]
 801557e:	7961      	ldrb	r1, [r4, #5]
 8015580:	9100      	str	r1, [sp, #0]
 8015582:	b292      	uxth	r2, r2
 8015584:	a930      	add	r1, sp, #192	; 0xc0
 8015586:	a80e      	add	r0, sp, #56	; 0x38
 8015588:	f7ff fc34 	bl	8014df4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801558c:	2e00      	cmp	r6, #0
 801558e:	dc5b      	bgt.n	8015648 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015590:	af17      	add	r7, sp, #92	; 0x5c
 8015592:	f04f 0900 	mov.w	r9, #0
 8015596:	7c23      	ldrb	r3, [r4, #16]
 8015598:	2b00      	cmp	r3, #0
 801559a:	f000 80b1 	beq.w	8015700 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801559e:	a80e      	add	r0, sp, #56	; 0x38
 80155a0:	f7ff fe4c 	bl	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80155a4:	f1ba 0f00 	cmp.w	sl, #0
 80155a8:	f000 80a5 	beq.w	80156f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80155ac:	7c23      	ldrb	r3, [r4, #16]
 80155ae:	9309      	str	r3, [sp, #36]	; 0x24
 80155b0:	2264      	movs	r2, #100	; 0x64
 80155b2:	4639      	mov	r1, r7
 80155b4:	a849      	add	r0, sp, #292	; 0x124
 80155b6:	f015 feb0 	bl	802b31a <memcpy>
 80155ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155bc:	2b00      	cmp	r3, #0
 80155be:	f000 80a7 	beq.w	8015710 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80155c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80155c6:	7922      	ldrb	r2, [r4, #4]
 80155c8:	2a01      	cmp	r2, #1
 80155ca:	f040 808a 	bne.w	80156e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80155ce:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80155d2:	1ac0      	subs	r0, r0, r3
 80155d4:	2302      	movs	r3, #2
 80155d6:	fb90 f0f3 	sdiv	r0, r0, r3
 80155da:	b200      	sxth	r0, r0
 80155dc:	7c23      	ldrb	r3, [r4, #16]
 80155de:	2b00      	cmp	r3, #0
 80155e0:	f000 808b 	beq.w	80156fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80155e4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80155e8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80155ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80155f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80155f4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80155f8:	4410      	add	r0, r2
 80155fa:	b200      	sxth	r0, r0
 80155fc:	9000      	str	r0, [sp, #0]
 80155fe:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015602:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015606:	4642      	mov	r2, r8
 8015608:	2100      	movs	r1, #0
 801560a:	4658      	mov	r0, fp
 801560c:	f7ff fca2 	bl	8014f54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015610:	2800      	cmp	r0, #0
 8015612:	d163      	bne.n	80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015614:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015618:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801561c:	b2b2      	uxth	r2, r6
 801561e:	4413      	add	r3, r2
 8015620:	1a8a      	subs	r2, r1, r2
 8015622:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015626:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801562a:	b21b      	sxth	r3, r3
 801562c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015630:	2a00      	cmp	r2, #0
 8015632:	d153      	bne.n	80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015634:	6822      	ldr	r2, [r4, #0]
 8015636:	8869      	ldrh	r1, [r5, #2]
 8015638:	7a12      	ldrb	r2, [r2, #8]
 801563a:	1a9b      	subs	r3, r3, r2
 801563c:	88ea      	ldrh	r2, [r5, #6]
 801563e:	440a      	add	r2, r1
 8015640:	b212      	sxth	r2, r2
 8015642:	4293      	cmp	r3, r2
 8015644:	dda7      	ble.n	8015596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015646:	e049      	b.n	80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015648:	7c23      	ldrb	r3, [r4, #16]
 801564a:	444f      	add	r7, r9
 801564c:	b1c3      	cbz	r3, 8015680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801564e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015652:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015656:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801565a:	443b      	add	r3, r7
 801565c:	4293      	cmp	r3, r2
 801565e:	da97      	bge.n	8015590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015660:	a80e      	add	r0, sp, #56	; 0x38
 8015662:	f7ff fdeb 	bl	801523c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015666:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801566a:	3b01      	subs	r3, #1
 801566c:	b29b      	uxth	r3, r3
 801566e:	454b      	cmp	r3, r9
 8015670:	9309      	str	r3, [sp, #36]	; 0x24
 8015672:	d021      	beq.n	80156b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015674:	7961      	ldrb	r1, [r4, #5]
 8015676:	a817      	add	r0, sp, #92	; 0x5c
 8015678:	f7f3 fd0a 	bl	8009090 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801567c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801567e:	e7f4      	b.n	801566a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015680:	fa1f f986 	uxth.w	r9, r6
 8015684:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015688:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801568c:	443b      	add	r3, r7
 801568e:	4293      	cmp	r3, r2
 8015690:	f6bf af7e 	bge.w	8015590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015694:	a817      	add	r0, sp, #92	; 0x5c
 8015696:	f002 fe41 	bl	801831c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801569a:	b1f8      	cbz	r0, 80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801569c:	280a      	cmp	r0, #10
 801569e:	d1f1      	bne.n	8015684 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80156a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80156a4:	444b      	add	r3, r9
 80156a6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80156aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80156ae:	eba3 0309 	sub.w	r3, r3, r9
 80156b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80156b6:	e7e5      	b.n	8015684 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80156b8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80156bc:	b2b3      	uxth	r3, r6
 80156be:	441a      	add	r2, r3
 80156c0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80156c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80156c8:	1ad3      	subs	r3, r2, r3
 80156ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80156ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80156d2:	b11b      	cbz	r3, 80156dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80156d4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80156d8:	2b00      	cmp	r3, #0
 80156da:	d0ba      	beq.n	8015652 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80156dc:	b063      	add	sp, #396	; 0x18c
 80156de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156e2:	2a02      	cmp	r2, #2
 80156e4:	d105      	bne.n	80156f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80156e6:	7be2      	ldrb	r2, [r4, #15]
 80156e8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80156ec:	1a80      	subs	r0, r0, r2
 80156ee:	1ac0      	subs	r0, r0, r3
 80156f0:	e773      	b.n	80155da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80156f2:	2000      	movs	r0, #0
 80156f4:	e772      	b.n	80155dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80156f6:	7be0      	ldrb	r0, [r4, #15]
 80156f8:	e770      	b.n	80155dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80156fa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80156fe:	e773      	b.n	80155e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015700:	f1ba 0f00 	cmp.w	sl, #0
 8015704:	d0f7      	beq.n	80156f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015706:	2264      	movs	r2, #100	; 0x64
 8015708:	4639      	mov	r1, r7
 801570a:	a849      	add	r0, sp, #292	; 0x124
 801570c:	f015 fe05 	bl	802b31a <memcpy>
 8015710:	2300      	movs	r3, #0
 8015712:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015716:	6821      	ldr	r1, [r4, #0]
 8015718:	a849      	add	r0, sp, #292	; 0x124
 801571a:	f7ff fbae 	bl	8014e7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801571e:	b203      	sxth	r3, r0
 8015720:	e751      	b.n	80155c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015722 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015722:	2b03      	cmp	r3, #3
 8015724:	d818      	bhi.n	8015758 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015726:	e8df f003 	tbb	[pc, r3]
 801572a:	0602      	.short	0x0602
 801572c:	130d      	.short	0x130d
 801572e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015732:	1850      	adds	r0, r2, r1
 8015734:	4770      	bx	lr
 8015736:	8803      	ldrh	r3, [r0, #0]
 8015738:	8880      	ldrh	r0, [r0, #4]
 801573a:	4418      	add	r0, r3
 801573c:	b200      	sxth	r0, r0
 801573e:	1a80      	subs	r0, r0, r2
 8015740:	3801      	subs	r0, #1
 8015742:	4770      	bx	lr
 8015744:	8803      	ldrh	r3, [r0, #0]
 8015746:	8880      	ldrh	r0, [r0, #4]
 8015748:	4418      	add	r0, r3
 801574a:	b200      	sxth	r0, r0
 801574c:	1a40      	subs	r0, r0, r1
 801574e:	e7f7      	b.n	8015740 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015750:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015754:	4410      	add	r0, r2
 8015756:	4770      	bx	lr
 8015758:	2000      	movs	r0, #0
 801575a:	4770      	bx	lr

0801575c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801575c:	2b03      	cmp	r3, #3
 801575e:	d817      	bhi.n	8015790 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015760:	e8df f003 	tbb	[pc, r3]
 8015764:	10090602 	.word	0x10090602
 8015768:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801576c:	1850      	adds	r0, r2, r1
 801576e:	4770      	bx	lr
 8015770:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015774:	e7fa      	b.n	801576c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015776:	8843      	ldrh	r3, [r0, #2]
 8015778:	88c0      	ldrh	r0, [r0, #6]
 801577a:	4418      	add	r0, r3
 801577c:	b200      	sxth	r0, r0
 801577e:	1a80      	subs	r0, r0, r2
 8015780:	3801      	subs	r0, #1
 8015782:	4770      	bx	lr
 8015784:	8843      	ldrh	r3, [r0, #2]
 8015786:	88c0      	ldrh	r0, [r0, #6]
 8015788:	4418      	add	r0, r3
 801578a:	b200      	sxth	r0, r0
 801578c:	1a40      	subs	r0, r0, r1
 801578e:	e7f7      	b.n	8015780 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015790:	2000      	movs	r0, #0
 8015792:	4770      	bx	lr

08015794 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015794:	4b01      	ldr	r3, [pc, #4]	; (801579c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015796:	2200      	movs	r2, #0
 8015798:	601a      	str	r2, [r3, #0]
 801579a:	4770      	bx	lr
 801579c:	20012db4 	.word	0x20012db4

080157a0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80157a0:	4603      	mov	r3, r0
 80157a2:	b1c8      	cbz	r0, 80157d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80157a4:	0c02      	lsrs	r2, r0, #16
 80157a6:	0412      	lsls	r2, r2, #16
 80157a8:	b9a2      	cbnz	r2, 80157d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80157aa:	0403      	lsls	r3, r0, #16
 80157ac:	2010      	movs	r0, #16
 80157ae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80157b2:	bf04      	itt	eq
 80157b4:	021b      	lsleq	r3, r3, #8
 80157b6:	3008      	addeq	r0, #8
 80157b8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80157bc:	bf04      	itt	eq
 80157be:	011b      	lsleq	r3, r3, #4
 80157c0:	3004      	addeq	r0, #4
 80157c2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80157c6:	bf04      	itt	eq
 80157c8:	009b      	lsleq	r3, r3, #2
 80157ca:	3002      	addeq	r0, #2
 80157cc:	2b00      	cmp	r3, #0
 80157ce:	db04      	blt.n	80157da <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80157d0:	3001      	adds	r0, #1
 80157d2:	4770      	bx	lr
 80157d4:	2000      	movs	r0, #0
 80157d6:	e7ea      	b.n	80157ae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80157d8:	2020      	movs	r0, #32
 80157da:	4770      	bx	lr

080157dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80157dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157e0:	b087      	sub	sp, #28
 80157e2:	460d      	mov	r5, r1
 80157e4:	4616      	mov	r6, r2
 80157e6:	4698      	mov	r8, r3
 80157e8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80157ec:	4601      	mov	r1, r0
 80157ee:	b120      	cbz	r0, 80157fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80157f0:	b11a      	cbz	r2, 80157fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80157f2:	2d1f      	cmp	r5, #31
 80157f4:	d801      	bhi.n	80157fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80157f6:	2b1f      	cmp	r3, #31
 80157f8:	d904      	bls.n	8015804 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80157fa:	2000      	movs	r0, #0
 80157fc:	6038      	str	r0, [r7, #0]
 80157fe:	b007      	add	sp, #28
 8015800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015804:	b97d      	cbnz	r5, 8015826 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015806:	b143      	cbz	r3, 801581a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015808:	4602      	mov	r2, r0
 801580a:	e9cd 4700 	strd	r4, r7, [sp]
 801580e:	462b      	mov	r3, r5
 8015810:	4641      	mov	r1, r8
 8015812:	4630      	mov	r0, r6
 8015814:	f7ff ffe2 	bl	80157dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015818:	e7f1      	b.n	80157fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801581a:	f04f 33ff 	mov.w	r3, #4294967295
 801581e:	603b      	str	r3, [r7, #0]
 8015820:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015824:	e7eb      	b.n	80157fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015826:	fa32 fa05 	lsrs.w	sl, r2, r5
 801582a:	d106      	bne.n	801583a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801582c:	4346      	muls	r6, r0
 801582e:	fbb6 f0f4 	udiv	r0, r6, r4
 8015832:	fb04 6610 	mls	r6, r4, r0, r6
 8015836:	603e      	str	r6, [r7, #0]
 8015838:	e7e1      	b.n	80157fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801583a:	2201      	movs	r2, #1
 801583c:	40aa      	lsls	r2, r5
 801583e:	3a01      	subs	r2, #1
 8015840:	4016      	ands	r6, r2
 8015842:	fa00 fb05 	lsl.w	fp, r0, r5
 8015846:	4630      	mov	r0, r6
 8015848:	fbbb f9f4 	udiv	r9, fp, r4
 801584c:	fb0a f309 	mul.w	r3, sl, r9
 8015850:	9303      	str	r3, [sp, #12]
 8015852:	f7ff ffa5 	bl	80157a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015856:	462b      	mov	r3, r5
 8015858:	460a      	mov	r2, r1
 801585a:	e9cd 4700 	strd	r4, r7, [sp]
 801585e:	4601      	mov	r1, r0
 8015860:	4630      	mov	r0, r6
 8015862:	f7ff ffbb 	bl	80157dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015866:	fb04 b919 	mls	r9, r4, r9, fp
 801586a:	4606      	mov	r6, r0
 801586c:	4648      	mov	r0, r9
 801586e:	eb05 0108 	add.w	r1, r5, r8
 8015872:	f7ff ff95 	bl	80157a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015876:	ab05      	add	r3, sp, #20
 8015878:	e9cd 4300 	strd	r4, r3, [sp]
 801587c:	464a      	mov	r2, r9
 801587e:	4603      	mov	r3, r0
 8015880:	4650      	mov	r0, sl
 8015882:	f7ff ffab 	bl	80157dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015886:	6839      	ldr	r1, [r7, #0]
 8015888:	9a05      	ldr	r2, [sp, #20]
 801588a:	9b03      	ldr	r3, [sp, #12]
 801588c:	4411      	add	r1, r2
 801588e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015892:	18d3      	adds	r3, r2, r3
 8015894:	441e      	add	r6, r3
 8015896:	fb04 1412 	mls	r4, r4, r2, r1
 801589a:	4430      	add	r0, r6
 801589c:	603c      	str	r4, [r7, #0]
 801589e:	e7ae      	b.n	80157fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080158a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80158a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80158a4:	b085      	sub	sp, #20
 80158a6:	f1b0 0900 	subs.w	r9, r0, #0
 80158aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80158ac:	461d      	mov	r5, r3
 80158ae:	bfbf      	itttt	lt
 80158b0:	6823      	ldrlt	r3, [r4, #0]
 80158b2:	425b      	neglt	r3, r3
 80158b4:	f1c9 0900 	rsblt	r9, r9, #0
 80158b8:	6023      	strlt	r3, [r4, #0]
 80158ba:	bfb4      	ite	lt
 80158bc:	f04f 36ff 	movlt.w	r6, #4294967295
 80158c0:	2601      	movge	r6, #1
 80158c2:	2a00      	cmp	r2, #0
 80158c4:	4617      	mov	r7, r2
 80158c6:	da04      	bge.n	80158d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80158c8:	6823      	ldr	r3, [r4, #0]
 80158ca:	425b      	negs	r3, r3
 80158cc:	4257      	negs	r7, r2
 80158ce:	4276      	negs	r6, r6
 80158d0:	6023      	str	r3, [r4, #0]
 80158d2:	2d00      	cmp	r5, #0
 80158d4:	4638      	mov	r0, r7
 80158d6:	bfba      	itte	lt
 80158d8:	426d      	neglt	r5, r5
 80158da:	f04f 38ff 	movlt.w	r8, #4294967295
 80158de:	f04f 0801 	movge.w	r8, #1
 80158e2:	f7ff ff5d 	bl	80157a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80158e6:	ab03      	add	r3, sp, #12
 80158e8:	e9cd 5300 	strd	r5, r3, [sp]
 80158ec:	463a      	mov	r2, r7
 80158ee:	4603      	mov	r3, r0
 80158f0:	4648      	mov	r0, r9
 80158f2:	f7ff ff73 	bl	80157dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80158f6:	6823      	ldr	r3, [r4, #0]
 80158f8:	9a03      	ldr	r2, [sp, #12]
 80158fa:	4546      	cmp	r6, r8
 80158fc:	441a      	add	r2, r3
 80158fe:	fb92 f3f5 	sdiv	r3, r2, r5
 8015902:	4418      	add	r0, r3
 8015904:	bf18      	it	ne
 8015906:	4240      	negne	r0, r0
 8015908:	fb05 2313 	mls	r3, r5, r3, r2
 801590c:	1c72      	adds	r2, r6, #1
 801590e:	6023      	str	r3, [r4, #0]
 8015910:	d105      	bne.n	801591e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015912:	2b00      	cmp	r3, #0
 8015914:	f1c3 0200 	rsb	r2, r3, #0
 8015918:	db0b      	blt.n	8015932 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801591a:	6022      	str	r2, [r4, #0]
 801591c:	e006      	b.n	801592c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801591e:	2e01      	cmp	r6, #1
 8015920:	d104      	bne.n	801592c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015922:	2b00      	cmp	r3, #0
 8015924:	da02      	bge.n	801592c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015926:	442b      	add	r3, r5
 8015928:	3801      	subs	r0, #1
 801592a:	6023      	str	r3, [r4, #0]
 801592c:	b005      	add	sp, #20
 801592e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015932:	3801      	subs	r0, #1
 8015934:	1b52      	subs	r2, r2, r5
 8015936:	e7f0      	b.n	801591a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015938 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015938:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801593c:	4c1c      	ldr	r4, [pc, #112]	; (80159b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801593e:	6807      	ldr	r7, [r0, #0]
 8015940:	69a3      	ldr	r3, [r4, #24]
 8015942:	4605      	mov	r5, r0
 8015944:	b92b      	cbnz	r3, 8015952 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015946:	6840      	ldr	r0, [r0, #4]
 8015948:	e9c5 7000 	strd	r7, r0, [r5]
 801594c:	b004      	add	sp, #16
 801594e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015952:	68a2      	ldr	r2, [r4, #8]
 8015954:	6820      	ldr	r0, [r4, #0]
 8015956:	ae04      	add	r6, sp, #16
 8015958:	f04f 0802 	mov.w	r8, #2
 801595c:	fb93 f1f8 	sdiv	r1, r3, r8
 8015960:	440a      	add	r2, r1
 8015962:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015966:	69e1      	ldr	r1, [r4, #28]
 8015968:	9600      	str	r6, [sp, #0]
 801596a:	463a      	mov	r2, r7
 801596c:	f7ff ff98 	bl	80158a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015970:	69a3      	ldr	r3, [r4, #24]
 8015972:	686a      	ldr	r2, [r5, #4]
 8015974:	6a21      	ldr	r1, [r4, #32]
 8015976:	9600      	str	r6, [sp, #0]
 8015978:	4607      	mov	r7, r0
 801597a:	6860      	ldr	r0, [r4, #4]
 801597c:	f7ff ff90 	bl	80158a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015980:	6962      	ldr	r2, [r4, #20]
 8015982:	69a3      	ldr	r3, [r4, #24]
 8015984:	fb93 f8f8 	sdiv	r8, r3, r8
 8015988:	4442      	add	r2, r8
 801598a:	9203      	str	r2, [sp, #12]
 801598c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801598e:	682a      	ldr	r2, [r5, #0]
 8015990:	9600      	str	r6, [sp, #0]
 8015992:	4407      	add	r7, r0
 8015994:	68e0      	ldr	r0, [r4, #12]
 8015996:	f7ff ff83 	bl	80158a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801599a:	9600      	str	r6, [sp, #0]
 801599c:	4680      	mov	r8, r0
 801599e:	69a3      	ldr	r3, [r4, #24]
 80159a0:	686a      	ldr	r2, [r5, #4]
 80159a2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80159a4:	6920      	ldr	r0, [r4, #16]
 80159a6:	f7ff ff7b 	bl	80158a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80159aa:	4440      	add	r0, r8
 80159ac:	e7cc      	b.n	8015948 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80159ae:	bf00      	nop
 80159b0:	20012db8 	.word	0x20012db8

080159b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80159b4:	4b07      	ldr	r3, [pc, #28]	; (80159d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80159b6:	781b      	ldrb	r3, [r3, #0]
 80159b8:	2b01      	cmp	r3, #1
 80159ba:	d109      	bne.n	80159d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80159bc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80159c0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80159c4:	8003      	strh	r3, [r0, #0]
 80159c6:	4b04      	ldr	r3, [pc, #16]	; (80159d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80159c8:	881b      	ldrh	r3, [r3, #0]
 80159ca:	3b01      	subs	r3, #1
 80159cc:	1a9b      	subs	r3, r3, r2
 80159ce:	800b      	strh	r3, [r1, #0]
 80159d0:	4770      	bx	lr
 80159d2:	bf00      	nop
 80159d4:	20012d9c 	.word	0x20012d9c
 80159d8:	20012d98 	.word	0x20012d98

080159dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80159dc:	b510      	push	{r4, lr}
 80159de:	4b07      	ldr	r3, [pc, #28]	; (80159fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80159e0:	781b      	ldrb	r3, [r3, #0]
 80159e2:	2b01      	cmp	r3, #1
 80159e4:	d108      	bne.n	80159f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80159e6:	4b06      	ldr	r3, [pc, #24]	; (8015a00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80159e8:	880c      	ldrh	r4, [r1, #0]
 80159ea:	881b      	ldrh	r3, [r3, #0]
 80159ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80159f0:	3b01      	subs	r3, #1
 80159f2:	1b1b      	subs	r3, r3, r4
 80159f4:	8003      	strh	r3, [r0, #0]
 80159f6:	800a      	strh	r2, [r1, #0]
 80159f8:	bd10      	pop	{r4, pc}
 80159fa:	bf00      	nop
 80159fc:	20012d9c 	.word	0x20012d9c
 8015a00:	20012d98 	.word	0x20012d98

08015a04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015a04:	b510      	push	{r4, lr}
 8015a06:	4b0a      	ldr	r3, [pc, #40]	; (8015a30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015a08:	781b      	ldrb	r3, [r3, #0]
 8015a0a:	2b01      	cmp	r3, #1
 8015a0c:	d10e      	bne.n	8015a2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8015a0e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015a12:	8843      	ldrh	r3, [r0, #2]
 8015a14:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a18:	8044      	strh	r4, [r0, #2]
 8015a1a:	18ca      	adds	r2, r1, r3
 8015a1c:	4b05      	ldr	r3, [pc, #20]	; (8015a34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015a1e:	881b      	ldrh	r3, [r3, #0]
 8015a20:	1a9b      	subs	r3, r3, r2
 8015a22:	8003      	strh	r3, [r0, #0]
 8015a24:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015a28:	80c3      	strh	r3, [r0, #6]
 8015a2a:	8081      	strh	r1, [r0, #4]
 8015a2c:	bd10      	pop	{r4, pc}
 8015a2e:	bf00      	nop
 8015a30:	20012d9c 	.word	0x20012d9c
 8015a34:	20012d98 	.word	0x20012d98

08015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015a38:	4b08      	ldr	r3, [pc, #32]	; (8015a5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8015a3a:	781b      	ldrb	r3, [r3, #0]
 8015a3c:	2b01      	cmp	r3, #1
 8015a3e:	d10c      	bne.n	8015a5a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015a40:	8803      	ldrh	r3, [r0, #0]
 8015a42:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015a46:	8842      	ldrh	r2, [r0, #2]
 8015a48:	8002      	strh	r2, [r0, #0]
 8015a4a:	185a      	adds	r2, r3, r1
 8015a4c:	4b04      	ldr	r3, [pc, #16]	; (8015a60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8015a4e:	881b      	ldrh	r3, [r3, #0]
 8015a50:	1a9b      	subs	r3, r3, r2
 8015a52:	8043      	strh	r3, [r0, #2]
 8015a54:	88c3      	ldrh	r3, [r0, #6]
 8015a56:	8083      	strh	r3, [r0, #4]
 8015a58:	80c1      	strh	r1, [r0, #6]
 8015a5a:	4770      	bx	lr
 8015a5c:	20012d9c 	.word	0x20012d9c
 8015a60:	20012d98 	.word	0x20012d98

08015a64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015a64:	b510      	push	{r4, lr}
 8015a66:	4b07      	ldr	r3, [pc, #28]	; (8015a84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015a68:	781b      	ldrb	r3, [r3, #0]
 8015a6a:	2b01      	cmp	r3, #1
 8015a6c:	d108      	bne.n	8015a80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8015a6e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015a72:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a76:	8003      	strh	r3, [r0, #0]
 8015a78:	8893      	ldrh	r3, [r2, #4]
 8015a7a:	3b01      	subs	r3, #1
 8015a7c:	1b1b      	subs	r3, r3, r4
 8015a7e:	800b      	strh	r3, [r1, #0]
 8015a80:	bd10      	pop	{r4, pc}
 8015a82:	bf00      	nop
 8015a84:	20012d9c 	.word	0x20012d9c

08015a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015a88:	4b0b      	ldr	r3, [pc, #44]	; (8015ab8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8015a8a:	781b      	ldrb	r3, [r3, #0]
 8015a8c:	2b01      	cmp	r3, #1
 8015a8e:	d111      	bne.n	8015ab4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015a90:	680b      	ldr	r3, [r1, #0]
 8015a92:	ed90 7a00 	vldr	s14, [r0]
 8015a96:	6003      	str	r3, [r0, #0]
 8015a98:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8015a9c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8015abc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015aa0:	ee07 3a90 	vmov	s15, r3
 8015aa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015aa8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8015aac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015ab0:	edc1 7a00 	vstr	s15, [r1]
 8015ab4:	4770      	bx	lr
 8015ab6:	bf00      	nop
 8015ab8:	20012d9c 	.word	0x20012d9c
 8015abc:	38d1b717 	.word	0x38d1b717

08015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015ac0:	b510      	push	{r4, lr}
 8015ac2:	4b0a      	ldr	r3, [pc, #40]	; (8015aec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015ac4:	781b      	ldrb	r3, [r3, #0]
 8015ac6:	2b01      	cmp	r3, #1
 8015ac8:	460a      	mov	r2, r1
 8015aca:	d10d      	bne.n	8015ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015acc:	8881      	ldrh	r1, [r0, #4]
 8015ace:	8803      	ldrh	r3, [r0, #0]
 8015ad0:	440b      	add	r3, r1
 8015ad2:	4601      	mov	r1, r0
 8015ad4:	3b01      	subs	r3, #1
 8015ad6:	f821 3b02 	strh.w	r3, [r1], #2
 8015ada:	f7ff ffc3 	bl	8015a64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015ade:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015ae2:	88c2      	ldrh	r2, [r0, #6]
 8015ae4:	8082      	strh	r2, [r0, #4]
 8015ae6:	80c3      	strh	r3, [r0, #6]
 8015ae8:	bd10      	pop	{r4, pc}
 8015aea:	bf00      	nop
 8015aec:	20012d9c 	.word	0x20012d9c

08015af0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015af0:	4b06      	ldr	r3, [pc, #24]	; (8015b0c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015af2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015af6:	4b06      	ldr	r3, [pc, #24]	; (8015b10 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015af8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8015afc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015b00:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015b04:	2100      	movs	r1, #0
 8015b06:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8015b0a:	4770      	bx	lr
 8015b0c:	20012d98 	.word	0x20012d98
 8015b10:	20012d9a 	.word	0x20012d9a

08015b14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015b14:	4b03      	ldr	r3, [pc, #12]	; (8015b24 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015b16:	6818      	ldr	r0, [r3, #0]
 8015b18:	b110      	cbz	r0, 8015b20 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015b1a:	6803      	ldr	r3, [r0, #0]
 8015b1c:	699b      	ldr	r3, [r3, #24]
 8015b1e:	4718      	bx	r3
 8015b20:	4770      	bx	lr
 8015b22:	bf00      	nop
 8015b24:	20012de8 	.word	0x20012de8

08015b28 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015b28:	4770      	bx	lr
	...

08015b2c <_ZN8touchgfx11Application4drawEv>:
 8015b2c:	b507      	push	{r0, r1, r2, lr}
 8015b2e:	4b09      	ldr	r3, [pc, #36]	; (8015b54 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015b30:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015b34:	4b08      	ldr	r3, [pc, #32]	; (8015b58 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015b36:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015b3a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015b3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015b42:	6803      	ldr	r3, [r0, #0]
 8015b44:	2100      	movs	r1, #0
 8015b46:	9100      	str	r1, [sp, #0]
 8015b48:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015b4a:	4669      	mov	r1, sp
 8015b4c:	4798      	blx	r3
 8015b4e:	b003      	add	sp, #12
 8015b50:	f85d fb04 	ldr.w	pc, [sp], #4
 8015b54:	20012d98 	.word	0x20012d98
 8015b58:	20012d9a 	.word	0x20012d9a

08015b5c <_ZN8touchgfx11Application10invalidateEv>:
 8015b5c:	4b09      	ldr	r3, [pc, #36]	; (8015b84 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015b5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015b62:	4b09      	ldr	r3, [pc, #36]	; (8015b88 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015b64:	b082      	sub	sp, #8
 8015b66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015b6a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015b6e:	2100      	movs	r1, #0
 8015b70:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015b74:	9100      	str	r1, [sp, #0]
 8015b76:	6803      	ldr	r3, [r0, #0]
 8015b78:	aa02      	add	r2, sp, #8
 8015b7a:	e912 0006 	ldmdb	r2, {r1, r2}
 8015b7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015b80:	b002      	add	sp, #8
 8015b82:	4718      	bx	r3
 8015b84:	20012d98 	.word	0x20012d98
 8015b88:	20012d9a 	.word	0x20012d9a

08015b8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015b8c:	4b03      	ldr	r3, [pc, #12]	; (8015b9c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015b8e:	6818      	ldr	r0, [r3, #0]
 8015b90:	b110      	cbz	r0, 8015b98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015b92:	6803      	ldr	r3, [r0, #0]
 8015b94:	69db      	ldr	r3, [r3, #28]
 8015b96:	4718      	bx	r3
 8015b98:	4770      	bx	lr
 8015b9a:	bf00      	nop
 8015b9c:	20012de8 	.word	0x20012de8

08015ba0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015ba0:	4b03      	ldr	r3, [pc, #12]	; (8015bb0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015ba2:	6818      	ldr	r0, [r3, #0]
 8015ba4:	b110      	cbz	r0, 8015bac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015ba6:	6803      	ldr	r3, [r0, #0]
 8015ba8:	6a1b      	ldr	r3, [r3, #32]
 8015baa:	4718      	bx	r3
 8015bac:	4770      	bx	lr
 8015bae:	bf00      	nop
 8015bb0:	20012de8 	.word	0x20012de8

08015bb4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015bb4:	2300      	movs	r3, #0
 8015bb6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015bba:	4770      	bx	lr

08015bbc <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015bbc:	4b03      	ldr	r3, [pc, #12]	; (8015bcc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015bbe:	6818      	ldr	r0, [r3, #0]
 8015bc0:	b110      	cbz	r0, 8015bc8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015bc2:	6803      	ldr	r3, [r0, #0]
 8015bc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015bc6:	4718      	bx	r3
 8015bc8:	4770      	bx	lr
 8015bca:	bf00      	nop
 8015bcc:	20012de8 	.word	0x20012de8

08015bd0 <_ZN8touchgfx11ApplicationD1Ev>:
 8015bd0:	4770      	bx	lr

08015bd2 <_ZN8touchgfx11ApplicationD0Ev>:
 8015bd2:	b510      	push	{r4, lr}
 8015bd4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015bd8:	4604      	mov	r4, r0
 8015bda:	f014 f98c 	bl	8029ef6 <_ZdlPvj>
 8015bde:	4620      	mov	r0, r4
 8015be0:	bd10      	pop	{r4, pc}

08015be2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015be2:	b510      	push	{r4, lr}
 8015be4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015be8:	888a      	ldrh	r2, [r1, #4]
 8015bea:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015bee:	4422      	add	r2, r4
 8015bf0:	b212      	sxth	r2, r2
 8015bf2:	4293      	cmp	r3, r2
 8015bf4:	da15      	bge.n	8015c22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015bf6:	8882      	ldrh	r2, [r0, #4]
 8015bf8:	4413      	add	r3, r2
 8015bfa:	b21b      	sxth	r3, r3
 8015bfc:	429c      	cmp	r4, r3
 8015bfe:	da10      	bge.n	8015c22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015c00:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015c04:	88c9      	ldrh	r1, [r1, #6]
 8015c06:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015c0a:	4419      	add	r1, r3
 8015c0c:	b209      	sxth	r1, r1
 8015c0e:	428a      	cmp	r2, r1
 8015c10:	da07      	bge.n	8015c22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015c12:	88c0      	ldrh	r0, [r0, #6]
 8015c14:	4410      	add	r0, r2
 8015c16:	b200      	sxth	r0, r0
 8015c18:	4283      	cmp	r3, r0
 8015c1a:	bfac      	ite	ge
 8015c1c:	2000      	movge	r0, #0
 8015c1e:	2001      	movlt	r0, #1
 8015c20:	bd10      	pop	{r4, pc}
 8015c22:	2000      	movs	r0, #0
 8015c24:	e7fc      	b.n	8015c20 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015c26 <_ZN8touchgfx4Rect10restrictToEss>:
 8015c26:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015c2a:	2b00      	cmp	r3, #0
 8015c2c:	b510      	push	{r4, lr}
 8015c2e:	da04      	bge.n	8015c3a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015c30:	8884      	ldrh	r4, [r0, #4]
 8015c32:	4423      	add	r3, r4
 8015c34:	8083      	strh	r3, [r0, #4]
 8015c36:	2300      	movs	r3, #0
 8015c38:	8003      	strh	r3, [r0, #0]
 8015c3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015c3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015c42:	1b09      	subs	r1, r1, r4
 8015c44:	428b      	cmp	r3, r1
 8015c46:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015c4a:	bfc8      	it	gt
 8015c4c:	8081      	strhgt	r1, [r0, #4]
 8015c4e:	2b00      	cmp	r3, #0
 8015c50:	da04      	bge.n	8015c5c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015c52:	88c1      	ldrh	r1, [r0, #6]
 8015c54:	440b      	add	r3, r1
 8015c56:	80c3      	strh	r3, [r0, #6]
 8015c58:	2300      	movs	r3, #0
 8015c5a:	8043      	strh	r3, [r0, #2]
 8015c5c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015c60:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015c64:	1a52      	subs	r2, r2, r1
 8015c66:	4293      	cmp	r3, r2
 8015c68:	bfc8      	it	gt
 8015c6a:	80c2      	strhgt	r2, [r0, #6]
 8015c6c:	bd10      	pop	{r4, pc}
	...

08015c70 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015c70:	b510      	push	{r4, lr}
 8015c72:	4b10      	ldr	r3, [pc, #64]	; (8015cb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015c74:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015c78:	4b0f      	ldr	r3, [pc, #60]	; (8015cb8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015c7a:	460c      	mov	r4, r1
 8015c7c:	4620      	mov	r0, r4
 8015c7e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015c82:	f7ff ffd0 	bl	8015c26 <_ZN8touchgfx4Rect10restrictToEss>
 8015c86:	4b0d      	ldr	r3, [pc, #52]	; (8015cbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015c88:	6818      	ldr	r0, [r3, #0]
 8015c8a:	b190      	cbz	r0, 8015cb2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015c8c:	6803      	ldr	r3, [r0, #0]
 8015c8e:	4621      	mov	r1, r4
 8015c90:	689b      	ldr	r3, [r3, #8]
 8015c92:	4798      	blx	r3
 8015c94:	4b0a      	ldr	r3, [pc, #40]	; (8015cc0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015c96:	6818      	ldr	r0, [r3, #0]
 8015c98:	b118      	cbz	r0, 8015ca2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015c9a:	6803      	ldr	r3, [r0, #0]
 8015c9c:	4621      	mov	r1, r4
 8015c9e:	689b      	ldr	r3, [r3, #8]
 8015ca0:	4798      	blx	r3
 8015ca2:	4b08      	ldr	r3, [pc, #32]	; (8015cc4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015ca4:	6818      	ldr	r0, [r3, #0]
 8015ca6:	6803      	ldr	r3, [r0, #0]
 8015ca8:	4621      	mov	r1, r4
 8015caa:	69db      	ldr	r3, [r3, #28]
 8015cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015cb0:	4718      	bx	r3
 8015cb2:	bd10      	pop	{r4, pc}
 8015cb4:	20012d9a 	.word	0x20012d9a
 8015cb8:	20012d98 	.word	0x20012d98
 8015cbc:	20012de8 	.word	0x20012de8
 8015cc0:	20012de4 	.word	0x20012de4
 8015cc4:	20012da4 	.word	0x20012da4

08015cc8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015cca:	4606      	mov	r6, r0
 8015ccc:	4608      	mov	r0, r1
 8015cce:	460f      	mov	r7, r1
 8015cd0:	f7fa ff97 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015cd4:	b9e8      	cbnz	r0, 8015d12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015cd6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015cda:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015cde:	42a5      	cmp	r5, r4
 8015ce0:	db17      	blt.n	8015d12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ce2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015ce6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015cea:	429a      	cmp	r2, r3
 8015cec:	db11      	blt.n	8015d12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015cee:	88b9      	ldrh	r1, [r7, #4]
 8015cf0:	440d      	add	r5, r1
 8015cf2:	88b1      	ldrh	r1, [r6, #4]
 8015cf4:	440c      	add	r4, r1
 8015cf6:	b22d      	sxth	r5, r5
 8015cf8:	b224      	sxth	r4, r4
 8015cfa:	42a5      	cmp	r5, r4
 8015cfc:	dc09      	bgt.n	8015d12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015cfe:	88f8      	ldrh	r0, [r7, #6]
 8015d00:	4410      	add	r0, r2
 8015d02:	88f2      	ldrh	r2, [r6, #6]
 8015d04:	4413      	add	r3, r2
 8015d06:	b200      	sxth	r0, r0
 8015d08:	b21b      	sxth	r3, r3
 8015d0a:	4298      	cmp	r0, r3
 8015d0c:	bfcc      	ite	gt
 8015d0e:	2000      	movgt	r0, #0
 8015d10:	2001      	movle	r0, #1
 8015d12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015d14 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d16:	4604      	mov	r4, r0
 8015d18:	4608      	mov	r0, r1
 8015d1a:	460d      	mov	r5, r1
 8015d1c:	f7fa ff71 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d20:	b978      	cbnz	r0, 8015d42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015d22:	4620      	mov	r0, r4
 8015d24:	f7fa ff6d 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d28:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015d2c:	b150      	cbz	r0, 8015d44 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015d2e:	8026      	strh	r6, [r4, #0]
 8015d30:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015d34:	8063      	strh	r3, [r4, #2]
 8015d36:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015d3a:	80a3      	strh	r3, [r4, #4]
 8015d3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015d40:	80e3      	strh	r3, [r4, #6]
 8015d42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015d44:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015d48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015d4c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015d50:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015d54:	88ed      	ldrh	r5, [r5, #6]
 8015d56:	42b1      	cmp	r1, r6
 8015d58:	460f      	mov	r7, r1
 8015d5a:	bfa8      	it	ge
 8015d5c:	4637      	movge	r7, r6
 8015d5e:	4293      	cmp	r3, r2
 8015d60:	4618      	mov	r0, r3
 8015d62:	4466      	add	r6, ip
 8015d64:	bfa8      	it	ge
 8015d66:	4610      	movge	r0, r2
 8015d68:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015d6c:	8027      	strh	r7, [r4, #0]
 8015d6e:	442a      	add	r2, r5
 8015d70:	88e5      	ldrh	r5, [r4, #6]
 8015d72:	8060      	strh	r0, [r4, #2]
 8015d74:	4461      	add	r1, ip
 8015d76:	442b      	add	r3, r5
 8015d78:	b236      	sxth	r6, r6
 8015d7a:	b209      	sxth	r1, r1
 8015d7c:	b212      	sxth	r2, r2
 8015d7e:	b21b      	sxth	r3, r3
 8015d80:	428e      	cmp	r6, r1
 8015d82:	bfac      	ite	ge
 8015d84:	ebc7 0106 	rsbge	r1, r7, r6
 8015d88:	ebc7 0101 	rsblt	r1, r7, r1
 8015d8c:	429a      	cmp	r2, r3
 8015d8e:	bfac      	ite	ge
 8015d90:	ebc0 0202 	rsbge	r2, r0, r2
 8015d94:	ebc0 0203 	rsblt	r2, r0, r3
 8015d98:	80a1      	strh	r1, [r4, #4]
 8015d9a:	80e2      	strh	r2, [r4, #6]
 8015d9c:	e7d1      	b.n	8015d42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015da0 <_ZN8touchgfx11Application11getInstanceEv>:
 8015da0:	4b01      	ldr	r3, [pc, #4]	; (8015da8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015da2:	6818      	ldr	r0, [r3, #0]
 8015da4:	4770      	bx	lr
 8015da6:	bf00      	nop
 8015da8:	20012df8 	.word	0x20012df8

08015dac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015dae:	4b10      	ldr	r3, [pc, #64]	; (8015df0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015db0:	781b      	ldrb	r3, [r3, #0]
 8015db2:	4605      	mov	r5, r0
 8015db4:	b1d3      	cbz	r3, 8015dec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015db6:	4b0f      	ldr	r3, [pc, #60]	; (8015df4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015db8:	4f0f      	ldr	r7, [pc, #60]	; (8015df8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015dba:	881c      	ldrh	r4, [r3, #0]
 8015dbc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015dc0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015dc4:	42a3      	cmp	r3, r4
 8015dc6:	d90e      	bls.n	8015de6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015dc8:	683b      	ldr	r3, [r7, #0]
 8015dca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015dce:	b10a      	cbz	r2, 8015dd4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015dd0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015dd2:	b900      	cbnz	r0, 8015dd6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015dd4:	6898      	ldr	r0, [r3, #8]
 8015dd6:	6803      	ldr	r3, [r0, #0]
 8015dd8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015ddc:	69db      	ldr	r3, [r3, #28]
 8015dde:	3401      	adds	r4, #1
 8015de0:	4798      	blx	r3
 8015de2:	b2a4      	uxth	r4, r4
 8015de4:	e7ec      	b.n	8015dc0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015de6:	2300      	movs	r3, #0
 8015de8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015dec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015dee:	bf00      	nop
 8015df0:	20012da2 	.word	0x20012da2
 8015df4:	20000088 	.word	0x20000088
 8015df8:	20012da4 	.word	0x20012da4

08015dfc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015dfc:	b510      	push	{r4, lr}
 8015dfe:	2300      	movs	r3, #0
 8015e00:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015e04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015e08:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015e0c:	4604      	mov	r4, r0
 8015e0e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015e12:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015e16:	429a      	cmp	r2, r3
 8015e18:	d90e      	bls.n	8015e38 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015e1a:	18e2      	adds	r2, r4, r3
 8015e1c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015e20:	b122      	cbz	r2, 8015e2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015e22:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015e26:	6803      	ldr	r3, [r0, #0]
 8015e28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015e2a:	4798      	blx	r3
 8015e2c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015e30:	3301      	adds	r3, #1
 8015e32:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015e36:	e7ea      	b.n	8015e0e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015e38:	bd10      	pop	{r4, pc}

08015e3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015e3a:	b530      	push	{r4, r5, lr}
 8015e3c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015e40:	2200      	movs	r2, #0
 8015e42:	b293      	uxth	r3, r2
 8015e44:	429d      	cmp	r5, r3
 8015e46:	d90e      	bls.n	8015e66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015e48:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015e4c:	428b      	cmp	r3, r1
 8015e4e:	d10b      	bne.n	8015e68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015e50:	1884      	adds	r4, r0, r2
 8015e52:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015e56:	b13b      	cbz	r3, 8015e68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015e58:	3b01      	subs	r3, #1
 8015e5a:	b2db      	uxtb	r3, r3
 8015e5c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015e60:	b90b      	cbnz	r3, 8015e66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015e62:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015e66:	bd30      	pop	{r4, r5, pc}
 8015e68:	3201      	adds	r2, #1
 8015e6a:	e7ea      	b.n	8015e42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015e6c:	2300      	movs	r3, #0
 8015e6e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015e72:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015e76:	30a4      	adds	r0, #164	; 0xa4
 8015e78:	f802 3b01 	strb.w	r3, [r2], #1
 8015e7c:	4282      	cmp	r2, r0
 8015e7e:	d1fb      	bne.n	8015e78 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015e80:	4770      	bx	lr
	...

08015e84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015e84:	b570      	push	{r4, r5, r6, lr}
 8015e86:	4c0b      	ldr	r4, [pc, #44]	; (8015eb4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015e88:	4605      	mov	r5, r0
 8015e8a:	6820      	ldr	r0, [r4, #0]
 8015e8c:	460e      	mov	r6, r1
 8015e8e:	b110      	cbz	r0, 8015e96 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015e90:	6803      	ldr	r3, [r0, #0]
 8015e92:	695b      	ldr	r3, [r3, #20]
 8015e94:	4798      	blx	r3
 8015e96:	1d28      	adds	r0, r5, #4
 8015e98:	f7ff ffe8 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015e9c:	6026      	str	r6, [r4, #0]
 8015e9e:	6833      	ldr	r3, [r6, #0]
 8015ea0:	4630      	mov	r0, r6
 8015ea2:	68db      	ldr	r3, [r3, #12]
 8015ea4:	4798      	blx	r3
 8015ea6:	682b      	ldr	r3, [r5, #0]
 8015ea8:	4628      	mov	r0, r5
 8015eaa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015eac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015eb0:	4718      	bx	r3
 8015eb2:	bf00      	nop
 8015eb4:	20012de8 	.word	0x20012de8

08015eb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015eb8:	2300      	movs	r3, #0
 8015eba:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015ebe:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015ec2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ec4:	461a      	mov	r2, r3
 8015ec6:	461c      	mov	r4, r3
 8015ec8:	461d      	mov	r5, r3
 8015eca:	459c      	cmp	ip, r3
 8015ecc:	dd1a      	ble.n	8015f04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015ece:	18c6      	adds	r6, r0, r3
 8015ed0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015ed4:	b16e      	cbz	r6, 8015ef2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015ed6:	429a      	cmp	r2, r3
 8015ed8:	d008      	beq.n	8015eec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015eda:	fa1f fe82 	uxth.w	lr, r2
 8015ede:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015ee2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015ee6:	1887      	adds	r7, r0, r2
 8015ee8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015eec:	3201      	adds	r2, #1
 8015eee:	3301      	adds	r3, #1
 8015ef0:	e7eb      	b.n	8015eca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015ef2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015ef6:	4299      	cmp	r1, r3
 8015ef8:	bfa8      	it	ge
 8015efa:	3501      	addge	r5, #1
 8015efc:	429e      	cmp	r6, r3
 8015efe:	bfc8      	it	gt
 8015f00:	3401      	addgt	r4, #1
 8015f02:	e7f4      	b.n	8015eee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015f04:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015f08:	1b49      	subs	r1, r1, r5
 8015f0a:	1b1b      	subs	r3, r3, r4
 8015f0c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015f10:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015f14:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015f18:	4293      	cmp	r3, r2
 8015f1a:	dd03      	ble.n	8015f24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015f1c:	3b01      	subs	r3, #1
 8015f1e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015f22:	e7f7      	b.n	8015f14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015f24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015f28 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015f28:	b570      	push	{r4, r5, r6, lr}
 8015f2a:	4d16      	ldr	r5, [pc, #88]	; (8015f84 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015f2c:	4604      	mov	r4, r0
 8015f2e:	6828      	ldr	r0, [r5, #0]
 8015f30:	b140      	cbz	r0, 8015f44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015f32:	7a03      	ldrb	r3, [r0, #8]
 8015f34:	b933      	cbnz	r3, 8015f44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015f36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015f3a:	6803      	ldr	r3, [r0, #0]
 8015f3c:	689b      	ldr	r3, [r3, #8]
 8015f3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015f42:	4718      	bx	r3
 8015f44:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015f48:	4e0f      	ldr	r6, [pc, #60]	; (8015f88 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015f4a:	b973      	cbnz	r3, 8015f6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015f4c:	b168      	cbz	r0, 8015f6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015f4e:	7a03      	ldrb	r3, [r0, #8]
 8015f50:	b15b      	cbz	r3, 8015f6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015f52:	6830      	ldr	r0, [r6, #0]
 8015f54:	b110      	cbz	r0, 8015f5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015f56:	6803      	ldr	r3, [r0, #0]
 8015f58:	691b      	ldr	r3, [r3, #16]
 8015f5a:	4798      	blx	r3
 8015f5c:	6828      	ldr	r0, [r5, #0]
 8015f5e:	6803      	ldr	r3, [r0, #0]
 8015f60:	68db      	ldr	r3, [r3, #12]
 8015f62:	4798      	blx	r3
 8015f64:	2301      	movs	r3, #1
 8015f66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015f6a:	3404      	adds	r4, #4
 8015f6c:	4620      	mov	r0, r4
 8015f6e:	f7ff ff45 	bl	8015dfc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015f72:	4620      	mov	r0, r4
 8015f74:	f7ff ffa0 	bl	8015eb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015f78:	6830      	ldr	r0, [r6, #0]
 8015f7a:	b110      	cbz	r0, 8015f82 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015f7c:	6803      	ldr	r3, [r0, #0]
 8015f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015f80:	e7dd      	b.n	8015f3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015f82:	bd70      	pop	{r4, r5, r6, pc}
 8015f84:	20012dec 	.word	0x20012dec
 8015f88:	20012de8 	.word	0x20012de8

08015f8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f8e:	2300      	movs	r3, #0
 8015f90:	4604      	mov	r4, r0
 8015f92:	460d      	mov	r5, r1
 8015f94:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015f98:	4618      	mov	r0, r3
 8015f9a:	b29a      	uxth	r2, r3
 8015f9c:	4291      	cmp	r1, r2
 8015f9e:	d911      	bls.n	8015fc4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015fa0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015fa4:	18e6      	adds	r6, r4, r3
 8015fa6:	42af      	cmp	r7, r5
 8015fa8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015fac:	d105      	bne.n	8015fba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015fae:	2aff      	cmp	r2, #255	; 0xff
 8015fb0:	d002      	beq.n	8015fb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015fb2:	3201      	adds	r2, #1
 8015fb4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015fb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015fba:	2a00      	cmp	r2, #0
 8015fbc:	bf08      	it	eq
 8015fbe:	2001      	moveq	r0, #1
 8015fc0:	3301      	adds	r3, #1
 8015fc2:	e7ea      	b.n	8015f9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015fc4:	b120      	cbz	r0, 8015fd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015fc6:	2920      	cmp	r1, #32
 8015fc8:	d102      	bne.n	8015fd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015fca:	4620      	mov	r0, r4
 8015fcc:	f7ff ff74 	bl	8015eb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015fd0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015fd4:	2b1f      	cmp	r3, #31
 8015fd6:	d8ef      	bhi.n	8015fb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015fd8:	18e2      	adds	r2, r4, r3
 8015fda:	2101      	movs	r1, #1
 8015fdc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015fe0:	185a      	adds	r2, r3, r1
 8015fe2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015fe6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015fea:	e7e5      	b.n	8015fb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015fec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015fec:	4603      	mov	r3, r0
 8015fee:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015ff2:	2200      	movs	r2, #0
 8015ff4:	801a      	strh	r2, [r3, #0]
 8015ff6:	805a      	strh	r2, [r3, #2]
 8015ff8:	809a      	strh	r2, [r3, #4]
 8015ffa:	80da      	strh	r2, [r3, #6]
 8015ffc:	3308      	adds	r3, #8
 8015ffe:	428b      	cmp	r3, r1
 8016000:	d1f8      	bne.n	8015ff4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016002:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016006:	4770      	bx	lr

08016008 <_ZN8touchgfx11ApplicationC1Ev>:
 8016008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801600a:	4606      	mov	r6, r0
 801600c:	4b1c      	ldr	r3, [pc, #112]	; (8016080 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801600e:	f846 3b04 	str.w	r3, [r6], #4
 8016012:	4604      	mov	r4, r0
 8016014:	2500      	movs	r5, #0
 8016016:	22a8      	movs	r2, #168	; 0xa8
 8016018:	2100      	movs	r1, #0
 801601a:	4630      	mov	r0, r6
 801601c:	f015 f857 	bl	802b0ce <memset>
 8016020:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016024:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016028:	f7ff ffe0 	bl	8015fec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801602c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016030:	f7ff ffdc 	bl	8015fec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016034:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016038:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801603c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016040:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016044:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016048:	490e      	ldr	r1, [pc, #56]	; (8016084 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801604a:	480f      	ldr	r0, [pc, #60]	; (8016088 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801604c:	4f0f      	ldr	r7, [pc, #60]	; (801608c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801604e:	f010 fde9 	bl	8026c24 <CRC_Lock>
 8016052:	4b0f      	ldr	r3, [pc, #60]	; (8016090 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016054:	b158      	cbz	r0, 801606e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016056:	801d      	strh	r5, [r3, #0]
 8016058:	4a0e      	ldr	r2, [pc, #56]	; (8016094 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801605a:	2300      	movs	r3, #0
 801605c:	6013      	str	r3, [r2, #0]
 801605e:	4a0e      	ldr	r2, [pc, #56]	; (8016098 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016060:	603b      	str	r3, [r7, #0]
 8016062:	4630      	mov	r0, r6
 8016064:	6013      	str	r3, [r2, #0]
 8016066:	f7ff ff01 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801606a:	4620      	mov	r0, r4
 801606c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801606e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016072:	2002      	movs	r0, #2
 8016074:	801a      	strh	r2, [r3, #0]
 8016076:	6038      	str	r0, [r7, #0]
 8016078:	f001 fb4a 	bl	8017710 <_ZN8touchgfx6Screen4drawEv>
 801607c:	e7ec      	b.n	8016058 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801607e:	bf00      	nop
 8016080:	0802f4d0 	.word	0x0802f4d0
 8016084:	b5e8b5cd 	.word	0xb5e8b5cd
 8016088:	f407a5c2 	.word	0xf407a5c2
 801608c:	20012de8 	.word	0x20012de8
 8016090:	20000088 	.word	0x20000088
 8016094:	20012df8 	.word	0x20012df8
 8016098:	20012dec 	.word	0x20012dec

0801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801609c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80160a0:	3b01      	subs	r3, #1
 80160a2:	b29b      	uxth	r3, r3
 80160a4:	428b      	cmp	r3, r1
 80160a6:	b510      	push	{r4, lr}
 80160a8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80160ac:	d908      	bls.n	80160c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80160ae:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80160b2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80160b6:	681a      	ldr	r2, [r3, #0]
 80160b8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80160bc:	685a      	ldr	r2, [r3, #4]
 80160be:	6062      	str	r2, [r4, #4]
 80160c0:	bd10      	pop	{r4, pc}
	...

080160c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80160c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160c8:	4b8f      	ldr	r3, [pc, #572]	; (8016308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80160ca:	b08f      	sub	sp, #60	; 0x3c
 80160cc:	ac0a      	add	r4, sp, #40	; 0x28
 80160ce:	e884 0006 	stmia.w	r4, {r1, r2}
 80160d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80160d6:	4b8d      	ldr	r3, [pc, #564]	; (801630c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80160d8:	4683      	mov	fp, r0
 80160da:	f9b3 1000 	ldrsh.w	r1, [r3]
 80160de:	4620      	mov	r0, r4
 80160e0:	f7ff fda1 	bl	8015c26 <_ZN8touchgfx4Rect10restrictToEss>
 80160e4:	4620      	mov	r0, r4
 80160e6:	f7fa fd8c 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80160ea:	2800      	cmp	r0, #0
 80160ec:	d16a      	bne.n	80161c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80160ee:	9403      	str	r4, [sp, #12]
 80160f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80160f4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80160f8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80160fc:	35a4      	adds	r5, #164	; 0xa4
 80160fe:	9301      	str	r3, [sp, #4]
 8016100:	b15c      	cbz	r4, 801611a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016102:	4629      	mov	r1, r5
 8016104:	9803      	ldr	r0, [sp, #12]
 8016106:	f7ff fddf 	bl	8015cc8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801610a:	3c01      	subs	r4, #1
 801610c:	b118      	cbz	r0, 8016116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801610e:	b2a1      	uxth	r1, r4
 8016110:	9801      	ldr	r0, [sp, #4]
 8016112:	f7ff ffc3 	bl	801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016116:	3d08      	subs	r5, #8
 8016118:	e7f2      	b.n	8016100 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801611a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801611e:	f8cd a010 	str.w	sl, [sp, #16]
 8016122:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016126:	9302      	str	r3, [sp, #8]
 8016128:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801612c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016130:	9306      	str	r3, [sp, #24]
 8016132:	445c      	add	r4, fp
 8016134:	2500      	movs	r5, #0
 8016136:	4626      	mov	r6, r4
 8016138:	f8cd a014 	str.w	sl, [sp, #20]
 801613c:	462f      	mov	r7, r5
 801613e:	9b05      	ldr	r3, [sp, #20]
 8016140:	2b00      	cmp	r3, #0
 8016142:	d073      	beq.n	801622c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016144:	9903      	ldr	r1, [sp, #12]
 8016146:	4630      	mov	r0, r6
 8016148:	f7ff fd4b 	bl	8015be2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801614c:	b350      	cbz	r0, 80161a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801614e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016152:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016156:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801615a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801615e:	45e6      	cmp	lr, ip
 8016160:	db33      	blt.n	80161ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016162:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016166:	88b3      	ldrh	r3, [r6, #4]
 8016168:	4472      	add	r2, lr
 801616a:	4463      	add	r3, ip
 801616c:	b212      	sxth	r2, r2
 801616e:	b21b      	sxth	r3, r3
 8016170:	429a      	cmp	r2, r3
 8016172:	dc2a      	bgt.n	80161ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016174:	88f3      	ldrh	r3, [r6, #6]
 8016176:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801617a:	fa1f f289 	uxth.w	r2, r9
 801617e:	4413      	add	r3, r2
 8016180:	b29b      	uxth	r3, r3
 8016182:	45c8      	cmp	r8, r9
 8016184:	fa1f fc88 	uxth.w	ip, r8
 8016188:	fa0f fe83 	sxth.w	lr, r3
 801618c:	db0f      	blt.n	80161ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801618e:	eba3 030c 	sub.w	r3, r3, ip
 8016192:	1ac9      	subs	r1, r1, r3
 8016194:	b209      	sxth	r1, r1
 8016196:	2900      	cmp	r1, #0
 8016198:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801619c:	dd12      	ble.n	80161c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801619e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80161a2:	4605      	mov	r5, r0
 80161a4:	9b05      	ldr	r3, [sp, #20]
 80161a6:	3b01      	subs	r3, #1
 80161a8:	9305      	str	r3, [sp, #20]
 80161aa:	3e08      	subs	r6, #8
 80161ac:	e7c7      	b.n	801613e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80161ae:	4461      	add	r1, ip
 80161b0:	b209      	sxth	r1, r1
 80161b2:	4571      	cmp	r1, lr
 80161b4:	dc38      	bgt.n	8016228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80161b6:	eba2 020c 	sub.w	r2, r2, ip
 80161ba:	b212      	sxth	r2, r2
 80161bc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80161c0:	2a00      	cmp	r2, #0
 80161c2:	dcee      	bgt.n	80161a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80161c4:	b00f      	add	sp, #60	; 0x3c
 80161c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80161ca:	45c8      	cmp	r8, r9
 80161cc:	db2c      	blt.n	8016228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80161ce:	88f3      	ldrh	r3, [r6, #6]
 80161d0:	4499      	add	r9, r3
 80161d2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80161d6:	4498      	add	r8, r3
 80161d8:	fa0f f989 	sxth.w	r9, r9
 80161dc:	fa0f f888 	sxth.w	r8, r8
 80161e0:	45c1      	cmp	r9, r8
 80161e2:	db21      	blt.n	8016228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80161e4:	88b3      	ldrh	r3, [r6, #4]
 80161e6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80161ea:	fa1f f28c 	uxth.w	r2, ip
 80161ee:	4413      	add	r3, r2
 80161f0:	b29b      	uxth	r3, r3
 80161f2:	45e6      	cmp	lr, ip
 80161f4:	fa1f f88e 	uxth.w	r8, lr
 80161f8:	fa0f f983 	sxth.w	r9, r3
 80161fc:	db0a      	blt.n	8016214 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80161fe:	eba3 0308 	sub.w	r3, r3, r8
 8016202:	1ac9      	subs	r1, r1, r3
 8016204:	b209      	sxth	r1, r1
 8016206:	2900      	cmp	r1, #0
 8016208:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801620c:	ddda      	ble.n	80161c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801620e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016212:	e7c6      	b.n	80161a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016214:	4441      	add	r1, r8
 8016216:	b209      	sxth	r1, r1
 8016218:	4549      	cmp	r1, r9
 801621a:	dc05      	bgt.n	8016228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801621c:	eba2 0208 	sub.w	r2, r2, r8
 8016220:	b212      	sxth	r2, r2
 8016222:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016226:	e7cb      	b.n	80161c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016228:	4607      	mov	r7, r0
 801622a:	e7bb      	b.n	80161a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801622c:	2d00      	cmp	r5, #0
 801622e:	d181      	bne.n	8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016230:	2f00      	cmp	r7, #0
 8016232:	f000 81dd 	beq.w	80165f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016236:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801623a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801623e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016242:	b2b3      	uxth	r3, r6
 8016244:	9305      	str	r3, [sp, #20]
 8016246:	9a05      	ldr	r2, [sp, #20]
 8016248:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801624c:	4413      	add	r3, r2
 801624e:	b2ba      	uxth	r2, r7
 8016250:	4492      	add	sl, r2
 8016252:	b29b      	uxth	r3, r3
 8016254:	fa1f fa8a 	uxth.w	sl, sl
 8016258:	fa0f f883 	sxth.w	r8, r3
 801625c:	fa0f f98a 	sxth.w	r9, sl
 8016260:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016264:	9b04      	ldr	r3, [sp, #16]
 8016266:	2b00      	cmp	r3, #0
 8016268:	d052      	beq.n	8016310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801626a:	9903      	ldr	r1, [sp, #12]
 801626c:	4620      	mov	r0, r4
 801626e:	f7ff fcb8 	bl	8015be2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016272:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016276:	b1c0      	cbz	r0, 80162aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016278:	f9b4 e000 	ldrsh.w	lr, [r4]
 801627c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016280:	4576      	cmp	r6, lr
 8016282:	dc22      	bgt.n	80162ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016284:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016288:	44f4      	add	ip, lr
 801628a:	fa0f fc8c 	sxth.w	ip, ip
 801628e:	45e0      	cmp	r8, ip
 8016290:	db1b      	blt.n	80162ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016292:	428f      	cmp	r7, r1
 8016294:	fa1f fc81 	uxth.w	ip, r1
 8016298:	88e1      	ldrh	r1, [r4, #6]
 801629a:	dc0d      	bgt.n	80162b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801629c:	ebaa 0c0c 	sub.w	ip, sl, ip
 80162a0:	eba1 010c 	sub.w	r1, r1, ip
 80162a4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80162a8:	80e1      	strh	r1, [r4, #6]
 80162aa:	4628      	mov	r0, r5
 80162ac:	9904      	ldr	r1, [sp, #16]
 80162ae:	3901      	subs	r1, #1
 80162b0:	9104      	str	r1, [sp, #16]
 80162b2:	3c08      	subs	r4, #8
 80162b4:	4605      	mov	r5, r0
 80162b6:	e7d3      	b.n	8016260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80162b8:	4461      	add	r1, ip
 80162ba:	b209      	sxth	r1, r1
 80162bc:	4549      	cmp	r1, r9
 80162be:	dcf5      	bgt.n	80162ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80162c0:	eba2 0c0c 	sub.w	ip, r2, ip
 80162c4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80162c8:	e7ef      	b.n	80162aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80162ca:	428f      	cmp	r7, r1
 80162cc:	dcee      	bgt.n	80162ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80162ce:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80162d2:	4461      	add	r1, ip
 80162d4:	b209      	sxth	r1, r1
 80162d6:	4589      	cmp	r9, r1
 80162d8:	dbe8      	blt.n	80162ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80162da:	4576      	cmp	r6, lr
 80162dc:	fa1f fc8e 	uxth.w	ip, lr
 80162e0:	88a1      	ldrh	r1, [r4, #4]
 80162e2:	dc07      	bgt.n	80162f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80162e4:	eba3 0c0c 	sub.w	ip, r3, ip
 80162e8:	eba1 010c 	sub.w	r1, r1, ip
 80162ec:	f8a4 8000 	strh.w	r8, [r4]
 80162f0:	80a1      	strh	r1, [r4, #4]
 80162f2:	e7da      	b.n	80162aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80162f4:	4461      	add	r1, ip
 80162f6:	b209      	sxth	r1, r1
 80162f8:	4588      	cmp	r8, r1
 80162fa:	dbd7      	blt.n	80162ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80162fc:	9905      	ldr	r1, [sp, #20]
 80162fe:	eba1 0c0c 	sub.w	ip, r1, ip
 8016302:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016306:	e7d0      	b.n	80162aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016308:	20012d9a 	.word	0x20012d9a
 801630c:	20012d98 	.word	0x20012d98
 8016310:	2d00      	cmp	r5, #0
 8016312:	f000 816d 	beq.w	80165f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016316:	9b06      	ldr	r3, [sp, #24]
 8016318:	445b      	add	r3, fp
 801631a:	461c      	mov	r4, r3
 801631c:	9b02      	ldr	r3, [sp, #8]
 801631e:	3301      	adds	r3, #1
 8016320:	f000 8166 	beq.w	80165f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016324:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016328:	4629      	mov	r1, r5
 801632a:	9803      	ldr	r0, [sp, #12]
 801632c:	f7ff fccc 	bl	8015cc8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016330:	b120      	cbz	r0, 801633c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016332:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016336:	9801      	ldr	r0, [sp, #4]
 8016338:	f7ff feb0 	bl	801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801633c:	9903      	ldr	r1, [sp, #12]
 801633e:	4628      	mov	r0, r5
 8016340:	f7ff fc4f 	bl	8015be2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016344:	2800      	cmp	r0, #0
 8016346:	f000 809c 	beq.w	8016482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801634a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801634e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016352:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016356:	9309      	str	r3, [sp, #36]	; 0x24
 8016358:	fa1f f189 	uxth.w	r1, r9
 801635c:	eb01 0c03 	add.w	ip, r1, r3
 8016360:	fa1f fa8c 	uxth.w	sl, ip
 8016364:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016368:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801636c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016370:	b283      	uxth	r3, r0
 8016372:	eb03 050c 	add.w	r5, r3, ip
 8016376:	b2ad      	uxth	r5, r5
 8016378:	9505      	str	r5, [sp, #20]
 801637a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801637e:	9504      	str	r5, [sp, #16]
 8016380:	4548      	cmp	r0, r9
 8016382:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016386:	f340 8099 	ble.w	80164bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801638a:	1a5b      	subs	r3, r3, r1
 801638c:	b29b      	uxth	r3, r3
 801638e:	4596      	cmp	lr, r2
 8016390:	fa0f f08a 	sxth.w	r0, sl
 8016394:	b21e      	sxth	r6, r3
 8016396:	dd2e      	ble.n	80163f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016398:	9f02      	ldr	r7, [sp, #8]
 801639a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801639e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80163a2:	9f04      	ldr	r7, [sp, #16]
 80163a4:	1a3f      	subs	r7, r7, r0
 80163a6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80163aa:	fa1f fe8e 	uxth.w	lr, lr
 80163ae:	b292      	uxth	r2, r2
 80163b0:	ebae 0102 	sub.w	r1, lr, r2
 80163b4:	44a6      	add	lr, r4
 80163b6:	4402      	add	r2, r0
 80163b8:	b289      	uxth	r1, r1
 80163ba:	fa0f fe8e 	sxth.w	lr, lr
 80163be:	b212      	sxth	r2, r2
 80163c0:	b20d      	sxth	r5, r1
 80163c2:	ebae 0202 	sub.w	r2, lr, r2
 80163c6:	436f      	muls	r7, r5
 80163c8:	4372      	muls	r2, r6
 80163ca:	4297      	cmp	r7, r2
 80163cc:	db09      	blt.n	80163e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80163ce:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80163d2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80163d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80163da:	449c      	add	ip, r3
 80163dc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80163e0:	e686      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80163e2:	4421      	add	r1, r4
 80163e4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80163e8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80163ec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80163f0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80163f4:	e67c      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80163f6:	9f04      	ldr	r7, [sp, #16]
 80163f8:	42b8      	cmp	r0, r7
 80163fa:	da27      	bge.n	801644c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80163fc:	9902      	ldr	r1, [sp, #8]
 80163fe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016402:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016406:	eb05 010e 	add.w	r1, r5, lr
 801640a:	fa1f f881 	uxth.w	r8, r1
 801640e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016412:	4411      	add	r1, r2
 8016414:	eba1 0108 	sub.w	r1, r1, r8
 8016418:	b289      	uxth	r1, r1
 801641a:	fa0f f988 	sxth.w	r9, r8
 801641e:	eba2 020e 	sub.w	r2, r2, lr
 8016422:	fa0f f881 	sxth.w	r8, r1
 8016426:	1a3f      	subs	r7, r7, r0
 8016428:	4372      	muls	r2, r6
 801642a:	fb08 f707 	mul.w	r7, r8, r7
 801642e:	42ba      	cmp	r2, r7
 8016430:	dc06      	bgt.n	8016440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016432:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016436:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801643a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801643e:	e7ca      	b.n	80163d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016440:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016444:	4429      	add	r1, r5
 8016446:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801644a:	e651      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801644c:	9805      	ldr	r0, [sp, #20]
 801644e:	ebaa 0000 	sub.w	r0, sl, r0
 8016452:	b280      	uxth	r0, r0
 8016454:	2d06      	cmp	r5, #6
 8016456:	fa0f fe80 	sxth.w	lr, r0
 801645a:	d817      	bhi.n	801648c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801645c:	9b04      	ldr	r3, [sp, #16]
 801645e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016462:	1c6b      	adds	r3, r5, #1
 8016464:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016468:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801646c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016470:	9b01      	ldr	r3, [sp, #4]
 8016472:	9801      	ldr	r0, [sp, #4]
 8016474:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016478:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801647c:	805a      	strh	r2, [r3, #2]
 801647e:	809e      	strh	r6, [r3, #4]
 8016480:	80d9      	strh	r1, [r3, #6]
 8016482:	9b02      	ldr	r3, [sp, #8]
 8016484:	3b01      	subs	r3, #1
 8016486:	9302      	str	r3, [sp, #8]
 8016488:	3c08      	subs	r4, #8
 801648a:	e747      	b.n	801631c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801648c:	9a02      	ldr	r2, [sp, #8]
 801648e:	45b6      	cmp	lr, r6
 8016490:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016494:	db0d      	blt.n	80164b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016496:	449c      	add	ip, r3
 8016498:	fa1f fc8c 	uxth.w	ip, ip
 801649c:	445a      	add	r2, fp
 801649e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80164a2:	448c      	add	ip, r1
 80164a4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80164a8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80164ac:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80164b0:	e61e      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80164b2:	445a      	add	r2, fp
 80164b4:	4484      	add	ip, r0
 80164b6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80164ba:	e78f      	b.n	80163dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80164bc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80164c0:	fa1f f18e 	uxth.w	r1, lr
 80164c4:	eb01 0806 	add.w	r8, r1, r6
 80164c8:	b293      	uxth	r3, r2
 80164ca:	fa1f f888 	uxth.w	r8, r8
 80164ce:	9306      	str	r3, [sp, #24]
 80164d0:	fa0f f388 	sxth.w	r3, r8
 80164d4:	9307      	str	r3, [sp, #28]
 80164d6:	9f06      	ldr	r7, [sp, #24]
 80164d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80164dc:	443b      	add	r3, r7
 80164de:	b29b      	uxth	r3, r3
 80164e0:	4596      	cmp	lr, r2
 80164e2:	9308      	str	r3, [sp, #32]
 80164e4:	da24      	bge.n	8016530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80164e6:	9905      	ldr	r1, [sp, #20]
 80164e8:	eba3 0308 	sub.w	r3, r3, r8
 80164ec:	ebaa 0401 	sub.w	r4, sl, r1
 80164f0:	b2a4      	uxth	r4, r4
 80164f2:	b29b      	uxth	r3, r3
 80164f4:	b225      	sxth	r5, r4
 80164f6:	b219      	sxth	r1, r3
 80164f8:	eba2 020e 	sub.w	r2, r2, lr
 80164fc:	eba9 0000 	sub.w	r0, r9, r0
 8016500:	436a      	muls	r2, r5
 8016502:	4348      	muls	r0, r1
 8016504:	4282      	cmp	r2, r0
 8016506:	9a02      	ldr	r2, [sp, #8]
 8016508:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801650c:	445a      	add	r2, fp
 801650e:	dc06      	bgt.n	801651e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016510:	9b07      	ldr	r3, [sp, #28]
 8016512:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016516:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801651a:	44a4      	add	ip, r4
 801651c:	e75e      	b.n	80163dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801651e:	9904      	ldr	r1, [sp, #16]
 8016520:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016524:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016528:	4433      	add	r3, r6
 801652a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801652e:	e5df      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016530:	9f06      	ldr	r7, [sp, #24]
 8016532:	9b04      	ldr	r3, [sp, #16]
 8016534:	1bc9      	subs	r1, r1, r7
 8016536:	fa0f f78a 	sxth.w	r7, sl
 801653a:	b289      	uxth	r1, r1
 801653c:	429f      	cmp	r7, r3
 801653e:	fa0f fe81 	sxth.w	lr, r1
 8016542:	dd23      	ble.n	801658c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016544:	9a05      	ldr	r2, [sp, #20]
 8016546:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801654a:	9d07      	ldr	r5, [sp, #28]
 801654c:	ebaa 0202 	sub.w	r2, sl, r2
 8016550:	b292      	uxth	r2, r2
 8016552:	eba5 0a03 	sub.w	sl, r5, r3
 8016556:	b214      	sxth	r4, r2
 8016558:	eba9 0000 	sub.w	r0, r9, r0
 801655c:	9b02      	ldr	r3, [sp, #8]
 801655e:	fb0e f000 	mul.w	r0, lr, r0
 8016562:	fb04 fa0a 	mul.w	sl, r4, sl
 8016566:	00db      	lsls	r3, r3, #3
 8016568:	4550      	cmp	r0, sl
 801656a:	445b      	add	r3, fp
 801656c:	db03      	blt.n	8016576 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801656e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016572:	4494      	add	ip, r2
 8016574:	e732      	b.n	80163dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016576:	9a04      	ldr	r2, [sp, #16]
 8016578:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801657c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016580:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016584:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016588:	4431      	add	r1, r6
 801658a:	e75c      	b.n	8016446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801658c:	9b08      	ldr	r3, [sp, #32]
 801658e:	eba3 0308 	sub.w	r3, r3, r8
 8016592:	b29b      	uxth	r3, r3
 8016594:	2d06      	cmp	r5, #6
 8016596:	b218      	sxth	r0, r3
 8016598:	d813      	bhi.n	80165c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801659a:	9b07      	ldr	r3, [sp, #28]
 801659c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80165a0:	1c6b      	adds	r3, r5, #1
 80165a2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80165a6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80165aa:	9b01      	ldr	r3, [sp, #4]
 80165ac:	9901      	ldr	r1, [sp, #4]
 80165ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80165b2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80165b6:	805a      	strh	r2, [r3, #2]
 80165b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80165ba:	809a      	strh	r2, [r3, #4]
 80165bc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80165c0:	e75f      	b.n	8016482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80165c2:	9c02      	ldr	r4, [sp, #8]
 80165c4:	4570      	cmp	r0, lr
 80165c6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80165ca:	db0d      	blt.n	80165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80165cc:	4431      	add	r1, r6
 80165ce:	9b06      	ldr	r3, [sp, #24]
 80165d0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80165d4:	b289      	uxth	r1, r1
 80165d6:	445c      	add	r4, fp
 80165d8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80165dc:	4419      	add	r1, r3
 80165de:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80165e2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80165e6:	e583      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80165e8:	445c      	add	r4, fp
 80165ea:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80165ee:	e79b      	b.n	8016528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80165f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80165f4:	1e65      	subs	r5, r4, #1
 80165f6:	b2ad      	uxth	r5, r5
 80165f8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80165fc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016600:	42b5      	cmp	r5, r6
 8016602:	d044      	beq.n	801668e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016604:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016608:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801660c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016610:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016614:	4282      	cmp	r2, r0
 8016616:	d11f      	bne.n	8016658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016618:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801661c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016620:	459c      	cmp	ip, r3
 8016622:	d119      	bne.n	8016658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016624:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016628:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801662c:	19d8      	adds	r0, r3, r7
 801662e:	b200      	sxth	r0, r0
 8016630:	4288      	cmp	r0, r1
 8016632:	d109      	bne.n	8016648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016634:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016638:	4413      	add	r3, r2
 801663a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801663e:	4629      	mov	r1, r5
 8016640:	9801      	ldr	r0, [sp, #4]
 8016642:	f7ff fd2b 	bl	801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016646:	e003      	b.n	8016650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016648:	4411      	add	r1, r2
 801664a:	b209      	sxth	r1, r1
 801664c:	42b9      	cmp	r1, r7
 801664e:	d0f3      	beq.n	8016638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016650:	3d01      	subs	r5, #1
 8016652:	b2ad      	uxth	r5, r5
 8016654:	3c08      	subs	r4, #8
 8016656:	e7d3      	b.n	8016600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016658:	42b9      	cmp	r1, r7
 801665a:	d1f9      	bne.n	8016650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801665c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016660:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016664:	4299      	cmp	r1, r3
 8016666:	d1f3      	bne.n	8016650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016668:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801666c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016670:	181f      	adds	r7, r3, r0
 8016672:	b23f      	sxth	r7, r7
 8016674:	42ba      	cmp	r2, r7
 8016676:	d105      	bne.n	8016684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016678:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801667c:	440b      	add	r3, r1
 801667e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016682:	e7dc      	b.n	801663e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016684:	440a      	add	r2, r1
 8016686:	b212      	sxth	r2, r2
 8016688:	4290      	cmp	r0, r2
 801668a:	d1e1      	bne.n	8016650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801668c:	e7f6      	b.n	801667c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801668e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016692:	2e07      	cmp	r6, #7
 8016694:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016698:	d812      	bhi.n	80166c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801669a:	1c75      	adds	r5, r6, #1
 801669c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80166a0:	9d01      	ldr	r5, [sp, #4]
 80166a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80166a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80166aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80166ae:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80166b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80166b6:	442c      	add	r4, r5
 80166b8:	8061      	strh	r1, [r4, #2]
 80166ba:	80a2      	strh	r2, [r4, #4]
 80166bc:	80e3      	strh	r3, [r4, #6]
 80166be:	e581      	b.n	80161c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80166c0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80166c4:	3e01      	subs	r6, #1
 80166c6:	445c      	add	r4, fp
 80166c8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80166cc:	f04f 37ff 	mov.w	r7, #4294967295
 80166d0:	2500      	movs	r5, #0
 80166d2:	9305      	str	r3, [sp, #20]
 80166d4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80166d8:	9302      	str	r3, [sp, #8]
 80166da:	1e72      	subs	r2, r6, #1
 80166dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80166e0:	9304      	str	r3, [sp, #16]
 80166e2:	4691      	mov	r9, r2
 80166e4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80166e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80166ec:	bf14      	ite	ne
 80166ee:	9905      	ldrne	r1, [sp, #20]
 80166f0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80166f4:	6818      	ldr	r0, [r3, #0]
 80166f6:	9207      	str	r2, [sp, #28]
 80166f8:	bf18      	it	ne
 80166fa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80166fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016702:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016706:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801670a:	9306      	str	r3, [sp, #24]
 801670c:	fb18 f801 	smulbb	r8, r8, r1
 8016710:	6859      	ldr	r1, [r3, #4]
 8016712:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016716:	4671      	mov	r1, lr
 8016718:	a80c      	add	r0, sp, #48	; 0x30
 801671a:	f7ff fafb 	bl	8015d14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801671e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016722:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016726:	9b04      	ldr	r3, [sp, #16]
 8016728:	9a02      	ldr	r2, [sp, #8]
 801672a:	fb10 f001 	smulbb	r0, r0, r1
 801672e:	fb02 8803 	mla	r8, r2, r3, r8
 8016732:	eba0 0108 	sub.w	r1, r0, r8
 8016736:	f04f 0c08 	mov.w	ip, #8
 801673a:	fb90 f0fc 	sdiv	r0, r0, ip
 801673e:	4288      	cmp	r0, r1
 8016740:	dc20      	bgt.n	8016784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016742:	4551      	cmp	r1, sl
 8016744:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016748:	da03      	bge.n	8016752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801674a:	b1d9      	cbz	r1, 8016784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801674c:	468a      	mov	sl, r1
 801674e:	464f      	mov	r7, r9
 8016750:	4635      	mov	r5, r6
 8016752:	f109 39ff 	add.w	r9, r9, #4294967295
 8016756:	f119 0f02 	cmn.w	r9, #2
 801675a:	d1c5      	bne.n	80166e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801675c:	4616      	mov	r6, r2
 801675e:	3201      	adds	r2, #1
 8016760:	f1a4 0408 	sub.w	r4, r4, #8
 8016764:	d1b6      	bne.n	80166d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016766:	9b01      	ldr	r3, [sp, #4]
 8016768:	b2ac      	uxth	r4, r5
 801676a:	00ed      	lsls	r5, r5, #3
 801676c:	1958      	adds	r0, r3, r5
 801676e:	1c7b      	adds	r3, r7, #1
 8016770:	d10b      	bne.n	801678a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016772:	4601      	mov	r1, r0
 8016774:	9803      	ldr	r0, [sp, #12]
 8016776:	f7ff facd 	bl	8015d14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801677a:	4621      	mov	r1, r4
 801677c:	9801      	ldr	r0, [sp, #4]
 801677e:	f7ff fc8d 	bl	801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016782:	e4b5      	b.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016784:	464f      	mov	r7, r9
 8016786:	4635      	mov	r5, r6
 8016788:	e7ed      	b.n	8016766 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801678a:	9b01      	ldr	r3, [sp, #4]
 801678c:	00ff      	lsls	r7, r7, #3
 801678e:	19d9      	adds	r1, r3, r7
 8016790:	f7ff fac0 	bl	8015d14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016794:	9b03      	ldr	r3, [sp, #12]
 8016796:	cb03      	ldmia	r3!, {r0, r1}
 8016798:	445f      	add	r7, fp
 801679a:	445d      	add	r5, fp
 801679c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80167a0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80167a4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80167a8:	9b03      	ldr	r3, [sp, #12]
 80167aa:	6869      	ldr	r1, [r5, #4]
 80167ac:	c303      	stmia	r3!, {r0, r1}
 80167ae:	e7e4      	b.n	801677a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080167b0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80167b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167b4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80167b8:	b09b      	sub	sp, #108	; 0x6c
 80167ba:	4604      	mov	r4, r0
 80167bc:	4630      	mov	r0, r6
 80167be:	f7fa fa20 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167c2:	4605      	mov	r5, r0
 80167c4:	b948      	cbnz	r0, 80167da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80167c6:	6823      	ldr	r3, [r4, #0]
 80167c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80167cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80167ce:	4620      	mov	r0, r4
 80167d0:	4798      	blx	r3
 80167d2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80167d6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80167da:	4bc6      	ldr	r3, [pc, #792]	; (8016af4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80167dc:	681b      	ldr	r3, [r3, #0]
 80167de:	2b00      	cmp	r3, #0
 80167e0:	d03f      	beq.n	8016862 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80167e2:	4dc5      	ldr	r5, [pc, #788]	; (8016af8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80167e4:	4628      	mov	r0, r5
 80167e6:	f7fa fa0c 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167ea:	4606      	mov	r6, r0
 80167ec:	2800      	cmp	r0, #0
 80167ee:	d138      	bne.n	8016862 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80167f0:	4628      	mov	r0, r5
 80167f2:	f7ff f907 	bl	8015a04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80167f6:	6823      	ldr	r3, [r4, #0]
 80167f8:	6829      	ldr	r1, [r5, #0]
 80167fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80167fc:	686a      	ldr	r2, [r5, #4]
 80167fe:	4620      	mov	r0, r4
 8016800:	4798      	blx	r3
 8016802:	802e      	strh	r6, [r5, #0]
 8016804:	806e      	strh	r6, [r5, #2]
 8016806:	80ae      	strh	r6, [r5, #4]
 8016808:	80ee      	strh	r6, [r5, #6]
 801680a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801680e:	4dbb      	ldr	r5, [pc, #748]	; (8016afc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016810:	4640      	mov	r0, r8
 8016812:	f7ff fbeb 	bl	8015fec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016816:	882e      	ldrh	r6, [r5, #0]
 8016818:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801681c:	4633      	mov	r3, r6
 801681e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016822:	42bb      	cmp	r3, r7
 8016824:	d224      	bcs.n	8016870 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016826:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801682a:	2907      	cmp	r1, #7
 801682c:	d816      	bhi.n	801685c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801682e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016832:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016836:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801683a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801683e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016842:	1c4a      	adds	r2, r1, #1
 8016844:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016848:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801684c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016850:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016854:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016858:	f8a2 c006 	strh.w	ip, [r2, #6]
 801685c:	3301      	adds	r3, #1
 801685e:	b29b      	uxth	r3, r3
 8016860:	e7df      	b.n	8016822 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016862:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016866:	2b00      	cmp	r3, #0
 8016868:	d1cf      	bne.n	801680a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801686a:	b01b      	add	sp, #108	; 0x6c
 801686c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016870:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016874:	42b3      	cmp	r3, r6
 8016876:	d90c      	bls.n	8016892 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016878:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801687c:	6822      	ldr	r2, [r4, #0]
 801687e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016882:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016884:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016888:	4620      	mov	r0, r4
 801688a:	3601      	adds	r6, #1
 801688c:	47b8      	blx	r7
 801688e:	b2b6      	uxth	r6, r6
 8016890:	e7ee      	b.n	8016870 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016892:	4a9b      	ldr	r2, [pc, #620]	; (8016b00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016894:	6813      	ldr	r3, [r2, #0]
 8016896:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801689a:	2b01      	cmp	r3, #1
 801689c:	4691      	mov	r9, r2
 801689e:	f040 80e2 	bne.w	8016a66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80168a2:	8829      	ldrh	r1, [r5, #0]
 80168a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80168a8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80168ac:	33ae      	adds	r3, #174	; 0xae
 80168ae:	2600      	movs	r6, #0
 80168b0:	428f      	cmp	r7, r1
 80168b2:	f103 0308 	add.w	r3, r3, #8
 80168b6:	dd0a      	ble.n	80168ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80168b8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80168bc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80168c0:	4402      	add	r2, r0
 80168c2:	b212      	sxth	r2, r2
 80168c4:	4296      	cmp	r6, r2
 80168c6:	bfb8      	it	lt
 80168c8:	4616      	movlt	r6, r2
 80168ca:	3101      	adds	r1, #1
 80168cc:	e7f0      	b.n	80168b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80168ce:	4b8d      	ldr	r3, [pc, #564]	; (8016b04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80168d0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016b00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80168d4:	881b      	ldrh	r3, [r3, #0]
 80168d6:	2b0f      	cmp	r3, #15
 80168d8:	bf88      	it	hi
 80168da:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80168de:	f04f 0300 	mov.w	r3, #0
 80168e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80168e6:	bf98      	it	ls
 80168e8:	f04f 0b01 	movls.w	fp, #1
 80168ec:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80168f0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80168f4:	4b82      	ldr	r3, [pc, #520]	; (8016b00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80168f6:	4438      	add	r0, r7
 80168f8:	b207      	sxth	r7, r0
 80168fa:	6818      	ldr	r0, [r3, #0]
 80168fc:	42b7      	cmp	r7, r6
 80168fe:	6803      	ldr	r3, [r0, #0]
 8016900:	f280 8083 	bge.w	8016a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016904:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016908:	4798      	blx	r3
 801690a:	eb07 030b 	add.w	r3, r7, fp
 801690e:	4298      	cmp	r0, r3
 8016910:	da07      	bge.n	8016922 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016912:	42b0      	cmp	r0, r6
 8016914:	da05      	bge.n	8016922 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016916:	4287      	cmp	r7, r0
 8016918:	dd6c      	ble.n	80169f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801691a:	2f00      	cmp	r7, #0
 801691c:	dd6a      	ble.n	80169f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801691e:	4630      	mov	r0, r6
 8016920:	e004      	b.n	801692c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016922:	4287      	cmp	r7, r0
 8016924:	dcfb      	bgt.n	801691e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016926:	42b0      	cmp	r0, r6
 8016928:	bfa8      	it	ge
 801692a:	4630      	movge	r0, r6
 801692c:	4b76      	ldr	r3, [pc, #472]	; (8016b08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801692e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016932:	1bc0      	subs	r0, r0, r7
 8016934:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016938:	882f      	ldrh	r7, [r5, #0]
 801693a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801693e:	2200      	movs	r2, #0
 8016940:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016944:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016948:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801694c:	42bb      	cmp	r3, r7
 801694e:	d9cd      	bls.n	80168ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016950:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016954:	ab07      	add	r3, sp, #28
 8016956:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801695a:	6851      	ldr	r1, [r2, #4]
 801695c:	c303      	stmia	r3!, {r0, r1}
 801695e:	a905      	add	r1, sp, #20
 8016960:	a807      	add	r0, sp, #28
 8016962:	f7ff f93e 	bl	8015be2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016966:	2800      	cmp	r0, #0
 8016968:	d04c      	beq.n	8016a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801696a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801696e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016972:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016976:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801697a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801697e:	9302      	str	r3, [sp, #8]
 8016980:	4686      	mov	lr, r0
 8016982:	4290      	cmp	r0, r2
 8016984:	4450      	add	r0, sl
 8016986:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801698a:	bfb8      	it	lt
 801698c:	4696      	movlt	lr, r2
 801698e:	4452      	add	r2, sl
 8016990:	4299      	cmp	r1, r3
 8016992:	b280      	uxth	r0, r0
 8016994:	b292      	uxth	r2, r2
 8016996:	468c      	mov	ip, r1
 8016998:	fa0f fa82 	sxth.w	sl, r2
 801699c:	bfb8      	it	lt
 801699e:	469c      	movlt	ip, r3
 80169a0:	b203      	sxth	r3, r0
 80169a2:	4553      	cmp	r3, sl
 80169a4:	bfb8      	it	lt
 80169a6:	4602      	movlt	r2, r0
 80169a8:	eba2 020e 	sub.w	r2, r2, lr
 80169ac:	f8ad 2020 	strh.w	r2, [sp, #32]
 80169b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80169b4:	9b02      	ldr	r3, [sp, #8]
 80169b6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80169ba:	4411      	add	r1, r2
 80169bc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80169c0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80169c4:	4413      	add	r3, r2
 80169c6:	b289      	uxth	r1, r1
 80169c8:	b29b      	uxth	r3, r3
 80169ca:	b208      	sxth	r0, r1
 80169cc:	b21a      	sxth	r2, r3
 80169ce:	4290      	cmp	r0, r2
 80169d0:	bfb8      	it	lt
 80169d2:	460b      	movlt	r3, r1
 80169d4:	eba3 030c 	sub.w	r3, r3, ip
 80169d8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80169dc:	a807      	add	r0, sp, #28
 80169de:	f7fa f910 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80169e2:	b920      	cbnz	r0, 80169ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80169e4:	6823      	ldr	r3, [r4, #0]
 80169e6:	a907      	add	r1, sp, #28
 80169e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80169ea:	4620      	mov	r0, r4
 80169ec:	4798      	blx	r3
 80169ee:	3701      	adds	r7, #1
 80169f0:	b2bf      	uxth	r7, r7
 80169f2:	e7a9      	b.n	8016948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80169f4:	f8d9 0000 	ldr.w	r0, [r9]
 80169f8:	6803      	ldr	r3, [r0, #0]
 80169fa:	2101      	movs	r1, #1
 80169fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016a00:	4798      	blx	r3
 8016a02:	e773      	b.n	80168ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016a04:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016a08:	e7e8      	b.n	80169dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8016a0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016a0c:	4798      	blx	r3
 8016a0e:	4b3f      	ldr	r3, [pc, #252]	; (8016b0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016a10:	781b      	ldrb	r3, [r3, #0]
 8016a12:	2b00      	cmp	r3, #0
 8016a14:	f43f af29 	beq.w	801686a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016a18:	2300      	movs	r3, #0
 8016a1a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8016a1e:	882b      	ldrh	r3, [r5, #0]
 8016a20:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016a24:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016a28:	42ab      	cmp	r3, r5
 8016a2a:	f4bf af1e 	bcs.w	801686a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016a2e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016a32:	2907      	cmp	r1, #7
 8016a34:	d814      	bhi.n	8016a60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016a36:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8016a3a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8016a3e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016a42:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016a46:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8016a4a:	1c4a      	adds	r2, r1, #1
 8016a4c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016a50:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016a54:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016a58:	f8a2 c002 	strh.w	ip, [r2, #2]
 8016a5c:	8097      	strh	r7, [r2, #4]
 8016a5e:	80d6      	strh	r6, [r2, #6]
 8016a60:	3301      	adds	r3, #1
 8016a62:	b29b      	uxth	r3, r3
 8016a64:	e7e0      	b.n	8016a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016a66:	2b02      	cmp	r3, #2
 8016a68:	f040 8133 	bne.w	8016cd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8016a6c:	4b28      	ldr	r3, [pc, #160]	; (8016b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8016a6e:	781b      	ldrb	r3, [r3, #0]
 8016a70:	2b01      	cmp	r3, #1
 8016a72:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016a76:	f000 8098 	beq.w	8016baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016a7a:	882a      	ldrh	r2, [r5, #0]
 8016a7c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016a80:	3201      	adds	r2, #1
 8016a82:	b292      	uxth	r2, r2
 8016a84:	2900      	cmp	r1, #0
 8016a86:	d0c2      	beq.n	8016a0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016a88:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8016a8c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016a90:	441e      	add	r6, r3
 8016a92:	b236      	sxth	r6, r6
 8016a94:	4694      	mov	ip, r2
 8016a96:	f04f 0900 	mov.w	r9, #0
 8016a9a:	fa1f f38c 	uxth.w	r3, ip
 8016a9e:	4299      	cmp	r1, r3
 8016aa0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016aa4:	f240 80bf 	bls.w	8016c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016aa8:	4427      	add	r7, r4
 8016aaa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8016aae:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016ab2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016ab6:	4283      	cmp	r3, r0
 8016ab8:	f340 80a1 	ble.w	8016bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8016abc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016ac0:	4406      	add	r6, r0
 8016ac2:	b236      	sxth	r6, r6
 8016ac4:	429e      	cmp	r6, r3
 8016ac6:	bfa8      	it	ge
 8016ac8:	461e      	movge	r6, r3
 8016aca:	46e1      	mov	r9, ip
 8016acc:	f10c 0c01 	add.w	ip, ip, #1
 8016ad0:	e7e3      	b.n	8016a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016ad2:	d10a      	bne.n	8016aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016ad4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016ad8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8016adc:	4562      	cmp	r2, ip
 8016ade:	bfb8      	it	lt
 8016ae0:	4662      	movlt	r2, ip
 8016ae2:	4288      	cmp	r0, r1
 8016ae4:	bfb8      	it	lt
 8016ae6:	461f      	movlt	r7, r3
 8016ae8:	e087      	b.n	8016bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016aea:	428a      	cmp	r2, r1
 8016aec:	bfb8      	it	lt
 8016aee:	460a      	movlt	r2, r1
 8016af0:	e083      	b.n	8016bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016af2:	bf00      	nop
 8016af4:	20012de4 	.word	0x20012de4
 8016af8:	20012df0 	.word	0x20012df0
 8016afc:	20000088 	.word	0x20000088
 8016b00:	20012da4 	.word	0x20012da4
 8016b04:	20012d9a 	.word	0x20012d9a
 8016b08:	20012d98 	.word	0x20012d98
 8016b0c:	20012da2 	.word	0x20012da2
 8016b10:	20012d9c 	.word	0x20012d9c
 8016b14:	19a1      	adds	r1, r4, r6
 8016b16:	ab07      	add	r3, sp, #28
 8016b18:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016b1c:	6849      	ldr	r1, [r1, #4]
 8016b1e:	c303      	stmia	r3!, {r0, r1}
 8016b20:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016b24:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016b28:	2b13      	cmp	r3, #19
 8016b2a:	bfd8      	it	le
 8016b2c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016b30:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016b34:	440b      	add	r3, r1
 8016b36:	1a9b      	subs	r3, r3, r2
 8016b38:	a807      	add	r0, sp, #28
 8016b3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016b3e:	f7fe ff7b 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016b42:	a807      	add	r0, sp, #28
 8016b44:	f7fa f85d 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b48:	bb78      	cbnz	r0, 8016baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016b4a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016b4e:	f8d9 0000 	ldr.w	r0, [r9]
 8016b52:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016b56:	f8d0 e000 	ldr.w	lr, [r0]
 8016b5a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016b5e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016b62:	f1bc 0f14 	cmp.w	ip, #20
 8016b66:	bfa8      	it	ge
 8016b68:	f04f 0c14 	movge.w	ip, #20
 8016b6c:	fa1f fc8c 	uxth.w	ip, ip
 8016b70:	f8cd c000 	str.w	ip, [sp]
 8016b74:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016b78:	47d8      	blx	fp
 8016b7a:	4683      	mov	fp, r0
 8016b7c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016b80:	a807      	add	r0, sp, #28
 8016b82:	f7fe ff3f 	bl	8015a04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016b86:	6823      	ldr	r3, [r4, #0]
 8016b88:	4426      	add	r6, r4
 8016b8a:	4620      	mov	r0, r4
 8016b8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016b8e:	a907      	add	r1, sp, #28
 8016b90:	4798      	blx	r3
 8016b92:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016b96:	eba0 000b 	sub.w	r0, r0, fp
 8016b9a:	b200      	sxth	r0, r0
 8016b9c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016ba0:	b918      	cbnz	r0, 8016baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016ba2:	b2b9      	uxth	r1, r7
 8016ba4:	4650      	mov	r0, sl
 8016ba6:	f7ff fa79 	bl	801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016baa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016bae:	f1bb 0f00 	cmp.w	fp, #0
 8016bb2:	f43f af2c 	beq.w	8016a0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016bb6:	882b      	ldrh	r3, [r5, #0]
 8016bb8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016bbc:	3301      	adds	r3, #1
 8016bbe:	b29b      	uxth	r3, r3
 8016bc0:	2700      	movs	r7, #0
 8016bc2:	b299      	uxth	r1, r3
 8016bc4:	458b      	cmp	fp, r1
 8016bc6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016bca:	d9a3      	bls.n	8016b14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016bcc:	4426      	add	r6, r4
 8016bce:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016bd2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016bd6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016bda:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016bde:	4408      	add	r0, r1
 8016be0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016be4:	4461      	add	r1, ip
 8016be6:	b200      	sxth	r0, r0
 8016be8:	b209      	sxth	r1, r1
 8016bea:	4288      	cmp	r0, r1
 8016bec:	f6bf af71 	bge.w	8016ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016bf0:	4584      	cmp	ip, r0
 8016bf2:	4662      	mov	r2, ip
 8016bf4:	461f      	mov	r7, r3
 8016bf6:	bfb8      	it	lt
 8016bf8:	4602      	movlt	r2, r0
 8016bfa:	3301      	adds	r3, #1
 8016bfc:	e7e1      	b.n	8016bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016bfe:	d10e      	bne.n	8016c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016c00:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016c04:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016c08:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016c0c:	4473      	add	r3, lr
 8016c0e:	b21b      	sxth	r3, r3
 8016c10:	429e      	cmp	r6, r3
 8016c12:	bfa8      	it	ge
 8016c14:	461e      	movge	r6, r3
 8016c16:	4287      	cmp	r7, r0
 8016c18:	bfb8      	it	lt
 8016c1a:	46e1      	movlt	r9, ip
 8016c1c:	e756      	b.n	8016acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016c1e:	4286      	cmp	r6, r0
 8016c20:	bfa8      	it	ge
 8016c22:	4606      	movge	r6, r0
 8016c24:	e752      	b.n	8016acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016c26:	eb0a 0007 	add.w	r0, sl, r7
 8016c2a:	4427      	add	r7, r4
 8016c2c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016c30:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016c34:	f1bb 0f13 	cmp.w	fp, #19
 8016c38:	bfde      	ittt	le
 8016c3a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016c3e:	445e      	addle	r6, fp
 8016c40:	b236      	sxthle	r6, r6
 8016c42:	f7f9 ffde 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c46:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016c4a:	2800      	cmp	r0, #0
 8016c4c:	f47f af1a 	bne.w	8016a84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016c50:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016c54:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016c58:	482a      	ldr	r0, [pc, #168]	; (8016d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016c5a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016c5e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016c62:	6800      	ldr	r0, [r0, #0]
 8016c64:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016c68:	1ab6      	subs	r6, r6, r2
 8016c6a:	2e14      	cmp	r6, #20
 8016c6c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016c70:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016c74:	bfa8      	it	ge
 8016c76:	2614      	movge	r6, #20
 8016c78:	f8d0 c000 	ldr.w	ip, [r0]
 8016c7c:	b2b6      	uxth	r6, r6
 8016c7e:	fa1f fb8b 	uxth.w	fp, fp
 8016c82:	455e      	cmp	r6, fp
 8016c84:	bf94      	ite	ls
 8016c86:	9600      	strls	r6, [sp, #0]
 8016c88:	f8cd b000 	strhi.w	fp, [sp]
 8016c8c:	b292      	uxth	r2, r2
 8016c8e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016c92:	b29b      	uxth	r3, r3
 8016c94:	b289      	uxth	r1, r1
 8016c96:	47b0      	blx	r6
 8016c98:	6823      	ldr	r3, [r4, #0]
 8016c9a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016c9e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016ca0:	a907      	add	r1, sp, #28
 8016ca2:	4620      	mov	r0, r4
 8016ca4:	4798      	blx	r3
 8016ca6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016caa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016cae:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016cb2:	1a5b      	subs	r3, r3, r1
 8016cb4:	440a      	add	r2, r1
 8016cb6:	b21b      	sxth	r3, r3
 8016cb8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016cbc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016cc0:	2b00      	cmp	r3, #0
 8016cc2:	f47f aeda 	bne.w	8016a7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016cc6:	fa1f f189 	uxth.w	r1, r9
 8016cca:	4650      	mov	r0, sl
 8016ccc:	f7ff f9e6 	bl	801609c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016cd0:	e6d3      	b.n	8016a7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016cd2:	882e      	ldrh	r6, [r5, #0]
 8016cd4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016cd8:	42b3      	cmp	r3, r6
 8016cda:	f67f ae98 	bls.w	8016a0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016cde:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016ce2:	ab07      	add	r3, sp, #28
 8016ce4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016ce8:	6851      	ldr	r1, [r2, #4]
 8016cea:	c303      	stmia	r3!, {r0, r1}
 8016cec:	a807      	add	r0, sp, #28
 8016cee:	f7f9 ff88 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016cf2:	b920      	cbnz	r0, 8016cfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016cf4:	6823      	ldr	r3, [r4, #0]
 8016cf6:	a907      	add	r1, sp, #28
 8016cf8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016cfa:	4620      	mov	r0, r4
 8016cfc:	4798      	blx	r3
 8016cfe:	3601      	adds	r6, #1
 8016d00:	b2b6      	uxth	r6, r6
 8016d02:	e7e7      	b.n	8016cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016d04:	20012da4 	.word	0x20012da4

08016d08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016d08:	4b03      	ldr	r3, [pc, #12]	; (8016d18 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016d0a:	2200      	movs	r2, #0
 8016d0c:	801a      	strh	r2, [r3, #0]
 8016d0e:	805a      	strh	r2, [r3, #2]
 8016d10:	809a      	strh	r2, [r3, #4]
 8016d12:	80da      	strh	r2, [r3, #6]
 8016d14:	4770      	bx	lr
 8016d16:	bf00      	nop
 8016d18:	20012df0 	.word	0x20012df0

08016d1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d20:	4606      	mov	r6, r0
 8016d22:	b09d      	sub	sp, #116	; 0x74
 8016d24:	a803      	add	r0, sp, #12
 8016d26:	4614      	mov	r4, r2
 8016d28:	468a      	mov	sl, r1
 8016d2a:	461d      	mov	r5, r3
 8016d2c:	f000 feca 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8016d30:	6833      	ldr	r3, [r6, #0]
 8016d32:	4630      	mov	r0, r6
 8016d34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d36:	4798      	blx	r3
 8016d38:	6833      	ldr	r3, [r6, #0]
 8016d3a:	4607      	mov	r7, r0
 8016d3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d3e:	4630      	mov	r0, r6
 8016d40:	4798      	blx	r3
 8016d42:	462a      	mov	r2, r5
 8016d44:	9000      	str	r0, [sp, #0]
 8016d46:	4621      	mov	r1, r4
 8016d48:	463b      	mov	r3, r7
 8016d4a:	a803      	add	r0, sp, #12
 8016d4c:	f000 ff15 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d50:	2500      	movs	r5, #0
 8016d52:	462c      	mov	r4, r5
 8016d54:	46a9      	mov	r9, r5
 8016d56:	46a8      	mov	r8, r5
 8016d58:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016d5c:	2300      	movs	r3, #0
 8016d5e:	9302      	str	r3, [sp, #8]
 8016d60:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016d64:	429c      	cmp	r4, r3
 8016d66:	d002      	beq.n	8016d6e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016d68:	455c      	cmp	r4, fp
 8016d6a:	bf18      	it	ne
 8016d6c:	4625      	movne	r5, r4
 8016d6e:	ab02      	add	r3, sp, #8
 8016d70:	4632      	mov	r2, r6
 8016d72:	4651      	mov	r1, sl
 8016d74:	a803      	add	r0, sp, #12
 8016d76:	f001 fa03 	bl	8018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d7a:	4604      	mov	r4, r0
 8016d7c:	b108      	cbz	r0, 8016d82 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016d7e:	280a      	cmp	r0, #10
 8016d80:	d10a      	bne.n	8016d98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016d82:	45c1      	cmp	r9, r8
 8016d84:	bf38      	it	cc
 8016d86:	46c1      	movcc	r9, r8
 8016d88:	f04f 0800 	mov.w	r8, #0
 8016d8c:	2c00      	cmp	r4, #0
 8016d8e:	d1e5      	bne.n	8016d5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016d90:	4648      	mov	r0, r9
 8016d92:	b01d      	add	sp, #116	; 0x74
 8016d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d98:	9a02      	ldr	r2, [sp, #8]
 8016d9a:	2a00      	cmp	r2, #0
 8016d9c:	d0de      	beq.n	8016d5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016d9e:	7b57      	ldrb	r7, [r2, #13]
 8016da0:	6833      	ldr	r3, [r6, #0]
 8016da2:	8894      	ldrh	r4, [r2, #4]
 8016da4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016da6:	007f      	lsls	r7, r7, #1
 8016da8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016dac:	7a97      	ldrb	r7, [r2, #10]
 8016dae:	4629      	mov	r1, r5
 8016db0:	4307      	orrs	r7, r0
 8016db2:	4630      	mov	r0, r6
 8016db4:	4798      	blx	r3
 8016db6:	4438      	add	r0, r7
 8016db8:	4480      	add	r8, r0
 8016dba:	fa1f f888 	uxth.w	r8, r8
 8016dbe:	e7e5      	b.n	8016d8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016dc0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016dc0:	b508      	push	{r3, lr}
 8016dc2:	6803      	ldr	r3, [r0, #0]
 8016dc4:	68db      	ldr	r3, [r3, #12]
 8016dc6:	4798      	blx	r3
 8016dc8:	b128      	cbz	r0, 8016dd6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016dca:	7b43      	ldrb	r3, [r0, #13]
 8016dcc:	7a80      	ldrb	r0, [r0, #10]
 8016dce:	005b      	lsls	r3, r3, #1
 8016dd0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016dd4:	4318      	orrs	r0, r3
 8016dd6:	bd08      	pop	{r3, pc}

08016dd8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016dd8:	b40e      	push	{r1, r2, r3}
 8016dda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ddc:	b09e      	sub	sp, #120	; 0x78
 8016dde:	ab23      	add	r3, sp, #140	; 0x8c
 8016de0:	4605      	mov	r5, r0
 8016de2:	f853 4b04 	ldr.w	r4, [r3], #4
 8016de6:	9303      	str	r3, [sp, #12]
 8016de8:	a805      	add	r0, sp, #20
 8016dea:	f000 fe6b 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8016dee:	682b      	ldr	r3, [r5, #0]
 8016df0:	4628      	mov	r0, r5
 8016df2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016df4:	4798      	blx	r3
 8016df6:	682b      	ldr	r3, [r5, #0]
 8016df8:	4606      	mov	r6, r0
 8016dfa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016dfc:	4628      	mov	r0, r5
 8016dfe:	4798      	blx	r3
 8016e00:	4633      	mov	r3, r6
 8016e02:	ae1e      	add	r6, sp, #120	; 0x78
 8016e04:	4621      	mov	r1, r4
 8016e06:	9000      	str	r0, [sp, #0]
 8016e08:	9a03      	ldr	r2, [sp, #12]
 8016e0a:	2400      	movs	r4, #0
 8016e0c:	a805      	add	r0, sp, #20
 8016e0e:	f000 feb4 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016e12:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016e16:	462a      	mov	r2, r5
 8016e18:	4633      	mov	r3, r6
 8016e1a:	4621      	mov	r1, r4
 8016e1c:	a805      	add	r0, sp, #20
 8016e1e:	f001 f9af 	bl	8018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e22:	b1f0      	cbz	r0, 8016e62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016e24:	280a      	cmp	r0, #10
 8016e26:	d018      	beq.n	8016e5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016e28:	9f04      	ldr	r7, [sp, #16]
 8016e2a:	b1b7      	cbz	r7, 8016e5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016e2c:	7b78      	ldrb	r0, [r7, #13]
 8016e2e:	7a3b      	ldrb	r3, [r7, #8]
 8016e30:	88ea      	ldrh	r2, [r5, #6]
 8016e32:	00c1      	lsls	r1, r0, #3
 8016e34:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016e38:	4319      	orrs	r1, r3
 8016e3a:	0643      	lsls	r3, r0, #25
 8016e3c:	bf44      	itt	mi
 8016e3e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016e42:	b219      	sxthmi	r1, r3
 8016e44:	0100      	lsls	r0, r0, #4
 8016e46:	79fb      	ldrb	r3, [r7, #7]
 8016e48:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016e4c:	4303      	orrs	r3, r0
 8016e4e:	4413      	add	r3, r2
 8016e50:	1a5b      	subs	r3, r3, r1
 8016e52:	b21b      	sxth	r3, r3
 8016e54:	429c      	cmp	r4, r3
 8016e56:	bfb8      	it	lt
 8016e58:	461c      	movlt	r4, r3
 8016e5a:	4633      	mov	r3, r6
 8016e5c:	462a      	mov	r2, r5
 8016e5e:	2100      	movs	r1, #0
 8016e60:	e7dc      	b.n	8016e1c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016e62:	b2a0      	uxth	r0, r4
 8016e64:	b01e      	add	sp, #120	; 0x78
 8016e66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016e6a:	b003      	add	sp, #12
 8016e6c:	4770      	bx	lr

08016e6e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016e6e:	7a43      	ldrb	r3, [r0, #9]
 8016e70:	8880      	ldrh	r0, [r0, #4]
 8016e72:	4418      	add	r0, r3
 8016e74:	b280      	uxth	r0, r0
 8016e76:	4770      	bx	lr

08016e78 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016e78:	6803      	ldr	r3, [r0, #0]
 8016e7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016e7c:	4718      	bx	r3

08016e7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016e7e:	b40e      	push	{r1, r2, r3}
 8016e80:	b570      	push	{r4, r5, r6, lr}
 8016e82:	b09d      	sub	sp, #116	; 0x74
 8016e84:	ab21      	add	r3, sp, #132	; 0x84
 8016e86:	4604      	mov	r4, r0
 8016e88:	f853 5b04 	ldr.w	r5, [r3], #4
 8016e8c:	9302      	str	r3, [sp, #8]
 8016e8e:	a803      	add	r0, sp, #12
 8016e90:	f000 fe18 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8016e94:	6823      	ldr	r3, [r4, #0]
 8016e96:	4620      	mov	r0, r4
 8016e98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016e9a:	4798      	blx	r3
 8016e9c:	6823      	ldr	r3, [r4, #0]
 8016e9e:	4606      	mov	r6, r0
 8016ea0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016ea2:	4620      	mov	r0, r4
 8016ea4:	4798      	blx	r3
 8016ea6:	4633      	mov	r3, r6
 8016ea8:	9000      	str	r0, [sp, #0]
 8016eaa:	9a02      	ldr	r2, [sp, #8]
 8016eac:	4629      	mov	r1, r5
 8016eae:	a803      	add	r0, sp, #12
 8016eb0:	f000 fe63 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016eb4:	a803      	add	r0, sp, #12
 8016eb6:	f001 fa31 	bl	801831c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016eba:	2401      	movs	r4, #1
 8016ebc:	b2a3      	uxth	r3, r4
 8016ebe:	b140      	cbz	r0, 8016ed2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016ec0:	280a      	cmp	r0, #10
 8016ec2:	bf08      	it	eq
 8016ec4:	3301      	addeq	r3, #1
 8016ec6:	a803      	add	r0, sp, #12
 8016ec8:	bf08      	it	eq
 8016eca:	b21c      	sxtheq	r4, r3
 8016ecc:	f001 fa26 	bl	801831c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016ed0:	e7f4      	b.n	8016ebc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016ed2:	4618      	mov	r0, r3
 8016ed4:	b01d      	add	sp, #116	; 0x74
 8016ed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016eda:	b003      	add	sp, #12
 8016edc:	4770      	bx	lr

08016ede <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016ede:	b40e      	push	{r1, r2, r3}
 8016ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ee2:	b09e      	sub	sp, #120	; 0x78
 8016ee4:	ab23      	add	r3, sp, #140	; 0x8c
 8016ee6:	4604      	mov	r4, r0
 8016ee8:	f853 5b04 	ldr.w	r5, [r3], #4
 8016eec:	9303      	str	r3, [sp, #12]
 8016eee:	a805      	add	r0, sp, #20
 8016ef0:	f000 fde8 	bl	8017ac4 <_ZN8touchgfx12TextProviderC1Ev>
 8016ef4:	6823      	ldr	r3, [r4, #0]
 8016ef6:	4620      	mov	r0, r4
 8016ef8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016efa:	4798      	blx	r3
 8016efc:	6823      	ldr	r3, [r4, #0]
 8016efe:	4606      	mov	r6, r0
 8016f00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016f02:	4620      	mov	r0, r4
 8016f04:	4798      	blx	r3
 8016f06:	4633      	mov	r3, r6
 8016f08:	4629      	mov	r1, r5
 8016f0a:	9000      	str	r0, [sp, #0]
 8016f0c:	9a03      	ldr	r2, [sp, #12]
 8016f0e:	a805      	add	r0, sp, #20
 8016f10:	ad1e      	add	r5, sp, #120	; 0x78
 8016f12:	f000 fe32 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f16:	2100      	movs	r1, #0
 8016f18:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016f1c:	4622      	mov	r2, r4
 8016f1e:	462b      	mov	r3, r5
 8016f20:	a805      	add	r0, sp, #20
 8016f22:	f001 f92d 	bl	8018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016f26:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016f2a:	b1d8      	cbz	r0, 8016f64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016f2c:	280a      	cmp	r0, #10
 8016f2e:	d012      	beq.n	8016f56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016f30:	9804      	ldr	r0, [sp, #16]
 8016f32:	b180      	cbz	r0, 8016f56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016f34:	7b47      	ldrb	r7, [r0, #13]
 8016f36:	88e2      	ldrh	r2, [r4, #6]
 8016f38:	00fb      	lsls	r3, r7, #3
 8016f3a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016f3e:	7a03      	ldrb	r3, [r0, #8]
 8016f40:	430b      	orrs	r3, r1
 8016f42:	0679      	lsls	r1, r7, #25
 8016f44:	bf44      	itt	mi
 8016f46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f4a:	b21b      	sxthmi	r3, r3
 8016f4c:	1ad3      	subs	r3, r2, r3
 8016f4e:	b21b      	sxth	r3, r3
 8016f50:	429e      	cmp	r6, r3
 8016f52:	bfa8      	it	ge
 8016f54:	461e      	movge	r6, r3
 8016f56:	462b      	mov	r3, r5
 8016f58:	4622      	mov	r2, r4
 8016f5a:	2100      	movs	r1, #0
 8016f5c:	a805      	add	r0, sp, #20
 8016f5e:	f001 f90f 	bl	8018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016f62:	e7e2      	b.n	8016f2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016f64:	4630      	mov	r0, r6
 8016f66:	b01e      	add	sp, #120	; 0x78
 8016f68:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016f6c:	b003      	add	sp, #12
 8016f6e:	4770      	bx	lr

08016f70 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016f70:	b513      	push	{r0, r1, r4, lr}
 8016f72:	6803      	ldr	r3, [r0, #0]
 8016f74:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016f78:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016f7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016f80:	2400      	movs	r4, #0
 8016f82:	9400      	str	r4, [sp, #0]
 8016f84:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016f88:	691b      	ldr	r3, [r3, #16]
 8016f8a:	4669      	mov	r1, sp
 8016f8c:	4798      	blx	r3
 8016f8e:	b002      	add	sp, #8
 8016f90:	bd10      	pop	{r4, pc}

08016f92 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016f92:	b538      	push	{r3, r4, r5, lr}
 8016f94:	680b      	ldr	r3, [r1, #0]
 8016f96:	460c      	mov	r4, r1
 8016f98:	68db      	ldr	r3, [r3, #12]
 8016f9a:	4605      	mov	r5, r0
 8016f9c:	4798      	blx	r3
 8016f9e:	6823      	ldr	r3, [r4, #0]
 8016fa0:	4620      	mov	r0, r4
 8016fa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fa4:	4629      	mov	r1, r5
 8016fa6:	4798      	blx	r3
 8016fa8:	4628      	mov	r0, r5
 8016faa:	bd38      	pop	{r3, r4, r5, pc}

08016fac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016fac:	b410      	push	{r4}
 8016fae:	880a      	ldrh	r2, [r1, #0]
 8016fb0:	8884      	ldrh	r4, [r0, #4]
 8016fb2:	4422      	add	r2, r4
 8016fb4:	800a      	strh	r2, [r1, #0]
 8016fb6:	88c4      	ldrh	r4, [r0, #6]
 8016fb8:	884a      	ldrh	r2, [r1, #2]
 8016fba:	4422      	add	r2, r4
 8016fbc:	804a      	strh	r2, [r1, #2]
 8016fbe:	6940      	ldr	r0, [r0, #20]
 8016fc0:	b120      	cbz	r0, 8016fcc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016fc2:	6803      	ldr	r3, [r0, #0]
 8016fc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016fc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fca:	4718      	bx	r3
 8016fcc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016fd0:	4770      	bx	lr

08016fd2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016fd2:	b570      	push	{r4, r5, r6, lr}
 8016fd4:	8882      	ldrh	r2, [r0, #4]
 8016fd6:	880b      	ldrh	r3, [r1, #0]
 8016fd8:	4413      	add	r3, r2
 8016fda:	800b      	strh	r3, [r1, #0]
 8016fdc:	88c2      	ldrh	r2, [r0, #6]
 8016fde:	884b      	ldrh	r3, [r1, #2]
 8016fe0:	460c      	mov	r4, r1
 8016fe2:	4413      	add	r3, r2
 8016fe4:	804b      	strh	r3, [r1, #2]
 8016fe6:	4605      	mov	r5, r0
 8016fe8:	1d01      	adds	r1, r0, #4
 8016fea:	4620      	mov	r0, r4
 8016fec:	f7f9 fdc6 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8016ff0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016ff4:	2b00      	cmp	r3, #0
 8016ff6:	dd0b      	ble.n	8017010 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ff8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016ffc:	2b00      	cmp	r3, #0
 8016ffe:	dd07      	ble.n	8017010 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017000:	6968      	ldr	r0, [r5, #20]
 8017002:	b128      	cbz	r0, 8017010 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017004:	6803      	ldr	r3, [r0, #0]
 8017006:	4621      	mov	r1, r4
 8017008:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801700a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801700e:	4718      	bx	r3
 8017010:	bd70      	pop	{r4, r5, r6, pc}
	...

08017014 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017014:	b570      	push	{r4, r5, r6, lr}
 8017016:	8882      	ldrh	r2, [r0, #4]
 8017018:	880b      	ldrh	r3, [r1, #0]
 801701a:	4413      	add	r3, r2
 801701c:	800b      	strh	r3, [r1, #0]
 801701e:	88c2      	ldrh	r2, [r0, #6]
 8017020:	884b      	ldrh	r3, [r1, #2]
 8017022:	460c      	mov	r4, r1
 8017024:	4413      	add	r3, r2
 8017026:	804b      	strh	r3, [r1, #2]
 8017028:	4605      	mov	r5, r0
 801702a:	1d01      	adds	r1, r0, #4
 801702c:	4620      	mov	r0, r4
 801702e:	f7f9 fda5 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8017032:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017036:	2b00      	cmp	r3, #0
 8017038:	dd19      	ble.n	801706e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801703a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801703e:	2b00      	cmp	r3, #0
 8017040:	dd15      	ble.n	801706e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017042:	6968      	ldr	r0, [r5, #20]
 8017044:	b128      	cbz	r0, 8017052 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017046:	6803      	ldr	r3, [r0, #0]
 8017048:	4621      	mov	r1, r4
 801704a:	691b      	ldr	r3, [r3, #16]
 801704c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017050:	4718      	bx	r3
 8017052:	4b07      	ldr	r3, [pc, #28]	; (8017070 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017054:	681b      	ldr	r3, [r3, #0]
 8017056:	3304      	adds	r3, #4
 8017058:	429d      	cmp	r5, r3
 801705a:	d108      	bne.n	801706e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801705c:	f7fe fea0 	bl	8015da0 <_ZN8touchgfx11Application11getInstanceEv>
 8017060:	6803      	ldr	r3, [r0, #0]
 8017062:	6821      	ldr	r1, [r4, #0]
 8017064:	6862      	ldr	r2, [r4, #4]
 8017066:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801706c:	4718      	bx	r3
 801706e:	bd70      	pop	{r4, r5, r6, pc}
 8017070:	20012de8 	.word	0x20012de8

08017074 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017074:	b570      	push	{r4, r5, r6, lr}
 8017076:	4604      	mov	r4, r0
 8017078:	4616      	mov	r6, r2
 801707a:	460d      	mov	r5, r1
 801707c:	b901      	cbnz	r1, 8017080 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801707e:	b192      	cbz	r2, 80170a6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017080:	6823      	ldr	r3, [r4, #0]
 8017082:	4620      	mov	r0, r4
 8017084:	699b      	ldr	r3, [r3, #24]
 8017086:	4798      	blx	r3
 8017088:	88e2      	ldrh	r2, [r4, #6]
 801708a:	88a1      	ldrh	r1, [r4, #4]
 801708c:	4432      	add	r2, r6
 801708e:	4429      	add	r1, r5
 8017090:	4620      	mov	r0, r4
 8017092:	b212      	sxth	r2, r2
 8017094:	b209      	sxth	r1, r1
 8017096:	f7ec f8aa 	bl	80031ee <_ZN8touchgfx8Drawable5setXYEss>
 801709a:	6823      	ldr	r3, [r4, #0]
 801709c:	4620      	mov	r0, r4
 801709e:	699b      	ldr	r3, [r3, #24]
 80170a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80170a4:	4718      	bx	r3
 80170a6:	bd70      	pop	{r4, r5, r6, pc}

080170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80170a8:	b510      	push	{r4, lr}
 80170aa:	4604      	mov	r4, r0
 80170ac:	4608      	mov	r0, r1
 80170ae:	2300      	movs	r3, #0
 80170b0:	8023      	strh	r3, [r4, #0]
 80170b2:	8063      	strh	r3, [r4, #2]
 80170b4:	6803      	ldr	r3, [r0, #0]
 80170b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80170ba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80170be:	80a1      	strh	r1, [r4, #4]
 80170c0:	80e2      	strh	r2, [r4, #6]
 80170c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170c4:	4621      	mov	r1, r4
 80170c6:	4798      	blx	r3
 80170c8:	4620      	mov	r0, r4
 80170ca:	bd10      	pop	{r4, pc}

080170cc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80170cc:	b530      	push	{r4, r5, lr}
 80170ce:	8083      	strh	r3, [r0, #4]
 80170d0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80170d4:	80c3      	strh	r3, [r0, #6]
 80170d6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80170da:	7203      	strb	r3, [r0, #8]
 80170dc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80170e0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80170e4:	7243      	strb	r3, [r0, #9]
 80170e6:	7a83      	ldrb	r3, [r0, #10]
 80170e8:	6141      	str	r1, [r0, #20]
 80170ea:	f365 0306 	bfi	r3, r5, #0, #7
 80170ee:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80170f2:	8302      	strh	r2, [r0, #24]
 80170f4:	f365 13c7 	bfi	r3, r5, #7, #1
 80170f8:	7283      	strb	r3, [r0, #10]
 80170fa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80170fe:	72c3      	strb	r3, [r0, #11]
 8017100:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017104:	7303      	strb	r3, [r0, #12]
 8017106:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801710a:	81c3      	strh	r3, [r0, #14]
 801710c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017110:	8203      	strh	r3, [r0, #16]
 8017112:	4b01      	ldr	r3, [pc, #4]	; (8017118 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017114:	6003      	str	r3, [r0, #0]
 8017116:	bd30      	pop	{r4, r5, pc}
 8017118:	0802f58c 	.word	0x0802f58c

0801711c <_ZNK8touchgfx9ConstFont4findEt>:
 801711c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801711e:	6944      	ldr	r4, [r0, #20]
 8017120:	b3bc      	cbz	r4, 8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017122:	88a3      	ldrh	r3, [r4, #4]
 8017124:	8b02      	ldrh	r2, [r0, #24]
 8017126:	1acb      	subs	r3, r1, r3
 8017128:	f102 32ff 	add.w	r2, r2, #4294967295
 801712c:	d431      	bmi.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801712e:	4293      	cmp	r3, r2
 8017130:	dd0c      	ble.n	801714c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017132:	230e      	movs	r3, #14
 8017134:	fb03 4302 	mla	r3, r3, r2, r4
 8017138:	889b      	ldrh	r3, [r3, #4]
 801713a:	1a5b      	subs	r3, r3, r1
 801713c:	1ad3      	subs	r3, r2, r3
 801713e:	429a      	cmp	r2, r3
 8017140:	db27      	blt.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017142:	2b00      	cmp	r3, #0
 8017144:	bfbc      	itt	lt
 8017146:	2302      	movlt	r3, #2
 8017148:	fb92 f3f3 	sdivlt	r3, r2, r3
 801714c:	2500      	movs	r5, #0
 801714e:	260e      	movs	r6, #14
 8017150:	4295      	cmp	r5, r2
 8017152:	dc1e      	bgt.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017154:	fb06 4003 	mla	r0, r6, r3, r4
 8017158:	8887      	ldrh	r7, [r0, #4]
 801715a:	42b9      	cmp	r1, r7
 801715c:	d01a      	beq.n	8017194 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801715e:	d20d      	bcs.n	801717c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017160:	1e5a      	subs	r2, r3, #1
 8017162:	4295      	cmp	r5, r2
 8017164:	dc15      	bgt.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017166:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801716a:	1a5b      	subs	r3, r3, r1
 801716c:	1ad3      	subs	r3, r2, r3
 801716e:	429a      	cmp	r2, r3
 8017170:	db0f      	blt.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017172:	429d      	cmp	r5, r3
 8017174:	ddec      	ble.n	8017150 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017176:	1953      	adds	r3, r2, r5
 8017178:	105b      	asrs	r3, r3, #1
 801717a:	e7e9      	b.n	8017150 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801717c:	1c5d      	adds	r5, r3, #1
 801717e:	42aa      	cmp	r2, r5
 8017180:	db07      	blt.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017182:	8a43      	ldrh	r3, [r0, #18]
 8017184:	1acb      	subs	r3, r1, r3
 8017186:	442b      	add	r3, r5
 8017188:	429d      	cmp	r5, r3
 801718a:	dc02      	bgt.n	8017192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801718c:	429a      	cmp	r2, r3
 801718e:	dadf      	bge.n	8017150 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017190:	e7f1      	b.n	8017176 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017192:	2000      	movs	r0, #0
 8017194:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017196 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017196:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017198:	4604      	mov	r4, r0
 801719a:	4617      	mov	r7, r2
 801719c:	461e      	mov	r6, r3
 801719e:	b911      	cbnz	r1, 80171a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80171a0:	2500      	movs	r5, #0
 80171a2:	4628      	mov	r0, r5
 80171a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80171a6:	290a      	cmp	r1, #10
 80171a8:	d0fa      	beq.n	80171a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80171aa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80171ae:	4291      	cmp	r1, r2
 80171b0:	d0f6      	beq.n	80171a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80171b2:	f242 020b 	movw	r2, #8203	; 0x200b
 80171b6:	4291      	cmp	r1, r2
 80171b8:	d0f2      	beq.n	80171a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80171ba:	f7ff ffaf 	bl	801711c <_ZNK8touchgfx9ConstFont4findEt>
 80171be:	4605      	mov	r5, r0
 80171c0:	b950      	cbnz	r0, 80171d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80171c2:	6823      	ldr	r3, [r4, #0]
 80171c4:	4620      	mov	r0, r4
 80171c6:	691b      	ldr	r3, [r3, #16]
 80171c8:	4798      	blx	r3
 80171ca:	4601      	mov	r1, r0
 80171cc:	4620      	mov	r0, r4
 80171ce:	f7ff ffa5 	bl	801711c <_ZNK8touchgfx9ConstFont4findEt>
 80171d2:	4605      	mov	r5, r0
 80171d4:	2800      	cmp	r0, #0
 80171d6:	d0e3      	beq.n	80171a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80171d8:	6823      	ldr	r3, [r4, #0]
 80171da:	4629      	mov	r1, r5
 80171dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80171de:	4620      	mov	r0, r4
 80171e0:	4798      	blx	r3
 80171e2:	6038      	str	r0, [r7, #0]
 80171e4:	6823      	ldr	r3, [r4, #0]
 80171e6:	4620      	mov	r0, r4
 80171e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80171ea:	4798      	blx	r3
 80171ec:	7030      	strb	r0, [r6, #0]
 80171ee:	e7d8      	b.n	80171a2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080171f0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80171f0:	b538      	push	{r3, r4, r5, lr}
 80171f2:	4605      	mov	r5, r0
 80171f4:	f002 fb56 	bl	80198a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80171f8:	4604      	mov	r4, r0
 80171fa:	4628      	mov	r0, r5
 80171fc:	f002 fa96 	bl	801972c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017200:	2800      	cmp	r0, #0
 8017202:	bf14      	ite	ne
 8017204:	2002      	movne	r0, #2
 8017206:	2000      	moveq	r0, #0
 8017208:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801720c:	b280      	uxth	r0, r0
 801720e:	bd38      	pop	{r3, r4, r5, pc}

08017210 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017210:	b538      	push	{r3, r4, r5, lr}
 8017212:	4605      	mov	r5, r0
 8017214:	f002 fb46 	bl	80198a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017218:	4604      	mov	r4, r0
 801721a:	4628      	mov	r0, r5
 801721c:	f002 fa86 	bl	801972c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017220:	2800      	cmp	r0, #0
 8017222:	bf14      	ite	ne
 8017224:	2002      	movne	r0, #2
 8017226:	2000      	moveq	r0, #0
 8017228:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801722c:	f040 0001 	orr.w	r0, r0, #1
 8017230:	b280      	uxth	r0, r0
 8017232:	bd38      	pop	{r3, r4, r5, pc}

08017234 <_ZN8touchgfx4clzuEm>:
 8017234:	4603      	mov	r3, r0
 8017236:	b1c8      	cbz	r0, 801726c <_ZN8touchgfx4clzuEm+0x38>
 8017238:	0c02      	lsrs	r2, r0, #16
 801723a:	0412      	lsls	r2, r2, #16
 801723c:	b9a2      	cbnz	r2, 8017268 <_ZN8touchgfx4clzuEm+0x34>
 801723e:	0403      	lsls	r3, r0, #16
 8017240:	2010      	movs	r0, #16
 8017242:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017246:	bf04      	itt	eq
 8017248:	021b      	lsleq	r3, r3, #8
 801724a:	3008      	addeq	r0, #8
 801724c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017250:	bf04      	itt	eq
 8017252:	011b      	lsleq	r3, r3, #4
 8017254:	3004      	addeq	r0, #4
 8017256:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801725a:	bf04      	itt	eq
 801725c:	009b      	lsleq	r3, r3, #2
 801725e:	3002      	addeq	r0, #2
 8017260:	2b00      	cmp	r3, #0
 8017262:	db04      	blt.n	801726e <_ZN8touchgfx4clzuEm+0x3a>
 8017264:	3001      	adds	r0, #1
 8017266:	4770      	bx	lr
 8017268:	2000      	movs	r0, #0
 801726a:	e7ea      	b.n	8017242 <_ZN8touchgfx4clzuEm+0xe>
 801726c:	2020      	movs	r0, #32
 801726e:	4770      	bx	lr

08017270 <_ZN8touchgfx7muldivuEmmmRm>:
 8017270:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017274:	460f      	mov	r7, r1
 8017276:	4615      	mov	r5, r2
 8017278:	461e      	mov	r6, r3
 801727a:	4601      	mov	r1, r0
 801727c:	b100      	cbz	r0, 8017280 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801727e:	b927      	cbnz	r7, 801728a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017280:	2000      	movs	r0, #0
 8017282:	6030      	str	r0, [r6, #0]
 8017284:	b002      	add	sp, #8
 8017286:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801728a:	f7ff ffd3 	bl	8017234 <_ZN8touchgfx4clzuEm>
 801728e:	b980      	cbnz	r0, 80172b2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017290:	4638      	mov	r0, r7
 8017292:	f7ff ffcf 	bl	8017234 <_ZN8touchgfx4clzuEm>
 8017296:	2800      	cmp	r0, #0
 8017298:	dd05      	ble.n	80172a6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801729a:	4633      	mov	r3, r6
 801729c:	462a      	mov	r2, r5
 801729e:	4638      	mov	r0, r7
 80172a0:	f7ff ffe6 	bl	8017270 <_ZN8touchgfx7muldivuEmmmRm>
 80172a4:	e7ee      	b.n	8017284 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80172a6:	f04f 33ff 	mov.w	r3, #4294967295
 80172aa:	6033      	str	r3, [r6, #0]
 80172ac:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80172b0:	e7e8      	b.n	8017284 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80172b2:	fa37 f800 	lsrs.w	r8, r7, r0
 80172b6:	fb07 f301 	mul.w	r3, r7, r1
 80172ba:	d105      	bne.n	80172c8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80172bc:	fbb3 f0f5 	udiv	r0, r3, r5
 80172c0:	fb05 3510 	mls	r5, r5, r0, r3
 80172c4:	6035      	str	r5, [r6, #0]
 80172c6:	e7dd      	b.n	8017284 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80172c8:	2301      	movs	r3, #1
 80172ca:	fa01 fa00 	lsl.w	sl, r1, r0
 80172ce:	fa03 f000 	lsl.w	r0, r3, r0
 80172d2:	3801      	subs	r0, #1
 80172d4:	462a      	mov	r2, r5
 80172d6:	4633      	mov	r3, r6
 80172d8:	4038      	ands	r0, r7
 80172da:	f7ff ffc9 	bl	8017270 <_ZN8touchgfx7muldivuEmmmRm>
 80172de:	fbba f9f5 	udiv	r9, sl, r5
 80172e2:	462a      	mov	r2, r5
 80172e4:	4607      	mov	r7, r0
 80172e6:	ab01      	add	r3, sp, #4
 80172e8:	fb05 a119 	mls	r1, r5, r9, sl
 80172ec:	4640      	mov	r0, r8
 80172ee:	f7ff ffbf 	bl	8017270 <_ZN8touchgfx7muldivuEmmmRm>
 80172f2:	9b01      	ldr	r3, [sp, #4]
 80172f4:	6832      	ldr	r2, [r6, #0]
 80172f6:	fb08 f409 	mul.w	r4, r8, r9
 80172fa:	441a      	add	r2, r3
 80172fc:	fbb2 f3f5 	udiv	r3, r2, r5
 8017300:	441c      	add	r4, r3
 8017302:	443c      	add	r4, r7
 8017304:	4420      	add	r0, r4
 8017306:	fb05 2513 	mls	r5, r5, r3, r2
 801730a:	e7db      	b.n	80172c4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801730c <_ZN8touchgfx6muldivElllRl>:
 801730c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801730e:	2800      	cmp	r0, #0
 8017310:	bfba      	itte	lt
 8017312:	4240      	neglt	r0, r0
 8017314:	f04f 34ff 	movlt.w	r4, #4294967295
 8017318:	2401      	movge	r4, #1
 801731a:	2900      	cmp	r1, #0
 801731c:	bfbc      	itt	lt
 801731e:	4249      	neglt	r1, r1
 8017320:	4264      	neglt	r4, r4
 8017322:	2a00      	cmp	r2, #0
 8017324:	bfb6      	itet	lt
 8017326:	4265      	neglt	r5, r4
 8017328:	4625      	movge	r5, r4
 801732a:	4252      	neglt	r2, r2
 801732c:	4288      	cmp	r0, r1
 801732e:	461e      	mov	r6, r3
 8017330:	bfc2      	ittt	gt
 8017332:	4603      	movgt	r3, r0
 8017334:	4608      	movgt	r0, r1
 8017336:	4619      	movgt	r1, r3
 8017338:	ab01      	add	r3, sp, #4
 801733a:	f7ff ff99 	bl	8017270 <_ZN8touchgfx7muldivuEmmmRm>
 801733e:	9b01      	ldr	r3, [sp, #4]
 8017340:	4368      	muls	r0, r5
 8017342:	435c      	muls	r4, r3
 8017344:	6034      	str	r4, [r6, #0]
 8017346:	b002      	add	sp, #8
 8017348:	bd70      	pop	{r4, r5, r6, pc}

0801734a <_ZN8touchgfx6muldivElll>:
 801734a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801734c:	4606      	mov	r6, r0
 801734e:	ab01      	add	r3, sp, #4
 8017350:	460d      	mov	r5, r1
 8017352:	4614      	mov	r4, r2
 8017354:	f7ff ffda 	bl	801730c <_ZN8touchgfx6muldivElllRl>
 8017358:	2e00      	cmp	r6, #0
 801735a:	db20      	blt.n	801739e <_ZN8touchgfx6muldivElll+0x54>
 801735c:	bf14      	ite	ne
 801735e:	2301      	movne	r3, #1
 8017360:	2300      	moveq	r3, #0
 8017362:	2d00      	cmp	r5, #0
 8017364:	db1e      	blt.n	80173a4 <_ZN8touchgfx6muldivElll+0x5a>
 8017366:	bf14      	ite	ne
 8017368:	2201      	movne	r2, #1
 801736a:	2200      	moveq	r2, #0
 801736c:	2c00      	cmp	r4, #0
 801736e:	fb03 f202 	mul.w	r2, r3, r2
 8017372:	db1a      	blt.n	80173aa <_ZN8touchgfx6muldivElll+0x60>
 8017374:	bf14      	ite	ne
 8017376:	2301      	movne	r3, #1
 8017378:	2300      	moveq	r3, #0
 801737a:	4353      	muls	r3, r2
 801737c:	2b01      	cmp	r3, #1
 801737e:	d117      	bne.n	80173b0 <_ZN8touchgfx6muldivElll+0x66>
 8017380:	9b01      	ldr	r3, [sp, #4]
 8017382:	2c00      	cmp	r4, #0
 8017384:	bfb8      	it	lt
 8017386:	4264      	neglt	r4, r4
 8017388:	2b00      	cmp	r3, #0
 801738a:	f104 0401 	add.w	r4, r4, #1
 801738e:	bfb8      	it	lt
 8017390:	425b      	neglt	r3, r3
 8017392:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017396:	db00      	blt.n	801739a <_ZN8touchgfx6muldivElll+0x50>
 8017398:	3001      	adds	r0, #1
 801739a:	b002      	add	sp, #8
 801739c:	bd70      	pop	{r4, r5, r6, pc}
 801739e:	f04f 33ff 	mov.w	r3, #4294967295
 80173a2:	e7de      	b.n	8017362 <_ZN8touchgfx6muldivElll+0x18>
 80173a4:	f04f 32ff 	mov.w	r2, #4294967295
 80173a8:	e7e0      	b.n	801736c <_ZN8touchgfx6muldivElll+0x22>
 80173aa:	f04f 33ff 	mov.w	r3, #4294967295
 80173ae:	e7e4      	b.n	801737a <_ZN8touchgfx6muldivElll+0x30>
 80173b0:	3301      	adds	r3, #1
 80173b2:	d1f2      	bne.n	801739a <_ZN8touchgfx6muldivElll+0x50>
 80173b4:	9b01      	ldr	r3, [sp, #4]
 80173b6:	2c00      	cmp	r4, #0
 80173b8:	bfb8      	it	lt
 80173ba:	4264      	neglt	r4, r4
 80173bc:	2b00      	cmp	r3, #0
 80173be:	bfb8      	it	lt
 80173c0:	425b      	neglt	r3, r3
 80173c2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80173c6:	bfc8      	it	gt
 80173c8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80173cc:	e7e5      	b.n	801739a <_ZN8touchgfx6muldivElll+0x50>

080173ce <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80173ce:	2000      	movs	r0, #0
 80173d0:	4770      	bx	lr

080173d2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80173d2:	2001      	movs	r0, #1
 80173d4:	4770      	bx	lr

080173d6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80173d6:	2002      	movs	r0, #2
 80173d8:	4770      	bx	lr

080173da <_ZN8touchgfx6ScreenD1Ev>:
 80173da:	4770      	bx	lr

080173dc <_ZN8touchgfx12GestureEventD1Ev>:
 80173dc:	4770      	bx	lr

080173de <_ZN8touchgfx9DragEventD1Ev>:
 80173de:	4770      	bx	lr

080173e0 <_ZN8touchgfx10ClickEventD1Ev>:
 80173e0:	4770      	bx	lr

080173e2 <_ZN8touchgfx10ClickEventD0Ev>:
 80173e2:	b510      	push	{r4, lr}
 80173e4:	210c      	movs	r1, #12
 80173e6:	4604      	mov	r4, r0
 80173e8:	f012 fd85 	bl	8029ef6 <_ZdlPvj>
 80173ec:	4620      	mov	r0, r4
 80173ee:	bd10      	pop	{r4, pc}

080173f0 <_ZN8touchgfx9DragEventD0Ev>:
 80173f0:	b510      	push	{r4, lr}
 80173f2:	2110      	movs	r1, #16
 80173f4:	4604      	mov	r4, r0
 80173f6:	f012 fd7e 	bl	8029ef6 <_ZdlPvj>
 80173fa:	4620      	mov	r0, r4
 80173fc:	bd10      	pop	{r4, pc}

080173fe <_ZN8touchgfx12GestureEventD0Ev>:
 80173fe:	b510      	push	{r4, lr}
 8017400:	210c      	movs	r1, #12
 8017402:	4604      	mov	r4, r0
 8017404:	f012 fd77 	bl	8029ef6 <_ZdlPvj>
 8017408:	4620      	mov	r0, r4
 801740a:	bd10      	pop	{r4, pc}

0801740c <_ZN8touchgfx6ScreenD0Ev>:
 801740c:	b510      	push	{r4, lr}
 801740e:	213c      	movs	r1, #60	; 0x3c
 8017410:	4604      	mov	r4, r0
 8017412:	f012 fd70 	bl	8029ef6 <_ZdlPvj>
 8017416:	4620      	mov	r0, r4
 8017418:	bd10      	pop	{r4, pc}
	...

0801741c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801741c:	b530      	push	{r4, r5, lr}
 801741e:	460d      	mov	r5, r1
 8017420:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017422:	b087      	sub	sp, #28
 8017424:	4604      	mov	r4, r0
 8017426:	b301      	cbz	r1, 801746a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017428:	a801      	add	r0, sp, #4
 801742a:	f7ff fe3d 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801742e:	892a      	ldrh	r2, [r5, #8]
 8017430:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017434:	7928      	ldrb	r0, [r5, #4]
 8017436:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801743a:	f88d 0010 	strb.w	r0, [sp, #16]
 801743e:	1ad2      	subs	r2, r2, r3
 8017440:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017442:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017444:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017448:	441a      	add	r2, r3
 801744a:	896b      	ldrh	r3, [r5, #10]
 801744c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017450:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017454:	1b5b      	subs	r3, r3, r5
 8017456:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017458:	442b      	add	r3, r5
 801745a:	4d05      	ldr	r5, [pc, #20]	; (8017470 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801745c:	9503      	str	r5, [sp, #12]
 801745e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017462:	6803      	ldr	r3, [r0, #0]
 8017464:	a903      	add	r1, sp, #12
 8017466:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017468:	4798      	blx	r3
 801746a:	b007      	add	sp, #28
 801746c:	bd30      	pop	{r4, r5, pc}
 801746e:	bf00      	nop
 8017470:	0802f614 	.word	0x0802f614

08017474 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017474:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017478:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801747a:	b08a      	sub	sp, #40	; 0x28
 801747c:	4604      	mov	r4, r0
 801747e:	460d      	mov	r5, r1
 8017480:	b113      	cbz	r3, 8017488 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017482:	790b      	ldrb	r3, [r1, #4]
 8017484:	2b00      	cmp	r3, #0
 8017486:	d044      	beq.n	8017512 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017488:	f104 0804 	add.w	r8, r4, #4
 801748c:	4641      	mov	r1, r8
 801748e:	a803      	add	r0, sp, #12
 8017490:	f7ff fe0a 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017494:	792b      	ldrb	r3, [r5, #4]
 8017496:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801749a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801749e:	b983      	cbnz	r3, 80174c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80174a0:	892a      	ldrh	r2, [r5, #8]
 80174a2:	88e9      	ldrh	r1, [r5, #6]
 80174a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80174a8:	1b92      	subs	r2, r2, r6
 80174aa:	1bc9      	subs	r1, r1, r7
 80174ac:	9301      	str	r3, [sp, #4]
 80174ae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80174b2:	9300      	str	r3, [sp, #0]
 80174b4:	b212      	sxth	r2, r2
 80174b6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80174ba:	b209      	sxth	r1, r1
 80174bc:	4640      	mov	r0, r8
 80174be:	f7f9 fa79 	bl	80109b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80174c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80174c4:	b329      	cbz	r1, 8017512 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80174c6:	a805      	add	r0, sp, #20
 80174c8:	f7ff fdee 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80174d0:	792b      	ldrb	r3, [r5, #4]
 80174d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80174d4:	f88d 3020 	strb.w	r3, [sp, #32]
 80174d8:	1abf      	subs	r7, r7, r2
 80174da:	88ea      	ldrh	r2, [r5, #6]
 80174dc:	4417      	add	r7, r2
 80174de:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80174e0:	4417      	add	r7, r2
 80174e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80174e6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80174ea:	1ab6      	subs	r6, r6, r2
 80174ec:	892a      	ldrh	r2, [r5, #8]
 80174ee:	4416      	add	r6, r2
 80174f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80174f2:	4416      	add	r6, r2
 80174f4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80174f8:	4a07      	ldr	r2, [pc, #28]	; (8017518 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80174fa:	9207      	str	r2, [sp, #28]
 80174fc:	2600      	movs	r6, #0
 80174fe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017502:	6803      	ldr	r3, [r0, #0]
 8017504:	a907      	add	r1, sp, #28
 8017506:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017508:	4798      	blx	r3
 801750a:	792b      	ldrb	r3, [r5, #4]
 801750c:	b10b      	cbz	r3, 8017512 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801750e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017512:	b00a      	add	sp, #40	; 0x28
 8017514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017518:	0802f5ec 	.word	0x0802f5ec

0801751c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801751c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017520:	460c      	mov	r4, r1
 8017522:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017524:	b088      	sub	sp, #32
 8017526:	4605      	mov	r5, r0
 8017528:	2900      	cmp	r1, #0
 801752a:	d06d      	beq.n	8017608 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801752c:	4668      	mov	r0, sp
 801752e:	f7ff fdbb 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017532:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017534:	88e3      	ldrh	r3, [r4, #6]
 8017536:	f9bd 8000 	ldrsh.w	r8, [sp]
 801753a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801753e:	440b      	add	r3, r1
 8017540:	b21b      	sxth	r3, r3
 8017542:	4543      	cmp	r3, r8
 8017544:	db31      	blt.n	80175aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017546:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801754a:	44c4      	add	ip, r8
 801754c:	fa0f fc8c 	sxth.w	ip, ip
 8017550:	4563      	cmp	r3, ip
 8017552:	da2a      	bge.n	80175aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017554:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017556:	8926      	ldrh	r6, [r4, #8]
 8017558:	4416      	add	r6, r2
 801755a:	b236      	sxth	r6, r6
 801755c:	42be      	cmp	r6, r7
 801755e:	db24      	blt.n	80175aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017560:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017564:	4438      	add	r0, r7
 8017566:	b200      	sxth	r0, r0
 8017568:	4286      	cmp	r6, r0
 801756a:	da1e      	bge.n	80175aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801756c:	8963      	ldrh	r3, [r4, #10]
 801756e:	4419      	add	r1, r3
 8017570:	b209      	sxth	r1, r1
 8017572:	4541      	cmp	r1, r8
 8017574:	db08      	blt.n	8017588 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017576:	4561      	cmp	r1, ip
 8017578:	da06      	bge.n	8017588 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801757a:	89a3      	ldrh	r3, [r4, #12]
 801757c:	441a      	add	r2, r3
 801757e:	b212      	sxth	r2, r2
 8017580:	42ba      	cmp	r2, r7
 8017582:	db01      	blt.n	8017588 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017584:	4282      	cmp	r2, r0
 8017586:	db10      	blt.n	80175aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017588:	4b21      	ldr	r3, [pc, #132]	; (8017610 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801758a:	9304      	str	r3, [sp, #16]
 801758c:	2302      	movs	r3, #2
 801758e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017592:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017594:	2300      	movs	r3, #0
 8017596:	f8ad 3016 	strh.w	r3, [sp, #22]
 801759a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801759e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80175a2:	6803      	ldr	r3, [r0, #0]
 80175a4:	a904      	add	r1, sp, #16
 80175a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80175a8:	4798      	blx	r3
 80175aa:	1d29      	adds	r1, r5, #4
 80175ac:	a802      	add	r0, sp, #8
 80175ae:	f7ff fd7b 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80175b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80175b6:	88e0      	ldrh	r0, [r4, #6]
 80175b8:	7921      	ldrb	r1, [r4, #4]
 80175ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80175be:	8922      	ldrh	r2, [r4, #8]
 80175c0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80175c2:	f88d 1014 	strb.w	r1, [sp, #20]
 80175c6:	eba3 0808 	sub.w	r8, r3, r8
 80175ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80175ce:	1bdf      	subs	r7, r3, r7
 80175d0:	b2bb      	uxth	r3, r7
 80175d2:	fa1f f888 	uxth.w	r8, r8
 80175d6:	8967      	ldrh	r7, [r4, #10]
 80175d8:	89a4      	ldrh	r4, [r4, #12]
 80175da:	4440      	add	r0, r8
 80175dc:	4460      	add	r0, ip
 80175de:	441a      	add	r2, r3
 80175e0:	44b8      	add	r8, r7
 80175e2:	4423      	add	r3, r4
 80175e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80175e8:	4433      	add	r3, r6
 80175ea:	4432      	add	r2, r6
 80175ec:	44e0      	add	r8, ip
 80175ee:	4c09      	ldr	r4, [pc, #36]	; (8017614 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80175f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80175f2:	9404      	str	r4, [sp, #16]
 80175f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80175f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80175fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017600:	6803      	ldr	r3, [r0, #0]
 8017602:	a904      	add	r1, sp, #16
 8017604:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017606:	4798      	blx	r3
 8017608:	b008      	add	sp, #32
 801760a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801760e:	bf00      	nop
 8017610:	0802f5ec 	.word	0x0802f5ec
 8017614:	0802f600 	.word	0x0802f600

08017618 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017618:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801761a:	4604      	mov	r4, r0
 801761c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017620:	3201      	adds	r2, #1
 8017622:	d112      	bne.n	801764a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017624:	6803      	ldr	r3, [r0, #0]
 8017626:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801762a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801762e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017632:	2500      	movs	r5, #0
 8017634:	9500      	str	r5, [sp, #0]
 8017636:	466d      	mov	r5, sp
 8017638:	4629      	mov	r1, r5
 801763a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801763e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017640:	4798      	blx	r3
 8017642:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017646:	e884 0003 	stmia.w	r4, {r0, r1}
 801764a:	4620      	mov	r0, r4
 801764c:	b003      	add	sp, #12
 801764e:	bd30      	pop	{r4, r5, pc}

08017650 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017650:	b513      	push	{r0, r1, r4, lr}
 8017652:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017656:	3301      	adds	r3, #1
 8017658:	4604      	mov	r4, r0
 801765a:	d109      	bne.n	8017670 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801765c:	4601      	mov	r1, r0
 801765e:	4668      	mov	r0, sp
 8017660:	f7ff fd22 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017664:	f8bd 3000 	ldrh.w	r3, [sp]
 8017668:	8423      	strh	r3, [r4, #32]
 801766a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801766e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017670:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017674:	b002      	add	sp, #8
 8017676:	bd10      	pop	{r4, pc}

08017678 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017678:	b513      	push	{r0, r1, r4, lr}
 801767a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801767e:	3301      	adds	r3, #1
 8017680:	4604      	mov	r4, r0
 8017682:	d109      	bne.n	8017698 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017684:	4601      	mov	r1, r0
 8017686:	4668      	mov	r0, sp
 8017688:	f7ff fd0e 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801768c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017690:	8423      	strh	r3, [r4, #32]
 8017692:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017696:	8463      	strh	r3, [r4, #34]	; 0x22
 8017698:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801769c:	b002      	add	sp, #8
 801769e:	bd10      	pop	{r4, pc}

080176a0 <_ZN8touchgfx6ScreenC1Ev>:
 80176a0:	b570      	push	{r4, r5, r6, lr}
 80176a2:	4605      	mov	r5, r0
 80176a4:	4b16      	ldr	r3, [pc, #88]	; (8017700 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80176a6:	f845 3b04 	str.w	r3, [r5], #4
 80176aa:	2300      	movs	r3, #0
 80176ac:	8103      	strh	r3, [r0, #8]
 80176ae:	8143      	strh	r3, [r0, #10]
 80176b0:	8183      	strh	r3, [r0, #12]
 80176b2:	81c3      	strh	r3, [r0, #14]
 80176b4:	8203      	strh	r3, [r0, #16]
 80176b6:	8243      	strh	r3, [r0, #18]
 80176b8:	8283      	strh	r3, [r0, #20]
 80176ba:	82c3      	strh	r3, [r0, #22]
 80176bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80176c0:	6203      	str	r3, [r0, #32]
 80176c2:	8483      	strh	r3, [r0, #36]	; 0x24
 80176c4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80176c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80176ca:	4a0e      	ldr	r2, [pc, #56]	; (8017704 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80176cc:	6343      	str	r3, [r0, #52]	; 0x34
 80176ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80176d2:	4b0d      	ldr	r3, [pc, #52]	; (8017708 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80176d4:	6042      	str	r2, [r0, #4]
 80176d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80176da:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80176dc:	4a0b      	ldr	r2, [pc, #44]	; (801770c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80176de:	4604      	mov	r4, r0
 80176e0:	2101      	movs	r1, #1
 80176e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80176e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80176ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80176ee:	4628      	mov	r0, r5
 80176f0:	4798      	blx	r3
 80176f2:	6863      	ldr	r3, [r4, #4]
 80176f4:	4628      	mov	r0, r5
 80176f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80176f8:	4631      	mov	r1, r6
 80176fa:	4798      	blx	r3
 80176fc:	4620      	mov	r0, r4
 80176fe:	bd70      	pop	{r4, r5, r6, pc}
 8017700:	0802f628 	.word	0x0802f628
 8017704:	0802ee8c 	.word	0x0802ee8c
 8017708:	20012d9a 	.word	0x20012d9a
 801770c:	20012d98 	.word	0x20012d98

08017710 <_ZN8touchgfx6Screen4drawEv>:
 8017710:	b507      	push	{r0, r1, r2, lr}
 8017712:	4b09      	ldr	r3, [pc, #36]	; (8017738 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017714:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017718:	4b08      	ldr	r3, [pc, #32]	; (801773c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801771a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801771e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017722:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017726:	6803      	ldr	r3, [r0, #0]
 8017728:	2100      	movs	r1, #0
 801772a:	9100      	str	r1, [sp, #0]
 801772c:	689b      	ldr	r3, [r3, #8]
 801772e:	4669      	mov	r1, sp
 8017730:	4798      	blx	r3
 8017732:	b003      	add	sp, #12
 8017734:	f85d fb04 	ldr.w	pc, [sp], #4
 8017738:	20012d98 	.word	0x20012d98
 801773c:	20012d9a 	.word	0x20012d9a

08017740 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017744:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017748:	2b00      	cmp	r3, #0
 801774a:	b089      	sub	sp, #36	; 0x24
 801774c:	4680      	mov	r8, r0
 801774e:	460c      	mov	r4, r1
 8017750:	4615      	mov	r5, r2
 8017752:	dd0e      	ble.n	8017772 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017754:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017758:	2b00      	cmp	r3, #0
 801775a:	dd0a      	ble.n	8017772 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801775c:	4628      	mov	r0, r5
 801775e:	f7ff ff5b 	bl	8017618 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017762:	4621      	mov	r1, r4
 8017764:	f7fe fa3d 	bl	8015be2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017768:	69eb      	ldr	r3, [r5, #28]
 801776a:	b928      	cbnz	r0, 8017778 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801776c:	461d      	mov	r5, r3
 801776e:	2b00      	cmp	r3, #0
 8017770:	d1f4      	bne.n	801775c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017772:	b009      	add	sp, #36	; 0x24
 8017774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017778:	ae04      	add	r6, sp, #16
 801777a:	2b00      	cmp	r3, #0
 801777c:	f000 80b5 	beq.w	80178ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017780:	682b      	ldr	r3, [r5, #0]
 8017782:	4629      	mov	r1, r5
 8017784:	68db      	ldr	r3, [r3, #12]
 8017786:	a802      	add	r0, sp, #8
 8017788:	4798      	blx	r3
 801778a:	4628      	mov	r0, r5
 801778c:	f7ff ff60 	bl	8017650 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017790:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017794:	4407      	add	r7, r0
 8017796:	4628      	mov	r0, r5
 8017798:	f7ff ff6e 	bl	8017678 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801779c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80177a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80177a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80177a8:	4418      	add	r0, r3
 80177aa:	4621      	mov	r1, r4
 80177ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80177b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80177b4:	b23f      	sxth	r7, r7
 80177b6:	4630      	mov	r0, r6
 80177b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80177bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80177c0:	f7f9 f9dc 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 80177c4:	4628      	mov	r0, r5
 80177c6:	f7ff ff27 	bl	8017618 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80177ca:	4602      	mov	r2, r0
 80177cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80177d0:	ab06      	add	r3, sp, #24
 80177d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80177d6:	4611      	mov	r1, r2
 80177d8:	4618      	mov	r0, r3
 80177da:	f7f9 f9cf 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 80177de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80177e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80177e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80177ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80177ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80177f2:	4299      	cmp	r1, r3
 80177f4:	d10b      	bne.n	801780e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80177f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80177fa:	4552      	cmp	r2, sl
 80177fc:	d107      	bne.n	801780e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80177fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017802:	455a      	cmp	r2, fp
 8017804:	d103      	bne.n	801780e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017806:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801780a:	454a      	cmp	r2, r9
 801780c:	d06d      	beq.n	80178ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801780e:	f1bb 0f00 	cmp.w	fp, #0
 8017812:	dd65      	ble.n	80178e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017814:	f1b9 0f00 	cmp.w	r9, #0
 8017818:	dd62      	ble.n	80178e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801781a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801781e:	fa1f f08a 	uxth.w	r0, sl
 8017822:	4552      	cmp	r2, sl
 8017824:	9000      	str	r0, [sp, #0]
 8017826:	da12      	bge.n	801784e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017828:	9301      	str	r3, [sp, #4]
 801782a:	9b00      	ldr	r3, [sp, #0]
 801782c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017830:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017834:	1a9a      	subs	r2, r3, r2
 8017836:	f8ad 1010 	strh.w	r1, [sp, #16]
 801783a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801783e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017842:	69ea      	ldr	r2, [r5, #28]
 8017844:	4631      	mov	r1, r6
 8017846:	4640      	mov	r0, r8
 8017848:	f7ff ff7a 	bl	8017740 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801784c:	9b01      	ldr	r3, [sp, #4]
 801784e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017852:	429a      	cmp	r2, r3
 8017854:	b29f      	uxth	r7, r3
 8017856:	da0d      	bge.n	8017874 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017858:	f8ad 2010 	strh.w	r2, [sp, #16]
 801785c:	1aba      	subs	r2, r7, r2
 801785e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017862:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017866:	f8ad 9016 	strh.w	r9, [sp, #22]
 801786a:	69ea      	ldr	r2, [r5, #28]
 801786c:	4631      	mov	r1, r6
 801786e:	4640      	mov	r0, r8
 8017870:	f7ff ff66 	bl	8017740 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017874:	8822      	ldrh	r2, [r4, #0]
 8017876:	88a3      	ldrh	r3, [r4, #4]
 8017878:	445f      	add	r7, fp
 801787a:	4413      	add	r3, r2
 801787c:	b29b      	uxth	r3, r3
 801787e:	b2bf      	uxth	r7, r7
 8017880:	b23a      	sxth	r2, r7
 8017882:	b219      	sxth	r1, r3
 8017884:	4291      	cmp	r1, r2
 8017886:	dd0d      	ble.n	80178a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017888:	1bdb      	subs	r3, r3, r7
 801788a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801788e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017892:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017896:	f8ad 9016 	strh.w	r9, [sp, #22]
 801789a:	69ea      	ldr	r2, [r5, #28]
 801789c:	4631      	mov	r1, r6
 801789e:	4640      	mov	r0, r8
 80178a0:	f7ff ff4e 	bl	8017740 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80178a4:	88e2      	ldrh	r2, [r4, #6]
 80178a6:	8863      	ldrh	r3, [r4, #2]
 80178a8:	4413      	add	r3, r2
 80178aa:	9a00      	ldr	r2, [sp, #0]
 80178ac:	444a      	add	r2, r9
 80178ae:	b29b      	uxth	r3, r3
 80178b0:	fa1f f982 	uxth.w	r9, r2
 80178b4:	fa0f f289 	sxth.w	r2, r9
 80178b8:	b219      	sxth	r1, r3
 80178ba:	428a      	cmp	r2, r1
 80178bc:	da15      	bge.n	80178ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80178be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80178c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80178c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80178ca:	eba3 0309 	sub.w	r3, r3, r9
 80178ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80178d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80178d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80178da:	69ea      	ldr	r2, [r5, #28]
 80178dc:	4631      	mov	r1, r6
 80178de:	e001      	b.n	80178e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80178e0:	69ea      	ldr	r2, [r5, #28]
 80178e2:	4621      	mov	r1, r4
 80178e4:	4640      	mov	r0, r8
 80178e6:	f7ff ff2b 	bl	8017740 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80178ea:	4628      	mov	r0, r5
 80178ec:	f7ff fe94 	bl	8017618 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80178f0:	6861      	ldr	r1, [r4, #4]
 80178f2:	4602      	mov	r2, r0
 80178f4:	6820      	ldr	r0, [r4, #0]
 80178f6:	4633      	mov	r3, r6
 80178f8:	c303      	stmia	r3!, {r0, r1}
 80178fa:	4611      	mov	r1, r2
 80178fc:	4630      	mov	r0, r6
 80178fe:	f7f9 f93d 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 8017902:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017906:	2b00      	cmp	r3, #0
 8017908:	f77f af33 	ble.w	8017772 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801790c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017910:	2b00      	cmp	r3, #0
 8017912:	f77f af2e 	ble.w	8017772 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017916:	4628      	mov	r0, r5
 8017918:	f7ff fe9a 	bl	8017650 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801791c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017920:	1a18      	subs	r0, r3, r0
 8017922:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017926:	4628      	mov	r0, r5
 8017928:	f7ff fea6 	bl	8017678 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801792c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017930:	1a18      	subs	r0, r3, r0
 8017932:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017936:	682b      	ldr	r3, [r5, #0]
 8017938:	4631      	mov	r1, r6
 801793a:	689b      	ldr	r3, [r3, #8]
 801793c:	4628      	mov	r0, r5
 801793e:	4798      	blx	r3
 8017940:	e717      	b.n	8017772 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017942 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017942:	b570      	push	{r4, r5, r6, lr}
 8017944:	460c      	mov	r4, r1
 8017946:	b086      	sub	sp, #24
 8017948:	1d06      	adds	r6, r0, #4
 801794a:	2300      	movs	r3, #0
 801794c:	4631      	mov	r1, r6
 801794e:	4605      	mov	r5, r0
 8017950:	a802      	add	r0, sp, #8
 8017952:	9301      	str	r3, [sp, #4]
 8017954:	f7ff fba8 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017958:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801795c:	8822      	ldrh	r2, [r4, #0]
 801795e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017962:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017966:	f8ad 0014 	strh.w	r0, [sp, #20]
 801796a:	1ad2      	subs	r2, r2, r3
 801796c:	8863      	ldrh	r3, [r4, #2]
 801796e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017972:	1a5b      	subs	r3, r3, r1
 8017974:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017978:	f8ad 1016 	strh.w	r1, [sp, #22]
 801797c:	aa01      	add	r2, sp, #4
 801797e:	a904      	add	r1, sp, #16
 8017980:	4630      	mov	r0, r6
 8017982:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017986:	f7f9 f9d1 	bl	8010d2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801798a:	9a01      	ldr	r2, [sp, #4]
 801798c:	b11a      	cbz	r2, 8017996 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801798e:	4621      	mov	r1, r4
 8017990:	4628      	mov	r0, r5
 8017992:	f7ff fed5 	bl	8017740 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017996:	b006      	add	sp, #24
 8017998:	bd70      	pop	{r4, r5, r6, pc}

0801799a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801799a:	b530      	push	{r4, r5, lr}
 801799c:	4602      	mov	r2, r0
 801799e:	4604      	mov	r4, r0
 80179a0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80179a4:	b085      	sub	sp, #20
 80179a6:	460d      	mov	r5, r1
 80179a8:	6851      	ldr	r1, [r2, #4]
 80179aa:	466b      	mov	r3, sp
 80179ac:	c303      	stmia	r3!, {r0, r1}
 80179ae:	4629      	mov	r1, r5
 80179b0:	4668      	mov	r0, sp
 80179b2:	f7f9 f8e3 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 80179b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80179ba:	b12b      	cbz	r3, 80179c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80179bc:	4669      	mov	r1, sp
 80179be:	4620      	mov	r0, r4
 80179c0:	f7ff ffbf 	bl	8017942 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80179c4:	b005      	add	sp, #20
 80179c6:	bd30      	pop	{r4, r5, pc}
 80179c8:	3404      	adds	r4, #4
 80179ca:	4621      	mov	r1, r4
 80179cc:	a802      	add	r0, sp, #8
 80179ce:	f7ff fb6b 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80179d2:	f8bd 3000 	ldrh.w	r3, [sp]
 80179d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80179da:	1a9b      	subs	r3, r3, r2
 80179dc:	f8ad 3000 	strh.w	r3, [sp]
 80179e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80179e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80179e8:	4669      	mov	r1, sp
 80179ea:	1a9b      	subs	r3, r3, r2
 80179ec:	4620      	mov	r0, r4
 80179ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 80179f2:	f7f9 f962 	bl	8010cba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80179f6:	e7e5      	b.n	80179c4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080179f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80179f8:	680a      	ldr	r2, [r1, #0]
 80179fa:	460b      	mov	r3, r1
 80179fc:	6992      	ldr	r2, [r2, #24]
 80179fe:	1d01      	adds	r1, r0, #4
 8017a00:	4618      	mov	r0, r3
 8017a02:	4710      	bx	r2

08017a04 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017a04:	4298      	cmp	r0, r3
 8017a06:	d200      	bcs.n	8017a0a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017a08:	b913      	cbnz	r3, 8017a10 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8017a0a:	440a      	add	r2, r1
 8017a0c:	b210      	sxth	r0, r2
 8017a0e:	4770      	bx	lr
 8017a10:	ee07 0a90 	vmov	s15, r0
 8017a14:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017a18:	ee07 3a90 	vmov	s15, r3
 8017a1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a20:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017a24:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017a28:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017a2c:	ee07 2a90 	vmov	s15, r2
 8017a30:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017a34:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017a38:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017a3c:	ee07 1a90 	vmov	s15, r1
 8017a40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a44:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017a48:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017a4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a54:	bfcc      	ite	gt
 8017a56:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017a5a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017a5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017a62:	ee17 3a90 	vmov	r3, s15
 8017a66:	b218      	sxth	r0, r3
 8017a68:	4770      	bx	lr

08017a6a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8017a6a:	4298      	cmp	r0, r3
 8017a6c:	d200      	bcs.n	8017a70 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8017a6e:	b913      	cbnz	r3, 8017a76 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017a70:	440a      	add	r2, r1
 8017a72:	b210      	sxth	r0, r2
 8017a74:	4770      	bx	lr
 8017a76:	ee07 2a90 	vmov	s15, r2
 8017a7a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017a7e:	ee07 0a90 	vmov	s15, r0
 8017a82:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017a86:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017a8a:	ee07 3a10 	vmov	s14, r3
 8017a8e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017a92:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017a96:	ee07 1a90 	vmov	s15, r1
 8017a9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a9e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017aa2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017aa6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017aae:	bfcc      	ite	gt
 8017ab0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017ab4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017ab8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017abc:	ee17 3a90 	vmov	r3, s15
 8017ac0:	b218      	sxth	r0, r3
 8017ac2:	4770      	bx	lr

08017ac4 <_ZN8touchgfx12TextProviderC1Ev>:
 8017ac4:	b538      	push	{r3, r4, r5, lr}
 8017ac6:	2500      	movs	r5, #0
 8017ac8:	2302      	movs	r3, #2
 8017aca:	4604      	mov	r4, r0
 8017acc:	e9c0 5500 	strd	r5, r5, [r0]
 8017ad0:	7403      	strb	r3, [r0, #16]
 8017ad2:	6145      	str	r5, [r0, #20]
 8017ad4:	7605      	strb	r5, [r0, #24]
 8017ad6:	83c5      	strh	r5, [r0, #30]
 8017ad8:	8405      	strh	r5, [r0, #32]
 8017ada:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017adc:	8705      	strh	r5, [r0, #56]	; 0x38
 8017ade:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017ae0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017ae4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017ae8:	220e      	movs	r2, #14
 8017aea:	4629      	mov	r1, r5
 8017aec:	304c      	adds	r0, #76	; 0x4c
 8017aee:	f013 faee 	bl	802b0ce <memset>
 8017af2:	2301      	movs	r3, #1
 8017af4:	4620      	mov	r0, r4
 8017af6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017afa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017afe:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017b02:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017b06:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017b0a:	f7f1 fb03 	bl	8009114 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017b0e:	4620      	mov	r0, r4
 8017b10:	bd38      	pop	{r3, r4, r5, pc}

08017b12 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017b12:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017b14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017b18:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017b1a:	fab0 f080 	clz	r0, r0
 8017b1e:	0940      	lsrs	r0, r0, #5
 8017b20:	4770      	bx	lr

08017b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017b22:	b530      	push	{r4, r5, lr}
 8017b24:	2500      	movs	r5, #0
 8017b26:	2401      	movs	r4, #1
 8017b28:	6843      	ldr	r3, [r0, #4]
 8017b2a:	b913      	cbnz	r3, 8017b32 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017b2c:	6803      	ldr	r3, [r0, #0]
 8017b2e:	b313      	cbz	r3, 8017b76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017b30:	6043      	str	r3, [r0, #4]
 8017b32:	7e03      	ldrb	r3, [r0, #24]
 8017b34:	b143      	cbz	r3, 8017b48 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017b36:	6943      	ldr	r3, [r0, #20]
 8017b38:	b12b      	cbz	r3, 8017b46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017b3a:	881a      	ldrh	r2, [r3, #0]
 8017b3c:	b11a      	cbz	r2, 8017b46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017b3e:	1c9a      	adds	r2, r3, #2
 8017b40:	6142      	str	r2, [r0, #20]
 8017b42:	8818      	ldrh	r0, [r3, #0]
 8017b44:	bd30      	pop	{r4, r5, pc}
 8017b46:	7605      	strb	r5, [r0, #24]
 8017b48:	6843      	ldr	r3, [r0, #4]
 8017b4a:	8819      	ldrh	r1, [r3, #0]
 8017b4c:	b199      	cbz	r1, 8017b76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017b4e:	1c9a      	adds	r2, r3, #2
 8017b50:	2902      	cmp	r1, #2
 8017b52:	6042      	str	r2, [r0, #4]
 8017b54:	d1f5      	bne.n	8017b42 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017b56:	7c03      	ldrb	r3, [r0, #16]
 8017b58:	2b01      	cmp	r3, #1
 8017b5a:	d8e5      	bhi.n	8017b28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b5c:	1c5a      	adds	r2, r3, #1
 8017b5e:	3302      	adds	r3, #2
 8017b60:	7402      	strb	r2, [r0, #16]
 8017b62:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017b66:	6143      	str	r3, [r0, #20]
 8017b68:	2b00      	cmp	r3, #0
 8017b6a:	d0dd      	beq.n	8017b28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b6c:	881b      	ldrh	r3, [r3, #0]
 8017b6e:	2b00      	cmp	r3, #0
 8017b70:	d0da      	beq.n	8017b28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b72:	7604      	strb	r4, [r0, #24]
 8017b74:	e7d8      	b.n	8017b28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017b76:	2000      	movs	r0, #0
 8017b78:	e7e4      	b.n	8017b44 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017b7a:	b430      	push	{r4, r5}
 8017b7c:	6001      	str	r1, [r0, #0]
 8017b7e:	2100      	movs	r1, #0
 8017b80:	6041      	str	r1, [r0, #4]
 8017b82:	6815      	ldr	r5, [r2, #0]
 8017b84:	6085      	str	r5, [r0, #8]
 8017b86:	6852      	ldr	r2, [r2, #4]
 8017b88:	6443      	str	r3, [r0, #68]	; 0x44
 8017b8a:	9b02      	ldr	r3, [sp, #8]
 8017b8c:	60c2      	str	r2, [r0, #12]
 8017b8e:	7401      	strb	r1, [r0, #16]
 8017b90:	6141      	str	r1, [r0, #20]
 8017b92:	7601      	strb	r1, [r0, #24]
 8017b94:	8701      	strh	r1, [r0, #56]	; 0x38
 8017b96:	8401      	strh	r1, [r0, #32]
 8017b98:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017b9c:	6483      	str	r3, [r0, #72]	; 0x48
 8017b9e:	bc30      	pop	{r4, r5}
 8017ba0:	f7f1 bab8 	b.w	8009114 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017ba4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017ba4:	b408      	push	{r3}
 8017ba6:	b510      	push	{r4, lr}
 8017ba8:	b085      	sub	sp, #20
 8017baa:	ac07      	add	r4, sp, #28
 8017bac:	f854 3b04 	ldr.w	r3, [r4], #4
 8017bb0:	9300      	str	r3, [sp, #0]
 8017bb2:	4613      	mov	r3, r2
 8017bb4:	4622      	mov	r2, r4
 8017bb6:	9403      	str	r4, [sp, #12]
 8017bb8:	f7ff ffdf 	bl	8017b7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017bbc:	b005      	add	sp, #20
 8017bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017bc2:	b001      	add	sp, #4
 8017bc4:	4770      	bx	lr

08017bc6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017bc6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017bc8:	4605      	mov	r5, r0
 8017bca:	4608      	mov	r0, r1
 8017bcc:	b1e9      	cbz	r1, 8017c0a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017bce:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017bd2:	460b      	mov	r3, r1
 8017bd4:	f101 0708 	add.w	r7, r1, #8
 8017bd8:	4622      	mov	r2, r4
 8017bda:	6818      	ldr	r0, [r3, #0]
 8017bdc:	6859      	ldr	r1, [r3, #4]
 8017bde:	4626      	mov	r6, r4
 8017be0:	c603      	stmia	r6!, {r0, r1}
 8017be2:	3308      	adds	r3, #8
 8017be4:	42bb      	cmp	r3, r7
 8017be6:	4634      	mov	r4, r6
 8017be8:	d1f7      	bne.n	8017bda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017bea:	6818      	ldr	r0, [r3, #0]
 8017bec:	6030      	str	r0, [r6, #0]
 8017bee:	889b      	ldrh	r3, [r3, #4]
 8017bf0:	80b3      	strh	r3, [r6, #4]
 8017bf2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017bf6:	015b      	lsls	r3, r3, #5
 8017bf8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017bfc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017c00:	430b      	orrs	r3, r1
 8017c02:	425b      	negs	r3, r3
 8017c04:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017c08:	4610      	mov	r0, r2
 8017c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017c0c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017c0c:	b538      	push	{r3, r4, r5, lr}
 8017c0e:	460c      	mov	r4, r1
 8017c10:	6811      	ldr	r1, [r2, #0]
 8017c12:	4610      	mov	r0, r2
 8017c14:	68cd      	ldr	r5, [r1, #12]
 8017c16:	4619      	mov	r1, r3
 8017c18:	47a8      	blx	r5
 8017c1a:	2800      	cmp	r0, #0
 8017c1c:	bf08      	it	eq
 8017c1e:	4620      	moveq	r0, r4
 8017c20:	bd38      	pop	{r3, r4, r5, pc}
	...

08017c24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017c26:	4604      	mov	r4, r0
 8017c28:	4615      	mov	r5, r2
 8017c2a:	4608      	mov	r0, r1
 8017c2c:	b93a      	cbnz	r2, 8017c3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017c2e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017c32:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017c36:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017c3a:	4628      	mov	r0, r5
 8017c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017c3e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017c42:	8893      	ldrh	r3, [r2, #4]
 8017c44:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017c48:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017c4c:	79ee      	ldrb	r6, [r5, #7]
 8017c4e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017c52:	4316      	orrs	r6, r2
 8017c54:	19da      	adds	r2, r3, r7
 8017c56:	b291      	uxth	r1, r2
 8017c58:	291d      	cmp	r1, #29
 8017c5a:	b2b7      	uxth	r7, r6
 8017c5c:	d87a      	bhi.n	8017d54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017c5e:	2201      	movs	r2, #1
 8017c60:	408a      	lsls	r2, r1
 8017c62:	4975      	ldr	r1, [pc, #468]	; (8017e38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017c64:	420a      	tst	r2, r1
 8017c66:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017c6a:	d12d      	bne.n	8017cc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017c6c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017c70:	d070      	beq.n	8017d54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017c72:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017c76:	462b      	mov	r3, r5
 8017c78:	f105 0e08 	add.w	lr, r5, #8
 8017c7c:	4615      	mov	r5, r2
 8017c7e:	6818      	ldr	r0, [r3, #0]
 8017c80:	6859      	ldr	r1, [r3, #4]
 8017c82:	4694      	mov	ip, r2
 8017c84:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017c88:	3308      	adds	r3, #8
 8017c8a:	4573      	cmp	r3, lr
 8017c8c:	4662      	mov	r2, ip
 8017c8e:	d1f6      	bne.n	8017c7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017c90:	6818      	ldr	r0, [r3, #0]
 8017c92:	f8cc 0000 	str.w	r0, [ip]
 8017c96:	889b      	ldrh	r3, [r3, #4]
 8017c98:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017c9c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017ca0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017ca4:	b2b3      	uxth	r3, r6
 8017ca6:	1aca      	subs	r2, r1, r3
 8017ca8:	b292      	uxth	r2, r2
 8017caa:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017cae:	10d2      	asrs	r2, r2, #3
 8017cb0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017cb4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017cb8:	4302      	orrs	r2, r0
 8017cba:	1bcf      	subs	r7, r1, r7
 8017cbc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017cc0:	1afb      	subs	r3, r7, r3
 8017cc2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017cc6:	e7b8      	b.n	8017c3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017cc8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017cca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017cce:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017cd0:	f640 6333 	movw	r3, #3635	; 0xe33
 8017cd4:	4299      	cmp	r1, r3
 8017cd6:	d110      	bne.n	8017cfa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017cd8:	6803      	ldr	r3, [r0, #0]
 8017cda:	68db      	ldr	r3, [r3, #12]
 8017cdc:	4798      	blx	r3
 8017cde:	7b41      	ldrb	r1, [r0, #13]
 8017ce0:	00cb      	lsls	r3, r1, #3
 8017ce2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017ce6:	7a03      	ldrb	r3, [r0, #8]
 8017ce8:	0648      	lsls	r0, r1, #25
 8017cea:	ea43 0302 	orr.w	r3, r3, r2
 8017cee:	bf44      	itt	mi
 8017cf0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017cf4:	b21b      	sxthmi	r3, r3
 8017cf6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017cfa:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017cfe:	443b      	add	r3, r7
 8017d00:	4433      	add	r3, r6
 8017d02:	b29b      	uxth	r3, r3
 8017d04:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017d08:	462a      	mov	r2, r5
 8017d0a:	f105 0c08 	add.w	ip, r5, #8
 8017d0e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d12:	4635      	mov	r5, r6
 8017d14:	6810      	ldr	r0, [r2, #0]
 8017d16:	6851      	ldr	r1, [r2, #4]
 8017d18:	4637      	mov	r7, r6
 8017d1a:	c703      	stmia	r7!, {r0, r1}
 8017d1c:	3208      	adds	r2, #8
 8017d1e:	4562      	cmp	r2, ip
 8017d20:	463e      	mov	r6, r7
 8017d22:	d1f7      	bne.n	8017d14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017d24:	6810      	ldr	r0, [r2, #0]
 8017d26:	6038      	str	r0, [r7, #0]
 8017d28:	8892      	ldrh	r2, [r2, #4]
 8017d2a:	80ba      	strh	r2, [r7, #4]
 8017d2c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017d30:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017d34:	10db      	asrs	r3, r3, #3
 8017d36:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017d3a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017d3e:	4313      	orrs	r3, r2
 8017d40:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017d44:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017d48:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017d4c:	1a9b      	subs	r3, r3, r2
 8017d4e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017d52:	e772      	b.n	8017c3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017d54:	f023 0204 	bic.w	r2, r3, #4
 8017d58:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017d5c:	428a      	cmp	r2, r1
 8017d5e:	d003      	beq.n	8017d68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017d60:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017d64:	4293      	cmp	r3, r2
 8017d66:	d120      	bne.n	8017daa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017d68:	3b01      	subs	r3, #1
 8017d6a:	4602      	mov	r2, r0
 8017d6c:	b29b      	uxth	r3, r3
 8017d6e:	4629      	mov	r1, r5
 8017d70:	4620      	mov	r0, r4
 8017d72:	f7ff ff4b 	bl	8017c0c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017d76:	7b41      	ldrb	r1, [r0, #13]
 8017d78:	00cb      	lsls	r3, r1, #3
 8017d7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d7e:	7a03      	ldrb	r3, [r0, #8]
 8017d80:	0649      	lsls	r1, r1, #25
 8017d82:	ea43 0302 	orr.w	r3, r3, r2
 8017d86:	bf44      	itt	mi
 8017d88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d8c:	b21b      	sxthmi	r3, r3
 8017d8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d92:	7b6b      	ldrb	r3, [r5, #13]
 8017d94:	7aaa      	ldrb	r2, [r5, #10]
 8017d96:	005b      	lsls	r3, r3, #1
 8017d98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017d9c:	4313      	orrs	r3, r2
 8017d9e:	115a      	asrs	r2, r3, #5
 8017da0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017da4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017da8:	e036      	b.n	8017e18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017daa:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017dae:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017db2:	7a2a      	ldrb	r2, [r5, #8]
 8017db4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017db8:	ea42 0201 	orr.w	r2, r2, r1
 8017dbc:	bf1c      	itt	ne
 8017dbe:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017dc2:	b212      	sxthne	r2, r2
 8017dc4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017dc8:	f640 6109 	movw	r1, #3593	; 0xe09
 8017dcc:	f023 0210 	bic.w	r2, r3, #16
 8017dd0:	428a      	cmp	r2, r1
 8017dd2:	d003      	beq.n	8017ddc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017dd4:	f640 6213 	movw	r2, #3603	; 0xe13
 8017dd8:	4293      	cmp	r3, r2
 8017dda:	d12a      	bne.n	8017e32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017ddc:	7b6e      	ldrb	r6, [r5, #13]
 8017dde:	0076      	lsls	r6, r6, #1
 8017de0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017de4:	7aae      	ldrb	r6, [r5, #10]
 8017de6:	4316      	orrs	r6, r2
 8017de8:	f640 6213 	movw	r2, #3603	; 0xe13
 8017dec:	4293      	cmp	r3, r2
 8017dee:	bf18      	it	ne
 8017df0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017df4:	4602      	mov	r2, r0
 8017df6:	bf14      	ite	ne
 8017df8:	b29b      	uxthne	r3, r3
 8017dfa:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017dfe:	4629      	mov	r1, r5
 8017e00:	4620      	mov	r0, r4
 8017e02:	f7ff ff03 	bl	8017c0c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017e06:	7b43      	ldrb	r3, [r0, #13]
 8017e08:	7a82      	ldrb	r2, [r0, #10]
 8017e0a:	005b      	lsls	r3, r3, #1
 8017e0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017e10:	4313      	orrs	r3, r2
 8017e12:	1af6      	subs	r6, r6, r3
 8017e14:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017e18:	7b69      	ldrb	r1, [r5, #13]
 8017e1a:	00cb      	lsls	r3, r1, #3
 8017e1c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017e20:	7a2b      	ldrb	r3, [r5, #8]
 8017e22:	4313      	orrs	r3, r2
 8017e24:	064a      	lsls	r2, r1, #25
 8017e26:	bf44      	itt	mi
 8017e28:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e2c:	b21b      	sxthmi	r3, r3
 8017e2e:	1bdb      	subs	r3, r3, r7
 8017e30:	e747      	b.n	8017cc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017e32:	2300      	movs	r3, #0
 8017e34:	e7b6      	b.n	8017da4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017e36:	bf00      	nop
 8017e38:	3fc00079 	.word	0x3fc00079

08017e3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017e3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017e40:	4604      	mov	r4, r0
 8017e42:	b942      	cbnz	r2, 8017e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017e44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017e48:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017e4c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017e50:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017e54:	e047      	b.n	8017ee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017e56:	7b51      	ldrb	r1, [r2, #13]
 8017e58:	8893      	ldrh	r3, [r2, #4]
 8017e5a:	010d      	lsls	r5, r1, #4
 8017e5c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017e60:	79d5      	ldrb	r5, [r2, #7]
 8017e62:	4305      	orrs	r5, r0
 8017e64:	2d04      	cmp	r5, #4
 8017e66:	bfcc      	ite	gt
 8017e68:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017e6c:	f04f 0e01 	movle.w	lr, #1
 8017e70:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017e74:	f200 80ab 	bhi.w	8017fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017e78:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017e7c:	4283      	cmp	r3, r0
 8017e7e:	d216      	bcs.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e80:	f240 605b 	movw	r0, #1627	; 0x65b
 8017e84:	4283      	cmp	r3, r0
 8017e86:	d859      	bhi.n	8017f3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017e88:	f240 6057 	movw	r0, #1623	; 0x657
 8017e8c:	4283      	cmp	r3, r0
 8017e8e:	d20e      	bcs.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e90:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017e94:	d24a      	bcs.n	8017f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017e96:	f240 604e 	movw	r0, #1614	; 0x64e
 8017e9a:	4283      	cmp	r3, r0
 8017e9c:	d207      	bcs.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e9e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017ea2:	4283      	cmp	r3, r0
 8017ea4:	d02a      	beq.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ea6:	d821      	bhi.n	8017eec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017ea8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017eac:	d35b      	bcc.n	8017f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017eae:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017eb2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017eb6:	f040 80d0 	bne.w	801805a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017eba:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017ebe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ec2:	f040 80ca 	bne.w	801805a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017ec6:	00cb      	lsls	r3, r1, #3
 8017ec8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017ecc:	7a13      	ldrb	r3, [r2, #8]
 8017ece:	0649      	lsls	r1, r1, #25
 8017ed0:	ea43 0300 	orr.w	r3, r3, r0
 8017ed4:	bf44      	itt	mi
 8017ed6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017eda:	b21b      	sxthmi	r3, r3
 8017edc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017ee0:	1b5d      	subs	r5, r3, r5
 8017ee2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017ee6:	4610      	mov	r0, r2
 8017ee8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017eec:	f240 604b 	movw	r0, #1611	; 0x64b
 8017ef0:	4283      	cmp	r3, r0
 8017ef2:	d338      	bcc.n	8017f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017ef4:	f240 604c 	movw	r0, #1612	; 0x64c
 8017ef8:	4283      	cmp	r3, r0
 8017efa:	d9d8      	bls.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017efc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017f00:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017f04:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017f08:	f040 80f2 	bne.w	80180f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017f0c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017f10:	f040 80ee 	bne.w	80180f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017f14:	00cb      	lsls	r3, r1, #3
 8017f16:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017f1a:	7a13      	ldrb	r3, [r2, #8]
 8017f1c:	064e      	lsls	r6, r1, #25
 8017f1e:	ea43 0300 	orr.w	r3, r3, r0
 8017f22:	bf44      	itt	mi
 8017f24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f28:	b21b      	sxthmi	r3, r3
 8017f2a:	e7d9      	b.n	8017ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017f2c:	f240 6054 	movw	r0, #1620	; 0x654
 8017f30:	4283      	cmp	r3, r0
 8017f32:	d8e3      	bhi.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f34:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017f38:	d9e0      	bls.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f3a:	e7b8      	b.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f3c:	f240 6074 	movw	r0, #1652	; 0x674
 8017f40:	4283      	cmp	r3, r0
 8017f42:	d0b4      	beq.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f44:	d82d      	bhi.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017f46:	f240 605e 	movw	r0, #1630	; 0x65e
 8017f4a:	4283      	cmp	r3, r0
 8017f4c:	d804      	bhi.n	8017f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017f4e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017f52:	4283      	cmp	r3, r0
 8017f54:	d3d2      	bcc.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f56:	e7aa      	b.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f58:	f240 605f 	movw	r0, #1631	; 0x65f
 8017f5c:	4283      	cmp	r3, r0
 8017f5e:	d0cd      	beq.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f60:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017f64:	d0a3      	beq.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f66:	00cb      	lsls	r3, r1, #3
 8017f68:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017f6c:	7a13      	ldrb	r3, [r2, #8]
 8017f6e:	0649      	lsls	r1, r1, #25
 8017f70:	ea43 0300 	orr.w	r3, r3, r0
 8017f74:	bf44      	itt	mi
 8017f76:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f7a:	b21b      	sxthmi	r3, r3
 8017f7c:	1b5d      	subs	r5, r3, r5
 8017f7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017f82:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017f86:	7b53      	ldrb	r3, [r2, #13]
 8017f88:	015b      	lsls	r3, r3, #5
 8017f8a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017f8e:	7993      	ldrb	r3, [r2, #6]
 8017f90:	430b      	orrs	r3, r1
 8017f92:	005b      	lsls	r3, r3, #1
 8017f94:	2105      	movs	r1, #5
 8017f96:	fb93 f3f1 	sdiv	r3, r3, r1
 8017f9a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017f9e:	440b      	add	r3, r1
 8017fa0:	e756      	b.n	8017e50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017fa2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017fa6:	4283      	cmp	r3, r0
 8017fa8:	d809      	bhi.n	8017fbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017faa:	f240 60df 	movw	r0, #1759	; 0x6df
 8017fae:	4283      	cmp	r3, r0
 8017fb0:	f4bf af7d 	bcs.w	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fb4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017fb8:	2b05      	cmp	r3, #5
 8017fba:	d8d4      	bhi.n	8017f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017fbc:	e777      	b.n	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fbe:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017fc2:	4283      	cmp	r3, r0
 8017fc4:	d09a      	beq.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fc6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017fca:	4283      	cmp	r3, r0
 8017fcc:	e7ca      	b.n	8017f64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017fce:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017fd2:	d22b      	bcs.n	801802c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017fd4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017fd8:	4283      	cmp	r3, r0
 8017fda:	d28f      	bcs.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fdc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017fe0:	4283      	cmp	r3, r0
 8017fe2:	d816      	bhi.n	8018012 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017fe4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017fe8:	4283      	cmp	r3, r0
 8017fea:	f4bf af60 	bcs.w	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fee:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017ff2:	4283      	cmp	r3, r0
 8017ff4:	d80a      	bhi.n	801800c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017ff6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017ffa:	4283      	cmp	r3, r0
 8017ffc:	f4bf af57 	bcs.w	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018000:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018004:	4283      	cmp	r3, r0
 8018006:	f43f af79 	beq.w	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801800a:	e7ac      	b.n	8017f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801800c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018010:	e7f8      	b.n	8018004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018012:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018016:	4283      	cmp	r3, r0
 8018018:	d802      	bhi.n	8018020 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801801a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801801e:	e798      	b.n	8017f52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018020:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018024:	4283      	cmp	r3, r0
 8018026:	f47f af42 	bne.w	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801802a:	e767      	b.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801802c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018030:	4283      	cmp	r3, r0
 8018032:	f43f af63 	beq.w	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018036:	d802      	bhi.n	801803e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018038:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801803c:	e7f2      	b.n	8018024 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801803e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018042:	4283      	cmp	r3, r0
 8018044:	d805      	bhi.n	8018052 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018046:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801804a:	4283      	cmp	r3, r0
 801804c:	f4ff af2f 	bcc.w	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018050:	e754      	b.n	8017efc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018052:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018056:	4283      	cmp	r3, r0
 8018058:	e7af      	b.n	8017fba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801805a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801805e:	4617      	mov	r7, r2
 8018060:	f102 0808 	add.w	r8, r2, #8
 8018064:	4666      	mov	r6, ip
 8018066:	6838      	ldr	r0, [r7, #0]
 8018068:	6879      	ldr	r1, [r7, #4]
 801806a:	46e6      	mov	lr, ip
 801806c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018070:	3708      	adds	r7, #8
 8018072:	4547      	cmp	r7, r8
 8018074:	46f4      	mov	ip, lr
 8018076:	d1f6      	bne.n	8018066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018078:	6838      	ldr	r0, [r7, #0]
 801807a:	f8ce 0000 	str.w	r0, [lr]
 801807e:	88b9      	ldrh	r1, [r7, #4]
 8018080:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018084:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018088:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801808c:	d009      	beq.n	80180a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801808e:	7b51      	ldrb	r1, [r2, #13]
 8018090:	7992      	ldrb	r2, [r2, #6]
 8018092:	0149      	lsls	r1, r1, #5
 8018094:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018098:	4311      	orrs	r1, r2
 801809a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801809e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80180a2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80180a6:	b2ad      	uxth	r5, r5
 80180a8:	d00d      	beq.n	80180c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80180aa:	442b      	add	r3, r5
 80180ac:	b29b      	uxth	r3, r3
 80180ae:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80180b2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80180b6:	10db      	asrs	r3, r3, #3
 80180b8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80180bc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80180c0:	4313      	orrs	r3, r2
 80180c2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80180c6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80180ca:	00cb      	lsls	r3, r1, #3
 80180cc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80180d0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80180d4:	064f      	lsls	r7, r1, #25
 80180d6:	ea43 0302 	orr.w	r3, r3, r2
 80180da:	bf44      	itt	mi
 80180dc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80180e0:	b21b      	sxthmi	r3, r3
 80180e2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80180e6:	1b5b      	subs	r3, r3, r5
 80180e8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80180ec:	4632      	mov	r2, r6
 80180ee:	e6fa      	b.n	8017ee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80180f0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80180f4:	4617      	mov	r7, r2
 80180f6:	f102 0908 	add.w	r9, r2, #8
 80180fa:	4666      	mov	r6, ip
 80180fc:	6838      	ldr	r0, [r7, #0]
 80180fe:	6879      	ldr	r1, [r7, #4]
 8018100:	46e0      	mov	r8, ip
 8018102:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018106:	3708      	adds	r7, #8
 8018108:	454f      	cmp	r7, r9
 801810a:	46c4      	mov	ip, r8
 801810c:	d1f6      	bne.n	80180fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801810e:	6838      	ldr	r0, [r7, #0]
 8018110:	f8c8 0000 	str.w	r0, [r8]
 8018114:	88b9      	ldrh	r1, [r7, #4]
 8018116:	f8a8 1004 	strh.w	r1, [r8, #4]
 801811a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801811e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018122:	d009      	beq.n	8018138 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018124:	7b51      	ldrb	r1, [r2, #13]
 8018126:	7992      	ldrb	r2, [r2, #6]
 8018128:	0149      	lsls	r1, r1, #5
 801812a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801812e:	4311      	orrs	r1, r2
 8018130:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018134:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018138:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801813c:	d00e      	beq.n	801815c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801813e:	eba3 030e 	sub.w	r3, r3, lr
 8018142:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018146:	b29b      	uxth	r3, r3
 8018148:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801814c:	10db      	asrs	r3, r3, #3
 801814e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018152:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018156:	4313      	orrs	r3, r2
 8018158:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801815c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018160:	00cb      	lsls	r3, r1, #3
 8018162:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018166:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801816a:	0648      	lsls	r0, r1, #25
 801816c:	ea43 0302 	orr.w	r3, r3, r2
 8018170:	bf44      	itt	mi
 8018172:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018176:	b21b      	sxthmi	r3, r3
 8018178:	1b5d      	subs	r5, r3, r5
 801817a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801817e:	e7b5      	b.n	80180ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018184:	461e      	mov	r6, r3
 8018186:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018188:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801818c:	4604      	mov	r4, r0
 801818e:	4617      	mov	r7, r2
 8018190:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018194:	f7f0 ff7c 	bl	8009090 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018198:	4605      	mov	r5, r0
 801819a:	b918      	cbnz	r0, 80181a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801819c:	6030      	str	r0, [r6, #0]
 801819e:	4628      	mov	r0, r5
 80181a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80181a4:	683b      	ldr	r3, [r7, #0]
 80181a6:	4601      	mov	r1, r0
 80181a8:	68db      	ldr	r3, [r3, #12]
 80181aa:	4638      	mov	r0, r7
 80181ac:	4798      	blx	r3
 80181ae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80181b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80181b6:	4602      	mov	r2, r0
 80181b8:	6030      	str	r0, [r6, #0]
 80181ba:	d213      	bcs.n	80181e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80181bc:	4643      	mov	r3, r8
 80181be:	4639      	mov	r1, r7
 80181c0:	4620      	mov	r0, r4
 80181c2:	f7ff fe3b 	bl	8017e3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80181c6:	6030      	str	r0, [r6, #0]
 80181c8:	6833      	ldr	r3, [r6, #0]
 80181ca:	b143      	cbz	r3, 80181de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80181cc:	7b5a      	ldrb	r2, [r3, #13]
 80181ce:	7a9b      	ldrb	r3, [r3, #10]
 80181d0:	0052      	lsls	r2, r2, #1
 80181d2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80181d6:	4313      	orrs	r3, r2
 80181d8:	bf0c      	ite	eq
 80181da:	2301      	moveq	r3, #1
 80181dc:	2300      	movne	r3, #0
 80181de:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80181e2:	e7dc      	b.n	801819e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80181e4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80181e8:	b29b      	uxth	r3, r3
 80181ea:	2b7f      	cmp	r3, #127	; 0x7f
 80181ec:	d804      	bhi.n	80181f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80181ee:	4639      	mov	r1, r7
 80181f0:	4620      	mov	r0, r4
 80181f2:	f7ff fd17 	bl	8017c24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80181f6:	e7e6      	b.n	80181c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80181f8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80181fc:	2b00      	cmp	r3, #0
 80181fe:	d0e3      	beq.n	80181c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018200:	f640 1302 	movw	r3, #2306	; 0x902
 8018204:	429d      	cmp	r5, r3
 8018206:	d1df      	bne.n	80181c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018208:	4601      	mov	r1, r0
 801820a:	4620      	mov	r0, r4
 801820c:	f7ff fcdb 	bl	8017bc6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018210:	e7d9      	b.n	80181c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018212 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018212:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018216:	461e      	mov	r6, r3
 8018218:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801821a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801821e:	4604      	mov	r4, r0
 8018220:	4617      	mov	r7, r2
 8018222:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018226:	f7f0 ff33 	bl	8009090 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801822a:	4605      	mov	r5, r0
 801822c:	b918      	cbnz	r0, 8018236 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801822e:	6030      	str	r0, [r6, #0]
 8018230:	4628      	mov	r0, r5
 8018232:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018236:	683b      	ldr	r3, [r7, #0]
 8018238:	4601      	mov	r1, r0
 801823a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801823e:	4638      	mov	r0, r7
 8018240:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018244:	47c8      	blx	r9
 8018246:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801824a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801824e:	4602      	mov	r2, r0
 8018250:	6030      	str	r0, [r6, #0]
 8018252:	d213      	bcs.n	801827c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018254:	4643      	mov	r3, r8
 8018256:	4639      	mov	r1, r7
 8018258:	4620      	mov	r0, r4
 801825a:	f7ff fdef 	bl	8017e3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801825e:	6030      	str	r0, [r6, #0]
 8018260:	6833      	ldr	r3, [r6, #0]
 8018262:	b143      	cbz	r3, 8018276 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018264:	7b5a      	ldrb	r2, [r3, #13]
 8018266:	7a9b      	ldrb	r3, [r3, #10]
 8018268:	0052      	lsls	r2, r2, #1
 801826a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801826e:	4313      	orrs	r3, r2
 8018270:	bf0c      	ite	eq
 8018272:	2301      	moveq	r3, #1
 8018274:	2300      	movne	r3, #0
 8018276:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801827a:	e7d9      	b.n	8018230 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801827c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018280:	b29b      	uxth	r3, r3
 8018282:	2b7f      	cmp	r3, #127	; 0x7f
 8018284:	d804      	bhi.n	8018290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018286:	4639      	mov	r1, r7
 8018288:	4620      	mov	r0, r4
 801828a:	f7ff fccb 	bl	8017c24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801828e:	e7e6      	b.n	801825e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018290:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018294:	2b00      	cmp	r3, #0
 8018296:	d0e3      	beq.n	8018260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018298:	f640 1302 	movw	r3, #2306	; 0x902
 801829c:	429d      	cmp	r5, r3
 801829e:	d1df      	bne.n	8018260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80182a0:	4601      	mov	r1, r0
 80182a2:	4620      	mov	r0, r4
 80182a4:	f7ff fc8f 	bl	8017bc6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80182a8:	e7d9      	b.n	801825e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080182aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80182aa:	b510      	push	{r4, lr}
 80182ac:	4604      	mov	r4, r0
 80182ae:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80182b2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80182b4:	b1f1      	cbz	r1, 80182f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80182b6:	2b0a      	cmp	r3, #10
 80182b8:	d02f      	beq.n	801831a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80182ba:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80182bc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80182c0:	3901      	subs	r1, #1
 80182c2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80182c4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80182c8:	1c51      	adds	r1, r2, #1
 80182ca:	b289      	uxth	r1, r1
 80182cc:	2901      	cmp	r1, #1
 80182ce:	bf84      	itt	hi
 80182d0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80182d4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80182d6:	f103 0201 	add.w	r2, r3, #1
 80182da:	8722      	strh	r2, [r4, #56]	; 0x38
 80182dc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80182de:	bf98      	it	ls
 80182e0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80182e2:	4413      	add	r3, r2
 80182e4:	b29b      	uxth	r3, r3
 80182e6:	2b09      	cmp	r3, #9
 80182e8:	bf88      	it	hi
 80182ea:	3b0a      	subhi	r3, #10
 80182ec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80182f0:	8458      	strh	r0, [r3, #34]	; 0x22
 80182f2:	e7dc      	b.n	80182ae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80182f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80182f6:	2b0a      	cmp	r3, #10
 80182f8:	d00f      	beq.n	801831a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80182fa:	4620      	mov	r0, r4
 80182fc:	f7ff fc11 	bl	8017b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018300:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018302:	1c5a      	adds	r2, r3, #1
 8018304:	8722      	strh	r2, [r4, #56]	; 0x38
 8018306:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018308:	4413      	add	r3, r2
 801830a:	b29b      	uxth	r3, r3
 801830c:	2b09      	cmp	r3, #9
 801830e:	bf88      	it	hi
 8018310:	3b0a      	subhi	r3, #10
 8018312:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018316:	8458      	strh	r0, [r3, #34]	; 0x22
 8018318:	e7ec      	b.n	80182f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801831a:	bd10      	pop	{r4, pc}

0801831c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801831c:	b538      	push	{r3, r4, r5, lr}
 801831e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018320:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018324:	4604      	mov	r4, r0
 8018326:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018328:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801832a:	3a01      	subs	r2, #1
 801832c:	8702      	strh	r2, [r0, #56]	; 0x38
 801832e:	1c5a      	adds	r2, r3, #1
 8018330:	b292      	uxth	r2, r2
 8018332:	2a09      	cmp	r2, #9
 8018334:	bf86      	itte	hi
 8018336:	3b09      	subhi	r3, #9
 8018338:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801833a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801833c:	f7ff ffb5 	bl	80182aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018340:	8c23      	ldrh	r3, [r4, #32]
 8018342:	2b01      	cmp	r3, #1
 8018344:	bf9c      	itt	ls
 8018346:	3301      	addls	r3, #1
 8018348:	8423      	strhls	r3, [r4, #32]
 801834a:	8be3      	ldrh	r3, [r4, #30]
 801834c:	b90b      	cbnz	r3, 8018352 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801834e:	2302      	movs	r3, #2
 8018350:	83e3      	strh	r3, [r4, #30]
 8018352:	8be3      	ldrh	r3, [r4, #30]
 8018354:	3b01      	subs	r3, #1
 8018356:	b29b      	uxth	r3, r3
 8018358:	83e3      	strh	r3, [r4, #30]
 801835a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801835e:	4628      	mov	r0, r5
 8018360:	8365      	strh	r5, [r4, #26]
 8018362:	bd38      	pop	{r3, r4, r5, pc}

08018364 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018364:	428a      	cmp	r2, r1
 8018366:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801836a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801836c:	d931      	bls.n	80183d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801836e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018370:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018374:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018378:	19ee      	adds	r6, r5, r7
 801837a:	1a54      	subs	r4, r2, r1
 801837c:	3e01      	subs	r6, #1
 801837e:	fa1f fe84 	uxth.w	lr, r4
 8018382:	b2b4      	uxth	r4, r6
 8018384:	eba4 090e 	sub.w	r9, r4, lr
 8018388:	fa1f f989 	uxth.w	r9, r9
 801838c:	2c09      	cmp	r4, #9
 801838e:	4626      	mov	r6, r4
 8018390:	bf88      	it	hi
 8018392:	f1a4 060a 	subhi.w	r6, r4, #10
 8018396:	f1bc 0f00 	cmp.w	ip, #0
 801839a:	bf08      	it	eq
 801839c:	f04f 0c02 	moveq.w	ip, #2
 80183a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80183a4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80183a8:	fa1f fc8c 	uxth.w	ip, ip
 80183ac:	3c01      	subs	r4, #1
 80183ae:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80183b2:	b2a4      	uxth	r4, r4
 80183b4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80183b8:	454c      	cmp	r4, r9
 80183ba:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80183be:	d1e5      	bne.n	801838c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80183c0:	eba5 050e 	sub.w	r5, r5, lr
 80183c4:	eb0e 0408 	add.w	r4, lr, r8
 80183c8:	8705      	strh	r5, [r0, #56]	; 0x38
 80183ca:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80183ce:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80183d2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80183d4:	1a64      	subs	r4, r4, r1
 80183d6:	4439      	add	r1, r7
 80183d8:	b289      	uxth	r1, r1
 80183da:	2909      	cmp	r1, #9
 80183dc:	bf88      	it	hi
 80183de:	390a      	subhi	r1, #10
 80183e0:	8704      	strh	r4, [r0, #56]	; 0x38
 80183e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80183e4:	250a      	movs	r5, #10
 80183e6:	b18a      	cbz	r2, 801840c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80183e8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80183ea:	3a01      	subs	r2, #1
 80183ec:	b292      	uxth	r2, r2
 80183ee:	3101      	adds	r1, #1
 80183f0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80183f4:	8701      	strh	r1, [r0, #56]	; 0x38
 80183f6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80183f8:	b901      	cbnz	r1, 80183fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80183fa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80183fc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80183fe:	3901      	subs	r1, #1
 8018400:	b289      	uxth	r1, r1
 8018402:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018404:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018408:	844c      	strh	r4, [r1, #34]	; 0x22
 801840a:	e7ec      	b.n	80183e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801840c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018410:	f7ff bf4b 	b.w	80182aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018414 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018414:	b570      	push	{r4, r5, r6, lr}
 8018416:	2500      	movs	r5, #0
 8018418:	4295      	cmp	r5, r2
 801841a:	d011      	beq.n	8018440 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801841c:	8bc4      	ldrh	r4, [r0, #30]
 801841e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018422:	4414      	add	r4, r2
 8018424:	3c01      	subs	r4, #1
 8018426:	1b64      	subs	r4, r4, r5
 8018428:	b2a4      	uxth	r4, r4
 801842a:	2c01      	cmp	r4, #1
 801842c:	bf88      	it	hi
 801842e:	3c02      	subhi	r4, #2
 8018430:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018434:	8b64      	ldrh	r4, [r4, #26]
 8018436:	42b4      	cmp	r4, r6
 8018438:	d117      	bne.n	801846a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801843a:	3501      	adds	r5, #1
 801843c:	b2ad      	uxth	r5, r5
 801843e:	e7eb      	b.n	8018418 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018440:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018444:	2400      	movs	r4, #0
 8018446:	4413      	add	r3, r2
 8018448:	b2a2      	uxth	r2, r4
 801844a:	429a      	cmp	r2, r3
 801844c:	da0f      	bge.n	801846e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801844e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018450:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018454:	4432      	add	r2, r6
 8018456:	b292      	uxth	r2, r2
 8018458:	2a09      	cmp	r2, #9
 801845a:	bf88      	it	hi
 801845c:	3a0a      	subhi	r2, #10
 801845e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018462:	3401      	adds	r4, #1
 8018464:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018466:	42aa      	cmp	r2, r5
 8018468:	d0ee      	beq.n	8018448 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801846a:	2000      	movs	r0, #0
 801846c:	bd70      	pop	{r4, r5, r6, pc}
 801846e:	2001      	movs	r0, #1
 8018470:	e7fc      	b.n	801846c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018472 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018472:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018476:	4605      	mov	r5, r0
 8018478:	4616      	mov	r6, r2
 801847a:	1c8c      	adds	r4, r1, #2
 801847c:	8809      	ldrh	r1, [r1, #0]
 801847e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018482:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018486:	42b3      	cmp	r3, r6
 8018488:	d124      	bne.n	80184d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801848a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801848e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018492:	f001 070f 	and.w	r7, r1, #15
 8018496:	f8cd 8000 	str.w	r8, [sp]
 801849a:	464b      	mov	r3, r9
 801849c:	4652      	mov	r2, sl
 801849e:	4621      	mov	r1, r4
 80184a0:	4628      	mov	r0, r5
 80184a2:	f7ff ffb7 	bl	8018414 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80184a6:	4683      	mov	fp, r0
 80184a8:	b168      	cbz	r0, 80184c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80184aa:	eb0a 0109 	add.w	r1, sl, r9
 80184ae:	4441      	add	r1, r8
 80184b0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80184b4:	463a      	mov	r2, r7
 80184b6:	4649      	mov	r1, r9
 80184b8:	4628      	mov	r0, r5
 80184ba:	f7ff ff53 	bl	8018364 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80184be:	4658      	mov	r0, fp
 80184c0:	b003      	add	sp, #12
 80184c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184c6:	eb07 010a 	add.w	r1, r7, sl
 80184ca:	4449      	add	r1, r9
 80184cc:	4441      	add	r1, r8
 80184ce:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80184d2:	e7d2      	b.n	801847a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80184d4:	f04f 0b00 	mov.w	fp, #0
 80184d8:	e7f1      	b.n	80184be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080184da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80184da:	b570      	push	{r4, r5, r6, lr}
 80184dc:	8810      	ldrh	r0, [r2, #0]
 80184de:	4298      	cmp	r0, r3
 80184e0:	d817      	bhi.n	8018512 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80184e2:	1e48      	subs	r0, r1, #1
 80184e4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80184e8:	4298      	cmp	r0, r3
 80184ea:	d312      	bcc.n	8018512 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80184ec:	2400      	movs	r4, #0
 80184ee:	428c      	cmp	r4, r1
 80184f0:	d20f      	bcs.n	8018512 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80184f2:	1860      	adds	r0, r4, r1
 80184f4:	1040      	asrs	r0, r0, #1
 80184f6:	0085      	lsls	r5, r0, #2
 80184f8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80184fc:	42b3      	cmp	r3, r6
 80184fe:	d902      	bls.n	8018506 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018500:	3001      	adds	r0, #1
 8018502:	b284      	uxth	r4, r0
 8018504:	e7f3      	b.n	80184ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018506:	d201      	bcs.n	801850c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018508:	b281      	uxth	r1, r0
 801850a:	e7f0      	b.n	80184ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801850c:	442a      	add	r2, r5
 801850e:	8850      	ldrh	r0, [r2, #2]
 8018510:	bd70      	pop	{r4, r5, r6, pc}
 8018512:	2000      	movs	r0, #0
 8018514:	e7fc      	b.n	8018510 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018516 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018516:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801851a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801851c:	886f      	ldrh	r7, [r5, #2]
 801851e:	4604      	mov	r4, r0
 8018520:	087f      	lsrs	r7, r7, #1
 8018522:	260b      	movs	r6, #11
 8018524:	3e01      	subs	r6, #1
 8018526:	d013      	beq.n	8018550 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018528:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801852a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801852e:	462a      	mov	r2, r5
 8018530:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018534:	4639      	mov	r1, r7
 8018536:	4643      	mov	r3, r8
 8018538:	4620      	mov	r0, r4
 801853a:	f7ff ffce 	bl	80184da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801853e:	b138      	cbz	r0, 8018550 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018540:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018544:	4642      	mov	r2, r8
 8018546:	4620      	mov	r0, r4
 8018548:	f7ff ff93 	bl	8018472 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801854c:	2800      	cmp	r0, #0
 801854e:	d1e9      	bne.n	8018524 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018554:	b570      	push	{r4, r5, r6, lr}
 8018556:	694a      	ldr	r2, [r1, #20]
 8018558:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801855a:	684b      	ldr	r3, [r1, #4]
 801855c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801855e:	1b54      	subs	r4, r2, r5
 8018560:	f000 8106 	beq.w	8018770 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018564:	1b9b      	subs	r3, r3, r6
 8018566:	d003      	beq.n	8018570 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018568:	4363      	muls	r3, r4
 801856a:	2210      	movs	r2, #16
 801856c:	fb93 f3f2 	sdiv	r3, r3, r2
 8018570:	680c      	ldr	r4, [r1, #0]
 8018572:	698a      	ldr	r2, [r1, #24]
 8018574:	1b65      	subs	r5, r4, r5
 8018576:	f000 80fd 	beq.w	8018774 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801857a:	1b92      	subs	r2, r2, r6
 801857c:	d003      	beq.n	8018586 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801857e:	436a      	muls	r2, r5
 8018580:	2410      	movs	r4, #16
 8018582:	fb92 f2f4 	sdiv	r2, r2, r4
 8018586:	1a9b      	subs	r3, r3, r2
 8018588:	ee07 3a90 	vmov	s15, r3
 801858c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80187b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018590:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018594:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018598:	ee67 7a84 	vmul.f32	s15, s15, s8
 801859c:	460a      	mov	r2, r1
 801859e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80185a2:	4603      	mov	r3, r0
 80185a4:	f100 040c 	add.w	r4, r0, #12
 80185a8:	eeb1 6a43 	vneg.f32	s12, s6
 80185ac:	edd2 7a02 	vldr	s15, [r2, #8]
 80185b0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80185b4:	3214      	adds	r2, #20
 80185b6:	ece3 6a01 	vstmia	r3!, {s13}
 80185ba:	ed52 7a02 	vldr	s15, [r2, #-8]
 80185be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80185c2:	429c      	cmp	r4, r3
 80185c4:	edc3 7a02 	vstr	s15, [r3, #8]
 80185c8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80185cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80185d0:	edc3 7a05 	vstr	s15, [r3, #20]
 80185d4:	d1ea      	bne.n	80185ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80185d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80185d8:	698b      	ldr	r3, [r1, #24]
 80185da:	edd0 4a02 	vldr	s9, [r0, #8]
 80185de:	edd0 3a00 	vldr	s7, [r0]
 80185e2:	edd0 6a01 	vldr	s13, [r0, #4]
 80185e6:	ed90 5a05 	vldr	s10, [r0, #20]
 80185ea:	ed90 2a03 	vldr	s4, [r0, #12]
 80185ee:	edd0 5a04 	vldr	s11, [r0, #16]
 80185f2:	ed90 1a07 	vldr	s2, [r0, #28]
 80185f6:	edd0 2a06 	vldr	s5, [r0, #24]
 80185fa:	1a9b      	subs	r3, r3, r2
 80185fc:	ee07 3a90 	vmov	s15, r3
 8018600:	684b      	ldr	r3, [r1, #4]
 8018602:	1a9b      	subs	r3, r3, r2
 8018604:	ee07 3a10 	vmov	s14, r3
 8018608:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801860c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018610:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018614:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018618:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801861c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018620:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018624:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018628:	eee6 7a87 	vfma.f32	s15, s13, s14
 801862c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018630:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018634:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018638:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801863a:	694a      	ldr	r2, [r1, #20]
 801863c:	1b13      	subs	r3, r2, r4
 801863e:	ee07 3a10 	vmov	s14, r3
 8018642:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018646:	680b      	ldr	r3, [r1, #0]
 8018648:	ee27 7a04 	vmul.f32	s14, s14, s8
 801864c:	1b1b      	subs	r3, r3, r4
 801864e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018652:	ee07 3a10 	vmov	s14, r3
 8018656:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801865a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801865e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018662:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018666:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801866a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801866c:	698b      	ldr	r3, [r1, #24]
 801866e:	1a9b      	subs	r3, r3, r2
 8018670:	ee06 3a90 	vmov	s13, r3
 8018674:	684b      	ldr	r3, [r1, #4]
 8018676:	1a9b      	subs	r3, r3, r2
 8018678:	ee07 3a10 	vmov	s14, r3
 801867c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018680:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018684:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018688:	ee27 7a04 	vmul.f32	s14, s14, s8
 801868c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018690:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018694:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018698:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801869c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801869e:	694a      	ldr	r2, [r1, #20]
 80186a0:	1b13      	subs	r3, r2, r4
 80186a2:	ee07 3a10 	vmov	s14, r3
 80186a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186aa:	680b      	ldr	r3, [r1, #0]
 80186ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 80186b0:	1b1b      	subs	r3, r3, r4
 80186b2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80186b6:	ee07 3a10 	vmov	s14, r3
 80186ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186be:	ee27 7a04 	vmul.f32	s14, s14, s8
 80186c2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80186c6:	edd0 5a08 	vldr	s11, [r0, #32]
 80186ca:	ee25 5a06 	vmul.f32	s10, s10, s12
 80186ce:	ee31 1a65 	vsub.f32	s2, s2, s11
 80186d2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80186d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80186d8:	698b      	ldr	r3, [r1, #24]
 80186da:	1a9b      	subs	r3, r3, r2
 80186dc:	ee07 3a10 	vmov	s14, r3
 80186e0:	684b      	ldr	r3, [r1, #4]
 80186e2:	1a9b      	subs	r3, r3, r2
 80186e4:	ee01 3a90 	vmov	s3, r3
 80186e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80186ec:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80186f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80186f4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80186f8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80186fc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018700:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018704:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018708:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801870c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801870e:	694a      	ldr	r2, [r1, #20]
 8018710:	1b13      	subs	r3, r2, r4
 8018712:	ee03 3a10 	vmov	s6, r3
 8018716:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801871a:	680b      	ldr	r3, [r1, #0]
 801871c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018720:	1b1b      	subs	r3, r3, r4
 8018722:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018726:	ee03 3a10 	vmov	s6, r3
 801872a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801872e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018732:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018736:	ee25 6a86 	vmul.f32	s12, s11, s12
 801873a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801873e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018742:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018746:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801874a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801874e:	dd13      	ble.n	8018778 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018750:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018754:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018758:	63c3      	str	r3, [r0, #60]	; 0x3c
 801875a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801875e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018766:	dd15      	ble.n	8018794 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018768:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801876c:	6403      	str	r3, [r0, #64]	; 0x40
 801876e:	bd70      	pop	{r4, r5, r6, pc}
 8018770:	4623      	mov	r3, r4
 8018772:	e6fd      	b.n	8018570 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018774:	462a      	mov	r2, r5
 8018776:	e706      	b.n	8018586 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018778:	d502      	bpl.n	8018780 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801877a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801877e:	e7e9      	b.n	8018754 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018780:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018784:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018788:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801878c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018790:	dade      	bge.n	8018750 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018792:	e7f2      	b.n	801877a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018794:	d502      	bpl.n	801879c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018796:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801879a:	e7e7      	b.n	801876c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801879c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80187a0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80187a4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80187a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187ac:	dadc      	bge.n	8018768 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80187ae:	e7f2      	b.n	8018796 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80187b0:	3d800000 	.word	0x3d800000

080187b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80187b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80187b8:	2714      	movs	r7, #20
 80187ba:	435f      	muls	r7, r3
 80187bc:	eb02 0c07 	add.w	ip, r2, r7
 80187c0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80187c4:	f115 0e0f 	adds.w	lr, r5, #15
 80187c8:	f100 80a2 	bmi.w	8018910 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80187cc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80187d0:	9c08      	ldr	r4, [sp, #32]
 80187d2:	f8c0 e014 	str.w	lr, [r0, #20]
 80187d6:	2614      	movs	r6, #20
 80187d8:	4366      	muls	r6, r4
 80187da:	eb02 0806 	add.w	r8, r2, r6
 80187de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80187e2:	f115 040f 	adds.w	r4, r5, #15
 80187e6:	f100 809f 	bmi.w	8018928 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80187ea:	1124      	asrs	r4, r4, #4
 80187ec:	eba4 040e 	sub.w	r4, r4, lr
 80187f0:	6184      	str	r4, [r0, #24]
 80187f2:	2c00      	cmp	r4, #0
 80187f4:	f000 808a 	beq.w	801890c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80187f8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80187fc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018800:	5995      	ldr	r5, [r2, r6]
 8018802:	eba4 0809 	sub.w	r8, r4, r9
 8018806:	59d4      	ldr	r4, [r2, r7]
 8018808:	eba5 0a04 	sub.w	sl, r5, r4
 801880c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018810:	fb0e fe05 	mul.w	lr, lr, r5
 8018814:	fb0a ee19 	mls	lr, sl, r9, lr
 8018818:	fb08 e404 	mla	r4, r8, r4, lr
 801881c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018820:	3c01      	subs	r4, #1
 8018822:	19a4      	adds	r4, r4, r6
 8018824:	f100 808c 	bmi.w	8018940 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018828:	fb94 fef6 	sdiv	lr, r4, r6
 801882c:	f8c0 e000 	str.w	lr, [r0]
 8018830:	fb06 441e 	mls	r4, r6, lr, r4
 8018834:	6104      	str	r4, [r0, #16]
 8018836:	2d00      	cmp	r5, #0
 8018838:	f2c0 8095 	blt.w	8018966 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801883c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018840:	6044      	str	r4, [r0, #4]
 8018842:	fb06 5514 	mls	r5, r6, r4, r5
 8018846:	6085      	str	r5, [r0, #8]
 8018848:	60c6      	str	r6, [r0, #12]
 801884a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801884e:	6945      	ldr	r5, [r0, #20]
 8018850:	59d2      	ldr	r2, [r2, r7]
 8018852:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018988 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018856:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801885a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801885e:	ee07 4a10 	vmov	s14, r4
 8018862:	6804      	ldr	r4, [r0, #0]
 8018864:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018868:	ee07 2a90 	vmov	s15, r2
 801886c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018870:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018874:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018878:	ee27 7a26 	vmul.f32	s14, s14, s13
 801887c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018880:	edd3 6a00 	vldr	s13, [r3]
 8018884:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018888:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801888c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018890:	edc0 6a07 	vstr	s13, [r0, #28]
 8018894:	edd0 6a01 	vldr	s13, [r0, #4]
 8018898:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801889c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80188a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80188a4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80188a8:	ed80 6a08 	vstr	s12, [r0, #32]
 80188ac:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80188ae:	6242      	str	r2, [r0, #36]	; 0x24
 80188b0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80188b4:	ed93 6a03 	vldr	s12, [r3, #12]
 80188b8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80188bc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80188c0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80188c4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80188c8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80188cc:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80188d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80188d4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80188d8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80188da:	6302      	str	r2, [r0, #48]	; 0x30
 80188dc:	ed93 6a06 	vldr	s12, [r3, #24]
 80188e0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80188e4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80188e8:	eeb0 7a46 	vmov.f32	s14, s12
 80188ec:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80188f0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80188f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80188f8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80188fc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018900:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018904:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018908:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801890a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801890c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018910:	f1c5 0501 	rsb	r5, r5, #1
 8018914:	f015 050f 	ands.w	r5, r5, #15
 8018918:	bf18      	it	ne
 801891a:	2501      	movne	r5, #1
 801891c:	2410      	movs	r4, #16
 801891e:	fb9e fef4 	sdiv	lr, lr, r4
 8018922:	ebae 0e05 	sub.w	lr, lr, r5
 8018926:	e753      	b.n	80187d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018928:	f1c5 0501 	rsb	r5, r5, #1
 801892c:	f015 050f 	ands.w	r5, r5, #15
 8018930:	bf18      	it	ne
 8018932:	2501      	movne	r5, #1
 8018934:	f04f 0910 	mov.w	r9, #16
 8018938:	fb94 f4f9 	sdiv	r4, r4, r9
 801893c:	1b64      	subs	r4, r4, r5
 801893e:	e755      	b.n	80187ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018940:	4264      	negs	r4, r4
 8018942:	fb94 fef6 	sdiv	lr, r4, r6
 8018946:	f1ce 0800 	rsb	r8, lr, #0
 801894a:	fb06 441e 	mls	r4, r6, lr, r4
 801894e:	f8c0 8000 	str.w	r8, [r0]
 8018952:	6104      	str	r4, [r0, #16]
 8018954:	2c00      	cmp	r4, #0
 8018956:	f43f af6e 	beq.w	8018836 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801895a:	ea6f 0e0e 	mvn.w	lr, lr
 801895e:	f8c0 e000 	str.w	lr, [r0]
 8018962:	1b34      	subs	r4, r6, r4
 8018964:	e766      	b.n	8018834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018966:	426d      	negs	r5, r5
 8018968:	fb95 f4f6 	sdiv	r4, r5, r6
 801896c:	f1c4 0e00 	rsb	lr, r4, #0
 8018970:	fb06 5514 	mls	r5, r6, r4, r5
 8018974:	f8c0 e004 	str.w	lr, [r0, #4]
 8018978:	6085      	str	r5, [r0, #8]
 801897a:	2d00      	cmp	r5, #0
 801897c:	f43f af64 	beq.w	8018848 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018980:	43e4      	mvns	r4, r4
 8018982:	6044      	str	r4, [r0, #4]
 8018984:	1b75      	subs	r5, r6, r5
 8018986:	e75e      	b.n	8018846 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018988:	3d800000 	.word	0x3d800000

0801898c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801898c:	4602      	mov	r2, r0
 801898e:	b148      	cbz	r0, 80189a4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018990:	2300      	movs	r3, #0
 8018992:	b298      	uxth	r0, r3
 8018994:	3301      	adds	r3, #1
 8018996:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801899a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801899e:	2900      	cmp	r1, #0
 80189a0:	d1f7      	bne.n	8018992 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80189a2:	4770      	bx	lr
 80189a4:	4770      	bx	lr

080189a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80189a6:	b530      	push	{r4, r5, lr}
 80189a8:	4604      	mov	r4, r0
 80189aa:	b159      	cbz	r1, 80189c4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80189ac:	b148      	cbz	r0, 80189c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80189ae:	2300      	movs	r3, #0
 80189b0:	b298      	uxth	r0, r3
 80189b2:	4282      	cmp	r2, r0
 80189b4:	d905      	bls.n	80189c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80189b6:	5ccd      	ldrb	r5, [r1, r3]
 80189b8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80189bc:	3301      	adds	r3, #1
 80189be:	2d00      	cmp	r5, #0
 80189c0:	d1f6      	bne.n	80189b0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80189c2:	bd30      	pop	{r4, r5, pc}
 80189c4:	4608      	mov	r0, r1
 80189c6:	e7fc      	b.n	80189c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080189c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80189c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80189ca:	b08b      	sub	sp, #44	; 0x2c
 80189cc:	468c      	mov	ip, r1
 80189ce:	2100      	movs	r1, #0
 80189d0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80189d4:	4604      	mov	r4, r0
 80189d6:	261f      	movs	r6, #31
 80189d8:	af01      	add	r7, sp, #4
 80189da:	fb94 fef3 	sdiv	lr, r4, r3
 80189de:	fb03 441e 	mls	r4, r3, lr, r4
 80189e2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80189e6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80189ea:	b2ec      	uxtb	r4, r5
 80189ec:	2d09      	cmp	r5, #9
 80189ee:	bfd4      	ite	le
 80189f0:	3430      	addle	r4, #48	; 0x30
 80189f2:	3457      	addgt	r4, #87	; 0x57
 80189f4:	b2e4      	uxtb	r4, r4
 80189f6:	55bc      	strb	r4, [r7, r6]
 80189f8:	4674      	mov	r4, lr
 80189fa:	1e71      	subs	r1, r6, #1
 80189fc:	b974      	cbnz	r4, 8018a1c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80189fe:	2800      	cmp	r0, #0
 8018a00:	da05      	bge.n	8018a0e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018a02:	ab0a      	add	r3, sp, #40	; 0x28
 8018a04:	4419      	add	r1, r3
 8018a06:	232d      	movs	r3, #45	; 0x2d
 8018a08:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018a0c:	1eb1      	subs	r1, r6, #2
 8018a0e:	3101      	adds	r1, #1
 8018a10:	4439      	add	r1, r7
 8018a12:	4660      	mov	r0, ip
 8018a14:	f7ff ffc7 	bl	80189a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018a18:	b00b      	add	sp, #44	; 0x2c
 8018a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018a1c:	460e      	mov	r6, r1
 8018a1e:	e7dc      	b.n	80189da <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018a20 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a22:	b08b      	sub	sp, #44	; 0x2c
 8018a24:	468c      	mov	ip, r1
 8018a26:	2100      	movs	r1, #0
 8018a28:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018a2c:	ae01      	add	r6, sp, #4
 8018a2e:	211f      	movs	r1, #31
 8018a30:	fbb0 f7f3 	udiv	r7, r0, r3
 8018a34:	fb03 0517 	mls	r5, r3, r7, r0
 8018a38:	b2ec      	uxtb	r4, r5
 8018a3a:	2d09      	cmp	r5, #9
 8018a3c:	bfd4      	ite	le
 8018a3e:	3430      	addle	r4, #48	; 0x30
 8018a40:	3457      	addgt	r4, #87	; 0x57
 8018a42:	b2e4      	uxtb	r4, r4
 8018a44:	558c      	strb	r4, [r1, r6]
 8018a46:	4638      	mov	r0, r7
 8018a48:	1e4c      	subs	r4, r1, #1
 8018a4a:	b92f      	cbnz	r7, 8018a58 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8018a4c:	4431      	add	r1, r6
 8018a4e:	4660      	mov	r0, ip
 8018a50:	f7ff ffa9 	bl	80189a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018a54:	b00b      	add	sp, #44	; 0x2c
 8018a56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018a58:	4621      	mov	r1, r4
 8018a5a:	e7e9      	b.n	8018a30 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08018a5c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8018a5c:	b410      	push	{r4}
 8018a5e:	b131      	cbz	r1, 8018a6e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018a60:	1e9c      	subs	r4, r3, #2
 8018a62:	2c22      	cmp	r4, #34	; 0x22
 8018a64:	d803      	bhi.n	8018a6e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018a66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018a6a:	f7ff bfad 	b.w	80189c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018a6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018a72:	4770      	bx	lr

08018a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a78:	4691      	mov	r9, r2
 8018a7a:	b085      	sub	sp, #20
 8018a7c:	6802      	ldr	r2, [r0, #0]
 8018a7e:	9201      	str	r2, [sp, #4]
 8018a80:	4688      	mov	r8, r1
 8018a82:	4683      	mov	fp, r0
 8018a84:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018a88:	9103      	str	r1, [sp, #12]
 8018a8a:	4610      	mov	r0, r2
 8018a8c:	461c      	mov	r4, r3
 8018a8e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018a92:	9302      	str	r3, [sp, #8]
 8018a94:	f7ff ff7a 	bl	801898c <_ZN8touchgfx7Unicode6strlenEPKt>
 8018a98:	f1b8 0f00 	cmp.w	r8, #0
 8018a9c:	bf0c      	ite	eq
 8018a9e:	4684      	moveq	ip, r0
 8018aa0:	f100 0c01 	addne.w	ip, r0, #1
 8018aa4:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018aa8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018aac:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018aae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018ab0:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018ab4:	9903      	ldr	r1, [sp, #12]
 8018ab6:	fa1f fc8c 	uxth.w	ip, ip
 8018aba:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018abe:	d041      	beq.n	8018b44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018ac0:	d834      	bhi.n	8018b2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018ac2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018ac6:	d059      	beq.n	8018b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018ac8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018acc:	d03a      	beq.n	8018b44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018ace:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018ad2:	d034      	beq.n	8018b3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018ad4:	2400      	movs	r4, #0
 8018ad6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018ada:	3a01      	subs	r2, #1
 8018adc:	b169      	cbz	r1, 8018afa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018ade:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018ae0:	458c      	cmp	ip, r1
 8018ae2:	da09      	bge.n	8018af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018ae4:	eba1 010c 	sub.w	r1, r1, ip
 8018ae8:	b289      	uxth	r1, r1
 8018aea:	b933      	cbnz	r3, 8018afa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018aec:	2e00      	cmp	r6, #0
 8018aee:	d051      	beq.n	8018b94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018af0:	2800      	cmp	r0, #0
 8018af2:	d04f      	beq.n	8018b94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018af4:	440c      	add	r4, r1
 8018af6:	b2a4      	uxth	r4, r4
 8018af8:	2100      	movs	r1, #0
 8018afa:	682b      	ldr	r3, [r5, #0]
 8018afc:	4293      	cmp	r3, r2
 8018afe:	da07      	bge.n	8018b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018b00:	f1b8 0f00 	cmp.w	r8, #0
 8018b04:	d004      	beq.n	8018b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018b06:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018b0a:	682b      	ldr	r3, [r5, #0]
 8018b0c:	3301      	adds	r3, #1
 8018b0e:	602b      	str	r3, [r5, #0]
 8018b10:	2730      	movs	r7, #48	; 0x30
 8018b12:	2c00      	cmp	r4, #0
 8018b14:	d04e      	beq.n	8018bb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018b16:	682e      	ldr	r6, [r5, #0]
 8018b18:	3c01      	subs	r4, #1
 8018b1a:	42b2      	cmp	r2, r6
 8018b1c:	b2a4      	uxth	r4, r4
 8018b1e:	dd49      	ble.n	8018bb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018b20:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018b24:	682b      	ldr	r3, [r5, #0]
 8018b26:	3301      	adds	r3, #1
 8018b28:	602b      	str	r3, [r5, #0]
 8018b2a:	e7f2      	b.n	8018b12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018b2c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018b30:	d01d      	beq.n	8018b6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018b32:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018b36:	d002      	beq.n	8018b3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018b38:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018b3c:	e7c9      	b.n	8018ad2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018b3e:	4684      	mov	ip, r0
 8018b40:	f04f 0800 	mov.w	r8, #0
 8018b44:	2c00      	cmp	r4, #0
 8018b46:	d0c6      	beq.n	8018ad6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b48:	b947      	cbnz	r7, 8018b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018b4a:	2801      	cmp	r0, #1
 8018b4c:	d106      	bne.n	8018b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018b4e:	8814      	ldrh	r4, [r2, #0]
 8018b50:	2c30      	cmp	r4, #48	; 0x30
 8018b52:	bf02      	ittt	eq
 8018b54:	3202      	addeq	r2, #2
 8018b56:	f8cb 2000 	streq.w	r2, [fp]
 8018b5a:	4638      	moveq	r0, r7
 8018b5c:	45bc      	cmp	ip, r7
 8018b5e:	da14      	bge.n	8018b8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018b60:	b2bf      	uxth	r7, r7
 8018b62:	eba7 040c 	sub.w	r4, r7, ip
 8018b66:	b2a4      	uxth	r4, r4
 8018b68:	46bc      	mov	ip, r7
 8018b6a:	2600      	movs	r6, #0
 8018b6c:	e7b3      	b.n	8018ad6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b6e:	4684      	mov	ip, r0
 8018b70:	b16c      	cbz	r4, 8018b8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018b72:	42b8      	cmp	r0, r7
 8018b74:	dd00      	ble.n	8018b78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018b76:	b2b8      	uxth	r0, r7
 8018b78:	2400      	movs	r4, #0
 8018b7a:	e003      	b.n	8018b84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018b7c:	f04f 0c01 	mov.w	ip, #1
 8018b80:	2400      	movs	r4, #0
 8018b82:	4660      	mov	r0, ip
 8018b84:	4626      	mov	r6, r4
 8018b86:	46a0      	mov	r8, r4
 8018b88:	e7a5      	b.n	8018ad6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b8a:	2400      	movs	r4, #0
 8018b8c:	e7ed      	b.n	8018b6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018b8e:	4626      	mov	r6, r4
 8018b90:	46a0      	mov	r8, r4
 8018b92:	e7a0      	b.n	8018ad6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b94:	2900      	cmp	r1, #0
 8018b96:	d0b0      	beq.n	8018afa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018b98:	2720      	movs	r7, #32
 8018b9a:	682e      	ldr	r6, [r5, #0]
 8018b9c:	2900      	cmp	r1, #0
 8018b9e:	d0ac      	beq.n	8018afa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018ba0:	3901      	subs	r1, #1
 8018ba2:	4296      	cmp	r6, r2
 8018ba4:	b289      	uxth	r1, r1
 8018ba6:	daa7      	bge.n	8018af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018ba8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018bac:	682b      	ldr	r3, [r5, #0]
 8018bae:	3301      	adds	r3, #1
 8018bb0:	602b      	str	r3, [r5, #0]
 8018bb2:	e7f2      	b.n	8018b9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018bb4:	b188      	cbz	r0, 8018bda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018bb6:	682b      	ldr	r3, [r5, #0]
 8018bb8:	3801      	subs	r0, #1
 8018bba:	429a      	cmp	r2, r3
 8018bbc:	b280      	uxth	r0, r0
 8018bbe:	dd0c      	ble.n	8018bda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018bc0:	f8db 3000 	ldr.w	r3, [fp]
 8018bc4:	1c9c      	adds	r4, r3, #2
 8018bc6:	f8cb 4000 	str.w	r4, [fp]
 8018bca:	881c      	ldrh	r4, [r3, #0]
 8018bcc:	682b      	ldr	r3, [r5, #0]
 8018bce:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018bd2:	682b      	ldr	r3, [r5, #0]
 8018bd4:	3301      	adds	r3, #1
 8018bd6:	602b      	str	r3, [r5, #0]
 8018bd8:	e7ec      	b.n	8018bb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018bda:	2620      	movs	r6, #32
 8018bdc:	b151      	cbz	r1, 8018bf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018bde:	6828      	ldr	r0, [r5, #0]
 8018be0:	3901      	subs	r1, #1
 8018be2:	4282      	cmp	r2, r0
 8018be4:	b289      	uxth	r1, r1
 8018be6:	dd05      	ble.n	8018bf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018be8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018bec:	682b      	ldr	r3, [r5, #0]
 8018bee:	3301      	adds	r3, #1
 8018bf0:	602b      	str	r3, [r5, #0]
 8018bf2:	e7f3      	b.n	8018bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018bf4:	b005      	add	sp, #20
 8018bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018bfa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018bfe:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018c02:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018c06:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018c0a:	2400      	movs	r4, #0
 8018c0c:	8014      	strh	r4, [r2, #0]
 8018c0e:	701c      	strb	r4, [r3, #0]
 8018c10:	f888 4000 	strb.w	r4, [r8]
 8018c14:	f88c 4000 	strb.w	r4, [ip]
 8018c18:	f88e 4000 	strb.w	r4, [lr]
 8018c1c:	703c      	strb	r4, [r7, #0]
 8018c1e:	6804      	ldr	r4, [r0, #0]
 8018c20:	b1a4      	cbz	r4, 8018c4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018c22:	8824      	ldrh	r4, [r4, #0]
 8018c24:	f04f 0901 	mov.w	r9, #1
 8018c28:	b314      	cbz	r4, 8018c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018c2a:	2c2b      	cmp	r4, #43	; 0x2b
 8018c2c:	d001      	beq.n	8018c32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018c2e:	2c20      	cmp	r4, #32
 8018c30:	d110      	bne.n	8018c54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018c32:	8014      	strh	r4, [r2, #0]
 8018c34:	6804      	ldr	r4, [r0, #0]
 8018c36:	b10c      	cbz	r4, 8018c3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018c38:	3402      	adds	r4, #2
 8018c3a:	6004      	str	r4, [r0, #0]
 8018c3c:	680c      	ldr	r4, [r1, #0]
 8018c3e:	b10c      	cbz	r4, 8018c44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018c40:	3401      	adds	r4, #1
 8018c42:	600c      	str	r4, [r1, #0]
 8018c44:	6804      	ldr	r4, [r0, #0]
 8018c46:	b17c      	cbz	r4, 8018c68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018c48:	8824      	ldrh	r4, [r4, #0]
 8018c4a:	e7ed      	b.n	8018c28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018c4c:	680c      	ldr	r4, [r1, #0]
 8018c4e:	b17c      	cbz	r4, 8018c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018c50:	7824      	ldrb	r4, [r4, #0]
 8018c52:	e7e7      	b.n	8018c24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018c54:	2c2d      	cmp	r4, #45	; 0x2d
 8018c56:	d102      	bne.n	8018c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018c58:	f883 9000 	strb.w	r9, [r3]
 8018c5c:	e7ea      	b.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018c5e:	2c23      	cmp	r4, #35	; 0x23
 8018c60:	d107      	bne.n	8018c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018c62:	f888 9000 	strb.w	r9, [r8]
 8018c66:	e7e5      	b.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018c68:	680c      	ldr	r4, [r1, #0]
 8018c6a:	b10c      	cbz	r4, 8018c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018c6c:	7824      	ldrb	r4, [r4, #0]
 8018c6e:	e7db      	b.n	8018c28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018c70:	2400      	movs	r4, #0
 8018c72:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018c76:	2b09      	cmp	r3, #9
 8018c78:	d901      	bls.n	8018c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018c7a:	2c2a      	cmp	r4, #42	; 0x2a
 8018c7c:	d122      	bne.n	8018cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c7e:	2301      	movs	r3, #1
 8018c80:	2c30      	cmp	r4, #48	; 0x30
 8018c82:	f88e 3000 	strb.w	r3, [lr]
 8018c86:	d10d      	bne.n	8018ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018c88:	f88c 3000 	strb.w	r3, [ip]
 8018c8c:	6803      	ldr	r3, [r0, #0]
 8018c8e:	b10b      	cbz	r3, 8018c94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018c90:	3302      	adds	r3, #2
 8018c92:	6003      	str	r3, [r0, #0]
 8018c94:	680b      	ldr	r3, [r1, #0]
 8018c96:	b10b      	cbz	r3, 8018c9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018c98:	3301      	adds	r3, #1
 8018c9a:	600b      	str	r3, [r1, #0]
 8018c9c:	6803      	ldr	r3, [r0, #0]
 8018c9e:	2b00      	cmp	r3, #0
 8018ca0:	d02f      	beq.n	8018d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018ca2:	881c      	ldrh	r4, [r3, #0]
 8018ca4:	2c2a      	cmp	r4, #42	; 0x2a
 8018ca6:	d135      	bne.n	8018d14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018ca8:	f04f 33ff 	mov.w	r3, #4294967295
 8018cac:	6033      	str	r3, [r6, #0]
 8018cae:	6803      	ldr	r3, [r0, #0]
 8018cb0:	b10b      	cbz	r3, 8018cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018cb2:	3302      	adds	r3, #2
 8018cb4:	6003      	str	r3, [r0, #0]
 8018cb6:	680b      	ldr	r3, [r1, #0]
 8018cb8:	b10b      	cbz	r3, 8018cbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018cba:	3301      	adds	r3, #1
 8018cbc:	600b      	str	r3, [r1, #0]
 8018cbe:	6803      	ldr	r3, [r0, #0]
 8018cc0:	b31b      	cbz	r3, 8018d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018cc2:	881c      	ldrh	r4, [r3, #0]
 8018cc4:	2c2e      	cmp	r4, #46	; 0x2e
 8018cc6:	d11a      	bne.n	8018cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018cc8:	2301      	movs	r3, #1
 8018cca:	703b      	strb	r3, [r7, #0]
 8018ccc:	6803      	ldr	r3, [r0, #0]
 8018cce:	b10b      	cbz	r3, 8018cd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018cd0:	3302      	adds	r3, #2
 8018cd2:	6003      	str	r3, [r0, #0]
 8018cd4:	680b      	ldr	r3, [r1, #0]
 8018cd6:	b10b      	cbz	r3, 8018cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018cd8:	3301      	adds	r3, #1
 8018cda:	600b      	str	r3, [r1, #0]
 8018cdc:	6803      	ldr	r3, [r0, #0]
 8018cde:	2b00      	cmp	r3, #0
 8018ce0:	d036      	beq.n	8018d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018ce2:	881b      	ldrh	r3, [r3, #0]
 8018ce4:	2b2a      	cmp	r3, #42	; 0x2a
 8018ce6:	d137      	bne.n	8018d58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018ce8:	f04f 33ff 	mov.w	r3, #4294967295
 8018cec:	602b      	str	r3, [r5, #0]
 8018cee:	6803      	ldr	r3, [r0, #0]
 8018cf0:	b10b      	cbz	r3, 8018cf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018cf2:	3302      	adds	r3, #2
 8018cf4:	6003      	str	r3, [r0, #0]
 8018cf6:	680b      	ldr	r3, [r1, #0]
 8018cf8:	b10b      	cbz	r3, 8018cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018cfa:	3301      	adds	r3, #1
 8018cfc:	600b      	str	r3, [r1, #0]
 8018cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018d02:	680c      	ldr	r4, [r1, #0]
 8018d04:	b134      	cbz	r4, 8018d14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018d06:	7824      	ldrb	r4, [r4, #0]
 8018d08:	e7cc      	b.n	8018ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018d0a:	680b      	ldr	r3, [r1, #0]
 8018d0c:	2b00      	cmp	r3, #0
 8018d0e:	d0f6      	beq.n	8018cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018d10:	781c      	ldrb	r4, [r3, #0]
 8018d12:	e7d7      	b.n	8018cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018d14:	2300      	movs	r3, #0
 8018d16:	6033      	str	r3, [r6, #0]
 8018d18:	220a      	movs	r2, #10
 8018d1a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018d1e:	fa1f f38c 	uxth.w	r3, ip
 8018d22:	2b09      	cmp	r3, #9
 8018d24:	d8ce      	bhi.n	8018cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018d26:	6833      	ldr	r3, [r6, #0]
 8018d28:	fb02 c303 	mla	r3, r2, r3, ip
 8018d2c:	6033      	str	r3, [r6, #0]
 8018d2e:	6803      	ldr	r3, [r0, #0]
 8018d30:	b10b      	cbz	r3, 8018d36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018d32:	3302      	adds	r3, #2
 8018d34:	6003      	str	r3, [r0, #0]
 8018d36:	680b      	ldr	r3, [r1, #0]
 8018d38:	b10b      	cbz	r3, 8018d3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018d3a:	3301      	adds	r3, #1
 8018d3c:	600b      	str	r3, [r1, #0]
 8018d3e:	6803      	ldr	r3, [r0, #0]
 8018d40:	b10b      	cbz	r3, 8018d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018d42:	881c      	ldrh	r4, [r3, #0]
 8018d44:	e7e9      	b.n	8018d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018d46:	680c      	ldr	r4, [r1, #0]
 8018d48:	2c00      	cmp	r4, #0
 8018d4a:	d0e6      	beq.n	8018d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018d4c:	7824      	ldrb	r4, [r4, #0]
 8018d4e:	e7e4      	b.n	8018d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018d50:	680b      	ldr	r3, [r1, #0]
 8018d52:	b10b      	cbz	r3, 8018d58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018d54:	781b      	ldrb	r3, [r3, #0]
 8018d56:	e7c5      	b.n	8018ce4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018d58:	2200      	movs	r2, #0
 8018d5a:	602a      	str	r2, [r5, #0]
 8018d5c:	240a      	movs	r4, #10
 8018d5e:	3b30      	subs	r3, #48	; 0x30
 8018d60:	b29e      	uxth	r6, r3
 8018d62:	2e09      	cmp	r6, #9
 8018d64:	682a      	ldr	r2, [r5, #0]
 8018d66:	d813      	bhi.n	8018d90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018d68:	fb04 3302 	mla	r3, r4, r2, r3
 8018d6c:	602b      	str	r3, [r5, #0]
 8018d6e:	6803      	ldr	r3, [r0, #0]
 8018d70:	b10b      	cbz	r3, 8018d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018d72:	3302      	adds	r3, #2
 8018d74:	6003      	str	r3, [r0, #0]
 8018d76:	680b      	ldr	r3, [r1, #0]
 8018d78:	b10b      	cbz	r3, 8018d7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018d7a:	3301      	adds	r3, #1
 8018d7c:	600b      	str	r3, [r1, #0]
 8018d7e:	6803      	ldr	r3, [r0, #0]
 8018d80:	b10b      	cbz	r3, 8018d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018d82:	881b      	ldrh	r3, [r3, #0]
 8018d84:	e7eb      	b.n	8018d5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d86:	680b      	ldr	r3, [r1, #0]
 8018d88:	2b00      	cmp	r3, #0
 8018d8a:	d0e8      	beq.n	8018d5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d8c:	781b      	ldrb	r3, [r3, #0]
 8018d8e:	e7e6      	b.n	8018d5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d90:	2a06      	cmp	r2, #6
 8018d92:	bfa8      	it	ge
 8018d94:	2206      	movge	r2, #6
 8018d96:	602a      	str	r2, [r5, #0]
 8018d98:	e7b1      	b.n	8018cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018d9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d9e:	b0a3      	sub	sp, #140	; 0x8c
 8018da0:	2600      	movs	r6, #0
 8018da2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018da6:	4607      	mov	r7, r0
 8018da8:	4688      	mov	r8, r1
 8018daa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018dae:	4631      	mov	r1, r6
 8018db0:	2242      	movs	r2, #66	; 0x42
 8018db2:	4648      	mov	r0, r9
 8018db4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018db6:	960d      	str	r6, [sp, #52]	; 0x34
 8018db8:	f012 f989 	bl	802b0ce <memset>
 8018dbc:	b15f      	cbz	r7, 8018dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018dbe:	f108 3aff 	add.w	sl, r8, #4294967295
 8018dc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018dc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018dc6:	b152      	cbz	r2, 8018dde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018dc8:	8812      	ldrh	r2, [r2, #0]
 8018dca:	b10a      	cbz	r2, 8018dd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018dcc:	459a      	cmp	sl, r3
 8018dce:	dc2e      	bgt.n	8018e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018dd0:	2200      	movs	r2, #0
 8018dd2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018dd6:	4638      	mov	r0, r7
 8018dd8:	b023      	add	sp, #140	; 0x8c
 8018dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dde:	9a08      	ldr	r2, [sp, #32]
 8018de0:	2a00      	cmp	r2, #0
 8018de2:	d0f5      	beq.n	8018dd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018de4:	7812      	ldrb	r2, [r2, #0]
 8018de6:	e7f0      	b.n	8018dca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018de8:	2d00      	cmp	r5, #0
 8018dea:	d0ea      	beq.n	8018dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018dec:	782a      	ldrb	r2, [r5, #0]
 8018dee:	b142      	cbz	r2, 8018e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018df0:	2a25      	cmp	r2, #37	; 0x25
 8018df2:	d001      	beq.n	8018df8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018df4:	459a      	cmp	sl, r3
 8018df6:	dc08      	bgt.n	8018e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018df8:	f1bb 0f00 	cmp.w	fp, #0
 8018dfc:	d121      	bne.n	8018e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018dfe:	2d00      	cmp	r5, #0
 8018e00:	d0df      	beq.n	8018dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e02:	782a      	ldrb	r2, [r5, #0]
 8018e04:	f04f 0b00 	mov.w	fp, #0
 8018e08:	e01d      	b.n	8018e46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018e0a:	f1bb 0f00 	cmp.w	fp, #0
 8018e0e:	d078      	beq.n	8018f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018e10:	f8bb 2000 	ldrh.w	r2, [fp]
 8018e14:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018e18:	f1bb 0f00 	cmp.w	fp, #0
 8018e1c:	d002      	beq.n	8018e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018e1e:	f10b 0202 	add.w	r2, fp, #2
 8018e22:	9209      	str	r2, [sp, #36]	; 0x24
 8018e24:	b10d      	cbz	r5, 8018e2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018e26:	3501      	adds	r5, #1
 8018e28:	9508      	str	r5, [sp, #32]
 8018e2a:	3301      	adds	r3, #1
 8018e2c:	930d      	str	r3, [sp, #52]	; 0x34
 8018e2e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018e32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e34:	f1bb 0f00 	cmp.w	fp, #0
 8018e38:	d0d6      	beq.n	8018de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018e3a:	f8bb 2000 	ldrh.w	r2, [fp]
 8018e3e:	2a00      	cmp	r2, #0
 8018e40:	d1d6      	bne.n	8018df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018e42:	f8bb 2000 	ldrh.w	r2, [fp]
 8018e46:	2a00      	cmp	r2, #0
 8018e48:	d0bb      	beq.n	8018dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e4a:	459a      	cmp	sl, r3
 8018e4c:	ddb9      	ble.n	8018dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e4e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018e52:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018e56:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018e5a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018e5e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018e62:	960e      	str	r6, [sp, #56]	; 0x38
 8018e64:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018e68:	960f      	str	r6, [sp, #60]	; 0x3c
 8018e6a:	f1bb 0f00 	cmp.w	fp, #0
 8018e6e:	d002      	beq.n	8018e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018e70:	f10b 0302 	add.w	r3, fp, #2
 8018e74:	9309      	str	r3, [sp, #36]	; 0x24
 8018e76:	b10d      	cbz	r5, 8018e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018e78:	1c6b      	adds	r3, r5, #1
 8018e7a:	9308      	str	r3, [sp, #32]
 8018e7c:	ab0f      	add	r3, sp, #60	; 0x3c
 8018e7e:	9305      	str	r3, [sp, #20]
 8018e80:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018e84:	9304      	str	r3, [sp, #16]
 8018e86:	ab0e      	add	r3, sp, #56	; 0x38
 8018e88:	9303      	str	r3, [sp, #12]
 8018e8a:	ab0c      	add	r3, sp, #48	; 0x30
 8018e8c:	9302      	str	r3, [sp, #8]
 8018e8e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018e92:	9301      	str	r3, [sp, #4]
 8018e94:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018e98:	9300      	str	r3, [sp, #0]
 8018e9a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018e9e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018ea2:	a908      	add	r1, sp, #32
 8018ea4:	a809      	add	r0, sp, #36	; 0x24
 8018ea6:	f7ff fea8 	bl	8018bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018eaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018eac:	2b00      	cmp	r3, #0
 8018eae:	bfbe      	ittt	lt
 8018eb0:	6823      	ldrlt	r3, [r4, #0]
 8018eb2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018eb6:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018eba:	bfb8      	it	lt
 8018ebc:	3404      	addlt	r4, #4
 8018ebe:	2b00      	cmp	r3, #0
 8018ec0:	bfb8      	it	lt
 8018ec2:	6823      	ldrlt	r3, [r4, #0]
 8018ec4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018ec8:	bfbe      	ittt	lt
 8018eca:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018ece:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018ed0:	3404      	addlt	r4, #4
 8018ed2:	b1d9      	cbz	r1, 8018f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018ed4:	880b      	ldrh	r3, [r1, #0]
 8018ed6:	2b69      	cmp	r3, #105	; 0x69
 8018ed8:	d01f      	beq.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eda:	d82f      	bhi.n	8018f3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018edc:	2b58      	cmp	r3, #88	; 0x58
 8018ede:	d01c      	beq.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018ee0:	d818      	bhi.n	8018f14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018ee2:	2b25      	cmp	r3, #37	; 0x25
 8018ee4:	d034      	beq.n	8018f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018ee6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018eea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018eec:	f1bb 0f00 	cmp.w	fp, #0
 8018ef0:	f000 80b8 	beq.w	8019064 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018ef4:	f8bb 5000 	ldrh.w	r5, [fp]
 8018ef8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018efc:	3301      	adds	r3, #1
 8018efe:	930d      	str	r3, [sp, #52]	; 0x34
 8018f00:	e029      	b.n	8018f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018f02:	b10d      	cbz	r5, 8018f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018f04:	782a      	ldrb	r2, [r5, #0]
 8018f06:	e785      	b.n	8018e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018f08:	462a      	mov	r2, r5
 8018f0a:	e783      	b.n	8018e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018f0c:	2a00      	cmp	r2, #0
 8018f0e:	d0ea      	beq.n	8018ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018f10:	7813      	ldrb	r3, [r2, #0]
 8018f12:	e7e0      	b.n	8018ed6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018f14:	3b63      	subs	r3, #99	; 0x63
 8018f16:	2b01      	cmp	r3, #1
 8018f18:	d8e5      	bhi.n	8018ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018f1a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018f1e:	b329      	cbz	r1, 8018f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018f20:	880b      	ldrh	r3, [r1, #0]
 8018f22:	2b69      	cmp	r3, #105	; 0x69
 8018f24:	d063      	beq.n	8018fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018f26:	d825      	bhi.n	8018f74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018f28:	2b63      	cmp	r3, #99	; 0x63
 8018f2a:	d038      	beq.n	8018f9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018f2c:	2b64      	cmp	r3, #100	; 0x64
 8018f2e:	d05e      	beq.n	8018fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018f30:	2b58      	cmp	r3, #88	; 0x58
 8018f32:	d07b      	beq.n	801902c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018f34:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018f38:	4625      	mov	r5, r4
 8018f3a:	e036      	b.n	8018faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f3c:	2b73      	cmp	r3, #115	; 0x73
 8018f3e:	d0ec      	beq.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018f40:	d802      	bhi.n	8018f48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018f42:	2b6f      	cmp	r3, #111	; 0x6f
 8018f44:	d1cf      	bne.n	8018ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018f46:	e7e8      	b.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018f48:	2b75      	cmp	r3, #117	; 0x75
 8018f4a:	d0e6      	beq.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018f4c:	2b78      	cmp	r3, #120	; 0x78
 8018f4e:	e7f9      	b.n	8018f44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018f50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f52:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018f56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f58:	b10b      	cbz	r3, 8018f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018f5a:	3302      	adds	r3, #2
 8018f5c:	9309      	str	r3, [sp, #36]	; 0x24
 8018f5e:	9b08      	ldr	r3, [sp, #32]
 8018f60:	2b00      	cmp	r3, #0
 8018f62:	f43f af2e 	beq.w	8018dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018f66:	3301      	adds	r3, #1
 8018f68:	9308      	str	r3, [sp, #32]
 8018f6a:	e72a      	b.n	8018dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018f6c:	2a00      	cmp	r2, #0
 8018f6e:	d0e1      	beq.n	8018f34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f70:	7813      	ldrb	r3, [r2, #0]
 8018f72:	e7d6      	b.n	8018f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018f74:	2b73      	cmp	r3, #115	; 0x73
 8018f76:	d036      	beq.n	8018fe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018f78:	d807      	bhi.n	8018f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018f7a:	2b6f      	cmp	r3, #111	; 0x6f
 8018f7c:	d1da      	bne.n	8018f34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f7e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f80:	1d25      	adds	r5, r4, #4
 8018f82:	eba8 0202 	sub.w	r2, r8, r2
 8018f86:	2308      	movs	r3, #8
 8018f88:	e04a      	b.n	8019020 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018f8a:	2b75      	cmp	r3, #117	; 0x75
 8018f8c:	d043      	beq.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018f8e:	2b78      	cmp	r3, #120	; 0x78
 8018f90:	d1d0      	bne.n	8018f34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f94:	1d25      	adds	r5, r4, #4
 8018f96:	eba8 0202 	sub.w	r2, r8, r2
 8018f9a:	2310      	movs	r3, #16
 8018f9c:	e040      	b.n	8019020 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018f9e:	6823      	ldr	r3, [r4, #0]
 8018fa0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018fa4:	1d25      	adds	r5, r4, #4
 8018fa6:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018faa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fac:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018fb0:	2b00      	cmp	r3, #0
 8018fb2:	d052      	beq.n	801905a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018fb4:	881a      	ldrh	r2, [r3, #0]
 8018fb6:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018fba:	a80d      	add	r0, sp, #52	; 0x34
 8018fbc:	9005      	str	r0, [sp, #20]
 8018fbe:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018fc2:	9004      	str	r0, [sp, #16]
 8018fc4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018fc6:	9003      	str	r0, [sp, #12]
 8018fc8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018fcc:	9002      	str	r0, [sp, #8]
 8018fce:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018fd0:	9001      	str	r0, [sp, #4]
 8018fd2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018fd6:	9000      	str	r0, [sp, #0]
 8018fd8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018fdc:	a810      	add	r0, sp, #64	; 0x40
 8018fde:	f7ff fd49 	bl	8018a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018fe2:	462c      	mov	r4, r5
 8018fe4:	e7b7      	b.n	8018f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018fe6:	6823      	ldr	r3, [r4, #0]
 8018fe8:	1d25      	adds	r5, r4, #4
 8018fea:	9310      	str	r3, [sp, #64]	; 0x40
 8018fec:	e7dd      	b.n	8018faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018fee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ff0:	6820      	ldr	r0, [r4, #0]
 8018ff2:	eba8 0202 	sub.w	r2, r8, r2
 8018ff6:	230a      	movs	r3, #10
 8018ff8:	b292      	uxth	r2, r2
 8018ffa:	4649      	mov	r1, r9
 8018ffc:	f7ff fce4 	bl	80189c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019000:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019004:	2b2d      	cmp	r3, #45	; 0x2d
 8019006:	f104 0504 	add.w	r5, r4, #4
 801900a:	d1ce      	bne.n	8018faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801900c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019010:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019012:	3302      	adds	r3, #2
 8019014:	e7e9      	b.n	8018fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019016:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019018:	1d25      	adds	r5, r4, #4
 801901a:	eba8 0202 	sub.w	r2, r8, r2
 801901e:	230a      	movs	r3, #10
 8019020:	b292      	uxth	r2, r2
 8019022:	4649      	mov	r1, r9
 8019024:	6820      	ldr	r0, [r4, #0]
 8019026:	f7ff fcfb 	bl	8018a20 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801902a:	e7be      	b.n	8018faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801902c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801902e:	6820      	ldr	r0, [r4, #0]
 8019030:	eba8 0202 	sub.w	r2, r8, r2
 8019034:	b292      	uxth	r2, r2
 8019036:	2310      	movs	r3, #16
 8019038:	4649      	mov	r1, r9
 801903a:	f7ff fcf1 	bl	8018a20 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801903e:	1d25      	adds	r5, r4, #4
 8019040:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019044:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019048:	2b00      	cmp	r3, #0
 801904a:	d0ae      	beq.n	8018faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801904c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019050:	2919      	cmp	r1, #25
 8019052:	d8f7      	bhi.n	8019044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019054:	3b20      	subs	r3, #32
 8019056:	8013      	strh	r3, [r2, #0]
 8019058:	e7f4      	b.n	8019044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801905a:	9a08      	ldr	r2, [sp, #32]
 801905c:	2a00      	cmp	r2, #0
 801905e:	d0aa      	beq.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019060:	7812      	ldrb	r2, [r2, #0]
 8019062:	e7a8      	b.n	8018fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019064:	2d00      	cmp	r5, #0
 8019066:	f43f af47 	beq.w	8018ef8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801906a:	782d      	ldrb	r5, [r5, #0]
 801906c:	e744      	b.n	8018ef8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801906e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801906e:	b507      	push	{r0, r1, r2, lr}
 8019070:	9300      	str	r3, [sp, #0]
 8019072:	4613      	mov	r3, r2
 8019074:	2200      	movs	r2, #0
 8019076:	f7ff fe90 	bl	8018d9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801907a:	b003      	add	sp, #12
 801907c:	f85d fb04 	ldr.w	pc, [sp], #4

08019080 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019080:	b40c      	push	{r2, r3}
 8019082:	b507      	push	{r0, r1, r2, lr}
 8019084:	ab04      	add	r3, sp, #16
 8019086:	f853 2b04 	ldr.w	r2, [r3], #4
 801908a:	9301      	str	r3, [sp, #4]
 801908c:	f7ff ffef 	bl	801906e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019090:	b003      	add	sp, #12
 8019092:	f85d eb04 	ldr.w	lr, [sp], #4
 8019096:	b002      	add	sp, #8
 8019098:	4770      	bx	lr
	...

0801909c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801909c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190a0:	b0c5      	sub	sp, #276	; 0x114
 80190a2:	2400      	movs	r4, #0
 80190a4:	af11      	add	r7, sp, #68	; 0x44
 80190a6:	4606      	mov	r6, r0
 80190a8:	468a      	mov	sl, r1
 80190aa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80190ae:	4621      	mov	r1, r4
 80190b0:	22c8      	movs	r2, #200	; 0xc8
 80190b2:	4638      	mov	r0, r7
 80190b4:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80190b8:	940d      	str	r4, [sp, #52]	; 0x34
 80190ba:	f012 f808 	bl	802b0ce <memset>
 80190be:	b16e      	cbz	r6, 80190dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80190c0:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019364 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80190c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80190c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80190c8:	b162      	cbz	r2, 80190e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80190ca:	8812      	ldrh	r2, [r2, #0]
 80190cc:	b11a      	cbz	r2, 80190d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80190ce:	f10a 31ff 	add.w	r1, sl, #4294967295
 80190d2:	4299      	cmp	r1, r3
 80190d4:	dc2e      	bgt.n	8019134 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80190d6:	2200      	movs	r2, #0
 80190d8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80190dc:	4630      	mov	r0, r6
 80190de:	b045      	add	sp, #276	; 0x114
 80190e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190e4:	9a08      	ldr	r2, [sp, #32]
 80190e6:	2a00      	cmp	r2, #0
 80190e8:	d0f5      	beq.n	80190d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80190ea:	7812      	ldrb	r2, [r2, #0]
 80190ec:	e7ee      	b.n	80190cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80190ee:	2d00      	cmp	r5, #0
 80190f0:	d0e8      	beq.n	80190c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190f2:	782a      	ldrb	r2, [r5, #0]
 80190f4:	b142      	cbz	r2, 8019108 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80190f6:	2a25      	cmp	r2, #37	; 0x25
 80190f8:	d001      	beq.n	80190fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80190fa:	4299      	cmp	r1, r3
 80190fc:	dc08      	bgt.n	8019110 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80190fe:	f1b8 0f00 	cmp.w	r8, #0
 8019102:	d121      	bne.n	8019148 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019104:	2d00      	cmp	r5, #0
 8019106:	d0dd      	beq.n	80190c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019108:	782a      	ldrb	r2, [r5, #0]
 801910a:	f04f 0800 	mov.w	r8, #0
 801910e:	e01d      	b.n	801914c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019110:	f1b8 0f00 	cmp.w	r8, #0
 8019114:	d07f      	beq.n	8019216 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019116:	f8b8 2000 	ldrh.w	r2, [r8]
 801911a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801911e:	f1b8 0f00 	cmp.w	r8, #0
 8019122:	d002      	beq.n	801912a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019124:	f108 0202 	add.w	r2, r8, #2
 8019128:	9209      	str	r2, [sp, #36]	; 0x24
 801912a:	b10d      	cbz	r5, 8019130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801912c:	3501      	adds	r5, #1
 801912e:	9508      	str	r5, [sp, #32]
 8019130:	3301      	adds	r3, #1
 8019132:	930d      	str	r3, [sp, #52]	; 0x34
 8019134:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801913a:	f1b8 0f00 	cmp.w	r8, #0
 801913e:	d0d6      	beq.n	80190ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019140:	f8b8 2000 	ldrh.w	r2, [r8]
 8019144:	2a00      	cmp	r2, #0
 8019146:	d1d6      	bne.n	80190f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019148:	f8b8 2000 	ldrh.w	r2, [r8]
 801914c:	2a00      	cmp	r2, #0
 801914e:	d0b9      	beq.n	80190c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019150:	4299      	cmp	r1, r3
 8019152:	ddb7      	ble.n	80190c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019154:	2300      	movs	r3, #0
 8019156:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801915a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801915e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019162:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019166:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801916a:	930e      	str	r3, [sp, #56]	; 0x38
 801916c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019170:	930f      	str	r3, [sp, #60]	; 0x3c
 8019172:	f1b8 0f00 	cmp.w	r8, #0
 8019176:	d002      	beq.n	801917e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019178:	f108 0302 	add.w	r3, r8, #2
 801917c:	9309      	str	r3, [sp, #36]	; 0x24
 801917e:	b10d      	cbz	r5, 8019184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019180:	1c6b      	adds	r3, r5, #1
 8019182:	9308      	str	r3, [sp, #32]
 8019184:	ab0f      	add	r3, sp, #60	; 0x3c
 8019186:	9305      	str	r3, [sp, #20]
 8019188:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801918c:	9304      	str	r3, [sp, #16]
 801918e:	ab0e      	add	r3, sp, #56	; 0x38
 8019190:	9303      	str	r3, [sp, #12]
 8019192:	ab0c      	add	r3, sp, #48	; 0x30
 8019194:	9302      	str	r3, [sp, #8]
 8019196:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801919a:	9301      	str	r3, [sp, #4]
 801919c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80191a0:	9300      	str	r3, [sp, #0]
 80191a2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80191a6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80191aa:	a908      	add	r1, sp, #32
 80191ac:	a809      	add	r0, sp, #36	; 0x24
 80191ae:	f7ff fd24 	bl	8018bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80191b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80191b4:	2b00      	cmp	r3, #0
 80191b6:	da0b      	bge.n	80191d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80191b8:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80191bc:	edd3 7a00 	vldr	s15, [r3]
 80191c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80191c4:	3401      	adds	r4, #1
 80191c6:	ee17 3a90 	vmov	r3, s15
 80191ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191ce:	930e      	str	r3, [sp, #56]	; 0x38
 80191d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80191d2:	2b00      	cmp	r3, #0
 80191d4:	da0b      	bge.n	80191ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80191d6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80191da:	edd3 7a00 	vldr	s15, [r3]
 80191de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80191e2:	3401      	adds	r4, #1
 80191e4:	ee17 3a90 	vmov	r3, s15
 80191e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80191ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191f0:	b1b3      	cbz	r3, 8019220 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80191f2:	881a      	ldrh	r2, [r3, #0]
 80191f4:	2a25      	cmp	r2, #37	; 0x25
 80191f6:	d018      	beq.n	801922a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80191f8:	2a66      	cmp	r2, #102	; 0x66
 80191fa:	d01c      	beq.n	8019236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80191fc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019200:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019202:	f1b8 0f00 	cmp.w	r8, #0
 8019206:	f000 8121 	beq.w	801944c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801920a:	f8b8 5000 	ldrh.w	r5, [r8]
 801920e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019212:	3301      	adds	r3, #1
 8019214:	e00d      	b.n	8019232 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019216:	b10d      	cbz	r5, 801921c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019218:	782a      	ldrb	r2, [r5, #0]
 801921a:	e77e      	b.n	801911a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801921c:	462a      	mov	r2, r5
 801921e:	e77c      	b.n	801911a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019220:	9b08      	ldr	r3, [sp, #32]
 8019222:	2b00      	cmp	r3, #0
 8019224:	d0ea      	beq.n	80191fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019226:	781a      	ldrb	r2, [r3, #0]
 8019228:	e7e4      	b.n	80191f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801922a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801922c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019230:	3302      	adds	r3, #2
 8019232:	930d      	str	r3, [sp, #52]	; 0x34
 8019234:	e041      	b.n	80192ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019236:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801923a:	edd3 7a00 	vldr	s15, [r3]
 801923e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019242:	9710      	str	r7, [sp, #64]	; 0x40
 8019244:	3401      	adds	r4, #1
 8019246:	b923      	cbnz	r3, 8019252 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019248:	2301      	movs	r3, #1
 801924a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801924e:	2306      	movs	r3, #6
 8019250:	930f      	str	r3, [sp, #60]	; 0x3c
 8019252:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801925a:	bf48      	it	mi
 801925c:	eef1 7a67 	vnegmi.f32	s15, s15
 8019260:	eeb0 7ae7 	vabs.f32	s14, s15
 8019264:	bf48      	it	mi
 8019266:	232d      	movmi	r3, #45	; 0x2d
 8019268:	eeb4 7a45 	vcmp.f32	s14, s10
 801926c:	bf48      	it	mi
 801926e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019276:	dd2b      	ble.n	80192d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019278:	4b3b      	ldr	r3, [pc, #236]	; (8019368 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801927a:	9311      	str	r3, [sp, #68]	; 0x44
 801927c:	2366      	movs	r3, #102	; 0x66
 801927e:	9312      	str	r3, [sp, #72]	; 0x48
 8019280:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019282:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019286:	2b00      	cmp	r3, #0
 8019288:	f000 80da 	beq.w	8019440 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801928c:	881a      	ldrh	r2, [r3, #0]
 801928e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019292:	a80d      	add	r0, sp, #52	; 0x34
 8019294:	9005      	str	r0, [sp, #20]
 8019296:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801929a:	9004      	str	r0, [sp, #16]
 801929c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801929e:	9003      	str	r0, [sp, #12]
 80192a0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80192a4:	9002      	str	r0, [sp, #8]
 80192a6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80192a8:	9001      	str	r0, [sp, #4]
 80192aa:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80192ae:	9000      	str	r0, [sp, #0]
 80192b0:	e9cd a606 	strd	sl, r6, [sp, #24]
 80192b4:	a810      	add	r0, sp, #64	; 0x40
 80192b6:	f7ff fbdd 	bl	8018a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80192ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80192bc:	b10b      	cbz	r3, 80192c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80192be:	3302      	adds	r3, #2
 80192c0:	9309      	str	r3, [sp, #36]	; 0x24
 80192c2:	9b08      	ldr	r3, [sp, #32]
 80192c4:	2b00      	cmp	r3, #0
 80192c6:	f43f aefd 	beq.w	80190c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80192ca:	3301      	adds	r3, #1
 80192cc:	9308      	str	r3, [sp, #32]
 80192ce:	e6f9      	b.n	80190c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80192d0:	eef4 7a67 	vcmp.f32	s15, s15
 80192d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192d8:	d63a      	bvs.n	8019350 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80192da:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80192de:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80192e2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80192e6:	eeb0 6a67 	vmov.f32	s12, s15
 80192ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80192ee:	eef0 5a47 	vmov.f32	s11, s14
 80192f2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80192f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192fa:	da2d      	bge.n	8019358 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80192fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80192fe:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019302:	2100      	movs	r1, #0
 8019304:	eef0 4a46 	vmov.f32	s9, s12
 8019308:	ebaa 0202 	sub.w	r2, sl, r2
 801930c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019314:	b28d      	uxth	r5, r1
 8019316:	db2c      	blt.n	8019372 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019318:	1a53      	subs	r3, r2, r1
 801931a:	2b00      	cmp	r3, #0
 801931c:	dd29      	ble.n	8019372 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801931e:	3101      	adds	r1, #1
 8019320:	2964      	cmp	r1, #100	; 0x64
 8019322:	d025      	beq.n	8019370 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019324:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019328:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801932c:	ee17 3a10 	vmov	r3, s14
 8019330:	2b09      	cmp	r3, #9
 8019332:	bfa8      	it	ge
 8019334:	2309      	movge	r3, #9
 8019336:	ee07 3a10 	vmov	s14, r3
 801933a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801933e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019342:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019346:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801934a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801934e:	e7dd      	b.n	801930c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019350:	4b06      	ldr	r3, [pc, #24]	; (801936c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019352:	9311      	str	r3, [sp, #68]	; 0x44
 8019354:	236e      	movs	r3, #110	; 0x6e
 8019356:	e792      	b.n	801927e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019358:	ee66 6a87 	vmul.f32	s13, s13, s14
 801935c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019360:	e7c7      	b.n	80192f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019362:	bf00      	nop
 8019364:	7f7fffff 	.word	0x7f7fffff
 8019368:	006e0069 	.word	0x006e0069
 801936c:	0061006e 	.word	0x0061006e
 8019370:	2563      	movs	r5, #99	; 0x63
 8019372:	2a63      	cmp	r2, #99	; 0x63
 8019374:	bfd4      	ite	le
 8019376:	ebc5 0202 	rsble	r2, r5, r2
 801937a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801937e:	2a00      	cmp	r2, #0
 8019380:	dd43      	ble.n	801940a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019382:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019384:	2b00      	cmp	r3, #0
 8019386:	dd40      	ble.n	801940a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019388:	f04f 0901 	mov.w	r9, #1
 801938c:	210a      	movs	r1, #10
 801938e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019392:	d30c      	bcc.n	80193ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019394:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019398:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801939c:	ee17 0a10 	vmov	r0, s14
 80193a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80193a4:	fb01 0909 	mla	r9, r1, r9, r0
 80193a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80193ac:	e7ef      	b.n	801938e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80193ae:	3501      	adds	r5, #1
 80193b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80193b2:	b292      	uxth	r2, r2
 80193b4:	230a      	movs	r3, #10
 80193b6:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80193ba:	4648      	mov	r0, r9
 80193bc:	f7ff fb4e 	bl	8018a5c <_ZN8touchgfx7Unicode4itoaElPtti>
 80193c0:	f1b9 0f01 	cmp.w	r9, #1
 80193c4:	dc1f      	bgt.n	8019406 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80193c6:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80193ca:	2b00      	cmp	r3, #0
 80193cc:	bf0c      	ite	eq
 80193ce:	2300      	moveq	r3, #0
 80193d0:	232e      	movne	r3, #46	; 0x2e
 80193d2:	aa44      	add	r2, sp, #272	; 0x110
 80193d4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80193d8:	eef4 7ae4 	vcmpe.f32	s15, s9
 80193dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193e0:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80193e4:	f6ff af4c 	blt.w	8019280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80193e8:	2300      	movs	r3, #0
 80193ea:	f838 2b02 	ldrh.w	r2, [r8], #2
 80193ee:	1c59      	adds	r1, r3, #1
 80193f0:	b98a      	cbnz	r2, 8019416 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80193f2:	b29b      	uxth	r3, r3
 80193f4:	2130      	movs	r1, #48	; 0x30
 80193f6:	b983      	cbnz	r3, 801941a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80193f8:	2331      	movs	r3, #49	; 0x31
 80193fa:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80193fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019400:	3b02      	subs	r3, #2
 8019402:	9310      	str	r3, [sp, #64]	; 0x40
 8019404:	e73c      	b.n	8019280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019406:	232e      	movs	r3, #46	; 0x2e
 8019408:	e7e3      	b.n	80193d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801940a:	ab44      	add	r3, sp, #272	; 0x110
 801940c:	3501      	adds	r5, #1
 801940e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019412:	2300      	movs	r3, #0
 8019414:	e7e0      	b.n	80193d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019416:	460b      	mov	r3, r1
 8019418:	e7e7      	b.n	80193ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801941a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801941e:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019422:	2808      	cmp	r0, #8
 8019424:	d806      	bhi.n	8019434 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019426:	a944      	add	r1, sp, #272	; 0x110
 8019428:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801942c:	3201      	adds	r2, #1
 801942e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019432:	e725      	b.n	8019280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019434:	2a39      	cmp	r2, #57	; 0x39
 8019436:	bf08      	it	eq
 8019438:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801943c:	3b01      	subs	r3, #1
 801943e:	e7da      	b.n	80193f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019440:	9a08      	ldr	r2, [sp, #32]
 8019442:	2a00      	cmp	r2, #0
 8019444:	f43f af23 	beq.w	801928e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019448:	7812      	ldrb	r2, [r2, #0]
 801944a:	e720      	b.n	801928e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801944c:	2d00      	cmp	r5, #0
 801944e:	f43f aede 	beq.w	801920e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019452:	782d      	ldrb	r5, [r5, #0]
 8019454:	e6db      	b.n	801920e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019456:	bf00      	nop

08019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019458:	b507      	push	{r0, r1, r2, lr}
 801945a:	9300      	str	r3, [sp, #0]
 801945c:	4613      	mov	r3, r2
 801945e:	2200      	movs	r2, #0
 8019460:	f7ff fe1c 	bl	801909c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019464:	b003      	add	sp, #12
 8019466:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801946c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801946c:	4b01      	ldr	r3, [pc, #4]	; (8019474 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801946e:	6018      	str	r0, [r3, #0]
 8019470:	4770      	bx	lr
 8019472:	bf00      	nop
 8019474:	20012e0c 	.word	0x20012e0c

08019478 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019478:	4b06      	ldr	r3, [pc, #24]	; (8019494 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801947a:	881a      	ldrh	r2, [r3, #0]
 801947c:	4282      	cmp	r2, r0
 801947e:	d807      	bhi.n	8019490 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019480:	4b05      	ldr	r3, [pc, #20]	; (8019498 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019482:	881b      	ldrh	r3, [r3, #0]
 8019484:	4413      	add	r3, r2
 8019486:	4298      	cmp	r0, r3
 8019488:	bfac      	ite	ge
 801948a:	2000      	movge	r0, #0
 801948c:	2001      	movlt	r0, #1
 801948e:	4770      	bx	lr
 8019490:	2000      	movs	r0, #0
 8019492:	4770      	bx	lr
 8019494:	20012e2c 	.word	0x20012e2c
 8019498:	20012e30 	.word	0x20012e30

0801949c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801949c:	b508      	push	{r3, lr}
 801949e:	4601      	mov	r1, r0
 80194a0:	f7ff ffea 	bl	8019478 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80194a4:	b118      	cbz	r0, 80194ae <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80194a6:	4b02      	ldr	r3, [pc, #8]	; (80194b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80194a8:	681b      	ldr	r3, [r3, #0]
 80194aa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80194ae:	bd08      	pop	{r3, pc}
 80194b0:	20012e10 	.word	0x20012e10

080194b4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80194b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80194b6:	4c24      	ldr	r4, [pc, #144]	; (8019548 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80194b8:	6823      	ldr	r3, [r4, #0]
 80194ba:	2b00      	cmp	r3, #0
 80194bc:	d042      	beq.n	8019544 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80194be:	4a23      	ldr	r2, [pc, #140]	; (801954c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80194c0:	4d23      	ldr	r5, [pc, #140]	; (8019550 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80194c2:	8811      	ldrh	r1, [r2, #0]
 80194c4:	f8b5 c000 	ldrh.w	ip, [r5]
 80194c8:	4822      	ldr	r0, [pc, #136]	; (8019554 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80194ca:	4461      	add	r1, ip
 80194cc:	1c4a      	adds	r2, r1, #1
 80194ce:	f022 0201 	bic.w	r2, r2, #1
 80194d2:	008f      	lsls	r7, r1, #2
 80194d4:	0412      	lsls	r2, r2, #16
 80194d6:	19de      	adds	r6, r3, r7
 80194d8:	0c12      	lsrs	r2, r2, #16
 80194da:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80194de:	6006      	str	r6, [r0, #0]
 80194e0:	4e1d      	ldr	r6, [pc, #116]	; (8019558 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80194e2:	19da      	adds	r2, r3, r7
 80194e4:	6032      	str	r2, [r6, #0]
 80194e6:	220e      	movs	r2, #14
 80194e8:	fb02 f20c 	mul.w	r2, r2, ip
 80194ec:	3203      	adds	r2, #3
 80194ee:	f022 0203 	bic.w	r2, r2, #3
 80194f2:	443a      	add	r2, r7
 80194f4:	4f19      	ldr	r7, [pc, #100]	; (801955c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80194f6:	4413      	add	r3, r2
 80194f8:	603b      	str	r3, [r7, #0]
 80194fa:	4f19      	ldr	r7, [pc, #100]	; (8019560 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80194fc:	2300      	movs	r3, #0
 80194fe:	803b      	strh	r3, [r7, #0]
 8019500:	4f18      	ldr	r7, [pc, #96]	; (8019564 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019502:	683f      	ldr	r7, [r7, #0]
 8019504:	1aba      	subs	r2, r7, r2
 8019506:	4f18      	ldr	r7, [pc, #96]	; (8019568 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019508:	603a      	str	r2, [r7, #0]
 801950a:	4a18      	ldr	r2, [pc, #96]	; (801956c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801950c:	469c      	mov	ip, r3
 801950e:	8013      	strh	r3, [r2, #0]
 8019510:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019514:	428b      	cmp	r3, r1
 8019516:	d10d      	bne.n	8019534 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019518:	882d      	ldrh	r5, [r5, #0]
 801951a:	6830      	ldr	r0, [r6, #0]
 801951c:	2300      	movs	r3, #0
 801951e:	240e      	movs	r4, #14
 8019520:	429d      	cmp	r5, r3
 8019522:	d90f      	bls.n	8019544 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019524:	fb04 0203 	mla	r2, r4, r3, r0
 8019528:	3301      	adds	r3, #1
 801952a:	7b11      	ldrb	r1, [r2, #12]
 801952c:	f36f 1145 	bfc	r1, #5, #1
 8019530:	7311      	strb	r1, [r2, #12]
 8019532:	e7f5      	b.n	8019520 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019534:	6822      	ldr	r2, [r4, #0]
 8019536:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801953a:	6802      	ldr	r2, [r0, #0]
 801953c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019540:	3301      	adds	r3, #1
 8019542:	e7e7      	b.n	8019514 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019544:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019546:	bf00      	nop
 8019548:	20012e10 	.word	0x20012e10
 801954c:	20012e2c 	.word	0x20012e2c
 8019550:	20012e30 	.word	0x20012e30
 8019554:	20012e24 	.word	0x20012e24
 8019558:	20012e14 	.word	0x20012e14
 801955c:	20012e1c 	.word	0x20012e1c
 8019560:	20012e2e 	.word	0x20012e2e
 8019564:	20012e18 	.word	0x20012e18
 8019568:	20012e28 	.word	0x20012e28
 801956c:	20012e20 	.word	0x20012e20

08019570 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019570:	4b06      	ldr	r3, [pc, #24]	; (801958c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019572:	681b      	ldr	r3, [r3, #0]
 8019574:	b943      	cbnz	r3, 8019588 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019576:	b139      	cbz	r1, 8019588 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019578:	4b05      	ldr	r3, [pc, #20]	; (8019590 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801957a:	801a      	strh	r2, [r3, #0]
 801957c:	4b05      	ldr	r3, [pc, #20]	; (8019594 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801957e:	6019      	str	r1, [r3, #0]
 8019580:	4b05      	ldr	r3, [pc, #20]	; (8019598 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019582:	6018      	str	r0, [r3, #0]
 8019584:	f7ff bf96 	b.w	80194b4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019588:	4770      	bx	lr
 801958a:	bf00      	nop
 801958c:	20012e1c 	.word	0x20012e1c
 8019590:	20012e30 	.word	0x20012e30
 8019594:	20012e18 	.word	0x20012e18
 8019598:	20012e10 	.word	0x20012e10

0801959c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801959c:	b470      	push	{r4, r5, r6}
 801959e:	4c07      	ldr	r4, [pc, #28]	; (80195bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80195a0:	6826      	ldr	r6, [r4, #0]
 80195a2:	4605      	mov	r5, r0
 80195a4:	4610      	mov	r0, r2
 80195a6:	9a03      	ldr	r2, [sp, #12]
 80195a8:	b936      	cbnz	r6, 80195b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80195aa:	6025      	str	r5, [r4, #0]
 80195ac:	4c04      	ldr	r4, [pc, #16]	; (80195c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80195ae:	8021      	strh	r1, [r4, #0]
 80195b0:	bc70      	pop	{r4, r5, r6}
 80195b2:	4619      	mov	r1, r3
 80195b4:	f7ff bfdc 	b.w	8019570 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80195b8:	bc70      	pop	{r4, r5, r6}
 80195ba:	4770      	bx	lr
 80195bc:	20012e34 	.word	0x20012e34
 80195c0:	20012e2c 	.word	0x20012e2c

080195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80195c4:	4a12      	ldr	r2, [pc, #72]	; (8019610 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80195c6:	8803      	ldrh	r3, [r0, #0]
 80195c8:	8812      	ldrh	r2, [r2, #0]
 80195ca:	4293      	cmp	r3, r2
 80195cc:	d207      	bcs.n	80195de <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80195ce:	4a11      	ldr	r2, [pc, #68]	; (8019614 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80195d0:	6812      	ldr	r2, [r2, #0]
 80195d2:	2114      	movs	r1, #20
 80195d4:	fb01 2303 	mla	r3, r1, r3, r2
 80195d8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80195dc:	4770      	bx	lr
 80195de:	490e      	ldr	r1, [pc, #56]	; (8019618 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80195e0:	8809      	ldrh	r1, [r1, #0]
 80195e2:	4411      	add	r1, r2
 80195e4:	428b      	cmp	r3, r1
 80195e6:	da04      	bge.n	80195f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80195e8:	1a9b      	subs	r3, r3, r2
 80195ea:	4a0c      	ldr	r2, [pc, #48]	; (801961c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80195ec:	210e      	movs	r1, #14
 80195ee:	6812      	ldr	r2, [r2, #0]
 80195f0:	e7f0      	b.n	80195d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80195f2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80195f6:	4293      	cmp	r3, r2
 80195f8:	d108      	bne.n	801960c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80195fa:	4b09      	ldr	r3, [pc, #36]	; (8019620 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80195fc:	781b      	ldrb	r3, [r3, #0]
 80195fe:	b91b      	cbnz	r3, 8019608 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019600:	4b08      	ldr	r3, [pc, #32]	; (8019624 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019602:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019606:	4770      	bx	lr
 8019608:	4b07      	ldr	r3, [pc, #28]	; (8019628 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801960a:	e7fa      	b.n	8019602 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801960c:	2000      	movs	r0, #0
 801960e:	4770      	bx	lr
 8019610:	20012e2c 	.word	0x20012e2c
 8019614:	20012e34 	.word	0x20012e34
 8019618:	20012e30 	.word	0x20012e30
 801961c:	20012e14 	.word	0x20012e14
 8019620:	20012d9c 	.word	0x20012d9c
 8019624:	20012d9e 	.word	0x20012d9e
 8019628:	20012da0 	.word	0x20012da0

0801962c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801962c:	4a12      	ldr	r2, [pc, #72]	; (8019678 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801962e:	8803      	ldrh	r3, [r0, #0]
 8019630:	8812      	ldrh	r2, [r2, #0]
 8019632:	4293      	cmp	r3, r2
 8019634:	d207      	bcs.n	8019646 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019636:	4a11      	ldr	r2, [pc, #68]	; (801967c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019638:	6812      	ldr	r2, [r2, #0]
 801963a:	2114      	movs	r1, #20
 801963c:	fb01 2303 	mla	r3, r1, r3, r2
 8019640:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019644:	4770      	bx	lr
 8019646:	490e      	ldr	r1, [pc, #56]	; (8019680 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019648:	8809      	ldrh	r1, [r1, #0]
 801964a:	4411      	add	r1, r2
 801964c:	428b      	cmp	r3, r1
 801964e:	da04      	bge.n	801965a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019650:	1a9b      	subs	r3, r3, r2
 8019652:	4a0c      	ldr	r2, [pc, #48]	; (8019684 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019654:	210e      	movs	r1, #14
 8019656:	6812      	ldr	r2, [r2, #0]
 8019658:	e7f0      	b.n	801963c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801965a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801965e:	4293      	cmp	r3, r2
 8019660:	d108      	bne.n	8019674 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019662:	4b09      	ldr	r3, [pc, #36]	; (8019688 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019664:	781b      	ldrb	r3, [r3, #0]
 8019666:	b91b      	cbnz	r3, 8019670 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019668:	4b08      	ldr	r3, [pc, #32]	; (801968c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801966a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801966e:	4770      	bx	lr
 8019670:	4b07      	ldr	r3, [pc, #28]	; (8019690 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019672:	e7fa      	b.n	801966a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019674:	2000      	movs	r0, #0
 8019676:	4770      	bx	lr
 8019678:	20012e2c 	.word	0x20012e2c
 801967c:	20012e34 	.word	0x20012e34
 8019680:	20012e30 	.word	0x20012e30
 8019684:	20012e14 	.word	0x20012e14
 8019688:	20012d9c 	.word	0x20012d9c
 801968c:	20012da0 	.word	0x20012da0
 8019690:	20012d9e 	.word	0x20012d9e

08019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019694:	b510      	push	{r4, lr}
 8019696:	4a1f      	ldr	r2, [pc, #124]	; (8019714 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019698:	880b      	ldrh	r3, [r1, #0]
 801969a:	8812      	ldrh	r2, [r2, #0]
 801969c:	4293      	cmp	r3, r2
 801969e:	d213      	bcs.n	80196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80196a0:	4a1d      	ldr	r2, [pc, #116]	; (8019718 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80196a2:	6812      	ldr	r2, [r2, #0]
 80196a4:	2114      	movs	r1, #20
 80196a6:	fb01 2303 	mla	r3, r1, r3, r2
 80196aa:	8a1a      	ldrh	r2, [r3, #16]
 80196ac:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80196b0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80196b4:	8a5b      	ldrh	r3, [r3, #18]
 80196b6:	8004      	strh	r4, [r0, #0]
 80196b8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80196bc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80196c0:	8041      	strh	r1, [r0, #2]
 80196c2:	8082      	strh	r2, [r0, #4]
 80196c4:	80c3      	strh	r3, [r0, #6]
 80196c6:	e00e      	b.n	80196e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80196c8:	4914      	ldr	r1, [pc, #80]	; (801971c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80196ca:	8809      	ldrh	r1, [r1, #0]
 80196cc:	4411      	add	r1, r2
 80196ce:	428b      	cmp	r3, r1
 80196d0:	da0a      	bge.n	80196e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80196d2:	1a9b      	subs	r3, r3, r2
 80196d4:	4a12      	ldr	r2, [pc, #72]	; (8019720 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80196d6:	6812      	ldr	r2, [r2, #0]
 80196d8:	210e      	movs	r1, #14
 80196da:	fb01 2303 	mla	r3, r1, r3, r2
 80196de:	681a      	ldr	r2, [r3, #0]
 80196e0:	6002      	str	r2, [r0, #0]
 80196e2:	685a      	ldr	r2, [r3, #4]
 80196e4:	6042      	str	r2, [r0, #4]
 80196e6:	bd10      	pop	{r4, pc}
 80196e8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80196ec:	4293      	cmp	r3, r2
 80196ee:	d10b      	bne.n	8019708 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80196f0:	4b0c      	ldr	r3, [pc, #48]	; (8019724 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80196f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80196f6:	4b0c      	ldr	r3, [pc, #48]	; (8019728 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80196f8:	8081      	strh	r1, [r0, #4]
 80196fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80196fe:	80c2      	strh	r2, [r0, #6]
 8019700:	2300      	movs	r3, #0
 8019702:	8003      	strh	r3, [r0, #0]
 8019704:	8043      	strh	r3, [r0, #2]
 8019706:	e7ee      	b.n	80196e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019708:	2300      	movs	r3, #0
 801970a:	8003      	strh	r3, [r0, #0]
 801970c:	8043      	strh	r3, [r0, #2]
 801970e:	8083      	strh	r3, [r0, #4]
 8019710:	e7d8      	b.n	80196c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019712:	bf00      	nop
 8019714:	20012e2c 	.word	0x20012e2c
 8019718:	20012e34 	.word	0x20012e34
 801971c:	20012e30 	.word	0x20012e30
 8019720:	20012e14 	.word	0x20012e14
 8019724:	20012d98 	.word	0x20012d98
 8019728:	20012d9a 	.word	0x20012d9a

0801972c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801972c:	4a17      	ldr	r2, [pc, #92]	; (801978c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801972e:	8803      	ldrh	r3, [r0, #0]
 8019730:	8812      	ldrh	r2, [r2, #0]
 8019732:	4293      	cmp	r3, r2
 8019734:	d213      	bcs.n	801975e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019736:	4a16      	ldr	r2, [pc, #88]	; (8019790 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019738:	6812      	ldr	r2, [r2, #0]
 801973a:	2114      	movs	r1, #20
 801973c:	fb01 2303 	mla	r3, r1, r3, r2
 8019740:	8a1a      	ldrh	r2, [r3, #16]
 8019742:	8919      	ldrh	r1, [r3, #8]
 8019744:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019748:	428a      	cmp	r2, r1
 801974a:	db1d      	blt.n	8019788 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801974c:	8a58      	ldrh	r0, [r3, #18]
 801974e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019752:	895b      	ldrh	r3, [r3, #10]
 8019754:	4298      	cmp	r0, r3
 8019756:	bfac      	ite	ge
 8019758:	2000      	movge	r0, #0
 801975a:	2001      	movlt	r0, #1
 801975c:	4770      	bx	lr
 801975e:	490d      	ldr	r1, [pc, #52]	; (8019794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019760:	8809      	ldrh	r1, [r1, #0]
 8019762:	4411      	add	r1, r2
 8019764:	428b      	cmp	r3, r1
 8019766:	da0d      	bge.n	8019784 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019768:	1a9b      	subs	r3, r3, r2
 801976a:	4a0b      	ldr	r2, [pc, #44]	; (8019798 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801976c:	6812      	ldr	r2, [r2, #0]
 801976e:	210e      	movs	r1, #14
 8019770:	fb01 2303 	mla	r3, r1, r3, r2
 8019774:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019778:	891a      	ldrh	r2, [r3, #8]
 801977a:	4291      	cmp	r1, r2
 801977c:	db04      	blt.n	8019788 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801977e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019782:	e7e6      	b.n	8019752 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019784:	2000      	movs	r0, #0
 8019786:	4770      	bx	lr
 8019788:	2001      	movs	r0, #1
 801978a:	4770      	bx	lr
 801978c:	20012e2c 	.word	0x20012e2c
 8019790:	20012e34 	.word	0x20012e34
 8019794:	20012e30 	.word	0x20012e30
 8019798:	20012e14 	.word	0x20012e14

0801979c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801979c:	4a12      	ldr	r2, [pc, #72]	; (80197e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801979e:	8803      	ldrh	r3, [r0, #0]
 80197a0:	8811      	ldrh	r1, [r2, #0]
 80197a2:	428b      	cmp	r3, r1
 80197a4:	d20b      	bcs.n	80197be <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80197a6:	4a11      	ldr	r2, [pc, #68]	; (80197ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80197a8:	6812      	ldr	r2, [r2, #0]
 80197aa:	b112      	cbz	r2, 80197b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80197ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80197b0:	b9c0      	cbnz	r0, 80197e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80197b2:	4a0f      	ldr	r2, [pc, #60]	; (80197f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80197b4:	6811      	ldr	r1, [r2, #0]
 80197b6:	2214      	movs	r2, #20
 80197b8:	4353      	muls	r3, r2
 80197ba:	58c8      	ldr	r0, [r1, r3]
 80197bc:	4770      	bx	lr
 80197be:	4a0d      	ldr	r2, [pc, #52]	; (80197f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80197c0:	8812      	ldrh	r2, [r2, #0]
 80197c2:	440a      	add	r2, r1
 80197c4:	4293      	cmp	r3, r2
 80197c6:	da04      	bge.n	80197d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80197c8:	4a08      	ldr	r2, [pc, #32]	; (80197ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80197ca:	6812      	ldr	r2, [r2, #0]
 80197cc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80197d0:	4770      	bx	lr
 80197d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197d6:	4293      	cmp	r3, r2
 80197d8:	d103      	bne.n	80197e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80197da:	4b07      	ldr	r3, [pc, #28]	; (80197f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80197dc:	681b      	ldr	r3, [r3, #0]
 80197de:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80197e0:	4770      	bx	lr
 80197e2:	2000      	movs	r0, #0
 80197e4:	4770      	bx	lr
 80197e6:	bf00      	nop
 80197e8:	20012e2c 	.word	0x20012e2c
 80197ec:	20012e10 	.word	0x20012e10
 80197f0:	20012e34 	.word	0x20012e34
 80197f4:	20012e30 	.word	0x20012e30
 80197f8:	20012da4 	.word	0x20012da4

080197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80197fc:	4b24      	ldr	r3, [pc, #144]	; (8019890 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80197fe:	8802      	ldrh	r2, [r0, #0]
 8019800:	8818      	ldrh	r0, [r3, #0]
 8019802:	4282      	cmp	r2, r0
 8019804:	d221      	bcs.n	801984a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019806:	4b23      	ldr	r3, [pc, #140]	; (8019894 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019808:	6819      	ldr	r1, [r3, #0]
 801980a:	2314      	movs	r3, #20
 801980c:	fb03 1302 	mla	r3, r3, r2, r1
 8019810:	6858      	ldr	r0, [r3, #4]
 8019812:	2800      	cmp	r0, #0
 8019814:	d03a      	beq.n	801988c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019816:	4920      	ldr	r1, [pc, #128]	; (8019898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019818:	6809      	ldr	r1, [r1, #0]
 801981a:	2900      	cmp	r1, #0
 801981c:	d036      	beq.n	801988c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801981e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019822:	2900      	cmp	r1, #0
 8019824:	d032      	beq.n	801988c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019826:	891a      	ldrh	r2, [r3, #8]
 8019828:	8958      	ldrh	r0, [r3, #10]
 801982a:	4350      	muls	r0, r2
 801982c:	7c5a      	ldrb	r2, [r3, #17]
 801982e:	7cdb      	ldrb	r3, [r3, #19]
 8019830:	0952      	lsrs	r2, r2, #5
 8019832:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019836:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801983a:	2b0b      	cmp	r3, #11
 801983c:	bf18      	it	ne
 801983e:	0040      	lslne	r0, r0, #1
 8019840:	3003      	adds	r0, #3
 8019842:	f020 0003 	bic.w	r0, r0, #3
 8019846:	4408      	add	r0, r1
 8019848:	4770      	bx	lr
 801984a:	4b14      	ldr	r3, [pc, #80]	; (801989c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801984c:	881b      	ldrh	r3, [r3, #0]
 801984e:	4403      	add	r3, r0
 8019850:	429a      	cmp	r2, r3
 8019852:	da1a      	bge.n	801988a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019854:	4b12      	ldr	r3, [pc, #72]	; (80198a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019856:	681b      	ldr	r3, [r3, #0]
 8019858:	1a10      	subs	r0, r2, r0
 801985a:	210e      	movs	r1, #14
 801985c:	fb01 3000 	mla	r0, r1, r0, r3
 8019860:	7b03      	ldrb	r3, [r0, #12]
 8019862:	f003 031f 	and.w	r3, r3, #31
 8019866:	2b0b      	cmp	r3, #11
 8019868:	d10b      	bne.n	8019882 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801986a:	8903      	ldrh	r3, [r0, #8]
 801986c:	8940      	ldrh	r0, [r0, #10]
 801986e:	4358      	muls	r0, r3
 8019870:	4b09      	ldr	r3, [pc, #36]	; (8019898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019872:	6819      	ldr	r1, [r3, #0]
 8019874:	3003      	adds	r0, #3
 8019876:	f020 0303 	bic.w	r3, r0, #3
 801987a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801987e:	4418      	add	r0, r3
 8019880:	4770      	bx	lr
 8019882:	2b0d      	cmp	r3, #13
 8019884:	d101      	bne.n	801988a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019886:	300d      	adds	r0, #13
 8019888:	4770      	bx	lr
 801988a:	2000      	movs	r0, #0
 801988c:	4770      	bx	lr
 801988e:	bf00      	nop
 8019890:	20012e2c 	.word	0x20012e2c
 8019894:	20012e34 	.word	0x20012e34
 8019898:	20012e10 	.word	0x20012e10
 801989c:	20012e30 	.word	0x20012e30
 80198a0:	20012e14 	.word	0x20012e14

080198a4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80198a4:	b510      	push	{r4, lr}
 80198a6:	4a17      	ldr	r2, [pc, #92]	; (8019904 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80198a8:	8803      	ldrh	r3, [r0, #0]
 80198aa:	8812      	ldrh	r2, [r2, #0]
 80198ac:	4293      	cmp	r3, r2
 80198ae:	d20c      	bcs.n	80198ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80198b0:	4a15      	ldr	r2, [pc, #84]	; (8019908 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80198b2:	6812      	ldr	r2, [r2, #0]
 80198b4:	2114      	movs	r1, #20
 80198b6:	fb01 2303 	mla	r3, r1, r3, r2
 80198ba:	7c58      	ldrb	r0, [r3, #17]
 80198bc:	0942      	lsrs	r2, r0, #5
 80198be:	7cd8      	ldrb	r0, [r3, #19]
 80198c0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80198c4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80198c8:	bd10      	pop	{r4, pc}
 80198ca:	4910      	ldr	r1, [pc, #64]	; (801990c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80198cc:	8809      	ldrh	r1, [r1, #0]
 80198ce:	4411      	add	r1, r2
 80198d0:	428b      	cmp	r3, r1
 80198d2:	da09      	bge.n	80198e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80198d4:	1a9b      	subs	r3, r3, r2
 80198d6:	4a0e      	ldr	r2, [pc, #56]	; (8019910 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80198d8:	6812      	ldr	r2, [r2, #0]
 80198da:	210e      	movs	r1, #14
 80198dc:	fb01 2303 	mla	r3, r1, r3, r2
 80198e0:	7b18      	ldrb	r0, [r3, #12]
 80198e2:	f000 001f 	and.w	r0, r0, #31
 80198e6:	e7ef      	b.n	80198c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80198e8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80198ec:	4293      	cmp	r3, r2
 80198ee:	d106      	bne.n	80198fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80198f0:	f7eb f808 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 80198f4:	6803      	ldr	r3, [r0, #0]
 80198f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80198fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80198fc:	4718      	bx	r3
 80198fe:	2000      	movs	r0, #0
 8019900:	e7e2      	b.n	80198c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019902:	bf00      	nop
 8019904:	20012e2c 	.word	0x20012e2c
 8019908:	20012e34 	.word	0x20012e34
 801990c:	20012e30 	.word	0x20012e30
 8019910:	20012e14 	.word	0x20012e14

08019914 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019914:	2010      	movs	r0, #16
 8019916:	4770      	bx	lr

08019918 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019918:	2000      	movs	r0, #0
 801991a:	4770      	bx	lr

0801991c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801991c:	4b02      	ldr	r3, [pc, #8]	; (8019928 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801991e:	8818      	ldrh	r0, [r3, #0]
 8019920:	0040      	lsls	r0, r0, #1
 8019922:	b280      	uxth	r0, r0
 8019924:	4770      	bx	lr
 8019926:	bf00      	nop
 8019928:	20012d9e 	.word	0x20012d9e

0801992c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801992c:	2bff      	cmp	r3, #255	; 0xff
 801992e:	d050      	beq.n	80199d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019930:	2a0b      	cmp	r2, #11
 8019932:	d04a      	beq.n	80199ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019934:	d80e      	bhi.n	8019954 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019936:	2a03      	cmp	r2, #3
 8019938:	d03f      	beq.n	80199ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801993a:	d804      	bhi.n	8019946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801993c:	2a01      	cmp	r2, #1
 801993e:	d03e      	beq.n	80199be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019940:	d93f      	bls.n	80199c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019942:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019944:	4770      	bx	lr
 8019946:	2a09      	cmp	r2, #9
 8019948:	d03f      	beq.n	80199ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801994a:	d83c      	bhi.n	80199c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801994c:	2a08      	cmp	r2, #8
 801994e:	d03a      	beq.n	80199c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019950:	2000      	movs	r0, #0
 8019952:	4770      	bx	lr
 8019954:	2a2f      	cmp	r2, #47	; 0x2f
 8019956:	d024      	beq.n	80199a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019958:	d80d      	bhi.n	8019976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801995a:	2a2d      	cmp	r2, #45	; 0x2d
 801995c:	d014      	beq.n	8019988 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801995e:	d826      	bhi.n	80199ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019960:	2a2c      	cmp	r2, #44	; 0x2c
 8019962:	d1f5      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019964:	684b      	ldr	r3, [r1, #4]
 8019966:	781b      	ldrb	r3, [r3, #0]
 8019968:	2b01      	cmp	r3, #1
 801996a:	d018      	beq.n	801999e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801996c:	d323      	bcc.n	80199b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801996e:	2b02      	cmp	r3, #2
 8019970:	d1ee      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019972:	6880      	ldr	r0, [r0, #8]
 8019974:	4770      	bx	lr
 8019976:	2a31      	cmp	r2, #49	; 0x31
 8019978:	d004      	beq.n	8019984 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801997a:	d328      	bcc.n	80199ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801997c:	2a32      	cmp	r2, #50	; 0x32
 801997e:	d026      	beq.n	80199ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019980:	2a33      	cmp	r2, #51	; 0x33
 8019982:	d1e5      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019984:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019986:	4770      	bx	lr
 8019988:	684b      	ldr	r3, [r1, #4]
 801998a:	781b      	ldrb	r3, [r3, #0]
 801998c:	2b01      	cmp	r3, #1
 801998e:	d004      	beq.n	801999a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019990:	d30b      	bcc.n	80199aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019992:	2b02      	cmp	r3, #2
 8019994:	d1dc      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019996:	6900      	ldr	r0, [r0, #16]
 8019998:	4770      	bx	lr
 801999a:	6a00      	ldr	r0, [r0, #32]
 801999c:	4770      	bx	lr
 801999e:	6980      	ldr	r0, [r0, #24]
 80199a0:	4770      	bx	lr
 80199a2:	684b      	ldr	r3, [r1, #4]
 80199a4:	781b      	ldrb	r3, [r3, #0]
 80199a6:	2b00      	cmp	r3, #0
 80199a8:	d1d2      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199aa:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80199ac:	4770      	bx	lr
 80199ae:	684b      	ldr	r3, [r1, #4]
 80199b0:	781b      	ldrb	r3, [r3, #0]
 80199b2:	2b00      	cmp	r3, #0
 80199b4:	d1cc      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199b6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80199b8:	4770      	bx	lr
 80199ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80199bc:	4770      	bx	lr
 80199be:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80199c0:	4770      	bx	lr
 80199c2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80199c4:	4770      	bx	lr
 80199c6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80199c8:	4770      	bx	lr
 80199ca:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80199cc:	4770      	bx	lr
 80199ce:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80199d0:	4770      	bx	lr
 80199d2:	2a0b      	cmp	r2, #11
 80199d4:	d049      	beq.n	8019a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80199d6:	d80e      	bhi.n	80199f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80199d8:	2a03      	cmp	r2, #3
 80199da:	d040      	beq.n	8019a5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80199dc:	d804      	bhi.n	80199e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80199de:	2a01      	cmp	r2, #1
 80199e0:	d03f      	beq.n	8019a62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80199e2:	d940      	bls.n	8019a66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80199e4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80199e6:	4770      	bx	lr
 80199e8:	2a09      	cmp	r2, #9
 80199ea:	d03e      	beq.n	8019a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80199ec:	d801      	bhi.n	80199f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80199ee:	2a08      	cmp	r2, #8
 80199f0:	d1ae      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199f2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80199f4:	4770      	bx	lr
 80199f6:	2a2f      	cmp	r2, #47	; 0x2f
 80199f8:	d024      	beq.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80199fa:	d80d      	bhi.n	8019a18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80199fc:	2a2d      	cmp	r2, #45	; 0x2d
 80199fe:	d014      	beq.n	8019a2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019a00:	d826      	bhi.n	8019a50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019a02:	2a2c      	cmp	r2, #44	; 0x2c
 8019a04:	d1a4      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a06:	684b      	ldr	r3, [r1, #4]
 8019a08:	781b      	ldrb	r3, [r3, #0]
 8019a0a:	2b01      	cmp	r3, #1
 8019a0c:	d018      	beq.n	8019a40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019a0e:	d324      	bcc.n	8019a5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019a10:	2b02      	cmp	r3, #2
 8019a12:	d19d      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a14:	68c0      	ldr	r0, [r0, #12]
 8019a16:	4770      	bx	lr
 8019a18:	2a31      	cmp	r2, #49	; 0x31
 8019a1a:	d004      	beq.n	8019a26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019a1c:	d327      	bcc.n	8019a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019a1e:	2a32      	cmp	r2, #50	; 0x32
 8019a20:	d025      	beq.n	8019a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019a22:	2a33      	cmp	r2, #51	; 0x33
 8019a24:	d194      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a26:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019a28:	4770      	bx	lr
 8019a2a:	684b      	ldr	r3, [r1, #4]
 8019a2c:	781b      	ldrb	r3, [r3, #0]
 8019a2e:	2b01      	cmp	r3, #1
 8019a30:	d004      	beq.n	8019a3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019a32:	d30b      	bcc.n	8019a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019a34:	2b02      	cmp	r3, #2
 8019a36:	d18b      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a38:	6940      	ldr	r0, [r0, #20]
 8019a3a:	4770      	bx	lr
 8019a3c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019a3e:	4770      	bx	lr
 8019a40:	69c0      	ldr	r0, [r0, #28]
 8019a42:	4770      	bx	lr
 8019a44:	684b      	ldr	r3, [r1, #4]
 8019a46:	781b      	ldrb	r3, [r3, #0]
 8019a48:	2b00      	cmp	r3, #0
 8019a4a:	d181      	bne.n	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a4c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019a4e:	4770      	bx	lr
 8019a50:	684b      	ldr	r3, [r1, #4]
 8019a52:	781b      	ldrb	r3, [r3, #0]
 8019a54:	2b00      	cmp	r3, #0
 8019a56:	f47f af7b 	bne.w	8019950 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a5a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019a5c:	4770      	bx	lr
 8019a5e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019a60:	4770      	bx	lr
 8019a62:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019a64:	4770      	bx	lr
 8019a66:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019a68:	4770      	bx	lr
 8019a6a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019a6c:	4770      	bx	lr
 8019a6e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019a70:	4770      	bx	lr

08019a72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a76:	b087      	sub	sp, #28
 8019a78:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019a7a:	9205      	str	r2, [sp, #20]
 8019a7c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019a80:	9202      	str	r2, [sp, #8]
 8019a82:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019a86:	9101      	str	r1, [sp, #4]
 8019a88:	6841      	ldr	r1, [r0, #4]
 8019a8a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019a8e:	fb01 2404 	mla	r4, r1, r4, r2
 8019a92:	6802      	ldr	r2, [r0, #0]
 8019a94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a98:	f8de 2000 	ldr.w	r2, [lr]
 8019a9c:	9203      	str	r2, [sp, #12]
 8019a9e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019aa2:	3204      	adds	r2, #4
 8019aa4:	9204      	str	r2, [sp, #16]
 8019aa6:	9a02      	ldr	r2, [sp, #8]
 8019aa8:	43d6      	mvns	r6, r2
 8019aaa:	b2f6      	uxtb	r6, r6
 8019aac:	9a01      	ldr	r2, [sp, #4]
 8019aae:	2a00      	cmp	r2, #0
 8019ab0:	dc03      	bgt.n	8019aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019ab2:	9a05      	ldr	r2, [sp, #20]
 8019ab4:	2a00      	cmp	r2, #0
 8019ab6:	f340 8129 	ble.w	8019d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019aba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019abc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019ac0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019ac4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019ac8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019aca:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ace:	2b00      	cmp	r3, #0
 8019ad0:	dd0e      	ble.n	8019af0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019ad2:	1408      	asrs	r0, r1, #16
 8019ad4:	d405      	bmi.n	8019ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ad6:	4560      	cmp	r0, ip
 8019ad8:	da03      	bge.n	8019ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ada:	1410      	asrs	r0, r2, #16
 8019adc:	d401      	bmi.n	8019ae2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ade:	42b8      	cmp	r0, r7
 8019ae0:	db07      	blt.n	8019af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019ae2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ae4:	4401      	add	r1, r0
 8019ae6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019ae8:	3b01      	subs	r3, #1
 8019aea:	4402      	add	r2, r0
 8019aec:	3402      	adds	r4, #2
 8019aee:	e7ee      	b.n	8019ace <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019af0:	d071      	beq.n	8019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019af2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019af4:	1e58      	subs	r0, r3, #1
 8019af6:	fb05 1500 	mla	r5, r5, r0, r1
 8019afa:	142d      	asrs	r5, r5, #16
 8019afc:	d45f      	bmi.n	8019bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019afe:	4565      	cmp	r5, ip
 8019b00:	da5d      	bge.n	8019bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b02:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b04:	fb05 2000 	mla	r0, r5, r0, r2
 8019b08:	1400      	asrs	r0, r0, #16
 8019b0a:	d458      	bmi.n	8019bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b0c:	42b8      	cmp	r0, r7
 8019b0e:	da56      	bge.n	8019bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019b10:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019b14:	4699      	mov	r9, r3
 8019b16:	46a2      	mov	sl, r4
 8019b18:	f1b9 0f00 	cmp.w	r9, #0
 8019b1c:	dd57      	ble.n	8019bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019b1e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019b22:	9803      	ldr	r0, [sp, #12]
 8019b24:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019b28:	140d      	asrs	r5, r1, #16
 8019b2a:	fb07 000c 	mla	r0, r7, ip, r0
 8019b2e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019b32:	5d40      	ldrb	r0, [r0, r5]
 8019b34:	9d04      	ldr	r5, [sp, #16]
 8019b36:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019b3a:	f8ba 5000 	ldrh.w	r5, [sl]
 8019b3e:	122f      	asrs	r7, r5, #8
 8019b40:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019b44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b48:	fb17 f706 	smulbb	r7, r7, r6
 8019b4c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019b50:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b54:	00ed      	lsls	r5, r5, #3
 8019b56:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019b5a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019b5e:	10c7      	asrs	r7, r0, #3
 8019b60:	b2ed      	uxtb	r5, r5
 8019b62:	00c0      	lsls	r0, r0, #3
 8019b64:	fb18 f806 	smulbb	r8, r8, r6
 8019b68:	fb15 f506 	smulbb	r5, r5, r6
 8019b6c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b70:	b2c0      	uxtb	r0, r0
 8019b72:	fa1f fc8c 	uxth.w	ip, ip
 8019b76:	fb07 870b 	mla	r7, r7, fp, r8
 8019b7a:	fb00 500b 	mla	r0, r0, fp, r5
 8019b7e:	b280      	uxth	r0, r0
 8019b80:	b2bf      	uxth	r7, r7
 8019b82:	f10c 0501 	add.w	r5, ip, #1
 8019b86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019b8a:	f107 0801 	add.w	r8, r7, #1
 8019b8e:	1c45      	adds	r5, r0, #1
 8019b90:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019b94:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019b98:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b9a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b9e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019ba2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019ba6:	ea45 0c0c 	orr.w	ip, r5, ip
 8019baa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019bae:	4401      	add	r1, r0
 8019bb0:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019bb2:	ea4c 0c08 	orr.w	ip, ip, r8
 8019bb6:	f82a cb02 	strh.w	ip, [sl], #2
 8019bba:	4402      	add	r2, r0
 8019bbc:	e7ac      	b.n	8019b18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019bbe:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019bc2:	f04f 0800 	mov.w	r8, #0
 8019bc6:	eb03 0008 	add.w	r0, r3, r8
 8019bca:	2800      	cmp	r0, #0
 8019bcc:	dc41      	bgt.n	8019c52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019bce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019bd2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019bd6:	9b01      	ldr	r3, [sp, #4]
 8019bd8:	2b00      	cmp	r3, #0
 8019bda:	f340 8097 	ble.w	8019d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019bde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019be2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019be6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019bea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019bec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bf0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019bf4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019bf8:	eef0 6a62 	vmov.f32	s13, s5
 8019bfc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c08:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019c0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c10:	eef0 6a43 	vmov.f32	s13, s6
 8019c14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c18:	ee12 2a90 	vmov	r2, s5
 8019c1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c20:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c24:	ee13 2a10 	vmov	r2, s6
 8019c28:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c30:	9314      	str	r3, [sp, #80]	; 0x50
 8019c32:	9b01      	ldr	r3, [sp, #4]
 8019c34:	9a05      	ldr	r2, [sp, #20]
 8019c36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c3a:	3b01      	subs	r3, #1
 8019c3c:	9301      	str	r3, [sp, #4]
 8019c3e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019c42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c44:	eeb0 3a67 	vmov.f32	s6, s15
 8019c48:	bf08      	it	eq
 8019c4a:	4613      	moveq	r3, r2
 8019c4c:	eef0 2a47 	vmov.f32	s5, s14
 8019c50:	e72c      	b.n	8019aac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019c52:	140f      	asrs	r7, r1, #16
 8019c54:	d453      	bmi.n	8019cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c56:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019c5a:	42bd      	cmp	r5, r7
 8019c5c:	dd4f      	ble.n	8019cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c5e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019c62:	d44c      	bmi.n	8019cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c64:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019c68:	4560      	cmp	r0, ip
 8019c6a:	dd48      	ble.n	8019cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c6c:	9803      	ldr	r0, [sp, #12]
 8019c6e:	b22d      	sxth	r5, r5
 8019c70:	fb0c 0505 	mla	r5, ip, r5, r0
 8019c74:	5de8      	ldrb	r0, [r5, r7]
 8019c76:	9d04      	ldr	r5, [sp, #16]
 8019c78:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019c7c:	f06f 0501 	mvn.w	r5, #1
 8019c80:	fb05 fb08 	mul.w	fp, r5, r8
 8019c84:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019c88:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019c8c:	122f      	asrs	r7, r5, #8
 8019c8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c92:	fb17 f706 	smulbb	r7, r7, r6
 8019c96:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019c9a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c9e:	00ed      	lsls	r5, r5, #3
 8019ca0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019ca4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019ca8:	10c7      	asrs	r7, r0, #3
 8019caa:	b2ed      	uxtb	r5, r5
 8019cac:	00c0      	lsls	r0, r0, #3
 8019cae:	fb19 f906 	smulbb	r9, r9, r6
 8019cb2:	fb15 f506 	smulbb	r5, r5, r6
 8019cb6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cba:	b2c0      	uxtb	r0, r0
 8019cbc:	fa1f fc8c 	uxth.w	ip, ip
 8019cc0:	fb07 970a 	mla	r7, r7, sl, r9
 8019cc4:	fb00 500a 	mla	r0, r0, sl, r5
 8019cc8:	b2bf      	uxth	r7, r7
 8019cca:	b280      	uxth	r0, r0
 8019ccc:	f10c 0501 	add.w	r5, ip, #1
 8019cd0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019cd4:	f107 0901 	add.w	r9, r7, #1
 8019cd8:	1c45      	adds	r5, r0, #1
 8019cda:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019cde:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019ce2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ce6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019cea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019cee:	ea45 0c0c 	orr.w	ip, r5, ip
 8019cf2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019cf6:	ea4c 0c09 	orr.w	ip, ip, r9
 8019cfa:	f824 c00b 	strh.w	ip, [r4, fp]
 8019cfe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019d00:	4401      	add	r1, r0
 8019d02:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019d04:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d08:	4402      	add	r2, r0
 8019d0a:	e75c      	b.n	8019bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019d0c:	b007      	add	sp, #28
 8019d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d16:	b085      	sub	sp, #20
 8019d18:	4693      	mov	fp, r2
 8019d1a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019d1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019d1e:	6870      	ldr	r0, [r6, #4]
 8019d20:	9100      	str	r1, [sp, #0]
 8019d22:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019d26:	fb00 2404 	mla	r4, r0, r4, r2
 8019d2a:	6832      	ldr	r2, [r6, #0]
 8019d2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019d30:	682a      	ldr	r2, [r5, #0]
 8019d32:	9201      	str	r2, [sp, #4]
 8019d34:	686a      	ldr	r2, [r5, #4]
 8019d36:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019d3a:	3204      	adds	r2, #4
 8019d3c:	9202      	str	r2, [sp, #8]
 8019d3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019d42:	9a00      	ldr	r2, [sp, #0]
 8019d44:	2a00      	cmp	r2, #0
 8019d46:	dc03      	bgt.n	8019d50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019d48:	f1bb 0f00 	cmp.w	fp, #0
 8019d4c:	f340 80a0 	ble.w	8019e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019d50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d52:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019d56:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019d5a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019d5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d60:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d64:	2b00      	cmp	r3, #0
 8019d66:	dd0c      	ble.n	8019d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019d68:	1406      	asrs	r6, r0, #16
 8019d6a:	d405      	bmi.n	8019d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d6c:	454e      	cmp	r6, r9
 8019d6e:	da03      	bge.n	8019d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d70:	1416      	asrs	r6, r2, #16
 8019d72:	d401      	bmi.n	8019d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d74:	4546      	cmp	r6, r8
 8019d76:	db05      	blt.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019d78:	4470      	add	r0, lr
 8019d7a:	4462      	add	r2, ip
 8019d7c:	3b01      	subs	r3, #1
 8019d7e:	3402      	adds	r4, #2
 8019d80:	e7f0      	b.n	8019d64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019d82:	d00f      	beq.n	8019da4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019d84:	1e5e      	subs	r6, r3, #1
 8019d86:	fb0e 0706 	mla	r7, lr, r6, r0
 8019d8a:	143f      	asrs	r7, r7, #16
 8019d8c:	d541      	bpl.n	8019e12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019d8e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019d92:	4698      	mov	r8, r3
 8019d94:	9603      	str	r6, [sp, #12]
 8019d96:	f1b8 0f00 	cmp.w	r8, #0
 8019d9a:	dc59      	bgt.n	8019e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019da0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019da4:	9b00      	ldr	r3, [sp, #0]
 8019da6:	2b00      	cmp	r3, #0
 8019da8:	dd72      	ble.n	8019e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019daa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019db2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019db6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019db8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019dc0:	eeb0 6a62 	vmov.f32	s12, s5
 8019dc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019dcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019dd0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019dd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dd8:	eeb0 6a43 	vmov.f32	s12, s6
 8019ddc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019de0:	ee12 2a90 	vmov	r2, s5
 8019de4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019de8:	fb92 fef3 	sdiv	lr, r2, r3
 8019dec:	ee13 2a10 	vmov	r2, s6
 8019df0:	fb92 fcf3 	sdiv	ip, r2, r3
 8019df4:	9b00      	ldr	r3, [sp, #0]
 8019df6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019dfa:	3b01      	subs	r3, #1
 8019dfc:	9300      	str	r3, [sp, #0]
 8019dfe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019e02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e04:	eeb0 3a67 	vmov.f32	s6, s15
 8019e08:	bf08      	it	eq
 8019e0a:	465b      	moveq	r3, fp
 8019e0c:	eef0 2a47 	vmov.f32	s5, s14
 8019e10:	e797      	b.n	8019d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019e12:	454f      	cmp	r7, r9
 8019e14:	dabb      	bge.n	8019d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e16:	fb0c 2606 	mla	r6, ip, r6, r2
 8019e1a:	1436      	asrs	r6, r6, #16
 8019e1c:	d4b7      	bmi.n	8019d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e1e:	4546      	cmp	r6, r8
 8019e20:	dab5      	bge.n	8019d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e22:	461e      	mov	r6, r3
 8019e24:	46a0      	mov	r8, r4
 8019e26:	2e00      	cmp	r6, #0
 8019e28:	ddb8      	ble.n	8019d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019e2a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019e2e:	9901      	ldr	r1, [sp, #4]
 8019e30:	1417      	asrs	r7, r2, #16
 8019e32:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019e36:	fb0a 1707 	mla	r7, sl, r7, r1
 8019e3a:	9902      	ldr	r1, [sp, #8]
 8019e3c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019e40:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019e44:	f828 7b02 	strh.w	r7, [r8], #2
 8019e48:	4470      	add	r0, lr
 8019e4a:	4462      	add	r2, ip
 8019e4c:	3e01      	subs	r6, #1
 8019e4e:	e7ea      	b.n	8019e26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019e50:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019e54:	d417      	bmi.n	8019e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e56:	68ae      	ldr	r6, [r5, #8]
 8019e58:	454e      	cmp	r6, r9
 8019e5a:	dd14      	ble.n	8019e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e5c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019e60:	d411      	bmi.n	8019e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e62:	68ef      	ldr	r7, [r5, #12]
 8019e64:	4557      	cmp	r7, sl
 8019e66:	dd0e      	ble.n	8019e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019e68:	9f01      	ldr	r7, [sp, #4]
 8019e6a:	b236      	sxth	r6, r6
 8019e6c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019e70:	9f02      	ldr	r7, [sp, #8]
 8019e72:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019e76:	f06f 0101 	mvn.w	r1, #1
 8019e7a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019e7e:	fb01 f608 	mul.w	r6, r1, r8
 8019e82:	9903      	ldr	r1, [sp, #12]
 8019e84:	538f      	strh	r7, [r1, r6]
 8019e86:	4470      	add	r0, lr
 8019e88:	4462      	add	r2, ip
 8019e8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e8e:	e782      	b.n	8019d96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e90:	b005      	add	sp, #20
 8019e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e9a:	b087      	sub	sp, #28
 8019e9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019e9e:	9205      	str	r2, [sp, #20]
 8019ea0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019ea4:	9203      	str	r2, [sp, #12]
 8019ea6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019eaa:	9102      	str	r1, [sp, #8]
 8019eac:	6861      	ldr	r1, [r4, #4]
 8019eae:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019eb2:	fb01 2000 	mla	r0, r1, r0, r2
 8019eb6:	6822      	ldr	r2, [r4, #0]
 8019eb8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019ebc:	9200      	str	r2, [sp, #0]
 8019ebe:	f8dc 2000 	ldr.w	r2, [ip]
 8019ec2:	9204      	str	r2, [sp, #16]
 8019ec4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019ec8:	3204      	adds	r2, #4
 8019eca:	9201      	str	r2, [sp, #4]
 8019ecc:	9a03      	ldr	r2, [sp, #12]
 8019ece:	43d5      	mvns	r5, r2
 8019ed0:	b2ed      	uxtb	r5, r5
 8019ed2:	9a02      	ldr	r2, [sp, #8]
 8019ed4:	2a00      	cmp	r2, #0
 8019ed6:	dc03      	bgt.n	8019ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019ed8:	9a05      	ldr	r2, [sp, #20]
 8019eda:	2a00      	cmp	r2, #0
 8019edc:	f340 812c 	ble.w	801a138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019ee0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ee2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019ee6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019eea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019eee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019ef0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ef4:	2b00      	cmp	r3, #0
 8019ef6:	dd10      	ble.n	8019f1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019ef8:	140c      	asrs	r4, r1, #16
 8019efa:	d405      	bmi.n	8019f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019efc:	4574      	cmp	r4, lr
 8019efe:	da03      	bge.n	8019f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f00:	1414      	asrs	r4, r2, #16
 8019f02:	d401      	bmi.n	8019f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f04:	42bc      	cmp	r4, r7
 8019f06:	db09      	blt.n	8019f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019f08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f0a:	9800      	ldr	r0, [sp, #0]
 8019f0c:	4421      	add	r1, r4
 8019f0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019f10:	3002      	adds	r0, #2
 8019f12:	4422      	add	r2, r4
 8019f14:	3b01      	subs	r3, #1
 8019f16:	9000      	str	r0, [sp, #0]
 8019f18:	e7ec      	b.n	8019ef4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019f1a:	d071      	beq.n	801a000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019f1c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f1e:	1e5c      	subs	r4, r3, #1
 8019f20:	fb06 1604 	mla	r6, r6, r4, r1
 8019f24:	1436      	asrs	r6, r6, #16
 8019f26:	d45d      	bmi.n	8019fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f28:	4576      	cmp	r6, lr
 8019f2a:	da5b      	bge.n	8019fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f2c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019f2e:	fb06 2404 	mla	r4, r6, r4, r2
 8019f32:	1424      	asrs	r4, r4, #16
 8019f34:	d456      	bmi.n	8019fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f36:	42bc      	cmp	r4, r7
 8019f38:	da54      	bge.n	8019fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019f3a:	f8dd 9000 	ldr.w	r9, [sp]
 8019f3e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019f42:	4698      	mov	r8, r3
 8019f44:	f1b8 0f00 	cmp.w	r8, #0
 8019f48:	dd54      	ble.n	8019ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019f4a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019f4e:	9804      	ldr	r0, [sp, #16]
 8019f50:	1414      	asrs	r4, r2, #16
 8019f52:	fb07 0404 	mla	r4, r7, r4, r0
 8019f56:	140e      	asrs	r6, r1, #16
 8019f58:	9801      	ldr	r0, [sp, #4]
 8019f5a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019f5e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019f62:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019f66:	eb00 0b0e 	add.w	fp, r0, lr
 8019f6a:	1227      	asrs	r7, r4, #8
 8019f6c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019f70:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019f74:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019f78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f7a:	fb16 f60a 	smulbb	r6, r6, sl
 8019f7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019f82:	fb07 6705 	mla	r7, r7, r5, r6
 8019f86:	10e6      	asrs	r6, r4, #3
 8019f88:	00e4      	lsls	r4, r4, #3
 8019f8a:	b2e4      	uxtb	r4, r4
 8019f8c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019f90:	fb14 f405 	smulbb	r4, r4, r5
 8019f94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f98:	b2bf      	uxth	r7, r7
 8019f9a:	fb06 b605 	mla	r6, r6, r5, fp
 8019f9e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019fa2:	b2b6      	uxth	r6, r6
 8019fa4:	fa1f fe8e 	uxth.w	lr, lr
 8019fa8:	1c7c      	adds	r4, r7, #1
 8019faa:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019fae:	f106 0b01 	add.w	fp, r6, #1
 8019fb2:	f10e 0401 	add.w	r4, lr, #1
 8019fb6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019fba:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019fbe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019fc2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019fc6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019fca:	4327      	orrs	r7, r4
 8019fcc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019fd0:	4401      	add	r1, r0
 8019fd2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019fd4:	ea47 070b 	orr.w	r7, r7, fp
 8019fd8:	f829 7b02 	strh.w	r7, [r9], #2
 8019fdc:	4402      	add	r2, r0
 8019fde:	f108 38ff 	add.w	r8, r8, #4294967295
 8019fe2:	e7af      	b.n	8019f44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019fe4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019fe8:	f04f 0e00 	mov.w	lr, #0
 8019fec:	eb03 040e 	add.w	r4, r3, lr
 8019ff0:	2c00      	cmp	r4, #0
 8019ff2:	dc43      	bgt.n	801a07c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019ff4:	9a00      	ldr	r2, [sp, #0]
 8019ff6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ffa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ffe:	9300      	str	r3, [sp, #0]
 801a000:	9b02      	ldr	r3, [sp, #8]
 801a002:	2b00      	cmp	r3, #0
 801a004:	f340 8098 	ble.w	801a138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a008:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a00c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a010:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a014:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a016:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a01a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a01e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a022:	eef0 6a62 	vmov.f32	s13, s5
 801a026:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a02a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a02e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a032:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a036:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a03a:	eef0 6a43 	vmov.f32	s13, s6
 801a03e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a042:	ee12 2a90 	vmov	r2, s5
 801a046:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a04a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a04e:	ee13 2a10 	vmov	r2, s6
 801a052:	9313      	str	r3, [sp, #76]	; 0x4c
 801a054:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a056:	fb92 f3f3 	sdiv	r3, r2, r3
 801a05a:	9314      	str	r3, [sp, #80]	; 0x50
 801a05c:	9b02      	ldr	r3, [sp, #8]
 801a05e:	9a05      	ldr	r2, [sp, #20]
 801a060:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a064:	3b01      	subs	r3, #1
 801a066:	9302      	str	r3, [sp, #8]
 801a068:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a06c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a06e:	eeb0 3a67 	vmov.f32	s6, s15
 801a072:	bf08      	it	eq
 801a074:	4613      	moveq	r3, r2
 801a076:	eef0 2a47 	vmov.f32	s5, s14
 801a07a:	e72a      	b.n	8019ed2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a07c:	140f      	asrs	r7, r1, #16
 801a07e:	d454      	bmi.n	801a12a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a080:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a084:	42be      	cmp	r6, r7
 801a086:	dd50      	ble.n	801a12a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a088:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a08c:	d44d      	bmi.n	801a12a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a08e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a092:	4544      	cmp	r4, r8
 801a094:	dd49      	ble.n	801a12a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a096:	9c04      	ldr	r4, [sp, #16]
 801a098:	b236      	sxth	r6, r6
 801a09a:	fb08 4606 	mla	r6, r8, r6, r4
 801a09e:	f06f 0001 	mvn.w	r0, #1
 801a0a2:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a0a6:	9c01      	ldr	r4, [sp, #4]
 801a0a8:	fb00 fa0e 	mul.w	sl, r0, lr
 801a0ac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a0b0:	9800      	ldr	r0, [sp, #0]
 801a0b2:	eb04 0b08 	add.w	fp, r4, r8
 801a0b6:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a0ba:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a0be:	9801      	ldr	r0, [sp, #4]
 801a0c0:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a0c4:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a0c8:	9800      	ldr	r0, [sp, #0]
 801a0ca:	1227      	asrs	r7, r4, #8
 801a0cc:	fb16 f609 	smulbb	r6, r6, r9
 801a0d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0d4:	fb07 6705 	mla	r7, r7, r5, r6
 801a0d8:	10e6      	asrs	r6, r4, #3
 801a0da:	00e4      	lsls	r4, r4, #3
 801a0dc:	b2e4      	uxtb	r4, r4
 801a0de:	fb1b fb09 	smulbb	fp, fp, r9
 801a0e2:	fb14 f405 	smulbb	r4, r4, r5
 801a0e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a0ea:	b2bf      	uxth	r7, r7
 801a0ec:	fb06 b605 	mla	r6, r6, r5, fp
 801a0f0:	fb08 4809 	mla	r8, r8, r9, r4
 801a0f4:	b2b6      	uxth	r6, r6
 801a0f6:	fa1f f888 	uxth.w	r8, r8
 801a0fa:	1c7c      	adds	r4, r7, #1
 801a0fc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a100:	f106 0b01 	add.w	fp, r6, #1
 801a104:	f108 0401 	add.w	r4, r8, #1
 801a108:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a10c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a110:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a114:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a118:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a11c:	4327      	orrs	r7, r4
 801a11e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a122:	ea47 070b 	orr.w	r7, r7, fp
 801a126:	f820 700a 	strh.w	r7, [r0, sl]
 801a12a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a12c:	4401      	add	r1, r0
 801a12e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a130:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a134:	4402      	add	r2, r0
 801a136:	e759      	b.n	8019fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a138:	b007      	add	sp, #28
 801a13a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a144:	b085      	sub	sp, #20
 801a146:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a14a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a14c:	9203      	str	r2, [sp, #12]
 801a14e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a152:	6870      	ldr	r0, [r6, #4]
 801a154:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a156:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a15a:	686f      	ldr	r7, [r5, #4]
 801a15c:	9101      	str	r1, [sp, #4]
 801a15e:	fb00 2404 	mla	r4, r0, r4, r2
 801a162:	6832      	ldr	r2, [r6, #0]
 801a164:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a168:	682a      	ldr	r2, [r5, #0]
 801a16a:	9202      	str	r2, [sp, #8]
 801a16c:	3704      	adds	r7, #4
 801a16e:	9a01      	ldr	r2, [sp, #4]
 801a170:	2a00      	cmp	r2, #0
 801a172:	dc03      	bgt.n	801a17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a174:	9a03      	ldr	r2, [sp, #12]
 801a176:	2a00      	cmp	r2, #0
 801a178:	f340 80cc 	ble.w	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a17c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a17e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a182:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a186:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a18a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a18c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a190:	2b00      	cmp	r3, #0
 801a192:	dd0d      	ble.n	801a1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a194:	1406      	asrs	r6, r0, #16
 801a196:	d405      	bmi.n	801a1a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a198:	454e      	cmp	r6, r9
 801a19a:	da03      	bge.n	801a1a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a19c:	1416      	asrs	r6, r2, #16
 801a19e:	d401      	bmi.n	801a1a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a1a0:	4546      	cmp	r6, r8
 801a1a2:	db06      	blt.n	801a1b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1a4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a1a6:	4460      	add	r0, ip
 801a1a8:	4432      	add	r2, r6
 801a1aa:	3b01      	subs	r3, #1
 801a1ac:	3402      	adds	r4, #2
 801a1ae:	e7ef      	b.n	801a190 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a1b0:	d00f      	beq.n	801a1d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1b2:	1e5e      	subs	r6, r3, #1
 801a1b4:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a1b8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a1bc:	d543      	bpl.n	801a246 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a1be:	4698      	mov	r8, r3
 801a1c0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a1c4:	f1b8 0f00 	cmp.w	r8, #0
 801a1c8:	dc71      	bgt.n	801a2ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a1ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a1ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a1d2:	9b01      	ldr	r3, [sp, #4]
 801a1d4:	2b00      	cmp	r3, #0
 801a1d6:	f340 809d 	ble.w	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a1da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a1e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1f0:	eeb0 6a62 	vmov.f32	s12, s5
 801a1f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a1fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a200:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a204:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a208:	eeb0 6a43 	vmov.f32	s12, s6
 801a20c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a210:	ee12 2a90 	vmov	r2, s5
 801a214:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a218:	fb92 fcf3 	sdiv	ip, r2, r3
 801a21c:	ee13 2a10 	vmov	r2, s6
 801a220:	fb92 f3f3 	sdiv	r3, r2, r3
 801a224:	9312      	str	r3, [sp, #72]	; 0x48
 801a226:	9b01      	ldr	r3, [sp, #4]
 801a228:	9a03      	ldr	r2, [sp, #12]
 801a22a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a22e:	3b01      	subs	r3, #1
 801a230:	9301      	str	r3, [sp, #4]
 801a232:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a238:	eeb0 3a67 	vmov.f32	s6, s15
 801a23c:	bf08      	it	eq
 801a23e:	4613      	moveq	r3, r2
 801a240:	eef0 2a47 	vmov.f32	s5, s14
 801a244:	e793      	b.n	801a16e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a246:	45ce      	cmp	lr, r9
 801a248:	dab9      	bge.n	801a1be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a24a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a24c:	fb01 2606 	mla	r6, r1, r6, r2
 801a250:	1436      	asrs	r6, r6, #16
 801a252:	d4b4      	bmi.n	801a1be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a254:	4546      	cmp	r6, r8
 801a256:	dab2      	bge.n	801a1be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a258:	4698      	mov	r8, r3
 801a25a:	46a2      	mov	sl, r4
 801a25c:	f1b8 0f00 	cmp.w	r8, #0
 801a260:	ddb3      	ble.n	801a1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a262:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a266:	9902      	ldr	r1, [sp, #8]
 801a268:	1416      	asrs	r6, r2, #16
 801a26a:	fb09 1606 	mla	r6, r9, r6, r1
 801a26e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a272:	492a      	ldr	r1, [pc, #168]	; (801a31c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a274:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a278:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a27c:	eb07 0b0e 	add.w	fp, r7, lr
 801a280:	4460      	add	r0, ip
 801a282:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a286:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a28a:	00f6      	lsls	r6, r6, #3
 801a28c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a290:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a294:	ea49 0606 	orr.w	r6, r9, r6
 801a298:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a29c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a29e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a2a2:	f82a 6b02 	strh.w	r6, [sl], #2
 801a2a6:	440a      	add	r2, r1
 801a2a8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a2ac:	e7d6      	b.n	801a25c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a2ae:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a2b2:	d429      	bmi.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2b4:	68ae      	ldr	r6, [r5, #8]
 801a2b6:	454e      	cmp	r6, r9
 801a2b8:	dd26      	ble.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2ba:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a2be:	d423      	bmi.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2c0:	68e9      	ldr	r1, [r5, #12]
 801a2c2:	4559      	cmp	r1, fp
 801a2c4:	dd20      	ble.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a2c6:	9902      	ldr	r1, [sp, #8]
 801a2c8:	fa0f fe86 	sxth.w	lr, r6
 801a2cc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a2d0:	f06f 0101 	mvn.w	r1, #1
 801a2d4:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a2d8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a2dc:	eb07 060e 	add.w	r6, r7, lr
 801a2e0:	fb01 f908 	mul.w	r9, r1, r8
 801a2e4:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a2e8:	7876      	ldrb	r6, [r6, #1]
 801a2ea:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a2ee:	00f6      	lsls	r6, r6, #3
 801a2f0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a2f4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a2f8:	ea4b 0606 	orr.w	r6, fp, r6
 801a2fc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a300:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a304:	f82a 6009 	strh.w	r6, [sl, r9]
 801a308:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a30a:	4460      	add	r0, ip
 801a30c:	440a      	add	r2, r1
 801a30e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a312:	e757      	b.n	801a1c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a314:	b005      	add	sp, #20
 801a316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a31a:	bf00      	nop
 801a31c:	fffff800 	.word	0xfffff800

0801a320 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a324:	b087      	sub	sp, #28
 801a326:	468b      	mov	fp, r1
 801a328:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a32a:	9204      	str	r2, [sp, #16]
 801a32c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a330:	9205      	str	r2, [sp, #20]
 801a332:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a336:	6841      	ldr	r1, [r0, #4]
 801a338:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a33c:	fb01 2404 	mla	r4, r1, r4, r2
 801a340:	6802      	ldr	r2, [r0, #0]
 801a342:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a346:	f8dc 2000 	ldr.w	r2, [ip]
 801a34a:	9201      	str	r2, [sp, #4]
 801a34c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a350:	3204      	adds	r2, #4
 801a352:	9202      	str	r2, [sp, #8]
 801a354:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a358:	f1bb 0f00 	cmp.w	fp, #0
 801a35c:	dc03      	bgt.n	801a366 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a35e:	9a04      	ldr	r2, [sp, #16]
 801a360:	2a00      	cmp	r2, #0
 801a362:	f340 8138 	ble.w	801a5d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a366:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a368:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a36c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a370:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a374:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a376:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a37a:	2b00      	cmp	r3, #0
 801a37c:	dd0e      	ble.n	801a39c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a37e:	1402      	asrs	r2, r0, #16
 801a380:	d405      	bmi.n	801a38e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a382:	42ba      	cmp	r2, r7
 801a384:	da03      	bge.n	801a38e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a386:	140a      	asrs	r2, r1, #16
 801a388:	d401      	bmi.n	801a38e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a38a:	42b2      	cmp	r2, r6
 801a38c:	db07      	blt.n	801a39e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a38e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a390:	4410      	add	r0, r2
 801a392:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a394:	3b01      	subs	r3, #1
 801a396:	4411      	add	r1, r2
 801a398:	3402      	adds	r4, #2
 801a39a:	e7ee      	b.n	801a37a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a39c:	d019      	beq.n	801a3d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a39e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a3a0:	1e5a      	subs	r2, r3, #1
 801a3a2:	fb05 0502 	mla	r5, r5, r2, r0
 801a3a6:	142d      	asrs	r5, r5, #16
 801a3a8:	d409      	bmi.n	801a3be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3aa:	42bd      	cmp	r5, r7
 801a3ac:	da07      	bge.n	801a3be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a3b0:	fb05 1202 	mla	r2, r5, r2, r1
 801a3b4:	1412      	asrs	r2, r2, #16
 801a3b6:	d402      	bmi.n	801a3be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3b8:	42b2      	cmp	r2, r6
 801a3ba:	f2c0 80ac 	blt.w	801a516 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a3be:	f04f 0e00 	mov.w	lr, #0
 801a3c2:	eb03 020e 	add.w	r2, r3, lr
 801a3c6:	2a00      	cmp	r2, #0
 801a3c8:	dc3e      	bgt.n	801a448 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a3ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a3ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3d2:	f1bb 0f00 	cmp.w	fp, #0
 801a3d6:	f340 80fe 	ble.w	801a5d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a3da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3e8:	f1bb 0b01 	subs.w	fp, fp, #1
 801a3ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3f4:	eeb0 6a62 	vmov.f32	s12, s5
 801a3f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a400:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a404:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a408:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a40c:	eeb0 6a43 	vmov.f32	s12, s6
 801a410:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a414:	ee12 2a90 	vmov	r2, s5
 801a418:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a41c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a420:	ee13 2a10 	vmov	r2, s6
 801a424:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a428:	9313      	str	r3, [sp, #76]	; 0x4c
 801a42a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a42c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a430:	9a04      	ldr	r2, [sp, #16]
 801a432:	9314      	str	r3, [sp, #80]	; 0x50
 801a434:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a438:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a43a:	eeb0 3a67 	vmov.f32	s6, s15
 801a43e:	bf08      	it	eq
 801a440:	4613      	moveq	r3, r2
 801a442:	eef0 2a47 	vmov.f32	s5, s14
 801a446:	e787      	b.n	801a358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a448:	1406      	asrs	r6, r0, #16
 801a44a:	d45d      	bmi.n	801a508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a44c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a450:	42b5      	cmp	r5, r6
 801a452:	dd59      	ble.n	801a508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a454:	140f      	asrs	r7, r1, #16
 801a456:	d457      	bmi.n	801a508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a458:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a45c:	42ba      	cmp	r2, r7
 801a45e:	dd53      	ble.n	801a508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a460:	9a01      	ldr	r2, [sp, #4]
 801a462:	b22d      	sxth	r5, r5
 801a464:	fb07 2505 	mla	r5, r7, r5, r2
 801a468:	5daa      	ldrb	r2, [r5, r6]
 801a46a:	9d02      	ldr	r5, [sp, #8]
 801a46c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a470:	0e2e      	lsrs	r6, r5, #24
 801a472:	d049      	beq.n	801a508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a474:	f06f 0201 	mvn.w	r2, #1
 801a478:	fb02 f20e 	mul.w	r2, r2, lr
 801a47c:	9203      	str	r2, [sp, #12]
 801a47e:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a482:	9a05      	ldr	r2, [sp, #20]
 801a484:	4356      	muls	r6, r2
 801a486:	1c72      	adds	r2, r6, #1
 801a488:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a48c:	1212      	asrs	r2, r2, #8
 801a48e:	fa1f f982 	uxth.w	r9, r2
 801a492:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a496:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a49a:	43d2      	mvns	r2, r2
 801a49c:	b2d2      	uxtb	r2, r2
 801a49e:	fb16 f609 	smulbb	r6, r6, r9
 801a4a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a4a6:	fb07 6702 	mla	r7, r7, r2, r6
 801a4aa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a4ae:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a4b2:	b2ed      	uxtb	r5, r5
 801a4b4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a4b8:	fa5f f888 	uxtb.w	r8, r8
 801a4bc:	fb15 f509 	smulbb	r5, r5, r9
 801a4c0:	fb08 5502 	mla	r5, r8, r2, r5
 801a4c4:	b2bf      	uxth	r7, r7
 801a4c6:	fb1a fa09 	smulbb	sl, sl, r9
 801a4ca:	b2ad      	uxth	r5, r5
 801a4cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a4d0:	fb06 a602 	mla	r6, r6, r2, sl
 801a4d4:	1c7a      	adds	r2, r7, #1
 801a4d6:	f105 0a01 	add.w	sl, r5, #1
 801a4da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a4de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a4e2:	b2b6      	uxth	r6, r6
 801a4e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a4e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a4ec:	ea4a 0707 	orr.w	r7, sl, r7
 801a4f0:	f106 0a01 	add.w	sl, r6, #1
 801a4f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a4f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a4fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a500:	9a03      	ldr	r2, [sp, #12]
 801a502:	ea47 070a 	orr.w	r7, r7, sl
 801a506:	52a7      	strh	r7, [r4, r2]
 801a508:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a50a:	4410      	add	r0, r2
 801a50c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a50e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a512:	4411      	add	r1, r2
 801a514:	e755      	b.n	801a3c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a516:	f04f 0800 	mov.w	r8, #0
 801a51a:	eba3 0208 	sub.w	r2, r3, r8
 801a51e:	2a00      	cmp	r2, #0
 801a520:	f77f af53 	ble.w	801a3ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a524:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a528:	9f01      	ldr	r7, [sp, #4]
 801a52a:	140a      	asrs	r2, r1, #16
 801a52c:	1405      	asrs	r5, r0, #16
 801a52e:	fb06 7202 	mla	r2, r6, r2, r7
 801a532:	5d52      	ldrb	r2, [r2, r5]
 801a534:	9d02      	ldr	r5, [sp, #8]
 801a536:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a53a:	0e2e      	lsrs	r6, r5, #24
 801a53c:	d044      	beq.n	801a5c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a53e:	9a05      	ldr	r2, [sp, #20]
 801a540:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a544:	4356      	muls	r6, r2
 801a546:	1c72      	adds	r2, r6, #1
 801a548:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a54c:	1212      	asrs	r2, r2, #8
 801a54e:	fa1f f982 	uxth.w	r9, r2
 801a552:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a556:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a55a:	43d2      	mvns	r2, r2
 801a55c:	b2d2      	uxtb	r2, r2
 801a55e:	fb16 f609 	smulbb	r6, r6, r9
 801a562:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a566:	fb07 6702 	mla	r7, r7, r2, r6
 801a56a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a56e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a572:	b2ed      	uxtb	r5, r5
 801a574:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a578:	fa5f fe8e 	uxtb.w	lr, lr
 801a57c:	fb15 f509 	smulbb	r5, r5, r9
 801a580:	fb0e 5502 	mla	r5, lr, r2, r5
 801a584:	b2bf      	uxth	r7, r7
 801a586:	fb1a fa09 	smulbb	sl, sl, r9
 801a58a:	b2ad      	uxth	r5, r5
 801a58c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a590:	fb06 a602 	mla	r6, r6, r2, sl
 801a594:	1c7a      	adds	r2, r7, #1
 801a596:	f105 0a01 	add.w	sl, r5, #1
 801a59a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a59e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a5a2:	b2b6      	uxth	r6, r6
 801a5a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a5ac:	ea4a 0707 	orr.w	r7, sl, r7
 801a5b0:	f106 0a01 	add.w	sl, r6, #1
 801a5b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a5b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5c0:	ea47 070a 	orr.w	r7, r7, sl
 801a5c4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a5c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5ca:	4410      	add	r0, r2
 801a5cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5ce:	f108 0801 	add.w	r8, r8, #1
 801a5d2:	4411      	add	r1, r2
 801a5d4:	e7a1      	b.n	801a51a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a5d6:	b007      	add	sp, #28
 801a5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a5dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5e0:	b085      	sub	sp, #20
 801a5e2:	468b      	mov	fp, r1
 801a5e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a5e6:	9203      	str	r2, [sp, #12]
 801a5e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a5ec:	6841      	ldr	r1, [r0, #4]
 801a5ee:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a5f2:	fb01 2404 	mla	r4, r1, r4, r2
 801a5f6:	6802      	ldr	r2, [r0, #0]
 801a5f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a5fc:	f8de 2000 	ldr.w	r2, [lr]
 801a600:	9200      	str	r2, [sp, #0]
 801a602:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a606:	3204      	adds	r2, #4
 801a608:	9201      	str	r2, [sp, #4]
 801a60a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a60e:	f1bb 0f00 	cmp.w	fp, #0
 801a612:	dc03      	bgt.n	801a61c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a614:	9a03      	ldr	r2, [sp, #12]
 801a616:	2a00      	cmp	r2, #0
 801a618:	f340 8153 	ble.w	801a8c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a61c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a61e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a622:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a626:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a62a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a62c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a630:	2b00      	cmp	r3, #0
 801a632:	dd0e      	ble.n	801a652 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a634:	1408      	asrs	r0, r1, #16
 801a636:	d405      	bmi.n	801a644 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a638:	42b8      	cmp	r0, r7
 801a63a:	da03      	bge.n	801a644 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a63c:	1410      	asrs	r0, r2, #16
 801a63e:	d401      	bmi.n	801a644 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a640:	42b0      	cmp	r0, r6
 801a642:	db07      	blt.n	801a654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a644:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a646:	4401      	add	r1, r0
 801a648:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a64a:	3b01      	subs	r3, #1
 801a64c:	4402      	add	r2, r0
 801a64e:	3402      	adds	r4, #2
 801a650:	e7ee      	b.n	801a630 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a652:	d017      	beq.n	801a684 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a654:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a656:	1e58      	subs	r0, r3, #1
 801a658:	fb05 1500 	mla	r5, r5, r0, r1
 801a65c:	142d      	asrs	r5, r5, #16
 801a65e:	d409      	bmi.n	801a674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a660:	42bd      	cmp	r5, r7
 801a662:	da07      	bge.n	801a674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a664:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a666:	fb05 2000 	mla	r0, r5, r0, r2
 801a66a:	1400      	asrs	r0, r0, #16
 801a66c:	d402      	bmi.n	801a674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a66e:	42b0      	cmp	r0, r6
 801a670:	f2c0 80bc 	blt.w	801a7ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a674:	2600      	movs	r6, #0
 801a676:	1998      	adds	r0, r3, r6
 801a678:	2800      	cmp	r0, #0
 801a67a:	dc3e      	bgt.n	801a6fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a67c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a680:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a684:	f1bb 0f00 	cmp.w	fp, #0
 801a688:	f340 811b 	ble.w	801a8c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a68c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a690:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a694:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a698:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a69a:	f1bb 0b01 	subs.w	fp, fp, #1
 801a69e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6a6:	eeb0 6a62 	vmov.f32	s12, s5
 801a6aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6b6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a6ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6be:	eeb0 6a43 	vmov.f32	s12, s6
 801a6c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6c6:	ee12 2a90 	vmov	r2, s5
 801a6ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6d2:	ee13 2a10 	vmov	r2, s6
 801a6d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6da:	9311      	str	r3, [sp, #68]	; 0x44
 801a6dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6de:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6e2:	9a03      	ldr	r2, [sp, #12]
 801a6e4:	9312      	str	r3, [sp, #72]	; 0x48
 801a6e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a6ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6ec:	eeb0 3a67 	vmov.f32	s6, s15
 801a6f0:	bf08      	it	eq
 801a6f2:	4613      	moveq	r3, r2
 801a6f4:	eef0 2a47 	vmov.f32	s5, s14
 801a6f8:	e789      	b.n	801a60e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a6fa:	140f      	asrs	r7, r1, #16
 801a6fc:	d426      	bmi.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a6fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a702:	42bd      	cmp	r5, r7
 801a704:	dd22      	ble.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a706:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a70a:	d41f      	bmi.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a70c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a710:	4560      	cmp	r0, ip
 801a712:	dd1b      	ble.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a714:	9800      	ldr	r0, [sp, #0]
 801a716:	b22d      	sxth	r5, r5
 801a718:	fb0c 0505 	mla	r5, ip, r5, r0
 801a71c:	5de8      	ldrb	r0, [r5, r7]
 801a71e:	9d01      	ldr	r5, [sp, #4]
 801a720:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a724:	0e07      	lsrs	r7, r0, #24
 801a726:	2fff      	cmp	r7, #255	; 0xff
 801a728:	d116      	bne.n	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a72a:	f06f 0501 	mvn.w	r5, #1
 801a72e:	fb05 f706 	mul.w	r7, r5, r6
 801a732:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a736:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a73a:	0945      	lsrs	r5, r0, #5
 801a73c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a740:	ea4c 0505 	orr.w	r5, ip, r5
 801a744:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a748:	4305      	orrs	r5, r0
 801a74a:	53e5      	strh	r5, [r4, r7]
 801a74c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a74e:	4401      	add	r1, r0
 801a750:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a752:	3e01      	subs	r6, #1
 801a754:	4402      	add	r2, r0
 801a756:	e78e      	b.n	801a676 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a758:	b2fd      	uxtb	r5, r7
 801a75a:	2f00      	cmp	r7, #0
 801a75c:	d0f6      	beq.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a75e:	f06f 0701 	mvn.w	r7, #1
 801a762:	4377      	muls	r7, r6
 801a764:	fa1f f985 	uxth.w	r9, r5
 801a768:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a76c:	9702      	str	r7, [sp, #8]
 801a76e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a772:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a776:	43ed      	mvns	r5, r5
 801a778:	b2ed      	uxtb	r5, r5
 801a77a:	fb17 f709 	smulbb	r7, r7, r9
 801a77e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a782:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a786:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a78a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a78e:	b2c0      	uxtb	r0, r0
 801a790:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a794:	fa5f f888 	uxtb.w	r8, r8
 801a798:	fb10 f009 	smulbb	r0, r0, r9
 801a79c:	fb08 0005 	mla	r0, r8, r5, r0
 801a7a0:	b280      	uxth	r0, r0
 801a7a2:	fa1f fc8c 	uxth.w	ip, ip
 801a7a6:	fb1a fa09 	smulbb	sl, sl, r9
 801a7aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a7ae:	fb07 a705 	mla	r7, r7, r5, sl
 801a7b2:	f100 0a01 	add.w	sl, r0, #1
 801a7b6:	f10c 0501 	add.w	r5, ip, #1
 801a7ba:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a7be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a7c2:	b2bf      	uxth	r7, r7
 801a7c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a7cc:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a7d0:	f107 0a01 	add.w	sl, r7, #1
 801a7d4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a7d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7e0:	9802      	ldr	r0, [sp, #8]
 801a7e2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a7e6:	f824 c000 	strh.w	ip, [r4, r0]
 801a7ea:	e7af      	b.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a7ec:	f04f 0800 	mov.w	r8, #0
 801a7f0:	eba3 0008 	sub.w	r0, r3, r8
 801a7f4:	2800      	cmp	r0, #0
 801a7f6:	f77f af41 	ble.w	801a67c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a7fa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a7fe:	9f00      	ldr	r7, [sp, #0]
 801a800:	1410      	asrs	r0, r2, #16
 801a802:	140d      	asrs	r5, r1, #16
 801a804:	fb06 7000 	mla	r0, r6, r0, r7
 801a808:	5d40      	ldrb	r0, [r0, r5]
 801a80a:	9d01      	ldr	r5, [sp, #4]
 801a80c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a810:	0e2e      	lsrs	r6, r5, #24
 801a812:	2eff      	cmp	r6, #255	; 0xff
 801a814:	d112      	bne.n	801a83c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a816:	482c      	ldr	r0, [pc, #176]	; (801a8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a818:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a81c:	0968      	lsrs	r0, r5, #5
 801a81e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a822:	4330      	orrs	r0, r6
 801a824:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a828:	4328      	orrs	r0, r5
 801a82a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a82e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a830:	4401      	add	r1, r0
 801a832:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a834:	f108 0801 	add.w	r8, r8, #1
 801a838:	4402      	add	r2, r0
 801a83a:	e7d9      	b.n	801a7f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a83c:	b2f0      	uxtb	r0, r6
 801a83e:	2e00      	cmp	r6, #0
 801a840:	d0f5      	beq.n	801a82e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a842:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a846:	fa1f f980 	uxth.w	r9, r0
 801a84a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a84e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a852:	43c0      	mvns	r0, r0
 801a854:	b2c0      	uxtb	r0, r0
 801a856:	fb16 f609 	smulbb	r6, r6, r9
 801a85a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a85e:	fb07 6700 	mla	r7, r7, r0, r6
 801a862:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a866:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a86a:	b2ed      	uxtb	r5, r5
 801a86c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a870:	fa5f fc8c 	uxtb.w	ip, ip
 801a874:	fb15 f509 	smulbb	r5, r5, r9
 801a878:	fb0c 5500 	mla	r5, ip, r0, r5
 801a87c:	b2bf      	uxth	r7, r7
 801a87e:	fb1a fa09 	smulbb	sl, sl, r9
 801a882:	b2ad      	uxth	r5, r5
 801a884:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a888:	fb06 a600 	mla	r6, r6, r0, sl
 801a88c:	1c78      	adds	r0, r7, #1
 801a88e:	f105 0a01 	add.w	sl, r5, #1
 801a892:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a896:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a89a:	b2b6      	uxth	r6, r6
 801a89c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a8a4:	ea4a 0707 	orr.w	r7, sl, r7
 801a8a8:	f106 0a01 	add.w	sl, r6, #1
 801a8ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a8b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8b8:	ea47 070a 	orr.w	r7, r7, sl
 801a8bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a8c0:	e7b5      	b.n	801a82e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a8c2:	b005      	add	sp, #20
 801a8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8c8:	fffff800 	.word	0xfffff800

0801a8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a8cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8d0:	b087      	sub	sp, #28
 801a8d2:	468b      	mov	fp, r1
 801a8d4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a8d6:	9204      	str	r2, [sp, #16]
 801a8d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a8dc:	9205      	str	r2, [sp, #20]
 801a8de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a8e2:	6861      	ldr	r1, [r4, #4]
 801a8e4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a8e8:	fb01 2000 	mla	r0, r1, r0, r2
 801a8ec:	6822      	ldr	r2, [r4, #0]
 801a8ee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a8f2:	f8de 2000 	ldr.w	r2, [lr]
 801a8f6:	9201      	str	r2, [sp, #4]
 801a8f8:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a8fc:	9202      	str	r2, [sp, #8]
 801a8fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a902:	f1bb 0f00 	cmp.w	fp, #0
 801a906:	dc03      	bgt.n	801a910 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a908:	9a04      	ldr	r2, [sp, #16]
 801a90a:	2a00      	cmp	r2, #0
 801a90c:	f340 8142 	ble.w	801ab94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a910:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a912:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a916:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a91a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a91e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a920:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a924:	2b00      	cmp	r3, #0
 801a926:	dd0e      	ble.n	801a946 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a928:	140c      	asrs	r4, r1, #16
 801a92a:	d405      	bmi.n	801a938 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a92c:	42bc      	cmp	r4, r7
 801a92e:	da03      	bge.n	801a938 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a930:	1414      	asrs	r4, r2, #16
 801a932:	d401      	bmi.n	801a938 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a934:	42b4      	cmp	r4, r6
 801a936:	db07      	blt.n	801a948 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a938:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a93a:	4421      	add	r1, r4
 801a93c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a93e:	3b01      	subs	r3, #1
 801a940:	4422      	add	r2, r4
 801a942:	3002      	adds	r0, #2
 801a944:	e7ee      	b.n	801a924 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a946:	d019      	beq.n	801a97c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a948:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a94a:	1e5c      	subs	r4, r3, #1
 801a94c:	fb05 1504 	mla	r5, r5, r4, r1
 801a950:	142d      	asrs	r5, r5, #16
 801a952:	d409      	bmi.n	801a968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a954:	42bd      	cmp	r5, r7
 801a956:	da07      	bge.n	801a968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a958:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a95a:	fb05 2404 	mla	r4, r5, r4, r2
 801a95e:	1424      	asrs	r4, r4, #16
 801a960:	d402      	bmi.n	801a968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a962:	42b4      	cmp	r4, r6
 801a964:	f2c0 80b1 	blt.w	801aaca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a968:	f04f 0800 	mov.w	r8, #0
 801a96c:	eb03 0408 	add.w	r4, r3, r8
 801a970:	2c00      	cmp	r4, #0
 801a972:	dc3e      	bgt.n	801a9f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a974:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a978:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a97c:	f1bb 0f00 	cmp.w	fp, #0
 801a980:	f340 8108 	ble.w	801ab94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a984:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a988:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a98c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a990:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a992:	f1bb 0b01 	subs.w	fp, fp, #1
 801a996:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a99a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a99e:	eeb0 6a62 	vmov.f32	s12, s5
 801a9a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a9b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9b6:	eeb0 6a43 	vmov.f32	s12, s6
 801a9ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9be:	ee12 2a90 	vmov	r2, s5
 801a9c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9ca:	ee13 2a10 	vmov	r2, s6
 801a9ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9d2:	9313      	str	r3, [sp, #76]	; 0x4c
 801a9d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9da:	9a04      	ldr	r2, [sp, #16]
 801a9dc:	9314      	str	r3, [sp, #80]	; 0x50
 801a9de:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a9e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9e4:	eeb0 3a67 	vmov.f32	s6, s15
 801a9e8:	bf08      	it	eq
 801a9ea:	4613      	moveq	r3, r2
 801a9ec:	eef0 2a47 	vmov.f32	s5, s14
 801a9f0:	e787      	b.n	801a902 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a9f2:	140e      	asrs	r6, r1, #16
 801a9f4:	d462      	bmi.n	801aabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a9f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a9fa:	42b5      	cmp	r5, r6
 801a9fc:	dd5e      	ble.n	801aabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a9fe:	1417      	asrs	r7, r2, #16
 801aa00:	d45c      	bmi.n	801aabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa02:	f8de 400c 	ldr.w	r4, [lr, #12]
 801aa06:	42bc      	cmp	r4, r7
 801aa08:	dd58      	ble.n	801aabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa0a:	b22d      	sxth	r5, r5
 801aa0c:	fb07 6505 	mla	r5, r7, r5, r6
 801aa10:	9c02      	ldr	r4, [sp, #8]
 801aa12:	5d66      	ldrb	r6, [r4, r5]
 801aa14:	2e00      	cmp	r6, #0
 801aa16:	d051      	beq.n	801aabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aa18:	9c01      	ldr	r4, [sp, #4]
 801aa1a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801aa1e:	f06f 0401 	mvn.w	r4, #1
 801aa22:	fb04 f408 	mul.w	r4, r4, r8
 801aa26:	9403      	str	r4, [sp, #12]
 801aa28:	5b05      	ldrh	r5, [r0, r4]
 801aa2a:	9c05      	ldr	r4, [sp, #20]
 801aa2c:	4366      	muls	r6, r4
 801aa2e:	1c74      	adds	r4, r6, #1
 801aa30:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801aa34:	1224      	asrs	r4, r4, #8
 801aa36:	b2a7      	uxth	r7, r4
 801aa38:	122e      	asrs	r6, r5, #8
 801aa3a:	43e4      	mvns	r4, r4
 801aa3c:	b2e4      	uxtb	r4, r4
 801aa3e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801aa42:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa46:	fb16 f604 	smulbb	r6, r6, r4
 801aa4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aa4e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa52:	00ed      	lsls	r5, r5, #3
 801aa54:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aa58:	b2ed      	uxtb	r5, r5
 801aa5a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801aa5e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801aa62:	fb15 f504 	smulbb	r5, r5, r4
 801aa66:	fa5f f989 	uxtb.w	r9, r9
 801aa6a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aa6e:	fb09 5507 	mla	r5, r9, r7, r5
 801aa72:	fb1a fa04 	smulbb	sl, sl, r4
 801aa76:	fa1f fc8c 	uxth.w	ip, ip
 801aa7a:	b2ad      	uxth	r5, r5
 801aa7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa80:	fb06 a607 	mla	r6, r6, r7, sl
 801aa84:	f10c 0401 	add.w	r4, ip, #1
 801aa88:	f105 0a01 	add.w	sl, r5, #1
 801aa8c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801aa90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aa94:	b2b6      	uxth	r6, r6
 801aa96:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa9a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aa9e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aaa2:	f106 0a01 	add.w	sl, r6, #1
 801aaa6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aaaa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aaae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aab2:	9c03      	ldr	r4, [sp, #12]
 801aab4:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aab8:	f820 c004 	strh.w	ip, [r0, r4]
 801aabc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aabe:	4421      	add	r1, r4
 801aac0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aac2:	f108 38ff 	add.w	r8, r8, #4294967295
 801aac6:	4422      	add	r2, r4
 801aac8:	e750      	b.n	801a96c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aaca:	f04f 0900 	mov.w	r9, #0
 801aace:	eba3 0409 	sub.w	r4, r3, r9
 801aad2:	2c00      	cmp	r4, #0
 801aad4:	f77f af4e 	ble.w	801a974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aad8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801aadc:	140d      	asrs	r5, r1, #16
 801aade:	1414      	asrs	r4, r2, #16
 801aae0:	fb06 5404 	mla	r4, r6, r4, r5
 801aae4:	9d02      	ldr	r5, [sp, #8]
 801aae6:	5d2e      	ldrb	r6, [r5, r4]
 801aae8:	2e00      	cmp	r6, #0
 801aaea:	d04c      	beq.n	801ab86 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801aaec:	9d01      	ldr	r5, [sp, #4]
 801aaee:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801aaf2:	9c05      	ldr	r4, [sp, #20]
 801aaf4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801aaf8:	4366      	muls	r6, r4
 801aafa:	1c74      	adds	r4, r6, #1
 801aafc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ab00:	1224      	asrs	r4, r4, #8
 801ab02:	b2a7      	uxth	r7, r4
 801ab04:	122e      	asrs	r6, r5, #8
 801ab06:	43e4      	mvns	r4, r4
 801ab08:	b2e4      	uxtb	r4, r4
 801ab0a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ab0e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ab12:	fb16 f604 	smulbb	r6, r6, r4
 801ab16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab1a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab1e:	00ed      	lsls	r5, r5, #3
 801ab20:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ab24:	b2ed      	uxtb	r5, r5
 801ab26:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ab2a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab2e:	fb15 f504 	smulbb	r5, r5, r4
 801ab32:	fa5f f888 	uxtb.w	r8, r8
 801ab36:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab3a:	fb08 5507 	mla	r5, r8, r7, r5
 801ab3e:	fb1a fa04 	smulbb	sl, sl, r4
 801ab42:	fa1f fc8c 	uxth.w	ip, ip
 801ab46:	b2ad      	uxth	r5, r5
 801ab48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab4c:	fb06 a607 	mla	r6, r6, r7, sl
 801ab50:	f10c 0401 	add.w	r4, ip, #1
 801ab54:	f105 0a01 	add.w	sl, r5, #1
 801ab58:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ab5c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ab60:	b2b6      	uxth	r6, r6
 801ab62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab66:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab6a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ab6e:	f106 0a01 	add.w	sl, r6, #1
 801ab72:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab7a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab7e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ab82:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ab86:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab88:	4421      	add	r1, r4
 801ab8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ab8c:	f109 0901 	add.w	r9, r9, #1
 801ab90:	4422      	add	r2, r4
 801ab92:	e79c      	b.n	801aace <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801ab94:	b007      	add	sp, #28
 801ab96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab9e:	b085      	sub	sp, #20
 801aba0:	468b      	mov	fp, r1
 801aba2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aba4:	9203      	str	r2, [sp, #12]
 801aba6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801abaa:	6861      	ldr	r1, [r4, #4]
 801abac:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801abb0:	fb01 2000 	mla	r0, r1, r0, r2
 801abb4:	6822      	ldr	r2, [r4, #0]
 801abb6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801abba:	f8d8 2000 	ldr.w	r2, [r8]
 801abbe:	9200      	str	r2, [sp, #0]
 801abc0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801abc4:	9201      	str	r2, [sp, #4]
 801abc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801abca:	f1bb 0f00 	cmp.w	fp, #0
 801abce:	dc03      	bgt.n	801abd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801abd0:	9a03      	ldr	r2, [sp, #12]
 801abd2:	2a00      	cmp	r2, #0
 801abd4:	f340 8146 	ble.w	801ae64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801abd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801abda:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801abde:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801abe2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801abe6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801abe8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801abec:	2b00      	cmp	r3, #0
 801abee:	dd0e      	ble.n	801ac0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801abf0:	140c      	asrs	r4, r1, #16
 801abf2:	d405      	bmi.n	801ac00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801abf4:	42bc      	cmp	r4, r7
 801abf6:	da03      	bge.n	801ac00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801abf8:	1414      	asrs	r4, r2, #16
 801abfa:	d401      	bmi.n	801ac00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801abfc:	42b4      	cmp	r4, r6
 801abfe:	db07      	blt.n	801ac10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac00:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ac02:	4421      	add	r1, r4
 801ac04:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ac06:	3b01      	subs	r3, #1
 801ac08:	4422      	add	r2, r4
 801ac0a:	3002      	adds	r0, #2
 801ac0c:	e7ee      	b.n	801abec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ac0e:	d017      	beq.n	801ac40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ac10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac12:	1e5c      	subs	r4, r3, #1
 801ac14:	fb05 1504 	mla	r5, r5, r4, r1
 801ac18:	142d      	asrs	r5, r5, #16
 801ac1a:	d409      	bmi.n	801ac30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac1c:	42bd      	cmp	r5, r7
 801ac1e:	da07      	bge.n	801ac30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ac22:	fb05 2404 	mla	r4, r5, r4, r2
 801ac26:	1424      	asrs	r4, r4, #16
 801ac28:	d402      	bmi.n	801ac30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac2a:	42b4      	cmp	r4, r6
 801ac2c:	f2c0 80b3 	blt.w	801ad96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ac30:	2600      	movs	r6, #0
 801ac32:	199c      	adds	r4, r3, r6
 801ac34:	2c00      	cmp	r4, #0
 801ac36:	dc3e      	bgt.n	801acb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ac38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ac40:	f1bb 0f00 	cmp.w	fp, #0
 801ac44:	f340 810e 	ble.w	801ae64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ac48:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac50:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ac54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac56:	f1bb 0b01 	subs.w	fp, fp, #1
 801ac5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac62:	eeb0 6a62 	vmov.f32	s12, s5
 801ac66:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac72:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ac76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac7a:	eeb0 6a43 	vmov.f32	s12, s6
 801ac7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac82:	ee12 2a90 	vmov	r2, s5
 801ac86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac8e:	ee13 2a10 	vmov	r2, s6
 801ac92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac96:	9311      	str	r3, [sp, #68]	; 0x44
 801ac98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac9e:	9a03      	ldr	r2, [sp, #12]
 801aca0:	9312      	str	r3, [sp, #72]	; 0x48
 801aca2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aca6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aca8:	eeb0 3a67 	vmov.f32	s6, s15
 801acac:	bf08      	it	eq
 801acae:	4613      	moveq	r3, r2
 801acb0:	eef0 2a47 	vmov.f32	s5, s14
 801acb4:	e789      	b.n	801abca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801acb6:	140f      	asrs	r7, r1, #16
 801acb8:	d418      	bmi.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acba:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801acbe:	42bd      	cmp	r5, r7
 801acc0:	dd14      	ble.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acc2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801acc6:	d411      	bmi.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acc8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801accc:	4564      	cmp	r4, ip
 801acce:	dd0d      	ble.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acd0:	b22d      	sxth	r5, r5
 801acd2:	fb0c 7505 	mla	r5, ip, r5, r7
 801acd6:	9c01      	ldr	r4, [sp, #4]
 801acd8:	5d64      	ldrb	r4, [r4, r5]
 801acda:	2cff      	cmp	r4, #255	; 0xff
 801acdc:	d10c      	bne.n	801acf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801acde:	9c00      	ldr	r4, [sp, #0]
 801ace0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ace4:	f06f 0401 	mvn.w	r4, #1
 801ace8:	4374      	muls	r4, r6
 801acea:	5305      	strh	r5, [r0, r4]
 801acec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801acee:	4421      	add	r1, r4
 801acf0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801acf2:	3e01      	subs	r6, #1
 801acf4:	4422      	add	r2, r4
 801acf6:	e79c      	b.n	801ac32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801acf8:	2c00      	cmp	r4, #0
 801acfa:	d0f7      	beq.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acfc:	9f00      	ldr	r7, [sp, #0]
 801acfe:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ad02:	f06f 0501 	mvn.w	r5, #1
 801ad06:	4375      	muls	r5, r6
 801ad08:	9502      	str	r5, [sp, #8]
 801ad0a:	5b45      	ldrh	r5, [r0, r5]
 801ad0c:	fa1f fc84 	uxth.w	ip, r4
 801ad10:	122f      	asrs	r7, r5, #8
 801ad12:	43e4      	mvns	r4, r4
 801ad14:	b2e4      	uxtb	r4, r4
 801ad16:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ad1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad1e:	fb17 f704 	smulbb	r7, r7, r4
 801ad22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ad26:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ad2a:	00ed      	lsls	r5, r5, #3
 801ad2c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ad30:	b2ed      	uxtb	r5, r5
 801ad32:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ad36:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ad3a:	fb15 f504 	smulbb	r5, r5, r4
 801ad3e:	fa5f f989 	uxtb.w	r9, r9
 801ad42:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ad46:	fb09 550c 	mla	r5, r9, ip, r5
 801ad4a:	fb1a fa04 	smulbb	sl, sl, r4
 801ad4e:	fa1f fe8e 	uxth.w	lr, lr
 801ad52:	b2ad      	uxth	r5, r5
 801ad54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ad58:	fb07 a70c 	mla	r7, r7, ip, sl
 801ad5c:	f10e 0401 	add.w	r4, lr, #1
 801ad60:	f105 0a01 	add.w	sl, r5, #1
 801ad64:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ad68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad6c:	b2bf      	uxth	r7, r7
 801ad6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad72:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ad76:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ad7a:	f107 0a01 	add.w	sl, r7, #1
 801ad7e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ad82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad8a:	9c02      	ldr	r4, [sp, #8]
 801ad8c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ad90:	f820 e004 	strh.w	lr, [r0, r4]
 801ad94:	e7aa      	b.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ad96:	f04f 0900 	mov.w	r9, #0
 801ad9a:	eba3 0409 	sub.w	r4, r3, r9
 801ad9e:	2c00      	cmp	r4, #0
 801ada0:	f77f af4a 	ble.w	801ac38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ada4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ada8:	1414      	asrs	r4, r2, #16
 801adaa:	140d      	asrs	r5, r1, #16
 801adac:	fb06 5504 	mla	r5, r6, r4, r5
 801adb0:	9c01      	ldr	r4, [sp, #4]
 801adb2:	5d64      	ldrb	r4, [r4, r5]
 801adb4:	2cff      	cmp	r4, #255	; 0xff
 801adb6:	d10b      	bne.n	801add0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801adb8:	9c00      	ldr	r4, [sp, #0]
 801adba:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801adbe:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801adc2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801adc4:	4421      	add	r1, r4
 801adc6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801adc8:	f109 0901 	add.w	r9, r9, #1
 801adcc:	4422      	add	r2, r4
 801adce:	e7e4      	b.n	801ad9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801add0:	2c00      	cmp	r4, #0
 801add2:	d0f6      	beq.n	801adc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801add4:	9e00      	ldr	r6, [sp, #0]
 801add6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801adda:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801adde:	b2a7      	uxth	r7, r4
 801ade0:	122e      	asrs	r6, r5, #8
 801ade2:	43e4      	mvns	r4, r4
 801ade4:	b2e4      	uxtb	r4, r4
 801ade6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801adea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801adee:	fb16 f604 	smulbb	r6, r6, r4
 801adf2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801adf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801adfa:	00ed      	lsls	r5, r5, #3
 801adfc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ae00:	b2ed      	uxtb	r5, r5
 801ae02:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ae06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae0a:	fb15 f504 	smulbb	r5, r5, r4
 801ae0e:	fa5f fe8e 	uxtb.w	lr, lr
 801ae12:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ae16:	fb0e 5507 	mla	r5, lr, r7, r5
 801ae1a:	fb1a fa04 	smulbb	sl, sl, r4
 801ae1e:	fa1f fc8c 	uxth.w	ip, ip
 801ae22:	b2ad      	uxth	r5, r5
 801ae24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae28:	fb06 a607 	mla	r6, r6, r7, sl
 801ae2c:	f10c 0401 	add.w	r4, ip, #1
 801ae30:	f105 0a01 	add.w	sl, r5, #1
 801ae34:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ae38:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae3c:	b2b6      	uxth	r6, r6
 801ae3e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae42:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae46:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ae4a:	f106 0a01 	add.w	sl, r6, #1
 801ae4e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae56:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ae5e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ae62:	e7ae      	b.n	801adc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ae64:	b005      	add	sp, #20
 801ae66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae6e:	b085      	sub	sp, #20
 801ae70:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ae72:	9203      	str	r2, [sp, #12]
 801ae74:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ae78:	9201      	str	r2, [sp, #4]
 801ae7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ae7e:	9100      	str	r1, [sp, #0]
 801ae80:	6841      	ldr	r1, [r0, #4]
 801ae82:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ae86:	fb01 2404 	mla	r4, r1, r4, r2
 801ae8a:	6802      	ldr	r2, [r0, #0]
 801ae8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ae90:	f8de 2000 	ldr.w	r2, [lr]
 801ae94:	9202      	str	r2, [sp, #8]
 801ae96:	9a01      	ldr	r2, [sp, #4]
 801ae98:	43d6      	mvns	r6, r2
 801ae9a:	b2f6      	uxtb	r6, r6
 801ae9c:	9a00      	ldr	r2, [sp, #0]
 801ae9e:	2a00      	cmp	r2, #0
 801aea0:	dc03      	bgt.n	801aeaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aea2:	9a03      	ldr	r2, [sp, #12]
 801aea4:	2a00      	cmp	r2, #0
 801aea6:	f340 8124 	ble.w	801b0f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801aeaa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aeac:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801aeb0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801aeb4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aeb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aeba:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aebe:	2b00      	cmp	r3, #0
 801aec0:	dd0e      	ble.n	801aee0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aec2:	1408      	asrs	r0, r1, #16
 801aec4:	d405      	bmi.n	801aed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aec6:	4560      	cmp	r0, ip
 801aec8:	da03      	bge.n	801aed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aeca:	1410      	asrs	r0, r2, #16
 801aecc:	d401      	bmi.n	801aed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aece:	42b8      	cmp	r0, r7
 801aed0:	db07      	blt.n	801aee2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aed2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aed4:	4401      	add	r1, r0
 801aed6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aed8:	3b01      	subs	r3, #1
 801aeda:	4402      	add	r2, r0
 801aedc:	3402      	adds	r4, #2
 801aede:	e7ee      	b.n	801aebe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801aee0:	d06e      	beq.n	801afc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801aee2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aee4:	1e58      	subs	r0, r3, #1
 801aee6:	fb05 1500 	mla	r5, r5, r0, r1
 801aeea:	142d      	asrs	r5, r5, #16
 801aeec:	d45c      	bmi.n	801afa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aeee:	4565      	cmp	r5, ip
 801aef0:	da5a      	bge.n	801afa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aef2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aef4:	fb05 2000 	mla	r0, r5, r0, r2
 801aef8:	1400      	asrs	r0, r0, #16
 801aefa:	d455      	bmi.n	801afa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aefc:	42b8      	cmp	r0, r7
 801aefe:	da53      	bge.n	801afa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801af00:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801af04:	4699      	mov	r9, r3
 801af06:	46a2      	mov	sl, r4
 801af08:	f1b9 0f00 	cmp.w	r9, #0
 801af0c:	dd54      	ble.n	801afb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801af0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801af12:	140d      	asrs	r5, r1, #16
 801af14:	1410      	asrs	r0, r2, #16
 801af16:	fb07 5000 	mla	r0, r7, r0, r5
 801af1a:	9d02      	ldr	r5, [sp, #8]
 801af1c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801af20:	f8ba 5000 	ldrh.w	r5, [sl]
 801af24:	122f      	asrs	r7, r5, #8
 801af26:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801af2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af2e:	fb17 f706 	smulbb	r7, r7, r6
 801af32:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801af36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af3a:	00ed      	lsls	r5, r5, #3
 801af3c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801af40:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801af44:	10c7      	asrs	r7, r0, #3
 801af46:	b2ed      	uxtb	r5, r5
 801af48:	00c0      	lsls	r0, r0, #3
 801af4a:	fb18 f806 	smulbb	r8, r8, r6
 801af4e:	fb15 f506 	smulbb	r5, r5, r6
 801af52:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801af56:	b2c0      	uxtb	r0, r0
 801af58:	fa1f fc8c 	uxth.w	ip, ip
 801af5c:	fb07 870b 	mla	r7, r7, fp, r8
 801af60:	fb00 500b 	mla	r0, r0, fp, r5
 801af64:	b280      	uxth	r0, r0
 801af66:	b2bf      	uxth	r7, r7
 801af68:	f10c 0501 	add.w	r5, ip, #1
 801af6c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801af70:	f107 0801 	add.w	r8, r7, #1
 801af74:	1c45      	adds	r5, r0, #1
 801af76:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801af7a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801af7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801af80:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af84:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801af88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801af8c:	ea45 0c0c 	orr.w	ip, r5, ip
 801af90:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801af94:	4401      	add	r1, r0
 801af96:	9812      	ldr	r0, [sp, #72]	; 0x48
 801af98:	ea4c 0c08 	orr.w	ip, ip, r8
 801af9c:	f82a cb02 	strh.w	ip, [sl], #2
 801afa0:	4402      	add	r2, r0
 801afa2:	f109 39ff 	add.w	r9, r9, #4294967295
 801afa6:	e7af      	b.n	801af08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801afa8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801afac:	f04f 0800 	mov.w	r8, #0
 801afb0:	eb03 0008 	add.w	r0, r3, r8
 801afb4:	2800      	cmp	r0, #0
 801afb6:	dc41      	bgt.n	801b03c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801afb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afc0:	9b00      	ldr	r3, [sp, #0]
 801afc2:	2b00      	cmp	r3, #0
 801afc4:	f340 8095 	ble.w	801b0f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801afc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801afd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801afd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afe2:	eef0 6a62 	vmov.f32	s13, s5
 801afe6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aff2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801aff6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801affa:	eef0 6a43 	vmov.f32	s13, s6
 801affe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b002:	ee12 2a90 	vmov	r2, s5
 801b006:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b00a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b00e:	ee13 2a10 	vmov	r2, s6
 801b012:	9311      	str	r3, [sp, #68]	; 0x44
 801b014:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b016:	fb92 f3f3 	sdiv	r3, r2, r3
 801b01a:	9312      	str	r3, [sp, #72]	; 0x48
 801b01c:	9b00      	ldr	r3, [sp, #0]
 801b01e:	9a03      	ldr	r2, [sp, #12]
 801b020:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b024:	3b01      	subs	r3, #1
 801b026:	9300      	str	r3, [sp, #0]
 801b028:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b02c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b02e:	eeb0 3a67 	vmov.f32	s6, s15
 801b032:	bf08      	it	eq
 801b034:	4613      	moveq	r3, r2
 801b036:	eef0 2a47 	vmov.f32	s5, s14
 801b03a:	e72f      	b.n	801ae9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b03c:	140f      	asrs	r7, r1, #16
 801b03e:	d451      	bmi.n	801b0e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b040:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b044:	42bd      	cmp	r5, r7
 801b046:	dd4d      	ble.n	801b0e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b048:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b04c:	d44a      	bmi.n	801b0e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b04e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b052:	4560      	cmp	r0, ip
 801b054:	dd46      	ble.n	801b0e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b056:	b22d      	sxth	r5, r5
 801b058:	fb0c 7505 	mla	r5, ip, r5, r7
 801b05c:	9802      	ldr	r0, [sp, #8]
 801b05e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b062:	f06f 0501 	mvn.w	r5, #1
 801b066:	fb05 fb08 	mul.w	fp, r5, r8
 801b06a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b06e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b072:	122f      	asrs	r7, r5, #8
 801b074:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b078:	fb17 f706 	smulbb	r7, r7, r6
 801b07c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b080:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b084:	00ed      	lsls	r5, r5, #3
 801b086:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b08a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b08e:	10c7      	asrs	r7, r0, #3
 801b090:	b2ed      	uxtb	r5, r5
 801b092:	00c0      	lsls	r0, r0, #3
 801b094:	fb19 f906 	smulbb	r9, r9, r6
 801b098:	fb15 f506 	smulbb	r5, r5, r6
 801b09c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b0a0:	b2c0      	uxtb	r0, r0
 801b0a2:	fa1f fc8c 	uxth.w	ip, ip
 801b0a6:	fb07 970a 	mla	r7, r7, sl, r9
 801b0aa:	fb00 500a 	mla	r0, r0, sl, r5
 801b0ae:	b2bf      	uxth	r7, r7
 801b0b0:	b280      	uxth	r0, r0
 801b0b2:	f10c 0501 	add.w	r5, ip, #1
 801b0b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b0ba:	f107 0901 	add.w	r9, r7, #1
 801b0be:	1c45      	adds	r5, r0, #1
 801b0c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b0c4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b0c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b0cc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b0d0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b0d4:	ea45 0c0c 	orr.w	ip, r5, ip
 801b0d8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b0dc:	ea4c 0c09 	orr.w	ip, ip, r9
 801b0e0:	f824 c00b 	strh.w	ip, [r4, fp]
 801b0e4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0e6:	4401      	add	r1, r0
 801b0e8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0ea:	f108 38ff 	add.w	r8, r8, #4294967295
 801b0ee:	4402      	add	r2, r0
 801b0f0:	e75e      	b.n	801afb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b0f2:	b005      	add	sp, #20
 801b0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b0f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0fc:	b085      	sub	sp, #20
 801b0fe:	4693      	mov	fp, r2
 801b100:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b102:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b104:	6870      	ldr	r0, [r6, #4]
 801b106:	9101      	str	r1, [sp, #4]
 801b108:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b10c:	fb00 2404 	mla	r4, r0, r4, r2
 801b110:	6832      	ldr	r2, [r6, #0]
 801b112:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b116:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b11a:	682a      	ldr	r2, [r5, #0]
 801b11c:	9202      	str	r2, [sp, #8]
 801b11e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b122:	9a01      	ldr	r2, [sp, #4]
 801b124:	2a00      	cmp	r2, #0
 801b126:	dc03      	bgt.n	801b130 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b128:	f1bb 0f00 	cmp.w	fp, #0
 801b12c:	f340 809a 	ble.w	801b264 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b130:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b132:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b136:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b13a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b13e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b140:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b144:	2b00      	cmp	r3, #0
 801b146:	dd0c      	ble.n	801b162 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b148:	1406      	asrs	r6, r0, #16
 801b14a:	d405      	bmi.n	801b158 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b14c:	454e      	cmp	r6, r9
 801b14e:	da03      	bge.n	801b158 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b150:	1416      	asrs	r6, r2, #16
 801b152:	d401      	bmi.n	801b158 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b154:	4546      	cmp	r6, r8
 801b156:	db05      	blt.n	801b164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b158:	4470      	add	r0, lr
 801b15a:	4462      	add	r2, ip
 801b15c:	3b01      	subs	r3, #1
 801b15e:	3402      	adds	r4, #2
 801b160:	e7f0      	b.n	801b144 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b162:	d00f      	beq.n	801b184 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b164:	1e5e      	subs	r6, r3, #1
 801b166:	fb0e 0706 	mla	r7, lr, r6, r0
 801b16a:	143f      	asrs	r7, r7, #16
 801b16c:	d541      	bpl.n	801b1f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b16e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b172:	4698      	mov	r8, r3
 801b174:	9603      	str	r6, [sp, #12]
 801b176:	f1b8 0f00 	cmp.w	r8, #0
 801b17a:	dc56      	bgt.n	801b22a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b17c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b180:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b184:	9b01      	ldr	r3, [sp, #4]
 801b186:	2b00      	cmp	r3, #0
 801b188:	dd6c      	ble.n	801b264 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b18a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b18e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b192:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b196:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b198:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b19c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b1a0:	eeb0 6a62 	vmov.f32	s12, s5
 801b1a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1b0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b1b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1b8:	eeb0 6a43 	vmov.f32	s12, s6
 801b1bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1c0:	ee12 2a90 	vmov	r2, s5
 801b1c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1c8:	fb92 fef3 	sdiv	lr, r2, r3
 801b1cc:	ee13 2a10 	vmov	r2, s6
 801b1d0:	fb92 fcf3 	sdiv	ip, r2, r3
 801b1d4:	9b01      	ldr	r3, [sp, #4]
 801b1d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1da:	3b01      	subs	r3, #1
 801b1dc:	9301      	str	r3, [sp, #4]
 801b1de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b1e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1e4:	eeb0 3a67 	vmov.f32	s6, s15
 801b1e8:	bf08      	it	eq
 801b1ea:	465b      	moveq	r3, fp
 801b1ec:	eef0 2a47 	vmov.f32	s5, s14
 801b1f0:	e797      	b.n	801b122 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b1f2:	454f      	cmp	r7, r9
 801b1f4:	dabb      	bge.n	801b16e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b1f6:	fb0c 2606 	mla	r6, ip, r6, r2
 801b1fa:	1436      	asrs	r6, r6, #16
 801b1fc:	d4b7      	bmi.n	801b16e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b1fe:	4546      	cmp	r6, r8
 801b200:	dab5      	bge.n	801b16e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b202:	461e      	mov	r6, r3
 801b204:	46a0      	mov	r8, r4
 801b206:	2e00      	cmp	r6, #0
 801b208:	ddb8      	ble.n	801b17c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b20a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b20e:	9902      	ldr	r1, [sp, #8]
 801b210:	1417      	asrs	r7, r2, #16
 801b212:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b216:	fb0a 9707 	mla	r7, sl, r7, r9
 801b21a:	4470      	add	r0, lr
 801b21c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b220:	f828 7b02 	strh.w	r7, [r8], #2
 801b224:	4462      	add	r2, ip
 801b226:	3e01      	subs	r6, #1
 801b228:	e7ed      	b.n	801b206 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b22a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b22e:	d414      	bmi.n	801b25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b230:	68ae      	ldr	r6, [r5, #8]
 801b232:	454e      	cmp	r6, r9
 801b234:	dd11      	ble.n	801b25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b236:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b23a:	d40e      	bmi.n	801b25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b23c:	68ef      	ldr	r7, [r5, #12]
 801b23e:	4557      	cmp	r7, sl
 801b240:	dd0b      	ble.n	801b25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b242:	b236      	sxth	r6, r6
 801b244:	fb0a 9606 	mla	r6, sl, r6, r9
 801b248:	9f02      	ldr	r7, [sp, #8]
 801b24a:	f06f 0101 	mvn.w	r1, #1
 801b24e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b252:	fb01 f608 	mul.w	r6, r1, r8
 801b256:	9903      	ldr	r1, [sp, #12]
 801b258:	538f      	strh	r7, [r1, r6]
 801b25a:	4470      	add	r0, lr
 801b25c:	4462      	add	r2, ip
 801b25e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b262:	e788      	b.n	801b176 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b264:	b005      	add	sp, #20
 801b266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b26a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b26a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b26e:	b087      	sub	sp, #28
 801b270:	468b      	mov	fp, r1
 801b272:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b274:	9203      	str	r2, [sp, #12]
 801b276:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b27a:	9204      	str	r2, [sp, #16]
 801b27c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b280:	6841      	ldr	r1, [r0, #4]
 801b282:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b286:	fb01 2505 	mla	r5, r1, r5, r2
 801b28a:	6802      	ldr	r2, [r0, #0]
 801b28c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b290:	f8d9 2000 	ldr.w	r2, [r9]
 801b294:	9201      	str	r2, [sp, #4]
 801b296:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b29a:	f1bb 0f00 	cmp.w	fp, #0
 801b29e:	dc03      	bgt.n	801b2a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b2a0:	9a03      	ldr	r2, [sp, #12]
 801b2a2:	2a00      	cmp	r2, #0
 801b2a4:	f340 8159 	ble.w	801b55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b2a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b2aa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b2ae:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b2b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b2b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b2b8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b2bc:	2b00      	cmp	r3, #0
 801b2be:	dd0e      	ble.n	801b2de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b2c0:	1402      	asrs	r2, r0, #16
 801b2c2:	d405      	bmi.n	801b2d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2c4:	42ba      	cmp	r2, r7
 801b2c6:	da03      	bge.n	801b2d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2c8:	140a      	asrs	r2, r1, #16
 801b2ca:	d401      	bmi.n	801b2d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2cc:	42b2      	cmp	r2, r6
 801b2ce:	db07      	blt.n	801b2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b2d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b2d2:	4410      	add	r0, r2
 801b2d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b2d6:	3b01      	subs	r3, #1
 801b2d8:	4411      	add	r1, r2
 801b2da:	3502      	adds	r5, #2
 801b2dc:	e7ee      	b.n	801b2bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b2de:	d017      	beq.n	801b310 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b2e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b2e2:	1e5a      	subs	r2, r3, #1
 801b2e4:	fb04 0402 	mla	r4, r4, r2, r0
 801b2e8:	1424      	asrs	r4, r4, #16
 801b2ea:	d409      	bmi.n	801b300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b2ec:	42bc      	cmp	r4, r7
 801b2ee:	da07      	bge.n	801b300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b2f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b2f2:	fb04 1202 	mla	r2, r4, r2, r1
 801b2f6:	1412      	asrs	r2, r2, #16
 801b2f8:	d402      	bmi.n	801b300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b2fa:	42b2      	cmp	r2, r6
 801b2fc:	f2c0 80bf 	blt.w	801b47e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b300:	2700      	movs	r7, #0
 801b302:	19da      	adds	r2, r3, r7
 801b304:	2a00      	cmp	r2, #0
 801b306:	dc3e      	bgt.n	801b386 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b308:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b30c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b310:	f1bb 0f00 	cmp.w	fp, #0
 801b314:	f340 8121 	ble.w	801b55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b31c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b320:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b324:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b326:	f1bb 0b01 	subs.w	fp, fp, #1
 801b32a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b32e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b332:	eeb0 6a62 	vmov.f32	s12, s5
 801b336:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b33a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b33e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b342:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b34a:	eeb0 6a43 	vmov.f32	s12, s6
 801b34e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b352:	ee12 2a90 	vmov	r2, s5
 801b356:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b35a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b35e:	ee13 2a10 	vmov	r2, s6
 801b362:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b366:	9313      	str	r3, [sp, #76]	; 0x4c
 801b368:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b36a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b36e:	9a03      	ldr	r2, [sp, #12]
 801b370:	9314      	str	r3, [sp, #80]	; 0x50
 801b372:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b376:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b378:	eeb0 3a67 	vmov.f32	s6, s15
 801b37c:	bf08      	it	eq
 801b37e:	4613      	moveq	r3, r2
 801b380:	eef0 2a47 	vmov.f32	s5, s14
 801b384:	e789      	b.n	801b29a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b386:	1406      	asrs	r6, r0, #16
 801b388:	d42d      	bmi.n	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b38a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b38e:	42b4      	cmp	r4, r6
 801b390:	dd29      	ble.n	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b392:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b396:	d426      	bmi.n	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b398:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b39c:	4562      	cmp	r2, ip
 801b39e:	dd22      	ble.n	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3a0:	b224      	sxth	r4, r4
 801b3a2:	9a01      	ldr	r2, [sp, #4]
 801b3a4:	fb0c 6404 	mla	r4, ip, r4, r6
 801b3a8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b3ac:	0e22      	lsrs	r2, r4, #24
 801b3ae:	d01a      	beq.n	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3b0:	9e04      	ldr	r6, [sp, #16]
 801b3b2:	4372      	muls	r2, r6
 801b3b4:	1c56      	adds	r6, r2, #1
 801b3b6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b3ba:	1212      	asrs	r2, r2, #8
 801b3bc:	0a26      	lsrs	r6, r4, #8
 801b3be:	2aff      	cmp	r2, #255	; 0xff
 801b3c0:	9605      	str	r6, [sp, #20]
 801b3c2:	d116      	bne.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b3c4:	f06f 0201 	mvn.w	r2, #1
 801b3c8:	fb02 fc07 	mul.w	ip, r2, r7
 801b3cc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b3d0:	0962      	lsrs	r2, r4, #5
 801b3d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3d6:	f026 0607 	bic.w	r6, r6, #7
 801b3da:	4316      	orrs	r6, r2
 801b3dc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b3e0:	4326      	orrs	r6, r4
 801b3e2:	f825 600c 	strh.w	r6, [r5, ip]
 801b3e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b3e8:	4410      	add	r0, r2
 801b3ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3ec:	3f01      	subs	r7, #1
 801b3ee:	4411      	add	r1, r2
 801b3f0:	e787      	b.n	801b302 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b3f2:	f06f 0601 	mvn.w	r6, #1
 801b3f6:	437e      	muls	r6, r7
 801b3f8:	fa1f fa82 	uxth.w	sl, r2
 801b3fc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b400:	9602      	str	r6, [sp, #8]
 801b402:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b406:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b40a:	43d2      	mvns	r2, r2
 801b40c:	b2d2      	uxtb	r2, r2
 801b40e:	fb1c fc0a 	smulbb	ip, ip, sl
 801b412:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b416:	fb0e ce02 	mla	lr, lr, r2, ip
 801b41a:	b2e4      	uxtb	r4, r4
 801b41c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b420:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b424:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b428:	fa5f f888 	uxtb.w	r8, r8
 801b42c:	fb14 f40a 	smulbb	r4, r4, sl
 801b430:	fb08 4402 	mla	r4, r8, r2, r4
 801b434:	fa1f fe8e 	uxth.w	lr, lr
 801b438:	fb16 f60a 	smulbb	r6, r6, sl
 801b43c:	b2a4      	uxth	r4, r4
 801b43e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b442:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b446:	f10e 0201 	add.w	r2, lr, #1
 801b44a:	1c66      	adds	r6, r4, #1
 801b44c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b450:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b454:	fa1f fc8c 	uxth.w	ip, ip
 801b458:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b45c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b460:	ea46 0e0e 	orr.w	lr, r6, lr
 801b464:	f10c 0601 	add.w	r6, ip, #1
 801b468:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b46c:	0976      	lsrs	r6, r6, #5
 801b46e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b472:	9a02      	ldr	r2, [sp, #8]
 801b474:	ea4e 0e06 	orr.w	lr, lr, r6
 801b478:	f825 e002 	strh.w	lr, [r5, r2]
 801b47c:	e7b3      	b.n	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b47e:	f04f 0800 	mov.w	r8, #0
 801b482:	eba3 0208 	sub.w	r2, r3, r8
 801b486:	2a00      	cmp	r2, #0
 801b488:	f77f af3e 	ble.w	801b308 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b48c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b490:	1404      	asrs	r4, r0, #16
 801b492:	140a      	asrs	r2, r1, #16
 801b494:	fb06 4202 	mla	r2, r6, r2, r4
 801b498:	9c01      	ldr	r4, [sp, #4]
 801b49a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b49e:	0e22      	lsrs	r2, r4, #24
 801b4a0:	d016      	beq.n	801b4d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b4a2:	9e04      	ldr	r6, [sp, #16]
 801b4a4:	4372      	muls	r2, r6
 801b4a6:	1c56      	adds	r6, r2, #1
 801b4a8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b4ac:	1212      	asrs	r2, r2, #8
 801b4ae:	2aff      	cmp	r2, #255	; 0xff
 801b4b0:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b4b4:	d113      	bne.n	801b4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b4b6:	0962      	lsrs	r2, r4, #5
 801b4b8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b4bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b4c0:	f026 0607 	bic.w	r6, r6, #7
 801b4c4:	4316      	orrs	r6, r2
 801b4c6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b4ca:	4326      	orrs	r6, r4
 801b4cc:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b4d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4d2:	4410      	add	r0, r2
 801b4d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4d6:	f108 0801 	add.w	r8, r8, #1
 801b4da:	4411      	add	r1, r2
 801b4dc:	e7d1      	b.n	801b482 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b4de:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b4e2:	fa1f fa82 	uxth.w	sl, r2
 801b4e6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b4ea:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b4ee:	43d2      	mvns	r2, r2
 801b4f0:	b2d2      	uxtb	r2, r2
 801b4f2:	fb17 f70a 	smulbb	r7, r7, sl
 801b4f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b4fa:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b4fe:	b2e4      	uxtb	r4, r4
 801b500:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b504:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b508:	fa5f fe8e 	uxtb.w	lr, lr
 801b50c:	fb14 f40a 	smulbb	r4, r4, sl
 801b510:	fb0e 4402 	mla	r4, lr, r2, r4
 801b514:	b2f6      	uxtb	r6, r6
 801b516:	fa1f fc8c 	uxth.w	ip, ip
 801b51a:	fb16 f60a 	smulbb	r6, r6, sl
 801b51e:	b2a4      	uxth	r4, r4
 801b520:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b524:	fb07 6702 	mla	r7, r7, r2, r6
 801b528:	f10c 0201 	add.w	r2, ip, #1
 801b52c:	1c66      	adds	r6, r4, #1
 801b52e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b532:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b536:	b2bf      	uxth	r7, r7
 801b538:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b53c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b540:	ea46 0c0c 	orr.w	ip, r6, ip
 801b544:	1c7e      	adds	r6, r7, #1
 801b546:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b54a:	0976      	lsrs	r6, r6, #5
 801b54c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b550:	ea4c 0c06 	orr.w	ip, ip, r6
 801b554:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b558:	e7ba      	b.n	801b4d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b55a:	b007      	add	sp, #28
 801b55c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b560 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b564:	b085      	sub	sp, #20
 801b566:	468b      	mov	fp, r1
 801b568:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b56a:	9203      	str	r2, [sp, #12]
 801b56c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b570:	6841      	ldr	r1, [r0, #4]
 801b572:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b576:	fb01 2404 	mla	r4, r1, r4, r2
 801b57a:	6802      	ldr	r2, [r0, #0]
 801b57c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b580:	f8d8 2000 	ldr.w	r2, [r8]
 801b584:	9201      	str	r2, [sp, #4]
 801b586:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b58a:	f1bb 0f00 	cmp.w	fp, #0
 801b58e:	dc03      	bgt.n	801b598 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b590:	9a03      	ldr	r2, [sp, #12]
 801b592:	2a00      	cmp	r2, #0
 801b594:	f340 814f 	ble.w	801b836 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b598:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b59a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b59e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b5a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5ac:	2b00      	cmp	r3, #0
 801b5ae:	dd0e      	ble.n	801b5ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5b0:	1408      	asrs	r0, r1, #16
 801b5b2:	d405      	bmi.n	801b5c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5b4:	42b8      	cmp	r0, r7
 801b5b6:	da03      	bge.n	801b5c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5b8:	1410      	asrs	r0, r2, #16
 801b5ba:	d401      	bmi.n	801b5c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5bc:	42b0      	cmp	r0, r6
 801b5be:	db07      	blt.n	801b5d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b5c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5c2:	4401      	add	r1, r0
 801b5c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5c6:	3b01      	subs	r3, #1
 801b5c8:	4402      	add	r2, r0
 801b5ca:	3402      	adds	r4, #2
 801b5cc:	e7ee      	b.n	801b5ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b5ce:	d017      	beq.n	801b600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b5d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5d2:	1e58      	subs	r0, r3, #1
 801b5d4:	fb05 1500 	mla	r5, r5, r0, r1
 801b5d8:	142d      	asrs	r5, r5, #16
 801b5da:	d409      	bmi.n	801b5f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b5dc:	42bd      	cmp	r5, r7
 801b5de:	da07      	bge.n	801b5f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b5e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b5e2:	fb05 2000 	mla	r0, r5, r0, r2
 801b5e6:	1400      	asrs	r0, r0, #16
 801b5e8:	d402      	bmi.n	801b5f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b5ea:	42b0      	cmp	r0, r6
 801b5ec:	f2c0 80ba 	blt.w	801b764 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b5f0:	2600      	movs	r6, #0
 801b5f2:	1998      	adds	r0, r3, r6
 801b5f4:	2800      	cmp	r0, #0
 801b5f6:	dc3e      	bgt.n	801b676 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b5f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b5fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b600:	f1bb 0f00 	cmp.w	fp, #0
 801b604:	f340 8117 	ble.w	801b836 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b608:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b60c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b610:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b614:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b616:	f1bb 0b01 	subs.w	fp, fp, #1
 801b61a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b61e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b622:	eeb0 6a62 	vmov.f32	s12, s5
 801b626:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b62a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b62e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b632:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b636:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b63a:	eeb0 6a43 	vmov.f32	s12, s6
 801b63e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b642:	ee12 2a90 	vmov	r2, s5
 801b646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b64a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b64e:	ee13 2a10 	vmov	r2, s6
 801b652:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b656:	9311      	str	r3, [sp, #68]	; 0x44
 801b658:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b65a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b65e:	9a03      	ldr	r2, [sp, #12]
 801b660:	9312      	str	r3, [sp, #72]	; 0x48
 801b662:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b666:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b668:	eeb0 3a67 	vmov.f32	s6, s15
 801b66c:	bf08      	it	eq
 801b66e:	4613      	moveq	r3, r2
 801b670:	eef0 2a47 	vmov.f32	s5, s14
 801b674:	e789      	b.n	801b58a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b676:	140f      	asrs	r7, r1, #16
 801b678:	d424      	bmi.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b67a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b67e:	42bd      	cmp	r5, r7
 801b680:	dd20      	ble.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b682:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b686:	d41d      	bmi.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b688:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b68c:	4560      	cmp	r0, ip
 801b68e:	dd19      	ble.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b690:	b22d      	sxth	r5, r5
 801b692:	fb0c 7505 	mla	r5, ip, r5, r7
 801b696:	9801      	ldr	r0, [sp, #4]
 801b698:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b69c:	0e07      	lsrs	r7, r0, #24
 801b69e:	2fff      	cmp	r7, #255	; 0xff
 801b6a0:	d116      	bne.n	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6a2:	f06f 0501 	mvn.w	r5, #1
 801b6a6:	fb05 f706 	mul.w	r7, r5, r6
 801b6aa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b6ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b6b2:	0945      	lsrs	r5, r0, #5
 801b6b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6b8:	ea4c 0505 	orr.w	r5, ip, r5
 801b6bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b6c0:	4305      	orrs	r5, r0
 801b6c2:	53e5      	strh	r5, [r4, r7]
 801b6c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6c6:	4401      	add	r1, r0
 801b6c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6ca:	3e01      	subs	r6, #1
 801b6cc:	4402      	add	r2, r0
 801b6ce:	e790      	b.n	801b5f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b6d0:	b2fd      	uxtb	r5, r7
 801b6d2:	2f00      	cmp	r7, #0
 801b6d4:	d0f6      	beq.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b6d6:	f06f 0701 	mvn.w	r7, #1
 801b6da:	4377      	muls	r7, r6
 801b6dc:	fa1f f985 	uxth.w	r9, r5
 801b6e0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b6e4:	9702      	str	r7, [sp, #8]
 801b6e6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b6ea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b6ee:	43ed      	mvns	r5, r5
 801b6f0:	b2ed      	uxtb	r5, r5
 801b6f2:	fb17 f709 	smulbb	r7, r7, r9
 801b6f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b6fa:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b6fe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b702:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b706:	b2c0      	uxtb	r0, r0
 801b708:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b70c:	fa5f fe8e 	uxtb.w	lr, lr
 801b710:	fb10 f009 	smulbb	r0, r0, r9
 801b714:	fb0e 0005 	mla	r0, lr, r5, r0
 801b718:	b280      	uxth	r0, r0
 801b71a:	fa1f fc8c 	uxth.w	ip, ip
 801b71e:	fb1a fa09 	smulbb	sl, sl, r9
 801b722:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b726:	fb07 a705 	mla	r7, r7, r5, sl
 801b72a:	f100 0a01 	add.w	sl, r0, #1
 801b72e:	f10c 0501 	add.w	r5, ip, #1
 801b732:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b736:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b73a:	b2bf      	uxth	r7, r7
 801b73c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b740:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b744:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b748:	f107 0a01 	add.w	sl, r7, #1
 801b74c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b750:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b754:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b758:	9802      	ldr	r0, [sp, #8]
 801b75a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b75e:	f824 c000 	strh.w	ip, [r4, r0]
 801b762:	e7af      	b.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b764:	f04f 0e00 	mov.w	lr, #0
 801b768:	eba3 000e 	sub.w	r0, r3, lr
 801b76c:	2800      	cmp	r0, #0
 801b76e:	f77f af43 	ble.w	801b5f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b772:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b776:	140d      	asrs	r5, r1, #16
 801b778:	1410      	asrs	r0, r2, #16
 801b77a:	fb06 5000 	mla	r0, r6, r0, r5
 801b77e:	9d01      	ldr	r5, [sp, #4]
 801b780:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b784:	0e2e      	lsrs	r6, r5, #24
 801b786:	2eff      	cmp	r6, #255	; 0xff
 801b788:	d112      	bne.n	801b7b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b78a:	482c      	ldr	r0, [pc, #176]	; (801b83c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b78c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b790:	0968      	lsrs	r0, r5, #5
 801b792:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b796:	4330      	orrs	r0, r6
 801b798:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b79c:	4328      	orrs	r0, r5
 801b79e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b7a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7a4:	4401      	add	r1, r0
 801b7a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7a8:	f10e 0e01 	add.w	lr, lr, #1
 801b7ac:	4402      	add	r2, r0
 801b7ae:	e7db      	b.n	801b768 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b7b0:	b2f0      	uxtb	r0, r6
 801b7b2:	2e00      	cmp	r6, #0
 801b7b4:	d0f5      	beq.n	801b7a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b7b6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b7ba:	fa1f f980 	uxth.w	r9, r0
 801b7be:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b7c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b7c6:	43c0      	mvns	r0, r0
 801b7c8:	b2c0      	uxtb	r0, r0
 801b7ca:	fb16 f609 	smulbb	r6, r6, r9
 801b7ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7d2:	fb07 6700 	mla	r7, r7, r0, r6
 801b7d6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b7da:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b7de:	b2ed      	uxtb	r5, r5
 801b7e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7e4:	fa5f fc8c 	uxtb.w	ip, ip
 801b7e8:	fb15 f509 	smulbb	r5, r5, r9
 801b7ec:	fb0c 5500 	mla	r5, ip, r0, r5
 801b7f0:	b2bf      	uxth	r7, r7
 801b7f2:	fb1a fa09 	smulbb	sl, sl, r9
 801b7f6:	b2ad      	uxth	r5, r5
 801b7f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b7fc:	fb06 a600 	mla	r6, r6, r0, sl
 801b800:	1c78      	adds	r0, r7, #1
 801b802:	f105 0a01 	add.w	sl, r5, #1
 801b806:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b80a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b80e:	b2b6      	uxth	r6, r6
 801b810:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b814:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b818:	ea4a 0707 	orr.w	r7, sl, r7
 801b81c:	f106 0a01 	add.w	sl, r6, #1
 801b820:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b824:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b828:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b82c:	ea47 070a 	orr.w	r7, r7, sl
 801b830:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b834:	e7b5      	b.n	801b7a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b836:	b005      	add	sp, #20
 801b838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b83c:	fffff800 	.word	0xfffff800

0801b840 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b844:	b087      	sub	sp, #28
 801b846:	468b      	mov	fp, r1
 801b848:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b84a:	9203      	str	r2, [sp, #12]
 801b84c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b850:	9204      	str	r2, [sp, #16]
 801b852:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b856:	6841      	ldr	r1, [r0, #4]
 801b858:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b85c:	fb01 2404 	mla	r4, r1, r4, r2
 801b860:	6802      	ldr	r2, [r0, #0]
 801b862:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b866:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b86a:	3201      	adds	r2, #1
 801b86c:	f022 0201 	bic.w	r2, r2, #1
 801b870:	9200      	str	r2, [sp, #0]
 801b872:	f8d9 2000 	ldr.w	r2, [r9]
 801b876:	9201      	str	r2, [sp, #4]
 801b878:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b87c:	f1bb 0f00 	cmp.w	fp, #0
 801b880:	dc03      	bgt.n	801b88a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b882:	9a03      	ldr	r2, [sp, #12]
 801b884:	2a00      	cmp	r2, #0
 801b886:	f340 8169 	ble.w	801bb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b88a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b88c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b890:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b894:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b898:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b89a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b89e:	2b00      	cmp	r3, #0
 801b8a0:	dd0e      	ble.n	801b8c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b8a2:	1402      	asrs	r2, r0, #16
 801b8a4:	d405      	bmi.n	801b8b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8a6:	42ba      	cmp	r2, r7
 801b8a8:	da03      	bge.n	801b8b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8aa:	140a      	asrs	r2, r1, #16
 801b8ac:	d401      	bmi.n	801b8b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8ae:	42b2      	cmp	r2, r6
 801b8b0:	db07      	blt.n	801b8c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b8b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b8b4:	4410      	add	r0, r2
 801b8b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b8b8:	3b01      	subs	r3, #1
 801b8ba:	4411      	add	r1, r2
 801b8bc:	3402      	adds	r4, #2
 801b8be:	e7ee      	b.n	801b89e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b8c0:	d017      	beq.n	801b8f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b8c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b8c4:	1e5a      	subs	r2, r3, #1
 801b8c6:	fb05 0502 	mla	r5, r5, r2, r0
 801b8ca:	142d      	asrs	r5, r5, #16
 801b8cc:	d409      	bmi.n	801b8e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b8ce:	42bd      	cmp	r5, r7
 801b8d0:	da07      	bge.n	801b8e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b8d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b8d4:	fb05 1202 	mla	r2, r5, r2, r1
 801b8d8:	1412      	asrs	r2, r2, #16
 801b8da:	d402      	bmi.n	801b8e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b8dc:	42b2      	cmp	r2, r6
 801b8de:	f2c0 80c7 	blt.w	801ba70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b8e2:	2700      	movs	r7, #0
 801b8e4:	19da      	adds	r2, r3, r7
 801b8e6:	2a00      	cmp	r2, #0
 801b8e8:	dc3e      	bgt.n	801b968 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b8ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b8f2:	f1bb 0f00 	cmp.w	fp, #0
 801b8f6:	f340 8131 	ble.w	801bb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b8fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b8fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b902:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b908:	f1bb 0b01 	subs.w	fp, fp, #1
 801b90c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b910:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b914:	eeb0 6a62 	vmov.f32	s12, s5
 801b918:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b91c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b920:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b924:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b928:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b92c:	eeb0 6a43 	vmov.f32	s12, s6
 801b930:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b934:	ee12 2a90 	vmov	r2, s5
 801b938:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b93c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b940:	ee13 2a10 	vmov	r2, s6
 801b944:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b948:	9313      	str	r3, [sp, #76]	; 0x4c
 801b94a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b94c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b950:	9a03      	ldr	r2, [sp, #12]
 801b952:	9314      	str	r3, [sp, #80]	; 0x50
 801b954:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b958:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b95a:	eeb0 3a67 	vmov.f32	s6, s15
 801b95e:	bf08      	it	eq
 801b960:	4613      	moveq	r3, r2
 801b962:	eef0 2a47 	vmov.f32	s5, s14
 801b966:	e789      	b.n	801b87c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b968:	1405      	asrs	r5, r0, #16
 801b96a:	d435      	bmi.n	801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b96c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b970:	42aa      	cmp	r2, r5
 801b972:	dd31      	ble.n	801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b974:	140e      	asrs	r6, r1, #16
 801b976:	d42f      	bmi.n	801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b978:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b97c:	42b2      	cmp	r2, r6
 801b97e:	dd2b      	ble.n	801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b980:	9a00      	ldr	r2, [sp, #0]
 801b982:	fb06 5502 	mla	r5, r6, r2, r5
 801b986:	086a      	lsrs	r2, r5, #1
 801b988:	9e01      	ldr	r6, [sp, #4]
 801b98a:	5cb2      	ldrb	r2, [r6, r2]
 801b98c:	07ee      	lsls	r6, r5, #31
 801b98e:	bf54      	ite	pl
 801b990:	f002 020f 	andpl.w	r2, r2, #15
 801b994:	1112      	asrmi	r2, r2, #4
 801b996:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b99a:	b2d2      	uxtb	r2, r2
 801b99c:	b1e2      	cbz	r2, 801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b99e:	9d04      	ldr	r5, [sp, #16]
 801b9a0:	436a      	muls	r2, r5
 801b9a2:	1c55      	adds	r5, r2, #1
 801b9a4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b9a8:	4d6e      	ldr	r5, [pc, #440]	; (801bb64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b9aa:	682d      	ldr	r5, [r5, #0]
 801b9ac:	1212      	asrs	r2, r2, #8
 801b9ae:	0a2e      	lsrs	r6, r5, #8
 801b9b0:	2aff      	cmp	r2, #255	; 0xff
 801b9b2:	9605      	str	r6, [sp, #20]
 801b9b4:	d116      	bne.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b9b6:	f06f 0201 	mvn.w	r2, #1
 801b9ba:	fb02 fc07 	mul.w	ip, r2, r7
 801b9be:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b9c2:	096a      	lsrs	r2, r5, #5
 801b9c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b9c8:	f026 0607 	bic.w	r6, r6, #7
 801b9cc:	4316      	orrs	r6, r2
 801b9ce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b9d2:	432e      	orrs	r6, r5
 801b9d4:	f824 600c 	strh.w	r6, [r4, ip]
 801b9d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b9da:	4410      	add	r0, r2
 801b9dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b9de:	3f01      	subs	r7, #1
 801b9e0:	4411      	add	r1, r2
 801b9e2:	e77f      	b.n	801b8e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b9e4:	f06f 0601 	mvn.w	r6, #1
 801b9e8:	437e      	muls	r6, r7
 801b9ea:	fa1f fa82 	uxth.w	sl, r2
 801b9ee:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b9f2:	9602      	str	r6, [sp, #8]
 801b9f4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b9f8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b9fc:	43d2      	mvns	r2, r2
 801b9fe:	b2d2      	uxtb	r2, r2
 801ba00:	fb1c fc0a 	smulbb	ip, ip, sl
 801ba04:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ba08:	fb0e ce02 	mla	lr, lr, r2, ip
 801ba0c:	b2ed      	uxtb	r5, r5
 801ba0e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ba12:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ba16:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ba1a:	fa5f f888 	uxtb.w	r8, r8
 801ba1e:	fb15 f50a 	smulbb	r5, r5, sl
 801ba22:	fb08 5502 	mla	r5, r8, r2, r5
 801ba26:	fa1f fe8e 	uxth.w	lr, lr
 801ba2a:	fb16 f60a 	smulbb	r6, r6, sl
 801ba2e:	b2ad      	uxth	r5, r5
 801ba30:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ba34:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ba38:	f10e 0201 	add.w	r2, lr, #1
 801ba3c:	1c6e      	adds	r6, r5, #1
 801ba3e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ba42:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ba46:	fa1f fc8c 	uxth.w	ip, ip
 801ba4a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ba4e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ba52:	ea46 0e0e 	orr.w	lr, r6, lr
 801ba56:	f10c 0601 	add.w	r6, ip, #1
 801ba5a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ba5e:	0976      	lsrs	r6, r6, #5
 801ba60:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ba64:	9a02      	ldr	r2, [sp, #8]
 801ba66:	ea4e 0e06 	orr.w	lr, lr, r6
 801ba6a:	f824 e002 	strh.w	lr, [r4, r2]
 801ba6e:	e7b3      	b.n	801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba70:	f04f 0800 	mov.w	r8, #0
 801ba74:	eba3 0208 	sub.w	r2, r3, r8
 801ba78:	2a00      	cmp	r2, #0
 801ba7a:	f77f af36 	ble.w	801b8ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ba7e:	9e00      	ldr	r6, [sp, #0]
 801ba80:	1402      	asrs	r2, r0, #16
 801ba82:	140d      	asrs	r5, r1, #16
 801ba84:	fb06 2505 	mla	r5, r6, r5, r2
 801ba88:	086a      	lsrs	r2, r5, #1
 801ba8a:	9e01      	ldr	r6, [sp, #4]
 801ba8c:	5cb2      	ldrb	r2, [r6, r2]
 801ba8e:	07ed      	lsls	r5, r5, #31
 801ba90:	bf54      	ite	pl
 801ba92:	f002 020f 	andpl.w	r2, r2, #15
 801ba96:	1112      	asrmi	r2, r2, #4
 801ba98:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba9c:	b2d2      	uxtb	r2, r2
 801ba9e:	b1c2      	cbz	r2, 801bad2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801baa0:	9d04      	ldr	r5, [sp, #16]
 801baa2:	436a      	muls	r2, r5
 801baa4:	1c55      	adds	r5, r2, #1
 801baa6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801baaa:	4d2e      	ldr	r5, [pc, #184]	; (801bb64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801baac:	1212      	asrs	r2, r2, #8
 801baae:	682e      	ldr	r6, [r5, #0]
 801bab0:	2aff      	cmp	r2, #255	; 0xff
 801bab2:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bab6:	d113      	bne.n	801bae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bab8:	0972      	lsrs	r2, r6, #5
 801baba:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801babe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bac2:	f025 0507 	bic.w	r5, r5, #7
 801bac6:	4315      	orrs	r5, r2
 801bac8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bacc:	4335      	orrs	r5, r6
 801bace:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bad2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bad4:	4410      	add	r0, r2
 801bad6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bad8:	f108 0801 	add.w	r8, r8, #1
 801badc:	4411      	add	r1, r2
 801bade:	e7c9      	b.n	801ba74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bae0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bae4:	fa1f fa82 	uxth.w	sl, r2
 801bae8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801baec:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801baf0:	43d2      	mvns	r2, r2
 801baf2:	b2d2      	uxtb	r2, r2
 801baf4:	fb17 f70a 	smulbb	r7, r7, sl
 801baf8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bafc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bb00:	b2f6      	uxtb	r6, r6
 801bb02:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bb06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bb0a:	fa5f fe8e 	uxtb.w	lr, lr
 801bb0e:	fb16 f60a 	smulbb	r6, r6, sl
 801bb12:	fb0e 6602 	mla	r6, lr, r2, r6
 801bb16:	b2ed      	uxtb	r5, r5
 801bb18:	fa1f fc8c 	uxth.w	ip, ip
 801bb1c:	fb15 f50a 	smulbb	r5, r5, sl
 801bb20:	b2b6      	uxth	r6, r6
 801bb22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bb26:	fb07 5702 	mla	r7, r7, r2, r5
 801bb2a:	f10c 0201 	add.w	r2, ip, #1
 801bb2e:	1c75      	adds	r5, r6, #1
 801bb30:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bb34:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bb38:	b2bf      	uxth	r7, r7
 801bb3a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bb3e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bb42:	ea45 0c0c 	orr.w	ip, r5, ip
 801bb46:	1c7d      	adds	r5, r7, #1
 801bb48:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bb4c:	096d      	lsrs	r5, r5, #5
 801bb4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb52:	ea4c 0c05 	orr.w	ip, ip, r5
 801bb56:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bb5a:	e7ba      	b.n	801bad2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bb5c:	b007      	add	sp, #28
 801bb5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb62:	bf00      	nop
 801bb64:	20012db4 	.word	0x20012db4

0801bb68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb6c:	b087      	sub	sp, #28
 801bb6e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801be7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bb72:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bb74:	9205      	str	r2, [sp, #20]
 801bb76:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bb7a:	9101      	str	r1, [sp, #4]
 801bb7c:	6841      	ldr	r1, [r0, #4]
 801bb7e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bb82:	fb01 2404 	mla	r4, r1, r4, r2
 801bb86:	6802      	ldr	r2, [r0, #0]
 801bb88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bb8c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bb90:	3201      	adds	r2, #1
 801bb92:	f022 0201 	bic.w	r2, r2, #1
 801bb96:	9202      	str	r2, [sp, #8]
 801bb98:	f8db 2000 	ldr.w	r2, [fp]
 801bb9c:	9203      	str	r2, [sp, #12]
 801bb9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bba2:	9a01      	ldr	r2, [sp, #4]
 801bba4:	2a00      	cmp	r2, #0
 801bba6:	dc03      	bgt.n	801bbb0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bba8:	9a05      	ldr	r2, [sp, #20]
 801bbaa:	2a00      	cmp	r2, #0
 801bbac:	f340 8162 	ble.w	801be74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bbb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bbb2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bbb6:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bbba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bbbe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bbc0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bbc4:	2b00      	cmp	r3, #0
 801bbc6:	dd0e      	ble.n	801bbe6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bbc8:	1402      	asrs	r2, r0, #16
 801bbca:	d405      	bmi.n	801bbd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbcc:	42ba      	cmp	r2, r7
 801bbce:	da03      	bge.n	801bbd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbd0:	140a      	asrs	r2, r1, #16
 801bbd2:	d401      	bmi.n	801bbd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbd4:	42b2      	cmp	r2, r6
 801bbd6:	db07      	blt.n	801bbe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bbd8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbda:	4410      	add	r0, r2
 801bbdc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbde:	3b01      	subs	r3, #1
 801bbe0:	4411      	add	r1, r2
 801bbe2:	3402      	adds	r4, #2
 801bbe4:	e7ee      	b.n	801bbc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bbe6:	d017      	beq.n	801bc18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bbe8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bbea:	1e5a      	subs	r2, r3, #1
 801bbec:	fb05 0502 	mla	r5, r5, r2, r0
 801bbf0:	142d      	asrs	r5, r5, #16
 801bbf2:	d409      	bmi.n	801bc08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bbf4:	42bd      	cmp	r5, r7
 801bbf6:	da07      	bge.n	801bc08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bbf8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bbfa:	fb05 1202 	mla	r2, r5, r2, r1
 801bbfe:	1412      	asrs	r2, r2, #16
 801bc00:	d402      	bmi.n	801bc08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bc02:	42b2      	cmp	r2, r6
 801bc04:	f2c0 80c3 	blt.w	801bd8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bc08:	2500      	movs	r5, #0
 801bc0a:	195a      	adds	r2, r3, r5
 801bc0c:	2a00      	cmp	r2, #0
 801bc0e:	dc3f      	bgt.n	801bc90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bc10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bc14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bc18:	9b01      	ldr	r3, [sp, #4]
 801bc1a:	2b00      	cmp	r3, #0
 801bc1c:	f340 812a 	ble.w	801be74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bc20:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc28:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bc2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bc36:	eeb0 6a62 	vmov.f32	s12, s5
 801bc3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc46:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bc4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc4e:	eeb0 6a43 	vmov.f32	s12, s6
 801bc52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc56:	ee12 2a90 	vmov	r2, s5
 801bc5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc62:	ee13 2a10 	vmov	r2, s6
 801bc66:	9313      	str	r3, [sp, #76]	; 0x4c
 801bc68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc6e:	9314      	str	r3, [sp, #80]	; 0x50
 801bc70:	9b01      	ldr	r3, [sp, #4]
 801bc72:	9a05      	ldr	r2, [sp, #20]
 801bc74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc78:	3b01      	subs	r3, #1
 801bc7a:	9301      	str	r3, [sp, #4]
 801bc7c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bc80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc82:	eeb0 3a67 	vmov.f32	s6, s15
 801bc86:	bf08      	it	eq
 801bc88:	4613      	moveq	r3, r2
 801bc8a:	eef0 2a47 	vmov.f32	s5, s14
 801bc8e:	e788      	b.n	801bba2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bc90:	1406      	asrs	r6, r0, #16
 801bc92:	d42c      	bmi.n	801bcee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc94:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bc98:	42b2      	cmp	r2, r6
 801bc9a:	dd28      	ble.n	801bcee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc9c:	140f      	asrs	r7, r1, #16
 801bc9e:	d426      	bmi.n	801bcee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bca0:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bca4:	42ba      	cmp	r2, r7
 801bca6:	dd22      	ble.n	801bcee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bca8:	9a02      	ldr	r2, [sp, #8]
 801bcaa:	fb07 6602 	mla	r6, r7, r2, r6
 801bcae:	0872      	lsrs	r2, r6, #1
 801bcb0:	9f03      	ldr	r7, [sp, #12]
 801bcb2:	5cba      	ldrb	r2, [r7, r2]
 801bcb4:	07f6      	lsls	r6, r6, #31
 801bcb6:	bf54      	ite	pl
 801bcb8:	f002 020f 	andpl.w	r2, r2, #15
 801bcbc:	1112      	asrmi	r2, r2, #4
 801bcbe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bcc2:	b2d2      	uxtb	r2, r2
 801bcc4:	2aff      	cmp	r2, #255	; 0xff
 801bcc6:	d118      	bne.n	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bcc8:	f8d8 2000 	ldr.w	r2, [r8]
 801bccc:	f06f 0601 	mvn.w	r6, #1
 801bcd0:	fb06 f705 	mul.w	r7, r6, r5
 801bcd4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bcd8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bcdc:	0956      	lsrs	r6, r2, #5
 801bcde:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bce2:	ea4c 0606 	orr.w	r6, ip, r6
 801bce6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bcea:	4316      	orrs	r6, r2
 801bcec:	53e6      	strh	r6, [r4, r7]
 801bcee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcf0:	4410      	add	r0, r2
 801bcf2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcf4:	3d01      	subs	r5, #1
 801bcf6:	4411      	add	r1, r2
 801bcf8:	e787      	b.n	801bc0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bcfa:	2a00      	cmp	r2, #0
 801bcfc:	d0f7      	beq.n	801bcee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bcfe:	f06f 0601 	mvn.w	r6, #1
 801bd02:	436e      	muls	r6, r5
 801bd04:	f8d8 c000 	ldr.w	ip, [r8]
 801bd08:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bd0c:	9604      	str	r6, [sp, #16]
 801bd0e:	fa1f f982 	uxth.w	r9, r2
 801bd12:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bd16:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bd1a:	43d2      	mvns	r2, r2
 801bd1c:	b2d2      	uxtb	r2, r2
 801bd1e:	fb16 f609 	smulbb	r6, r6, r9
 801bd22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bd26:	fb07 6702 	mla	r7, r7, r2, r6
 801bd2a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bd2e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bd32:	fa5f fc8c 	uxtb.w	ip, ip
 801bd36:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd3a:	fa5f fe8e 	uxtb.w	lr, lr
 801bd3e:	fb1c fc09 	smulbb	ip, ip, r9
 801bd42:	fb0e cc02 	mla	ip, lr, r2, ip
 801bd46:	b2bf      	uxth	r7, r7
 801bd48:	fb1a fa09 	smulbb	sl, sl, r9
 801bd4c:	fa1f fc8c 	uxth.w	ip, ip
 801bd50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bd54:	fb06 a602 	mla	r6, r6, r2, sl
 801bd58:	1c7a      	adds	r2, r7, #1
 801bd5a:	f10c 0a01 	add.w	sl, ip, #1
 801bd5e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bd62:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bd66:	b2b6      	uxth	r6, r6
 801bd68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bd6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bd70:	ea4a 0707 	orr.w	r7, sl, r7
 801bd74:	f106 0a01 	add.w	sl, r6, #1
 801bd78:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bd7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd80:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd84:	9a04      	ldr	r2, [sp, #16]
 801bd86:	ea47 070a 	orr.w	r7, r7, sl
 801bd8a:	52a7      	strh	r7, [r4, r2]
 801bd8c:	e7af      	b.n	801bcee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd8e:	f04f 0e00 	mov.w	lr, #0
 801bd92:	eba3 020e 	sub.w	r2, r3, lr
 801bd96:	2a00      	cmp	r2, #0
 801bd98:	f77f af3a 	ble.w	801bc10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bd9c:	9e02      	ldr	r6, [sp, #8]
 801bd9e:	1402      	asrs	r2, r0, #16
 801bda0:	140d      	asrs	r5, r1, #16
 801bda2:	fb06 2505 	mla	r5, r6, r5, r2
 801bda6:	086a      	lsrs	r2, r5, #1
 801bda8:	9e03      	ldr	r6, [sp, #12]
 801bdaa:	5cb2      	ldrb	r2, [r6, r2]
 801bdac:	07ed      	lsls	r5, r5, #31
 801bdae:	bf54      	ite	pl
 801bdb0:	f002 020f 	andpl.w	r2, r2, #15
 801bdb4:	1112      	asrmi	r2, r2, #4
 801bdb6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bdba:	b2d2      	uxtb	r2, r2
 801bdbc:	2aff      	cmp	r2, #255	; 0xff
 801bdbe:	d115      	bne.n	801bdec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bdc0:	f8d8 5000 	ldr.w	r5, [r8]
 801bdc4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bdc8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bdcc:	096a      	lsrs	r2, r5, #5
 801bdce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdd2:	4332      	orrs	r2, r6
 801bdd4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bdd8:	432a      	orrs	r2, r5
 801bdda:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bdde:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bde0:	4410      	add	r0, r2
 801bde2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bde4:	f10e 0e01 	add.w	lr, lr, #1
 801bde8:	4411      	add	r1, r2
 801bdea:	e7d2      	b.n	801bd92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bdec:	2a00      	cmp	r2, #0
 801bdee:	d0f6      	beq.n	801bdde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bdf0:	f8d8 7000 	ldr.w	r7, [r8]
 801bdf4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bdf8:	fa1f f982 	uxth.w	r9, r2
 801bdfc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801be00:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801be04:	43d2      	mvns	r2, r2
 801be06:	b2d2      	uxtb	r2, r2
 801be08:	fb15 f509 	smulbb	r5, r5, r9
 801be0c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801be10:	fb06 5602 	mla	r6, r6, r2, r5
 801be14:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801be18:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801be1c:	b2ff      	uxtb	r7, r7
 801be1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801be22:	fa5f fc8c 	uxtb.w	ip, ip
 801be26:	fb17 f709 	smulbb	r7, r7, r9
 801be2a:	fb0c 7702 	mla	r7, ip, r2, r7
 801be2e:	b2b6      	uxth	r6, r6
 801be30:	fb1a fa09 	smulbb	sl, sl, r9
 801be34:	b2bf      	uxth	r7, r7
 801be36:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801be3a:	fb05 a502 	mla	r5, r5, r2, sl
 801be3e:	1c72      	adds	r2, r6, #1
 801be40:	f107 0a01 	add.w	sl, r7, #1
 801be44:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801be48:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801be4c:	b2ad      	uxth	r5, r5
 801be4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be52:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801be56:	ea4a 0606 	orr.w	r6, sl, r6
 801be5a:	f105 0a01 	add.w	sl, r5, #1
 801be5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801be62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801be6a:	ea46 060a 	orr.w	r6, r6, sl
 801be6e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801be72:	e7b4      	b.n	801bdde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801be74:	b007      	add	sp, #28
 801be76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be7a:	bf00      	nop
 801be7c:	20012db4 	.word	0x20012db4

0801be80 <_ZN8touchgfx8LCD16bppD1Ev>:
 801be80:	4770      	bx	lr

0801be82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801be82:	4770      	bx	lr

0801be84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801be84:	4770      	bx	lr

0801be86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801be86:	4770      	bx	lr

0801be88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801be88:	4770      	bx	lr

0801be8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801be8a:	4770      	bx	lr

0801be8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801be8c:	4770      	bx	lr

0801be8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801be8e:	4770      	bx	lr

0801be90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be90:	4770      	bx	lr

0801be92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be92:	4770      	bx	lr

0801be94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be94:	4770      	bx	lr

0801be96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be96:	4770      	bx	lr

0801be98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be98:	4770      	bx	lr

0801be9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801be9a:	4770      	bx	lr

0801be9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be9c:	4770      	bx	lr

0801be9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be9e:	4770      	bx	lr

0801bea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bea0:	4770      	bx	lr

0801bea2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bea2:	4770      	bx	lr

0801bea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bea4:	4770      	bx	lr

0801bea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bea6:	4770      	bx	lr

0801bea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bea8:	4770      	bx	lr

0801beaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801beaa:	4770      	bx	lr

0801beac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801beac:	4770      	bx	lr

0801beae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801beae:	4770      	bx	lr

0801beb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801beb0:	4770      	bx	lr

0801beb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801beb2:	4770      	bx	lr

0801beb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801beb4:	4770      	bx	lr

0801beb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801beb6:	4770      	bx	lr

0801beb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801beb8:	4770      	bx	lr

0801beba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801beba:	4770      	bx	lr

0801bebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bebc:	4770      	bx	lr

0801bebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bebe:	4770      	bx	lr

0801bec0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801bec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bec4:	b088      	sub	sp, #32
 801bec6:	ac08      	add	r4, sp, #32
 801bec8:	4606      	mov	r6, r0
 801beca:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801bece:	4620      	mov	r0, r4
 801bed0:	4688      	mov	r8, r1
 801bed2:	4691      	mov	r9, r2
 801bed4:	f7fd fc62 	bl	801979c <_ZNK8touchgfx6Bitmap7getDataEv>
 801bed8:	6833      	ldr	r3, [r6, #0]
 801beda:	4605      	mov	r5, r0
 801bedc:	4620      	mov	r0, r4
 801bede:	699f      	ldr	r7, [r3, #24]
 801bee0:	f7fd fb70 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bee4:	4682      	mov	sl, r0
 801bee6:	4620      	mov	r0, r4
 801bee8:	f7fd fba0 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801beec:	9500      	str	r5, [sp, #0]
 801beee:	e9cd a001 	strd	sl, r0, [sp, #4]
 801bef2:	464b      	mov	r3, r9
 801bef4:	a806      	add	r0, sp, #24
 801bef6:	4642      	mov	r2, r8
 801bef8:	4631      	mov	r1, r6
 801befa:	47b8      	blx	r7
 801befc:	4628      	mov	r0, r5
 801befe:	b008      	add	sp, #32
 801bf00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bf04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bf04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bf08:	2300      	movs	r3, #0
 801bf0a:	9300      	str	r3, [sp, #0]
 801bf0c:	4b3d      	ldr	r3, [pc, #244]	; (801c004 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801bf0e:	781b      	ldrb	r3, [r3, #0]
 801bf10:	2b00      	cmp	r3, #0
 801bf12:	d137      	bne.n	801bf84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801bf14:	4a3c      	ldr	r2, [pc, #240]	; (801c008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bf16:	f9b2 2000 	ldrsh.w	r2, [r2]
 801bf1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bf1e:	2b00      	cmp	r3, #0
 801bf20:	d132      	bne.n	801bf88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801bf22:	4b3a      	ldr	r3, [pc, #232]	; (801c00c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bf24:	f9b3 3000 	ldrsh.w	r3, [r3]
 801bf28:	6808      	ldr	r0, [r1, #0]
 801bf2a:	6849      	ldr	r1, [r1, #4]
 801bf2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bf30:	ac02      	add	r4, sp, #8
 801bf32:	ab02      	add	r3, sp, #8
 801bf34:	c303      	stmia	r3!, {r0, r1}
 801bf36:	4669      	mov	r1, sp
 801bf38:	4620      	mov	r0, r4
 801bf3a:	f7f9 fdc1 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bf3e:	4668      	mov	r0, sp
 801bf40:	f7f9 fd7a 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bf44:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801bf48:	f8bd 2000 	ldrh.w	r2, [sp]
 801bf4c:	4d30      	ldr	r5, [pc, #192]	; (801c010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801bf4e:	4413      	add	r3, r2
 801bf50:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bf54:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bf58:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801bf5c:	6828      	ldr	r0, [r5, #0]
 801bf5e:	4413      	add	r3, r2
 801bf60:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bf64:	6803      	ldr	r3, [r0, #0]
 801bf66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bf68:	4798      	blx	r3
 801bf6a:	f010 0f01 	tst.w	r0, #1
 801bf6e:	462f      	mov	r7, r5
 801bf70:	d00c      	beq.n	801bf8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bf72:	6828      	ldr	r0, [r5, #0]
 801bf74:	6803      	ldr	r3, [r0, #0]
 801bf76:	e894 0006 	ldmia.w	r4, {r1, r2}
 801bf7a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bf7c:	4798      	blx	r3
 801bf7e:	b004      	add	sp, #16
 801bf80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bf84:	4a21      	ldr	r2, [pc, #132]	; (801c00c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bf86:	e7c6      	b.n	801bf16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bf88:	4b1f      	ldr	r3, [pc, #124]	; (801c008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bf8a:	e7cb      	b.n	801bf24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801bf8c:	6838      	ldr	r0, [r7, #0]
 801bf8e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801bf92:	6803      	ldr	r3, [r0, #0]
 801bf94:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bf98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bf9a:	4798      	blx	r3
 801bf9c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bfa0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bfa4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bfa8:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bfac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bfb0:	6838      	ldr	r0, [r7, #0]
 801bfb2:	6803      	ldr	r3, [r0, #0]
 801bfb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bfb6:	4798      	blx	r3
 801bfb8:	4a13      	ldr	r2, [pc, #76]	; (801c008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bfba:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801bfbe:	8813      	ldrh	r3, [r2, #0]
 801bfc0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bfc4:	fb03 1404 	mla	r4, r3, r4, r1
 801bfc8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bfcc:	435d      	muls	r5, r3
 801bfce:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bfd2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801bfd6:	4691      	mov	r9, r2
 801bfd8:	6838      	ldr	r0, [r7, #0]
 801bfda:	42ac      	cmp	r4, r5
 801bfdc:	6803      	ldr	r3, [r0, #0]
 801bfde:	d20e      	bcs.n	801bffe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bfe0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bfe4:	4632      	mov	r2, r6
 801bfe6:	4643      	mov	r3, r8
 801bfe8:	4621      	mov	r1, r4
 801bfea:	47d0      	blx	sl
 801bfec:	f8b9 3000 	ldrh.w	r3, [r9]
 801bff0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bff4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801bff8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bffc:	e7ec      	b.n	801bfd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801bffe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c000:	4798      	blx	r3
 801c002:	e7bc      	b.n	801bf7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c004:	20012d9c 	.word	0x20012d9c
 801c008:	20012d9e 	.word	0x20012d9e
 801c00c:	20012da0 	.word	0x20012da0
 801c010:	20012da4 	.word	0x20012da4

0801c014 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c018:	b08b      	sub	sp, #44	; 0x2c
 801c01a:	460f      	mov	r7, r1
 801c01c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c020:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c024:	4616      	mov	r6, r2
 801c026:	f1bb 0f00 	cmp.w	fp, #0
 801c02a:	d04a      	beq.n	801c0c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c02c:	6810      	ldr	r0, [r2, #0]
 801c02e:	6851      	ldr	r1, [r2, #4]
 801c030:	ad06      	add	r5, sp, #24
 801c032:	c503      	stmia	r5!, {r0, r1}
 801c034:	6818      	ldr	r0, [r3, #0]
 801c036:	6859      	ldr	r1, [r3, #4]
 801c038:	ad08      	add	r5, sp, #32
 801c03a:	c503      	stmia	r5!, {r0, r1}
 801c03c:	a806      	add	r0, sp, #24
 801c03e:	f7f9 fcfb 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c042:	4631      	mov	r1, r6
 801c044:	a808      	add	r0, sp, #32
 801c046:	f7f9 fd3b 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c04a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c04e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c052:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c056:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c05a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c05e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c062:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c066:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c06a:	4f5f      	ldr	r7, [pc, #380]	; (801c1e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c06c:	440a      	add	r2, r1
 801c06e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c072:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c076:	6838      	ldr	r0, [r7, #0]
 801c078:	4413      	add	r3, r2
 801c07a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c07e:	6803      	ldr	r3, [r0, #0]
 801c080:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c082:	4798      	blx	r3
 801c084:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c088:	46b9      	mov	r9, r7
 801c08a:	d11d      	bne.n	801c0c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c08c:	b9fc      	cbnz	r4, 801c0ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c08e:	f010 0f01 	tst.w	r0, #1
 801c092:	d01c      	beq.n	801c0ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c094:	f8d9 0000 	ldr.w	r0, [r9]
 801c098:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c09c:	6801      	ldr	r1, [r0, #0]
 801c09e:	f8cd b00c 	str.w	fp, [sp, #12]
 801c0a2:	2700      	movs	r7, #0
 801c0a4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c0a8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c0ac:	9402      	str	r4, [sp, #8]
 801c0ae:	b2ad      	uxth	r5, r5
 801c0b0:	fa1f f488 	uxth.w	r4, r8
 801c0b4:	9501      	str	r5, [sp, #4]
 801c0b6:	9400      	str	r4, [sp, #0]
 801c0b8:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c0ba:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c0be:	4631      	mov	r1, r6
 801c0c0:	47a0      	blx	r4
 801c0c2:	b00b      	add	sp, #44	; 0x2c
 801c0c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0c8:	f010 0f04 	tst.w	r0, #4
 801c0cc:	e7e1      	b.n	801c092 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c0ce:	f8d9 0000 	ldr.w	r0, [r9]
 801c0d2:	6803      	ldr	r3, [r0, #0]
 801c0d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0d6:	4798      	blx	r3
 801c0d8:	4b44      	ldr	r3, [pc, #272]	; (801c1ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c0da:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c0de:	881a      	ldrh	r2, [r3, #0]
 801c0e0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c0e4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c0e8:	fb02 1404 	mla	r4, r2, r4, r1
 801c0ec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c0f0:	469a      	mov	sl, r3
 801c0f2:	fb05 f502 	mul.w	r5, r5, r2
 801c0f6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c0fa:	d059      	beq.n	801c1b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c0fc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c100:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c104:	fa1f f28b 	uxth.w	r2, fp
 801c108:	fa1f f989 	uxth.w	r9, r9
 801c10c:	469e      	mov	lr, r3
 801c10e:	42ac      	cmp	r4, r5
 801c110:	d264      	bcs.n	801c1dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c112:	eb04 0a07 	add.w	sl, r4, r7
 801c116:	4554      	cmp	r4, sl
 801c118:	d23d      	bcs.n	801c196 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c11a:	8821      	ldrh	r1, [r4, #0]
 801c11c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c120:	1208      	asrs	r0, r1, #8
 801c122:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c126:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c12a:	fb10 f009 	smulbb	r0, r0, r9
 801c12e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c132:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c136:	00c9      	lsls	r1, r1, #3
 801c138:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c13c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c140:	10d8      	asrs	r0, r3, #3
 801c142:	b2c9      	uxtb	r1, r1
 801c144:	00db      	lsls	r3, r3, #3
 801c146:	fa1f fc8c 	uxth.w	ip, ip
 801c14a:	fb1b fb09 	smulbb	fp, fp, r9
 801c14e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c152:	b2db      	uxtb	r3, r3
 801c154:	fb11 f109 	smulbb	r1, r1, r9
 801c158:	fb00 b002 	mla	r0, r0, r2, fp
 801c15c:	fb03 1302 	mla	r3, r3, r2, r1
 801c160:	f10c 0b01 	add.w	fp, ip, #1
 801c164:	b29b      	uxth	r3, r3
 801c166:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c16a:	b280      	uxth	r0, r0
 801c16c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c170:	f103 0c01 	add.w	ip, r3, #1
 801c174:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c178:	1c43      	adds	r3, r0, #1
 801c17a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c17e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c182:	0940      	lsrs	r0, r0, #5
 801c184:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c188:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c18c:	ea4c 0c00 	orr.w	ip, ip, r0
 801c190:	f824 cb02 	strh.w	ip, [r4], #2
 801c194:	e7bf      	b.n	801c116 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c196:	f8be 3000 	ldrh.w	r3, [lr]
 801c19a:	eba3 0308 	sub.w	r3, r3, r8
 801c19e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c1a2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c1a6:	eba3 0308 	sub.w	r3, r3, r8
 801c1aa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c1ae:	e7ae      	b.n	801c10e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c1b0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c1b4:	f8d9 0000 	ldr.w	r0, [r9]
 801c1b8:	42ac      	cmp	r4, r5
 801c1ba:	6803      	ldr	r3, [r0, #0]
 801c1bc:	d20e      	bcs.n	801c1dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c1be:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c1c2:	4632      	mov	r2, r6
 801c1c4:	463b      	mov	r3, r7
 801c1c6:	4621      	mov	r1, r4
 801c1c8:	47c0      	blx	r8
 801c1ca:	f8ba 3000 	ldrh.w	r3, [sl]
 801c1ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c1d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c1d6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c1da:	e7eb      	b.n	801c1b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c1dc:	4b02      	ldr	r3, [pc, #8]	; (801c1e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c1de:	6818      	ldr	r0, [r3, #0]
 801c1e0:	6803      	ldr	r3, [r0, #0]
 801c1e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1e4:	4798      	blx	r3
 801c1e6:	e76c      	b.n	801c0c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c1e8:	20012da4 	.word	0x20012da4
 801c1ec:	20012d9e 	.word	0x20012d9e

0801c1f0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c1f0:	b510      	push	{r4, lr}
 801c1f2:	2184      	movs	r1, #132	; 0x84
 801c1f4:	4604      	mov	r4, r0
 801c1f6:	f00d fe7e 	bl	8029ef6 <_ZdlPvj>
 801c1fa:	4620      	mov	r0, r4
 801c1fc:	bd10      	pop	{r4, pc}

0801c1fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c1fe:	b510      	push	{r4, lr}
 801c200:	2104      	movs	r1, #4
 801c202:	4604      	mov	r4, r0
 801c204:	f00d fe77 	bl	8029ef6 <_ZdlPvj>
 801c208:	4620      	mov	r0, r4
 801c20a:	bd10      	pop	{r4, pc}

0801c20c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c20c:	b510      	push	{r4, lr}
 801c20e:	2104      	movs	r1, #4
 801c210:	4604      	mov	r4, r0
 801c212:	f00d fe70 	bl	8029ef6 <_ZdlPvj>
 801c216:	4620      	mov	r0, r4
 801c218:	bd10      	pop	{r4, pc}

0801c21a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c21a:	b510      	push	{r4, lr}
 801c21c:	f640 0144 	movw	r1, #2116	; 0x844
 801c220:	4604      	mov	r4, r0
 801c222:	f00d fe68 	bl	8029ef6 <_ZdlPvj>
 801c226:	4620      	mov	r0, r4
 801c228:	bd10      	pop	{r4, pc}

0801c22a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c22a:	b510      	push	{r4, lr}
 801c22c:	2104      	movs	r1, #4
 801c22e:	4604      	mov	r4, r0
 801c230:	f00d fe61 	bl	8029ef6 <_ZdlPvj>
 801c234:	4620      	mov	r0, r4
 801c236:	bd10      	pop	{r4, pc}

0801c238 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c238:	b510      	push	{r4, lr}
 801c23a:	2104      	movs	r1, #4
 801c23c:	4604      	mov	r4, r0
 801c23e:	f00d fe5a 	bl	8029ef6 <_ZdlPvj>
 801c242:	4620      	mov	r0, r4
 801c244:	bd10      	pop	{r4, pc}

0801c246 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c246:	b510      	push	{r4, lr}
 801c248:	2104      	movs	r1, #4
 801c24a:	4604      	mov	r4, r0
 801c24c:	f00d fe53 	bl	8029ef6 <_ZdlPvj>
 801c250:	4620      	mov	r0, r4
 801c252:	bd10      	pop	{r4, pc}

0801c254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c254:	b510      	push	{r4, lr}
 801c256:	2104      	movs	r1, #4
 801c258:	4604      	mov	r4, r0
 801c25a:	f00d fe4c 	bl	8029ef6 <_ZdlPvj>
 801c25e:	4620      	mov	r0, r4
 801c260:	bd10      	pop	{r4, pc}

0801c262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c262:	b510      	push	{r4, lr}
 801c264:	2104      	movs	r1, #4
 801c266:	4604      	mov	r4, r0
 801c268:	f00d fe45 	bl	8029ef6 <_ZdlPvj>
 801c26c:	4620      	mov	r0, r4
 801c26e:	bd10      	pop	{r4, pc}

0801c270 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c270:	b510      	push	{r4, lr}
 801c272:	2104      	movs	r1, #4
 801c274:	4604      	mov	r4, r0
 801c276:	f00d fe3e 	bl	8029ef6 <_ZdlPvj>
 801c27a:	4620      	mov	r0, r4
 801c27c:	bd10      	pop	{r4, pc}

0801c27e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c27e:	b510      	push	{r4, lr}
 801c280:	2104      	movs	r1, #4
 801c282:	4604      	mov	r4, r0
 801c284:	f00d fe37 	bl	8029ef6 <_ZdlPvj>
 801c288:	4620      	mov	r0, r4
 801c28a:	bd10      	pop	{r4, pc}

0801c28c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c28c:	b510      	push	{r4, lr}
 801c28e:	2104      	movs	r1, #4
 801c290:	4604      	mov	r4, r0
 801c292:	f00d fe30 	bl	8029ef6 <_ZdlPvj>
 801c296:	4620      	mov	r0, r4
 801c298:	bd10      	pop	{r4, pc}

0801c29a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c29a:	b510      	push	{r4, lr}
 801c29c:	2104      	movs	r1, #4
 801c29e:	4604      	mov	r4, r0
 801c2a0:	f00d fe29 	bl	8029ef6 <_ZdlPvj>
 801c2a4:	4620      	mov	r0, r4
 801c2a6:	bd10      	pop	{r4, pc}

0801c2a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c2a8:	b510      	push	{r4, lr}
 801c2aa:	2104      	movs	r1, #4
 801c2ac:	4604      	mov	r4, r0
 801c2ae:	f00d fe22 	bl	8029ef6 <_ZdlPvj>
 801c2b2:	4620      	mov	r0, r4
 801c2b4:	bd10      	pop	{r4, pc}

0801c2b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c2b6:	b510      	push	{r4, lr}
 801c2b8:	2104      	movs	r1, #4
 801c2ba:	4604      	mov	r4, r0
 801c2bc:	f00d fe1b 	bl	8029ef6 <_ZdlPvj>
 801c2c0:	4620      	mov	r0, r4
 801c2c2:	bd10      	pop	{r4, pc}

0801c2c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2c4:	b510      	push	{r4, lr}
 801c2c6:	2104      	movs	r1, #4
 801c2c8:	4604      	mov	r4, r0
 801c2ca:	f00d fe14 	bl	8029ef6 <_ZdlPvj>
 801c2ce:	4620      	mov	r0, r4
 801c2d0:	bd10      	pop	{r4, pc}

0801c2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c2d2:	b510      	push	{r4, lr}
 801c2d4:	2104      	movs	r1, #4
 801c2d6:	4604      	mov	r4, r0
 801c2d8:	f00d fe0d 	bl	8029ef6 <_ZdlPvj>
 801c2dc:	4620      	mov	r0, r4
 801c2de:	bd10      	pop	{r4, pc}

0801c2e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c2e0:	b510      	push	{r4, lr}
 801c2e2:	2104      	movs	r1, #4
 801c2e4:	4604      	mov	r4, r0
 801c2e6:	f00d fe06 	bl	8029ef6 <_ZdlPvj>
 801c2ea:	4620      	mov	r0, r4
 801c2ec:	bd10      	pop	{r4, pc}

0801c2ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c2ee:	b510      	push	{r4, lr}
 801c2f0:	2104      	movs	r1, #4
 801c2f2:	4604      	mov	r4, r0
 801c2f4:	f00d fdff 	bl	8029ef6 <_ZdlPvj>
 801c2f8:	4620      	mov	r0, r4
 801c2fa:	bd10      	pop	{r4, pc}

0801c2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c2fc:	b510      	push	{r4, lr}
 801c2fe:	2104      	movs	r1, #4
 801c300:	4604      	mov	r4, r0
 801c302:	f00d fdf8 	bl	8029ef6 <_ZdlPvj>
 801c306:	4620      	mov	r0, r4
 801c308:	bd10      	pop	{r4, pc}

0801c30a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c30a:	b510      	push	{r4, lr}
 801c30c:	2104      	movs	r1, #4
 801c30e:	4604      	mov	r4, r0
 801c310:	f00d fdf1 	bl	8029ef6 <_ZdlPvj>
 801c314:	4620      	mov	r0, r4
 801c316:	bd10      	pop	{r4, pc}

0801c318 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c318:	b510      	push	{r4, lr}
 801c31a:	2104      	movs	r1, #4
 801c31c:	4604      	mov	r4, r0
 801c31e:	f00d fdea 	bl	8029ef6 <_ZdlPvj>
 801c322:	4620      	mov	r0, r4
 801c324:	bd10      	pop	{r4, pc}

0801c326 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c326:	b510      	push	{r4, lr}
 801c328:	2104      	movs	r1, #4
 801c32a:	4604      	mov	r4, r0
 801c32c:	f00d fde3 	bl	8029ef6 <_ZdlPvj>
 801c330:	4620      	mov	r0, r4
 801c332:	bd10      	pop	{r4, pc}

0801c334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c334:	b510      	push	{r4, lr}
 801c336:	2104      	movs	r1, #4
 801c338:	4604      	mov	r4, r0
 801c33a:	f00d fddc 	bl	8029ef6 <_ZdlPvj>
 801c33e:	4620      	mov	r0, r4
 801c340:	bd10      	pop	{r4, pc}

0801c342 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c342:	b510      	push	{r4, lr}
 801c344:	2104      	movs	r1, #4
 801c346:	4604      	mov	r4, r0
 801c348:	f00d fdd5 	bl	8029ef6 <_ZdlPvj>
 801c34c:	4620      	mov	r0, r4
 801c34e:	bd10      	pop	{r4, pc}

0801c350 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c350:	b510      	push	{r4, lr}
 801c352:	2104      	movs	r1, #4
 801c354:	4604      	mov	r4, r0
 801c356:	f00d fdce 	bl	8029ef6 <_ZdlPvj>
 801c35a:	4620      	mov	r0, r4
 801c35c:	bd10      	pop	{r4, pc}

0801c35e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c35e:	b510      	push	{r4, lr}
 801c360:	2104      	movs	r1, #4
 801c362:	4604      	mov	r4, r0
 801c364:	f00d fdc7 	bl	8029ef6 <_ZdlPvj>
 801c368:	4620      	mov	r0, r4
 801c36a:	bd10      	pop	{r4, pc}

0801c36c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c36c:	b510      	push	{r4, lr}
 801c36e:	2104      	movs	r1, #4
 801c370:	4604      	mov	r4, r0
 801c372:	f00d fdc0 	bl	8029ef6 <_ZdlPvj>
 801c376:	4620      	mov	r0, r4
 801c378:	bd10      	pop	{r4, pc}

0801c37a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c37a:	b510      	push	{r4, lr}
 801c37c:	2104      	movs	r1, #4
 801c37e:	4604      	mov	r4, r0
 801c380:	f00d fdb9 	bl	8029ef6 <_ZdlPvj>
 801c384:	4620      	mov	r0, r4
 801c386:	bd10      	pop	{r4, pc}

0801c388 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c388:	b510      	push	{r4, lr}
 801c38a:	2104      	movs	r1, #4
 801c38c:	4604      	mov	r4, r0
 801c38e:	f00d fdb2 	bl	8029ef6 <_ZdlPvj>
 801c392:	4620      	mov	r0, r4
 801c394:	bd10      	pop	{r4, pc}

0801c396 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c396:	b510      	push	{r4, lr}
 801c398:	2104      	movs	r1, #4
 801c39a:	4604      	mov	r4, r0
 801c39c:	f00d fdab 	bl	8029ef6 <_ZdlPvj>
 801c3a0:	4620      	mov	r0, r4
 801c3a2:	bd10      	pop	{r4, pc}

0801c3a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c3a4:	b510      	push	{r4, lr}
 801c3a6:	2104      	movs	r1, #4
 801c3a8:	4604      	mov	r4, r0
 801c3aa:	f00d fda4 	bl	8029ef6 <_ZdlPvj>
 801c3ae:	4620      	mov	r0, r4
 801c3b0:	bd10      	pop	{r4, pc}
	...

0801c3b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3b8:	b08f      	sub	sp, #60	; 0x3c
 801c3ba:	461c      	mov	r4, r3
 801c3bc:	9205      	str	r2, [sp, #20]
 801c3be:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c3c2:	9100      	str	r1, [sp, #0]
 801c3c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c3c6:	9201      	str	r2, [sp, #4]
 801c3c8:	2a00      	cmp	r2, #0
 801c3ca:	f000 8115 	beq.w	801c5f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c3ce:	6820      	ldr	r0, [r4, #0]
 801c3d0:	6861      	ldr	r1, [r4, #4]
 801c3d2:	aa0a      	add	r2, sp, #40	; 0x28
 801c3d4:	c203      	stmia	r2!, {r0, r1}
 801c3d6:	6818      	ldr	r0, [r3, #0]
 801c3d8:	6859      	ldr	r1, [r3, #4]
 801c3da:	aa0c      	add	r2, sp, #48	; 0x30
 801c3dc:	c203      	stmia	r2!, {r0, r1}
 801c3de:	a80a      	add	r0, sp, #40	; 0x28
 801c3e0:	f7f9 fb2a 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c3e4:	4621      	mov	r1, r4
 801c3e6:	a80c      	add	r0, sp, #48	; 0x30
 801c3e8:	f7f9 fb6a 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c3ec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c3f0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c3f4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c3f8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c3fc:	bfde      	ittt	le
 801c3fe:	b2b3      	uxthle	r3, r6
 801c400:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c404:	fb92 f3f3 	sdivle	r3, r2, r3
 801c408:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c40c:	bfc8      	it	gt
 801c40e:	2301      	movgt	r3, #1
 801c410:	fb92 f1f3 	sdiv	r1, r2, r3
 801c414:	fa1f fc81 	uxth.w	ip, r1
 801c418:	fb0c 2413 	mls	r4, ip, r3, r2
 801c41c:	fb14 f406 	smulbb	r4, r4, r6
 801c420:	441d      	add	r5, r3
 801c422:	4404      	add	r4, r0
 801c424:	4661      	mov	r1, ip
 801c426:	3d01      	subs	r5, #1
 801c428:	b2a4      	uxth	r4, r4
 801c42a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c42e:	b131      	cbz	r1, 801c43e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c430:	9b05      	ldr	r3, [sp, #20]
 801c432:	9900      	ldr	r1, [sp, #0]
 801c434:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c438:	ba1b      	rev	r3, r3
 801c43a:	4419      	add	r1, r3
 801c43c:	9100      	str	r1, [sp, #0]
 801c43e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c442:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c446:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c44a:	4418      	add	r0, r3
 801c44c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c450:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c454:	441a      	add	r2, r3
 801c456:	4b6a      	ldr	r3, [pc, #424]	; (801c600 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c458:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c45c:	6818      	ldr	r0, [r3, #0]
 801c45e:	6803      	ldr	r3, [r0, #0]
 801c460:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c462:	4798      	blx	r3
 801c464:	4967      	ldr	r1, [pc, #412]	; (801c604 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c466:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c46a:	880b      	ldrh	r3, [r1, #0]
 801c46c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c470:	9109      	str	r1, [sp, #36]	; 0x24
 801c472:	fb03 c202 	mla	r2, r3, r2, ip
 801c476:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c47a:	4373      	muls	r3, r6
 801c47c:	b2ad      	uxth	r5, r5
 801c47e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c482:	00ad      	lsls	r5, r5, #2
 801c484:	9306      	str	r3, [sp, #24]
 801c486:	1d2b      	adds	r3, r5, #4
 801c488:	9307      	str	r3, [sp, #28]
 801c48a:	9b01      	ldr	r3, [sp, #4]
 801c48c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c490:	9103      	str	r1, [sp, #12]
 801c492:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c496:	2c00      	cmp	r4, #0
 801c498:	bf0c      	ite	eq
 801c49a:	46c6      	moveq	lr, r8
 801c49c:	f04f 0e00 	movne.w	lr, #0
 801c4a0:	2300      	movs	r3, #0
 801c4a2:	b292      	uxth	r2, r2
 801c4a4:	fa1f fe8e 	uxth.w	lr, lr
 801c4a8:	9302      	str	r3, [sp, #8]
 801c4aa:	9204      	str	r2, [sp, #16]
 801c4ac:	9a06      	ldr	r2, [sp, #24]
 801c4ae:	4282      	cmp	r2, r0
 801c4b0:	f240 809d 	bls.w	801c5ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c4b4:	b963      	cbnz	r3, 801c4d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c4b6:	9b00      	ldr	r3, [sp, #0]
 801c4b8:	781a      	ldrb	r2, [r3, #0]
 801c4ba:	0993      	lsrs	r3, r2, #6
 801c4bc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c4c0:	9202      	str	r2, [sp, #8]
 801c4c2:	1e5a      	subs	r2, r3, #1
 801c4c4:	2a02      	cmp	r2, #2
 801c4c6:	d815      	bhi.n	801c4f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c4c8:	9a00      	ldr	r2, [sp, #0]
 801c4ca:	3201      	adds	r2, #1
 801c4cc:	9200      	str	r2, [sp, #0]
 801c4ce:	b29b      	uxth	r3, r3
 801c4d0:	b1b4      	cbz	r4, 801c500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c4d2:	429c      	cmp	r4, r3
 801c4d4:	bf95      	itete	ls
 801c4d6:	1b1c      	subls	r4, r3, r4
 801c4d8:	1ae4      	subhi	r4, r4, r3
 801c4da:	fa1f fa84 	uxthls.w	sl, r4
 801c4de:	b2a4      	uxthhi	r4, r4
 801c4e0:	bf87      	ittee	hi
 801c4e2:	4671      	movhi	r1, lr
 801c4e4:	f04f 0a00 	movhi.w	sl, #0
 801c4e8:	fa1f f188 	uxthls.w	r1, r8
 801c4ec:	2400      	movls	r4, #0
 801c4ee:	4653      	mov	r3, sl
 801c4f0:	468e      	mov	lr, r1
 801c4f2:	e7db      	b.n	801c4ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c4f4:	9a00      	ldr	r2, [sp, #0]
 801c4f6:	9b00      	ldr	r3, [sp, #0]
 801c4f8:	3202      	adds	r2, #2
 801c4fa:	785b      	ldrb	r3, [r3, #1]
 801c4fc:	9200      	str	r2, [sp, #0]
 801c4fe:	e7e7      	b.n	801c4d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c500:	2202      	movs	r2, #2
 801c502:	4615      	mov	r5, r2
 801c504:	9907      	ldr	r1, [sp, #28]
 801c506:	9a02      	ldr	r2, [sp, #8]
 801c508:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c50c:	9905      	ldr	r1, [sp, #20]
 801c50e:	4573      	cmp	r3, lr
 801c510:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c514:	9a01      	ldr	r2, [sp, #4]
 801c516:	bf2b      	itete	cs
 801c518:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c51c:	ebae 0103 	subcc.w	r1, lr, r3
 801c520:	46f1      	movcs	r9, lr
 801c522:	4699      	movcc	r9, r3
 801c524:	bf27      	ittee	cs
 801c526:	fa1f fa8a 	uxthcs.w	sl, sl
 801c52a:	4621      	movcs	r1, r4
 801c52c:	b289      	uxthcc	r1, r1
 801c52e:	46a2      	movcc	sl, r4
 801c530:	2aff      	cmp	r2, #255	; 0xff
 801c532:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c536:	d105      	bne.n	801c544 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c538:	4481      	add	r9, r0
 801c53a:	4581      	cmp	r9, r0
 801c53c:	d045      	beq.n	801c5ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c53e:	f820 cb02 	strh.w	ip, [r0], #2
 801c542:	e7fa      	b.n	801c53a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c544:	9d03      	ldr	r5, [sp, #12]
 801c546:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c54a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c54e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c552:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c556:	436a      	muls	r2, r5
 801c558:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c55c:	fa5f fc8c 	uxtb.w	ip, ip
 801c560:	9208      	str	r2, [sp, #32]
 801c562:	fb0b fb05 	mul.w	fp, fp, r5
 801c566:	fb0c fc05 	mul.w	ip, ip, r5
 801c56a:	4481      	add	r9, r0
 801c56c:	4581      	cmp	r9, r0
 801c56e:	d02c      	beq.n	801c5ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c570:	8802      	ldrh	r2, [r0, #0]
 801c572:	9d04      	ldr	r5, [sp, #16]
 801c574:	9f04      	ldr	r7, [sp, #16]
 801c576:	1216      	asrs	r6, r2, #8
 801c578:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c57c:	fb16 f605 	smulbb	r6, r6, r5
 801c580:	9d08      	ldr	r5, [sp, #32]
 801c582:	442e      	add	r6, r5
 801c584:	10d5      	asrs	r5, r2, #3
 801c586:	00d2      	lsls	r2, r2, #3
 801c588:	b2d2      	uxtb	r2, r2
 801c58a:	fb12 f207 	smulbb	r2, r2, r7
 801c58e:	b2b6      	uxth	r6, r6
 801c590:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c594:	4462      	add	r2, ip
 801c596:	fb15 f507 	smulbb	r5, r5, r7
 801c59a:	b292      	uxth	r2, r2
 801c59c:	1c77      	adds	r7, r6, #1
 801c59e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c5a2:	1c57      	adds	r7, r2, #1
 801c5a4:	445d      	add	r5, fp
 801c5a6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c5aa:	b2ad      	uxth	r5, r5
 801c5ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c5b0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c5b4:	4316      	orrs	r6, r2
 801c5b6:	1c6a      	adds	r2, r5, #1
 801c5b8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c5bc:	096d      	lsrs	r5, r5, #5
 801c5be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c5c2:	432e      	orrs	r6, r5
 801c5c4:	f820 6b02 	strh.w	r6, [r0], #2
 801c5c8:	e7d0      	b.n	801c56c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c5ca:	4573      	cmp	r3, lr
 801c5cc:	d38f      	bcc.n	801c4ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c5ce:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c5d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c5d4:	fa1f f188 	uxth.w	r1, r8
 801c5d8:	1a64      	subs	r4, r4, r1
 801c5da:	881b      	ldrh	r3, [r3, #0]
 801c5dc:	b2a4      	uxth	r4, r4
 801c5de:	2c00      	cmp	r4, #0
 801c5e0:	eba3 0308 	sub.w	r3, r3, r8
 801c5e4:	bf18      	it	ne
 801c5e6:	2100      	movne	r1, #0
 801c5e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c5ec:	e77f      	b.n	801c4ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c5ee:	4b04      	ldr	r3, [pc, #16]	; (801c600 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c5f0:	6818      	ldr	r0, [r3, #0]
 801c5f2:	6803      	ldr	r3, [r0, #0]
 801c5f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c5f6:	4798      	blx	r3
 801c5f8:	b00f      	add	sp, #60	; 0x3c
 801c5fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5fe:	bf00      	nop
 801c600:	20012da4 	.word	0x20012da4
 801c604:	20012d9e 	.word	0x20012d9e

0801c608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c60c:	b09f      	sub	sp, #124	; 0x7c
 801c60e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c612:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c616:	9209      	str	r2, [sp, #36]	; 0x24
 801c618:	461d      	mov	r5, r3
 801c61a:	4604      	mov	r4, r0
 801c61c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c61e:	2a00      	cmp	r2, #0
 801c620:	f000 81eb 	beq.w	801c9fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c624:	6828      	ldr	r0, [r5, #0]
 801c626:	6869      	ldr	r1, [r5, #4]
 801c628:	aa1a      	add	r2, sp, #104	; 0x68
 801c62a:	c203      	stmia	r2!, {r0, r1}
 801c62c:	6818      	ldr	r0, [r3, #0]
 801c62e:	6859      	ldr	r1, [r3, #4]
 801c630:	aa1c      	add	r2, sp, #112	; 0x70
 801c632:	c203      	stmia	r2!, {r0, r1}
 801c634:	a81a      	add	r0, sp, #104	; 0x68
 801c636:	f7f9 f9ff 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c63a:	4629      	mov	r1, r5
 801c63c:	a81c      	add	r0, sp, #112	; 0x70
 801c63e:	f7f9 fa3f 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c642:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c646:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c64a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c64e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c652:	bfd7      	itett	le
 801c654:	b29a      	uxthle	r2, r3
 801c656:	2201      	movgt	r2, #1
 801c658:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c65c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c660:	9202      	str	r2, [sp, #8]
 801c662:	9802      	ldr	r0, [sp, #8]
 801c664:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c668:	fb92 f0f0 	sdiv	r0, r2, r0
 801c66c:	b280      	uxth	r0, r0
 801c66e:	9010      	str	r0, [sp, #64]	; 0x40
 801c670:	9902      	ldr	r1, [sp, #8]
 801c672:	9802      	ldr	r0, [sp, #8]
 801c674:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c676:	4488      	add	r8, r1
 801c678:	fb05 2510 	mls	r5, r5, r0, r2
 801c67c:	fb15 f503 	smulbb	r5, r5, r3
 801c680:	f108 38ff 	add.w	r8, r8, #4294967295
 801c684:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c688:	fb98 f8f1 	sdiv	r8, r8, r1
 801c68c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c690:	440d      	add	r5, r1
 801c692:	4419      	add	r1, r3
 801c694:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c698:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c69c:	441a      	add	r2, r3
 801c69e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c6a2:	9304      	str	r3, [sp, #16]
 801c6a4:	4b95      	ldr	r3, [pc, #596]	; (801c8fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c6a6:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c6aa:	6818      	ldr	r0, [r3, #0]
 801c6ac:	6803      	ldr	r3, [r0, #0]
 801c6ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6b0:	4798      	blx	r3
 801c6b2:	4b93      	ldr	r3, [pc, #588]	; (801c900 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c6b4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c6b8:	881a      	ldrh	r2, [r3, #0]
 801c6ba:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c6be:	9318      	str	r3, [sp, #96]	; 0x60
 801c6c0:	fb02 7101 	mla	r1, r2, r1, r7
 801c6c4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c6c8:	4356      	muls	r6, r2
 801c6ca:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c6ce:	f108 0801 	add.w	r8, r8, #1
 801c6d2:	920a      	str	r2, [sp, #40]	; 0x28
 801c6d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c6d6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c6da:	930f      	str	r3, [sp, #60]	; 0x3c
 801c6dc:	fa1f f888 	uxth.w	r8, r8
 801c6e0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c6e4:	f108 0204 	add.w	r2, r8, #4
 801c6e8:	9211      	str	r2, [sp, #68]	; 0x44
 801c6ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c6ec:	4b85      	ldr	r3, [pc, #532]	; (801c904 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c6ee:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c6f2:	b2ad      	uxth	r5, r5
 801c6f4:	9215      	str	r2, [sp, #84]	; 0x54
 801c6f6:	2d00      	cmp	r5, #0
 801c6f8:	9a04      	ldr	r2, [sp, #16]
 801c6fa:	f04f 0100 	mov.w	r1, #0
 801c6fe:	bf18      	it	ne
 801c700:	2200      	movne	r2, #0
 801c702:	1b1b      	subs	r3, r3, r4
 801c704:	b292      	uxth	r2, r2
 801c706:	910d      	str	r1, [sp, #52]	; 0x34
 801c708:	9319      	str	r3, [sp, #100]	; 0x64
 801c70a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c70c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c70e:	fa11 f383 	uxtah	r3, r1, r3
 801c712:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c714:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c718:	3304      	adds	r3, #4
 801c71a:	9306      	str	r3, [sp, #24]
 801c71c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c71e:	4283      	cmp	r3, r0
 801c720:	f240 8166 	bls.w	801c9f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c724:	9902      	ldr	r1, [sp, #8]
 801c726:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c72a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c72e:	1acb      	subs	r3, r1, r3
 801c730:	b29b      	uxth	r3, r3
 801c732:	9316      	str	r3, [sp, #88]	; 0x58
 801c734:	9b06      	ldr	r3, [sp, #24]
 801c736:	9e06      	ldr	r6, [sp, #24]
 801c738:	7859      	ldrb	r1, [r3, #1]
 801c73a:	789b      	ldrb	r3, [r3, #2]
 801c73c:	7836      	ldrb	r6, [r6, #0]
 801c73e:	9612      	str	r6, [sp, #72]	; 0x48
 801c740:	021b      	lsls	r3, r3, #8
 801c742:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c746:	9906      	ldr	r1, [sp, #24]
 801c748:	78c9      	ldrb	r1, [r1, #3]
 801c74a:	430b      	orrs	r3, r1
 801c74c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c74e:	3601      	adds	r6, #1
 801c750:	4419      	add	r1, r3
 801c752:	9605      	str	r6, [sp, #20]
 801c754:	1c4e      	adds	r6, r1, #1
 801c756:	9603      	str	r6, [sp, #12]
 801c758:	7849      	ldrb	r1, [r1, #1]
 801c75a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c75c:	0209      	lsls	r1, r1, #8
 801c75e:	5cf3      	ldrb	r3, [r6, r3]
 801c760:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c764:	4319      	orrs	r1, r3
 801c766:	b28b      	uxth	r3, r1
 801c768:	930c      	str	r3, [sp, #48]	; 0x30
 801c76a:	2300      	movs	r3, #0
 801c76c:	f04f 0a01 	mov.w	sl, #1
 801c770:	9307      	str	r3, [sp, #28]
 801c772:	469c      	mov	ip, r3
 801c774:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c778:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c77c:	46d3      	mov	fp, sl
 801c77e:	4657      	mov	r7, sl
 801c780:	930e      	str	r3, [sp, #56]	; 0x38
 801c782:	2d00      	cmp	r5, #0
 801c784:	d07e      	beq.n	801c884 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c786:	42af      	cmp	r7, r5
 801c788:	d26e      	bcs.n	801c868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c78a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c78c:	9201      	str	r2, [sp, #4]
 801c78e:	1bed      	subs	r5, r5, r7
 801c790:	4283      	cmp	r3, r0
 801c792:	b2ad      	uxth	r5, r5
 801c794:	d802      	bhi.n	801c79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c796:	e073      	b.n	801c880 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c798:	2b00      	cmp	r3, #0
 801c79a:	d15f      	bne.n	801c85c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c79c:	9b03      	ldr	r3, [sp, #12]
 801c79e:	785b      	ldrb	r3, [r3, #1]
 801c7a0:	f1cb 0207 	rsb	r2, fp, #7
 801c7a4:	4093      	lsls	r3, r2
 801c7a6:	005b      	lsls	r3, r3, #1
 801c7a8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c7ac:	9b03      	ldr	r3, [sp, #12]
 801c7ae:	781b      	ldrb	r3, [r3, #0]
 801c7b0:	fa43 f30b 	asr.w	r3, r3, fp
 801c7b4:	b2db      	uxtb	r3, r3
 801c7b6:	4313      	orrs	r3, r2
 801c7b8:	f10b 0201 	add.w	r2, fp, #1
 801c7bc:	fa5f fb82 	uxtb.w	fp, r2
 801c7c0:	9a03      	ldr	r2, [sp, #12]
 801c7c2:	f1bb 0f08 	cmp.w	fp, #8
 801c7c6:	bf15      	itete	ne
 801c7c8:	3201      	addne	r2, #1
 801c7ca:	3202      	addeq	r2, #2
 801c7cc:	9203      	strne	r2, [sp, #12]
 801c7ce:	9203      	streq	r2, [sp, #12]
 801c7d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c7d2:	b29f      	uxth	r7, r3
 801c7d4:	bf08      	it	eq
 801c7d6:	f04f 0b00 	moveq.w	fp, #0
 801c7da:	42ba      	cmp	r2, r7
 801c7dc:	d309      	bcc.n	801c7f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c7de:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c7e2:	2301      	movs	r3, #1
 801c7e4:	9a05      	ldr	r2, [sp, #20]
 801c7e6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c7ea:	d30e      	bcc.n	801c80a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c7ec:	469a      	mov	sl, r3
 801c7ee:	2600      	movs	r6, #0
 801c7f0:	e035      	b.n	801c85e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c7f2:	9b05      	ldr	r3, [sp, #20]
 801c7f4:	429f      	cmp	r7, r3
 801c7f6:	d318      	bcc.n	801c82a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c7f8:	eb04 030a 	add.w	r3, r4, sl
 801c7fc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c800:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c804:	f10a 0301 	add.w	r3, sl, #1
 801c808:	b29b      	uxth	r3, r3
 801c80a:	9a05      	ldr	r2, [sp, #20]
 801c80c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c810:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c812:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c816:	7116      	strb	r6, [r2, #4]
 801c818:	f10a 0601 	add.w	r6, sl, #1
 801c81c:	80d1      	strh	r1, [r2, #6]
 801c81e:	7156      	strb	r6, [r2, #5]
 801c820:	9a05      	ldr	r2, [sp, #20]
 801c822:	3201      	adds	r2, #1
 801c824:	b292      	uxth	r2, r2
 801c826:	9205      	str	r2, [sp, #20]
 801c828:	e7e0      	b.n	801c7ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c82a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c82e:	463a      	mov	r2, r7
 801c830:	795b      	ldrb	r3, [r3, #5]
 801c832:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c836:	4426      	add	r6, r4
 801c838:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c83a:	eb01 0c06 	add.w	ip, r1, r6
 801c83e:	f1bc 0f00 	cmp.w	ip, #0
 801c842:	dd07      	ble.n	801c854 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c844:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c848:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c84c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c850:	88d2      	ldrh	r2, [r2, #6]
 801c852:	e7f1      	b.n	801c838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c854:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c858:	b29b      	uxth	r3, r3
 801c85a:	e7c3      	b.n	801c7e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c85c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c85e:	970c      	str	r7, [sp, #48]	; 0x30
 801c860:	9a01      	ldr	r2, [sp, #4]
 801c862:	46b4      	mov	ip, r6
 801c864:	461f      	mov	r7, r3
 801c866:	e78c      	b.n	801c782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c868:	1b7b      	subs	r3, r7, r5
 801c86a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c86e:	9201      	str	r2, [sp, #4]
 801c870:	eb0c 0605 	add.w	r6, ip, r5
 801c874:	b29b      	uxth	r3, r3
 801c876:	b2b6      	uxth	r6, r6
 801c878:	2500      	movs	r5, #0
 801c87a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c87c:	4282      	cmp	r2, r0
 801c87e:	d88b      	bhi.n	801c798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c880:	9a01      	ldr	r2, [sp, #4]
 801c882:	e74b      	b.n	801c71c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c884:	4297      	cmp	r7, r2
 801c886:	d332      	bcc.n	801c8ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c888:	1abb      	subs	r3, r7, r2
 801c88a:	b29b      	uxth	r3, r3
 801c88c:	9208      	str	r2, [sp, #32]
 801c88e:	9501      	str	r5, [sp, #4]
 801c890:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c892:	29ff      	cmp	r1, #255	; 0xff
 801c894:	9908      	ldr	r1, [sp, #32]
 801c896:	eb0c 0601 	add.w	r6, ip, r1
 801c89a:	d135      	bne.n	801c908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c89c:	f1a0 0e02 	sub.w	lr, r0, #2
 801c8a0:	b2b6      	uxth	r6, r6
 801c8a2:	45b4      	cmp	ip, r6
 801c8a4:	f040 808c 	bne.w	801c9c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c8a8:	9908      	ldr	r1, [sp, #32]
 801c8aa:	4297      	cmp	r7, r2
 801c8ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c8b0:	d3e2      	bcc.n	801c878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c8b2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c8b4:	9904      	ldr	r1, [sp, #16]
 801c8b6:	8812      	ldrh	r2, [r2, #0]
 801c8b8:	1a52      	subs	r2, r2, r1
 801c8ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c8be:	9a07      	ldr	r2, [sp, #28]
 801c8c0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c8c2:	3201      	adds	r2, #1
 801c8c4:	428a      	cmp	r2, r1
 801c8c6:	9207      	str	r2, [sp, #28]
 801c8c8:	f040 8087 	bne.w	801c9da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c8cc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c8d0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c8d4:	9b04      	ldr	r3, [sp, #16]
 801c8d6:	1bed      	subs	r5, r5, r7
 801c8d8:	b2ad      	uxth	r5, r5
 801c8da:	2d00      	cmp	r5, #0
 801c8dc:	bf08      	it	eq
 801c8de:	461a      	moveq	r2, r3
 801c8e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c8e2:	bf18      	it	ne
 801c8e4:	2200      	movne	r2, #0
 801c8e6:	3301      	adds	r3, #1
 801c8e8:	930d      	str	r3, [sp, #52]	; 0x34
 801c8ea:	b292      	uxth	r2, r2
 801c8ec:	e70d      	b.n	801c70a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c8ee:	1bd1      	subs	r1, r2, r7
 801c8f0:	b28b      	uxth	r3, r1
 801c8f2:	9301      	str	r3, [sp, #4]
 801c8f4:	9708      	str	r7, [sp, #32]
 801c8f6:	462b      	mov	r3, r5
 801c8f8:	e7ca      	b.n	801c890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c8fa:	bf00      	nop
 801c8fc:	20012da4 	.word	0x20012da4
 801c900:	20012d9e 	.word	0x20012d9e
 801c904:	fffff7fb 	.word	0xfffff7fb
 801c908:	b2b6      	uxth	r6, r6
 801c90a:	900b      	str	r0, [sp, #44]	; 0x2c
 801c90c:	45b4      	cmp	ip, r6
 801c90e:	d0cb      	beq.n	801c8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c910:	f10c 0101 	add.w	r1, ip, #1
 801c914:	44a4      	add	ip, r4
 801c916:	9117      	str	r1, [sp, #92]	; 0x5c
 801c918:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c91c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c91e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c922:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c924:	f8b1 c000 	ldrh.w	ip, [r1]
 801c928:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c92a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c92e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c932:	fb1e fe01 	smulbb	lr, lr, r1
 801c936:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c93a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c93c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c940:	fb08 e801 	mla	r8, r8, r1, lr
 801c944:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c948:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c94a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c94e:	fb19 f901 	smulbb	r9, r9, r1
 801c952:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c956:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c958:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c95c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c960:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c964:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c966:	fa5f fc8c 	uxtb.w	ip, ip
 801c96a:	fb1c fc01 	smulbb	ip, ip, r1
 801c96e:	00ed      	lsls	r5, r5, #3
 801c970:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c972:	b2ed      	uxtb	r5, r5
 801c974:	fb05 c501 	mla	r5, r5, r1, ip
 801c978:	fa1f f888 	uxth.w	r8, r8
 801c97c:	fa1f fe8e 	uxth.w	lr, lr
 801c980:	b2ad      	uxth	r5, r5
 801c982:	f108 0c01 	add.w	ip, r8, #1
 801c986:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c98a:	f10e 0901 	add.w	r9, lr, #1
 801c98e:	f105 0c01 	add.w	ip, r5, #1
 801c992:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c996:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c99a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c99e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c9a2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c9a6:	ea4c 0808 	orr.w	r8, ip, r8
 801c9aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c9ac:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c9b0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c9b4:	ea48 0809 	orr.w	r8, r8, r9
 801c9b8:	f821 8b02 	strh.w	r8, [r1], #2
 801c9bc:	910b      	str	r1, [sp, #44]	; 0x2c
 801c9be:	e7a5      	b.n	801c90c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c9c0:	f10c 0801 	add.w	r8, ip, #1
 801c9c4:	44a4      	add	ip, r4
 801c9c6:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c9c8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c9cc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c9d0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c9d4:	fa1f fc88 	uxth.w	ip, r8
 801c9d8:	e763      	b.n	801c8a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c9da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c9de:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c9e2:	1aad      	subs	r5, r5, r2
 801c9e4:	b2ad      	uxth	r5, r5
 801c9e6:	2d00      	cmp	r5, #0
 801c9e8:	bf18      	it	ne
 801c9ea:	2200      	movne	r2, #0
 801c9ec:	9201      	str	r2, [sp, #4]
 801c9ee:	e744      	b.n	801c87a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c9f0:	4b03      	ldr	r3, [pc, #12]	; (801ca00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c9f2:	6818      	ldr	r0, [r3, #0]
 801c9f4:	6803      	ldr	r3, [r0, #0]
 801c9f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c9f8:	4798      	blx	r3
 801c9fa:	b01f      	add	sp, #124	; 0x7c
 801c9fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca00:	20012da4 	.word	0x20012da4

0801ca04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ca04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca08:	b08f      	sub	sp, #60	; 0x3c
 801ca0a:	461c      	mov	r4, r3
 801ca0c:	9203      	str	r2, [sp, #12]
 801ca0e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ca12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca14:	9202      	str	r2, [sp, #8]
 801ca16:	460f      	mov	r7, r1
 801ca18:	2a00      	cmp	r2, #0
 801ca1a:	f000 8128 	beq.w	801cc6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801ca1e:	6820      	ldr	r0, [r4, #0]
 801ca20:	6861      	ldr	r1, [r4, #4]
 801ca22:	aa0a      	add	r2, sp, #40	; 0x28
 801ca24:	c203      	stmia	r2!, {r0, r1}
 801ca26:	6818      	ldr	r0, [r3, #0]
 801ca28:	6859      	ldr	r1, [r3, #4]
 801ca2a:	aa0c      	add	r2, sp, #48	; 0x30
 801ca2c:	c203      	stmia	r2!, {r0, r1}
 801ca2e:	a80a      	add	r0, sp, #40	; 0x28
 801ca30:	f7f9 f802 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca34:	4621      	mov	r1, r4
 801ca36:	a80c      	add	r0, sp, #48	; 0x30
 801ca38:	f7f9 f842 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca3c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ca40:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ca44:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ca48:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ca4c:	bfde      	ittt	le
 801ca4e:	b2b3      	uxthle	r3, r6
 801ca50:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ca54:	fb92 f3f3 	sdivle	r3, r2, r3
 801ca58:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ca5c:	bfc8      	it	gt
 801ca5e:	2301      	movgt	r3, #1
 801ca60:	fb92 f1f3 	sdiv	r1, r2, r3
 801ca64:	fa1f fc81 	uxth.w	ip, r1
 801ca68:	fb0c 2413 	mls	r4, ip, r3, r2
 801ca6c:	fb14 f406 	smulbb	r4, r4, r6
 801ca70:	441d      	add	r5, r3
 801ca72:	4404      	add	r4, r0
 801ca74:	4661      	mov	r1, ip
 801ca76:	3d01      	subs	r5, #1
 801ca78:	b2a4      	uxth	r4, r4
 801ca7a:	fb95 f5f3 	sdiv	r5, r5, r3
 801ca7e:	b121      	cbz	r1, 801ca8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801ca80:	9b03      	ldr	r3, [sp, #12]
 801ca82:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ca86:	ba1b      	rev	r3, r3
 801ca88:	441f      	add	r7, r3
 801ca8a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ca8e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ca92:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ca96:	4418      	add	r0, r3
 801ca98:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ca9c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801caa0:	441a      	add	r2, r3
 801caa2:	4b74      	ldr	r3, [pc, #464]	; (801cc74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801caa4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801caa8:	6818      	ldr	r0, [r3, #0]
 801caaa:	6803      	ldr	r3, [r0, #0]
 801caac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caae:	4798      	blx	r3
 801cab0:	4a71      	ldr	r2, [pc, #452]	; (801cc78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801cab2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801cab6:	8813      	ldrh	r3, [r2, #0]
 801cab8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cabc:	9209      	str	r2, [sp, #36]	; 0x24
 801cabe:	fb03 c101 	mla	r1, r3, r1, ip
 801cac2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cac6:	4373      	muls	r3, r6
 801cac8:	b2ad      	uxth	r5, r5
 801caca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cace:	00ad      	lsls	r5, r5, #2
 801cad0:	2c00      	cmp	r4, #0
 801cad2:	9304      	str	r3, [sp, #16]
 801cad4:	f105 0304 	add.w	r3, r5, #4
 801cad8:	9305      	str	r3, [sp, #20]
 801cada:	bf0c      	ite	eq
 801cadc:	46c8      	moveq	r8, r9
 801cade:	f04f 0800 	movne.w	r8, #0
 801cae2:	2300      	movs	r3, #0
 801cae4:	fa1f f888 	uxth.w	r8, r8
 801cae8:	9301      	str	r3, [sp, #4]
 801caea:	9a04      	ldr	r2, [sp, #16]
 801caec:	4282      	cmp	r2, r0
 801caee:	f240 80b9 	bls.w	801cc64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801caf2:	b95b      	cbnz	r3, 801cb0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801caf4:	783a      	ldrb	r2, [r7, #0]
 801caf6:	0993      	lsrs	r3, r2, #6
 801caf8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cafc:	9201      	str	r2, [sp, #4]
 801cafe:	1e5a      	subs	r2, r3, #1
 801cb00:	2a02      	cmp	r2, #2
 801cb02:	bf8d      	iteet	hi
 801cb04:	787b      	ldrbhi	r3, [r7, #1]
 801cb06:	3701      	addls	r7, #1
 801cb08:	b29b      	uxthls	r3, r3
 801cb0a:	3702      	addhi	r7, #2
 801cb0c:	b184      	cbz	r4, 801cb30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801cb0e:	429c      	cmp	r4, r3
 801cb10:	bf95      	itete	ls
 801cb12:	1b1c      	subls	r4, r3, r4
 801cb14:	1ae4      	subhi	r4, r4, r3
 801cb16:	fa1f fa84 	uxthls.w	sl, r4
 801cb1a:	b2a4      	uxthhi	r4, r4
 801cb1c:	bf87      	ittee	hi
 801cb1e:	46c4      	movhi	ip, r8
 801cb20:	f04f 0a00 	movhi.w	sl, #0
 801cb24:	fa1f fc89 	uxthls.w	ip, r9
 801cb28:	2400      	movls	r4, #0
 801cb2a:	4653      	mov	r3, sl
 801cb2c:	46e0      	mov	r8, ip
 801cb2e:	e7dc      	b.n	801caea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801cb30:	2204      	movs	r2, #4
 801cb32:	4615      	mov	r5, r2
 801cb34:	9905      	ldr	r1, [sp, #20]
 801cb36:	9a01      	ldr	r2, [sp, #4]
 801cb38:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cb3c:	9903      	ldr	r1, [sp, #12]
 801cb3e:	588a      	ldr	r2, [r1, r2]
 801cb40:	4543      	cmp	r3, r8
 801cb42:	bf27      	ittee	cs
 801cb44:	eba3 0a08 	subcs.w	sl, r3, r8
 801cb48:	46c6      	movcs	lr, r8
 801cb4a:	eba8 0c03 	subcc.w	ip, r8, r3
 801cb4e:	469e      	movcc	lr, r3
 801cb50:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cb54:	bf27      	ittee	cs
 801cb56:	fa1f fa8a 	uxthcs.w	sl, sl
 801cb5a:	46a4      	movcs	ip, r4
 801cb5c:	fa1f fc8c 	uxthcc.w	ip, ip
 801cb60:	46a2      	movcc	sl, r4
 801cb62:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cb66:	2900      	cmp	r1, #0
 801cb68:	d066      	beq.n	801cc38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cb6a:	29ff      	cmp	r1, #255	; 0xff
 801cb6c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cb70:	d114      	bne.n	801cb9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cb72:	9d02      	ldr	r5, [sp, #8]
 801cb74:	2dff      	cmp	r5, #255	; 0xff
 801cb76:	d111      	bne.n	801cb9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cb78:	0951      	lsrs	r1, r2, #5
 801cb7a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cb7e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cb82:	f026 0607 	bic.w	r6, r6, #7
 801cb86:	430e      	orrs	r6, r1
 801cb88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb8c:	4316      	orrs	r6, r2
 801cb8e:	b2b6      	uxth	r6, r6
 801cb90:	4486      	add	lr, r0
 801cb92:	4586      	cmp	lr, r0
 801cb94:	d051      	beq.n	801cc3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cb96:	f820 6b02 	strh.w	r6, [r0], #2
 801cb9a:	e7fa      	b.n	801cb92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cb9c:	9d02      	ldr	r5, [sp, #8]
 801cb9e:	4369      	muls	r1, r5
 801cba0:	1c4d      	adds	r5, r1, #1
 801cba2:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cba6:	122d      	asrs	r5, r5, #8
 801cba8:	ea6f 0b05 	mvn.w	fp, r5
 801cbac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801cbb0:	b2ad      	uxth	r5, r5
 801cbb2:	b2f6      	uxtb	r6, r6
 801cbb4:	b2d2      	uxtb	r2, r2
 801cbb6:	fb11 f105 	smulbb	r1, r1, r5
 801cbba:	fb16 f605 	smulbb	r6, r6, r5
 801cbbe:	fb12 f205 	smulbb	r2, r2, r5
 801cbc2:	b289      	uxth	r1, r1
 801cbc4:	b2b6      	uxth	r6, r6
 801cbc6:	b292      	uxth	r2, r2
 801cbc8:	9106      	str	r1, [sp, #24]
 801cbca:	9607      	str	r6, [sp, #28]
 801cbcc:	9208      	str	r2, [sp, #32]
 801cbce:	4486      	add	lr, r0
 801cbd0:	fa5f fb8b 	uxtb.w	fp, fp
 801cbd4:	4586      	cmp	lr, r0
 801cbd6:	d030      	beq.n	801cc3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cbd8:	8802      	ldrh	r2, [r0, #0]
 801cbda:	9906      	ldr	r1, [sp, #24]
 801cbdc:	1216      	asrs	r6, r2, #8
 801cbde:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cbe2:	10d5      	asrs	r5, r2, #3
 801cbe4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cbe8:	fb06 160b 	mla	r6, r6, fp, r1
 801cbec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cbf0:	9907      	ldr	r1, [sp, #28]
 801cbf2:	00d2      	lsls	r2, r2, #3
 801cbf4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cbf8:	fb05 150b 	mla	r5, r5, fp, r1
 801cbfc:	b2d2      	uxtb	r2, r2
 801cbfe:	9908      	ldr	r1, [sp, #32]
 801cc00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc04:	b2b6      	uxth	r6, r6
 801cc06:	fb02 120b 	mla	r2, r2, fp, r1
 801cc0a:	b292      	uxth	r2, r2
 801cc0c:	1c71      	adds	r1, r6, #1
 801cc0e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801cc12:	1c51      	adds	r1, r2, #1
 801cc14:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cc18:	b2ad      	uxth	r5, r5
 801cc1a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc1e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cc22:	4316      	orrs	r6, r2
 801cc24:	1c6a      	adds	r2, r5, #1
 801cc26:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cc2a:	096d      	lsrs	r5, r5, #5
 801cc2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc30:	432e      	orrs	r6, r5
 801cc32:	f820 6b02 	strh.w	r6, [r0], #2
 801cc36:	e7cd      	b.n	801cbd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801cc38:	4470      	add	r0, lr
 801cc3a:	4543      	cmp	r3, r8
 801cc3c:	f4ff af75 	bcc.w	801cb2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cc40:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cc44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc46:	fa1f fc89 	uxth.w	ip, r9
 801cc4a:	eba4 040c 	sub.w	r4, r4, ip
 801cc4e:	881b      	ldrh	r3, [r3, #0]
 801cc50:	b2a4      	uxth	r4, r4
 801cc52:	2c00      	cmp	r4, #0
 801cc54:	eba3 0309 	sub.w	r3, r3, r9
 801cc58:	bf18      	it	ne
 801cc5a:	f04f 0c00 	movne.w	ip, #0
 801cc5e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc62:	e762      	b.n	801cb2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cc64:	4b03      	ldr	r3, [pc, #12]	; (801cc74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cc66:	6818      	ldr	r0, [r3, #0]
 801cc68:	6803      	ldr	r3, [r0, #0]
 801cc6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc6c:	4798      	blx	r3
 801cc6e:	b00f      	add	sp, #60	; 0x3c
 801cc70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc74:	20012da4 	.word	0x20012da4
 801cc78:	20012d9e 	.word	0x20012d9e

0801cc7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cc7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc80:	b093      	sub	sp, #76	; 0x4c
 801cc82:	461c      	mov	r4, r3
 801cc84:	9205      	str	r2, [sp, #20]
 801cc86:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cc8a:	9101      	str	r1, [sp, #4]
 801cc8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cc8e:	9202      	str	r2, [sp, #8]
 801cc90:	2a00      	cmp	r2, #0
 801cc92:	f000 812c 	beq.w	801ceee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cc96:	6820      	ldr	r0, [r4, #0]
 801cc98:	6861      	ldr	r1, [r4, #4]
 801cc9a:	aa0e      	add	r2, sp, #56	; 0x38
 801cc9c:	c203      	stmia	r2!, {r0, r1}
 801cc9e:	6818      	ldr	r0, [r3, #0]
 801cca0:	6859      	ldr	r1, [r3, #4]
 801cca2:	aa10      	add	r2, sp, #64	; 0x40
 801cca4:	c203      	stmia	r2!, {r0, r1}
 801cca6:	a80e      	add	r0, sp, #56	; 0x38
 801cca8:	f7f8 fec6 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccac:	4621      	mov	r1, r4
 801ccae:	a810      	add	r0, sp, #64	; 0x40
 801ccb0:	f7f8 ff06 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccb4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ccb8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ccbc:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801ccc0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ccc4:	bfde      	ittt	le
 801ccc6:	b2b3      	uxthle	r3, r6
 801ccc8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cccc:	fb92 f3f3 	sdivle	r3, r2, r3
 801ccd0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ccd4:	bfc8      	it	gt
 801ccd6:	2301      	movgt	r3, #1
 801ccd8:	fb92 f1f3 	sdiv	r1, r2, r3
 801ccdc:	fa1f fc81 	uxth.w	ip, r1
 801cce0:	fb0c 2413 	mls	r4, ip, r3, r2
 801cce4:	fb14 f406 	smulbb	r4, r4, r6
 801cce8:	441d      	add	r5, r3
 801ccea:	4404      	add	r4, r0
 801ccec:	4661      	mov	r1, ip
 801ccee:	3d01      	subs	r5, #1
 801ccf0:	b2a4      	uxth	r4, r4
 801ccf2:	fb95 f5f3 	sdiv	r5, r5, r3
 801ccf6:	b131      	cbz	r1, 801cd06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801ccf8:	9b05      	ldr	r3, [sp, #20]
 801ccfa:	9901      	ldr	r1, [sp, #4]
 801ccfc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cd00:	ba1b      	rev	r3, r3
 801cd02:	4419      	add	r1, r3
 801cd04:	9101      	str	r1, [sp, #4]
 801cd06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cd0a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cd0e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cd12:	4418      	add	r0, r3
 801cd14:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cd18:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cd1c:	441a      	add	r2, r3
 801cd1e:	4b75      	ldr	r3, [pc, #468]	; (801cef4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cd20:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cd24:	6818      	ldr	r0, [r3, #0]
 801cd26:	6803      	ldr	r3, [r0, #0]
 801cd28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd2a:	4798      	blx	r3
 801cd2c:	4972      	ldr	r1, [pc, #456]	; (801cef8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cd2e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cd32:	880b      	ldrh	r3, [r1, #0]
 801cd34:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cd38:	910d      	str	r1, [sp, #52]	; 0x34
 801cd3a:	fb03 c202 	mla	r2, r3, r2, ip
 801cd3e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd42:	4373      	muls	r3, r6
 801cd44:	b2ad      	uxth	r5, r5
 801cd46:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd4a:	00ad      	lsls	r5, r5, #2
 801cd4c:	9308      	str	r3, [sp, #32]
 801cd4e:	1d2b      	adds	r3, r5, #4
 801cd50:	9309      	str	r3, [sp, #36]	; 0x24
 801cd52:	9b02      	ldr	r3, [sp, #8]
 801cd54:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cd58:	9106      	str	r1, [sp, #24]
 801cd5a:	43da      	mvns	r2, r3
 801cd5c:	2c00      	cmp	r4, #0
 801cd5e:	bf0c      	ite	eq
 801cd60:	46dc      	moveq	ip, fp
 801cd62:	f04f 0c00 	movne.w	ip, #0
 801cd66:	2300      	movs	r3, #0
 801cd68:	b2d2      	uxtb	r2, r2
 801cd6a:	fa1f fc8c 	uxth.w	ip, ip
 801cd6e:	9303      	str	r3, [sp, #12]
 801cd70:	9207      	str	r2, [sp, #28]
 801cd72:	9a08      	ldr	r2, [sp, #32]
 801cd74:	4282      	cmp	r2, r0
 801cd76:	f240 80b5 	bls.w	801cee4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cd7a:	b963      	cbnz	r3, 801cd96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cd7c:	9b01      	ldr	r3, [sp, #4]
 801cd7e:	781a      	ldrb	r2, [r3, #0]
 801cd80:	0993      	lsrs	r3, r2, #6
 801cd82:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cd86:	9203      	str	r2, [sp, #12]
 801cd88:	1e5a      	subs	r2, r3, #1
 801cd8a:	2a02      	cmp	r2, #2
 801cd8c:	d815      	bhi.n	801cdba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cd8e:	9a01      	ldr	r2, [sp, #4]
 801cd90:	3201      	adds	r2, #1
 801cd92:	9201      	str	r2, [sp, #4]
 801cd94:	b29b      	uxth	r3, r3
 801cd96:	b1b4      	cbz	r4, 801cdc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cd98:	429c      	cmp	r4, r3
 801cd9a:	bf95      	itete	ls
 801cd9c:	1b1c      	subls	r4, r3, r4
 801cd9e:	1ae4      	subhi	r4, r4, r3
 801cda0:	fa1f f884 	uxthls.w	r8, r4
 801cda4:	b2a4      	uxthhi	r4, r4
 801cda6:	bf87      	ittee	hi
 801cda8:	4666      	movhi	r6, ip
 801cdaa:	f04f 0800 	movhi.w	r8, #0
 801cdae:	fa1f f68b 	uxthls.w	r6, fp
 801cdb2:	2400      	movls	r4, #0
 801cdb4:	4643      	mov	r3, r8
 801cdb6:	46b4      	mov	ip, r6
 801cdb8:	e7db      	b.n	801cd72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cdba:	9a01      	ldr	r2, [sp, #4]
 801cdbc:	9b01      	ldr	r3, [sp, #4]
 801cdbe:	3202      	adds	r2, #2
 801cdc0:	785b      	ldrb	r3, [r3, #1]
 801cdc2:	9201      	str	r2, [sp, #4]
 801cdc4:	e7e7      	b.n	801cd96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cdc6:	2203      	movs	r2, #3
 801cdc8:	4615      	mov	r5, r2
 801cdca:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cdcc:	9a03      	ldr	r2, [sp, #12]
 801cdce:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cdd2:	9905      	ldr	r1, [sp, #20]
 801cdd4:	4563      	cmp	r3, ip
 801cdd6:	eb01 0502 	add.w	r5, r1, r2
 801cdda:	9902      	ldr	r1, [sp, #8]
 801cddc:	bf29      	itett	cs
 801cdde:	eba3 080c 	subcs.w	r8, r3, ip
 801cde2:	ebac 0603 	subcc.w	r6, ip, r3
 801cde6:	fa1f f888 	uxthcs.w	r8, r8
 801cdea:	46e1      	movcs	r9, ip
 801cdec:	bf2f      	iteee	cs
 801cdee:	4626      	movcs	r6, r4
 801cdf0:	b2b6      	uxthcc	r6, r6
 801cdf2:	4699      	movcc	r9, r3
 801cdf4:	46a0      	movcc	r8, r4
 801cdf6:	29ff      	cmp	r1, #255	; 0xff
 801cdf8:	d04a      	beq.n	801ce90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cdfa:	9f06      	ldr	r7, [sp, #24]
 801cdfc:	78a9      	ldrb	r1, [r5, #2]
 801cdfe:	9004      	str	r0, [sp, #16]
 801ce00:	4379      	muls	r1, r7
 801ce02:	910a      	str	r1, [sp, #40]	; 0x28
 801ce04:	7869      	ldrb	r1, [r5, #1]
 801ce06:	4379      	muls	r1, r7
 801ce08:	910b      	str	r1, [sp, #44]	; 0x2c
 801ce0a:	9905      	ldr	r1, [sp, #20]
 801ce0c:	5c8a      	ldrb	r2, [r1, r2]
 801ce0e:	437a      	muls	r2, r7
 801ce10:	920c      	str	r2, [sp, #48]	; 0x30
 801ce12:	46ca      	mov	sl, r9
 801ce14:	f1ba 0f00 	cmp.w	sl, #0
 801ce18:	d03d      	beq.n	801ce96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801ce1a:	9a04      	ldr	r2, [sp, #16]
 801ce1c:	9f07      	ldr	r7, [sp, #28]
 801ce1e:	8812      	ldrh	r2, [r2, #0]
 801ce20:	1215      	asrs	r5, r2, #8
 801ce22:	46be      	mov	lr, r7
 801ce24:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ce28:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ce2a:	10d1      	asrs	r1, r2, #3
 801ce2c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ce30:	fb05 750e 	mla	r5, r5, lr, r7
 801ce34:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ce38:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801ce3a:	00d2      	lsls	r2, r2, #3
 801ce3c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ce40:	fb01 710e 	mla	r1, r1, lr, r7
 801ce44:	b2d2      	uxtb	r2, r2
 801ce46:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ce48:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ce4c:	b2ad      	uxth	r5, r5
 801ce4e:	fb02 720e 	mla	r2, r2, lr, r7
 801ce52:	b292      	uxth	r2, r2
 801ce54:	f105 0e01 	add.w	lr, r5, #1
 801ce58:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ce5c:	f102 0e01 	add.w	lr, r2, #1
 801ce60:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801ce64:	b289      	uxth	r1, r1
 801ce66:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce6a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ce6e:	4315      	orrs	r5, r2
 801ce70:	1c4a      	adds	r2, r1, #1
 801ce72:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce76:	0949      	lsrs	r1, r1, #5
 801ce78:	9a04      	ldr	r2, [sp, #16]
 801ce7a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ce7e:	430d      	orrs	r5, r1
 801ce80:	f822 5b02 	strh.w	r5, [r2], #2
 801ce84:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ce88:	9204      	str	r2, [sp, #16]
 801ce8a:	fa1f fa8a 	uxth.w	sl, sl
 801ce8e:	e7c1      	b.n	801ce14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801ce90:	4649      	mov	r1, r9
 801ce92:	4686      	mov	lr, r0
 801ce94:	b999      	cbnz	r1, 801cebe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ce96:	4563      	cmp	r3, ip
 801ce98:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ce9c:	d38a      	bcc.n	801cdb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ce9e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801cea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cea4:	fa1f f68b 	uxth.w	r6, fp
 801cea8:	1ba4      	subs	r4, r4, r6
 801ceaa:	881b      	ldrh	r3, [r3, #0]
 801ceac:	b2a4      	uxth	r4, r4
 801ceae:	2c00      	cmp	r4, #0
 801ceb0:	eba3 030b 	sub.w	r3, r3, fp
 801ceb4:	bf18      	it	ne
 801ceb6:	2600      	movne	r6, #0
 801ceb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cebc:	e77a      	b.n	801cdb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cebe:	78aa      	ldrb	r2, [r5, #2]
 801cec0:	4f0e      	ldr	r7, [pc, #56]	; (801cefc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cec2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801cec6:	786a      	ldrb	r2, [r5, #1]
 801cec8:	00d2      	lsls	r2, r2, #3
 801ceca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cece:	ea4a 0202 	orr.w	r2, sl, r2
 801ced2:	f895 a000 	ldrb.w	sl, [r5]
 801ced6:	3901      	subs	r1, #1
 801ced8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801cedc:	f82e 2b02 	strh.w	r2, [lr], #2
 801cee0:	b289      	uxth	r1, r1
 801cee2:	e7d7      	b.n	801ce94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801cee4:	4b03      	ldr	r3, [pc, #12]	; (801cef4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cee6:	6818      	ldr	r0, [r3, #0]
 801cee8:	6803      	ldr	r3, [r0, #0]
 801ceea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ceec:	4798      	blx	r3
 801ceee:	b013      	add	sp, #76	; 0x4c
 801cef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cef4:	20012da4 	.word	0x20012da4
 801cef8:	20012d9e 	.word	0x20012d9e
 801cefc:	fffff800 	.word	0xfffff800

0801cf00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cf00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf04:	b09d      	sub	sp, #116	; 0x74
 801cf06:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801cf0a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801cf0e:	920e      	str	r2, [sp, #56]	; 0x38
 801cf10:	461c      	mov	r4, r3
 801cf12:	4683      	mov	fp, r0
 801cf14:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cf16:	2a00      	cmp	r2, #0
 801cf18:	f000 81e0 	beq.w	801d2dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801cf1c:	6820      	ldr	r0, [r4, #0]
 801cf1e:	6861      	ldr	r1, [r4, #4]
 801cf20:	aa18      	add	r2, sp, #96	; 0x60
 801cf22:	c203      	stmia	r2!, {r0, r1}
 801cf24:	6818      	ldr	r0, [r3, #0]
 801cf26:	6859      	ldr	r1, [r3, #4]
 801cf28:	aa1a      	add	r2, sp, #104	; 0x68
 801cf2a:	c203      	stmia	r2!, {r0, r1}
 801cf2c:	a818      	add	r0, sp, #96	; 0x60
 801cf2e:	f7f8 fd83 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf32:	4621      	mov	r1, r4
 801cf34:	a81a      	add	r0, sp, #104	; 0x68
 801cf36:	f7f8 fdc3 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf3a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801cf3e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801cf42:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801cf46:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cf4a:	bfd7      	itett	le
 801cf4c:	b29a      	uxthle	r2, r3
 801cf4e:	2201      	movgt	r2, #1
 801cf50:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cf54:	fb91 f2f2 	sdivle	r2, r1, r2
 801cf58:	9202      	str	r2, [sp, #8]
 801cf5a:	9802      	ldr	r0, [sp, #8]
 801cf5c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801cf60:	fb92 f0f0 	sdiv	r0, r2, r0
 801cf64:	b280      	uxth	r0, r0
 801cf66:	900f      	str	r0, [sp, #60]	; 0x3c
 801cf68:	9902      	ldr	r1, [sp, #8]
 801cf6a:	9802      	ldr	r0, [sp, #8]
 801cf6c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cf6e:	440c      	add	r4, r1
 801cf70:	fb05 2510 	mls	r5, r5, r0, r2
 801cf74:	fb15 f503 	smulbb	r5, r5, r3
 801cf78:	3c01      	subs	r4, #1
 801cf7a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801cf7e:	fb94 f4f1 	sdiv	r4, r4, r1
 801cf82:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cf86:	440d      	add	r5, r1
 801cf88:	4419      	add	r1, r3
 801cf8a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cf8e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cf92:	441a      	add	r2, r3
 801cf94:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cf98:	9306      	str	r3, [sp, #24]
 801cf9a:	4bb3      	ldr	r3, [pc, #716]	; (801d268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cf9c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cfa0:	6818      	ldr	r0, [r3, #0]
 801cfa2:	6803      	ldr	r3, [r0, #0]
 801cfa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfa6:	4798      	blx	r3
 801cfa8:	4bb0      	ldr	r3, [pc, #704]	; (801d26c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cfaa:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cfae:	881a      	ldrh	r2, [r3, #0]
 801cfb0:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801cfb4:	9316      	str	r3, [sp, #88]	; 0x58
 801cfb6:	fb02 7101 	mla	r1, r2, r1, r7
 801cfba:	3401      	adds	r4, #1
 801cfbc:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cfc0:	b2a4      	uxth	r4, r4
 801cfc2:	4356      	muls	r6, r2
 801cfc4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cfc8:	00a4      	lsls	r4, r4, #2
 801cfca:	920a      	str	r2, [sp, #40]	; 0x28
 801cfcc:	1d22      	adds	r2, r4, #4
 801cfce:	b2ad      	uxth	r5, r5
 801cfd0:	9213      	str	r2, [sp, #76]	; 0x4c
 801cfd2:	4ba7      	ldr	r3, [pc, #668]	; (801d270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801cfd4:	9a06      	ldr	r2, [sp, #24]
 801cfd6:	2d00      	cmp	r5, #0
 801cfd8:	bf0c      	ite	eq
 801cfda:	4611      	moveq	r1, r2
 801cfdc:	2100      	movne	r1, #0
 801cfde:	2200      	movs	r2, #0
 801cfe0:	eba3 030b 	sub.w	r3, r3, fp
 801cfe4:	b289      	uxth	r1, r1
 801cfe6:	920d      	str	r2, [sp, #52]	; 0x34
 801cfe8:	9317      	str	r3, [sp, #92]	; 0x5c
 801cfea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cfec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cfee:	fa12 f383 	uxtah	r3, r2, r3
 801cff2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cff4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801cff8:	3304      	adds	r3, #4
 801cffa:	9308      	str	r3, [sp, #32]
 801cffc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cffe:	4543      	cmp	r3, r8
 801d000:	f240 8167 	bls.w	801d2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d004:	9a02      	ldr	r2, [sp, #8]
 801d006:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d00a:	fbb5 f3f3 	udiv	r3, r5, r3
 801d00e:	1ad3      	subs	r3, r2, r3
 801d010:	b29b      	uxth	r3, r3
 801d012:	9314      	str	r3, [sp, #80]	; 0x50
 801d014:	9b08      	ldr	r3, [sp, #32]
 801d016:	9808      	ldr	r0, [sp, #32]
 801d018:	785a      	ldrb	r2, [r3, #1]
 801d01a:	789b      	ldrb	r3, [r3, #2]
 801d01c:	7800      	ldrb	r0, [r0, #0]
 801d01e:	9010      	str	r0, [sp, #64]	; 0x40
 801d020:	021b      	lsls	r3, r3, #8
 801d022:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d026:	9a08      	ldr	r2, [sp, #32]
 801d028:	78d2      	ldrb	r2, [r2, #3]
 801d02a:	4313      	orrs	r3, r2
 801d02c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d02e:	3001      	adds	r0, #1
 801d030:	441a      	add	r2, r3
 801d032:	9007      	str	r0, [sp, #28]
 801d034:	1c50      	adds	r0, r2, #1
 801d036:	9005      	str	r0, [sp, #20]
 801d038:	7852      	ldrb	r2, [r2, #1]
 801d03a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d03c:	0212      	lsls	r2, r2, #8
 801d03e:	5cc3      	ldrb	r3, [r0, r3]
 801d040:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d044:	431a      	orrs	r2, r3
 801d046:	b293      	uxth	r3, r2
 801d048:	930b      	str	r3, [sp, #44]	; 0x2c
 801d04a:	2300      	movs	r3, #0
 801d04c:	9309      	str	r3, [sp, #36]	; 0x24
 801d04e:	2301      	movs	r3, #1
 801d050:	9301      	str	r3, [sp, #4]
 801d052:	9304      	str	r3, [sp, #16]
 801d054:	2300      	movs	r3, #0
 801d056:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d05a:	9303      	str	r3, [sp, #12]
 801d05c:	f04f 0e01 	mov.w	lr, #1
 801d060:	2d00      	cmp	r5, #0
 801d062:	d07c      	beq.n	801d15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d064:	45ae      	cmp	lr, r5
 801d066:	d26b      	bcs.n	801d140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d068:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d06a:	eba5 050e 	sub.w	r5, r5, lr
 801d06e:	4543      	cmp	r3, r8
 801d070:	b2ad      	uxth	r5, r5
 801d072:	460c      	mov	r4, r1
 801d074:	d802      	bhi.n	801d07c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d076:	e070      	b.n	801d15a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d078:	2b00      	cmp	r3, #0
 801d07a:	d15c      	bne.n	801d136 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d07c:	9b05      	ldr	r3, [sp, #20]
 801d07e:	9a04      	ldr	r2, [sp, #16]
 801d080:	785b      	ldrb	r3, [r3, #1]
 801d082:	9904      	ldr	r1, [sp, #16]
 801d084:	f1c2 0207 	rsb	r2, r2, #7
 801d088:	4093      	lsls	r3, r2
 801d08a:	005b      	lsls	r3, r3, #1
 801d08c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d090:	9b05      	ldr	r3, [sp, #20]
 801d092:	781b      	ldrb	r3, [r3, #0]
 801d094:	410b      	asrs	r3, r1
 801d096:	3101      	adds	r1, #1
 801d098:	b2c9      	uxtb	r1, r1
 801d09a:	2908      	cmp	r1, #8
 801d09c:	9104      	str	r1, [sp, #16]
 801d09e:	9905      	ldr	r1, [sp, #20]
 801d0a0:	bf0a      	itet	eq
 801d0a2:	3102      	addeq	r1, #2
 801d0a4:	3101      	addne	r1, #1
 801d0a6:	9105      	streq	r1, [sp, #20]
 801d0a8:	b2db      	uxtb	r3, r3
 801d0aa:	bf0a      	itet	eq
 801d0ac:	2100      	moveq	r1, #0
 801d0ae:	9105      	strne	r1, [sp, #20]
 801d0b0:	9104      	streq	r1, [sp, #16]
 801d0b2:	4313      	orrs	r3, r2
 801d0b4:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d0b6:	b29a      	uxth	r2, r3
 801d0b8:	4291      	cmp	r1, r2
 801d0ba:	d30a      	bcc.n	801d0d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d0bc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d0c0:	2301      	movs	r3, #1
 801d0c2:	9907      	ldr	r1, [sp, #28]
 801d0c4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d0c8:	d30f      	bcc.n	801d0ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d0ca:	2100      	movs	r1, #0
 801d0cc:	9301      	str	r3, [sp, #4]
 801d0ce:	9103      	str	r1, [sp, #12]
 801d0d0:	e032      	b.n	801d138 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d0d2:	9b07      	ldr	r3, [sp, #28]
 801d0d4:	429a      	cmp	r2, r3
 801d0d6:	d318      	bcc.n	801d10a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d0d8:	9b01      	ldr	r3, [sp, #4]
 801d0da:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d0de:	445b      	add	r3, fp
 801d0e0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d0e4:	9b01      	ldr	r3, [sp, #4]
 801d0e6:	3301      	adds	r3, #1
 801d0e8:	b29b      	uxth	r3, r3
 801d0ea:	9907      	ldr	r1, [sp, #28]
 801d0ec:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d0f0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d0f4:	7108      	strb	r0, [r1, #4]
 801d0f6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d0f8:	80c8      	strh	r0, [r1, #6]
 801d0fa:	9801      	ldr	r0, [sp, #4]
 801d0fc:	3001      	adds	r0, #1
 801d0fe:	7148      	strb	r0, [r1, #5]
 801d100:	9907      	ldr	r1, [sp, #28]
 801d102:	3101      	adds	r1, #1
 801d104:	b289      	uxth	r1, r1
 801d106:	9107      	str	r1, [sp, #28]
 801d108:	e7df      	b.n	801d0ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d10a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d10e:	4611      	mov	r1, r2
 801d110:	795b      	ldrb	r3, [r3, #5]
 801d112:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d116:	4458      	add	r0, fp
 801d118:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d11a:	4406      	add	r6, r0
 801d11c:	2e00      	cmp	r6, #0
 801d11e:	dd06      	ble.n	801d12e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d120:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d124:	790e      	ldrb	r6, [r1, #4]
 801d126:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d12a:	88c9      	ldrh	r1, [r1, #6]
 801d12c:	e7f4      	b.n	801d118 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d12e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d132:	b29b      	uxth	r3, r3
 801d134:	e7c5      	b.n	801d0c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d136:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d138:	920b      	str	r2, [sp, #44]	; 0x2c
 801d13a:	4621      	mov	r1, r4
 801d13c:	469e      	mov	lr, r3
 801d13e:	e78f      	b.n	801d060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d140:	9a03      	ldr	r2, [sp, #12]
 801d142:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d146:	442a      	add	r2, r5
 801d148:	ebae 0305 	sub.w	r3, lr, r5
 801d14c:	b292      	uxth	r2, r2
 801d14e:	b29b      	uxth	r3, r3
 801d150:	9203      	str	r2, [sp, #12]
 801d152:	2500      	movs	r5, #0
 801d154:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d156:	4542      	cmp	r2, r8
 801d158:	d88e      	bhi.n	801d078 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d15a:	4621      	mov	r1, r4
 801d15c:	e74e      	b.n	801cffc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d15e:	458e      	cmp	lr, r1
 801d160:	bf29      	itett	cs
 801d162:	ebae 0301 	subcs.w	r3, lr, r1
 801d166:	eba1 040e 	subcc.w	r4, r1, lr
 801d16a:	b29b      	uxthcs	r3, r3
 801d16c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d16e:	bf2f      	iteee	cs
 801d170:	462c      	movcs	r4, r5
 801d172:	b2a4      	uxthcc	r4, r4
 801d174:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d178:	462b      	movcc	r3, r5
 801d17a:	f04f 0900 	mov.w	r9, #0
 801d17e:	9a03      	ldr	r2, [sp, #12]
 801d180:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d182:	444a      	add	r2, r9
 801d184:	4548      	cmp	r0, r9
 801d186:	b292      	uxth	r2, r2
 801d188:	d074      	beq.n	801d274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d18a:	445a      	add	r2, fp
 801d18c:	2004      	movs	r0, #4
 801d18e:	4605      	mov	r5, r0
 801d190:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d194:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d196:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d19a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d19c:	5880      	ldr	r0, [r0, r2]
 801d19e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d1a2:	d014      	beq.n	801d1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d1a4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d1a8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d1ac:	d112      	bne.n	801d1d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d1ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d1b0:	2aff      	cmp	r2, #255	; 0xff
 801d1b2:	d10f      	bne.n	801d1d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d1b4:	0942      	lsrs	r2, r0, #5
 801d1b6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d1ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d1be:	f025 0507 	bic.w	r5, r5, #7
 801d1c2:	4315      	orrs	r5, r2
 801d1c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d1c8:	4305      	orrs	r5, r0
 801d1ca:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d1ce:	f109 0901 	add.w	r9, r9, #1
 801d1d2:	e7d4      	b.n	801d17e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d1d4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d1d8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d1dc:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d1e0:	9215      	str	r2, [sp, #84]	; 0x54
 801d1e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d1e4:	fb02 fa0a 	mul.w	sl, r2, sl
 801d1e8:	f10a 0201 	add.w	r2, sl, #1
 801d1ec:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d1f0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d1f4:	1212      	asrs	r2, r2, #8
 801d1f6:	fa1f fa82 	uxth.w	sl, r2
 801d1fa:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d1fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d202:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d206:	43d2      	mvns	r2, r2
 801d208:	b2d2      	uxtb	r2, r2
 801d20a:	fb16 f60a 	smulbb	r6, r6, sl
 801d20e:	fa5f fc8c 	uxtb.w	ip, ip
 801d212:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d216:	b2c0      	uxtb	r0, r0
 801d218:	fb07 6702 	mla	r7, r7, r2, r6
 801d21c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d220:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d222:	fb10 f00a 	smulbb	r0, r0, sl
 801d226:	fb0c 0002 	mla	r0, ip, r2, r0
 801d22a:	b2ed      	uxtb	r5, r5
 801d22c:	b2bf      	uxth	r7, r7
 801d22e:	fb15 f50a 	smulbb	r5, r5, sl
 801d232:	b280      	uxth	r0, r0
 801d234:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d238:	fb06 5602 	mla	r6, r6, r2, r5
 801d23c:	1c7a      	adds	r2, r7, #1
 801d23e:	1c45      	adds	r5, r0, #1
 801d240:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d244:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d248:	b2b6      	uxth	r6, r6
 801d24a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d24e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d252:	432f      	orrs	r7, r5
 801d254:	1c75      	adds	r5, r6, #1
 801d256:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d25a:	096d      	lsrs	r5, r5, #5
 801d25c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d260:	432f      	orrs	r7, r5
 801d262:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d266:	e7b2      	b.n	801d1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d268:	20012da4 	.word	0x20012da4
 801d26c:	20012d9e 	.word	0x20012d9e
 801d270:	fffff7fb 	.word	0xfffff7fb
 801d274:	9203      	str	r2, [sp, #12]
 801d276:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d278:	458e      	cmp	lr, r1
 801d27a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d27e:	f4ff af68 	bcc.w	801d152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d282:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d284:	9906      	ldr	r1, [sp, #24]
 801d286:	8812      	ldrh	r2, [r2, #0]
 801d288:	1a52      	subs	r2, r2, r1
 801d28a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d28e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d290:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d292:	3201      	adds	r2, #1
 801d294:	428a      	cmp	r2, r1
 801d296:	9209      	str	r2, [sp, #36]	; 0x24
 801d298:	d111      	bne.n	801d2be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d29a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d29e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d2a2:	9b06      	ldr	r3, [sp, #24]
 801d2a4:	eba5 0509 	sub.w	r5, r5, r9
 801d2a8:	b2ad      	uxth	r5, r5
 801d2aa:	2d00      	cmp	r5, #0
 801d2ac:	bf08      	it	eq
 801d2ae:	4619      	moveq	r1, r3
 801d2b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2b2:	bf18      	it	ne
 801d2b4:	2100      	movne	r1, #0
 801d2b6:	3301      	adds	r3, #1
 801d2b8:	930d      	str	r3, [sp, #52]	; 0x34
 801d2ba:	b289      	uxth	r1, r1
 801d2bc:	e695      	b.n	801cfea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d2be:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d2c2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d2c6:	1b2d      	subs	r5, r5, r4
 801d2c8:	b2ad      	uxth	r5, r5
 801d2ca:	2d00      	cmp	r5, #0
 801d2cc:	bf18      	it	ne
 801d2ce:	2400      	movne	r4, #0
 801d2d0:	e740      	b.n	801d154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d2d2:	4b04      	ldr	r3, [pc, #16]	; (801d2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d2d4:	6818      	ldr	r0, [r3, #0]
 801d2d6:	6803      	ldr	r3, [r0, #0]
 801d2d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2da:	4798      	blx	r3
 801d2dc:	b01d      	add	sp, #116	; 0x74
 801d2de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2e2:	bf00      	nop
 801d2e4:	20012da4 	.word	0x20012da4

0801d2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d2e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2ec:	b09f      	sub	sp, #124	; 0x7c
 801d2ee:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d2f2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d2f6:	920a      	str	r2, [sp, #40]	; 0x28
 801d2f8:	461d      	mov	r5, r3
 801d2fa:	4604      	mov	r4, r0
 801d2fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d2fe:	2a00      	cmp	r2, #0
 801d300:	f000 81fa 	beq.w	801d6f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d304:	6828      	ldr	r0, [r5, #0]
 801d306:	6869      	ldr	r1, [r5, #4]
 801d308:	aa1a      	add	r2, sp, #104	; 0x68
 801d30a:	c203      	stmia	r2!, {r0, r1}
 801d30c:	6818      	ldr	r0, [r3, #0]
 801d30e:	6859      	ldr	r1, [r3, #4]
 801d310:	aa1c      	add	r2, sp, #112	; 0x70
 801d312:	c203      	stmia	r2!, {r0, r1}
 801d314:	a81a      	add	r0, sp, #104	; 0x68
 801d316:	f7f8 fb8f 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d31a:	4629      	mov	r1, r5
 801d31c:	a81c      	add	r0, sp, #112	; 0x70
 801d31e:	f7f8 fbcf 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d322:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d326:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d32a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d32e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d332:	bfd7      	itett	le
 801d334:	b29a      	uxthle	r2, r3
 801d336:	2201      	movgt	r2, #1
 801d338:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d33c:	fb91 f2f2 	sdivle	r2, r1, r2
 801d340:	9201      	str	r2, [sp, #4]
 801d342:	9801      	ldr	r0, [sp, #4]
 801d344:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d348:	fb92 f0f0 	sdiv	r0, r2, r0
 801d34c:	b280      	uxth	r0, r0
 801d34e:	9010      	str	r0, [sp, #64]	; 0x40
 801d350:	9901      	ldr	r1, [sp, #4]
 801d352:	9801      	ldr	r0, [sp, #4]
 801d354:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d356:	440e      	add	r6, r1
 801d358:	fb05 2510 	mls	r5, r5, r0, r2
 801d35c:	fb15 f503 	smulbb	r5, r5, r3
 801d360:	3e01      	subs	r6, #1
 801d362:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d366:	fb96 f6f1 	sdiv	r6, r6, r1
 801d36a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d36e:	440d      	add	r5, r1
 801d370:	4419      	add	r1, r3
 801d372:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d376:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d37a:	441a      	add	r2, r3
 801d37c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d380:	9304      	str	r3, [sp, #16]
 801d382:	4b96      	ldr	r3, [pc, #600]	; (801d5dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d384:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d388:	6818      	ldr	r0, [r3, #0]
 801d38a:	6803      	ldr	r3, [r0, #0]
 801d38c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d38e:	4798      	blx	r3
 801d390:	4b93      	ldr	r3, [pc, #588]	; (801d5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d392:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d396:	881a      	ldrh	r2, [r3, #0]
 801d398:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d39c:	9318      	str	r3, [sp, #96]	; 0x60
 801d39e:	fb02 c101 	mla	r1, r2, r1, ip
 801d3a2:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d3a6:	4357      	muls	r7, r2
 801d3a8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d3ac:	3601      	adds	r6, #1
 801d3ae:	920b      	str	r2, [sp, #44]	; 0x2c
 801d3b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d3b2:	4b8c      	ldr	r3, [pc, #560]	; (801d5e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d3b4:	b2b6      	uxth	r6, r6
 801d3b6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d3ba:	1d32      	adds	r2, r6, #4
 801d3bc:	9206      	str	r2, [sp, #24]
 801d3be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d3c0:	43d2      	mvns	r2, r2
 801d3c2:	b2d2      	uxtb	r2, r2
 801d3c4:	b2ad      	uxth	r5, r5
 801d3c6:	9215      	str	r2, [sp, #84]	; 0x54
 801d3c8:	9a04      	ldr	r2, [sp, #16]
 801d3ca:	2d00      	cmp	r5, #0
 801d3cc:	bf0c      	ite	eq
 801d3ce:	4611      	moveq	r1, r2
 801d3d0:	2100      	movne	r1, #0
 801d3d2:	2200      	movs	r2, #0
 801d3d4:	1b1b      	subs	r3, r3, r4
 801d3d6:	b289      	uxth	r1, r1
 801d3d8:	920d      	str	r2, [sp, #52]	; 0x34
 801d3da:	9319      	str	r3, [sp, #100]	; 0x64
 801d3dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d3de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d3e0:	fa12 f383 	uxtah	r3, r2, r3
 801d3e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d3e6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d3ea:	3304      	adds	r3, #4
 801d3ec:	9307      	str	r3, [sp, #28]
 801d3ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3f0:	455b      	cmp	r3, fp
 801d3f2:	f240 817c 	bls.w	801d6ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d3f6:	9a01      	ldr	r2, [sp, #4]
 801d3f8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d3fc:	fbb5 f3f3 	udiv	r3, r5, r3
 801d400:	1ad3      	subs	r3, r2, r3
 801d402:	b29b      	uxth	r3, r3
 801d404:	9316      	str	r3, [sp, #88]	; 0x58
 801d406:	9b07      	ldr	r3, [sp, #28]
 801d408:	9807      	ldr	r0, [sp, #28]
 801d40a:	785a      	ldrb	r2, [r3, #1]
 801d40c:	789b      	ldrb	r3, [r3, #2]
 801d40e:	7800      	ldrb	r0, [r0, #0]
 801d410:	9011      	str	r0, [sp, #68]	; 0x44
 801d412:	021b      	lsls	r3, r3, #8
 801d414:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d418:	9a07      	ldr	r2, [sp, #28]
 801d41a:	78d2      	ldrb	r2, [r2, #3]
 801d41c:	4313      	orrs	r3, r2
 801d41e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d420:	3001      	adds	r0, #1
 801d422:	441a      	add	r2, r3
 801d424:	9005      	str	r0, [sp, #20]
 801d426:	1c50      	adds	r0, r2, #1
 801d428:	9003      	str	r0, [sp, #12]
 801d42a:	7852      	ldrb	r2, [r2, #1]
 801d42c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d42e:	0212      	lsls	r2, r2, #8
 801d430:	5cc3      	ldrb	r3, [r0, r3]
 801d432:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d436:	431a      	orrs	r2, r3
 801d438:	b293      	uxth	r3, r2
 801d43a:	930c      	str	r3, [sp, #48]	; 0x30
 801d43c:	2300      	movs	r3, #0
 801d43e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d442:	9308      	str	r3, [sp, #32]
 801d444:	461a      	mov	r2, r3
 801d446:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d44a:	930e      	str	r3, [sp, #56]	; 0x38
 801d44c:	f04f 0801 	mov.w	r8, #1
 801d450:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d454:	f8cd 8008 	str.w	r8, [sp, #8]
 801d458:	46c4      	mov	ip, r8
 801d45a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d45c:	2d00      	cmp	r5, #0
 801d45e:	d07c      	beq.n	801d55a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d460:	45ac      	cmp	ip, r5
 801d462:	d26c      	bcs.n	801d53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d464:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d466:	eba5 050c 	sub.w	r5, r5, ip
 801d46a:	455b      	cmp	r3, fp
 801d46c:	b2ad      	uxth	r5, r5
 801d46e:	4608      	mov	r0, r1
 801d470:	d802      	bhi.n	801d478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d472:	e070      	b.n	801d556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d474:	2b00      	cmp	r3, #0
 801d476:	d15c      	bne.n	801d532 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d478:	9b03      	ldr	r3, [sp, #12]
 801d47a:	9a02      	ldr	r2, [sp, #8]
 801d47c:	785b      	ldrb	r3, [r3, #1]
 801d47e:	9902      	ldr	r1, [sp, #8]
 801d480:	f1c2 0207 	rsb	r2, r2, #7
 801d484:	4093      	lsls	r3, r2
 801d486:	005b      	lsls	r3, r3, #1
 801d488:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d48c:	9b03      	ldr	r3, [sp, #12]
 801d48e:	781b      	ldrb	r3, [r3, #0]
 801d490:	410b      	asrs	r3, r1
 801d492:	3101      	adds	r1, #1
 801d494:	b2c9      	uxtb	r1, r1
 801d496:	2908      	cmp	r1, #8
 801d498:	9102      	str	r1, [sp, #8]
 801d49a:	9903      	ldr	r1, [sp, #12]
 801d49c:	bf0a      	itet	eq
 801d49e:	3102      	addeq	r1, #2
 801d4a0:	3101      	addne	r1, #1
 801d4a2:	9103      	streq	r1, [sp, #12]
 801d4a4:	b2db      	uxtb	r3, r3
 801d4a6:	bf0a      	itet	eq
 801d4a8:	2100      	moveq	r1, #0
 801d4aa:	9103      	strne	r1, [sp, #12]
 801d4ac:	9102      	streq	r1, [sp, #8]
 801d4ae:	4313      	orrs	r3, r2
 801d4b0:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d4b2:	b29a      	uxth	r2, r3
 801d4b4:	4291      	cmp	r1, r2
 801d4b6:	d30a      	bcc.n	801d4ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d4b8:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d4bc:	2301      	movs	r3, #1
 801d4be:	9905      	ldr	r1, [sp, #20]
 801d4c0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d4c4:	d30f      	bcc.n	801d4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d4c6:	2100      	movs	r1, #0
 801d4c8:	4698      	mov	r8, r3
 801d4ca:	9100      	str	r1, [sp, #0]
 801d4cc:	e032      	b.n	801d534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d4ce:	9b05      	ldr	r3, [sp, #20]
 801d4d0:	429a      	cmp	r2, r3
 801d4d2:	d318      	bcc.n	801d506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d4d4:	eb04 0308 	add.w	r3, r4, r8
 801d4d8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d4dc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d4e0:	f108 0301 	add.w	r3, r8, #1
 801d4e4:	b29b      	uxth	r3, r3
 801d4e6:	9905      	ldr	r1, [sp, #20]
 801d4e8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d4ec:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d4f0:	710e      	strb	r6, [r1, #4]
 801d4f2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d4f4:	80ce      	strh	r6, [r1, #6]
 801d4f6:	f108 0601 	add.w	r6, r8, #1
 801d4fa:	714e      	strb	r6, [r1, #5]
 801d4fc:	9905      	ldr	r1, [sp, #20]
 801d4fe:	3101      	adds	r1, #1
 801d500:	b289      	uxth	r1, r1
 801d502:	9105      	str	r1, [sp, #20]
 801d504:	e7df      	b.n	801d4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d506:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d50a:	4611      	mov	r1, r2
 801d50c:	795b      	ldrb	r3, [r3, #5]
 801d50e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d512:	4426      	add	r6, r4
 801d514:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d516:	4437      	add	r7, r6
 801d518:	2f00      	cmp	r7, #0
 801d51a:	dd06      	ble.n	801d52a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d51c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d520:	790f      	ldrb	r7, [r1, #4]
 801d522:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d526:	88c9      	ldrh	r1, [r1, #6]
 801d528:	e7f4      	b.n	801d514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d52a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d52e:	b29b      	uxth	r3, r3
 801d530:	e7c5      	b.n	801d4be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d532:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d534:	920c      	str	r2, [sp, #48]	; 0x30
 801d536:	4601      	mov	r1, r0
 801d538:	9a00      	ldr	r2, [sp, #0]
 801d53a:	469c      	mov	ip, r3
 801d53c:	e78e      	b.n	801d45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d53e:	1957      	adds	r7, r2, r5
 801d540:	ebac 0305 	sub.w	r3, ip, r5
 801d544:	b2ba      	uxth	r2, r7
 801d546:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d54a:	9200      	str	r2, [sp, #0]
 801d54c:	b29b      	uxth	r3, r3
 801d54e:	2500      	movs	r5, #0
 801d550:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d552:	455a      	cmp	r2, fp
 801d554:	d88e      	bhi.n	801d474 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d556:	4601      	mov	r1, r0
 801d558:	e749      	b.n	801d3ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d55a:	458c      	cmp	ip, r1
 801d55c:	bf2c      	ite	cs
 801d55e:	4628      	movcs	r0, r5
 801d560:	462b      	movcc	r3, r5
 801d562:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d564:	bf27      	ittee	cs
 801d566:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d568:	ebac 0301 	subcs.w	r3, ip, r1
 801d56c:	eba1 000c 	subcc.w	r0, r1, ip
 801d570:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d574:	bf2c      	ite	cs
 801d576:	b29b      	uxthcs	r3, r3
 801d578:	b280      	uxthcc	r0, r0
 801d57a:	2dff      	cmp	r5, #255	; 0xff
 801d57c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d57e:	eb02 0705 	add.w	r7, r2, r5
 801d582:	b2bd      	uxth	r5, r7
 801d584:	9500      	str	r5, [sp, #0]
 801d586:	d12f      	bne.n	801d5e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d588:	465e      	mov	r6, fp
 801d58a:	9d00      	ldr	r5, [sp, #0]
 801d58c:	42aa      	cmp	r2, r5
 801d58e:	f040 8084 	bne.w	801d69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d592:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d594:	458c      	cmp	ip, r1
 801d596:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d59a:	d3d8      	bcc.n	801d54e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d59c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d59e:	9904      	ldr	r1, [sp, #16]
 801d5a0:	8812      	ldrh	r2, [r2, #0]
 801d5a2:	1a52      	subs	r2, r2, r1
 801d5a4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d5a8:	9a08      	ldr	r2, [sp, #32]
 801d5aa:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d5ac:	3201      	adds	r2, #1
 801d5ae:	428a      	cmp	r2, r1
 801d5b0:	9208      	str	r2, [sp, #32]
 801d5b2:	f040 8092 	bne.w	801d6da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d5b6:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d5ba:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d5be:	9b04      	ldr	r3, [sp, #16]
 801d5c0:	eba5 050c 	sub.w	r5, r5, ip
 801d5c4:	b2ad      	uxth	r5, r5
 801d5c6:	2d00      	cmp	r5, #0
 801d5c8:	bf08      	it	eq
 801d5ca:	4619      	moveq	r1, r3
 801d5cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d5ce:	bf18      	it	ne
 801d5d0:	2100      	movne	r1, #0
 801d5d2:	3301      	adds	r3, #1
 801d5d4:	930d      	str	r3, [sp, #52]	; 0x34
 801d5d6:	b289      	uxth	r1, r1
 801d5d8:	e700      	b.n	801d3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d5da:	bf00      	nop
 801d5dc:	20012da4 	.word	0x20012da4
 801d5e0:	20012d9e 	.word	0x20012d9e
 801d5e4:	fffff7fb 	.word	0xfffff7fb
 801d5e8:	46d9      	mov	r9, fp
 801d5ea:	9d00      	ldr	r5, [sp, #0]
 801d5ec:	42aa      	cmp	r2, r5
 801d5ee:	d0d0      	beq.n	801d592 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d5f0:	1c55      	adds	r5, r2, #1
 801d5f2:	4422      	add	r2, r4
 801d5f4:	9517      	str	r5, [sp, #92]	; 0x5c
 801d5f6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d5fa:	9a06      	ldr	r2, [sp, #24]
 801d5fc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d600:	4472      	add	r2, lr
 801d602:	9212      	str	r2, [sp, #72]	; 0x48
 801d604:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d606:	f8b9 2000 	ldrh.w	r2, [r9]
 801d60a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d60e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d610:	1216      	asrs	r6, r2, #8
 801d612:	fb1a fa07 	smulbb	sl, sl, r7
 801d616:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d61a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d61c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d620:	fb06 a607 	mla	r6, r6, r7, sl
 801d624:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d626:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d62a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d62c:	10d5      	asrs	r5, r2, #3
 801d62e:	fb1a fa07 	smulbb	sl, sl, r7
 801d632:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d636:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d638:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d63c:	fb05 a507 	mla	r5, r5, r7, sl
 801d640:	9f06      	ldr	r7, [sp, #24]
 801d642:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d646:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d648:	00d2      	lsls	r2, r2, #3
 801d64a:	fb1e fe07 	smulbb	lr, lr, r7
 801d64e:	b2d2      	uxtb	r2, r2
 801d650:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d652:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d656:	b2b6      	uxth	r6, r6
 801d658:	fb02 e207 	mla	r2, r2, r7, lr
 801d65c:	b292      	uxth	r2, r2
 801d65e:	b2ad      	uxth	r5, r5
 801d660:	f106 0a01 	add.w	sl, r6, #1
 801d664:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d668:	f102 0e01 	add.w	lr, r2, #1
 801d66c:	f105 0a01 	add.w	sl, r5, #1
 801d670:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d674:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d678:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d67c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d680:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d684:	ea4e 0606 	orr.w	r6, lr, r6
 801d688:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d68c:	ea46 060a 	orr.w	r6, r6, sl
 801d690:	f829 6b02 	strh.w	r6, [r9], #2
 801d694:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d698:	e7a7      	b.n	801d5ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d69a:	f102 0e01 	add.w	lr, r2, #1
 801d69e:	4422      	add	r2, r4
 801d6a0:	9f06      	ldr	r7, [sp, #24]
 801d6a2:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d6a6:	9a06      	ldr	r2, [sp, #24]
 801d6a8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d6ac:	eb02 0a05 	add.w	sl, r2, r5
 801d6b0:	4a13      	ldr	r2, [pc, #76]	; (801d700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d6b2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d6b6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d6ba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d6be:	00d2      	lsls	r2, r2, #3
 801d6c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6c4:	ea49 0202 	orr.w	r2, r9, r2
 801d6c8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d6cc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d6d0:	f826 2b02 	strh.w	r2, [r6], #2
 801d6d4:	fa1f f28e 	uxth.w	r2, lr
 801d6d8:	e757      	b.n	801d58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d6da:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d6de:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d6e2:	1a2d      	subs	r5, r5, r0
 801d6e4:	b2ad      	uxth	r5, r5
 801d6e6:	2d00      	cmp	r5, #0
 801d6e8:	bf18      	it	ne
 801d6ea:	2000      	movne	r0, #0
 801d6ec:	e730      	b.n	801d550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d6ee:	4b05      	ldr	r3, [pc, #20]	; (801d704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d6f0:	6818      	ldr	r0, [r3, #0]
 801d6f2:	6803      	ldr	r3, [r0, #0]
 801d6f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d6f6:	4798      	blx	r3
 801d6f8:	b01f      	add	sp, #124	; 0x7c
 801d6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6fe:	bf00      	nop
 801d700:	fffff800 	.word	0xfffff800
 801d704:	20012da4 	.word	0x20012da4

0801d708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d70c:	b091      	sub	sp, #68	; 0x44
 801d70e:	469b      	mov	fp, r3
 801d710:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d714:	4616      	mov	r6, r2
 801d716:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d71a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d71e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d722:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d726:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d72a:	4604      	mov	r4, r0
 801d72c:	460d      	mov	r5, r1
 801d72e:	4640      	mov	r0, r8
 801d730:	4659      	mov	r1, fp
 801d732:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d736:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d73a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d73e:	f7f3 fa1d 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 801d742:	4631      	mov	r1, r6
 801d744:	4640      	mov	r0, r8
 801d746:	f7f3 fa19 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 801d74a:	4b74      	ldr	r3, [pc, #464]	; (801d91c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d74c:	8818      	ldrh	r0, [r3, #0]
 801d74e:	4b74      	ldr	r3, [pc, #464]	; (801d920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d750:	8819      	ldrh	r1, [r3, #0]
 801d752:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d756:	2b00      	cmp	r3, #0
 801d758:	b202      	sxth	r2, r0
 801d75a:	b20e      	sxth	r6, r1
 801d75c:	da07      	bge.n	801d76e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d75e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d762:	4463      	add	r3, ip
 801d764:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d768:	2300      	movs	r3, #0
 801d76a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d76e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d772:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d776:	1ad2      	subs	r2, r2, r3
 801d778:	4594      	cmp	ip, r2
 801d77a:	bfc4      	itt	gt
 801d77c:	1ac2      	subgt	r2, r0, r3
 801d77e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d782:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d786:	2a00      	cmp	r2, #0
 801d788:	da07      	bge.n	801d79a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d78a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d78e:	4462      	add	r2, ip
 801d790:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d794:	2200      	movs	r2, #0
 801d796:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d79a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d79e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d7a2:	eba6 060a 	sub.w	r6, r6, sl
 801d7a6:	42b2      	cmp	r2, r6
 801d7a8:	bfc4      	itt	gt
 801d7aa:	eba1 020a 	subgt.w	r2, r1, sl
 801d7ae:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d7b2:	4a5c      	ldr	r2, [pc, #368]	; (801d924 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d7b4:	7812      	ldrb	r2, [r2, #0]
 801d7b6:	b9a2      	cbnz	r2, 801d7e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d7b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d7bc:	4286      	cmp	r6, r0
 801d7be:	4640      	mov	r0, r8
 801d7c0:	9303      	str	r3, [sp, #12]
 801d7c2:	bf14      	ite	ne
 801d7c4:	2600      	movne	r6, #0
 801d7c6:	2601      	moveq	r6, #1
 801d7c8:	f7f3 fa1b 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d7cc:	9b03      	ldr	r3, [sp, #12]
 801d7ce:	b160      	cbz	r0, 801d7ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d7d0:	2300      	movs	r3, #0
 801d7d2:	8023      	strh	r3, [r4, #0]
 801d7d4:	8063      	strh	r3, [r4, #2]
 801d7d6:	80a3      	strh	r3, [r4, #4]
 801d7d8:	4620      	mov	r0, r4
 801d7da:	80e3      	strh	r3, [r4, #6]
 801d7dc:	b011      	add	sp, #68	; 0x44
 801d7de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7e2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d7e6:	428e      	cmp	r6, r1
 801d7e8:	e7e9      	b.n	801d7be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d7ea:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d7ee:	9205      	str	r2, [sp, #20]
 801d7f0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d7f4:	9206      	str	r2, [sp, #24]
 801d7f6:	f8bb 2000 	ldrh.w	r2, [fp]
 801d7fa:	900e      	str	r0, [sp, #56]	; 0x38
 801d7fc:	1a9b      	subs	r3, r3, r2
 801d7fe:	b21b      	sxth	r3, r3
 801d800:	9303      	str	r3, [sp, #12]
 801d802:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d806:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d80a:	ebaa 0a03 	sub.w	sl, sl, r3
 801d80e:	fa0f f38a 	sxth.w	r3, sl
 801d812:	9304      	str	r3, [sp, #16]
 801d814:	9b03      	ldr	r3, [sp, #12]
 801d816:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d81a:	9b04      	ldr	r3, [sp, #16]
 801d81c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d820:	9b05      	ldr	r3, [sp, #20]
 801d822:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d826:	a90e      	add	r1, sp, #56	; 0x38
 801d828:	9b06      	ldr	r3, [sp, #24]
 801d82a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d82e:	a80c      	add	r0, sp, #48	; 0x30
 801d830:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d834:	f7f8 f944 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d838:	4640      	mov	r0, r8
 801d83a:	f7f8 f8fd 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d83e:	a80e      	add	r0, sp, #56	; 0x38
 801d840:	f7f8 f8fa 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d844:	4b38      	ldr	r3, [pc, #224]	; (801d928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d846:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d84a:	881b      	ldrh	r3, [r3, #0]
 801d84c:	9307      	str	r3, [sp, #28]
 801d84e:	682b      	ldr	r3, [r5, #0]
 801d850:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d92c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d854:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d856:	4628      	mov	r0, r5
 801d858:	4798      	blx	r3
 801d85a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d85e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d862:	4681      	mov	r9, r0
 801d864:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d868:	f8db 0000 	ldr.w	r0, [fp]
 801d86c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d86e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d872:	6803      	ldr	r3, [r0, #0]
 801d874:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d876:	4798      	blx	r3
 801d878:	4607      	mov	r7, r0
 801d87a:	f8db 0000 	ldr.w	r0, [fp]
 801d87e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d882:	6803      	ldr	r3, [r0, #0]
 801d884:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d888:	9109      	str	r1, [sp, #36]	; 0x24
 801d88a:	9208      	str	r2, [sp, #32]
 801d88c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d88e:	4798      	blx	r3
 801d890:	f010 0f01 	tst.w	r0, #1
 801d894:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d898:	d012      	beq.n	801d8c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d89a:	f8db 0000 	ldr.w	r0, [fp]
 801d89e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d8a2:	6803      	ldr	r3, [r0, #0]
 801d8a4:	9200      	str	r2, [sp, #0]
 801d8a6:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d8a8:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d8ac:	462b      	mov	r3, r5
 801d8ae:	47b0      	blx	r6
 801d8b0:	9b03      	ldr	r3, [sp, #12]
 801d8b2:	8023      	strh	r3, [r4, #0]
 801d8b4:	9b04      	ldr	r3, [sp, #16]
 801d8b6:	8063      	strh	r3, [r4, #2]
 801d8b8:	9b05      	ldr	r3, [sp, #20]
 801d8ba:	80a3      	strh	r3, [r4, #4]
 801d8bc:	9b06      	ldr	r3, [sp, #24]
 801d8be:	e78b      	b.n	801d7d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d8c0:	fb09 f202 	mul.w	r2, r9, r2
 801d8c4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d8c8:	440f      	add	r7, r1
 801d8ca:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d8ce:	b166      	cbz	r6, 801d8ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d8d0:	9a07      	ldr	r2, [sp, #28]
 801d8d2:	4592      	cmp	sl, r2
 801d8d4:	d109      	bne.n	801d8ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d8d6:	f8db 0000 	ldr.w	r0, [fp]
 801d8da:	6802      	ldr	r2, [r0, #0]
 801d8dc:	fb09 f303 	mul.w	r3, r9, r3
 801d8e0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d8e2:	4629      	mov	r1, r5
 801d8e4:	463a      	mov	r2, r7
 801d8e6:	47b0      	blx	r6
 801d8e8:	e7e2      	b.n	801d8b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d8ea:	fb0a f303 	mul.w	r3, sl, r3
 801d8ee:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d92c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d8f2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d8f6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d8fa:	4545      	cmp	r5, r8
 801d8fc:	d2d8      	bcs.n	801d8b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d8fe:	f8db 0000 	ldr.w	r0, [fp]
 801d902:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d906:	6802      	ldr	r2, [r0, #0]
 801d908:	4629      	mov	r1, r5
 801d90a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d90e:	005b      	lsls	r3, r3, #1
 801d910:	463a      	mov	r2, r7
 801d912:	47d0      	blx	sl
 801d914:	444f      	add	r7, r9
 801d916:	4435      	add	r5, r6
 801d918:	e7ef      	b.n	801d8fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d91a:	bf00      	nop
 801d91c:	20012d98 	.word	0x20012d98
 801d920:	20012d9a 	.word	0x20012d9a
 801d924:	20012d9c 	.word	0x20012d9c
 801d928:	20012d9e 	.word	0x20012d9e
 801d92c:	20012da4 	.word	0x20012da4

0801d930 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d930:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d932:	4606      	mov	r6, r0
 801d934:	b087      	sub	sp, #28
 801d936:	460c      	mov	r4, r1
 801d938:	4617      	mov	r7, r2
 801d93a:	461d      	mov	r5, r3
 801d93c:	b333      	cbz	r3, 801d98c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d93e:	4608      	mov	r0, r1
 801d940:	f7f3 f95f 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d944:	bb10      	cbnz	r0, 801d98c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d946:	6820      	ldr	r0, [r4, #0]
 801d948:	6861      	ldr	r1, [r4, #4]
 801d94a:	4c1c      	ldr	r4, [pc, #112]	; (801d9bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d94c:	ab04      	add	r3, sp, #16
 801d94e:	c303      	stmia	r3!, {r0, r1}
 801d950:	a804      	add	r0, sp, #16
 801d952:	f7f8 f871 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d956:	6820      	ldr	r0, [r4, #0]
 801d958:	6803      	ldr	r3, [r0, #0]
 801d95a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d95c:	4798      	blx	r3
 801d95e:	2dff      	cmp	r5, #255	; 0xff
 801d960:	d016      	beq.n	801d990 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d962:	f010 0f08 	tst.w	r0, #8
 801d966:	6820      	ldr	r0, [r4, #0]
 801d968:	d015      	beq.n	801d996 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d96a:	2400      	movs	r4, #0
 801d96c:	6801      	ldr	r1, [r0, #0]
 801d96e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d972:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d976:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d97a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d97e:	9401      	str	r4, [sp, #4]
 801d980:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d984:	9400      	str	r4, [sp, #0]
 801d986:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d988:	4639      	mov	r1, r7
 801d98a:	47a0      	blx	r4
 801d98c:	b007      	add	sp, #28
 801d98e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d990:	f010 0f02 	tst.w	r0, #2
 801d994:	e7e7      	b.n	801d966 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d996:	6803      	ldr	r3, [r0, #0]
 801d998:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d99a:	4798      	blx	r3
 801d99c:	4b08      	ldr	r3, [pc, #32]	; (801d9c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d99e:	881a      	ldrh	r2, [r3, #0]
 801d9a0:	6833      	ldr	r3, [r6, #0]
 801d9a2:	e9cd 7500 	strd	r7, r5, [sp]
 801d9a6:	4601      	mov	r1, r0
 801d9a8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d9aa:	4630      	mov	r0, r6
 801d9ac:	ab04      	add	r3, sp, #16
 801d9ae:	47a8      	blx	r5
 801d9b0:	6820      	ldr	r0, [r4, #0]
 801d9b2:	6803      	ldr	r3, [r0, #0]
 801d9b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9b6:	4798      	blx	r3
 801d9b8:	e7e8      	b.n	801d98c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d9ba:	bf00      	nop
 801d9bc:	20012da4 	.word	0x20012da4
 801d9c0:	20012d9e 	.word	0x20012d9e

0801d9c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d9c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d9c8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d9cc:	9e08      	ldr	r6, [sp, #32]
 801d9ce:	4688      	mov	r8, r1
 801d9d0:	4614      	mov	r4, r2
 801d9d2:	461d      	mov	r5, r3
 801d9d4:	2f00      	cmp	r7, #0
 801d9d6:	f000 80a9 	beq.w	801db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9da:	4618      	mov	r0, r3
 801d9dc:	f7f3 f911 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d9e0:	2800      	cmp	r0, #0
 801d9e2:	f040 80a3 	bne.w	801db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9e6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d9ea:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d9ee:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d9f2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d9f6:	fb04 1303 	mla	r3, r4, r3, r1
 801d9fa:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d9fe:	4365      	muls	r5, r4
 801da00:	2fff      	cmp	r7, #255	; 0xff
 801da02:	eba4 0200 	sub.w	r2, r4, r0
 801da06:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801da0a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801da0e:	d04a      	beq.n	801daa6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801da10:	b2bc      	uxth	r4, r7
 801da12:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801da16:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801da1a:	fa5f f788 	uxtb.w	r7, r8
 801da1e:	b2f3      	uxtb	r3, r6
 801da20:	0040      	lsls	r0, r0, #1
 801da22:	fb0e fe04 	mul.w	lr, lr, r4
 801da26:	4367      	muls	r7, r4
 801da28:	4363      	muls	r3, r4
 801da2a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801da2e:	fa1f fc8c 	uxth.w	ip, ip
 801da32:	42a9      	cmp	r1, r5
 801da34:	d27a      	bcs.n	801db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da36:	eb01 0900 	add.w	r9, r1, r0
 801da3a:	4549      	cmp	r1, r9
 801da3c:	d231      	bcs.n	801daa2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801da3e:	880a      	ldrh	r2, [r1, #0]
 801da40:	1214      	asrs	r4, r2, #8
 801da42:	10d6      	asrs	r6, r2, #3
 801da44:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801da48:	00d2      	lsls	r2, r2, #3
 801da4a:	b2d2      	uxtb	r2, r2
 801da4c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801da50:	fb14 f40c 	smulbb	r4, r4, ip
 801da54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801da58:	4474      	add	r4, lr
 801da5a:	fb12 f20c 	smulbb	r2, r2, ip
 801da5e:	b2a4      	uxth	r4, r4
 801da60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da64:	441a      	add	r2, r3
 801da66:	b292      	uxth	r2, r2
 801da68:	f104 0a01 	add.w	sl, r4, #1
 801da6c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801da70:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801da74:	fb16 f60c 	smulbb	r6, r6, ip
 801da78:	f102 0a01 	add.w	sl, r2, #1
 801da7c:	443e      	add	r6, r7
 801da7e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801da82:	b2b6      	uxth	r6, r6
 801da84:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801da88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801da8c:	4322      	orrs	r2, r4
 801da8e:	1c74      	adds	r4, r6, #1
 801da90:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801da94:	0976      	lsrs	r6, r6, #5
 801da96:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801da9a:	4332      	orrs	r2, r6
 801da9c:	f821 2b02 	strh.w	r2, [r1], #2
 801daa0:	e7cb      	b.n	801da3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801daa2:	4441      	add	r1, r8
 801daa4:	e7c5      	b.n	801da32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801daa6:	4f22      	ldr	r7, [pc, #136]	; (801db30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801daa8:	0973      	lsrs	r3, r6, #5
 801daaa:	ea08 0707 	and.w	r7, r8, r7
 801daae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dab2:	433b      	orrs	r3, r7
 801dab4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801dab8:	4333      	orrs	r3, r6
 801daba:	07e7      	lsls	r7, r4, #31
 801dabc:	b29b      	uxth	r3, r3
 801dabe:	d50b      	bpl.n	801dad8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801dac0:	0040      	lsls	r0, r0, #1
 801dac2:	0052      	lsls	r2, r2, #1
 801dac4:	42a9      	cmp	r1, r5
 801dac6:	d231      	bcs.n	801db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dac8:	180c      	adds	r4, r1, r0
 801daca:	42a1      	cmp	r1, r4
 801dacc:	d202      	bcs.n	801dad4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801dace:	f821 3b02 	strh.w	r3, [r1], #2
 801dad2:	e7fa      	b.n	801daca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801dad4:	4411      	add	r1, r2
 801dad6:	e7f5      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801dad8:	078e      	lsls	r6, r1, #30
 801dada:	d008      	beq.n	801daee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801dadc:	0066      	lsls	r6, r4, #1
 801dade:	460a      	mov	r2, r1
 801dae0:	42aa      	cmp	r2, r5
 801dae2:	d202      	bcs.n	801daea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801dae4:	8013      	strh	r3, [r2, #0]
 801dae6:	4432      	add	r2, r6
 801dae8:	e7fa      	b.n	801dae0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801daea:	3102      	adds	r1, #2
 801daec:	3801      	subs	r0, #1
 801daee:	07c2      	lsls	r2, r0, #31
 801daf0:	d50b      	bpl.n	801db0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801daf2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801daf6:	3a01      	subs	r2, #1
 801daf8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801dafc:	0066      	lsls	r6, r4, #1
 801dafe:	42aa      	cmp	r2, r5
 801db00:	d202      	bcs.n	801db08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801db02:	8013      	strh	r3, [r2, #0]
 801db04:	4432      	add	r2, r6
 801db06:	e7fa      	b.n	801dafe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801db08:	3801      	subs	r0, #1
 801db0a:	b178      	cbz	r0, 801db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801db0c:	1040      	asrs	r0, r0, #1
 801db0e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801db12:	0080      	lsls	r0, r0, #2
 801db14:	0064      	lsls	r4, r4, #1
 801db16:	42a9      	cmp	r1, r5
 801db18:	d208      	bcs.n	801db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801db1a:	180e      	adds	r6, r1, r0
 801db1c:	460a      	mov	r2, r1
 801db1e:	42b2      	cmp	r2, r6
 801db20:	d202      	bcs.n	801db28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801db22:	f842 3b04 	str.w	r3, [r2], #4
 801db26:	e7fa      	b.n	801db1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801db28:	4421      	add	r1, r4
 801db2a:	e7f4      	b.n	801db16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801db2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801db30:	00fff800 	.word	0x00fff800

0801db34 <_ZN8touchgfx8LCD16bppC1Ev>:
 801db34:	2200      	movs	r2, #0
 801db36:	4912      	ldr	r1, [pc, #72]	; (801db80 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801db38:	6042      	str	r2, [r0, #4]
 801db3a:	6001      	str	r1, [r0, #0]
 801db3c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801db40:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801db44:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801db48:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801db4c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801db50:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801db54:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801db58:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801db5c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801db60:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801db64:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801db68:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801db6c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801db70:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801db74:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801db78:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801db7c:	4770      	bx	lr
 801db7e:	bf00      	nop
 801db80:	0802f8e0 	.word	0x0802f8e0

0801db84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801db84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db88:	460d      	mov	r5, r1
 801db8a:	b08d      	sub	sp, #52	; 0x34
 801db8c:	4604      	mov	r4, r0
 801db8e:	6808      	ldr	r0, [r1, #0]
 801db90:	6849      	ldr	r1, [r1, #4]
 801db92:	4699      	mov	r9, r3
 801db94:	ab08      	add	r3, sp, #32
 801db96:	c303      	stmia	r3!, {r0, r1}
 801db98:	6810      	ldr	r0, [r2, #0]
 801db9a:	6851      	ldr	r1, [r2, #4]
 801db9c:	ab0a      	add	r3, sp, #40	; 0x28
 801db9e:	c303      	stmia	r3!, {r0, r1}
 801dba0:	a808      	add	r0, sp, #32
 801dba2:	f7f7 ff49 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dba6:	4629      	mov	r1, r5
 801dba8:	a80a      	add	r0, sp, #40	; 0x28
 801dbaa:	f7f7 ff89 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dbae:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801dbb2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801dbb6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801dbba:	4d63      	ldr	r5, [pc, #396]	; (801dd48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dbbc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801dbc0:	6828      	ldr	r0, [r5, #0]
 801dbc2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801dbc6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dbca:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dbce:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801dbd2:	440a      	add	r2, r1
 801dbd4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801dbd8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801dbdc:	4413      	add	r3, r2
 801dbde:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801dbe2:	6803      	ldr	r3, [r0, #0]
 801dbe4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dbe6:	4798      	blx	r3
 801dbe8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dbec:	d119      	bne.n	801dc22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801dbee:	f010 0f20 	tst.w	r0, #32
 801dbf2:	6828      	ldr	r0, [r5, #0]
 801dbf4:	d018      	beq.n	801dc28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801dbf6:	2500      	movs	r5, #0
 801dbf8:	6801      	ldr	r1, [r0, #0]
 801dbfa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801dbfe:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801dc02:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801dc06:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801dc0a:	9502      	str	r5, [sp, #8]
 801dc0c:	b2b6      	uxth	r6, r6
 801dc0e:	fa1f f588 	uxth.w	r5, r8
 801dc12:	9601      	str	r6, [sp, #4]
 801dc14:	9500      	str	r5, [sp, #0]
 801dc16:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801dc18:	4621      	mov	r1, r4
 801dc1a:	47a8      	blx	r5
 801dc1c:	b00d      	add	sp, #52	; 0x34
 801dc1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc22:	f010 0f40 	tst.w	r0, #64	; 0x40
 801dc26:	e7e4      	b.n	801dbf2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801dc28:	6803      	ldr	r3, [r0, #0]
 801dc2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc2c:	4798      	blx	r3
 801dc2e:	4947      	ldr	r1, [pc, #284]	; (801dd4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801dc30:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dc34:	880b      	ldrh	r3, [r1, #0]
 801dc36:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801dc3a:	fb03 5202 	mla	r2, r3, r2, r5
 801dc3e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dc42:	4373      	muls	r3, r6
 801dc44:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dc48:	9307      	str	r3, [sp, #28]
 801dc4a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dc4e:	9306      	str	r3, [sp, #24]
 801dc50:	468a      	mov	sl, r1
 801dc52:	9b07      	ldr	r3, [sp, #28]
 801dc54:	4298      	cmp	r0, r3
 801dc56:	d270      	bcs.n	801dd3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801dc58:	9b06      	ldr	r3, [sp, #24]
 801dc5a:	4621      	mov	r1, r4
 801dc5c:	eb00 0b03 	add.w	fp, r0, r3
 801dc60:	4558      	cmp	r0, fp
 801dc62:	d25d      	bcs.n	801dd20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801dc64:	f851 4b04 	ldr.w	r4, [r1], #4
 801dc68:	0e23      	lsrs	r3, r4, #24
 801dc6a:	d014      	beq.n	801dc96 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dc6c:	2bff      	cmp	r3, #255	; 0xff
 801dc6e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dc72:	d112      	bne.n	801dc9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dc74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dc78:	d10f      	bne.n	801dc9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dc7a:	0963      	lsrs	r3, r4, #5
 801dc7c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801dc80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dc84:	f02c 0c07 	bic.w	ip, ip, #7
 801dc88:	ea43 0c0c 	orr.w	ip, r3, ip
 801dc8c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dc90:	ea4c 0404 	orr.w	r4, ip, r4
 801dc94:	8004      	strh	r4, [r0, #0]
 801dc96:	3002      	adds	r0, #2
 801dc98:	e7e2      	b.n	801dc60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801dc9a:	fb09 f303 	mul.w	r3, r9, r3
 801dc9e:	8807      	ldrh	r7, [r0, #0]
 801dca0:	1c5a      	adds	r2, r3, #1
 801dca2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801dca6:	1212      	asrs	r2, r2, #8
 801dca8:	123e      	asrs	r6, r7, #8
 801dcaa:	b293      	uxth	r3, r2
 801dcac:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801dcb0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dcb4:	43d2      	mvns	r2, r2
 801dcb6:	b2d2      	uxtb	r2, r2
 801dcb8:	10fd      	asrs	r5, r7, #3
 801dcba:	fb1e fe03 	smulbb	lr, lr, r3
 801dcbe:	00ff      	lsls	r7, r7, #3
 801dcc0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dcc4:	fb06 e602 	mla	r6, r6, r2, lr
 801dcc8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dccc:	b2ff      	uxtb	r7, r7
 801dcce:	fa5f fc8c 	uxtb.w	ip, ip
 801dcd2:	b2e4      	uxtb	r4, r4
 801dcd4:	b2b6      	uxth	r6, r6
 801dcd6:	fb1c fc03 	smulbb	ip, ip, r3
 801dcda:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dcde:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dce2:	fb14 f403 	smulbb	r4, r4, r3
 801dce6:	fb05 c502 	mla	r5, r5, r2, ip
 801dcea:	f106 0e01 	add.w	lr, r6, #1
 801dcee:	fb07 4702 	mla	r7, r7, r2, r4
 801dcf2:	b2ad      	uxth	r5, r5
 801dcf4:	b2bf      	uxth	r7, r7
 801dcf6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dcfa:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801dcfe:	f105 0c01 	add.w	ip, r5, #1
 801dd02:	1c7e      	adds	r6, r7, #1
 801dd04:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dd08:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dd0c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801dd10:	096d      	lsrs	r5, r5, #5
 801dd12:	ea46 060e 	orr.w	r6, r6, lr
 801dd16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd1a:	432e      	orrs	r6, r5
 801dd1c:	8006      	strh	r6, [r0, #0]
 801dd1e:	e7ba      	b.n	801dc96 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dd20:	f8ba 3000 	ldrh.w	r3, [sl]
 801dd24:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801dd28:	eba3 0308 	sub.w	r3, r3, r8
 801dd2c:	eba4 0408 	sub.w	r4, r4, r8
 801dd30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd34:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801dd38:	e78b      	b.n	801dc52 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801dd3a:	4b03      	ldr	r3, [pc, #12]	; (801dd48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dd3c:	6818      	ldr	r0, [r3, #0]
 801dd3e:	6803      	ldr	r3, [r0, #0]
 801dd40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd42:	4798      	blx	r3
 801dd44:	e76a      	b.n	801dc1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801dd46:	bf00      	nop
 801dd48:	20012da4 	.word	0x20012da4
 801dd4c:	20012d9e 	.word	0x20012d9e

0801dd50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dd50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dd54:	460c      	mov	r4, r1
 801dd56:	b085      	sub	sp, #20
 801dd58:	6810      	ldr	r0, [r2, #0]
 801dd5a:	6851      	ldr	r1, [r2, #4]
 801dd5c:	466d      	mov	r5, sp
 801dd5e:	c503      	stmia	r5!, {r0, r1}
 801dd60:	6818      	ldr	r0, [r3, #0]
 801dd62:	6859      	ldr	r1, [r3, #4]
 801dd64:	4616      	mov	r6, r2
 801dd66:	c503      	stmia	r5!, {r0, r1}
 801dd68:	4668      	mov	r0, sp
 801dd6a:	f7f7 fe65 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd6e:	4631      	mov	r1, r6
 801dd70:	a802      	add	r0, sp, #8
 801dd72:	f7f7 fea5 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd76:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dd7a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dd7e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dd82:	4d28      	ldr	r5, [pc, #160]	; (801de24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dd84:	4e28      	ldr	r6, [pc, #160]	; (801de28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dd86:	6828      	ldr	r0, [r5, #0]
 801dd88:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dd8c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dd90:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dd94:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dd98:	f8bd 1000 	ldrh.w	r1, [sp]
 801dd9c:	440a      	add	r2, r1
 801dd9e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dda2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dda6:	4413      	add	r3, r2
 801dda8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ddac:	6803      	ldr	r3, [r0, #0]
 801ddae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ddb0:	4798      	blx	r3
 801ddb2:	8833      	ldrh	r3, [r6, #0]
 801ddb4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ddb8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ddbc:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801de2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ddc0:	fb03 1202 	mla	r2, r3, r2, r1
 801ddc4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ddc8:	fb08 f303 	mul.w	r3, r8, r3
 801ddcc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ddd0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801ddd4:	4298      	cmp	r0, r3
 801ddd6:	d21d      	bcs.n	801de14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ddd8:	eb00 080c 	add.w	r8, r0, ip
 801dddc:	4540      	cmp	r0, r8
 801ddde:	d20f      	bcs.n	801de00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dde0:	f854 1b04 	ldr.w	r1, [r4], #4
 801dde4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dde8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ddec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ddf0:	ea42 0209 	orr.w	r2, r2, r9
 801ddf4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ddf8:	430a      	orrs	r2, r1
 801ddfa:	f820 2b02 	strh.w	r2, [r0], #2
 801ddfe:	e7ed      	b.n	801dddc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801de00:	8832      	ldrh	r2, [r6, #0]
 801de02:	1bd2      	subs	r2, r2, r7
 801de04:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de08:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801de0c:	1bd2      	subs	r2, r2, r7
 801de0e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801de12:	e7df      	b.n	801ddd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801de14:	6828      	ldr	r0, [r5, #0]
 801de16:	6803      	ldr	r3, [r0, #0]
 801de18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de1a:	4798      	blx	r3
 801de1c:	b005      	add	sp, #20
 801de1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801de22:	bf00      	nop
 801de24:	20012da4 	.word	0x20012da4
 801de28:	20012d9e 	.word	0x20012d9e
 801de2c:	fffff800 	.word	0xfffff800

0801de30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801de30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801de34:	460e      	mov	r6, r1
 801de36:	b08e      	sub	sp, #56	; 0x38
 801de38:	4604      	mov	r4, r0
 801de3a:	6808      	ldr	r0, [r1, #0]
 801de3c:	6849      	ldr	r1, [r1, #4]
 801de3e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e018 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801de42:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e01c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801de46:	461d      	mov	r5, r3
 801de48:	ab0a      	add	r3, sp, #40	; 0x28
 801de4a:	c303      	stmia	r3!, {r0, r1}
 801de4c:	6810      	ldr	r0, [r2, #0]
 801de4e:	6851      	ldr	r1, [r2, #4]
 801de50:	ab0c      	add	r3, sp, #48	; 0x30
 801de52:	c303      	stmia	r3!, {r0, r1}
 801de54:	a80a      	add	r0, sp, #40	; 0x28
 801de56:	f7f7 fdef 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801de5a:	4631      	mov	r1, r6
 801de5c:	a80c      	add	r0, sp, #48	; 0x30
 801de5e:	f7f7 fe2f 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801de62:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801de66:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801de6a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801de6e:	f8d8 0000 	ldr.w	r0, [r8]
 801de72:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801de76:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801de7a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801de7e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801de82:	440c      	add	r4, r1
 801de84:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801de88:	440a      	add	r2, r1
 801de8a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801de8e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801de92:	4413      	add	r3, r2
 801de94:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801de98:	6803      	ldr	r3, [r0, #0]
 801de9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de9c:	4798      	blx	r3
 801de9e:	2dff      	cmp	r5, #255	; 0xff
 801dea0:	d124      	bne.n	801deec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801dea2:	f010 0f01 	tst.w	r0, #1
 801dea6:	f8d8 0000 	ldr.w	r0, [r8]
 801deaa:	d022      	beq.n	801def2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801deac:	2100      	movs	r1, #0
 801deae:	f8d0 c000 	ldr.w	ip, [r0]
 801deb2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801deb6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801deba:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801debe:	f04f 0e01 	mov.w	lr, #1
 801dec2:	f8cd e018 	str.w	lr, [sp, #24]
 801dec6:	f8b9 e000 	ldrh.w	lr, [r9]
 801deca:	9503      	str	r5, [sp, #12]
 801decc:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ded0:	b2b6      	uxth	r6, r6
 801ded2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ded6:	9102      	str	r1, [sp, #8]
 801ded8:	b2bf      	uxth	r7, r7
 801deda:	9601      	str	r6, [sp, #4]
 801dedc:	9700      	str	r7, [sp, #0]
 801dede:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801dee2:	4621      	mov	r1, r4
 801dee4:	47a8      	blx	r5
 801dee6:	b00e      	add	sp, #56	; 0x38
 801dee8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801deec:	f010 0f04 	tst.w	r0, #4
 801def0:	e7d9      	b.n	801dea6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801def2:	6803      	ldr	r3, [r0, #0]
 801def4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801def6:	4798      	blx	r3
 801def8:	f8b9 3000 	ldrh.w	r3, [r9]
 801defc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801df00:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801df04:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801df08:	fb03 1202 	mla	r2, r3, r2, r1
 801df0c:	ebac 0c07 	sub.w	ip, ip, r7
 801df10:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801df14:	435e      	muls	r6, r3
 801df16:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801df1a:	2dff      	cmp	r5, #255	; 0xff
 801df1c:	eba3 0707 	sub.w	r7, r3, r7
 801df20:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801df24:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801df28:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801df2c:	d049      	beq.n	801dfc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801df2e:	43eb      	mvns	r3, r5
 801df30:	fa1f f985 	uxth.w	r9, r5
 801df34:	b2db      	uxtb	r3, r3
 801df36:	42b0      	cmp	r0, r6
 801df38:	d266      	bcs.n	801e008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801df3a:	eb00 0a0e 	add.w	sl, r0, lr
 801df3e:	4550      	cmp	r0, sl
 801df40:	4621      	mov	r1, r4
 801df42:	f104 0403 	add.w	r4, r4, #3
 801df46:	d25b      	bcs.n	801e000 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801df48:	8802      	ldrh	r2, [r0, #0]
 801df4a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801df4e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801df52:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801df56:	fb11 f109 	smulbb	r1, r1, r9
 801df5a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801df5e:	10d5      	asrs	r5, r2, #3
 801df60:	fb08 1803 	mla	r8, r8, r3, r1
 801df64:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801df68:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801df6c:	fb11 f109 	smulbb	r1, r1, r9
 801df70:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801df74:	fb05 1503 	mla	r5, r5, r3, r1
 801df78:	00d2      	lsls	r2, r2, #3
 801df7a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801df7e:	b2d2      	uxtb	r2, r2
 801df80:	fb11 f109 	smulbb	r1, r1, r9
 801df84:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801df88:	fa1f f888 	uxth.w	r8, r8
 801df8c:	fb02 1203 	mla	r2, r2, r3, r1
 801df90:	b292      	uxth	r2, r2
 801df92:	f108 0101 	add.w	r1, r8, #1
 801df96:	b2ad      	uxth	r5, r5
 801df98:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801df9c:	1c51      	adds	r1, r2, #1
 801df9e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dfa2:	1c69      	adds	r1, r5, #1
 801dfa4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801dfa8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801dfac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dfb0:	096d      	lsrs	r5, r5, #5
 801dfb2:	ea42 0208 	orr.w	r2, r2, r8
 801dfb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dfba:	432a      	orrs	r2, r5
 801dfbc:	f820 2b02 	strh.w	r2, [r0], #2
 801dfc0:	e7bd      	b.n	801df3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801dfc2:	4a14      	ldr	r2, [pc, #80]	; (801e014 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801dfc4:	42b0      	cmp	r0, r6
 801dfc6:	d21f      	bcs.n	801e008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dfc8:	eb00 050e 	add.w	r5, r0, lr
 801dfcc:	42a8      	cmp	r0, r5
 801dfce:	4621      	mov	r1, r4
 801dfd0:	f104 0403 	add.w	r4, r4, #3
 801dfd4:	d210      	bcs.n	801dff8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801dfd6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801dfda:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801dfde:	00db      	lsls	r3, r3, #3
 801dfe0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801dfe4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dfe8:	430b      	orrs	r3, r1
 801dfea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801dfee:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801dff2:	f820 3b02 	strh.w	r3, [r0], #2
 801dff6:	e7e9      	b.n	801dfcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801dff8:	4438      	add	r0, r7
 801dffa:	eb01 040c 	add.w	r4, r1, ip
 801dffe:	e7e1      	b.n	801dfc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e000:	4438      	add	r0, r7
 801e002:	eb01 040c 	add.w	r4, r1, ip
 801e006:	e796      	b.n	801df36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e008:	4b03      	ldr	r3, [pc, #12]	; (801e018 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e00a:	6818      	ldr	r0, [r3, #0]
 801e00c:	6803      	ldr	r3, [r0, #0]
 801e00e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e010:	4798      	blx	r3
 801e012:	e768      	b.n	801dee6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e014:	fffff800 	.word	0xfffff800
 801e018:	20012da4 	.word	0x20012da4
 801e01c:	20012d9e 	.word	0x20012d9e

0801e020 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e020:	b4f0      	push	{r4, r5, r6, r7}
 801e022:	4616      	mov	r6, r2
 801e024:	2e01      	cmp	r6, #1
 801e026:	461c      	mov	r4, r3
 801e028:	460d      	mov	r5, r1
 801e02a:	9a04      	ldr	r2, [sp, #16]
 801e02c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e030:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e034:	d012      	beq.n	801e05c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e036:	d303      	bcc.n	801e040 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e038:	2e02      	cmp	r6, #2
 801e03a:	d00a      	beq.n	801e052 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e03c:	bcf0      	pop	{r4, r5, r6, r7}
 801e03e:	4770      	bx	lr
 801e040:	6805      	ldr	r5, [r0, #0]
 801e042:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e046:	68ed      	ldr	r5, [r5, #12]
 801e048:	4613      	mov	r3, r2
 801e04a:	46ac      	mov	ip, r5
 801e04c:	4622      	mov	r2, r4
 801e04e:	bcf0      	pop	{r4, r5, r6, r7}
 801e050:	4760      	bx	ip
 801e052:	4621      	mov	r1, r4
 801e054:	4628      	mov	r0, r5
 801e056:	bcf0      	pop	{r4, r5, r6, r7}
 801e058:	f7ff bd94 	b.w	801db84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e05c:	4621      	mov	r1, r4
 801e05e:	4628      	mov	r0, r5
 801e060:	bcf0      	pop	{r4, r5, r6, r7}
 801e062:	f7ff bee5 	b.w	801de30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e06c:	4681      	mov	r9, r0
 801e06e:	b093      	sub	sp, #76	; 0x4c
 801e070:	6810      	ldr	r0, [r2, #0]
 801e072:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e076:	4f6d      	ldr	r7, [pc, #436]	; (801e22c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e078:	4688      	mov	r8, r1
 801e07a:	6851      	ldr	r1, [r2, #4]
 801e07c:	ac0e      	add	r4, sp, #56	; 0x38
 801e07e:	c403      	stmia	r4!, {r0, r1}
 801e080:	6818      	ldr	r0, [r3, #0]
 801e082:	6859      	ldr	r1, [r3, #4]
 801e084:	ac10      	add	r4, sp, #64	; 0x40
 801e086:	4616      	mov	r6, r2
 801e088:	c403      	stmia	r4!, {r0, r1}
 801e08a:	a80e      	add	r0, sp, #56	; 0x38
 801e08c:	f7f7 fcd4 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e090:	4631      	mov	r1, r6
 801e092:	a810      	add	r0, sp, #64	; 0x40
 801e094:	f7f7 fd14 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e098:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e09c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e0a0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e0a4:	4e62      	ldr	r6, [pc, #392]	; (801e230 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e0a6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e0aa:	6830      	ldr	r0, [r6, #0]
 801e0ac:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e0b0:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e0b4:	4489      	add	r9, r1
 801e0b6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e0ba:	440a      	add	r2, r1
 801e0bc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e0c0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e0c4:	4413      	add	r3, r2
 801e0c6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e0ca:	6803      	ldr	r3, [r0, #0]
 801e0cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e0ce:	4798      	blx	r3
 801e0d0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e0d4:	6830      	ldr	r0, [r6, #0]
 801e0d6:	d01d      	beq.n	801e114 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e0d8:	2200      	movs	r2, #0
 801e0da:	6801      	ldr	r1, [r0, #0]
 801e0dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e0e0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e0e4:	220b      	movs	r2, #11
 801e0e6:	9207      	str	r2, [sp, #28]
 801e0e8:	883a      	ldrh	r2, [r7, #0]
 801e0ea:	9206      	str	r2, [sp, #24]
 801e0ec:	2201      	movs	r2, #1
 801e0ee:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e0f2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e0f6:	9203      	str	r2, [sp, #12]
 801e0f8:	b2a4      	uxth	r4, r4
 801e0fa:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e0fe:	9200      	str	r2, [sp, #0]
 801e100:	b2ad      	uxth	r5, r5
 801e102:	9502      	str	r5, [sp, #8]
 801e104:	9401      	str	r4, [sp, #4]
 801e106:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e108:	4642      	mov	r2, r8
 801e10a:	4649      	mov	r1, r9
 801e10c:	47a0      	blx	r4
 801e10e:	b013      	add	sp, #76	; 0x4c
 801e110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e114:	6803      	ldr	r3, [r0, #0]
 801e116:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e118:	4798      	blx	r3
 801e11a:	883b      	ldrh	r3, [r7, #0]
 801e11c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e120:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e124:	fb03 1202 	mla	r2, r3, r2, r1
 801e128:	435d      	muls	r5, r3
 801e12a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e12e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e132:	920c      	str	r2, [sp, #48]	; 0x30
 801e134:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e138:	1b12      	subs	r2, r2, r4
 801e13a:	920d      	str	r2, [sp, #52]	; 0x34
 801e13c:	0062      	lsls	r2, r4, #1
 801e13e:	1b1c      	subs	r4, r3, r4
 801e140:	0063      	lsls	r3, r4, #1
 801e142:	920a      	str	r2, [sp, #40]	; 0x28
 801e144:	930b      	str	r3, [sp, #44]	; 0x2c
 801e146:	f04f 0e04 	mov.w	lr, #4
 801e14a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e14c:	4298      	cmp	r0, r3
 801e14e:	d266      	bcs.n	801e21e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e150:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e152:	eb00 0b03 	add.w	fp, r0, r3
 801e156:	4558      	cmp	r0, fp
 801e158:	d25c      	bcs.n	801e214 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e15a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e15e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e162:	f858 2003 	ldr.w	r2, [r8, r3]
 801e166:	0e11      	lsrs	r1, r2, #24
 801e168:	d012      	beq.n	801e190 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e16a:	29ff      	cmp	r1, #255	; 0xff
 801e16c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e170:	d110      	bne.n	801e194 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e172:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e176:	d10d      	bne.n	801e194 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e178:	0953      	lsrs	r3, r2, #5
 801e17a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e17e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e182:	f027 0707 	bic.w	r7, r7, #7
 801e186:	431f      	orrs	r7, r3
 801e188:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e18c:	433a      	orrs	r2, r7
 801e18e:	8002      	strh	r2, [r0, #0]
 801e190:	3002      	adds	r0, #2
 801e192:	e7e0      	b.n	801e156 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e194:	fb0a f101 	mul.w	r1, sl, r1
 801e198:	8806      	ldrh	r6, [r0, #0]
 801e19a:	1c4b      	adds	r3, r1, #1
 801e19c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e1a0:	1235      	asrs	r5, r6, #8
 801e1a2:	10f4      	asrs	r4, r6, #3
 801e1a4:	121b      	asrs	r3, r3, #8
 801e1a6:	00f6      	lsls	r6, r6, #3
 801e1a8:	b299      	uxth	r1, r3
 801e1aa:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e1ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e1b2:	b2f6      	uxtb	r6, r6
 801e1b4:	43db      	mvns	r3, r3
 801e1b6:	b2d2      	uxtb	r2, r2
 801e1b8:	b2db      	uxtb	r3, r3
 801e1ba:	fb1c fc01 	smulbb	ip, ip, r1
 801e1be:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e1c2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e1c6:	fb12 f201 	smulbb	r2, r2, r1
 801e1ca:	fb05 c503 	mla	r5, r5, r3, ip
 801e1ce:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e1d2:	b2ff      	uxtb	r7, r7
 801e1d4:	fb06 2203 	mla	r2, r6, r3, r2
 801e1d8:	b2ad      	uxth	r5, r5
 801e1da:	fb17 f701 	smulbb	r7, r7, r1
 801e1de:	b292      	uxth	r2, r2
 801e1e0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e1e4:	fb04 7403 	mla	r4, r4, r3, r7
 801e1e8:	f105 0c01 	add.w	ip, r5, #1
 801e1ec:	1c57      	adds	r7, r2, #1
 801e1ee:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e1f2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e1f6:	b2a4      	uxth	r4, r4
 801e1f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e1fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e200:	433d      	orrs	r5, r7
 801e202:	1c67      	adds	r7, r4, #1
 801e204:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e208:	0964      	lsrs	r4, r4, #5
 801e20a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e20e:	4325      	orrs	r5, r4
 801e210:	8005      	strh	r5, [r0, #0]
 801e212:	e7bd      	b.n	801e190 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e214:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e216:	4418      	add	r0, r3
 801e218:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e21a:	4499      	add	r9, r3
 801e21c:	e795      	b.n	801e14a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e21e:	4b04      	ldr	r3, [pc, #16]	; (801e230 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e220:	6818      	ldr	r0, [r3, #0]
 801e222:	6803      	ldr	r3, [r0, #0]
 801e224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e226:	4798      	blx	r3
 801e228:	e771      	b.n	801e10e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e22a:	bf00      	nop
 801e22c:	20012d9e 	.word	0x20012d9e
 801e230:	20012da4 	.word	0x20012da4

0801e234 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e238:	b087      	sub	sp, #28
 801e23a:	4680      	mov	r8, r0
 801e23c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e240:	460d      	mov	r5, r1
 801e242:	4614      	mov	r4, r2
 801e244:	2e00      	cmp	r6, #0
 801e246:	f000 80b9 	beq.w	801e3bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e24a:	6810      	ldr	r0, [r2, #0]
 801e24c:	6851      	ldr	r1, [r2, #4]
 801e24e:	af02      	add	r7, sp, #8
 801e250:	c703      	stmia	r7!, {r0, r1}
 801e252:	6818      	ldr	r0, [r3, #0]
 801e254:	6859      	ldr	r1, [r3, #4]
 801e256:	af04      	add	r7, sp, #16
 801e258:	c703      	stmia	r7!, {r0, r1}
 801e25a:	a802      	add	r0, sp, #8
 801e25c:	f7f7 fbec 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e260:	4621      	mov	r1, r4
 801e262:	a804      	add	r0, sp, #16
 801e264:	f7f7 fc2c 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e268:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e26c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e270:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e274:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e278:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e27c:	eb08 0401 	add.w	r4, r8, r1
 801e280:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e284:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e288:	440a      	add	r2, r1
 801e28a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e28e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e292:	4413      	add	r3, r2
 801e294:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e298:	4b4a      	ldr	r3, [pc, #296]	; (801e3c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e29a:	6818      	ldr	r0, [r3, #0]
 801e29c:	6803      	ldr	r3, [r0, #0]
 801e29e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e2a0:	4798      	blx	r3
 801e2a2:	4b49      	ldr	r3, [pc, #292]	; (801e3c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e2a4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e2a8:	881a      	ldrh	r2, [r3, #0]
 801e2aa:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e2ae:	2eff      	cmp	r6, #255	; 0xff
 801e2b0:	fb02 c101 	mla	r1, r2, r1, ip
 801e2b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e2b8:	fb02 f207 	mul.w	r2, r2, r7
 801e2bc:	f105 0104 	add.w	r1, r5, #4
 801e2c0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e2c4:	461d      	mov	r5, r3
 801e2c6:	d05a      	beq.n	801e37e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e2c8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e2cc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e2d0:	b2b6      	uxth	r6, r6
 801e2d2:	fa1f fe8e 	uxth.w	lr, lr
 801e2d6:	9301      	str	r3, [sp, #4]
 801e2d8:	4282      	cmp	r2, r0
 801e2da:	d96a      	bls.n	801e3b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e2dc:	eb00 0b0a 	add.w	fp, r0, sl
 801e2e0:	4583      	cmp	fp, r0
 801e2e2:	d940      	bls.n	801e366 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e2e4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e2e8:	8805      	ldrh	r5, [r0, #0]
 801e2ea:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e2ee:	122f      	asrs	r7, r5, #8
 801e2f0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e2f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e2f8:	fb17 f70e 	smulbb	r7, r7, lr
 801e2fc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e300:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e304:	00ed      	lsls	r5, r5, #3
 801e306:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e30a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e30e:	10df      	asrs	r7, r3, #3
 801e310:	b2ed      	uxtb	r5, r5
 801e312:	00db      	lsls	r3, r3, #3
 801e314:	fa1f fc8c 	uxth.w	ip, ip
 801e318:	fb19 f90e 	smulbb	r9, r9, lr
 801e31c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e320:	b2db      	uxtb	r3, r3
 801e322:	fb15 f50e 	smulbb	r5, r5, lr
 801e326:	fb07 9706 	mla	r7, r7, r6, r9
 801e32a:	fb03 5306 	mla	r3, r3, r6, r5
 801e32e:	f10c 0901 	add.w	r9, ip, #1
 801e332:	b29b      	uxth	r3, r3
 801e334:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e338:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e33c:	f103 0c01 	add.w	ip, r3, #1
 801e340:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e344:	b2bf      	uxth	r7, r7
 801e346:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e34a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e34e:	f107 0901 	add.w	r9, r7, #1
 801e352:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e356:	097f      	lsrs	r7, r7, #5
 801e358:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e35c:	ea4c 0c07 	orr.w	ip, ip, r7
 801e360:	f820 cb02 	strh.w	ip, [r0], #2
 801e364:	e7bc      	b.n	801e2e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e366:	9b01      	ldr	r3, [sp, #4]
 801e368:	881b      	ldrh	r3, [r3, #0]
 801e36a:	eba3 0308 	sub.w	r3, r3, r8
 801e36e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e372:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e376:	eba3 0308 	sub.w	r3, r3, r8
 801e37a:	441c      	add	r4, r3
 801e37c:	e7ac      	b.n	801e2d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e37e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e382:	4282      	cmp	r2, r0
 801e384:	d915      	bls.n	801e3b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e386:	eb00 060a 	add.w	r6, r0, sl
 801e38a:	4286      	cmp	r6, r0
 801e38c:	d906      	bls.n	801e39c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e38e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e392:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e396:	f820 3b02 	strh.w	r3, [r0], #2
 801e39a:	e7f6      	b.n	801e38a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e39c:	882b      	ldrh	r3, [r5, #0]
 801e39e:	eba3 0308 	sub.w	r3, r3, r8
 801e3a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e3a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e3aa:	eba3 0308 	sub.w	r3, r3, r8
 801e3ae:	441c      	add	r4, r3
 801e3b0:	e7e7      	b.n	801e382 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e3b2:	4b04      	ldr	r3, [pc, #16]	; (801e3c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e3b4:	6818      	ldr	r0, [r3, #0]
 801e3b6:	6803      	ldr	r3, [r0, #0]
 801e3b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e3ba:	4798      	blx	r3
 801e3bc:	b007      	add	sp, #28
 801e3be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3c2:	bf00      	nop
 801e3c4:	20012da4 	.word	0x20012da4
 801e3c8:	20012d9e 	.word	0x20012d9e

0801e3cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3d0:	b091      	sub	sp, #68	; 0x44
 801e3d2:	4680      	mov	r8, r0
 801e3d4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e3d8:	460f      	mov	r7, r1
 801e3da:	4614      	mov	r4, r2
 801e3dc:	2d00      	cmp	r5, #0
 801e3de:	d051      	beq.n	801e484 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e3e0:	6810      	ldr	r0, [r2, #0]
 801e3e2:	6851      	ldr	r1, [r2, #4]
 801e3e4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e5e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e3e8:	ae0c      	add	r6, sp, #48	; 0x30
 801e3ea:	c603      	stmia	r6!, {r0, r1}
 801e3ec:	6818      	ldr	r0, [r3, #0]
 801e3ee:	6859      	ldr	r1, [r3, #4]
 801e3f0:	ae0e      	add	r6, sp, #56	; 0x38
 801e3f2:	c603      	stmia	r6!, {r0, r1}
 801e3f4:	a80c      	add	r0, sp, #48	; 0x30
 801e3f6:	f7f7 fb1f 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e3fa:	4621      	mov	r1, r4
 801e3fc:	a80e      	add	r0, sp, #56	; 0x38
 801e3fe:	f7f7 fb5f 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e402:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e406:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e40a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e40e:	f8d9 0000 	ldr.w	r0, [r9]
 801e412:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e416:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e41a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e41e:	eb08 0401 	add.w	r4, r8, r1
 801e422:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e426:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e5ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e42a:	440a      	add	r2, r1
 801e42c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e430:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e434:	4413      	add	r3, r2
 801e436:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e43a:	6803      	ldr	r3, [r0, #0]
 801e43c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e43e:	4798      	blx	r3
 801e440:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e444:	f8d9 0000 	ldr.w	r0, [r9]
 801e448:	d01f      	beq.n	801e48a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e44a:	2200      	movs	r2, #0
 801e44c:	6801      	ldr	r1, [r0, #0]
 801e44e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e452:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e456:	220b      	movs	r2, #11
 801e458:	9207      	str	r2, [sp, #28]
 801e45a:	f8b8 2000 	ldrh.w	r2, [r8]
 801e45e:	9206      	str	r2, [sp, #24]
 801e460:	2201      	movs	r2, #1
 801e462:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e466:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e46a:	9203      	str	r2, [sp, #12]
 801e46c:	fa1f f28a 	uxth.w	r2, sl
 801e470:	9202      	str	r2, [sp, #8]
 801e472:	b2b6      	uxth	r6, r6
 801e474:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e478:	9200      	str	r2, [sp, #0]
 801e47a:	9601      	str	r6, [sp, #4]
 801e47c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e47e:	463a      	mov	r2, r7
 801e480:	4621      	mov	r1, r4
 801e482:	47a8      	blx	r5
 801e484:	b011      	add	sp, #68	; 0x44
 801e486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e48a:	6803      	ldr	r3, [r0, #0]
 801e48c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e48e:	4798      	blx	r3
 801e490:	f8b8 2000 	ldrh.w	r2, [r8]
 801e494:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e498:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e49c:	2dff      	cmp	r5, #255	; 0xff
 801e49e:	fb02 1303 	mla	r3, r2, r3, r1
 801e4a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e4a6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e4aa:	fb0a fa02 	mul.w	sl, sl, r2
 801e4ae:	d062      	beq.n	801e576 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e4b0:	ea6f 0c05 	mvn.w	ip, r5
 801e4b4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e4b8:	930a      	str	r3, [sp, #40]	; 0x28
 801e4ba:	b2ad      	uxth	r5, r5
 801e4bc:	fa5f fc8c 	uxtb.w	ip, ip
 801e4c0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e4c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e4c6:	4298      	cmp	r0, r3
 801e4c8:	f080 8085 	bcs.w	801e5d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e4cc:	eb00 0b09 	add.w	fp, r0, r9
 801e4d0:	4558      	cmp	r0, fp
 801e4d2:	d246      	bcs.n	801e562 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e4d4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e4d8:	2303      	movs	r3, #3
 801e4da:	2204      	movs	r2, #4
 801e4dc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e4e0:	eb07 0a0e 	add.w	sl, r7, lr
 801e4e4:	8803      	ldrh	r3, [r0, #0]
 801e4e6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e4ea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e4ee:	1219      	asrs	r1, r3, #8
 801e4f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e4f4:	fb18 f805 	smulbb	r8, r8, r5
 801e4f8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e4fc:	10da      	asrs	r2, r3, #3
 801e4fe:	fb01 810c 	mla	r1, r1, ip, r8
 801e502:	00db      	lsls	r3, r3, #3
 801e504:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e508:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e50c:	b2db      	uxtb	r3, r3
 801e50e:	fb18 f805 	smulbb	r8, r8, r5
 801e512:	fb1e fe05 	smulbb	lr, lr, r5
 801e516:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e51a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e51e:	b289      	uxth	r1, r1
 801e520:	fb02 820c 	mla	r2, r2, ip, r8
 801e524:	fb03 e30c 	mla	r3, r3, ip, lr
 801e528:	b292      	uxth	r2, r2
 801e52a:	b29b      	uxth	r3, r3
 801e52c:	f101 0801 	add.w	r8, r1, #1
 801e530:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e534:	f103 0e01 	add.w	lr, r3, #1
 801e538:	f102 0801 	add.w	r8, r2, #1
 801e53c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e540:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e544:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e548:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e54c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e550:	ea4e 0101 	orr.w	r1, lr, r1
 801e554:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e558:	ea41 0108 	orr.w	r1, r1, r8
 801e55c:	f820 1b02 	strh.w	r1, [r0], #2
 801e560:	e7b6      	b.n	801e4d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e562:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e564:	881b      	ldrh	r3, [r3, #0]
 801e566:	1b9b      	subs	r3, r3, r6
 801e568:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e56c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e570:	1b9b      	subs	r3, r3, r6
 801e572:	441c      	add	r4, r3
 801e574:	e7a6      	b.n	801e4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e576:	491b      	ldr	r1, [pc, #108]	; (801e5e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e578:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e57c:	2203      	movs	r2, #3
 801e57e:	2504      	movs	r5, #4
 801e580:	4550      	cmp	r0, sl
 801e582:	d228      	bcs.n	801e5d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e584:	eb00 0c09 	add.w	ip, r0, r9
 801e588:	4560      	cmp	r0, ip
 801e58a:	4623      	mov	r3, r4
 801e58c:	d219      	bcs.n	801e5c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e58e:	f893 e000 	ldrb.w	lr, [r3]
 801e592:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e596:	eb07 0b0e 	add.w	fp, r7, lr
 801e59a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e59e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e5a2:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e5a6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e5aa:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e5ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e5b2:	ea43 030b 	orr.w	r3, r3, fp
 801e5b6:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e5ba:	3401      	adds	r4, #1
 801e5bc:	f820 3b02 	strh.w	r3, [r0], #2
 801e5c0:	e7e2      	b.n	801e588 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e5c2:	f8b8 3000 	ldrh.w	r3, [r8]
 801e5c6:	1b9b      	subs	r3, r3, r6
 801e5c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e5cc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e5d0:	1b9b      	subs	r3, r3, r6
 801e5d2:	441c      	add	r4, r3
 801e5d4:	e7d4      	b.n	801e580 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e5d6:	4b04      	ldr	r3, [pc, #16]	; (801e5e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e5d8:	6818      	ldr	r0, [r3, #0]
 801e5da:	6803      	ldr	r3, [r0, #0]
 801e5dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e5de:	4798      	blx	r3
 801e5e0:	e750      	b.n	801e484 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e5e2:	bf00      	nop
 801e5e4:	fffff800 	.word	0xfffff800
 801e5e8:	20012da4 	.word	0x20012da4
 801e5ec:	20012d9e 	.word	0x20012d9e

0801e5f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e5f0:	b4f0      	push	{r4, r5, r6, r7}
 801e5f2:	460c      	mov	r4, r1
 801e5f4:	4611      	mov	r1, r2
 801e5f6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e5fa:	780f      	ldrb	r7, [r1, #0]
 801e5fc:	784e      	ldrb	r6, [r1, #1]
 801e5fe:	2f01      	cmp	r7, #1
 801e600:	461a      	mov	r2, r3
 801e602:	9b04      	ldr	r3, [sp, #16]
 801e604:	d036      	beq.n	801e674 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e606:	d31e      	bcc.n	801e646 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e608:	2f02      	cmp	r7, #2
 801e60a:	d14a      	bne.n	801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e60c:	2e03      	cmp	r6, #3
 801e60e:	d848      	bhi.n	801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e610:	e8df f006 	tbb	[pc, r6]
 801e614:	16140702 	.word	0x16140702
 801e618:	9504      	str	r5, [sp, #16]
 801e61a:	4620      	mov	r0, r4
 801e61c:	bcf0      	pop	{r4, r5, r6, r7}
 801e61e:	f7ff be09 	b.w	801e234 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e622:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e624:	2800      	cmp	r0, #0
 801e626:	d03c      	beq.n	801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e628:	6806      	ldr	r6, [r0, #0]
 801e62a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e62e:	68b5      	ldr	r5, [r6, #8]
 801e630:	4613      	mov	r3, r2
 801e632:	46ac      	mov	ip, r5
 801e634:	460a      	mov	r2, r1
 801e636:	4621      	mov	r1, r4
 801e638:	bcf0      	pop	{r4, r5, r6, r7}
 801e63a:	4760      	bx	ip
 801e63c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e63e:	e7f1      	b.n	801e624 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e640:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e644:	e7ee      	b.n	801e624 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e646:	2e03      	cmp	r6, #3
 801e648:	d82b      	bhi.n	801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e64a:	e8df f006 	tbb	[pc, r6]
 801e64e:	0702      	.short	0x0702
 801e650:	100e      	.short	0x100e
 801e652:	9504      	str	r5, [sp, #16]
 801e654:	4620      	mov	r0, r4
 801e656:	bcf0      	pop	{r4, r5, r6, r7}
 801e658:	f7ff bd06 	b.w	801e068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e65c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e65e:	b300      	cbz	r0, 801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e660:	6806      	ldr	r6, [r0, #0]
 801e662:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e666:	68f5      	ldr	r5, [r6, #12]
 801e668:	e7e2      	b.n	801e630 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e66a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e66c:	e7f7      	b.n	801e65e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e66e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e672:	e7f4      	b.n	801e65e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e674:	2e03      	cmp	r6, #3
 801e676:	d814      	bhi.n	801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e678:	e8df f006 	tbb	[pc, r6]
 801e67c:	100e0702 	.word	0x100e0702
 801e680:	9504      	str	r5, [sp, #16]
 801e682:	4620      	mov	r0, r4
 801e684:	bcf0      	pop	{r4, r5, r6, r7}
 801e686:	f7ff bea1 	b.w	801e3cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e68a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e68c:	b148      	cbz	r0, 801e6a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e68e:	6806      	ldr	r6, [r0, #0]
 801e690:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e694:	6935      	ldr	r5, [r6, #16]
 801e696:	e7cb      	b.n	801e630 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e698:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e69a:	e7f7      	b.n	801e68c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e69c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e6a0:	e7f4      	b.n	801e68c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e6a2:	bcf0      	pop	{r4, r5, r6, r7}
 801e6a4:	4770      	bx	lr
	...

0801e6a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6ac:	4604      	mov	r4, r0
 801e6ae:	b087      	sub	sp, #28
 801e6b0:	6810      	ldr	r0, [r2, #0]
 801e6b2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e6b6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e8f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e6ba:	460e      	mov	r6, r1
 801e6bc:	6851      	ldr	r1, [r2, #4]
 801e6be:	ad02      	add	r5, sp, #8
 801e6c0:	c503      	stmia	r5!, {r0, r1}
 801e6c2:	6818      	ldr	r0, [r3, #0]
 801e6c4:	6859      	ldr	r1, [r3, #4]
 801e6c6:	ad04      	add	r5, sp, #16
 801e6c8:	4617      	mov	r7, r2
 801e6ca:	c503      	stmia	r5!, {r0, r1}
 801e6cc:	a802      	add	r0, sp, #8
 801e6ce:	f7f7 f9b3 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e6d2:	4639      	mov	r1, r7
 801e6d4:	a804      	add	r0, sp, #16
 801e6d6:	f7f7 f9f3 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e6da:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e6de:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e6e2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e6e6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e6ea:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e6ee:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e6f2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e6f6:	440e      	add	r6, r1
 801e6f8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e6fc:	440a      	add	r2, r1
 801e6fe:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e702:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e706:	4413      	add	r3, r2
 801e708:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e70c:	4b77      	ldr	r3, [pc, #476]	; (801e8ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e70e:	6818      	ldr	r0, [r3, #0]
 801e710:	6803      	ldr	r3, [r0, #0]
 801e712:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e714:	4798      	blx	r3
 801e716:	f8b9 b000 	ldrh.w	fp, [r9]
 801e71a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e71e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e722:	fb0b 2303 	mla	r3, fp, r3, r2
 801e726:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e72a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e72e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e732:	fb05 f50b 	mul.w	r5, r5, fp
 801e736:	9300      	str	r3, [sp, #0]
 801e738:	d069      	beq.n	801e80e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e73a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e73e:	4558      	cmp	r0, fp
 801e740:	f080 80cc 	bcs.w	801e8dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e744:	9b00      	ldr	r3, [sp, #0]
 801e746:	18c3      	adds	r3, r0, r3
 801e748:	9301      	str	r3, [sp, #4]
 801e74a:	4631      	mov	r1, r6
 801e74c:	9b01      	ldr	r3, [sp, #4]
 801e74e:	4298      	cmp	r0, r3
 801e750:	d24f      	bcs.n	801e7f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e752:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e756:	2a00      	cmp	r2, #0
 801e758:	d048      	beq.n	801e7ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e75a:	fb0a f202 	mul.w	r2, sl, r2
 801e75e:	1c53      	adds	r3, r2, #1
 801e760:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e764:	121b      	asrs	r3, r3, #8
 801e766:	d041      	beq.n	801e7ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e768:	8802      	ldrh	r2, [r0, #0]
 801e76a:	f8b4 c000 	ldrh.w	ip, [r4]
 801e76e:	b29e      	uxth	r6, r3
 801e770:	1215      	asrs	r5, r2, #8
 801e772:	43db      	mvns	r3, r3
 801e774:	b2db      	uxtb	r3, r3
 801e776:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e77a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e77e:	fb15 f503 	smulbb	r5, r5, r3
 801e782:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e786:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e78a:	00d2      	lsls	r2, r2, #3
 801e78c:	fb07 5706 	mla	r7, r7, r6, r5
 801e790:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e794:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e798:	b2d2      	uxtb	r2, r2
 801e79a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e79e:	b2bf      	uxth	r7, r7
 801e7a0:	fb1e fe03 	smulbb	lr, lr, r3
 801e7a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e7a8:	fa5f fc8c 	uxtb.w	ip, ip
 801e7ac:	fb12 f203 	smulbb	r2, r2, r3
 801e7b0:	fb05 e506 	mla	r5, r5, r6, lr
 801e7b4:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e7b8:	f107 0e01 	add.w	lr, r7, #1
 801e7bc:	fa1f fc8c 	uxth.w	ip, ip
 801e7c0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e7c4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e7c8:	f10c 0701 	add.w	r7, ip, #1
 801e7cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e7d0:	b2ad      	uxth	r5, r5
 801e7d2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e7d6:	ea47 070e 	orr.w	r7, r7, lr
 801e7da:	f105 0e01 	add.w	lr, r5, #1
 801e7de:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e7e2:	096d      	lsrs	r5, r5, #5
 801e7e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7e8:	432f      	orrs	r7, r5
 801e7ea:	8007      	strh	r7, [r0, #0]
 801e7ec:	3002      	adds	r0, #2
 801e7ee:	3402      	adds	r4, #2
 801e7f0:	e7ac      	b.n	801e74c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e7f2:	f8b9 3000 	ldrh.w	r3, [r9]
 801e7f6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e7fa:	eba3 0308 	sub.w	r3, r3, r8
 801e7fe:	eba6 0608 	sub.w	r6, r6, r8
 801e802:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e806:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e80a:	440e      	add	r6, r1
 801e80c:	e797      	b.n	801e73e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e80e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e812:	42a8      	cmp	r0, r5
 801e814:	d262      	bcs.n	801e8dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e816:	9b00      	ldr	r3, [sp, #0]
 801e818:	4631      	mov	r1, r6
 801e81a:	eb00 0b03 	add.w	fp, r0, r3
 801e81e:	4558      	cmp	r0, fp
 801e820:	d24e      	bcs.n	801e8c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e822:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e826:	b12b      	cbz	r3, 801e834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e828:	2bff      	cmp	r3, #255	; 0xff
 801e82a:	f8b4 e000 	ldrh.w	lr, [r4]
 801e82e:	d104      	bne.n	801e83a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e830:	f8a0 e000 	strh.w	lr, [r0]
 801e834:	3002      	adds	r0, #2
 801e836:	3402      	adds	r4, #2
 801e838:	e7f1      	b.n	801e81e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e83a:	8802      	ldrh	r2, [r0, #0]
 801e83c:	b29f      	uxth	r7, r3
 801e83e:	1216      	asrs	r6, r2, #8
 801e840:	43db      	mvns	r3, r3
 801e842:	b2db      	uxtb	r3, r3
 801e844:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e848:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e84c:	fb16 f603 	smulbb	r6, r6, r3
 801e850:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e854:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e858:	00d2      	lsls	r2, r2, #3
 801e85a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e85e:	b2d2      	uxtb	r2, r2
 801e860:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e864:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e868:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e86c:	fb1a fa03 	smulbb	sl, sl, r3
 801e870:	fa1f fc8c 	uxth.w	ip, ip
 801e874:	fb12 f303 	smulbb	r3, r2, r3
 801e878:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e87c:	fa5f fe8e 	uxtb.w	lr, lr
 801e880:	fb06 a607 	mla	r6, r6, r7, sl
 801e884:	f10c 0201 	add.w	r2, ip, #1
 801e888:	fb0e 3307 	mla	r3, lr, r7, r3
 801e88c:	b2b6      	uxth	r6, r6
 801e88e:	b29b      	uxth	r3, r3
 801e890:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e894:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e898:	f106 0a01 	add.w	sl, r6, #1
 801e89c:	f103 0c01 	add.w	ip, r3, #1
 801e8a0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e8a4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e8a8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e8ac:	0976      	lsrs	r6, r6, #5
 801e8ae:	ea4c 0c02 	orr.w	ip, ip, r2
 801e8b2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e8b6:	ea4c 0c06 	orr.w	ip, ip, r6
 801e8ba:	f8a0 c000 	strh.w	ip, [r0]
 801e8be:	e7b9      	b.n	801e834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e8c0:	f8b9 3000 	ldrh.w	r3, [r9]
 801e8c4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e8c8:	eba3 0308 	sub.w	r3, r3, r8
 801e8cc:	eba6 0608 	sub.w	r6, r6, r8
 801e8d0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e8d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e8d8:	440e      	add	r6, r1
 801e8da:	e79a      	b.n	801e812 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e8dc:	4b03      	ldr	r3, [pc, #12]	; (801e8ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e8de:	6818      	ldr	r0, [r3, #0]
 801e8e0:	6803      	ldr	r3, [r0, #0]
 801e8e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e8e4:	4798      	blx	r3
 801e8e6:	b007      	add	sp, #28
 801e8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8ec:	20012da4 	.word	0x20012da4
 801e8f0:	20012d9e 	.word	0x20012d9e

0801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8f8:	b089      	sub	sp, #36	; 0x24
 801e8fa:	4682      	mov	sl, r0
 801e8fc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e900:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e902:	460f      	mov	r7, r1
 801e904:	4691      	mov	r9, r2
 801e906:	4698      	mov	r8, r3
 801e908:	2e00      	cmp	r6, #0
 801e90a:	d03d      	beq.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e90c:	4608      	mov	r0, r1
 801e90e:	f7fa fe59 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e912:	4605      	mov	r5, r0
 801e914:	4638      	mov	r0, r7
 801e916:	f7fa fe89 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e91a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e91e:	4638      	mov	r0, r7
 801e920:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e924:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e928:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e92c:	f7fa ff36 	bl	801979c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e930:	4605      	mov	r5, r0
 801e932:	4638      	mov	r0, r7
 801e934:	f7fa ff62 	bl	80197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e938:	4681      	mov	r9, r0
 801e93a:	4638      	mov	r0, r7
 801e93c:	f7fa ffb2 	bl	80198a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e940:	280b      	cmp	r0, #11
 801e942:	d821      	bhi.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e944:	e8df f000 	tbb	[pc, r0]
 801e948:	2006aebe 	.word	0x2006aebe
 801e94c:	20202020 	.word	0x20202020
 801e950:	b5202020 	.word	0xb5202020
 801e954:	4bb0      	ldr	r3, [pc, #704]	; (801ec18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e956:	6818      	ldr	r0, [r3, #0]
 801e958:	6803      	ldr	r3, [r0, #0]
 801e95a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e95c:	4798      	blx	r3
 801e95e:	2eff      	cmp	r6, #255	; 0xff
 801e960:	d101      	bne.n	801e966 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e962:	0683      	lsls	r3, r0, #26
 801e964:	d506      	bpl.n	801e974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e966:	4633      	mov	r3, r6
 801e968:	4622      	mov	r2, r4
 801e96a:	a902      	add	r1, sp, #8
 801e96c:	4628      	mov	r0, r5
 801e96e:	f7ff f909 	bl	801db84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e972:	e009      	b.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e974:	4638      	mov	r0, r7
 801e976:	f7fa fed9 	bl	801972c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e97a:	b940      	cbnz	r0, 801e98e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e97c:	4623      	mov	r3, r4
 801e97e:	aa02      	add	r2, sp, #8
 801e980:	4629      	mov	r1, r5
 801e982:	4650      	mov	r0, sl
 801e984:	f7ff f9e4 	bl	801dd50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e988:	b009      	add	sp, #36	; 0x24
 801e98a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e98e:	f10d 0818 	add.w	r8, sp, #24
 801e992:	4639      	mov	r1, r7
 801e994:	4640      	mov	r0, r8
 801e996:	f7fa fe7d 	bl	8019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e99a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e99e:	af04      	add	r7, sp, #16
 801e9a0:	e887 0003 	stmia.w	r7, {r0, r1}
 801e9a4:	4638      	mov	r0, r7
 801e9a6:	4621      	mov	r1, r4
 801e9a8:	f7f2 f8e8 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 801e9ac:	4638      	mov	r0, r7
 801e9ae:	f7f2 f928 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e9b2:	2800      	cmp	r0, #0
 801e9b4:	d1d7      	bne.n	801e966 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e9b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e9ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e9be:	4293      	cmp	r3, r2
 801e9c0:	dd12      	ble.n	801e9e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e9c2:	1a9b      	subs	r3, r3, r2
 801e9c4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e9c8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e9cc:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e9d0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e9d4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e9d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e9dc:	4642      	mov	r2, r8
 801e9de:	4633      	mov	r3, r6
 801e9e0:	a902      	add	r1, sp, #8
 801e9e2:	4628      	mov	r0, r5
 801e9e4:	f7ff f8ce 	bl	801db84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e9e8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e9ec:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e9f0:	4293      	cmp	r3, r2
 801e9f2:	dd12      	ble.n	801ea1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e9f4:	1a9b      	subs	r3, r3, r2
 801e9f6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e9fa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e9fe:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ea02:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ea06:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ea0a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ea0e:	23ff      	movs	r3, #255	; 0xff
 801ea10:	4642      	mov	r2, r8
 801ea12:	a902      	add	r1, sp, #8
 801ea14:	4628      	mov	r0, r5
 801ea16:	f7ff f8b5 	bl	801db84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ea1a:	463b      	mov	r3, r7
 801ea1c:	aa02      	add	r2, sp, #8
 801ea1e:	4629      	mov	r1, r5
 801ea20:	4650      	mov	r0, sl
 801ea22:	f7ff f995 	bl	801dd50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ea26:	88a2      	ldrh	r2, [r4, #4]
 801ea28:	8823      	ldrh	r3, [r4, #0]
 801ea2a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ea2e:	4413      	add	r3, r2
 801ea30:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ea34:	440a      	add	r2, r1
 801ea36:	b29b      	uxth	r3, r3
 801ea38:	b292      	uxth	r2, r2
 801ea3a:	b211      	sxth	r1, r2
 801ea3c:	b218      	sxth	r0, r3
 801ea3e:	4288      	cmp	r0, r1
 801ea40:	dd12      	ble.n	801ea68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801ea42:	1a9b      	subs	r3, r3, r2
 801ea44:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ea48:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801ea4c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ea50:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ea54:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ea58:	23ff      	movs	r3, #255	; 0xff
 801ea5a:	4642      	mov	r2, r8
 801ea5c:	a902      	add	r1, sp, #8
 801ea5e:	4628      	mov	r0, r5
 801ea60:	f8ad 601a 	strh.w	r6, [sp, #26]
 801ea64:	f7ff f88e 	bl	801db84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ea68:	88e2      	ldrh	r2, [r4, #6]
 801ea6a:	8863      	ldrh	r3, [r4, #2]
 801ea6c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ea70:	4413      	add	r3, r2
 801ea72:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ea76:	440a      	add	r2, r1
 801ea78:	b29b      	uxth	r3, r3
 801ea7a:	b292      	uxth	r2, r2
 801ea7c:	b211      	sxth	r1, r2
 801ea7e:	b218      	sxth	r0, r3
 801ea80:	4288      	cmp	r0, r1
 801ea82:	dd81      	ble.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea84:	1a9b      	subs	r3, r3, r2
 801ea86:	f9b4 6000 	ldrsh.w	r6, [r4]
 801ea8a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ea8e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ea92:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ea96:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ea9a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ea9e:	23ff      	movs	r3, #255	; 0xff
 801eaa0:	4642      	mov	r2, r8
 801eaa2:	e762      	b.n	801e96a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801eaa4:	4633      	mov	r3, r6
 801eaa6:	4622      	mov	r2, r4
 801eaa8:	a902      	add	r1, sp, #8
 801eaaa:	4628      	mov	r0, r5
 801eaac:	f7ff f9c0 	bl	801de30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801eab0:	e76a      	b.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eab2:	e9cd 4600 	strd	r4, r6, [sp]
 801eab6:	ab02      	add	r3, sp, #8
 801eab8:	464a      	mov	r2, r9
 801eaba:	4629      	mov	r1, r5
 801eabc:	4650      	mov	r0, sl
 801eabe:	f7ff fd97 	bl	801e5f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801eac2:	e761      	b.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eac4:	4638      	mov	r0, r7
 801eac6:	f7fa fe31 	bl	801972c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801eaca:	b950      	cbnz	r0, 801eae2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801eacc:	e9cd 6000 	strd	r6, r0, [sp]
 801ead0:	f8da 3000 	ldr.w	r3, [sl]
 801ead4:	aa02      	add	r2, sp, #8
 801ead6:	68de      	ldr	r6, [r3, #12]
 801ead8:	4629      	mov	r1, r5
 801eada:	4623      	mov	r3, r4
 801eadc:	4650      	mov	r0, sl
 801eade:	47b0      	blx	r6
 801eae0:	e752      	b.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eae2:	f10d 0818 	add.w	r8, sp, #24
 801eae6:	4639      	mov	r1, r7
 801eae8:	4640      	mov	r0, r8
 801eaea:	f7fa fdd3 	bl	8019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801eaee:	e898 0003 	ldmia.w	r8, {r0, r1}
 801eaf2:	af04      	add	r7, sp, #16
 801eaf4:	e887 0003 	stmia.w	r7, {r0, r1}
 801eaf8:	4638      	mov	r0, r7
 801eafa:	4621      	mov	r1, r4
 801eafc:	f7f2 f83e 	bl	8010b7c <_ZN8touchgfx4RectaNERKS0_>
 801eb00:	4638      	mov	r0, r7
 801eb02:	f7f2 f87e 	bl	8010c02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801eb06:	b138      	cbz	r0, 801eb18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801eb08:	9600      	str	r6, [sp, #0]
 801eb0a:	4623      	mov	r3, r4
 801eb0c:	aa02      	add	r2, sp, #8
 801eb0e:	4649      	mov	r1, r9
 801eb10:	4628      	mov	r0, r5
 801eb12:	f7ff fdc9 	bl	801e6a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb16:	e737      	b.n	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb18:	e9cd 6000 	strd	r6, r0, [sp]
 801eb1c:	f8da 3000 	ldr.w	r3, [sl]
 801eb20:	aa02      	add	r2, sp, #8
 801eb22:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801eb26:	4629      	mov	r1, r5
 801eb28:	463b      	mov	r3, r7
 801eb2a:	4650      	mov	r0, sl
 801eb2c:	47d8      	blx	fp
 801eb2e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801eb32:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801eb36:	4293      	cmp	r3, r2
 801eb38:	dd13      	ble.n	801eb62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801eb3a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801eb3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801eb42:	f8ad 0018 	strh.w	r0, [sp, #24]
 801eb46:	1a9b      	subs	r3, r3, r2
 801eb48:	f8ad 201a 	strh.w	r2, [sp, #26]
 801eb4c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801eb50:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eb54:	9600      	str	r6, [sp, #0]
 801eb56:	4643      	mov	r3, r8
 801eb58:	aa02      	add	r2, sp, #8
 801eb5a:	4649      	mov	r1, r9
 801eb5c:	4628      	mov	r0, r5
 801eb5e:	f7ff fda3 	bl	801e6a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb62:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801eb66:	f9b4 2000 	ldrsh.w	r2, [r4]
 801eb6a:	4293      	cmp	r3, r2
 801eb6c:	dd13      	ble.n	801eb96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801eb6e:	1a9b      	subs	r3, r3, r2
 801eb70:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801eb74:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801eb78:	f8ad 2018 	strh.w	r2, [sp, #24]
 801eb7c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801eb80:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eb84:	f8ad 101e 	strh.w	r1, [sp, #30]
 801eb88:	9600      	str	r6, [sp, #0]
 801eb8a:	4643      	mov	r3, r8
 801eb8c:	aa02      	add	r2, sp, #8
 801eb8e:	4649      	mov	r1, r9
 801eb90:	4628      	mov	r0, r5
 801eb92:	f7ff fd89 	bl	801e6a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb96:	88a2      	ldrh	r2, [r4, #4]
 801eb98:	8823      	ldrh	r3, [r4, #0]
 801eb9a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801eb9e:	4413      	add	r3, r2
 801eba0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801eba4:	440a      	add	r2, r1
 801eba6:	b29b      	uxth	r3, r3
 801eba8:	b292      	uxth	r2, r2
 801ebaa:	b211      	sxth	r1, r2
 801ebac:	b218      	sxth	r0, r3
 801ebae:	4288      	cmp	r0, r1
 801ebb0:	dd13      	ble.n	801ebda <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801ebb2:	1a9b      	subs	r3, r3, r2
 801ebb4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ebb8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801ebbc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ebc0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ebc4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ebc8:	9600      	str	r6, [sp, #0]
 801ebca:	4643      	mov	r3, r8
 801ebcc:	aa02      	add	r2, sp, #8
 801ebce:	4649      	mov	r1, r9
 801ebd0:	4628      	mov	r0, r5
 801ebd2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801ebd6:	f7ff fd67 	bl	801e6a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ebda:	88e2      	ldrh	r2, [r4, #6]
 801ebdc:	8863      	ldrh	r3, [r4, #2]
 801ebde:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ebe2:	4413      	add	r3, r2
 801ebe4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ebe8:	440a      	add	r2, r1
 801ebea:	b29b      	uxth	r3, r3
 801ebec:	b292      	uxth	r2, r2
 801ebee:	b211      	sxth	r1, r2
 801ebf0:	b218      	sxth	r0, r3
 801ebf2:	4288      	cmp	r0, r1
 801ebf4:	f77f aec8 	ble.w	801e988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ebf8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ebfc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ec00:	f8ad 7018 	strh.w	r7, [sp, #24]
 801ec04:	1a9b      	subs	r3, r3, r2
 801ec06:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ec0a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ec0e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ec12:	9600      	str	r6, [sp, #0]
 801ec14:	4643      	mov	r3, r8
 801ec16:	e779      	b.n	801eb0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ec18:	20012da4 	.word	0x20012da4

0801ec1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ec1c:	b180      	cbz	r0, 801ec40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ec1e:	2903      	cmp	r1, #3
 801ec20:	d81c      	bhi.n	801ec5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ec22:	e8df f001 	tbb	[pc, r1]
 801ec26:	1d02      	.short	0x1d02
 801ec28:	1f08      	.short	0x1f08
 801ec2a:	4b10      	ldr	r3, [pc, #64]	; (801ec6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ec2c:	8818      	ldrh	r0, [r3, #0]
 801ec2e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec32:	4240      	negs	r0, r0
 801ec34:	4770      	bx	lr
 801ec36:	4b0d      	ldr	r3, [pc, #52]	; (801ec6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ec38:	8818      	ldrh	r0, [r3, #0]
 801ec3a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec3e:	4770      	bx	lr
 801ec40:	2903      	cmp	r1, #3
 801ec42:	d80b      	bhi.n	801ec5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ec44:	a301      	add	r3, pc, #4	; (adr r3, 801ec4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ec46:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ec4a:	bf00      	nop
 801ec4c:	0801ec61 	.word	0x0801ec61
 801ec50:	0801ec37 	.word	0x0801ec37
 801ec54:	0801ec65 	.word	0x0801ec65
 801ec58:	0801ec2b 	.word	0x0801ec2b
 801ec5c:	2000      	movs	r0, #0
 801ec5e:	4770      	bx	lr
 801ec60:	2001      	movs	r0, #1
 801ec62:	4770      	bx	lr
 801ec64:	f04f 30ff 	mov.w	r0, #4294967295
 801ec68:	4770      	bx	lr
 801ec6a:	bf00      	nop
 801ec6c:	20012d9e 	.word	0x20012d9e

0801ec70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ec70:	b180      	cbz	r0, 801ec94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ec72:	2903      	cmp	r1, #3
 801ec74:	d81c      	bhi.n	801ecb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ec76:	e8df f001 	tbb	[pc, r1]
 801ec7a:	021d      	.short	0x021d
 801ec7c:	071f      	.short	0x071f
 801ec7e:	4b10      	ldr	r3, [pc, #64]	; (801ecc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ec80:	8818      	ldrh	r0, [r3, #0]
 801ec82:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec86:	4770      	bx	lr
 801ec88:	4b0d      	ldr	r3, [pc, #52]	; (801ecc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ec8a:	8818      	ldrh	r0, [r3, #0]
 801ec8c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec90:	4240      	negs	r0, r0
 801ec92:	4770      	bx	lr
 801ec94:	2903      	cmp	r1, #3
 801ec96:	d80b      	bhi.n	801ecb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ec98:	a301      	add	r3, pc, #4	; (adr r3, 801eca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ec9a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ec9e:	bf00      	nop
 801eca0:	0801ec7f 	.word	0x0801ec7f
 801eca4:	0801ecb9 	.word	0x0801ecb9
 801eca8:	0801ec89 	.word	0x0801ec89
 801ecac:	0801ecb5 	.word	0x0801ecb5
 801ecb0:	2000      	movs	r0, #0
 801ecb2:	4770      	bx	lr
 801ecb4:	2001      	movs	r0, #1
 801ecb6:	4770      	bx	lr
 801ecb8:	f04f 30ff 	mov.w	r0, #4294967295
 801ecbc:	4770      	bx	lr
 801ecbe:	bf00      	nop
 801ecc0:	20012d9e 	.word	0x20012d9e

0801ecc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ecc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecc8:	b099      	sub	sp, #100	; 0x64
 801ecca:	910b      	str	r1, [sp, #44]	; 0x2c
 801eccc:	a914      	add	r1, sp, #80	; 0x50
 801ecce:	e881 000c 	stmia.w	r1, {r2, r3}
 801ecd2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ecd6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ecda:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ecde:	9309      	str	r3, [sp, #36]	; 0x24
 801ece0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ece4:	9310      	str	r3, [sp, #64]	; 0x40
 801ece6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ecea:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ecee:	930c      	str	r3, [sp, #48]	; 0x30
 801ecf0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ecf4:	798f      	ldrb	r7, [r1, #6]
 801ecf6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ecfa:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ecfe:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ed02:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ed06:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ed0a:	431f      	orrs	r7, r3
 801ed0c:	f000 8195 	beq.w	801f03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed10:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ed14:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ed18:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ed1c:	ea59 0903 	orrs.w	r9, r9, r3
 801ed20:	f000 818b 	beq.w	801f03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed24:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ed28:	b29b      	uxth	r3, r3
 801ed2a:	2d00      	cmp	r5, #0
 801ed2c:	f000 812e 	beq.w	801ef8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ed30:	1aed      	subs	r5, r5, r3
 801ed32:	b2ad      	uxth	r5, r5
 801ed34:	042b      	lsls	r3, r5, #16
 801ed36:	d502      	bpl.n	801ed3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ed38:	1b64      	subs	r4, r4, r5
 801ed3a:	b224      	sxth	r4, r4
 801ed3c:	2500      	movs	r5, #0
 801ed3e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ed42:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ed46:	428c      	cmp	r4, r1
 801ed48:	b28b      	uxth	r3, r1
 801ed4a:	bfbf      	itttt	lt
 801ed4c:	18ed      	addlt	r5, r5, r3
 801ed4e:	1b2c      	sublt	r4, r5, r4
 801ed50:	b2a5      	uxthlt	r5, r4
 801ed52:	460c      	movlt	r4, r1
 801ed54:	8891      	ldrh	r1, [r2, #4]
 801ed56:	440b      	add	r3, r1
 801ed58:	b21b      	sxth	r3, r3
 801ed5a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed5c:	88d3      	ldrh	r3, [r2, #6]
 801ed5e:	8852      	ldrh	r2, [r2, #2]
 801ed60:	4413      	add	r3, r2
 801ed62:	b21b      	sxth	r3, r3
 801ed64:	930d      	str	r3, [sp, #52]	; 0x34
 801ed66:	4bbe      	ldr	r3, [pc, #760]	; (801f060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ed68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ed6a:	f893 b000 	ldrb.w	fp, [r3]
 801ed6e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ed72:	f1dc 0300 	rsbs	r3, ip, #0
 801ed76:	eb43 030c 	adc.w	r3, r3, ip
 801ed7a:	930e      	str	r3, [sp, #56]	; 0x38
 801ed7c:	4621      	mov	r1, r4
 801ed7e:	4653      	mov	r3, sl
 801ed80:	a814      	add	r0, sp, #80	; 0x50
 801ed82:	f7f6 fcce 	bl	8015722 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ed86:	4621      	mov	r1, r4
 801ed88:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ed8c:	4653      	mov	r3, sl
 801ed8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ed90:	a814      	add	r0, sp, #80	; 0x50
 801ed92:	f7f6 fce3 	bl	801575c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ed96:	a918      	add	r1, sp, #96	; 0x60
 801ed98:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ed9c:	a817      	add	r0, sp, #92	; 0x5c
 801ed9e:	f7f6 fe09 	bl	80159b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801eda2:	f1ba 0f00 	cmp.w	sl, #0
 801eda6:	f040 80f4 	bne.w	801ef92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801edaa:	f1bb 0f01 	cmp.w	fp, #1
 801edae:	f040 80f8 	bne.w	801efa2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801edb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edb4:	2b00      	cmp	r3, #0
 801edb6:	f040 8145 	bne.w	801f044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801edba:	b2ba      	uxth	r2, r7
 801edbc:	b905      	cbnz	r5, 801edc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801edbe:	b16e      	cbz	r6, 801eddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801edc0:	fb06 5302 	mla	r3, r6, r2, r5
 801edc4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801edc6:	fb08 f303 	mul.w	r3, r8, r3
 801edca:	4631      	mov	r1, r6
 801edcc:	f003 0607 	and.w	r6, r3, #7
 801edd0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801edd4:	9328      	str	r3, [sp, #160]	; 0xa0
 801edd6:	eba9 0301 	sub.w	r3, r9, r1
 801edda:	930a      	str	r3, [sp, #40]	; 0x28
 801eddc:	4651      	mov	r1, sl
 801edde:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ede0:	f7ff ff1c 	bl	801ec1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ede4:	4681      	mov	r9, r0
 801ede6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ede8:	f7ff ff42 	bl	801ec70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801edec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801edee:	9909      	ldr	r1, [sp, #36]	; 0x24
 801edf0:	eba3 0a01 	sub.w	sl, r3, r1
 801edf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801edf6:	459a      	cmp	sl, r3
 801edf8:	bfa8      	it	ge
 801edfa:	469a      	movge	sl, r3
 801edfc:	f1ba 0f00 	cmp.w	sl, #0
 801ee00:	4683      	mov	fp, r0
 801ee02:	f340 811a 	ble.w	801f03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee08:	1b64      	subs	r4, r4, r5
 801ee0a:	1b1c      	subs	r4, r3, r4
 801ee0c:	42bc      	cmp	r4, r7
 801ee0e:	bfd4      	ite	le
 801ee10:	ebc5 0504 	rsble	r5, r5, r4
 801ee14:	ebc5 0507 	rsbgt	r5, r5, r7
 801ee18:	2d00      	cmp	r5, #0
 801ee1a:	f340 810e 	ble.w	801f03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee1e:	1b52      	subs	r2, r2, r5
 801ee20:	fb08 f302 	mul.w	r3, r8, r2
 801ee24:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee28:	2b00      	cmp	r3, #0
 801ee2a:	f040 8116 	bne.w	801f05a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ee2e:	4b8d      	ldr	r3, [pc, #564]	; (801f064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ee30:	6818      	ldr	r0, [r3, #0]
 801ee32:	6803      	ldr	r3, [r0, #0]
 801ee34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee36:	4798      	blx	r3
 801ee38:	2301      	movs	r3, #1
 801ee3a:	fa03 f308 	lsl.w	r3, r3, r8
 801ee3e:	4a8a      	ldr	r2, [pc, #552]	; (801f068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ee40:	3b01      	subs	r3, #1
 801ee42:	b2db      	uxtb	r3, r3
 801ee44:	8811      	ldrh	r1, [r2, #0]
 801ee46:	930e      	str	r3, [sp, #56]	; 0x38
 801ee48:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ee4c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ee50:	fb01 2303 	mla	r3, r1, r3, r2
 801ee54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ee58:	930a      	str	r3, [sp, #40]	; 0x28
 801ee5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee5c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ee60:	9313      	str	r3, [sp, #76]	; 0x4c
 801ee62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee64:	0a19      	lsrs	r1, r3, #8
 801ee66:	b2cb      	uxtb	r3, r1
 801ee68:	9312      	str	r3, [sp, #72]	; 0x48
 801ee6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee6c:	b2db      	uxtb	r3, r3
 801ee6e:	9311      	str	r3, [sp, #68]	; 0x44
 801ee70:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee72:	095a      	lsrs	r2, r3, #5
 801ee74:	4b7d      	ldr	r3, [pc, #500]	; (801f06c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ee76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee7a:	400b      	ands	r3, r1
 801ee7c:	4313      	orrs	r3, r2
 801ee7e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ee80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee84:	4313      	orrs	r3, r2
 801ee86:	b29b      	uxth	r3, r3
 801ee88:	9310      	str	r3, [sp, #64]	; 0x40
 801ee8a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee8c:	781a      	ldrb	r2, [r3, #0]
 801ee8e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ee92:	4132      	asrs	r2, r6
 801ee94:	fb05 b919 	mls	r9, r5, r9, fp
 801ee98:	fb03 fb05 	mul.w	fp, r3, r5
 801ee9c:	b2d2      	uxtb	r2, r2
 801ee9e:	930d      	str	r3, [sp, #52]	; 0x34
 801eea0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801eea4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801eea8:	f0c0 80f5 	bcc.w	801f096 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801eeac:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801eeb0:	46ae      	mov	lr, r5
 801eeb2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801eeb6:	f0c0 80dd 	bcc.w	801f074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801eeba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eebc:	4013      	ands	r3, r2
 801eebe:	d055      	beq.n	801ef6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801eec0:	20ff      	movs	r0, #255	; 0xff
 801eec2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eec4:	fb90 f1f1 	sdiv	r1, r0, r1
 801eec8:	434b      	muls	r3, r1
 801eeca:	2bfe      	cmp	r3, #254	; 0xfe
 801eecc:	dd03      	ble.n	801eed6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801eece:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eed0:	4281      	cmp	r1, r0
 801eed2:	f000 80cd 	beq.w	801f070 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801eed6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eed8:	f8bc 4000 	ldrh.w	r4, [ip]
 801eedc:	fb11 f303 	smulbb	r3, r1, r3
 801eee0:	b29b      	uxth	r3, r3
 801eee2:	1c59      	adds	r1, r3, #1
 801eee4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801eee8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eeec:	b29f      	uxth	r7, r3
 801eeee:	43db      	mvns	r3, r3
 801eef0:	b2db      	uxtb	r3, r3
 801eef2:	9309      	str	r3, [sp, #36]	; 0x24
 801eef4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eef6:	1220      	asrs	r0, r4, #8
 801eef8:	fb13 f907 	smulbb	r9, r3, r7
 801eefc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef02:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ef06:	fb00 9003 	mla	r0, r0, r3, r9
 801ef0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ef0c:	10e1      	asrs	r1, r4, #3
 801ef0e:	fb13 f907 	smulbb	r9, r3, r7
 801ef12:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef18:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ef1c:	fb01 9103 	mla	r1, r1, r3, r9
 801ef20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ef22:	00e4      	lsls	r4, r4, #3
 801ef24:	fb13 f707 	smulbb	r7, r3, r7
 801ef28:	b2e4      	uxtb	r4, r4
 801ef2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef2c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ef30:	fb04 7403 	mla	r4, r4, r3, r7
 801ef34:	b280      	uxth	r0, r0
 801ef36:	b2a4      	uxth	r4, r4
 801ef38:	1c43      	adds	r3, r0, #1
 801ef3a:	f104 0901 	add.w	r9, r4, #1
 801ef3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef42:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ef46:	b289      	uxth	r1, r1
 801ef48:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ef4c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ef50:	ea49 0000 	orr.w	r0, r9, r0
 801ef54:	f101 0901 	add.w	r9, r1, #1
 801ef58:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ef5c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ef60:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ef64:	ea40 0009 	orr.w	r0, r0, r9
 801ef68:	f8ac 0000 	strh.w	r0, [ip]
 801ef6c:	4446      	add	r6, r8
 801ef6e:	b2b6      	uxth	r6, r6
 801ef70:	2e07      	cmp	r6, #7
 801ef72:	bf81      	itttt	hi
 801ef74:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ef76:	785a      	ldrbhi	r2, [r3, #1]
 801ef78:	3301      	addhi	r3, #1
 801ef7a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ef7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ef7e:	bf9a      	itte	ls
 801ef80:	fa42 f208 	asrls.w	r2, r2, r8
 801ef84:	b2d2      	uxtbls	r2, r2
 801ef86:	2600      	movhi	r6, #0
 801ef88:	449c      	add	ip, r3
 801ef8a:	e792      	b.n	801eeb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ef8c:	441c      	add	r4, r3
 801ef8e:	b224      	sxth	r4, r4
 801ef90:	e6d5      	b.n	801ed3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ef92:	f1ba 0f01 	cmp.w	sl, #1
 801ef96:	f47f af0c 	bne.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef9a:	f1bb 0f01 	cmp.w	fp, #1
 801ef9e:	f47f af08 	bne.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801efa2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801efa6:	f8db 0000 	ldr.w	r0, [fp]
 801efaa:	6803      	ldr	r3, [r0, #0]
 801efac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801efae:	4798      	blx	r3
 801efb0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801efb4:	465a      	mov	r2, fp
 801efb6:	d006      	beq.n	801efc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801efb8:	f1b8 0f04 	cmp.w	r8, #4
 801efbc:	d140      	bne.n	801f040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801efbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801efc0:	3300      	adds	r3, #0
 801efc2:	bf18      	it	ne
 801efc4:	2301      	movne	r3, #1
 801efc6:	0580      	lsls	r0, r0, #22
 801efc8:	d56e      	bpl.n	801f0a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801efca:	f1b8 0f08 	cmp.w	r8, #8
 801efce:	d16b      	bne.n	801f0a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801efd0:	2b00      	cmp	r3, #0
 801efd2:	bf0c      	ite	eq
 801efd4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801efd8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801efdc:	2d00      	cmp	r5, #0
 801efde:	f47f aee8 	bne.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801efe2:	2e00      	cmp	r6, #0
 801efe4:	f47f aee5 	bne.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801efe8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801efea:	19e3      	adds	r3, r4, r7
 801efec:	4283      	cmp	r3, r0
 801efee:	f73f aee0 	bgt.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eff2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eff4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801eff6:	444b      	add	r3, r9
 801eff8:	4283      	cmp	r3, r0
 801effa:	f73f aeda 	bgt.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801effe:	6810      	ldr	r0, [r2, #0]
 801f000:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f004:	6804      	ldr	r4, [r0, #0]
 801f006:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f00a:	b2bf      	uxth	r7, r7
 801f00c:	f1b8 0f08 	cmp.w	r8, #8
 801f010:	f04f 0500 	mov.w	r5, #0
 801f014:	bf18      	it	ne
 801f016:	3701      	addne	r7, #1
 801f018:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f01c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f01e:	9104      	str	r1, [sp, #16]
 801f020:	bf18      	it	ne
 801f022:	f027 0701 	bicne.w	r7, r7, #1
 801f026:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f028:	bf18      	it	ne
 801f02a:	b2bf      	uxthne	r7, r7
 801f02c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f030:	e9cd 7900 	strd	r7, r9, [sp]
 801f034:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f036:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f038:	47a0      	blx	r4
 801f03a:	b019      	add	sp, #100	; 0x64
 801f03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f040:	2300      	movs	r3, #0
 801f042:	e7c0      	b.n	801efc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f044:	2208      	movs	r2, #8
 801f046:	fb92 f3f8 	sdiv	r3, r2, r8
 801f04a:	1e5a      	subs	r2, r3, #1
 801f04c:	443a      	add	r2, r7
 801f04e:	fb92 f2f3 	sdiv	r2, r2, r3
 801f052:	fb12 f203 	smulbb	r2, r2, r3
 801f056:	b292      	uxth	r2, r2
 801f058:	e6b0      	b.n	801edbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f05a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f05c:	e6ec      	b.n	801ee38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f05e:	bf00      	nop
 801f060:	20012d9c 	.word	0x20012d9c
 801f064:	20012da4 	.word	0x20012da4
 801f068:	20012d9e 	.word	0x20012d9e
 801f06c:	00fff800 	.word	0x00fff800
 801f070:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f072:	e779      	b.n	801ef68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f074:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f076:	b153      	cbz	r3, 801f08e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f078:	441e      	add	r6, r3
 801f07a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f07c:	b2b6      	uxth	r6, r6
 801f07e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f082:	f006 0607 	and.w	r6, r6, #7
 801f086:	781a      	ldrb	r2, [r3, #0]
 801f088:	9328      	str	r3, [sp, #160]	; 0xa0
 801f08a:	4132      	asrs	r2, r6
 801f08c:	b2d2      	uxtb	r2, r2
 801f08e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f090:	445b      	add	r3, fp
 801f092:	930a      	str	r3, [sp, #40]	; 0x28
 801f094:	e706      	b.n	801eea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f096:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f098:	2b00      	cmp	r3, #0
 801f09a:	d1ce      	bne.n	801f03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f09c:	4b05      	ldr	r3, [pc, #20]	; (801f0b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f09e:	6818      	ldr	r0, [r3, #0]
 801f0a0:	6803      	ldr	r3, [r0, #0]
 801f0a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f0a4:	4798      	blx	r3
 801f0a6:	e7c8      	b.n	801f03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f0a8:	2b00      	cmp	r3, #0
 801f0aa:	f43f ae82 	beq.w	801edb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f0ae:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f0b2:	e793      	b.n	801efdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f0b4:	20012da4 	.word	0x20012da4

0801f0b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f0b8:	b538      	push	{r3, r4, r5, lr}
 801f0ba:	4c15      	ldr	r4, [pc, #84]	; (801f110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f0bc:	7823      	ldrb	r3, [r4, #0]
 801f0be:	f3bf 8f5b 	dmb	ish
 801f0c2:	07da      	lsls	r2, r3, #31
 801f0c4:	4605      	mov	r5, r0
 801f0c6:	d40b      	bmi.n	801f0e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f0c8:	4620      	mov	r0, r4
 801f0ca:	f00a ff16 	bl	8029efa <__cxa_guard_acquire>
 801f0ce:	b138      	cbz	r0, 801f0e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f0d0:	4620      	mov	r0, r4
 801f0d2:	f00a ff1e 	bl	8029f12 <__cxa_guard_release>
 801f0d6:	4a0f      	ldr	r2, [pc, #60]	; (801f114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f0d8:	490f      	ldr	r1, [pc, #60]	; (801f118 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f0da:	4810      	ldr	r0, [pc, #64]	; (801f11c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f0dc:	f00a ff06 	bl	8029eec <__aeabi_atexit>
 801f0e0:	4c0f      	ldr	r4, [pc, #60]	; (801f120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f0e2:	7823      	ldrb	r3, [r4, #0]
 801f0e4:	f3bf 8f5b 	dmb	ish
 801f0e8:	07db      	lsls	r3, r3, #31
 801f0ea:	d40b      	bmi.n	801f104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f0ec:	4620      	mov	r0, r4
 801f0ee:	f00a ff04 	bl	8029efa <__cxa_guard_acquire>
 801f0f2:	b138      	cbz	r0, 801f104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f0f4:	4620      	mov	r0, r4
 801f0f6:	f00a ff0c 	bl	8029f12 <__cxa_guard_release>
 801f0fa:	4a06      	ldr	r2, [pc, #24]	; (801f114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f0fc:	4909      	ldr	r1, [pc, #36]	; (801f124 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f0fe:	480a      	ldr	r0, [pc, #40]	; (801f128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f100:	f00a fef4 	bl	8029eec <__aeabi_atexit>
 801f104:	4b05      	ldr	r3, [pc, #20]	; (801f11c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f106:	612b      	str	r3, [r5, #16]
 801f108:	4b07      	ldr	r3, [pc, #28]	; (801f128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f10a:	616b      	str	r3, [r5, #20]
 801f10c:	bd38      	pop	{r3, r4, r5, pc}
 801f10e:	bf00      	nop
 801f110:	20012e84 	.word	0x20012e84
 801f114:	20000000 	.word	0x20000000
 801f118:	0801bebb 	.word	0x0801bebb
 801f11c:	200000d4 	.word	0x200000d4
 801f120:	20012e88 	.word	0x20012e88
 801f124:	0801beb9 	.word	0x0801beb9
 801f128:	200000d8 	.word	0x200000d8

0801f12c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f12c:	b538      	push	{r3, r4, r5, lr}
 801f12e:	4c15      	ldr	r4, [pc, #84]	; (801f184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f130:	7823      	ldrb	r3, [r4, #0]
 801f132:	f3bf 8f5b 	dmb	ish
 801f136:	07da      	lsls	r2, r3, #31
 801f138:	4605      	mov	r5, r0
 801f13a:	d40b      	bmi.n	801f154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f13c:	4620      	mov	r0, r4
 801f13e:	f00a fedc 	bl	8029efa <__cxa_guard_acquire>
 801f142:	b138      	cbz	r0, 801f154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f144:	4620      	mov	r0, r4
 801f146:	f00a fee4 	bl	8029f12 <__cxa_guard_release>
 801f14a:	4a0f      	ldr	r2, [pc, #60]	; (801f188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f14c:	490f      	ldr	r1, [pc, #60]	; (801f18c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f14e:	4810      	ldr	r0, [pc, #64]	; (801f190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f150:	f00a fecc 	bl	8029eec <__aeabi_atexit>
 801f154:	4c0f      	ldr	r4, [pc, #60]	; (801f194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f156:	7823      	ldrb	r3, [r4, #0]
 801f158:	f3bf 8f5b 	dmb	ish
 801f15c:	07db      	lsls	r3, r3, #31
 801f15e:	d40b      	bmi.n	801f178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f160:	4620      	mov	r0, r4
 801f162:	f00a feca 	bl	8029efa <__cxa_guard_acquire>
 801f166:	b138      	cbz	r0, 801f178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f168:	4620      	mov	r0, r4
 801f16a:	f00a fed2 	bl	8029f12 <__cxa_guard_release>
 801f16e:	4a06      	ldr	r2, [pc, #24]	; (801f188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f170:	4909      	ldr	r1, [pc, #36]	; (801f198 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f172:	480a      	ldr	r0, [pc, #40]	; (801f19c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f174:	f00a feba 	bl	8029eec <__aeabi_atexit>
 801f178:	4b05      	ldr	r3, [pc, #20]	; (801f190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f17a:	60ab      	str	r3, [r5, #8]
 801f17c:	4b07      	ldr	r3, [pc, #28]	; (801f19c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f17e:	60eb      	str	r3, [r5, #12]
 801f180:	bd38      	pop	{r3, r4, r5, pc}
 801f182:	bf00      	nop
 801f184:	20012e5c 	.word	0x20012e5c
 801f188:	20000000 	.word	0x20000000
 801f18c:	0801bebf 	.word	0x0801bebf
 801f190:	200000ac 	.word	0x200000ac
 801f194:	20012e60 	.word	0x20012e60
 801f198:	0801bebd 	.word	0x0801bebd
 801f19c:	200000b0 	.word	0x200000b0

0801f1a0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f1a0:	b510      	push	{r4, lr}
 801f1a2:	4604      	mov	r4, r0
 801f1a4:	f7ff ff88 	bl	801f0b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f1a8:	4620      	mov	r0, r4
 801f1aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f1ae:	f7ff bfbd 	b.w	801f12c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f1b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f1b4:	b538      	push	{r3, r4, r5, lr}
 801f1b6:	4c15      	ldr	r4, [pc, #84]	; (801f20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f1b8:	7823      	ldrb	r3, [r4, #0]
 801f1ba:	f3bf 8f5b 	dmb	ish
 801f1be:	07da      	lsls	r2, r3, #31
 801f1c0:	4605      	mov	r5, r0
 801f1c2:	d40b      	bmi.n	801f1dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f1c4:	4620      	mov	r0, r4
 801f1c6:	f00a fe98 	bl	8029efa <__cxa_guard_acquire>
 801f1ca:	b138      	cbz	r0, 801f1dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f1cc:	4620      	mov	r0, r4
 801f1ce:	f00a fea0 	bl	8029f12 <__cxa_guard_release>
 801f1d2:	4a0f      	ldr	r2, [pc, #60]	; (801f210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f1d4:	490f      	ldr	r1, [pc, #60]	; (801f214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f1d6:	4810      	ldr	r0, [pc, #64]	; (801f218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f1d8:	f00a fe88 	bl	8029eec <__aeabi_atexit>
 801f1dc:	4c0f      	ldr	r4, [pc, #60]	; (801f21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f1de:	7823      	ldrb	r3, [r4, #0]
 801f1e0:	f3bf 8f5b 	dmb	ish
 801f1e4:	07db      	lsls	r3, r3, #31
 801f1e6:	d40b      	bmi.n	801f200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f1e8:	4620      	mov	r0, r4
 801f1ea:	f00a fe86 	bl	8029efa <__cxa_guard_acquire>
 801f1ee:	b138      	cbz	r0, 801f200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f1f0:	4620      	mov	r0, r4
 801f1f2:	f00a fe8e 	bl	8029f12 <__cxa_guard_release>
 801f1f6:	4a06      	ldr	r2, [pc, #24]	; (801f210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f1f8:	4909      	ldr	r1, [pc, #36]	; (801f220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f1fa:	480a      	ldr	r0, [pc, #40]	; (801f224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f1fc:	f00a fe76 	bl	8029eec <__aeabi_atexit>
 801f200:	4b05      	ldr	r3, [pc, #20]	; (801f218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f202:	622b      	str	r3, [r5, #32]
 801f204:	4b07      	ldr	r3, [pc, #28]	; (801f224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f206:	626b      	str	r3, [r5, #36]	; 0x24
 801f208:	bd38      	pop	{r3, r4, r5, pc}
 801f20a:	bf00      	nop
 801f20c:	20012e8c 	.word	0x20012e8c
 801f210:	20000000 	.word	0x20000000
 801f214:	0801beb3 	.word	0x0801beb3
 801f218:	200000dc 	.word	0x200000dc
 801f21c:	20012e90 	.word	0x20012e90
 801f220:	0801beb1 	.word	0x0801beb1
 801f224:	200000e0 	.word	0x200000e0

0801f228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f228:	b538      	push	{r3, r4, r5, lr}
 801f22a:	4c15      	ldr	r4, [pc, #84]	; (801f280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f22c:	7823      	ldrb	r3, [r4, #0]
 801f22e:	f3bf 8f5b 	dmb	ish
 801f232:	07da      	lsls	r2, r3, #31
 801f234:	4605      	mov	r5, r0
 801f236:	d40b      	bmi.n	801f250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f238:	4620      	mov	r0, r4
 801f23a:	f00a fe5e 	bl	8029efa <__cxa_guard_acquire>
 801f23e:	b138      	cbz	r0, 801f250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f240:	4620      	mov	r0, r4
 801f242:	f00a fe66 	bl	8029f12 <__cxa_guard_release>
 801f246:	4a0f      	ldr	r2, [pc, #60]	; (801f284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f248:	490f      	ldr	r1, [pc, #60]	; (801f288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f24a:	4810      	ldr	r0, [pc, #64]	; (801f28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f24c:	f00a fe4e 	bl	8029eec <__aeabi_atexit>
 801f250:	4c0f      	ldr	r4, [pc, #60]	; (801f290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f252:	7823      	ldrb	r3, [r4, #0]
 801f254:	f3bf 8f5b 	dmb	ish
 801f258:	07db      	lsls	r3, r3, #31
 801f25a:	d40b      	bmi.n	801f274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f25c:	4620      	mov	r0, r4
 801f25e:	f00a fe4c 	bl	8029efa <__cxa_guard_acquire>
 801f262:	b138      	cbz	r0, 801f274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f264:	4620      	mov	r0, r4
 801f266:	f00a fe54 	bl	8029f12 <__cxa_guard_release>
 801f26a:	4a06      	ldr	r2, [pc, #24]	; (801f284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f26c:	4909      	ldr	r1, [pc, #36]	; (801f294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f26e:	480a      	ldr	r0, [pc, #40]	; (801f298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f270:	f00a fe3c 	bl	8029eec <__aeabi_atexit>
 801f274:	4b05      	ldr	r3, [pc, #20]	; (801f28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f276:	61ab      	str	r3, [r5, #24]
 801f278:	4b07      	ldr	r3, [pc, #28]	; (801f298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f27a:	61eb      	str	r3, [r5, #28]
 801f27c:	bd38      	pop	{r3, r4, r5, pc}
 801f27e:	bf00      	nop
 801f280:	20012e64 	.word	0x20012e64
 801f284:	20000000 	.word	0x20000000
 801f288:	0801beb7 	.word	0x0801beb7
 801f28c:	200000b4 	.word	0x200000b4
 801f290:	20012e68 	.word	0x20012e68
 801f294:	0801beb5 	.word	0x0801beb5
 801f298:	200000b8 	.word	0x200000b8

0801f29c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f29c:	b510      	push	{r4, lr}
 801f29e:	4604      	mov	r4, r0
 801f2a0:	f7ff ff88 	bl	801f1b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f2a4:	4620      	mov	r0, r4
 801f2a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f2aa:	f7ff bfbd 	b.w	801f228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f2b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f2b0:	b538      	push	{r3, r4, r5, lr}
 801f2b2:	4c15      	ldr	r4, [pc, #84]	; (801f308 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f2b4:	7823      	ldrb	r3, [r4, #0]
 801f2b6:	f3bf 8f5b 	dmb	ish
 801f2ba:	07da      	lsls	r2, r3, #31
 801f2bc:	4605      	mov	r5, r0
 801f2be:	d40b      	bmi.n	801f2d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f2c0:	4620      	mov	r0, r4
 801f2c2:	f00a fe1a 	bl	8029efa <__cxa_guard_acquire>
 801f2c6:	b138      	cbz	r0, 801f2d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f2c8:	4620      	mov	r0, r4
 801f2ca:	f00a fe22 	bl	8029f12 <__cxa_guard_release>
 801f2ce:	4a0f      	ldr	r2, [pc, #60]	; (801f30c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f2d0:	490f      	ldr	r1, [pc, #60]	; (801f310 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f2d2:	4810      	ldr	r0, [pc, #64]	; (801f314 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f2d4:	f00a fe0a 	bl	8029eec <__aeabi_atexit>
 801f2d8:	4c0f      	ldr	r4, [pc, #60]	; (801f318 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f2da:	7823      	ldrb	r3, [r4, #0]
 801f2dc:	f3bf 8f5b 	dmb	ish
 801f2e0:	07db      	lsls	r3, r3, #31
 801f2e2:	d40b      	bmi.n	801f2fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f2e4:	4620      	mov	r0, r4
 801f2e6:	f00a fe08 	bl	8029efa <__cxa_guard_acquire>
 801f2ea:	b138      	cbz	r0, 801f2fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f2ec:	4620      	mov	r0, r4
 801f2ee:	f00a fe10 	bl	8029f12 <__cxa_guard_release>
 801f2f2:	4a06      	ldr	r2, [pc, #24]	; (801f30c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f2f4:	4909      	ldr	r1, [pc, #36]	; (801f31c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f2f6:	480a      	ldr	r0, [pc, #40]	; (801f320 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f2f8:	f00a fdf8 	bl	8029eec <__aeabi_atexit>
 801f2fc:	4b05      	ldr	r3, [pc, #20]	; (801f314 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f2fe:	632b      	str	r3, [r5, #48]	; 0x30
 801f300:	4b07      	ldr	r3, [pc, #28]	; (801f320 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f302:	636b      	str	r3, [r5, #52]	; 0x34
 801f304:	bd38      	pop	{r3, r4, r5, pc}
 801f306:	bf00      	nop
 801f308:	20012e9c 	.word	0x20012e9c
 801f30c:	20000000 	.word	0x20000000
 801f310:	0801beab 	.word	0x0801beab
 801f314:	200000ec 	.word	0x200000ec
 801f318:	20012ea0 	.word	0x20012ea0
 801f31c:	0801bea9 	.word	0x0801bea9
 801f320:	200000f0 	.word	0x200000f0

0801f324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f324:	b538      	push	{r3, r4, r5, lr}
 801f326:	4c15      	ldr	r4, [pc, #84]	; (801f37c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f328:	7823      	ldrb	r3, [r4, #0]
 801f32a:	f3bf 8f5b 	dmb	ish
 801f32e:	07da      	lsls	r2, r3, #31
 801f330:	4605      	mov	r5, r0
 801f332:	d40b      	bmi.n	801f34c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f334:	4620      	mov	r0, r4
 801f336:	f00a fde0 	bl	8029efa <__cxa_guard_acquire>
 801f33a:	b138      	cbz	r0, 801f34c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f33c:	4620      	mov	r0, r4
 801f33e:	f00a fde8 	bl	8029f12 <__cxa_guard_release>
 801f342:	4a0f      	ldr	r2, [pc, #60]	; (801f380 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f344:	490f      	ldr	r1, [pc, #60]	; (801f384 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f346:	4810      	ldr	r0, [pc, #64]	; (801f388 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f348:	f00a fdd0 	bl	8029eec <__aeabi_atexit>
 801f34c:	4c0f      	ldr	r4, [pc, #60]	; (801f38c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f34e:	7823      	ldrb	r3, [r4, #0]
 801f350:	f3bf 8f5b 	dmb	ish
 801f354:	07db      	lsls	r3, r3, #31
 801f356:	d40b      	bmi.n	801f370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f358:	4620      	mov	r0, r4
 801f35a:	f00a fdce 	bl	8029efa <__cxa_guard_acquire>
 801f35e:	b138      	cbz	r0, 801f370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f360:	4620      	mov	r0, r4
 801f362:	f00a fdd6 	bl	8029f12 <__cxa_guard_release>
 801f366:	4a06      	ldr	r2, [pc, #24]	; (801f380 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f368:	4909      	ldr	r1, [pc, #36]	; (801f390 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f36a:	480a      	ldr	r0, [pc, #40]	; (801f394 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f36c:	f00a fdbe 	bl	8029eec <__aeabi_atexit>
 801f370:	4b05      	ldr	r3, [pc, #20]	; (801f388 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f372:	62ab      	str	r3, [r5, #40]	; 0x28
 801f374:	4b07      	ldr	r3, [pc, #28]	; (801f394 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f376:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f378:	bd38      	pop	{r3, r4, r5, pc}
 801f37a:	bf00      	nop
 801f37c:	20012e6c 	.word	0x20012e6c
 801f380:	20000000 	.word	0x20000000
 801f384:	0801beaf 	.word	0x0801beaf
 801f388:	200000bc 	.word	0x200000bc
 801f38c:	20012e70 	.word	0x20012e70
 801f390:	0801bead 	.word	0x0801bead
 801f394:	200000c0 	.word	0x200000c0

0801f398 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f398:	b510      	push	{r4, lr}
 801f39a:	4604      	mov	r4, r0
 801f39c:	f7ff ff88 	bl	801f2b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f3a0:	4620      	mov	r0, r4
 801f3a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f3a6:	f7ff bfbd 	b.w	801f324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f3ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f3ac:	b538      	push	{r3, r4, r5, lr}
 801f3ae:	4c15      	ldr	r4, [pc, #84]	; (801f404 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f3b0:	7823      	ldrb	r3, [r4, #0]
 801f3b2:	f3bf 8f5b 	dmb	ish
 801f3b6:	07da      	lsls	r2, r3, #31
 801f3b8:	4605      	mov	r5, r0
 801f3ba:	d40b      	bmi.n	801f3d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f3bc:	4620      	mov	r0, r4
 801f3be:	f00a fd9c 	bl	8029efa <__cxa_guard_acquire>
 801f3c2:	b138      	cbz	r0, 801f3d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f3c4:	4620      	mov	r0, r4
 801f3c6:	f00a fda4 	bl	8029f12 <__cxa_guard_release>
 801f3ca:	4a0f      	ldr	r2, [pc, #60]	; (801f408 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f3cc:	490f      	ldr	r1, [pc, #60]	; (801f40c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f3ce:	4810      	ldr	r0, [pc, #64]	; (801f410 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f3d0:	f00a fd8c 	bl	8029eec <__aeabi_atexit>
 801f3d4:	4c0f      	ldr	r4, [pc, #60]	; (801f414 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f3d6:	7823      	ldrb	r3, [r4, #0]
 801f3d8:	f3bf 8f5b 	dmb	ish
 801f3dc:	07db      	lsls	r3, r3, #31
 801f3de:	d40b      	bmi.n	801f3f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f3e0:	4620      	mov	r0, r4
 801f3e2:	f00a fd8a 	bl	8029efa <__cxa_guard_acquire>
 801f3e6:	b138      	cbz	r0, 801f3f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f3e8:	4620      	mov	r0, r4
 801f3ea:	f00a fd92 	bl	8029f12 <__cxa_guard_release>
 801f3ee:	4a06      	ldr	r2, [pc, #24]	; (801f408 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f3f0:	4909      	ldr	r1, [pc, #36]	; (801f418 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f3f2:	480a      	ldr	r0, [pc, #40]	; (801f41c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f3f4:	f00a fd7a 	bl	8029eec <__aeabi_atexit>
 801f3f8:	4b05      	ldr	r3, [pc, #20]	; (801f410 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f3fa:	652b      	str	r3, [r5, #80]	; 0x50
 801f3fc:	4b07      	ldr	r3, [pc, #28]	; (801f41c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f3fe:	656b      	str	r3, [r5, #84]	; 0x54
 801f400:	bd38      	pop	{r3, r4, r5, pc}
 801f402:	bf00      	nop
 801f404:	20012ea4 	.word	0x20012ea4
 801f408:	20000000 	.word	0x20000000
 801f40c:	0801be9b 	.word	0x0801be9b
 801f410:	200000f4 	.word	0x200000f4
 801f414:	20012ea8 	.word	0x20012ea8
 801f418:	0801be99 	.word	0x0801be99
 801f41c:	200000f8 	.word	0x200000f8

0801f420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f420:	b538      	push	{r3, r4, r5, lr}
 801f422:	4c15      	ldr	r4, [pc, #84]	; (801f478 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f424:	7823      	ldrb	r3, [r4, #0]
 801f426:	f3bf 8f5b 	dmb	ish
 801f42a:	07da      	lsls	r2, r3, #31
 801f42c:	4605      	mov	r5, r0
 801f42e:	d40b      	bmi.n	801f448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f430:	4620      	mov	r0, r4
 801f432:	f00a fd62 	bl	8029efa <__cxa_guard_acquire>
 801f436:	b138      	cbz	r0, 801f448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f438:	4620      	mov	r0, r4
 801f43a:	f00a fd6a 	bl	8029f12 <__cxa_guard_release>
 801f43e:	4a0f      	ldr	r2, [pc, #60]	; (801f47c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f440:	490f      	ldr	r1, [pc, #60]	; (801f480 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f442:	4810      	ldr	r0, [pc, #64]	; (801f484 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f444:	f00a fd52 	bl	8029eec <__aeabi_atexit>
 801f448:	4c0f      	ldr	r4, [pc, #60]	; (801f488 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f44a:	7823      	ldrb	r3, [r4, #0]
 801f44c:	f3bf 8f5b 	dmb	ish
 801f450:	07db      	lsls	r3, r3, #31
 801f452:	d40b      	bmi.n	801f46c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f454:	4620      	mov	r0, r4
 801f456:	f00a fd50 	bl	8029efa <__cxa_guard_acquire>
 801f45a:	b138      	cbz	r0, 801f46c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f45c:	4620      	mov	r0, r4
 801f45e:	f00a fd58 	bl	8029f12 <__cxa_guard_release>
 801f462:	4a06      	ldr	r2, [pc, #24]	; (801f47c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f464:	4909      	ldr	r1, [pc, #36]	; (801f48c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f466:	480a      	ldr	r0, [pc, #40]	; (801f490 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f468:	f00a fd40 	bl	8029eec <__aeabi_atexit>
 801f46c:	4b05      	ldr	r3, [pc, #20]	; (801f484 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f46e:	64ab      	str	r3, [r5, #72]	; 0x48
 801f470:	4b07      	ldr	r3, [pc, #28]	; (801f490 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f472:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f474:	bd38      	pop	{r3, r4, r5, pc}
 801f476:	bf00      	nop
 801f478:	20012eac 	.word	0x20012eac
 801f47c:	20000000 	.word	0x20000000
 801f480:	0801be9f 	.word	0x0801be9f
 801f484:	200000fc 	.word	0x200000fc
 801f488:	20012eb0 	.word	0x20012eb0
 801f48c:	0801be9d 	.word	0x0801be9d
 801f490:	20000100 	.word	0x20000100

0801f494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f494:	b538      	push	{r3, r4, r5, lr}
 801f496:	4c15      	ldr	r4, [pc, #84]	; (801f4ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f498:	7823      	ldrb	r3, [r4, #0]
 801f49a:	f3bf 8f5b 	dmb	ish
 801f49e:	07da      	lsls	r2, r3, #31
 801f4a0:	4605      	mov	r5, r0
 801f4a2:	d40b      	bmi.n	801f4bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f4a4:	4620      	mov	r0, r4
 801f4a6:	f00a fd28 	bl	8029efa <__cxa_guard_acquire>
 801f4aa:	b138      	cbz	r0, 801f4bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f4ac:	4620      	mov	r0, r4
 801f4ae:	f00a fd30 	bl	8029f12 <__cxa_guard_release>
 801f4b2:	4a0f      	ldr	r2, [pc, #60]	; (801f4f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f4b4:	490f      	ldr	r1, [pc, #60]	; (801f4f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f4b6:	4810      	ldr	r0, [pc, #64]	; (801f4f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f4b8:	f00a fd18 	bl	8029eec <__aeabi_atexit>
 801f4bc:	4c0f      	ldr	r4, [pc, #60]	; (801f4fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f4be:	7823      	ldrb	r3, [r4, #0]
 801f4c0:	f3bf 8f5b 	dmb	ish
 801f4c4:	07db      	lsls	r3, r3, #31
 801f4c6:	d40b      	bmi.n	801f4e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f4c8:	4620      	mov	r0, r4
 801f4ca:	f00a fd16 	bl	8029efa <__cxa_guard_acquire>
 801f4ce:	b138      	cbz	r0, 801f4e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f4d0:	4620      	mov	r0, r4
 801f4d2:	f00a fd1e 	bl	8029f12 <__cxa_guard_release>
 801f4d6:	4a06      	ldr	r2, [pc, #24]	; (801f4f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f4d8:	4909      	ldr	r1, [pc, #36]	; (801f500 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f4da:	480a      	ldr	r0, [pc, #40]	; (801f504 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f4dc:	f00a fd06 	bl	8029eec <__aeabi_atexit>
 801f4e0:	4b05      	ldr	r3, [pc, #20]	; (801f4f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f4e2:	642b      	str	r3, [r5, #64]	; 0x40
 801f4e4:	4b07      	ldr	r3, [pc, #28]	; (801f504 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f4e6:	646b      	str	r3, [r5, #68]	; 0x44
 801f4e8:	bd38      	pop	{r3, r4, r5, pc}
 801f4ea:	bf00      	nop
 801f4ec:	20012e74 	.word	0x20012e74
 801f4f0:	20000000 	.word	0x20000000
 801f4f4:	0801bea3 	.word	0x0801bea3
 801f4f8:	200000c4 	.word	0x200000c4
 801f4fc:	20012e78 	.word	0x20012e78
 801f500:	0801bea1 	.word	0x0801bea1
 801f504:	200000c8 	.word	0x200000c8

0801f508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f508:	b538      	push	{r3, r4, r5, lr}
 801f50a:	4c15      	ldr	r4, [pc, #84]	; (801f560 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f50c:	7823      	ldrb	r3, [r4, #0]
 801f50e:	f3bf 8f5b 	dmb	ish
 801f512:	07da      	lsls	r2, r3, #31
 801f514:	4605      	mov	r5, r0
 801f516:	d40b      	bmi.n	801f530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f518:	4620      	mov	r0, r4
 801f51a:	f00a fcee 	bl	8029efa <__cxa_guard_acquire>
 801f51e:	b138      	cbz	r0, 801f530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f520:	4620      	mov	r0, r4
 801f522:	f00a fcf6 	bl	8029f12 <__cxa_guard_release>
 801f526:	4a0f      	ldr	r2, [pc, #60]	; (801f564 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f528:	490f      	ldr	r1, [pc, #60]	; (801f568 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f52a:	4810      	ldr	r0, [pc, #64]	; (801f56c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f52c:	f00a fcde 	bl	8029eec <__aeabi_atexit>
 801f530:	4c0f      	ldr	r4, [pc, #60]	; (801f570 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f532:	7823      	ldrb	r3, [r4, #0]
 801f534:	f3bf 8f5b 	dmb	ish
 801f538:	07db      	lsls	r3, r3, #31
 801f53a:	d40b      	bmi.n	801f554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f53c:	4620      	mov	r0, r4
 801f53e:	f00a fcdc 	bl	8029efa <__cxa_guard_acquire>
 801f542:	b138      	cbz	r0, 801f554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f544:	4620      	mov	r0, r4
 801f546:	f00a fce4 	bl	8029f12 <__cxa_guard_release>
 801f54a:	4a06      	ldr	r2, [pc, #24]	; (801f564 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f54c:	4909      	ldr	r1, [pc, #36]	; (801f574 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f54e:	480a      	ldr	r0, [pc, #40]	; (801f578 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f550:	f00a fccc 	bl	8029eec <__aeabi_atexit>
 801f554:	4b05      	ldr	r3, [pc, #20]	; (801f56c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f556:	63ab      	str	r3, [r5, #56]	; 0x38
 801f558:	4b07      	ldr	r3, [pc, #28]	; (801f578 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f55a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f55c:	bd38      	pop	{r3, r4, r5, pc}
 801f55e:	bf00      	nop
 801f560:	20012e94 	.word	0x20012e94
 801f564:	20000000 	.word	0x20000000
 801f568:	0801bea7 	.word	0x0801bea7
 801f56c:	200000e4 	.word	0x200000e4
 801f570:	20012e98 	.word	0x20012e98
 801f574:	0801bea5 	.word	0x0801bea5
 801f578:	200000e8 	.word	0x200000e8

0801f57c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f57c:	b510      	push	{r4, lr}
 801f57e:	4604      	mov	r4, r0
 801f580:	f7ff ff14 	bl	801f3ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f584:	4620      	mov	r0, r4
 801f586:	f7ff ff85 	bl	801f494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f58a:	4620      	mov	r0, r4
 801f58c:	f7ff ff48 	bl	801f420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f590:	4620      	mov	r0, r4
 801f592:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f596:	f7ff bfb7 	b.w	801f508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f59c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f59c:	b538      	push	{r3, r4, r5, lr}
 801f59e:	4c15      	ldr	r4, [pc, #84]	; (801f5f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f5a0:	7823      	ldrb	r3, [r4, #0]
 801f5a2:	f3bf 8f5b 	dmb	ish
 801f5a6:	07da      	lsls	r2, r3, #31
 801f5a8:	4605      	mov	r5, r0
 801f5aa:	d40b      	bmi.n	801f5c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f5ac:	4620      	mov	r0, r4
 801f5ae:	f00a fca4 	bl	8029efa <__cxa_guard_acquire>
 801f5b2:	b138      	cbz	r0, 801f5c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f5b4:	4620      	mov	r0, r4
 801f5b6:	f00a fcac 	bl	8029f12 <__cxa_guard_release>
 801f5ba:	4a0f      	ldr	r2, [pc, #60]	; (801f5f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f5bc:	490f      	ldr	r1, [pc, #60]	; (801f5fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f5be:	4810      	ldr	r0, [pc, #64]	; (801f600 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f5c0:	f00a fc94 	bl	8029eec <__aeabi_atexit>
 801f5c4:	4c0f      	ldr	r4, [pc, #60]	; (801f604 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f5c6:	7823      	ldrb	r3, [r4, #0]
 801f5c8:	f3bf 8f5b 	dmb	ish
 801f5cc:	07db      	lsls	r3, r3, #31
 801f5ce:	d40b      	bmi.n	801f5e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f5d0:	4620      	mov	r0, r4
 801f5d2:	f00a fc92 	bl	8029efa <__cxa_guard_acquire>
 801f5d6:	b138      	cbz	r0, 801f5e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f5d8:	4620      	mov	r0, r4
 801f5da:	f00a fc9a 	bl	8029f12 <__cxa_guard_release>
 801f5de:	4a06      	ldr	r2, [pc, #24]	; (801f5f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f5e0:	4909      	ldr	r1, [pc, #36]	; (801f608 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f5e2:	480a      	ldr	r0, [pc, #40]	; (801f60c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f5e4:	f00a fc82 	bl	8029eec <__aeabi_atexit>
 801f5e8:	4b05      	ldr	r3, [pc, #20]	; (801f600 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f5ea:	662b      	str	r3, [r5, #96]	; 0x60
 801f5ec:	4b07      	ldr	r3, [pc, #28]	; (801f60c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f5ee:	666b      	str	r3, [r5, #100]	; 0x64
 801f5f0:	bd38      	pop	{r3, r4, r5, pc}
 801f5f2:	bf00      	nop
 801f5f4:	20012e7c 	.word	0x20012e7c
 801f5f8:	20000000 	.word	0x20000000
 801f5fc:	0801be93 	.word	0x0801be93
 801f600:	200000cc 	.word	0x200000cc
 801f604:	20012e80 	.word	0x20012e80
 801f608:	0801be91 	.word	0x0801be91
 801f60c:	200000d0 	.word	0x200000d0

0801f610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f610:	b538      	push	{r3, r4, r5, lr}
 801f612:	4c15      	ldr	r4, [pc, #84]	; (801f668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f614:	7823      	ldrb	r3, [r4, #0]
 801f616:	f3bf 8f5b 	dmb	ish
 801f61a:	07da      	lsls	r2, r3, #31
 801f61c:	4605      	mov	r5, r0
 801f61e:	d40b      	bmi.n	801f638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f620:	4620      	mov	r0, r4
 801f622:	f00a fc6a 	bl	8029efa <__cxa_guard_acquire>
 801f626:	b138      	cbz	r0, 801f638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f628:	4620      	mov	r0, r4
 801f62a:	f00a fc72 	bl	8029f12 <__cxa_guard_release>
 801f62e:	4a0f      	ldr	r2, [pc, #60]	; (801f66c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f630:	490f      	ldr	r1, [pc, #60]	; (801f670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f632:	4810      	ldr	r0, [pc, #64]	; (801f674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f634:	f00a fc5a 	bl	8029eec <__aeabi_atexit>
 801f638:	4c0f      	ldr	r4, [pc, #60]	; (801f678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f63a:	7823      	ldrb	r3, [r4, #0]
 801f63c:	f3bf 8f5b 	dmb	ish
 801f640:	07db      	lsls	r3, r3, #31
 801f642:	d40b      	bmi.n	801f65c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f644:	4620      	mov	r0, r4
 801f646:	f00a fc58 	bl	8029efa <__cxa_guard_acquire>
 801f64a:	b138      	cbz	r0, 801f65c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f64c:	4620      	mov	r0, r4
 801f64e:	f00a fc60 	bl	8029f12 <__cxa_guard_release>
 801f652:	4a06      	ldr	r2, [pc, #24]	; (801f66c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f654:	4909      	ldr	r1, [pc, #36]	; (801f67c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f656:	480a      	ldr	r0, [pc, #40]	; (801f680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f658:	f00a fc48 	bl	8029eec <__aeabi_atexit>
 801f65c:	4b05      	ldr	r3, [pc, #20]	; (801f674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f65e:	65ab      	str	r3, [r5, #88]	; 0x58
 801f660:	4b07      	ldr	r3, [pc, #28]	; (801f680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f662:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f664:	bd38      	pop	{r3, r4, r5, pc}
 801f666:	bf00      	nop
 801f668:	20012e54 	.word	0x20012e54
 801f66c:	20000000 	.word	0x20000000
 801f670:	0801be97 	.word	0x0801be97
 801f674:	200000a4 	.word	0x200000a4
 801f678:	20012e58 	.word	0x20012e58
 801f67c:	0801be95 	.word	0x0801be95
 801f680:	200000a8 	.word	0x200000a8

0801f684 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f684:	b510      	push	{r4, lr}
 801f686:	4604      	mov	r4, r0
 801f688:	f7ff ff88 	bl	801f59c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f68c:	4620      	mov	r0, r4
 801f68e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f692:	f7ff bfbd 	b.w	801f610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f698:	b538      	push	{r3, r4, r5, lr}
 801f69a:	4c15      	ldr	r4, [pc, #84]	; (801f6f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f69c:	7823      	ldrb	r3, [r4, #0]
 801f69e:	f3bf 8f5b 	dmb	ish
 801f6a2:	07da      	lsls	r2, r3, #31
 801f6a4:	4605      	mov	r5, r0
 801f6a6:	d40b      	bmi.n	801f6c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f6a8:	4620      	mov	r0, r4
 801f6aa:	f00a fc26 	bl	8029efa <__cxa_guard_acquire>
 801f6ae:	b138      	cbz	r0, 801f6c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f6b0:	4620      	mov	r0, r4
 801f6b2:	f00a fc2e 	bl	8029f12 <__cxa_guard_release>
 801f6b6:	4a0f      	ldr	r2, [pc, #60]	; (801f6f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f6b8:	490f      	ldr	r1, [pc, #60]	; (801f6f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f6ba:	4810      	ldr	r0, [pc, #64]	; (801f6fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f6bc:	f00a fc16 	bl	8029eec <__aeabi_atexit>
 801f6c0:	4c0f      	ldr	r4, [pc, #60]	; (801f700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f6c2:	7823      	ldrb	r3, [r4, #0]
 801f6c4:	f3bf 8f5b 	dmb	ish
 801f6c8:	07db      	lsls	r3, r3, #31
 801f6ca:	d40b      	bmi.n	801f6e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f6cc:	4620      	mov	r0, r4
 801f6ce:	f00a fc14 	bl	8029efa <__cxa_guard_acquire>
 801f6d2:	b138      	cbz	r0, 801f6e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f6d4:	4620      	mov	r0, r4
 801f6d6:	f00a fc1c 	bl	8029f12 <__cxa_guard_release>
 801f6da:	4a06      	ldr	r2, [pc, #24]	; (801f6f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f6dc:	4909      	ldr	r1, [pc, #36]	; (801f704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f6de:	480a      	ldr	r0, [pc, #40]	; (801f708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f6e0:	f00a fc04 	bl	8029eec <__aeabi_atexit>
 801f6e4:	4b05      	ldr	r3, [pc, #20]	; (801f6fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f6e6:	672b      	str	r3, [r5, #112]	; 0x70
 801f6e8:	4b07      	ldr	r3, [pc, #28]	; (801f708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f6ea:	676b      	str	r3, [r5, #116]	; 0x74
 801f6ec:	bd38      	pop	{r3, r4, r5, pc}
 801f6ee:	bf00      	nop
 801f6f0:	20012e4c 	.word	0x20012e4c
 801f6f4:	20000000 	.word	0x20000000
 801f6f8:	0801be8b 	.word	0x0801be8b
 801f6fc:	2000009c 	.word	0x2000009c
 801f700:	20012e50 	.word	0x20012e50
 801f704:	0801be89 	.word	0x0801be89
 801f708:	200000a0 	.word	0x200000a0

0801f70c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f70c:	b538      	push	{r3, r4, r5, lr}
 801f70e:	4c15      	ldr	r4, [pc, #84]	; (801f764 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f710:	7823      	ldrb	r3, [r4, #0]
 801f712:	f3bf 8f5b 	dmb	ish
 801f716:	07da      	lsls	r2, r3, #31
 801f718:	4605      	mov	r5, r0
 801f71a:	d40b      	bmi.n	801f734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f71c:	4620      	mov	r0, r4
 801f71e:	f00a fbec 	bl	8029efa <__cxa_guard_acquire>
 801f722:	b138      	cbz	r0, 801f734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f724:	4620      	mov	r0, r4
 801f726:	f00a fbf4 	bl	8029f12 <__cxa_guard_release>
 801f72a:	4a0f      	ldr	r2, [pc, #60]	; (801f768 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f72c:	490f      	ldr	r1, [pc, #60]	; (801f76c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f72e:	4810      	ldr	r0, [pc, #64]	; (801f770 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f730:	f00a fbdc 	bl	8029eec <__aeabi_atexit>
 801f734:	4c0f      	ldr	r4, [pc, #60]	; (801f774 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f736:	7823      	ldrb	r3, [r4, #0]
 801f738:	f3bf 8f5b 	dmb	ish
 801f73c:	07db      	lsls	r3, r3, #31
 801f73e:	d40b      	bmi.n	801f758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f740:	4620      	mov	r0, r4
 801f742:	f00a fbda 	bl	8029efa <__cxa_guard_acquire>
 801f746:	b138      	cbz	r0, 801f758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f748:	4620      	mov	r0, r4
 801f74a:	f00a fbe2 	bl	8029f12 <__cxa_guard_release>
 801f74e:	4a06      	ldr	r2, [pc, #24]	; (801f768 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f750:	4909      	ldr	r1, [pc, #36]	; (801f778 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f752:	480a      	ldr	r0, [pc, #40]	; (801f77c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f754:	f00a fbca 	bl	8029eec <__aeabi_atexit>
 801f758:	4b05      	ldr	r3, [pc, #20]	; (801f770 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f75a:	66ab      	str	r3, [r5, #104]	; 0x68
 801f75c:	4b07      	ldr	r3, [pc, #28]	; (801f77c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f75e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f760:	bd38      	pop	{r3, r4, r5, pc}
 801f762:	bf00      	nop
 801f764:	20012e44 	.word	0x20012e44
 801f768:	20000000 	.word	0x20000000
 801f76c:	0801be8f 	.word	0x0801be8f
 801f770:	20000094 	.word	0x20000094
 801f774:	20012e48 	.word	0x20012e48
 801f778:	0801be8d 	.word	0x0801be8d
 801f77c:	20000098 	.word	0x20000098

0801f780 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f780:	b510      	push	{r4, lr}
 801f782:	4604      	mov	r4, r0
 801f784:	f7ff ff88 	bl	801f698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f788:	4620      	mov	r0, r4
 801f78a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f78e:	f7ff bfbd 	b.w	801f70c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f792 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f792:	b510      	push	{r4, lr}
 801f794:	4604      	mov	r4, r0
 801f796:	f7ff fff3 	bl	801f780 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f79a:	4620      	mov	r0, r4
 801f79c:	f7ff ff72 	bl	801f684 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f7a0:	4620      	mov	r0, r4
 801f7a2:	f7ff fdf9 	bl	801f398 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f7a6:	4620      	mov	r0, r4
 801f7a8:	f7ff fcfa 	bl	801f1a0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f7ac:	4620      	mov	r0, r4
 801f7ae:	f7ff fd75 	bl	801f29c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f7b2:	4620      	mov	r0, r4
 801f7b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f7b8:	f7ff bee0 	b.w	801f57c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f7bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f7bc:	b538      	push	{r3, r4, r5, lr}
 801f7be:	4c0b      	ldr	r4, [pc, #44]	; (801f7ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f7c0:	7823      	ldrb	r3, [r4, #0]
 801f7c2:	f3bf 8f5b 	dmb	ish
 801f7c6:	07db      	lsls	r3, r3, #31
 801f7c8:	4605      	mov	r5, r0
 801f7ca:	d40b      	bmi.n	801f7e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f7cc:	4620      	mov	r0, r4
 801f7ce:	f00a fb94 	bl	8029efa <__cxa_guard_acquire>
 801f7d2:	b138      	cbz	r0, 801f7e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f7d4:	4620      	mov	r0, r4
 801f7d6:	f00a fb9c 	bl	8029f12 <__cxa_guard_release>
 801f7da:	4a05      	ldr	r2, [pc, #20]	; (801f7f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f7dc:	4905      	ldr	r1, [pc, #20]	; (801f7f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f7de:	4806      	ldr	r0, [pc, #24]	; (801f7f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f7e0:	f00a fb84 	bl	8029eec <__aeabi_atexit>
 801f7e4:	4b04      	ldr	r3, [pc, #16]	; (801f7f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f7e6:	67ab      	str	r3, [r5, #120]	; 0x78
 801f7e8:	bd38      	pop	{r3, r4, r5, pc}
 801f7ea:	bf00      	nop
 801f7ec:	20012e38 	.word	0x20012e38
 801f7f0:	20000000 	.word	0x20000000
 801f7f4:	0801be87 	.word	0x0801be87
 801f7f8:	2000008c 	.word	0x2000008c

0801f7fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f7fc:	b538      	push	{r3, r4, r5, lr}
 801f7fe:	4c0b      	ldr	r4, [pc, #44]	; (801f82c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f800:	7823      	ldrb	r3, [r4, #0]
 801f802:	f3bf 8f5b 	dmb	ish
 801f806:	07db      	lsls	r3, r3, #31
 801f808:	4605      	mov	r5, r0
 801f80a:	d40b      	bmi.n	801f824 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f80c:	4620      	mov	r0, r4
 801f80e:	f00a fb74 	bl	8029efa <__cxa_guard_acquire>
 801f812:	b138      	cbz	r0, 801f824 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f814:	4620      	mov	r0, r4
 801f816:	f00a fb7c 	bl	8029f12 <__cxa_guard_release>
 801f81a:	4a05      	ldr	r2, [pc, #20]	; (801f830 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f81c:	4905      	ldr	r1, [pc, #20]	; (801f834 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f81e:	4806      	ldr	r0, [pc, #24]	; (801f838 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f820:	f00a fb64 	bl	8029eec <__aeabi_atexit>
 801f824:	4b04      	ldr	r3, [pc, #16]	; (801f838 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f826:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f828:	bd38      	pop	{r3, r4, r5, pc}
 801f82a:	bf00      	nop
 801f82c:	20012e3c 	.word	0x20012e3c
 801f830:	20000000 	.word	0x20000000
 801f834:	0801be85 	.word	0x0801be85
 801f838:	20000090 	.word	0x20000090

0801f83c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f83c:	b570      	push	{r4, r5, r6, lr}
 801f83e:	4d0d      	ldr	r5, [pc, #52]	; (801f874 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f840:	4c0d      	ldr	r4, [pc, #52]	; (801f878 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f842:	782b      	ldrb	r3, [r5, #0]
 801f844:	f3bf 8f5b 	dmb	ish
 801f848:	f013 0f01 	tst.w	r3, #1
 801f84c:	4606      	mov	r6, r0
 801f84e:	d10d      	bne.n	801f86c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f850:	4628      	mov	r0, r5
 801f852:	f00a fb52 	bl	8029efa <__cxa_guard_acquire>
 801f856:	b148      	cbz	r0, 801f86c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f858:	4b08      	ldr	r3, [pc, #32]	; (801f87c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f85a:	6023      	str	r3, [r4, #0]
 801f85c:	4628      	mov	r0, r5
 801f85e:	f00a fb58 	bl	8029f12 <__cxa_guard_release>
 801f862:	4a07      	ldr	r2, [pc, #28]	; (801f880 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f864:	4907      	ldr	r1, [pc, #28]	; (801f884 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f866:	4620      	mov	r0, r4
 801f868:	f00a fb40 	bl	8029eec <__aeabi_atexit>
 801f86c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f870:	bd70      	pop	{r4, r5, r6, pc}
 801f872:	bf00      	nop
 801f874:	20012e40 	.word	0x20012e40
 801f878:	20012eb4 	.word	0x20012eb4
 801f87c:	0802f694 	.word	0x0802f694
 801f880:	20000000 	.word	0x20000000
 801f884:	0801be83 	.word	0x0801be83

0801f888 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f888:	b510      	push	{r4, lr}
 801f88a:	4604      	mov	r4, r0
 801f88c:	f7ff ff96 	bl	801f7bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f890:	4620      	mov	r0, r4
 801f892:	f7ff ffb3 	bl	801f7fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f896:	4620      	mov	r0, r4
 801f898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f89c:	f7ff bfce 	b.w	801f83c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f8a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f8a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8a4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f8a8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f8ac:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f8b0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f8b4:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f8b8:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f8bc:	8808      	ldrh	r0, [r1, #0]
 801f8be:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f8c2:	2d00      	cmp	r5, #0
 801f8c4:	eb02 0a0c 	add.w	sl, r2, ip
 801f8c8:	f2c0 80b0 	blt.w	801fa2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f8cc:	45ab      	cmp	fp, r5
 801f8ce:	f340 80ad 	ble.w	801fa2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f8d2:	2c00      	cmp	r4, #0
 801f8d4:	f2c0 80a8 	blt.w	801fa28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f8d8:	45a6      	cmp	lr, r4
 801f8da:	f340 80a5 	ble.w	801fa28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f8de:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f8e2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f8e6:	1c62      	adds	r2, r4, #1
 801f8e8:	f100 80a3 	bmi.w	801fa32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f8ec:	4596      	cmp	lr, r2
 801f8ee:	f340 80a0 	ble.w	801fa32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f8f2:	f1b9 0f00 	cmp.w	r9, #0
 801f8f6:	f000 809c 	beq.w	801fa32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f8fa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f8fe:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f902:	3501      	adds	r5, #1
 801f904:	f100 8099 	bmi.w	801fa3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f908:	45ab      	cmp	fp, r5
 801f90a:	f340 8096 	ble.w	801fa3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f90e:	2f00      	cmp	r7, #0
 801f910:	f000 8093 	beq.w	801fa3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f914:	2c00      	cmp	r4, #0
 801f916:	f2c0 808e 	blt.w	801fa36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f91a:	45a6      	cmp	lr, r4
 801f91c:	f340 808b 	ble.w	801fa36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f920:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f924:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f928:	3401      	adds	r4, #1
 801f92a:	f100 8089 	bmi.w	801fa40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f92e:	45a6      	cmp	lr, r4
 801f930:	f340 8086 	ble.w	801fa40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f934:	f1b9 0f00 	cmp.w	r9, #0
 801f938:	f000 8082 	beq.w	801fa40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f93c:	44d6      	add	lr, sl
 801f93e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f942:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f946:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f94a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f94e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f952:	fb19 fe07 	smulbb	lr, r9, r7
 801f956:	ea44 0808 	orr.w	r8, r4, r8
 801f95a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f95e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f962:	f1c7 0210 	rsb	r2, r7, #16
 801f966:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f96a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f96e:	ea44 0c0c 	orr.w	ip, r4, ip
 801f972:	eba2 0209 	sub.w	r2, r2, r9
 801f976:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f97a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f97e:	fb04 f40c 	mul.w	r4, r4, ip
 801f982:	fb02 4808 	mla	r8, r2, r8, r4
 801f986:	041a      	lsls	r2, r3, #16
 801f988:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f98c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f990:	4313      	orrs	r3, r2
 801f992:	042a      	lsls	r2, r5, #16
 801f994:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f998:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f99c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f9a0:	432a      	orrs	r2, r5
 801f9a2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f9a6:	fb07 3202 	mla	r2, r7, r2, r3
 801f9aa:	0d53      	lsrs	r3, r2, #21
 801f9ac:	0952      	lsrs	r2, r2, #5
 801f9ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f9b6:	431a      	orrs	r2, r3
 801f9b8:	b293      	uxth	r3, r2
 801f9ba:	b2b4      	uxth	r4, r6
 801f9bc:	1202      	asrs	r2, r0, #8
 801f9be:	43f6      	mvns	r6, r6
 801f9c0:	b2f6      	uxtb	r6, r6
 801f9c2:	121d      	asrs	r5, r3, #8
 801f9c4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f9c8:	fb12 f206 	smulbb	r2, r2, r6
 801f9cc:	10c7      	asrs	r7, r0, #3
 801f9ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f9d2:	00c0      	lsls	r0, r0, #3
 801f9d4:	fb05 2504 	mla	r5, r5, r4, r2
 801f9d8:	b2c0      	uxtb	r0, r0
 801f9da:	10da      	asrs	r2, r3, #3
 801f9dc:	00db      	lsls	r3, r3, #3
 801f9de:	b2db      	uxtb	r3, r3
 801f9e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f9e4:	fb10 f006 	smulbb	r0, r0, r6
 801f9e8:	b2ad      	uxth	r5, r5
 801f9ea:	fb03 0004 	mla	r0, r3, r4, r0
 801f9ee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f9f2:	fb17 f706 	smulbb	r7, r7, r6
 801f9f6:	b280      	uxth	r0, r0
 801f9f8:	1c6b      	adds	r3, r5, #1
 801f9fa:	fb02 7204 	mla	r2, r2, r4, r7
 801f9fe:	b292      	uxth	r2, r2
 801fa00:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fa04:	1c43      	adds	r3, r0, #1
 801fa06:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fa0a:	1c50      	adds	r0, r2, #1
 801fa0c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801fa10:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fa14:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa18:	0952      	lsrs	r2, r2, #5
 801fa1a:	432b      	orrs	r3, r5
 801fa1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fa20:	4313      	orrs	r3, r2
 801fa22:	800b      	strh	r3, [r1, #0]
 801fa24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa28:	4680      	mov	r8, r0
 801fa2a:	e75c      	b.n	801f8e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801fa2c:	4684      	mov	ip, r0
 801fa2e:	4680      	mov	r8, r0
 801fa30:	e767      	b.n	801f902 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fa32:	4684      	mov	ip, r0
 801fa34:	e765      	b.n	801f902 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fa36:	4605      	mov	r5, r0
 801fa38:	e776      	b.n	801f928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801fa3a:	4603      	mov	r3, r0
 801fa3c:	4605      	mov	r5, r0
 801fa3e:	e782      	b.n	801f946 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801fa40:	4603      	mov	r3, r0
 801fa42:	e780      	b.n	801f946 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801fa44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa48:	b099      	sub	sp, #100	; 0x64
 801fa4a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801fa4e:	9215      	str	r2, [sp, #84]	; 0x54
 801fa50:	9309      	str	r3, [sp, #36]	; 0x24
 801fa52:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fa54:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801fa58:	930d      	str	r3, [sp, #52]	; 0x34
 801fa5a:	910c      	str	r1, [sp, #48]	; 0x30
 801fa5c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801fa60:	9016      	str	r0, [sp, #88]	; 0x58
 801fa62:	6850      	ldr	r0, [r2, #4]
 801fa64:	6812      	ldr	r2, [r2, #0]
 801fa66:	fb00 1303 	mla	r3, r0, r3, r1
 801fa6a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801fa6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa70:	681b      	ldr	r3, [r3, #0]
 801fa72:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa74:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa76:	685e      	ldr	r6, [r3, #4]
 801fa78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fa7a:	43db      	mvns	r3, r3
 801fa7c:	b2db      	uxtb	r3, r3
 801fa7e:	3604      	adds	r6, #4
 801fa80:	930a      	str	r3, [sp, #40]	; 0x28
 801fa82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa84:	2b00      	cmp	r3, #0
 801fa86:	dc03      	bgt.n	801fa90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fa88:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801fa8a:	2b00      	cmp	r3, #0
 801fa8c:	f340 8225 	ble.w	801feda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fa90:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa9a:	1e48      	subs	r0, r1, #1
 801fa9c:	1e57      	subs	r7, r2, #1
 801fa9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faa0:	2b00      	cmp	r3, #0
 801faa2:	f340 80e3 	ble.w	801fc6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801faa6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801faaa:	ea4f 4325 	mov.w	r3, r5, asr #16
 801faae:	d406      	bmi.n	801fabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fab0:	4584      	cmp	ip, r0
 801fab2:	da04      	bge.n	801fabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fab4:	2b00      	cmp	r3, #0
 801fab6:	db02      	blt.n	801fabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fab8:	42bb      	cmp	r3, r7
 801faba:	f2c0 80d8 	blt.w	801fc6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fabe:	f11c 0c01 	adds.w	ip, ip, #1
 801fac2:	f100 80c9 	bmi.w	801fc58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fac6:	4561      	cmp	r1, ip
 801fac8:	f2c0 80c6 	blt.w	801fc58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801facc:	3301      	adds	r3, #1
 801face:	f100 80c3 	bmi.w	801fc58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fad2:	429a      	cmp	r2, r3
 801fad4:	f2c0 80c0 	blt.w	801fc58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fad8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fadc:	4647      	mov	r7, r8
 801fade:	f1bb 0f00 	cmp.w	fp, #0
 801fae2:	f340 80e3 	ble.w	801fcac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801fae6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fae8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801faea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801faee:	689b      	ldr	r3, [r3, #8]
 801faf0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801faf4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801faf8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fafc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fb00:	f100 8121 	bmi.w	801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb04:	f103 39ff 	add.w	r9, r3, #4294967295
 801fb08:	454a      	cmp	r2, r9
 801fb0a:	f280 811c 	bge.w	801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb0e:	f1bc 0f00 	cmp.w	ip, #0
 801fb12:	f2c0 8118 	blt.w	801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb16:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fb1a:	45cc      	cmp	ip, r9
 801fb1c:	f280 8113 	bge.w	801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fb20:	b21b      	sxth	r3, r3
 801fb22:	fb0c 2203 	mla	r2, ip, r3, r2
 801fb26:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fb28:	eb04 0902 	add.w	r9, r4, r2
 801fb2c:	5ca2      	ldrb	r2, [r4, r2]
 801fb2e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fb32:	2800      	cmp	r0, #0
 801fb34:	f000 80fe 	beq.w	801fd34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fb38:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fb3c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fb40:	9211      	str	r2, [sp, #68]	; 0x44
 801fb42:	b151      	cbz	r1, 801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fb44:	eb09 0203 	add.w	r2, r9, r3
 801fb48:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fb4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb50:	930f      	str	r3, [sp, #60]	; 0x3c
 801fb52:	7853      	ldrb	r3, [r2, #1]
 801fb54:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb58:	9312      	str	r3, [sp, #72]	; 0x48
 801fb5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fb5e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fb62:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fb66:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fb6a:	ea4c 0c03 	orr.w	ip, ip, r3
 801fb6e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fb70:	041b      	lsls	r3, r3, #16
 801fb72:	fb10 f201 	smulbb	r2, r0, r1
 801fb76:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fb7a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fb7e:	10d2      	asrs	r2, r2, #3
 801fb80:	4323      	orrs	r3, r4
 801fb82:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801fb86:	4353      	muls	r3, r2
 801fb88:	fb09 330c 	mla	r3, r9, ip, r3
 801fb8c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fb90:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fb94:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fb98:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fb9c:	f1c1 0c10 	rsb	ip, r1, #16
 801fba0:	ebac 0c00 	sub.w	ip, ip, r0
 801fba4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fba8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fbac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fbae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fbb0:	0418      	lsls	r0, r3, #16
 801fbb2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fbb6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fbba:	4318      	orrs	r0, r3
 801fbbc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fbc0:	fb02 c200 	mla	r2, r2, r0, ip
 801fbc4:	0d53      	lsrs	r3, r2, #21
 801fbc6:	0952      	lsrs	r2, r2, #5
 801fbc8:	8838      	ldrh	r0, [r7, #0]
 801fbca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fbce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fbd2:	431a      	orrs	r2, r3
 801fbd4:	b292      	uxth	r2, r2
 801fbd6:	1201      	asrs	r1, r0, #8
 801fbd8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fbdc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fbe0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fbe4:	fb11 f104 	smulbb	r1, r1, r4
 801fbe8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fbec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fbf0:	00c0      	lsls	r0, r0, #3
 801fbf2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fbf6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fbfa:	10d1      	asrs	r1, r2, #3
 801fbfc:	b2c0      	uxtb	r0, r0
 801fbfe:	00d2      	lsls	r2, r2, #3
 801fc00:	b2d2      	uxtb	r2, r2
 801fc02:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc06:	fb1e fe04 	smulbb	lr, lr, r4
 801fc0a:	fb10 f004 	smulbb	r0, r0, r4
 801fc0e:	fa1f fc8c 	uxth.w	ip, ip
 801fc12:	fb01 e103 	mla	r1, r1, r3, lr
 801fc16:	fb02 0303 	mla	r3, r2, r3, r0
 801fc1a:	b29a      	uxth	r2, r3
 801fc1c:	f10c 0301 	add.w	r3, ip, #1
 801fc20:	b289      	uxth	r1, r1
 801fc22:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fc26:	1c53      	adds	r3, r2, #1
 801fc28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc2c:	1c4a      	adds	r2, r1, #1
 801fc2e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fc32:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fc36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc3a:	0949      	lsrs	r1, r1, #5
 801fc3c:	ea43 030c 	orr.w	r3, r3, ip
 801fc40:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc44:	430b      	orrs	r3, r1
 801fc46:	803b      	strh	r3, [r7, #0]
 801fc48:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc4a:	449a      	add	sl, r3
 801fc4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc4e:	3702      	adds	r7, #2
 801fc50:	441d      	add	r5, r3
 801fc52:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fc56:	e742      	b.n	801fade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fc58:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc5a:	449a      	add	sl, r3
 801fc5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc5e:	441d      	add	r5, r3
 801fc60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc62:	3b01      	subs	r3, #1
 801fc64:	9309      	str	r3, [sp, #36]	; 0x24
 801fc66:	f108 0802 	add.w	r8, r8, #2
 801fc6a:	e718      	b.n	801fa9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fc6c:	d023      	beq.n	801fcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fc6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc70:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fc72:	3b01      	subs	r3, #1
 801fc74:	fb00 a003 	mla	r0, r0, r3, sl
 801fc78:	1400      	asrs	r0, r0, #16
 801fc7a:	f53f af2d 	bmi.w	801fad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc7e:	3901      	subs	r1, #1
 801fc80:	4288      	cmp	r0, r1
 801fc82:	f6bf af29 	bge.w	801fad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc86:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fc88:	fb01 5303 	mla	r3, r1, r3, r5
 801fc8c:	141b      	asrs	r3, r3, #16
 801fc8e:	f53f af23 	bmi.w	801fad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc92:	3a01      	subs	r2, #1
 801fc94:	4293      	cmp	r3, r2
 801fc96:	f6bf af1f 	bge.w	801fad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc9a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fc9e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fca2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fca6:	f1be 0f00 	cmp.w	lr, #0
 801fcaa:	dc6c      	bgt.n	801fd86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fcac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fcae:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fcb2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fcb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fcb8:	2b00      	cmp	r3, #0
 801fcba:	f340 810e 	ble.w	801feda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fcbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fcc2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fcc6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fcca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fccc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fcd0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fcd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fcd8:	eef0 6a62 	vmov.f32	s13, s5
 801fcdc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fce0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fce4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fce8:	ee16 aa90 	vmov	sl, s13
 801fcec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fcf0:	eef0 6a43 	vmov.f32	s13, s6
 801fcf4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fcf8:	ee12 2a90 	vmov	r2, s5
 801fcfc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fd00:	fb92 f3f3 	sdiv	r3, r2, r3
 801fd04:	ee13 2a10 	vmov	r2, s6
 801fd08:	9325      	str	r3, [sp, #148]	; 0x94
 801fd0a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fd0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fd10:	9326      	str	r3, [sp, #152]	; 0x98
 801fd12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fd14:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fd16:	3b01      	subs	r3, #1
 801fd18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fd1c:	930c      	str	r3, [sp, #48]	; 0x30
 801fd1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fd20:	bf08      	it	eq
 801fd22:	4613      	moveq	r3, r2
 801fd24:	ee16 5a90 	vmov	r5, s13
 801fd28:	9309      	str	r3, [sp, #36]	; 0x24
 801fd2a:	eeb0 3a67 	vmov.f32	s6, s15
 801fd2e:	eef0 2a47 	vmov.f32	s5, s14
 801fd32:	e6a6      	b.n	801fa82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fd34:	2900      	cmp	r1, #0
 801fd36:	f43f af10 	beq.w	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd3a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fd3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd42:	930f      	str	r3, [sp, #60]	; 0x3c
 801fd44:	e709      	b.n	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd46:	f112 0901 	adds.w	r9, r2, #1
 801fd4a:	f53f af7d 	bmi.w	801fc48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd4e:	454b      	cmp	r3, r9
 801fd50:	f6ff af7a 	blt.w	801fc48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd54:	f11c 0901 	adds.w	r9, ip, #1
 801fd58:	f53f af76 	bmi.w	801fc48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd5c:	45ce      	cmp	lr, r9
 801fd5e:	f6ff af73 	blt.w	801fc48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd62:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd64:	9202      	str	r2, [sp, #8]
 801fd66:	b21b      	sxth	r3, r3
 801fd68:	fa0f f28e 	sxth.w	r2, lr
 801fd6c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fd70:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fd74:	9201      	str	r2, [sp, #4]
 801fd76:	9300      	str	r3, [sp, #0]
 801fd78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fd7a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fd7c:	4633      	mov	r3, r6
 801fd7e:	4639      	mov	r1, r7
 801fd80:	f7ff fd8e 	bl	801f8a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fd84:	e760      	b.n	801fc48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd86:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fd88:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fd8a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fd8e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fd92:	1429      	asrs	r1, r5, #16
 801fd94:	fb03 2101 	mla	r1, r3, r1, r2
 801fd98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fd9a:	440a      	add	r2, r1
 801fd9c:	5c61      	ldrb	r1, [r4, r1]
 801fd9e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fda2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fda6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fdaa:	f1bc 0f00 	cmp.w	ip, #0
 801fdae:	f000 808c 	beq.w	801feca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fdb2:	7857      	ldrb	r7, [r2, #1]
 801fdb4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fdb8:	9413      	str	r4, [sp, #76]	; 0x4c
 801fdba:	b140      	cbz	r0, 801fdce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fdbc:	18d7      	adds	r7, r2, r3
 801fdbe:	5cd3      	ldrb	r3, [r2, r3]
 801fdc0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fdc4:	9310      	str	r3, [sp, #64]	; 0x40
 801fdc6:	787b      	ldrb	r3, [r7, #1]
 801fdc8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fdcc:	9314      	str	r3, [sp, #80]	; 0x50
 801fdce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fdd0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fdd2:	fb1c f200 	smulbb	r2, ip, r0
 801fdd6:	041f      	lsls	r7, r3, #16
 801fdd8:	10d2      	asrs	r2, r2, #3
 801fdda:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fdde:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fde2:	431f      	orrs	r7, r3
 801fde4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fde8:	9317      	str	r3, [sp, #92]	; 0x5c
 801fdea:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fdec:	041b      	lsls	r3, r3, #16
 801fdee:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fdf2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fdf6:	ea43 030b 	orr.w	r3, r3, fp
 801fdfa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fdfc:	4353      	muls	r3, r2
 801fdfe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fe02:	fb04 3707 	mla	r7, r4, r7, r3
 801fe06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fe0a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fe0e:	ea43 0b01 	orr.w	fp, r3, r1
 801fe12:	f1c0 0110 	rsb	r1, r0, #16
 801fe16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fe18:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fe1a:	eba1 0c0c 	sub.w	ip, r1, ip
 801fe1e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fe22:	fb0c 770b 	mla	r7, ip, fp, r7
 801fe26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fe2a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fe2e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fe32:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fe36:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fe3a:	fb02 770c 	mla	r7, r2, ip, r7
 801fe3e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe40:	0d79      	lsrs	r1, r7, #21
 801fe42:	097f      	lsrs	r7, r7, #5
 801fe44:	8812      	ldrh	r2, [r2, #0]
 801fe46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe4a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fe4e:	430f      	orrs	r7, r1
 801fe50:	b2bb      	uxth	r3, r7
 801fe52:	1211      	asrs	r1, r2, #8
 801fe54:	1218      	asrs	r0, r3, #8
 801fe56:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe5a:	fb11 f104 	smulbb	r1, r1, r4
 801fe5e:	10d7      	asrs	r7, r2, #3
 801fe60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe64:	00d2      	lsls	r2, r2, #3
 801fe66:	fb00 1009 	mla	r0, r0, r9, r1
 801fe6a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fe6e:	10d9      	asrs	r1, r3, #3
 801fe70:	b2d2      	uxtb	r2, r2
 801fe72:	00db      	lsls	r3, r3, #3
 801fe74:	fb17 f704 	smulbb	r7, r7, r4
 801fe78:	fb12 f204 	smulbb	r2, r2, r4
 801fe7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fe80:	b2db      	uxtb	r3, r3
 801fe82:	b280      	uxth	r0, r0
 801fe84:	fb01 7109 	mla	r1, r1, r9, r7
 801fe88:	fb03 2309 	mla	r3, r3, r9, r2
 801fe8c:	b29b      	uxth	r3, r3
 801fe8e:	b289      	uxth	r1, r1
 801fe90:	1c42      	adds	r2, r0, #1
 801fe92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe96:	1c4f      	adds	r7, r1, #1
 801fe98:	1c5a      	adds	r2, r3, #1
 801fe9a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fe9e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fea2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fea6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801feaa:	0949      	lsrs	r1, r1, #5
 801feac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801feae:	4310      	orrs	r0, r2
 801feb0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801feb4:	4308      	orrs	r0, r1
 801feb6:	f823 0b02 	strh.w	r0, [r3], #2
 801feba:	930e      	str	r3, [sp, #56]	; 0x38
 801febc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801febe:	449a      	add	sl, r3
 801fec0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fec2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fec6:	441d      	add	r5, r3
 801fec8:	e6ed      	b.n	801fca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801feca:	2800      	cmp	r0, #0
 801fecc:	f43f af7f 	beq.w	801fdce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fed0:	5cd3      	ldrb	r3, [r2, r3]
 801fed2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fed6:	9310      	str	r3, [sp, #64]	; 0x40
 801fed8:	e779      	b.n	801fdce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801feda:	b019      	add	sp, #100	; 0x64
 801fedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fee0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fee4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fee8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801feec:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fef0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fef4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fef8:	8808      	ldrh	r0, [r1, #0]
 801fefa:	fb08 470e 	mla	r7, r8, lr, r4
 801fefe:	f1b8 0f00 	cmp.w	r8, #0
 801ff02:	eb02 0907 	add.w	r9, r2, r7
 801ff06:	db67      	blt.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ff08:	45c2      	cmp	sl, r8
 801ff0a:	dd65      	ble.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ff0c:	2c00      	cmp	r4, #0
 801ff0e:	db61      	blt.n	801ffd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ff10:	45a6      	cmp	lr, r4
 801ff12:	dd5f      	ble.n	801ffd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ff14:	5dd2      	ldrb	r2, [r2, r7]
 801ff16:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ff1a:	1c62      	adds	r2, r4, #1
 801ff1c:	d45f      	bmi.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ff1e:	4596      	cmp	lr, r2
 801ff20:	dd5d      	ble.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ff22:	2d00      	cmp	r5, #0
 801ff24:	d05b      	beq.n	801ffde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ff26:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ff2a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ff2e:	f118 0801 	adds.w	r8, r8, #1
 801ff32:	d458      	bmi.n	801ffe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ff34:	45c2      	cmp	sl, r8
 801ff36:	dd56      	ble.n	801ffe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ff38:	2e00      	cmp	r6, #0
 801ff3a:	d054      	beq.n	801ffe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ff3c:	2c00      	cmp	r4, #0
 801ff3e:	db50      	blt.n	801ffe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ff40:	45a6      	cmp	lr, r4
 801ff42:	dd4e      	ble.n	801ffe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ff44:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ff48:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ff4c:	3401      	adds	r4, #1
 801ff4e:	d407      	bmi.n	801ff60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ff50:	45a6      	cmp	lr, r4
 801ff52:	dd05      	ble.n	801ff60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ff54:	b125      	cbz	r5, 801ff60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ff56:	44ce      	add	lr, r9
 801ff58:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ff5c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ff60:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ff64:	fb15 f406 	smulbb	r4, r5, r6
 801ff68:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff6c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ff70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ff74:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ff78:	ea43 0c0c 	orr.w	ip, r3, ip
 801ff7c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ff80:	f1c6 0310 	rsb	r3, r6, #16
 801ff84:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ff88:	1b5b      	subs	r3, r3, r5
 801ff8a:	ea4e 0707 	orr.w	r7, lr, r7
 801ff8e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ff92:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ff96:	437d      	muls	r5, r7
 801ff98:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ff9c:	0403      	lsls	r3, r0, #16
 801ff9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ffa2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ffa6:	4318      	orrs	r0, r3
 801ffa8:	0413      	lsls	r3, r2, #16
 801ffaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ffae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ffb2:	4313      	orrs	r3, r2
 801ffb4:	fb04 c000 	mla	r0, r4, r0, ip
 801ffb8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ffbc:	fb06 0003 	mla	r0, r6, r3, r0
 801ffc0:	0d43      	lsrs	r3, r0, #21
 801ffc2:	0940      	lsrs	r0, r0, #5
 801ffc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ffc8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ffcc:	4318      	orrs	r0, r3
 801ffce:	8008      	strh	r0, [r1, #0]
 801ffd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ffd4:	4684      	mov	ip, r0
 801ffd6:	e7a0      	b.n	801ff1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ffd8:	4607      	mov	r7, r0
 801ffda:	4684      	mov	ip, r0
 801ffdc:	e7a7      	b.n	801ff2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ffde:	4607      	mov	r7, r0
 801ffe0:	e7a5      	b.n	801ff2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ffe2:	4602      	mov	r2, r0
 801ffe4:	e7b2      	b.n	801ff4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ffe6:	4602      	mov	r2, r0
 801ffe8:	e7ba      	b.n	801ff60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ffea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ffea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffee:	b093      	sub	sp, #76	; 0x4c
 801fff0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fff4:	920f      	str	r2, [sp, #60]	; 0x3c
 801fff6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fff8:	9108      	str	r1, [sp, #32]
 801fffa:	9306      	str	r3, [sp, #24]
 801fffc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020000:	9010      	str	r0, [sp, #64]	; 0x40
 8020002:	6850      	ldr	r0, [r2, #4]
 8020004:	6812      	ldr	r2, [r2, #0]
 8020006:	fb00 1303 	mla	r3, r0, r3, r1
 802000a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802000e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020010:	681b      	ldr	r3, [r3, #0]
 8020012:	9307      	str	r3, [sp, #28]
 8020014:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020016:	685f      	ldr	r7, [r3, #4]
 8020018:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802001c:	3704      	adds	r7, #4
 802001e:	9b08      	ldr	r3, [sp, #32]
 8020020:	2b00      	cmp	r3, #0
 8020022:	dc03      	bgt.n	802002c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020024:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020026:	2b00      	cmp	r3, #0
 8020028:	f340 81b2 	ble.w	8020390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802002c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802002e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020032:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020036:	1e48      	subs	r0, r1, #1
 8020038:	f102 3cff 	add.w	ip, r2, #4294967295
 802003c:	9b06      	ldr	r3, [sp, #24]
 802003e:	2b00      	cmp	r3, #0
 8020040:	f340 80a9 	ble.w	8020196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020044:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020048:	ea4f 4326 	mov.w	r3, r6, asr #16
 802004c:	d406      	bmi.n	802005c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802004e:	4586      	cmp	lr, r0
 8020050:	da04      	bge.n	802005c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020052:	2b00      	cmp	r3, #0
 8020054:	db02      	blt.n	802005c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020056:	4563      	cmp	r3, ip
 8020058:	f2c0 809e 	blt.w	8020198 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802005c:	f11e 0e01 	adds.w	lr, lr, #1
 8020060:	f100 808f 	bmi.w	8020182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020064:	4571      	cmp	r1, lr
 8020066:	f2c0 808c 	blt.w	8020182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802006a:	3301      	adds	r3, #1
 802006c:	f100 8089 	bmi.w	8020182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020070:	429a      	cmp	r2, r3
 8020072:	f2c0 8086 	blt.w	8020182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020076:	f8dd b018 	ldr.w	fp, [sp, #24]
 802007a:	46c8      	mov	r8, r9
 802007c:	f1bb 0f00 	cmp.w	fp, #0
 8020080:	f340 80a6 	ble.w	80201d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020084:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020086:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020088:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802008c:	689b      	ldr	r3, [r3, #8]
 802008e:	1422      	asrs	r2, r4, #16
 8020090:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020094:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020098:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802009c:	f100 80e3 	bmi.w	8020266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200a0:	f103 3aff 	add.w	sl, r3, #4294967295
 80200a4:	4552      	cmp	r2, sl
 80200a6:	f280 80de 	bge.w	8020266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200aa:	f1bc 0f00 	cmp.w	ip, #0
 80200ae:	f2c0 80da 	blt.w	8020266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200b2:	f10e 3aff 	add.w	sl, lr, #4294967295
 80200b6:	45d4      	cmp	ip, sl
 80200b8:	f280 80d5 	bge.w	8020266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80200bc:	b21b      	sxth	r3, r3
 80200be:	fb0c 2203 	mla	r2, ip, r3, r2
 80200c2:	9d07      	ldr	r5, [sp, #28]
 80200c4:	eb05 0a02 	add.w	sl, r5, r2
 80200c8:	5caa      	ldrb	r2, [r5, r2]
 80200ca:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80200ce:	2800      	cmp	r0, #0
 80200d0:	f000 80c0 	beq.w	8020254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80200d4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80200d8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80200dc:	920b      	str	r2, [sp, #44]	; 0x2c
 80200de:	b151      	cbz	r1, 80200f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80200e0:	eb0a 0203 	add.w	r2, sl, r3
 80200e4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80200e8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80200ec:	9309      	str	r3, [sp, #36]	; 0x24
 80200ee:	7853      	ldrb	r3, [r2, #1]
 80200f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80200f4:	930c      	str	r3, [sp, #48]	; 0x30
 80200f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80200fa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80200fe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020102:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020106:	ea4c 0c03 	orr.w	ip, ip, r3
 802010a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802010c:	041b      	lsls	r3, r3, #16
 802010e:	fb10 f201 	smulbb	r2, r0, r1
 8020112:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020116:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802011a:	10d2      	asrs	r2, r2, #3
 802011c:	432b      	orrs	r3, r5
 802011e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020122:	4353      	muls	r3, r2
 8020124:	fb0a 330c 	mla	r3, sl, ip, r3
 8020128:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802012c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020130:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020134:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020138:	f1c1 0c10 	rsb	ip, r1, #16
 802013c:	ebac 0c00 	sub.w	ip, ip, r0
 8020140:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020144:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802014a:	0418      	lsls	r0, r3, #16
 802014c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020150:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020154:	4318      	orrs	r0, r3
 8020156:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802015a:	fb02 c200 	mla	r2, r2, r0, ip
 802015e:	0d53      	lsrs	r3, r2, #21
 8020160:	0952      	lsrs	r2, r2, #5
 8020162:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020166:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802016a:	431a      	orrs	r2, r3
 802016c:	f8a8 2000 	strh.w	r2, [r8]
 8020170:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020172:	441c      	add	r4, r3
 8020174:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020176:	f108 0802 	add.w	r8, r8, #2
 802017a:	441e      	add	r6, r3
 802017c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020180:	e77c      	b.n	802007c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020182:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020184:	441c      	add	r4, r3
 8020186:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020188:	441e      	add	r6, r3
 802018a:	9b06      	ldr	r3, [sp, #24]
 802018c:	3b01      	subs	r3, #1
 802018e:	9306      	str	r3, [sp, #24]
 8020190:	f109 0902 	add.w	r9, r9, #2
 8020194:	e752      	b.n	802003c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020196:	d020      	beq.n	80201da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020198:	9b06      	ldr	r3, [sp, #24]
 802019a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802019c:	3b01      	subs	r3, #1
 802019e:	fb00 4003 	mla	r0, r0, r3, r4
 80201a2:	1400      	asrs	r0, r0, #16
 80201a4:	f53f af67 	bmi.w	8020076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201a8:	3901      	subs	r1, #1
 80201aa:	4288      	cmp	r0, r1
 80201ac:	f6bf af63 	bge.w	8020076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201b0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80201b2:	fb01 6303 	mla	r3, r1, r3, r6
 80201b6:	141b      	asrs	r3, r3, #16
 80201b8:	f53f af5d 	bmi.w	8020076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201bc:	3a01      	subs	r2, #1
 80201be:	4293      	cmp	r3, r2
 80201c0:	f6bf af59 	bge.w	8020076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80201c4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80201c8:	46ca      	mov	sl, r9
 80201ca:	f1b8 0f00 	cmp.w	r8, #0
 80201ce:	dc67      	bgt.n	80202a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80201d0:	9b06      	ldr	r3, [sp, #24]
 80201d2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80201d6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80201da:	9b08      	ldr	r3, [sp, #32]
 80201dc:	2b00      	cmp	r3, #0
 80201de:	f340 80d7 	ble.w	8020390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80201e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80201e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80201ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80201ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80201f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80201f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80201f8:	eeb0 6a62 	vmov.f32	s12, s5
 80201fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020200:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020204:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020208:	ee16 4a10 	vmov	r4, s12
 802020c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020210:	eeb0 6a43 	vmov.f32	s12, s6
 8020214:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020218:	ee12 2a90 	vmov	r2, s5
 802021c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020220:	fb92 f3f3 	sdiv	r3, r2, r3
 8020224:	ee13 2a10 	vmov	r2, s6
 8020228:	931f      	str	r3, [sp, #124]	; 0x7c
 802022a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802022c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020230:	9320      	str	r3, [sp, #128]	; 0x80
 8020232:	9b08      	ldr	r3, [sp, #32]
 8020234:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020236:	3b01      	subs	r3, #1
 8020238:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802023c:	9308      	str	r3, [sp, #32]
 802023e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020240:	bf08      	it	eq
 8020242:	4613      	moveq	r3, r2
 8020244:	ee16 6a10 	vmov	r6, s12
 8020248:	9306      	str	r3, [sp, #24]
 802024a:	eeb0 3a67 	vmov.f32	s6, s15
 802024e:	eef0 2a47 	vmov.f32	s5, s14
 8020252:	e6e4      	b.n	802001e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020254:	2900      	cmp	r1, #0
 8020256:	f43f af4e 	beq.w	80200f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802025a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802025e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020262:	9309      	str	r3, [sp, #36]	; 0x24
 8020264:	e747      	b.n	80200f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020266:	f112 0a01 	adds.w	sl, r2, #1
 802026a:	d481      	bmi.n	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802026c:	4553      	cmp	r3, sl
 802026e:	f6ff af7f 	blt.w	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020272:	f11c 0a01 	adds.w	sl, ip, #1
 8020276:	f53f af7b 	bmi.w	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802027a:	45d6      	cmp	lr, sl
 802027c:	f6ff af78 	blt.w	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020280:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020284:	b21b      	sxth	r3, r3
 8020286:	fa0f f28e 	sxth.w	r2, lr
 802028a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802028e:	9201      	str	r2, [sp, #4]
 8020290:	9300      	str	r3, [sp, #0]
 8020292:	9a07      	ldr	r2, [sp, #28]
 8020294:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020296:	463b      	mov	r3, r7
 8020298:	4641      	mov	r1, r8
 802029a:	f7ff fe21 	bl	801fee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802029e:	e767      	b.n	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80202a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80202a2:	9d07      	ldr	r5, [sp, #28]
 80202a4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80202a8:	1422      	asrs	r2, r4, #16
 80202aa:	1431      	asrs	r1, r6, #16
 80202ac:	fb03 2101 	mla	r1, r3, r1, r2
 80202b0:	9a07      	ldr	r2, [sp, #28]
 80202b2:	440a      	add	r2, r1
 80202b4:	5c69      	ldrb	r1, [r5, r1]
 80202b6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80202ba:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80202be:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80202c2:	f1be 0f00 	cmp.w	lr, #0
 80202c6:	d05c      	beq.n	8020382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80202c8:	f892 c001 	ldrb.w	ip, [r2, #1]
 80202cc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80202d0:	950d      	str	r5, [sp, #52]	; 0x34
 80202d2:	b150      	cbz	r0, 80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80202d4:	eb02 0c03 	add.w	ip, r2, r3
 80202d8:	5cd3      	ldrb	r3, [r2, r3]
 80202da:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202de:	930a      	str	r3, [sp, #40]	; 0x28
 80202e0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80202e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202e8:	930e      	str	r3, [sp, #56]	; 0x38
 80202ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80202ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80202ee:	fb1e f200 	smulbb	r2, lr, r0
 80202f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80202f6:	10d2      	asrs	r2, r2, #3
 80202f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80202fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020300:	ea4c 0c03 	orr.w	ip, ip, r3
 8020304:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020308:	9311      	str	r3, [sp, #68]	; 0x44
 802030a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802030c:	041b      	lsls	r3, r3, #16
 802030e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020312:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020316:	ea43 030b 	orr.w	r3, r3, fp
 802031a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802031c:	4353      	muls	r3, r2
 802031e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020322:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020326:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802032a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802032e:	ea43 0b01 	orr.w	fp, r3, r1
 8020332:	f1c0 0110 	rsb	r1, r0, #16
 8020336:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020338:	eba1 0e0e 	sub.w	lr, r1, lr
 802033c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020340:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020344:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020348:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 802034c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020350:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020354:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020358:	fb02 cc0e 	mla	ip, r2, lr, ip
 802035c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020360:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020364:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020368:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802036c:	ea43 0c0c 	orr.w	ip, r3, ip
 8020370:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020372:	f82a cb02 	strh.w	ip, [sl], #2
 8020376:	441c      	add	r4, r3
 8020378:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802037a:	f108 38ff 	add.w	r8, r8, #4294967295
 802037e:	441e      	add	r6, r3
 8020380:	e723      	b.n	80201ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020382:	2800      	cmp	r0, #0
 8020384:	d0b1      	beq.n	80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020386:	5cd3      	ldrb	r3, [r2, r3]
 8020388:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802038c:	930a      	str	r3, [sp, #40]	; 0x28
 802038e:	e7ac      	b.n	80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020390:	b013      	add	sp, #76	; 0x4c
 8020392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020396:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802039a:	880d      	ldrh	r5, [r1, #0]
 802039c:	b087      	sub	sp, #28
 802039e:	10ef      	asrs	r7, r5, #3
 80203a0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80203a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80203a8:	00ed      	lsls	r5, r5, #3
 80203aa:	9701      	str	r7, [sp, #4]
 80203ac:	b2ed      	uxtb	r5, r5
 80203ae:	9502      	str	r5, [sp, #8]
 80203b0:	9d01      	ldr	r5, [sp, #4]
 80203b2:	9103      	str	r1, [sp, #12]
 80203b4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80203b8:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80203bc:	9902      	ldr	r1, [sp, #8]
 80203be:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80203c2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80203c6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80203ca:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80203ce:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80203d2:	022d      	lsls	r5, r5, #8
 80203d4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80203d8:	fb06 0709 	mla	r7, r6, r9, r0
 80203dc:	430d      	orrs	r5, r1
 80203de:	2e00      	cmp	r6, #0
 80203e0:	eb02 0c07 	add.w	ip, r2, r7
 80203e4:	9505      	str	r5, [sp, #20]
 80203e6:	f2c0 80b6 	blt.w	8020556 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80203ea:	45b3      	cmp	fp, r6
 80203ec:	f340 80b3 	ble.w	8020556 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80203f0:	2800      	cmp	r0, #0
 80203f2:	f2c0 80ae 	blt.w	8020552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80203f6:	4581      	cmp	r9, r0
 80203f8:	f340 80ab 	ble.w	8020552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80203fc:	5dd7      	ldrb	r7, [r2, r7]
 80203fe:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020402:	441f      	add	r7, r3
 8020404:	1c42      	adds	r2, r0, #1
 8020406:	f100 80a9 	bmi.w	802055c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802040a:	4591      	cmp	r9, r2
 802040c:	f340 80a6 	ble.w	802055c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020410:	2c00      	cmp	r4, #0
 8020412:	f000 80a3 	beq.w	802055c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020416:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802041a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802041e:	441d      	add	r5, r3
 8020420:	3601      	adds	r6, #1
 8020422:	f100 809f 	bmi.w	8020564 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020426:	45b3      	cmp	fp, r6
 8020428:	f340 809c 	ble.w	8020564 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802042c:	f1be 0f00 	cmp.w	lr, #0
 8020430:	f000 8098 	beq.w	8020564 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020434:	2800      	cmp	r0, #0
 8020436:	f2c0 8093 	blt.w	8020560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802043a:	4581      	cmp	r9, r0
 802043c:	f340 8090 	ble.w	8020560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020440:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020444:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020448:	441e      	add	r6, r3
 802044a:	3001      	adds	r0, #1
 802044c:	f100 808d 	bmi.w	802056a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020450:	4581      	cmp	r9, r0
 8020452:	f340 808a 	ble.w	802056a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020456:	2c00      	cmp	r4, #0
 8020458:	f000 8087 	beq.w	802056a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802045c:	44e1      	add	r9, ip
 802045e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020462:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020466:	4413      	add	r3, r2
 8020468:	b2a4      	uxth	r4, r4
 802046a:	fa1f fe8e 	uxth.w	lr, lr
 802046e:	fb04 fb0e 	mul.w	fp, r4, lr
 8020472:	0124      	lsls	r4, r4, #4
 8020474:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020478:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 802047c:	eba4 040b 	sub.w	r4, r4, fp
 8020480:	fa1f f08e 	uxth.w	r0, lr
 8020484:	b2a2      	uxth	r2, r4
 8020486:	78ac      	ldrb	r4, [r5, #2]
 8020488:	f897 c002 	ldrb.w	ip, [r7, #2]
 802048c:	9901      	ldr	r1, [sp, #4]
 802048e:	eba9 0900 	sub.w	r9, r9, r0
 8020492:	fa1f f989 	uxth.w	r9, r9
 8020496:	4354      	muls	r4, r2
 8020498:	fb09 440c 	mla	r4, r9, ip, r4
 802049c:	f896 c002 	ldrb.w	ip, [r6, #2]
 80204a0:	fb00 440c 	mla	r4, r0, ip, r4
 80204a4:	f893 c002 	ldrb.w	ip, [r3, #2]
 80204a8:	fa1f fe88 	uxth.w	lr, r8
 80204ac:	ea6f 0808 	mvn.w	r8, r8
 80204b0:	fa5f f888 	uxtb.w	r8, r8
 80204b4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80204b8:	fb1a fa08 	smulbb	sl, sl, r8
 80204bc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80204c0:	fb0c ac0e 	mla	ip, ip, lr, sl
 80204c4:	f895 a001 	ldrb.w	sl, [r5, #1]
 80204c8:	787c      	ldrb	r4, [r7, #1]
 80204ca:	782d      	ldrb	r5, [r5, #0]
 80204cc:	783f      	ldrb	r7, [r7, #0]
 80204ce:	fb02 fa0a 	mul.w	sl, r2, sl
 80204d2:	fb09 aa04 	mla	sl, r9, r4, sl
 80204d6:	7874      	ldrb	r4, [r6, #1]
 80204d8:	436a      	muls	r2, r5
 80204da:	7835      	ldrb	r5, [r6, #0]
 80204dc:	fb00 aa04 	mla	sl, r0, r4, sl
 80204e0:	fb09 2207 	mla	r2, r9, r7, r2
 80204e4:	785c      	ldrb	r4, [r3, #1]
 80204e6:	781b      	ldrb	r3, [r3, #0]
 80204e8:	fb00 2005 	mla	r0, r0, r5, r2
 80204ec:	fb0b a404 	mla	r4, fp, r4, sl
 80204f0:	fb0b 0b03 	mla	fp, fp, r3, r0
 80204f4:	9b02      	ldr	r3, [sp, #8]
 80204f6:	fb11 fa08 	smulbb	sl, r1, r8
 80204fa:	fa1f fc8c 	uxth.w	ip, ip
 80204fe:	fb13 f808 	smulbb	r8, r3, r8
 8020502:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020506:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802050a:	fb04 a40e 	mla	r4, r4, lr, sl
 802050e:	f10c 0301 	add.w	r3, ip, #1
 8020512:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020516:	fa1f fe8e 	uxth.w	lr, lr
 802051a:	b2a4      	uxth	r4, r4
 802051c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020520:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020524:	f104 0a01 	add.w	sl, r4, #1
 8020528:	f10e 0c01 	add.w	ip, lr, #1
 802052c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020530:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020534:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020538:	0964      	lsrs	r4, r4, #5
 802053a:	ea4c 0c03 	orr.w	ip, ip, r3
 802053e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020542:	9b03      	ldr	r3, [sp, #12]
 8020544:	ea4c 0c04 	orr.w	ip, ip, r4
 8020548:	f8a3 c000 	strh.w	ip, [r3]
 802054c:	b007      	add	sp, #28
 802054e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020552:	af05      	add	r7, sp, #20
 8020554:	e756      	b.n	8020404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020556:	ad05      	add	r5, sp, #20
 8020558:	462f      	mov	r7, r5
 802055a:	e761      	b.n	8020420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802055c:	ad05      	add	r5, sp, #20
 802055e:	e75f      	b.n	8020420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020560:	ae05      	add	r6, sp, #20
 8020562:	e772      	b.n	802044a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020564:	ab05      	add	r3, sp, #20
 8020566:	461e      	mov	r6, r3
 8020568:	e77e      	b.n	8020468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 802056a:	ab05      	add	r3, sp, #20
 802056c:	e77c      	b.n	8020468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802056e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802056e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020572:	b095      	sub	sp, #84	; 0x54
 8020574:	9212      	str	r2, [sp, #72]	; 0x48
 8020576:	9309      	str	r3, [sp, #36]	; 0x24
 8020578:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802057a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802057e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020580:	910e      	str	r1, [sp, #56]	; 0x38
 8020582:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020586:	9013      	str	r0, [sp, #76]	; 0x4c
 8020588:	6850      	ldr	r0, [r2, #4]
 802058a:	6812      	ldr	r2, [r2, #0]
 802058c:	fb00 1303 	mla	r3, r0, r3, r1
 8020590:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020594:	930a      	str	r3, [sp, #40]	; 0x28
 8020596:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020598:	681b      	ldr	r3, [r3, #0]
 802059a:	930d      	str	r3, [sp, #52]	; 0x34
 802059c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802059e:	685c      	ldr	r4, [r3, #4]
 80205a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80205a2:	43db      	mvns	r3, r3
 80205a4:	b2db      	uxtb	r3, r3
 80205a6:	3404      	adds	r4, #4
 80205a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80205aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80205ac:	2b00      	cmp	r3, #0
 80205ae:	dc03      	bgt.n	80205b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80205b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80205b2:	2b00      	cmp	r3, #0
 80205b4:	f340 8255 	ble.w	8020a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80205b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80205ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80205be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80205c2:	1e48      	subs	r0, r1, #1
 80205c4:	1e55      	subs	r5, r2, #1
 80205c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205c8:	2b00      	cmp	r3, #0
 80205ca:	f340 80f9 	ble.w	80207c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80205ce:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80205d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205d2:	1436      	asrs	r6, r6, #16
 80205d4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80205d8:	d406      	bmi.n	80205e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80205da:	4286      	cmp	r6, r0
 80205dc:	da04      	bge.n	80205e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80205de:	2b00      	cmp	r3, #0
 80205e0:	db02      	blt.n	80205e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80205e2:	42ab      	cmp	r3, r5
 80205e4:	f2c0 80ed 	blt.w	80207c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80205e8:	3601      	adds	r6, #1
 80205ea:	f100 80da 	bmi.w	80207a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80205ee:	42b1      	cmp	r1, r6
 80205f0:	f2c0 80d7 	blt.w	80207a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80205f4:	3301      	adds	r3, #1
 80205f6:	f100 80d4 	bmi.w	80207a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80205fa:	429a      	cmp	r2, r3
 80205fc:	f2c0 80d1 	blt.w	80207a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020602:	9311      	str	r3, [sp, #68]	; 0x44
 8020604:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020606:	930c      	str	r3, [sp, #48]	; 0x30
 8020608:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802060a:	2b00      	cmp	r3, #0
 802060c:	f340 80fa 	ble.w	8020804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020610:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020612:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020614:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020616:	68c6      	ldr	r6, [r0, #12]
 8020618:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802061a:	141d      	asrs	r5, r3, #16
 802061c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020620:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020622:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020624:	1400      	asrs	r0, r0, #16
 8020626:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802062a:	6892      	ldr	r2, [r2, #8]
 802062c:	f100 813e 	bmi.w	80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020630:	1e57      	subs	r7, r2, #1
 8020632:	42b8      	cmp	r0, r7
 8020634:	f280 813a 	bge.w	80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020638:	2d00      	cmp	r5, #0
 802063a:	f2c0 8137 	blt.w	80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802063e:	1e77      	subs	r7, r6, #1
 8020640:	42bd      	cmp	r5, r7
 8020642:	f280 8133 	bge.w	80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020646:	b212      	sxth	r2, r2
 8020648:	fb05 0002 	mla	r0, r5, r2, r0
 802064c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802064e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020652:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020656:	182e      	adds	r6, r5, r0
 8020658:	eb04 050a 	add.w	r5, r4, sl
 802065c:	2b00      	cmp	r3, #0
 802065e:	f000 8117 	beq.w	8020890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020662:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020666:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802066a:	44a4      	add	ip, r4
 802066c:	2900      	cmp	r1, #0
 802066e:	f000 8117 	beq.w	80208a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020672:	18b0      	adds	r0, r6, r2
 8020674:	5cb2      	ldrb	r2, [r6, r2]
 8020676:	7840      	ldrb	r0, [r0, #1]
 8020678:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802067c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020680:	4422      	add	r2, r4
 8020682:	4420      	add	r0, r4
 8020684:	b29b      	uxth	r3, r3
 8020686:	b289      	uxth	r1, r1
 8020688:	fb03 f901 	mul.w	r9, r3, r1
 802068c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020690:	011b      	lsls	r3, r3, #4
 8020692:	b289      	uxth	r1, r1
 8020694:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020698:	f895 b002 	ldrb.w	fp, [r5, #2]
 802069c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802069e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80206a2:	f8b6 e000 	ldrh.w	lr, [r6]
 80206a6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80206aa:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80206ae:	eba3 0309 	sub.w	r3, r3, r9
 80206b2:	b29b      	uxth	r3, r3
 80206b4:	eba8 0801 	sub.w	r8, r8, r1
 80206b8:	fa1f f888 	uxth.w	r8, r8
 80206bc:	435f      	muls	r7, r3
 80206be:	fb08 770b 	mla	r7, r8, fp, r7
 80206c2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80206c6:	9310      	str	r3, [sp, #64]	; 0x40
 80206c8:	fb01 770b 	mla	r7, r1, fp, r7
 80206cc:	f890 b002 	ldrb.w	fp, [r0, #2]
 80206d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80206d2:	fb09 770b 	mla	r7, r9, fp, r7
 80206d6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80206da:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80206de:	fb1b fb03 	smulbb	fp, fp, r3
 80206e2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80206e6:	fb07 b706 	mla	r7, r7, r6, fp
 80206ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80206ec:	f895 b001 	ldrb.w	fp, [r5, #1]
 80206f0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80206f4:	f89c c000 	ldrb.w	ip, [ip]
 80206f8:	435d      	muls	r5, r3
 80206fa:	fb08 550b 	mla	r5, r8, fp, r5
 80206fe:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020702:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020704:	fb01 550b 	mla	r5, r1, fp, r5
 8020708:	f890 b001 	ldrb.w	fp, [r0, #1]
 802070c:	fb09 550b 	mla	r5, r9, fp, r5
 8020710:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020714:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020718:	fb1b fb03 	smulbb	fp, fp, r3
 802071c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802071e:	fb03 f30c 	mul.w	r3, r3, ip
 8020722:	f892 c000 	ldrb.w	ip, [r2]
 8020726:	fb08 330a 	mla	r3, r8, sl, r3
 802072a:	fb01 330c 	mla	r3, r1, ip, r3
 802072e:	f890 c000 	ldrb.w	ip, [r0]
 8020732:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020736:	fb09 3c0c 	mla	ip, r9, ip, r3
 802073a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802073c:	fa5f fe8e 	uxtb.w	lr, lr
 8020740:	b2bf      	uxth	r7, r7
 8020742:	fb1e fe03 	smulbb	lr, lr, r3
 8020746:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802074a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802074e:	fb05 b506 	mla	r5, r5, r6, fp
 8020752:	1c7b      	adds	r3, r7, #1
 8020754:	fb0c e606 	mla	r6, ip, r6, lr
 8020758:	b2ad      	uxth	r5, r5
 802075a:	b2b6      	uxth	r6, r6
 802075c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020760:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020764:	f105 0b01 	add.w	fp, r5, #1
 8020768:	1c77      	adds	r7, r6, #1
 802076a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802076e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020772:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020776:	096d      	lsrs	r5, r5, #5
 8020778:	431f      	orrs	r7, r3
 802077a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802077e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020780:	433d      	orrs	r5, r7
 8020782:	801d      	strh	r5, [r3, #0]
 8020784:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020786:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020788:	3302      	adds	r3, #2
 802078a:	930c      	str	r3, [sp, #48]	; 0x30
 802078c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802078e:	4413      	add	r3, r2
 8020790:	931f      	str	r3, [sp, #124]	; 0x7c
 8020792:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020794:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020796:	4413      	add	r3, r2
 8020798:	9320      	str	r3, [sp, #128]	; 0x80
 802079a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802079c:	3b01      	subs	r3, #1
 802079e:	9311      	str	r3, [sp, #68]	; 0x44
 80207a0:	e732      	b.n	8020608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80207a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80207a4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80207a6:	4433      	add	r3, r6
 80207a8:	931f      	str	r3, [sp, #124]	; 0x7c
 80207aa:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80207ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80207ae:	4433      	add	r3, r6
 80207b0:	9320      	str	r3, [sp, #128]	; 0x80
 80207b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207b4:	3b01      	subs	r3, #1
 80207b6:	9309      	str	r3, [sp, #36]	; 0x24
 80207b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207ba:	3302      	adds	r3, #2
 80207bc:	930a      	str	r3, [sp, #40]	; 0x28
 80207be:	e702      	b.n	80205c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80207c0:	d027      	beq.n	8020812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80207c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207c4:	9821      	ldr	r0, [sp, #132]	; 0x84
 80207c6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80207c8:	3b01      	subs	r3, #1
 80207ca:	fb00 5003 	mla	r0, r0, r3, r5
 80207ce:	1400      	asrs	r0, r0, #16
 80207d0:	f53f af16 	bmi.w	8020600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207d4:	3901      	subs	r1, #1
 80207d6:	4288      	cmp	r0, r1
 80207d8:	f6bf af12 	bge.w	8020600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207dc:	9922      	ldr	r1, [sp, #136]	; 0x88
 80207de:	9820      	ldr	r0, [sp, #128]	; 0x80
 80207e0:	fb01 0303 	mla	r3, r1, r3, r0
 80207e4:	141b      	asrs	r3, r3, #16
 80207e6:	f53f af0b 	bmi.w	8020600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207ea:	3a01      	subs	r2, #1
 80207ec:	4293      	cmp	r3, r2
 80207ee:	f6bf af07 	bge.w	8020600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80207f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207f4:	9311      	str	r3, [sp, #68]	; 0x44
 80207f6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80207fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207fc:	930c      	str	r3, [sp, #48]	; 0x30
 80207fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020800:	2b00      	cmp	r3, #0
 8020802:	dc70      	bgt.n	80208e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020806:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020808:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802080c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020810:	930a      	str	r3, [sp, #40]	; 0x28
 8020812:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020814:	2b00      	cmp	r3, #0
 8020816:	f340 8124 	ble.w	8020a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802081a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802081e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020822:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020826:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020828:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802082c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020830:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020834:	eef0 6a62 	vmov.f32	s13, s5
 8020838:	ee61 7a27 	vmul.f32	s15, s2, s15
 802083c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020840:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020844:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020848:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802084c:	eef0 6a43 	vmov.f32	s13, s6
 8020850:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020854:	ee12 2a90 	vmov	r2, s5
 8020858:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802085c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020860:	ee13 2a10 	vmov	r2, s6
 8020864:	9321      	str	r3, [sp, #132]	; 0x84
 8020866:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020868:	fb92 f3f3 	sdiv	r3, r2, r3
 802086c:	9322      	str	r3, [sp, #136]	; 0x88
 802086e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020870:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020872:	3b01      	subs	r3, #1
 8020874:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020878:	930e      	str	r3, [sp, #56]	; 0x38
 802087a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802087c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020880:	bf08      	it	eq
 8020882:	4613      	moveq	r3, r2
 8020884:	9309      	str	r3, [sp, #36]	; 0x24
 8020886:	eeb0 3a67 	vmov.f32	s6, s15
 802088a:	eef0 2a47 	vmov.f32	s5, s14
 802088e:	e68c      	b.n	80205aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020890:	b149      	cbz	r1, 80208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020892:	5cb2      	ldrb	r2, [r6, r2]
 8020894:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020898:	4422      	add	r2, r4
 802089a:	4628      	mov	r0, r5
 802089c:	46ac      	mov	ip, r5
 802089e:	e6f1      	b.n	8020684 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208a0:	4628      	mov	r0, r5
 80208a2:	462a      	mov	r2, r5
 80208a4:	e6ee      	b.n	8020684 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208a6:	4628      	mov	r0, r5
 80208a8:	462a      	mov	r2, r5
 80208aa:	e7f7      	b.n	802089c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80208ac:	1c47      	adds	r7, r0, #1
 80208ae:	f53f af69 	bmi.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208b2:	42ba      	cmp	r2, r7
 80208b4:	f6ff af66 	blt.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208b8:	1c6f      	adds	r7, r5, #1
 80208ba:	f53f af63 	bmi.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208be:	42be      	cmp	r6, r7
 80208c0:	f6ff af60 	blt.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208c4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80208c6:	9002      	str	r0, [sp, #8]
 80208c8:	b236      	sxth	r6, r6
 80208ca:	b212      	sxth	r2, r2
 80208cc:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80208d0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80208d4:	9200      	str	r2, [sp, #0]
 80208d6:	9601      	str	r6, [sp, #4]
 80208d8:	4623      	mov	r3, r4
 80208da:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80208de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80208e0:	f7ff fd59 	bl	8020396 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80208e4:	e74e      	b.n	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80208e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80208e8:	9820      	ldr	r0, [sp, #128]	; 0x80
 80208ea:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80208ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80208ee:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80208f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80208f4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80208f8:	142d      	asrs	r5, r5, #16
 80208fa:	1400      	asrs	r0, r0, #16
 80208fc:	fb02 5000 	mla	r0, r2, r0, r5
 8020900:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020902:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020906:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802090a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802090e:	182e      	adds	r6, r5, r0
 8020910:	eb04 0509 	add.w	r5, r4, r9
 8020914:	2b00      	cmp	r3, #0
 8020916:	f000 8096 	beq.w	8020a46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802091a:	7877      	ldrb	r7, [r6, #1]
 802091c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020920:	4427      	add	r7, r4
 8020922:	2900      	cmp	r1, #0
 8020924:	f000 8097 	beq.w	8020a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020928:	18b0      	adds	r0, r6, r2
 802092a:	5cb2      	ldrb	r2, [r6, r2]
 802092c:	7840      	ldrb	r0, [r0, #1]
 802092e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020932:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020936:	4422      	add	r2, r4
 8020938:	4420      	add	r0, r4
 802093a:	b29b      	uxth	r3, r3
 802093c:	b289      	uxth	r1, r1
 802093e:	fb03 f801 	mul.w	r8, r3, r1
 8020942:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020944:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020948:	f8b6 c000 	ldrh.w	ip, [r6]
 802094c:	78be      	ldrb	r6, [r7, #2]
 802094e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020952:	011b      	lsls	r3, r3, #4
 8020954:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020958:	b289      	uxth	r1, r1
 802095a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802095e:	eba3 0308 	sub.w	r3, r3, r8
 8020962:	b29b      	uxth	r3, r3
 8020964:	ebae 0e01 	sub.w	lr, lr, r1
 8020968:	fa1f fe8e 	uxth.w	lr, lr
 802096c:	435e      	muls	r6, r3
 802096e:	fb0e 660b 	mla	r6, lr, fp, r6
 8020972:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020976:	9310      	str	r3, [sp, #64]	; 0x40
 8020978:	fb01 660b 	mla	r6, r1, fp, r6
 802097c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020980:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020982:	fb08 660b 	mla	r6, r8, fp, r6
 8020986:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802098a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802098e:	fb1b fb03 	smulbb	fp, fp, r3
 8020992:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020996:	fb06 b60a 	mla	r6, r6, sl, fp
 802099a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802099c:	f895 b001 	ldrb.w	fp, [r5, #1]
 80209a0:	787d      	ldrb	r5, [r7, #1]
 80209a2:	783f      	ldrb	r7, [r7, #0]
 80209a4:	435d      	muls	r5, r3
 80209a6:	fb0e 550b 	mla	r5, lr, fp, r5
 80209aa:	f892 b001 	ldrb.w	fp, [r2, #1]
 80209ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80209b0:	fb01 550b 	mla	r5, r1, fp, r5
 80209b4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80209b8:	fb08 550b 	mla	r5, r8, fp, r5
 80209bc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80209c0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80209c4:	fb1b fb03 	smulbb	fp, fp, r3
 80209c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80209ca:	437b      	muls	r3, r7
 80209cc:	7817      	ldrb	r7, [r2, #0]
 80209ce:	fb0e 3309 	mla	r3, lr, r9, r3
 80209d2:	fb01 3307 	mla	r3, r1, r7, r3
 80209d6:	7807      	ldrb	r7, [r0, #0]
 80209d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80209dc:	fb08 3707 	mla	r7, r8, r7, r3
 80209e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80209e2:	fa5f fc8c 	uxtb.w	ip, ip
 80209e6:	fb1c fc03 	smulbb	ip, ip, r3
 80209ea:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80209ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80209f2:	fb05 b50a 	mla	r5, r5, sl, fp
 80209f6:	fb07 c70a 	mla	r7, r7, sl, ip
 80209fa:	b2b6      	uxth	r6, r6
 80209fc:	b2ad      	uxth	r5, r5
 80209fe:	b2bf      	uxth	r7, r7
 8020a00:	1c73      	adds	r3, r6, #1
 8020a02:	1c7a      	adds	r2, r7, #1
 8020a04:	f105 0b01 	add.w	fp, r5, #1
 8020a08:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020a0c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020a10:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020a14:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020a18:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020a1c:	096d      	lsrs	r5, r5, #5
 8020a1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a20:	4316      	orrs	r6, r2
 8020a22:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020a26:	432e      	orrs	r6, r5
 8020a28:	f823 6b02 	strh.w	r6, [r3], #2
 8020a2c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020a2e:	930c      	str	r3, [sp, #48]	; 0x30
 8020a30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020a32:	4413      	add	r3, r2
 8020a34:	931f      	str	r3, [sp, #124]	; 0x7c
 8020a36:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020a38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a3a:	4413      	add	r3, r2
 8020a3c:	9320      	str	r3, [sp, #128]	; 0x80
 8020a3e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020a40:	3b01      	subs	r3, #1
 8020a42:	9311      	str	r3, [sp, #68]	; 0x44
 8020a44:	e6db      	b.n	80207fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020a46:	b149      	cbz	r1, 8020a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020a48:	5cb2      	ldrb	r2, [r6, r2]
 8020a4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a4e:	4422      	add	r2, r4
 8020a50:	4628      	mov	r0, r5
 8020a52:	462f      	mov	r7, r5
 8020a54:	e771      	b.n	802093a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020a56:	4628      	mov	r0, r5
 8020a58:	462a      	mov	r2, r5
 8020a5a:	e76e      	b.n	802093a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020a5c:	4628      	mov	r0, r5
 8020a5e:	462a      	mov	r2, r5
 8020a60:	e7f7      	b.n	8020a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020a62:	b015      	add	sp, #84	; 0x54
 8020a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020a68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a6c:	880f      	ldrh	r7, [r1, #0]
 8020a6e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020a72:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020a76:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8020a7a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020a7e:	023c      	lsls	r4, r7, #8
 8020a80:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020a84:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020a88:	017c      	lsls	r4, r7, #5
 8020a8a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8020a8e:	00ff      	lsls	r7, r7, #3
 8020a90:	ea4b 0404 	orr.w	r4, fp, r4
 8020a94:	b2ff      	uxtb	r7, r7
 8020a96:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020a9a:	4327      	orrs	r7, r4
 8020a9c:	2d00      	cmp	r5, #0
 8020a9e:	eb02 080a 	add.w	r8, r2, sl
 8020aa2:	9701      	str	r7, [sp, #4]
 8020aa4:	db7e      	blt.n	8020ba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020aa6:	45a9      	cmp	r9, r5
 8020aa8:	dd7c      	ble.n	8020ba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020aaa:	f1bc 0f00 	cmp.w	ip, #0
 8020aae:	db77      	blt.n	8020ba0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020ab0:	45e6      	cmp	lr, ip
 8020ab2:	dd75      	ble.n	8020ba0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020ab4:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020ab8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020abc:	441f      	add	r7, r3
 8020abe:	f11c 0201 	adds.w	r2, ip, #1
 8020ac2:	d472      	bmi.n	8020baa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020ac4:	4596      	cmp	lr, r2
 8020ac6:	dd70      	ble.n	8020baa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020ac8:	2800      	cmp	r0, #0
 8020aca:	d06e      	beq.n	8020baa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020acc:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020ad0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020ad4:	441c      	add	r4, r3
 8020ad6:	3501      	adds	r5, #1
 8020ad8:	d46b      	bmi.n	8020bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020ada:	45a9      	cmp	r9, r5
 8020adc:	dd69      	ble.n	8020bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020ade:	2e00      	cmp	r6, #0
 8020ae0:	d067      	beq.n	8020bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020ae2:	f1bc 0f00 	cmp.w	ip, #0
 8020ae6:	db62      	blt.n	8020bae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020ae8:	45e6      	cmp	lr, ip
 8020aea:	dd60      	ble.n	8020bae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020aec:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020af0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020af4:	441d      	add	r5, r3
 8020af6:	f11c 0201 	adds.w	r2, ip, #1
 8020afa:	d45d      	bmi.n	8020bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020afc:	4596      	cmp	lr, r2
 8020afe:	dd5b      	ble.n	8020bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020b00:	2800      	cmp	r0, #0
 8020b02:	d059      	beq.n	8020bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020b04:	44c6      	add	lr, r8
 8020b06:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020b0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b0e:	4413      	add	r3, r2
 8020b10:	b280      	uxth	r0, r0
 8020b12:	b2b2      	uxth	r2, r6
 8020b14:	fb00 f602 	mul.w	r6, r0, r2
 8020b18:	0100      	lsls	r0, r0, #4
 8020b1a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020b1e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020b22:	1b80      	subs	r0, r0, r6
 8020b24:	fa1f fc82 	uxth.w	ip, r2
 8020b28:	b282      	uxth	r2, r0
 8020b2a:	78a0      	ldrb	r0, [r4, #2]
 8020b2c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020b30:	f897 9000 	ldrb.w	r9, [r7]
 8020b34:	787f      	ldrb	r7, [r7, #1]
 8020b36:	eba8 080c 	sub.w	r8, r8, ip
 8020b3a:	fa1f f888 	uxth.w	r8, r8
 8020b3e:	4350      	muls	r0, r2
 8020b40:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020b44:	78a8      	ldrb	r0, [r5, #2]
 8020b46:	fb0c e000 	mla	r0, ip, r0, lr
 8020b4a:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020b4e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020b52:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020b56:	f894 e000 	ldrb.w	lr, [r4]
 8020b5a:	fb02 fe0e 	mul.w	lr, r2, lr
 8020b5e:	fb08 e909 	mla	r9, r8, r9, lr
 8020b62:	f895 e000 	ldrb.w	lr, [r5]
 8020b66:	fb0c 990e 	mla	r9, ip, lr, r9
 8020b6a:	f893 e000 	ldrb.w	lr, [r3]
 8020b6e:	785b      	ldrb	r3, [r3, #1]
 8020b70:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020b74:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020b78:	ea4e 0e00 	orr.w	lr, lr, r0
 8020b7c:	7860      	ldrb	r0, [r4, #1]
 8020b7e:	4350      	muls	r0, r2
 8020b80:	786a      	ldrb	r2, [r5, #1]
 8020b82:	fb08 0007 	mla	r0, r8, r7, r0
 8020b86:	fb0c 0202 	mla	r2, ip, r2, r0
 8020b8a:	fb06 2303 	mla	r3, r6, r3, r2
 8020b8e:	095b      	lsrs	r3, r3, #5
 8020b90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b94:	ea4e 0303 	orr.w	r3, lr, r3
 8020b98:	800b      	strh	r3, [r1, #0]
 8020b9a:	b003      	add	sp, #12
 8020b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ba0:	af01      	add	r7, sp, #4
 8020ba2:	e78c      	b.n	8020abe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020ba4:	ac01      	add	r4, sp, #4
 8020ba6:	4627      	mov	r7, r4
 8020ba8:	e795      	b.n	8020ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020baa:	ac01      	add	r4, sp, #4
 8020bac:	e793      	b.n	8020ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020bae:	ad01      	add	r5, sp, #4
 8020bb0:	e7a1      	b.n	8020af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020bb2:	ab01      	add	r3, sp, #4
 8020bb4:	461d      	mov	r5, r3
 8020bb6:	e7ab      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020bb8:	ab01      	add	r3, sp, #4
 8020bba:	e7a9      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bc0:	b08f      	sub	sp, #60	; 0x3c
 8020bc2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020bc6:	920c      	str	r2, [sp, #48]	; 0x30
 8020bc8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020bca:	910a      	str	r1, [sp, #40]	; 0x28
 8020bcc:	9306      	str	r3, [sp, #24]
 8020bce:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020bd2:	900d      	str	r0, [sp, #52]	; 0x34
 8020bd4:	6850      	ldr	r0, [r2, #4]
 8020bd6:	6812      	ldr	r2, [r2, #0]
 8020bd8:	fb00 1303 	mla	r3, r0, r3, r1
 8020bdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020be0:	9307      	str	r3, [sp, #28]
 8020be2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020be4:	681b      	ldr	r3, [r3, #0]
 8020be6:	9308      	str	r3, [sp, #32]
 8020be8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020bea:	685c      	ldr	r4, [r3, #4]
 8020bec:	3404      	adds	r4, #4
 8020bee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020bf0:	2b00      	cmp	r3, #0
 8020bf2:	dc03      	bgt.n	8020bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020bf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020bf6:	2b00      	cmp	r3, #0
 8020bf8:	f340 81d6 	ble.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020bfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020bfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020c02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020c06:	1e48      	subs	r0, r1, #1
 8020c08:	1e56      	subs	r6, r2, #1
 8020c0a:	9b06      	ldr	r3, [sp, #24]
 8020c0c:	2b00      	cmp	r3, #0
 8020c0e:	f340 80b7 	ble.w	8020d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020c12:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020c16:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020c1a:	d406      	bmi.n	8020c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020c1c:	4287      	cmp	r7, r0
 8020c1e:	da04      	bge.n	8020c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020c20:	2b00      	cmp	r3, #0
 8020c22:	db02      	blt.n	8020c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020c24:	42b3      	cmp	r3, r6
 8020c26:	f2c0 80ac 	blt.w	8020d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020c2a:	3701      	adds	r7, #1
 8020c2c:	f100 809d 	bmi.w	8020d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c30:	42b9      	cmp	r1, r7
 8020c32:	f2c0 809a 	blt.w	8020d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c36:	3301      	adds	r3, #1
 8020c38:	f100 8097 	bmi.w	8020d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c3c:	429a      	cmp	r2, r3
 8020c3e:	f2c0 8094 	blt.w	8020d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020c42:	9b06      	ldr	r3, [sp, #24]
 8020c44:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c46:	9b07      	ldr	r3, [sp, #28]
 8020c48:	9309      	str	r3, [sp, #36]	; 0x24
 8020c4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020c4c:	2b00      	cmp	r3, #0
 8020c4e:	f340 80b5 	ble.w	8020dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020c52:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020c54:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020c56:	68c7      	ldr	r7, [r0, #12]
 8020c58:	6892      	ldr	r2, [r2, #8]
 8020c5a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020c5e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020c62:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020c66:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020c6a:	f100 80fb 	bmi.w	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c6e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020c72:	4560      	cmp	r0, ip
 8020c74:	f280 80f6 	bge.w	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c78:	2e00      	cmp	r6, #0
 8020c7a:	f2c0 80f3 	blt.w	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c7e:	f107 3cff 	add.w	ip, r7, #4294967295
 8020c82:	4566      	cmp	r6, ip
 8020c84:	f280 80ee 	bge.w	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020c88:	b212      	sxth	r2, r2
 8020c8a:	fb06 0002 	mla	r0, r6, r2, r0
 8020c8e:	9e08      	ldr	r6, [sp, #32]
 8020c90:	1837      	adds	r7, r6, r0
 8020c92:	5c30      	ldrb	r0, [r6, r0]
 8020c94:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020c98:	eb04 0c08 	add.w	ip, r4, r8
 8020c9c:	2b00      	cmp	r3, #0
 8020c9e:	f000 80d3 	beq.w	8020e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020ca2:	787e      	ldrb	r6, [r7, #1]
 8020ca4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020ca8:	4426      	add	r6, r4
 8020caa:	2900      	cmp	r1, #0
 8020cac:	f000 80d4 	beq.w	8020e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020cb0:	18b8      	adds	r0, r7, r2
 8020cb2:	5cba      	ldrb	r2, [r7, r2]
 8020cb4:	7840      	ldrb	r0, [r0, #1]
 8020cb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020cba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cbe:	4422      	add	r2, r4
 8020cc0:	4420      	add	r0, r4
 8020cc2:	b29b      	uxth	r3, r3
 8020cc4:	b289      	uxth	r1, r1
 8020cc6:	fb03 f901 	mul.w	r9, r3, r1
 8020cca:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020cce:	011b      	lsls	r3, r3, #4
 8020cd0:	b289      	uxth	r1, r1
 8020cd2:	78b7      	ldrb	r7, [r6, #2]
 8020cd4:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020cd8:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020cdc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020ce0:	eba3 0309 	sub.w	r3, r3, r9
 8020ce4:	b29b      	uxth	r3, r3
 8020ce6:	ebae 0e01 	sub.w	lr, lr, r1
 8020cea:	fa1f fe8e 	uxth.w	lr, lr
 8020cee:	435f      	muls	r7, r3
 8020cf0:	fb0e 770a 	mla	r7, lr, sl, r7
 8020cf4:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020cf8:	fb01 770a 	mla	r7, r1, sl, r7
 8020cfc:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020d00:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020d04:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020d08:	f896 8000 	ldrb.w	r8, [r6]
 8020d0c:	7876      	ldrb	r6, [r6, #1]
 8020d0e:	fb03 f808 	mul.w	r8, r3, r8
 8020d12:	fb0e 8807 	mla	r8, lr, r7, r8
 8020d16:	7817      	ldrb	r7, [r2, #0]
 8020d18:	fb01 8807 	mla	r8, r1, r7, r8
 8020d1c:	7807      	ldrb	r7, [r0, #0]
 8020d1e:	fb09 8707 	mla	r7, r9, r7, r8
 8020d22:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020d26:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020d2a:	ea47 070a 	orr.w	r7, r7, sl
 8020d2e:	4373      	muls	r3, r6
 8020d30:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020d34:	fb0e 330c 	mla	r3, lr, ip, r3
 8020d38:	fb01 310a 	mla	r1, r1, sl, r3
 8020d3c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d42:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020d46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020d4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020d4e:	ea47 070a 	orr.w	r7, r7, sl
 8020d52:	801f      	strh	r7, [r3, #0]
 8020d54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d56:	3302      	adds	r3, #2
 8020d58:	9309      	str	r3, [sp, #36]	; 0x24
 8020d5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020d5c:	449b      	add	fp, r3
 8020d5e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d60:	441d      	add	r5, r3
 8020d62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d64:	3b01      	subs	r3, #1
 8020d66:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d68:	e76f      	b.n	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020d6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020d6c:	449b      	add	fp, r3
 8020d6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d70:	441d      	add	r5, r3
 8020d72:	9b06      	ldr	r3, [sp, #24]
 8020d74:	3b01      	subs	r3, #1
 8020d76:	9306      	str	r3, [sp, #24]
 8020d78:	9b07      	ldr	r3, [sp, #28]
 8020d7a:	3302      	adds	r3, #2
 8020d7c:	9307      	str	r3, [sp, #28]
 8020d7e:	e744      	b.n	8020c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020d80:	d023      	beq.n	8020dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020d82:	9b06      	ldr	r3, [sp, #24]
 8020d84:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020d86:	3b01      	subs	r3, #1
 8020d88:	fb00 b003 	mla	r0, r0, r3, fp
 8020d8c:	1400      	asrs	r0, r0, #16
 8020d8e:	f53f af58 	bmi.w	8020c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d92:	3901      	subs	r1, #1
 8020d94:	4288      	cmp	r0, r1
 8020d96:	f6bf af54 	bge.w	8020c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d9a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020d9c:	fb01 5303 	mla	r3, r1, r3, r5
 8020da0:	141b      	asrs	r3, r3, #16
 8020da2:	f53f af4e 	bmi.w	8020c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020da6:	3a01      	subs	r2, #1
 8020da8:	4293      	cmp	r3, r2
 8020daa:	f6bf af4a 	bge.w	8020c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020dae:	9b06      	ldr	r3, [sp, #24]
 8020db0:	9309      	str	r3, [sp, #36]	; 0x24
 8020db2:	9b07      	ldr	r3, [sp, #28]
 8020db4:	930b      	str	r3, [sp, #44]	; 0x2c
 8020db6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020db8:	2b00      	cmp	r3, #0
 8020dba:	dc70      	bgt.n	8020e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020dbc:	9b06      	ldr	r3, [sp, #24]
 8020dbe:	9a07      	ldr	r2, [sp, #28]
 8020dc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020dc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020dc8:	9307      	str	r3, [sp, #28]
 8020dca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dcc:	2b00      	cmp	r3, #0
 8020dce:	f340 80eb 	ble.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020dd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020dd6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020dda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020dde:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020de0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020de4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020de8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020dec:	eef0 6a62 	vmov.f32	s13, s5
 8020df0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020df4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020df8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020dfc:	ee16 ba90 	vmov	fp, s13
 8020e00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e04:	eef0 6a43 	vmov.f32	s13, s6
 8020e08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e0c:	ee12 2a90 	vmov	r2, s5
 8020e10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e14:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e18:	ee13 2a10 	vmov	r2, s6
 8020e1c:	931b      	str	r3, [sp, #108]	; 0x6c
 8020e1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e24:	931c      	str	r3, [sp, #112]	; 0x70
 8020e26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020e2a:	3b01      	subs	r3, #1
 8020e2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e30:	930a      	str	r3, [sp, #40]	; 0x28
 8020e32:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020e34:	bf08      	it	eq
 8020e36:	4613      	moveq	r3, r2
 8020e38:	ee16 5a90 	vmov	r5, s13
 8020e3c:	9306      	str	r3, [sp, #24]
 8020e3e:	eeb0 3a67 	vmov.f32	s6, s15
 8020e42:	eef0 2a47 	vmov.f32	s5, s14
 8020e46:	e6d2      	b.n	8020bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020e48:	b149      	cbz	r1, 8020e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020e4a:	5cba      	ldrb	r2, [r7, r2]
 8020e4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020e50:	4422      	add	r2, r4
 8020e52:	4660      	mov	r0, ip
 8020e54:	4666      	mov	r6, ip
 8020e56:	e734      	b.n	8020cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020e58:	4660      	mov	r0, ip
 8020e5a:	4662      	mov	r2, ip
 8020e5c:	e731      	b.n	8020cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020e5e:	4660      	mov	r0, ip
 8020e60:	4662      	mov	r2, ip
 8020e62:	e7f7      	b.n	8020e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020e64:	f110 0c01 	adds.w	ip, r0, #1
 8020e68:	f53f af74 	bmi.w	8020d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e6c:	4562      	cmp	r2, ip
 8020e6e:	f6ff af71 	blt.w	8020d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e72:	f116 0c01 	adds.w	ip, r6, #1
 8020e76:	f53f af6d 	bmi.w	8020d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e7a:	4567      	cmp	r7, ip
 8020e7c:	f6ff af6a 	blt.w	8020d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e80:	b23f      	sxth	r7, r7
 8020e82:	b212      	sxth	r2, r2
 8020e84:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020e88:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020e8c:	9200      	str	r2, [sp, #0]
 8020e8e:	9701      	str	r7, [sp, #4]
 8020e90:	4623      	mov	r3, r4
 8020e92:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020e96:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020e98:	f7ff fde6 	bl	8020a68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020e9c:	e75a      	b.n	8020d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e9e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020ea0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020ea4:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020ea8:	1428      	asrs	r0, r5, #16
 8020eaa:	fb02 6000 	mla	r0, r2, r0, r6
 8020eae:	9e08      	ldr	r6, [sp, #32]
 8020eb0:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020eb4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020eb8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020ebc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020ec0:	1837      	adds	r7, r6, r0
 8020ec2:	eb04 0c08 	add.w	ip, r4, r8
 8020ec6:	2b00      	cmp	r3, #0
 8020ec8:	d060      	beq.n	8020f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020eca:	787e      	ldrb	r6, [r7, #1]
 8020ecc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020ed0:	4426      	add	r6, r4
 8020ed2:	2900      	cmp	r1, #0
 8020ed4:	d062      	beq.n	8020f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020ed6:	18b8      	adds	r0, r7, r2
 8020ed8:	5cba      	ldrb	r2, [r7, r2]
 8020eda:	7840      	ldrb	r0, [r0, #1]
 8020edc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ee0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020ee4:	4422      	add	r2, r4
 8020ee6:	4420      	add	r0, r4
 8020ee8:	b29b      	uxth	r3, r3
 8020eea:	b289      	uxth	r1, r1
 8020eec:	fb03 f901 	mul.w	r9, r3, r1
 8020ef0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020ef4:	011b      	lsls	r3, r3, #4
 8020ef6:	b289      	uxth	r1, r1
 8020ef8:	78b7      	ldrb	r7, [r6, #2]
 8020efa:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020efe:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020f02:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020f06:	eba3 0309 	sub.w	r3, r3, r9
 8020f0a:	b29b      	uxth	r3, r3
 8020f0c:	ebae 0e01 	sub.w	lr, lr, r1
 8020f10:	fa1f fe8e 	uxth.w	lr, lr
 8020f14:	435f      	muls	r7, r3
 8020f16:	fb0e 770a 	mla	r7, lr, sl, r7
 8020f1a:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020f1e:	fb01 770a 	mla	r7, r1, sl, r7
 8020f22:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020f26:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020f2a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020f2e:	f896 8000 	ldrb.w	r8, [r6]
 8020f32:	7876      	ldrb	r6, [r6, #1]
 8020f34:	fb03 f808 	mul.w	r8, r3, r8
 8020f38:	fb0e 8807 	mla	r8, lr, r7, r8
 8020f3c:	7817      	ldrb	r7, [r2, #0]
 8020f3e:	fb01 8807 	mla	r8, r1, r7, r8
 8020f42:	7807      	ldrb	r7, [r0, #0]
 8020f44:	fb09 8707 	mla	r7, r9, r7, r8
 8020f48:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020f4c:	4373      	muls	r3, r6
 8020f4e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020f52:	7856      	ldrb	r6, [r2, #1]
 8020f54:	ea47 070a 	orr.w	r7, r7, sl
 8020f58:	fb0e 330c 	mla	r3, lr, ip, r3
 8020f5c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020f60:	fb01 3306 	mla	r3, r1, r6, r3
 8020f64:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020f68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020f6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020f72:	ea47 070a 	orr.w	r7, r7, sl
 8020f76:	f823 7b02 	strh.w	r7, [r3], #2
 8020f7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8020f7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020f7e:	449b      	add	fp, r3
 8020f80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020f82:	441d      	add	r5, r3
 8020f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f86:	3b01      	subs	r3, #1
 8020f88:	9309      	str	r3, [sp, #36]	; 0x24
 8020f8a:	e714      	b.n	8020db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020f8c:	b149      	cbz	r1, 8020fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020f8e:	5cba      	ldrb	r2, [r7, r2]
 8020f90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f94:	4422      	add	r2, r4
 8020f96:	4660      	mov	r0, ip
 8020f98:	4666      	mov	r6, ip
 8020f9a:	e7a5      	b.n	8020ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020f9c:	4660      	mov	r0, ip
 8020f9e:	4662      	mov	r2, ip
 8020fa0:	e7a2      	b.n	8020ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020fa2:	4660      	mov	r0, ip
 8020fa4:	4662      	mov	r2, ip
 8020fa6:	e7f7      	b.n	8020f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020fa8:	b00f      	add	sp, #60	; 0x3c
 8020faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020fae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fb2:	b085      	sub	sp, #20
 8020fb4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020fb8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020fbc:	9102      	str	r1, [sp, #8]
 8020fbe:	2c00      	cmp	r4, #0
 8020fc0:	fb04 710c 	mla	r1, r4, ip, r7
 8020fc4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020fc8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020fcc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020fd0:	eb02 0e01 	add.w	lr, r2, r1
 8020fd4:	f2c0 8122 	blt.w	802121c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020fd8:	45a0      	cmp	r8, r4
 8020fda:	f340 811f 	ble.w	802121c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020fde:	2f00      	cmp	r7, #0
 8020fe0:	f2c0 811a 	blt.w	8021218 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020fe4:	45bc      	cmp	ip, r7
 8020fe6:	f340 8117 	ble.w	8021218 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020fea:	5c52      	ldrb	r2, [r2, r1]
 8020fec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020ff0:	1c7a      	adds	r2, r7, #1
 8020ff2:	f100 8116 	bmi.w	8021222 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020ff6:	4594      	cmp	ip, r2
 8020ff8:	f340 8113 	ble.w	8021222 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020ffc:	2e00      	cmp	r6, #0
 8020ffe:	f000 8112 	beq.w	8021226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021002:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021006:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802100a:	3401      	adds	r4, #1
 802100c:	f100 810f 	bmi.w	802122e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021010:	45a0      	cmp	r8, r4
 8021012:	f340 810c 	ble.w	802122e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021016:	2800      	cmp	r0, #0
 8021018:	f000 810c 	beq.w	8021234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 802101c:	2f00      	cmp	r7, #0
 802101e:	f2c0 8104 	blt.w	802122a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021022:	45bc      	cmp	ip, r7
 8021024:	f340 8101 	ble.w	802122a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021028:	f81e 200c 	ldrb.w	r2, [lr, ip]
 802102c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021030:	3701      	adds	r7, #1
 8021032:	f100 8102 	bmi.w	802123a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021036:	45bc      	cmp	ip, r7
 8021038:	f340 80ff 	ble.w	802123a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802103c:	2e00      	cmp	r6, #0
 802103e:	f000 80fe 	beq.w	802123e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021042:	44f4      	add	ip, lr
 8021044:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021048:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802104c:	b2b6      	uxth	r6, r6
 802104e:	b280      	uxth	r0, r0
 8021050:	fb00 fe06 	mul.w	lr, r0, r6
 8021054:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021058:	0136      	lsls	r6, r6, #4
 802105a:	eba6 070e 	sub.w	r7, r6, lr
 802105e:	b280      	uxth	r0, r0
 8021060:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021064:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021068:	b2bf      	uxth	r7, r7
 802106a:	1a1b      	subs	r3, r3, r0
 802106c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021070:	b29b      	uxth	r3, r3
 8021072:	fb0a f607 	mul.w	r6, sl, r7
 8021076:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802107a:	fb0b 6603 	mla	r6, fp, r3, r6
 802107e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021082:	fb00 6609 	mla	r6, r0, r9, r6
 8021086:	fb0e 6608 	mla	r6, lr, r8, r6
 802108a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802108e:	9600      	str	r6, [sp, #0]
 8021090:	2e00      	cmp	r6, #0
 8021092:	f000 80be 	beq.w	8021212 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021096:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802109a:	fb0b fc0c 	mul.w	ip, fp, ip
 802109e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80210a2:	fb0b f505 	mul.w	r5, fp, r5
 80210a6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80210aa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80210ae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80210b2:	44dc      	add	ip, fp
 80210b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210b8:	9501      	str	r5, [sp, #4]
 80210ba:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80210be:	9503      	str	r5, [sp, #12]
 80210c0:	9d01      	ldr	r5, [sp, #4]
 80210c2:	9e02      	ldr	r6, [sp, #8]
 80210c4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80210c8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80210cc:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80210d0:	fb0a fc0c 	mul.w	ip, sl, ip
 80210d4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80210d8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80210dc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80210e0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80210e4:	4465      	add	r5, ip
 80210e6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80210ea:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80210ee:	fb09 fc0c 	mul.w	ip, r9, ip
 80210f2:	fb09 f904 	mul.w	r9, r9, r4
 80210f6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80210fa:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80210fe:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021102:	fb08 f404 	mul.w	r4, r8, r4
 8021106:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802110a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802110e:	fb08 f802 	mul.w	r8, r8, r2
 8021112:	fb0a fa01 	mul.w	sl, sl, r1
 8021116:	0a22      	lsrs	r2, r4, #8
 8021118:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802111c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021120:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021124:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021128:	4414      	add	r4, r2
 802112a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802112e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021132:	0a2d      	lsrs	r5, r5, #8
 8021134:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021138:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802113c:	9a03      	ldr	r2, [sp, #12]
 802113e:	8836      	ldrh	r6, [r6, #0]
 8021140:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021144:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021148:	437d      	muls	r5, r7
 802114a:	4461      	add	r1, ip
 802114c:	0a24      	lsrs	r4, r4, #8
 802114e:	fb02 5503 	mla	r5, r2, r3, r5
 8021152:	0a09      	lsrs	r1, r1, #8
 8021154:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021158:	fb04 540e 	mla	r4, r4, lr, r5
 802115c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021160:	fb01 4100 	mla	r1, r1, r0, r4
 8021164:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021168:	0a09      	lsrs	r1, r1, #8
 802116a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802116e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021172:	fb07 f70a 	mul.w	r7, r7, sl
 8021176:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802117a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802117e:	fb03 7101 	mla	r1, r3, r1, r7
 8021182:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021186:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802118a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802118e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021192:	fb00 e101 	mla	r1, r0, r1, lr
 8021196:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802119a:	9a00      	ldr	r2, [sp, #0]
 802119c:	b287      	uxth	r7, r0
 802119e:	437a      	muls	r2, r7
 80211a0:	0a09      	lsrs	r1, r1, #8
 80211a2:	1c53      	adds	r3, r2, #1
 80211a4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80211a8:	4321      	orrs	r1, r4
 80211aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80211ae:	1235      	asrs	r5, r6, #8
 80211b0:	0c0a      	lsrs	r2, r1, #16
 80211b2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80211b6:	b2db      	uxtb	r3, r3
 80211b8:	fb12 f207 	smulbb	r2, r2, r7
 80211bc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80211c0:	fb05 2503 	mla	r5, r5, r3, r2
 80211c4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80211c8:	10f2      	asrs	r2, r6, #3
 80211ca:	b2c8      	uxtb	r0, r1
 80211cc:	00f6      	lsls	r6, r6, #3
 80211ce:	fb14 f407 	smulbb	r4, r4, r7
 80211d2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80211d6:	b2f6      	uxtb	r6, r6
 80211d8:	fb10 f007 	smulbb	r0, r0, r7
 80211dc:	fb02 4203 	mla	r2, r2, r3, r4
 80211e0:	b2ad      	uxth	r5, r5
 80211e2:	fb06 0303 	mla	r3, r6, r3, r0
 80211e6:	b299      	uxth	r1, r3
 80211e8:	b294      	uxth	r4, r2
 80211ea:	1c6b      	adds	r3, r5, #1
 80211ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80211f0:	1c62      	adds	r2, r4, #1
 80211f2:	1c4b      	adds	r3, r1, #1
 80211f4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80211f8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80211fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021200:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021204:	0952      	lsrs	r2, r2, #5
 8021206:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802120a:	432b      	orrs	r3, r5
 802120c:	4313      	orrs	r3, r2
 802120e:	9a02      	ldr	r2, [sp, #8]
 8021210:	8013      	strh	r3, [r2, #0]
 8021212:	b005      	add	sp, #20
 8021214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021218:	2500      	movs	r5, #0
 802121a:	e6e9      	b.n	8020ff0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 802121c:	2100      	movs	r1, #0
 802121e:	460d      	mov	r5, r1
 8021220:	e6f3      	b.n	802100a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021222:	2100      	movs	r1, #0
 8021224:	e6f1      	b.n	802100a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021226:	4631      	mov	r1, r6
 8021228:	e6ef      	b.n	802100a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802122a:	2400      	movs	r4, #0
 802122c:	e700      	b.n	8021030 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802122e:	2200      	movs	r2, #0
 8021230:	4614      	mov	r4, r2
 8021232:	e70b      	b.n	802104c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021234:	4602      	mov	r2, r0
 8021236:	4604      	mov	r4, r0
 8021238:	e708      	b.n	802104c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802123a:	2200      	movs	r2, #0
 802123c:	e706      	b.n	802104c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802123e:	4632      	mov	r2, r6
 8021240:	e704      	b.n	802104c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021242:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021246:	b09f      	sub	sp, #124	; 0x7c
 8021248:	921b      	str	r2, [sp, #108]	; 0x6c
 802124a:	9309      	str	r3, [sp, #36]	; 0x24
 802124c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802124e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021252:	931c      	str	r3, [sp, #112]	; 0x70
 8021254:	9119      	str	r1, [sp, #100]	; 0x64
 8021256:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802125a:	901d      	str	r0, [sp, #116]	; 0x74
 802125c:	6850      	ldr	r0, [r2, #4]
 802125e:	6812      	ldr	r2, [r2, #0]
 8021260:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021262:	fb00 1303 	mla	r3, r0, r3, r1
 8021266:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802126a:	930c      	str	r3, [sp, #48]	; 0x30
 802126c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802126e:	681b      	ldr	r3, [r3, #0]
 8021270:	9312      	str	r3, [sp, #72]	; 0x48
 8021272:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021274:	685e      	ldr	r6, [r3, #4]
 8021276:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802127a:	930d      	str	r3, [sp, #52]	; 0x34
 802127c:	3604      	adds	r6, #4
 802127e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021280:	2b00      	cmp	r3, #0
 8021282:	dc03      	bgt.n	802128c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021284:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021286:	2b00      	cmp	r3, #0
 8021288:	f340 8388 	ble.w	802199c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802128c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802128e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021292:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021296:	1e48      	subs	r0, r1, #1
 8021298:	1e57      	subs	r7, r2, #1
 802129a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802129c:	2b00      	cmp	r3, #0
 802129e:	f340 8195 	ble.w	80215cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80212a2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80212a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80212a8:	ea4f 4325 	mov.w	r3, r5, asr #16
 80212ac:	d406      	bmi.n	80212bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80212ae:	4584      	cmp	ip, r0
 80212b0:	da04      	bge.n	80212bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80212b2:	2b00      	cmp	r3, #0
 80212b4:	db02      	blt.n	80212bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80212b6:	42bb      	cmp	r3, r7
 80212b8:	f2c0 8189 	blt.w	80215ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80212bc:	f11c 0c01 	adds.w	ip, ip, #1
 80212c0:	f100 8177 	bmi.w	80215b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212c4:	4561      	cmp	r1, ip
 80212c6:	f2c0 8174 	blt.w	80215b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212ca:	3301      	adds	r3, #1
 80212cc:	f100 8171 	bmi.w	80215b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212d0:	429a      	cmp	r2, r3
 80212d2:	f2c0 816e 	blt.w	80215b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80212d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212d8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80212da:	931a      	str	r3, [sp, #104]	; 0x68
 80212dc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80212de:	2b00      	cmp	r3, #0
 80212e0:	f340 8193 	ble.w	802160a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80212e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80212e6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80212ea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80212ec:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80212f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80212f2:	141b      	asrs	r3, r3, #16
 80212f4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80212f8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80212fc:	f100 81d6 	bmi.w	80216ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021300:	f100 38ff 	add.w	r8, r0, #4294967295
 8021304:	4543      	cmp	r3, r8
 8021306:	f280 81d1 	bge.w	80216ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802130a:	f1bc 0f00 	cmp.w	ip, #0
 802130e:	f2c0 81cd 	blt.w	80216ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021312:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021316:	45c4      	cmp	ip, r8
 8021318:	f280 81c8 	bge.w	80216ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802131c:	b200      	sxth	r0, r0
 802131e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021322:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021324:	eb04 0803 	add.w	r8, r4, r3
 8021328:	5ce3      	ldrb	r3, [r4, r3]
 802132a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802132e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021332:	2a00      	cmp	r2, #0
 8021334:	f000 81af 	beq.w	8021696 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021338:	f898 c001 	ldrb.w	ip, [r8, #1]
 802133c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021340:	940e      	str	r4, [sp, #56]	; 0x38
 8021342:	0e24      	lsrs	r4, r4, #24
 8021344:	9415      	str	r4, [sp, #84]	; 0x54
 8021346:	b179      	cbz	r1, 8021368 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021348:	eb08 0c00 	add.w	ip, r8, r0
 802134c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021350:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021354:	900a      	str	r0, [sp, #40]	; 0x28
 8021356:	0e00      	lsrs	r0, r0, #24
 8021358:	9013      	str	r0, [sp, #76]	; 0x4c
 802135a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802135e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021362:	900f      	str	r0, [sp, #60]	; 0x3c
 8021364:	0e00      	lsrs	r0, r0, #24
 8021366:	9016      	str	r0, [sp, #88]	; 0x58
 8021368:	b292      	uxth	r2, r2
 802136a:	b289      	uxth	r1, r1
 802136c:	fb02 f901 	mul.w	r9, r2, r1
 8021370:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021374:	0112      	lsls	r2, r2, #4
 8021376:	eba2 0809 	sub.w	r8, r2, r9
 802137a:	b289      	uxth	r1, r1
 802137c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021380:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021382:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021384:	fa1f f888 	uxth.w	r8, r8
 8021388:	1a52      	subs	r2, r2, r1
 802138a:	b292      	uxth	r2, r2
 802138c:	fb08 f000 	mul.w	r0, r8, r0
 8021390:	fb02 000e 	mla	r0, r2, lr, r0
 8021394:	fb01 0004 	mla	r0, r1, r4, r0
 8021398:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802139a:	fb09 0004 	mla	r0, r9, r4, r0
 802139e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80213a2:	2800      	cmp	r0, #0
 80213a4:	f000 80fa 	beq.w	802159c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80213a8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80213ac:	d01b      	beq.n	80213e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80213ae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80213b2:	fb0e fa0a 	mul.w	sl, lr, sl
 80213b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80213ba:	fb0e fe03 	mul.w	lr, lr, r3
 80213be:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80213c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80213c6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80213ca:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80213ce:	4453      	add	r3, sl
 80213d0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80213d4:	0a1b      	lsrs	r3, r3, #8
 80213d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80213de:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80213e2:	ea43 030c 	orr.w	r3, r3, ip
 80213e6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80213e8:	2cff      	cmp	r4, #255	; 0xff
 80213ea:	d021      	beq.n	8021430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80213ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80213f4:	fb04 fb0b 	mul.w	fp, r4, fp
 80213f8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021400:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021404:	fb04 fa0a 	mul.w	sl, r4, sl
 8021408:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802140c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021410:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021414:	44de      	add	lr, fp
 8021416:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802141a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802141e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021422:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021426:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802142a:	ea4e 040a 	orr.w	r4, lr, sl
 802142e:	940e      	str	r4, [sp, #56]	; 0x38
 8021430:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021432:	2cff      	cmp	r4, #255	; 0xff
 8021434:	d021      	beq.n	802147a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021436:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021438:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802143c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802143e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021442:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021444:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021448:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802144a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802144e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021452:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021456:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802145a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802145e:	44de      	add	lr, fp
 8021460:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021464:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021468:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802146c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021470:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021474:	ea4e 040a 	orr.w	r4, lr, sl
 8021478:	940a      	str	r4, [sp, #40]	; 0x28
 802147a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802147c:	2cff      	cmp	r4, #255	; 0xff
 802147e:	d021      	beq.n	80214c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021480:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021482:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021486:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021488:	fb04 fb0b 	mul.w	fp, r4, fp
 802148c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802148e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021492:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021494:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021498:	fb04 fa0a 	mul.w	sl, r4, sl
 802149c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80214a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80214a8:	44de      	add	lr, fp
 80214aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80214ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80214be:	ea4e 040a 	orr.w	r4, lr, sl
 80214c2:	940f      	str	r4, [sp, #60]	; 0x3c
 80214c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80214ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80214cc:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80214d0:	fb08 fc0c 	mul.w	ip, r8, ip
 80214d4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80214d8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80214dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80214de:	fb01 cc0e 	mla	ip, r1, lr, ip
 80214e2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80214e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214e8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80214ec:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80214f0:	fb08 f80e 	mul.w	r8, r8, lr
 80214f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80214f8:	fb02 8303 	mla	r3, r2, r3, r8
 80214fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80214fe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021500:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021504:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021506:	fb01 330a 	mla	r3, r1, sl, r3
 802150a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802150e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021510:	fb09 3901 	mla	r9, r9, r1, r3
 8021514:	4342      	muls	r2, r0
 8021516:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802151a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802151e:	883b      	ldrh	r3, [r7, #0]
 8021520:	1c50      	adds	r0, r2, #1
 8021522:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021526:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802152a:	ea4c 0c09 	orr.w	ip, ip, r9
 802152e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021532:	1219      	asrs	r1, r3, #8
 8021534:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021538:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802153c:	b2c0      	uxtb	r0, r0
 802153e:	fb12 f204 	smulbb	r2, r2, r4
 8021542:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021546:	fb01 2100 	mla	r1, r1, r0, r2
 802154a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802154e:	10da      	asrs	r2, r3, #3
 8021550:	fa5f fc8c 	uxtb.w	ip, ip
 8021554:	00db      	lsls	r3, r3, #3
 8021556:	fb1c fc04 	smulbb	ip, ip, r4
 802155a:	b2db      	uxtb	r3, r3
 802155c:	b289      	uxth	r1, r1
 802155e:	fb03 c300 	mla	r3, r3, r0, ip
 8021562:	fa1f fc83 	uxth.w	ip, r3
 8021566:	1c4b      	adds	r3, r1, #1
 8021568:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802156c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021570:	fb1e fe04 	smulbb	lr, lr, r4
 8021574:	f10c 0301 	add.w	r3, ip, #1
 8021578:	fb02 e200 	mla	r2, r2, r0, lr
 802157c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021580:	b292      	uxth	r2, r2
 8021582:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021586:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802158a:	430b      	orrs	r3, r1
 802158c:	1c51      	adds	r1, r2, #1
 802158e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021592:	0952      	lsrs	r2, r2, #5
 8021594:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021598:	4313      	orrs	r3, r2
 802159a:	803b      	strh	r3, [r7, #0]
 802159c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802159e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80215a0:	441a      	add	r2, r3
 80215a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80215a4:	9229      	str	r2, [sp, #164]	; 0xa4
 80215a6:	441d      	add	r5, r3
 80215a8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80215aa:	3b01      	subs	r3, #1
 80215ac:	3702      	adds	r7, #2
 80215ae:	931a      	str	r3, [sp, #104]	; 0x68
 80215b0:	e694      	b.n	80212dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80215b2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80215b4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80215b6:	441c      	add	r4, r3
 80215b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80215ba:	9429      	str	r4, [sp, #164]	; 0xa4
 80215bc:	441d      	add	r5, r3
 80215be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215c0:	3b01      	subs	r3, #1
 80215c2:	9309      	str	r3, [sp, #36]	; 0x24
 80215c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80215c6:	3302      	adds	r3, #2
 80215c8:	930c      	str	r3, [sp, #48]	; 0x30
 80215ca:	e666      	b.n	802129a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80215cc:	d024      	beq.n	8021618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80215ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215d0:	982b      	ldr	r0, [sp, #172]	; 0xac
 80215d2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80215d4:	3b01      	subs	r3, #1
 80215d6:	fb00 4003 	mla	r0, r0, r3, r4
 80215da:	1400      	asrs	r0, r0, #16
 80215dc:	f53f ae7b 	bmi.w	80212d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80215e0:	3901      	subs	r1, #1
 80215e2:	4288      	cmp	r0, r1
 80215e4:	f6bf ae77 	bge.w	80212d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80215e8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80215ea:	fb01 5303 	mla	r3, r1, r3, r5
 80215ee:	141b      	asrs	r3, r3, #16
 80215f0:	f53f ae71 	bmi.w	80212d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80215f4:	3a01      	subs	r2, #1
 80215f6:	4293      	cmp	r3, r2
 80215f8:	f6bf ae6d 	bge.w	80212d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80215fc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021600:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021604:	f1bb 0f00 	cmp.w	fp, #0
 8021608:	dc70      	bgt.n	80216ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802160a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802160c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021610:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021612:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021616:	930c      	str	r3, [sp, #48]	; 0x30
 8021618:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802161a:	2b00      	cmp	r3, #0
 802161c:	f340 81be 	ble.w	802199c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021620:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021624:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021628:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802162c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802162e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021632:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021636:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802163a:	eef0 6a62 	vmov.f32	s13, s5
 802163e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021646:	ee77 2a62 	vsub.f32	s5, s14, s5
 802164a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802164e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021652:	eef0 6a43 	vmov.f32	s13, s6
 8021656:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802165a:	ee12 2a90 	vmov	r2, s5
 802165e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021662:	fb92 f3f3 	sdiv	r3, r2, r3
 8021666:	ee13 2a10 	vmov	r2, s6
 802166a:	932b      	str	r3, [sp, #172]	; 0xac
 802166c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802166e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021672:	932c      	str	r3, [sp, #176]	; 0xb0
 8021674:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021676:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021678:	3b01      	subs	r3, #1
 802167a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802167e:	9319      	str	r3, [sp, #100]	; 0x64
 8021680:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021682:	bf08      	it	eq
 8021684:	4613      	moveq	r3, r2
 8021686:	ee16 5a90 	vmov	r5, s13
 802168a:	9309      	str	r3, [sp, #36]	; 0x24
 802168c:	eeb0 3a67 	vmov.f32	s6, s15
 8021690:	eef0 2a47 	vmov.f32	s5, s14
 8021694:	e5f3      	b.n	802127e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021696:	2900      	cmp	r1, #0
 8021698:	f43f ae66 	beq.w	8021368 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802169c:	f818 0000 	ldrb.w	r0, [r8, r0]
 80216a0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80216a4:	900a      	str	r0, [sp, #40]	; 0x28
 80216a6:	0e00      	lsrs	r0, r0, #24
 80216a8:	9013      	str	r0, [sp, #76]	; 0x4c
 80216aa:	e65d      	b.n	8021368 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80216ac:	f113 0801 	adds.w	r8, r3, #1
 80216b0:	f53f af74 	bmi.w	802159c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216b4:	4540      	cmp	r0, r8
 80216b6:	f6ff af71 	blt.w	802159c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216ba:	f11c 0801 	adds.w	r8, ip, #1
 80216be:	f53f af6d 	bmi.w	802159c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216c2:	45c6      	cmp	lr, r8
 80216c4:	f6ff af6a 	blt.w	802159c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216c8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80216ca:	9302      	str	r3, [sp, #8]
 80216cc:	b200      	sxth	r0, r0
 80216ce:	fa0f f38e 	sxth.w	r3, lr
 80216d2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80216d6:	e9cd c203 	strd	ip, r2, [sp, #12]
 80216da:	9301      	str	r3, [sp, #4]
 80216dc:	9000      	str	r0, [sp, #0]
 80216de:	4633      	mov	r3, r6
 80216e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80216e2:	981d      	ldr	r0, [sp, #116]	; 0x74
 80216e4:	4639      	mov	r1, r7
 80216e6:	f7ff fc62 	bl	8020fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80216ea:	e757      	b.n	802159c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80216ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80216ee:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80216f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80216f4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80216f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80216fa:	1427      	asrs	r7, r4, #16
 80216fc:	142b      	asrs	r3, r5, #16
 80216fe:	fb01 7303 	mla	r3, r1, r3, r7
 8021702:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021704:	18e7      	adds	r7, r4, r3
 8021706:	5ce3      	ldrb	r3, [r4, r3]
 8021708:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802170c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021710:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021714:	2a00      	cmp	r2, #0
 8021716:	f000 8137 	beq.w	8021988 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802171a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802171e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021722:	9410      	str	r4, [sp, #64]	; 0x40
 8021724:	0e24      	lsrs	r4, r4, #24
 8021726:	9417      	str	r4, [sp, #92]	; 0x5c
 8021728:	b170      	cbz	r0, 8021748 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802172a:	eb07 0e01 	add.w	lr, r7, r1
 802172e:	5c79      	ldrb	r1, [r7, r1]
 8021730:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021734:	910b      	str	r1, [sp, #44]	; 0x2c
 8021736:	0e09      	lsrs	r1, r1, #24
 8021738:	9114      	str	r1, [sp, #80]	; 0x50
 802173a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802173e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021742:	9111      	str	r1, [sp, #68]	; 0x44
 8021744:	0e09      	lsrs	r1, r1, #24
 8021746:	9118      	str	r1, [sp, #96]	; 0x60
 8021748:	b292      	uxth	r2, r2
 802174a:	b280      	uxth	r0, r0
 802174c:	fb02 f800 	mul.w	r8, r2, r0
 8021750:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021754:	0112      	lsls	r2, r2, #4
 8021756:	eba2 0e08 	sub.w	lr, r2, r8
 802175a:	b280      	uxth	r0, r0
 802175c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021760:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8021762:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021764:	fa1f fe8e 	uxth.w	lr, lr
 8021768:	1a12      	subs	r2, r2, r0
 802176a:	b292      	uxth	r2, r2
 802176c:	fb0e f101 	mul.w	r1, lr, r1
 8021770:	fb02 110c 	mla	r1, r2, ip, r1
 8021774:	fb00 1104 	mla	r1, r0, r4, r1
 8021778:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802177a:	fb08 1104 	mla	r1, r8, r4, r1
 802177e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021782:	2900      	cmp	r1, #0
 8021784:	f000 80f5 	beq.w	8021972 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021788:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802178c:	d019      	beq.n	80217c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802178e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021792:	fb0c fa0a 	mul.w	sl, ip, sl
 8021796:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802179a:	fb0c fc03 	mul.w	ip, ip, r3
 802179e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80217a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80217a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80217aa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80217ae:	4453      	add	r3, sl
 80217b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80217b4:	0a1b      	lsrs	r3, r3, #8
 80217b6:	0a3f      	lsrs	r7, r7, #8
 80217b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80217bc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80217c0:	433b      	orrs	r3, r7
 80217c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80217c4:	2cff      	cmp	r4, #255	; 0xff
 80217c6:	d020      	beq.n	802180a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80217c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80217ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80217d0:	4367      	muls	r7, r4
 80217d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80217d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80217d8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80217da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80217de:	fb04 fa0a 	mul.w	sl, r4, sl
 80217e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80217e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217ea:	44bc      	add	ip, r7
 80217ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021800:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021804:	ea4c 040a 	orr.w	r4, ip, sl
 8021808:	9410      	str	r4, [sp, #64]	; 0x40
 802180a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802180c:	2cff      	cmp	r4, #255	; 0xff
 802180e:	d020      	beq.n	8021852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021810:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021812:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021816:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021818:	4367      	muls	r7, r4
 802181a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802181c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021820:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021822:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021826:	fb04 fa0a 	mul.w	sl, r4, sl
 802182a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802182e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021832:	44bc      	add	ip, r7
 8021834:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021838:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802183c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021840:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021844:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021848:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802184c:	ea4c 040a 	orr.w	r4, ip, sl
 8021850:	940b      	str	r4, [sp, #44]	; 0x2c
 8021852:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021854:	2cff      	cmp	r4, #255	; 0xff
 8021856:	d020      	beq.n	802189a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021858:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802185a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802185e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021860:	4367      	muls	r7, r4
 8021862:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021864:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021868:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802186a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802186e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021872:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021876:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802187a:	44bc      	add	ip, r7
 802187c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021880:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021888:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802188c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021890:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021894:	ea4c 040a 	orr.w	r4, ip, sl
 8021898:	9411      	str	r4, [sp, #68]	; 0x44
 802189a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802189c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80218a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80218a2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80218a6:	fb0e f707 	mul.w	r7, lr, r7
 80218aa:	fb02 770c 	mla	r7, r2, ip, r7
 80218ae:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80218b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80218b4:	fb00 770c 	mla	r7, r0, ip, r7
 80218b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80218bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80218be:	fb08 770c 	mla	r7, r8, ip, r7
 80218c2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80218c6:	fb0e fe0c 	mul.w	lr, lr, ip
 80218ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80218ce:	fb02 e303 	mla	r3, r2, r3, lr
 80218d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80218d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80218d6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80218da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80218dc:	fb00 330a 	mla	r3, r0, sl, r3
 80218e0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80218e4:	fb08 3c0c 	mla	ip, r8, ip, r3
 80218e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80218ea:	f8b9 0000 	ldrh.w	r0, [r9]
 80218ee:	434b      	muls	r3, r1
 80218f0:	0a3f      	lsrs	r7, r7, #8
 80218f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218f6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80218fa:	1c59      	adds	r1, r3, #1
 80218fc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021900:	ea47 070c 	orr.w	r7, r7, ip
 8021904:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021908:	1202      	asrs	r2, r0, #8
 802190a:	0c3b      	lsrs	r3, r7, #16
 802190c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021910:	b2c9      	uxtb	r1, r1
 8021912:	fb13 f304 	smulbb	r3, r3, r4
 8021916:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802191a:	fb02 3201 	mla	r2, r2, r1, r3
 802191e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021922:	10c3      	asrs	r3, r0, #3
 8021924:	b2ff      	uxtb	r7, r7
 8021926:	00c0      	lsls	r0, r0, #3
 8021928:	b292      	uxth	r2, r2
 802192a:	fb1c fc04 	smulbb	ip, ip, r4
 802192e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021932:	b2c0      	uxtb	r0, r0
 8021934:	fb17 f704 	smulbb	r7, r7, r4
 8021938:	fb03 c301 	mla	r3, r3, r1, ip
 802193c:	fb00 7001 	mla	r0, r0, r1, r7
 8021940:	f102 0c01 	add.w	ip, r2, #1
 8021944:	b280      	uxth	r0, r0
 8021946:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802194a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802194e:	1c42      	adds	r2, r0, #1
 8021950:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021954:	b29b      	uxth	r3, r3
 8021956:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802195a:	ea42 020c 	orr.w	r2, r2, ip
 802195e:	f103 0c01 	add.w	ip, r3, #1
 8021962:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021966:	095b      	lsrs	r3, r3, #5
 8021968:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802196c:	431a      	orrs	r2, r3
 802196e:	f8a9 2000 	strh.w	r2, [r9]
 8021972:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021974:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021976:	441a      	add	r2, r3
 8021978:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802197a:	9229      	str	r2, [sp, #164]	; 0xa4
 802197c:	f109 0902 	add.w	r9, r9, #2
 8021980:	441d      	add	r5, r3
 8021982:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021986:	e63d      	b.n	8021604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021988:	2800      	cmp	r0, #0
 802198a:	f43f aedd 	beq.w	8021748 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802198e:	5c79      	ldrb	r1, [r7, r1]
 8021990:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021994:	910b      	str	r1, [sp, #44]	; 0x2c
 8021996:	0e09      	lsrs	r1, r1, #24
 8021998:	9114      	str	r1, [sp, #80]	; 0x50
 802199a:	e6d5      	b.n	8021748 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802199c:	b01f      	add	sp, #124	; 0x7c
 802199e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080219a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80219a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80219a6:	b089      	sub	sp, #36	; 0x24
 80219a8:	9101      	str	r1, [sp, #4]
 80219aa:	9801      	ldr	r0, [sp, #4]
 80219ac:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80219b0:	8800      	ldrh	r0, [r0, #0]
 80219b2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80219b6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80219ba:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80219be:	1206      	asrs	r6, r0, #8
 80219c0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80219c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80219c8:	9602      	str	r6, [sp, #8]
 80219ca:	10c6      	asrs	r6, r0, #3
 80219cc:	00c0      	lsls	r0, r0, #3
 80219ce:	b2c0      	uxtb	r0, r0
 80219d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80219d4:	9004      	str	r0, [sp, #16]
 80219d6:	2f00      	cmp	r7, #0
 80219d8:	fb07 100c 	mla	r0, r7, ip, r1
 80219dc:	9603      	str	r6, [sp, #12]
 80219de:	eb02 0e00 	add.w	lr, r2, r0
 80219e2:	f2c0 810a 	blt.w	8021bfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80219e6:	45b8      	cmp	r8, r7
 80219e8:	f340 8107 	ble.w	8021bfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80219ec:	2900      	cmp	r1, #0
 80219ee:	f2c0 8102 	blt.w	8021bf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80219f2:	458c      	cmp	ip, r1
 80219f4:	f340 80ff 	ble.w	8021bf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80219f8:	5c12      	ldrb	r2, [r2, r0]
 80219fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80219fe:	1c4a      	adds	r2, r1, #1
 8021a00:	f100 80fe 	bmi.w	8021c00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021a04:	4594      	cmp	ip, r2
 8021a06:	f340 80fb 	ble.w	8021c00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021a0a:	2d00      	cmp	r5, #0
 8021a0c:	f000 80fa 	beq.w	8021c04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021a10:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021a14:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021a18:	3701      	adds	r7, #1
 8021a1a:	f100 80f7 	bmi.w	8021c0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021a1e:	45b8      	cmp	r8, r7
 8021a20:	f340 80f4 	ble.w	8021c0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021a24:	2c00      	cmp	r4, #0
 8021a26:	f000 80f4 	beq.w	8021c12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8021a2a:	2900      	cmp	r1, #0
 8021a2c:	eb0e 020c 	add.w	r2, lr, ip
 8021a30:	f2c0 80ea 	blt.w	8021c08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021a34:	458c      	cmp	ip, r1
 8021a36:	f340 80e7 	ble.w	8021c08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021a3a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8021a3e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021a42:	3101      	adds	r1, #1
 8021a44:	f100 80e8 	bmi.w	8021c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021a48:	458c      	cmp	ip, r1
 8021a4a:	f340 80e5 	ble.w	8021c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021a4e:	2d00      	cmp	r5, #0
 8021a50:	f000 80e4 	beq.w	8021c1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021a54:	7852      	ldrb	r2, [r2, #1]
 8021a56:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021a5a:	0e0b      	lsrs	r3, r1, #24
 8021a5c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021a60:	9300      	str	r3, [sp, #0]
 8021a62:	b2a4      	uxth	r4, r4
 8021a64:	b2ab      	uxth	r3, r5
 8021a66:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8021a6a:	fb03 f904 	mul.w	r9, r3, r4
 8021a6e:	fb0a f505 	mul.w	r5, sl, r5
 8021a72:	011b      	lsls	r3, r3, #4
 8021a74:	eba3 0e09 	sub.w	lr, r3, r9
 8021a78:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8021a7c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021a80:	0a28      	lsrs	r0, r5, #8
 8021a82:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021a86:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8021a8a:	4405      	add	r5, r0
 8021a8c:	0a2d      	lsrs	r5, r5, #8
 8021a8e:	fb0a f303 	mul.w	r3, sl, r3
 8021a92:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021a96:	9005      	str	r0, [sp, #20]
 8021a98:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021a9c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021aa0:	0a1b      	lsrs	r3, r3, #8
 8021aa2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021aa6:	9306      	str	r3, [sp, #24]
 8021aa8:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021aac:	fb0b f303 	mul.w	r3, fp, r3
 8021ab0:	0a1d      	lsrs	r5, r3, #8
 8021ab2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021ab6:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021aba:	fb0b f606 	mul.w	r6, fp, r6
 8021abe:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021ac2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021ac6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021aca:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021ace:	fb08 f707 	mul.w	r7, r8, r7
 8021ad2:	441d      	add	r5, r3
 8021ad4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021ad8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021adc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021ae0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021ae4:	fb08 fc0c 	mul.w	ip, r8, ip
 8021ae8:	0a1b      	lsrs	r3, r3, #8
 8021aea:	9307      	str	r3, [sp, #28]
 8021aec:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021af0:	0e0b      	lsrs	r3, r1, #24
 8021af2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021af6:	435f      	muls	r7, r3
 8021af8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021afc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021b00:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021b04:	4460      	add	r0, ip
 8021b06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021b0a:	b2a4      	uxth	r4, r4
 8021b0c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021b10:	0a2d      	lsrs	r5, r5, #8
 8021b12:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021b16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021b1a:	fa1f fe8e 	uxth.w	lr, lr
 8021b1e:	4359      	muls	r1, r3
 8021b20:	1b12      	subs	r2, r2, r4
 8021b22:	9b05      	ldr	r3, [sp, #20]
 8021b24:	44bc      	add	ip, r7
 8021b26:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021b2a:	b292      	uxth	r2, r2
 8021b2c:	fb05 f50e 	mul.w	r5, r5, lr
 8021b30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b34:	fb03 5502 	mla	r5, r3, r2, r5
 8021b38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021b3c:	9b06      	ldr	r3, [sp, #24]
 8021b3e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021b42:	0a36      	lsrs	r6, r6, #8
 8021b44:	0a00      	lsrs	r0, r0, #8
 8021b46:	fb0c 5509 	mla	r5, ip, r9, r5
 8021b4a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021b4e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021b52:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021b56:	fb00 5504 	mla	r5, r0, r4, r5
 8021b5a:	fb0e f606 	mul.w	r6, lr, r6
 8021b5e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021b62:	0a09      	lsrs	r1, r1, #8
 8021b64:	9b07      	ldr	r3, [sp, #28]
 8021b66:	fb02 6000 	mla	r0, r2, r0, r6
 8021b6a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021b6e:	fb09 0001 	mla	r0, r9, r1, r0
 8021b72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021b76:	fb0e fe0b 	mul.w	lr, lr, fp
 8021b7a:	fb04 0003 	mla	r0, r4, r3, r0
 8021b7e:	fb02 e20a 	mla	r2, r2, sl, lr
 8021b82:	9b00      	ldr	r3, [sp, #0]
 8021b84:	fb04 2408 	mla	r4, r4, r8, r2
 8021b88:	fb09 4903 	mla	r9, r9, r3, r4
 8021b8c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021b90:	9b02      	ldr	r3, [sp, #8]
 8021b92:	9a04      	ldr	r2, [sp, #16]
 8021b94:	fa5f f989 	uxtb.w	r9, r9
 8021b98:	fb03 f109 	mul.w	r1, r3, r9
 8021b9c:	9b03      	ldr	r3, [sp, #12]
 8021b9e:	0a2d      	lsrs	r5, r5, #8
 8021ba0:	0a00      	lsrs	r0, r0, #8
 8021ba2:	fb03 f309 	mul.w	r3, r3, r9
 8021ba6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021baa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021bae:	4305      	orrs	r5, r0
 8021bb0:	fb02 f909 	mul.w	r9, r2, r9
 8021bb4:	1c58      	adds	r0, r3, #1
 8021bb6:	1c4a      	adds	r2, r1, #1
 8021bb8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021bbc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021bc0:	0a2b      	lsrs	r3, r5, #8
 8021bc2:	0c2a      	lsrs	r2, r5, #16
 8021bc4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021bc8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021bcc:	00db      	lsls	r3, r3, #3
 8021bce:	0212      	lsls	r2, r2, #8
 8021bd0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021bd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021bd8:	4313      	orrs	r3, r2
 8021bda:	f109 0201 	add.w	r2, r9, #1
 8021bde:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021be2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021be6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021bea:	431d      	orrs	r5, r3
 8021bec:	9b01      	ldr	r3, [sp, #4]
 8021bee:	801d      	strh	r5, [r3, #0]
 8021bf0:	b009      	add	sp, #36	; 0x24
 8021bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bf6:	2000      	movs	r0, #0
 8021bf8:	e701      	b.n	80219fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021bfa:	2600      	movs	r6, #0
 8021bfc:	4630      	mov	r0, r6
 8021bfe:	e70b      	b.n	8021a18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021c00:	2600      	movs	r6, #0
 8021c02:	e709      	b.n	8021a18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021c04:	462e      	mov	r6, r5
 8021c06:	e707      	b.n	8021a18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021c08:	2700      	movs	r7, #0
 8021c0a:	e71a      	b.n	8021a42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021c0c:	2100      	movs	r1, #0
 8021c0e:	460f      	mov	r7, r1
 8021c10:	e723      	b.n	8021a5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021c12:	4621      	mov	r1, r4
 8021c14:	4627      	mov	r7, r4
 8021c16:	e720      	b.n	8021a5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021c18:	2100      	movs	r1, #0
 8021c1a:	e71e      	b.n	8021a5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021c1c:	4629      	mov	r1, r5
 8021c1e:	e71c      	b.n	8021a5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021c20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c24:	b09b      	sub	sp, #108	; 0x6c
 8021c26:	9218      	str	r2, [sp, #96]	; 0x60
 8021c28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021c2a:	9116      	str	r1, [sp, #88]	; 0x58
 8021c2c:	9307      	str	r3, [sp, #28]
 8021c2e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021c32:	9019      	str	r0, [sp, #100]	; 0x64
 8021c34:	6850      	ldr	r0, [r2, #4]
 8021c36:	6812      	ldr	r2, [r2, #0]
 8021c38:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021c3a:	fb00 1303 	mla	r3, r0, r3, r1
 8021c3e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021c42:	930a      	str	r3, [sp, #40]	; 0x28
 8021c44:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c46:	681b      	ldr	r3, [r3, #0]
 8021c48:	930f      	str	r3, [sp, #60]	; 0x3c
 8021c4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c4c:	685e      	ldr	r6, [r3, #4]
 8021c4e:	3604      	adds	r6, #4
 8021c50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021c52:	2b00      	cmp	r3, #0
 8021c54:	dc03      	bgt.n	8021c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021c56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021c58:	2b00      	cmp	r3, #0
 8021c5a:	f340 8373 	ble.w	8022344 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021c5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c68:	1e48      	subs	r0, r1, #1
 8021c6a:	1e57      	subs	r7, r2, #1
 8021c6c:	9b07      	ldr	r3, [sp, #28]
 8021c6e:	2b00      	cmp	r3, #0
 8021c70:	f340 8190 	ble.w	8021f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021c74:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021c76:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021c7a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021c7e:	d406      	bmi.n	8021c8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021c80:	4584      	cmp	ip, r0
 8021c82:	da04      	bge.n	8021c8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021c84:	2b00      	cmp	r3, #0
 8021c86:	db02      	blt.n	8021c8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021c88:	42bb      	cmp	r3, r7
 8021c8a:	f2c0 8184 	blt.w	8021f96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021c8e:	f11c 0c01 	adds.w	ip, ip, #1
 8021c92:	f100 8172 	bmi.w	8021f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c96:	4561      	cmp	r1, ip
 8021c98:	f2c0 816f 	blt.w	8021f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c9c:	3301      	adds	r3, #1
 8021c9e:	f100 816c 	bmi.w	8021f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ca2:	429a      	cmp	r2, r3
 8021ca4:	f2c0 8169 	blt.w	8021f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ca8:	9b07      	ldr	r3, [sp, #28]
 8021caa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021cac:	9317      	str	r3, [sp, #92]	; 0x5c
 8021cae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021cb0:	2b00      	cmp	r3, #0
 8021cb2:	f340 818e 	ble.w	8021fd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021cb6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021cb8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021cbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021cbe:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021cc2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021cc4:	141b      	asrs	r3, r3, #16
 8021cc6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021cca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021cce:	f100 81d1 	bmi.w	8022074 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021cd2:	f101 38ff 	add.w	r8, r1, #4294967295
 8021cd6:	4543      	cmp	r3, r8
 8021cd8:	f280 81cc 	bge.w	8022074 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021cdc:	f1bc 0f00 	cmp.w	ip, #0
 8021ce0:	f2c0 81c8 	blt.w	8022074 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ce4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021ce8:	45c4      	cmp	ip, r8
 8021cea:	f280 81c3 	bge.w	8022074 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021cee:	b209      	sxth	r1, r1
 8021cf0:	fb0c 3301 	mla	r3, ip, r1, r3
 8021cf4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021cf6:	eb04 0803 	add.w	r8, r4, r3
 8021cfa:	5ce3      	ldrb	r3, [r4, r3]
 8021cfc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021d00:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021d04:	2a00      	cmp	r2, #0
 8021d06:	f000 81aa 	beq.w	802205e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021d0a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021d0e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021d12:	940b      	str	r4, [sp, #44]	; 0x2c
 8021d14:	0e24      	lsrs	r4, r4, #24
 8021d16:	9412      	str	r4, [sp, #72]	; 0x48
 8021d18:	b178      	cbz	r0, 8021d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021d1a:	eb08 0c01 	add.w	ip, r8, r1
 8021d1e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021d22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021d26:	9108      	str	r1, [sp, #32]
 8021d28:	0e09      	lsrs	r1, r1, #24
 8021d2a:	9110      	str	r1, [sp, #64]	; 0x40
 8021d2c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021d30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021d34:	910c      	str	r1, [sp, #48]	; 0x30
 8021d36:	0e09      	lsrs	r1, r1, #24
 8021d38:	9113      	str	r1, [sp, #76]	; 0x4c
 8021d3a:	b292      	uxth	r2, r2
 8021d3c:	b280      	uxth	r0, r0
 8021d3e:	fb02 f900 	mul.w	r9, r2, r0
 8021d42:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021d46:	0112      	lsls	r2, r2, #4
 8021d48:	eba2 0809 	sub.w	r8, r2, r9
 8021d4c:	b280      	uxth	r0, r0
 8021d4e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021d52:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021d54:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d56:	fa1f f888 	uxth.w	r8, r8
 8021d5a:	1a12      	subs	r2, r2, r0
 8021d5c:	b292      	uxth	r2, r2
 8021d5e:	fb08 f101 	mul.w	r1, r8, r1
 8021d62:	fb02 110e 	mla	r1, r2, lr, r1
 8021d66:	fb00 1104 	mla	r1, r0, r4, r1
 8021d6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021d6c:	fb09 1104 	mla	r1, r9, r4, r1
 8021d70:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021d74:	2900      	cmp	r1, #0
 8021d76:	f000 80f5 	beq.w	8021f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021d7a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021d7e:	d01b      	beq.n	8021db8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021d80:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021d84:	fb0e fa0a 	mul.w	sl, lr, sl
 8021d88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021d8c:	fb0e fe03 	mul.w	lr, lr, r3
 8021d90:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021d94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021d98:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021d9c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021da0:	4453      	add	r3, sl
 8021da2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021da6:	0a1b      	lsrs	r3, r3, #8
 8021da8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021dac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021db0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021db4:	ea43 030c 	orr.w	r3, r3, ip
 8021db8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dba:	2cff      	cmp	r4, #255	; 0xff
 8021dbc:	d021      	beq.n	8021e02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021dbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021dc0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021dc4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dc6:	fb04 fb0b 	mul.w	fp, r4, fp
 8021dca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021dcc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021dd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dd2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021dd6:	fb04 fa0a 	mul.w	sl, r4, sl
 8021dda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021dde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021de2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021de6:	44de      	add	lr, fp
 8021de8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021dec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021df0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021df4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021df8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021dfc:	ea4e 040a 	orr.w	r4, lr, sl
 8021e00:	940b      	str	r4, [sp, #44]	; 0x2c
 8021e02:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e04:	2cff      	cmp	r4, #255	; 0xff
 8021e06:	d021      	beq.n	8021e4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021e08:	9c08      	ldr	r4, [sp, #32]
 8021e0a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e0e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e10:	fb04 fb0b 	mul.w	fp, r4, fp
 8021e14:	9c08      	ldr	r4, [sp, #32]
 8021e16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021e1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e20:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021e2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021e30:	44de      	add	lr, fp
 8021e32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e46:	ea4e 040a 	orr.w	r4, lr, sl
 8021e4a:	9408      	str	r4, [sp, #32]
 8021e4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e4e:	2cff      	cmp	r4, #255	; 0xff
 8021e50:	d021      	beq.n	8021e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021e52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021e54:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e5a:	fb04 fb0b 	mul.w	fp, r4, fp
 8021e5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021e60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021e64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e6a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e72:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021e76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021e7a:	44de      	add	lr, fp
 8021e7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021e8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e90:	ea4e 040a 	orr.w	r4, lr, sl
 8021e94:	940c      	str	r4, [sp, #48]	; 0x30
 8021e96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021e98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021e9c:	9c08      	ldr	r4, [sp, #32]
 8021e9e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021ea2:	fb08 fc0c 	mul.w	ip, r8, ip
 8021ea6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021eaa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021eae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021eb0:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021eb4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021eb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021eba:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021ebe:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021ec2:	fb08 f80e 	mul.w	r8, r8, lr
 8021ec6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021eca:	fb02 8303 	mla	r3, r2, r3, r8
 8021ece:	9a08      	ldr	r2, [sp, #32]
 8021ed0:	f8b7 8000 	ldrh.w	r8, [r7]
 8021ed4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021ed8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021eda:	fb00 330a 	mla	r3, r0, sl, r3
 8021ede:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021ee2:	fb09 3900 	mla	r9, r9, r0, r3
 8021ee6:	43c9      	mvns	r1, r1
 8021ee8:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021eec:	fa5f fe81 	uxtb.w	lr, r1
 8021ef0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021ef4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021ef8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021efc:	fb02 f20e 	mul.w	r2, r2, lr
 8021f00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f04:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021f08:	ea4c 0c09 	orr.w	ip, ip, r9
 8021f0c:	1c53      	adds	r3, r2, #1
 8021f0e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021f12:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021f16:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021f1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021f1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021f22:	4a63      	ldr	r2, [pc, #396]	; (80220b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021f24:	fb00 f00e 	mul.w	r0, r0, lr
 8021f28:	b2db      	uxtb	r3, r3
 8021f2a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021f2e:	1c43      	adds	r3, r0, #1
 8021f30:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021f34:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021f38:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021f3c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021f40:	b2c9      	uxtb	r1, r1
 8021f42:	00db      	lsls	r3, r3, #3
 8021f44:	fb01 f10e 	mul.w	r1, r1, lr
 8021f48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f4c:	4313      	orrs	r3, r2
 8021f4e:	1c4a      	adds	r2, r1, #1
 8021f50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021f54:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021f58:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021f5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021f60:	f8a7 c000 	strh.w	ip, [r7]
 8021f64:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021f66:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021f68:	441a      	add	r2, r3
 8021f6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f6c:	9225      	str	r2, [sp, #148]	; 0x94
 8021f6e:	441d      	add	r5, r3
 8021f70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021f72:	3b01      	subs	r3, #1
 8021f74:	3702      	adds	r7, #2
 8021f76:	9317      	str	r3, [sp, #92]	; 0x5c
 8021f78:	e699      	b.n	8021cae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021f7a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021f7c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f7e:	441c      	add	r4, r3
 8021f80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021f82:	9425      	str	r4, [sp, #148]	; 0x94
 8021f84:	441d      	add	r5, r3
 8021f86:	9b07      	ldr	r3, [sp, #28]
 8021f88:	3b01      	subs	r3, #1
 8021f8a:	9307      	str	r3, [sp, #28]
 8021f8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021f8e:	3302      	adds	r3, #2
 8021f90:	930a      	str	r3, [sp, #40]	; 0x28
 8021f92:	e66b      	b.n	8021c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021f94:	d024      	beq.n	8021fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021f96:	9b07      	ldr	r3, [sp, #28]
 8021f98:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021f9a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f9c:	3b01      	subs	r3, #1
 8021f9e:	fb00 4003 	mla	r0, r0, r3, r4
 8021fa2:	1400      	asrs	r0, r0, #16
 8021fa4:	f53f ae80 	bmi.w	8021ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fa8:	3901      	subs	r1, #1
 8021faa:	4288      	cmp	r0, r1
 8021fac:	f6bf ae7c 	bge.w	8021ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fb0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021fb2:	fb01 5303 	mla	r3, r1, r3, r5
 8021fb6:	141b      	asrs	r3, r3, #16
 8021fb8:	f53f ae76 	bmi.w	8021ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fbc:	3a01      	subs	r2, #1
 8021fbe:	4293      	cmp	r3, r2
 8021fc0:	f6bf ae72 	bge.w	8021ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fc4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021fc8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021fcc:	f1bb 0f00 	cmp.w	fp, #0
 8021fd0:	dc70      	bgt.n	80220b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021fd2:	9b07      	ldr	r3, [sp, #28]
 8021fd4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021fd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021fda:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021fde:	930a      	str	r3, [sp, #40]	; 0x28
 8021fe0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021fe2:	2b00      	cmp	r3, #0
 8021fe4:	f340 81ae 	ble.w	8022344 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021fe8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021fec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ff0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021ff4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ff6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021ffa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021ffe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022002:	eef0 6a62 	vmov.f32	s13, s5
 8022006:	ee61 7a27 	vmul.f32	s15, s2, s15
 802200a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802200e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022012:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022016:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802201a:	eef0 6a43 	vmov.f32	s13, s6
 802201e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022022:	ee12 2a90 	vmov	r2, s5
 8022026:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802202a:	fb92 f3f3 	sdiv	r3, r2, r3
 802202e:	ee13 2a10 	vmov	r2, s6
 8022032:	9327      	str	r3, [sp, #156]	; 0x9c
 8022034:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022036:	fb92 f3f3 	sdiv	r3, r2, r3
 802203a:	9328      	str	r3, [sp, #160]	; 0xa0
 802203c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802203e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022040:	3b01      	subs	r3, #1
 8022042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022046:	9316      	str	r3, [sp, #88]	; 0x58
 8022048:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802204a:	bf08      	it	eq
 802204c:	4613      	moveq	r3, r2
 802204e:	ee16 5a90 	vmov	r5, s13
 8022052:	9307      	str	r3, [sp, #28]
 8022054:	eeb0 3a67 	vmov.f32	s6, s15
 8022058:	eef0 2a47 	vmov.f32	s5, s14
 802205c:	e5f8      	b.n	8021c50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802205e:	2800      	cmp	r0, #0
 8022060:	f43f ae6b 	beq.w	8021d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022064:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022068:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802206c:	9108      	str	r1, [sp, #32]
 802206e:	0e09      	lsrs	r1, r1, #24
 8022070:	9110      	str	r1, [sp, #64]	; 0x40
 8022072:	e662      	b.n	8021d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022074:	f113 0801 	adds.w	r8, r3, #1
 8022078:	f53f af74 	bmi.w	8021f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802207c:	4541      	cmp	r1, r8
 802207e:	f6ff af71 	blt.w	8021f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022082:	f11c 0801 	adds.w	r8, ip, #1
 8022086:	f53f af6d 	bmi.w	8021f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802208a:	45c6      	cmp	lr, r8
 802208c:	f6ff af6a 	blt.w	8021f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022090:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022094:	b209      	sxth	r1, r1
 8022096:	fa0f f38e 	sxth.w	r3, lr
 802209a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802209e:	9301      	str	r3, [sp, #4]
 80220a0:	9100      	str	r1, [sp, #0]
 80220a2:	4633      	mov	r3, r6
 80220a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80220a6:	9819      	ldr	r0, [sp, #100]	; 0x64
 80220a8:	4639      	mov	r1, r7
 80220aa:	f7ff fc7a 	bl	80219a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80220ae:	e759      	b.n	8021f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80220b0:	fffff800 	.word	0xfffff800
 80220b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80220b6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80220b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80220bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80220be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80220c2:	1427      	asrs	r7, r4, #16
 80220c4:	142b      	asrs	r3, r5, #16
 80220c6:	fb01 7303 	mla	r3, r1, r3, r7
 80220ca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80220cc:	18e7      	adds	r7, r4, r3
 80220ce:	5ce3      	ldrb	r3, [r4, r3]
 80220d0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80220d4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80220d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80220dc:	2a00      	cmp	r2, #0
 80220de:	f000 8127 	beq.w	8022330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80220e2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80220e6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80220ea:	940d      	str	r4, [sp, #52]	; 0x34
 80220ec:	0e24      	lsrs	r4, r4, #24
 80220ee:	9414      	str	r4, [sp, #80]	; 0x50
 80220f0:	b170      	cbz	r0, 8022110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80220f2:	eb07 0e01 	add.w	lr, r7, r1
 80220f6:	5c79      	ldrb	r1, [r7, r1]
 80220f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80220fc:	9109      	str	r1, [sp, #36]	; 0x24
 80220fe:	0e09      	lsrs	r1, r1, #24
 8022100:	9111      	str	r1, [sp, #68]	; 0x44
 8022102:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022106:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802210a:	910e      	str	r1, [sp, #56]	; 0x38
 802210c:	0e09      	lsrs	r1, r1, #24
 802210e:	9115      	str	r1, [sp, #84]	; 0x54
 8022110:	b292      	uxth	r2, r2
 8022112:	b280      	uxth	r0, r0
 8022114:	fb02 f800 	mul.w	r8, r2, r0
 8022118:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802211c:	0112      	lsls	r2, r2, #4
 802211e:	eba2 0e08 	sub.w	lr, r2, r8
 8022122:	b280      	uxth	r0, r0
 8022124:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022128:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802212a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802212c:	fa1f fe8e 	uxth.w	lr, lr
 8022130:	1a09      	subs	r1, r1, r0
 8022132:	b289      	uxth	r1, r1
 8022134:	fb0e f202 	mul.w	r2, lr, r2
 8022138:	fb01 220c 	mla	r2, r1, ip, r2
 802213c:	fb00 2204 	mla	r2, r0, r4, r2
 8022140:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022142:	fb08 2204 	mla	r2, r8, r4, r2
 8022146:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802214a:	2a00      	cmp	r2, #0
 802214c:	f000 80e5 	beq.w	802231a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022150:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022154:	d019      	beq.n	802218a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022156:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802215a:	fb0c fa0a 	mul.w	sl, ip, sl
 802215e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022162:	fb0c fc03 	mul.w	ip, ip, r3
 8022166:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802216a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802216e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022172:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022176:	4453      	add	r3, sl
 8022178:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802217c:	0a1b      	lsrs	r3, r3, #8
 802217e:	0a3f      	lsrs	r7, r7, #8
 8022180:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022184:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022188:	433b      	orrs	r3, r7
 802218a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802218c:	2cff      	cmp	r4, #255	; 0xff
 802218e:	d020      	beq.n	80221d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022190:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022192:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022196:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022198:	4367      	muls	r7, r4
 802219a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802219c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80221a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80221aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80221ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221b2:	44bc      	add	ip, r7
 80221b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80221b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80221bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80221c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80221cc:	ea4c 040a 	orr.w	r4, ip, sl
 80221d0:	940d      	str	r4, [sp, #52]	; 0x34
 80221d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80221d4:	2cff      	cmp	r4, #255	; 0xff
 80221d6:	d020      	beq.n	802221a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80221d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80221da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80221e0:	4367      	muls	r7, r4
 80221e2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80221e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80221ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80221f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80221f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221fa:	44bc      	add	ip, r7
 80221fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022200:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022204:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022208:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802220c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022210:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022214:	ea4c 040a 	orr.w	r4, ip, sl
 8022218:	9409      	str	r4, [sp, #36]	; 0x24
 802221a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802221c:	2cff      	cmp	r4, #255	; 0xff
 802221e:	d020      	beq.n	8022262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022220:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022222:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022226:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022228:	4367      	muls	r7, r4
 802222a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802222c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022230:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022232:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022236:	fb04 fa0a 	mul.w	sl, r4, sl
 802223a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802223e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022242:	44bc      	add	ip, r7
 8022244:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022248:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802224c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022250:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022254:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022258:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802225c:	ea4c 040a 	orr.w	r4, ip, sl
 8022260:	940e      	str	r4, [sp, #56]	; 0x38
 8022262:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022264:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022268:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802226a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802226e:	fb0e f707 	mul.w	r7, lr, r7
 8022272:	fb01 770c 	mla	r7, r1, ip, r7
 8022276:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802227a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802227c:	fb00 770c 	mla	r7, r0, ip, r7
 8022280:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022284:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022286:	fb08 770c 	mla	r7, r8, ip, r7
 802228a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802228e:	fb0e fe0c 	mul.w	lr, lr, ip
 8022292:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022296:	fb01 e303 	mla	r3, r1, r3, lr
 802229a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802229c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80222a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80222a2:	fb00 330a 	mla	r3, r0, sl, r3
 80222a6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80222aa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80222ae:	f8b9 3000 	ldrh.w	r3, [r9]
 80222b2:	43d2      	mvns	r2, r2
 80222b4:	1218      	asrs	r0, r3, #8
 80222b6:	b2d2      	uxtb	r2, r2
 80222b8:	10d9      	asrs	r1, r3, #3
 80222ba:	0a3f      	lsrs	r7, r7, #8
 80222bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80222c4:	00db      	lsls	r3, r3, #3
 80222c6:	4350      	muls	r0, r2
 80222c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80222cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80222d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80222d4:	b2db      	uxtb	r3, r3
 80222d6:	ea47 070c 	orr.w	r7, r7, ip
 80222da:	4351      	muls	r1, r2
 80222dc:	4353      	muls	r3, r2
 80222de:	1c42      	adds	r2, r0, #1
 80222e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80222e4:	0c3a      	lsrs	r2, r7, #16
 80222e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80222ea:	4a18      	ldr	r2, [pc, #96]	; (802234c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80222ec:	b2c0      	uxtb	r0, r0
 80222ee:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80222f2:	1c4a      	adds	r2, r1, #1
 80222f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80222f8:	0a3a      	lsrs	r2, r7, #8
 80222fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80222fe:	00c9      	lsls	r1, r1, #3
 8022300:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022304:	4301      	orrs	r1, r0
 8022306:	1c58      	adds	r0, r3, #1
 8022308:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802230c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022310:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022314:	4308      	orrs	r0, r1
 8022316:	f8a9 0000 	strh.w	r0, [r9]
 802231a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802231c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802231e:	441a      	add	r2, r3
 8022320:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022322:	9225      	str	r2, [sp, #148]	; 0x94
 8022324:	f109 0902 	add.w	r9, r9, #2
 8022328:	441d      	add	r5, r3
 802232a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802232e:	e64d      	b.n	8021fcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022330:	2800      	cmp	r0, #0
 8022332:	f43f aeed 	beq.w	8022110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022336:	5c79      	ldrb	r1, [r7, r1]
 8022338:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802233c:	9109      	str	r1, [sp, #36]	; 0x24
 802233e:	0e09      	lsrs	r1, r1, #24
 8022340:	9111      	str	r1, [sp, #68]	; 0x44
 8022342:	e6e5      	b.n	8022110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022344:	b01b      	add	sp, #108	; 0x6c
 8022346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802234a:	bf00      	nop
 802234c:	fffff800 	.word	0xfffff800

08022350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022354:	b085      	sub	sp, #20
 8022356:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802235a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802235e:	9103      	str	r1, [sp, #12]
 8022360:	fb00 7406 	mla	r4, r0, r6, r7
 8022364:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022368:	2800      	cmp	r0, #0
 802236a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802236e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022372:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022376:	9501      	str	r5, [sp, #4]
 8022378:	eb03 0904 	add.w	r9, r3, r4
 802237c:	f2c0 8150 	blt.w	8022620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022380:	4583      	cmp	fp, r0
 8022382:	f340 814d 	ble.w	8022620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022386:	2f00      	cmp	r7, #0
 8022388:	f2c0 8146 	blt.w	8022618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802238c:	42be      	cmp	r6, r7
 802238e:	f340 8143 	ble.w	8022618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022392:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022396:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802239a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802239e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80223a2:	4355      	muls	r5, r2
 80223a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80223a8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80223ac:	fb0c f203 	mul.w	r2, ip, r3
 80223b0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80223b4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80223b8:	441d      	add	r5, r3
 80223ba:	f102 0320 	add.w	r3, r2, #32
 80223be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80223c2:	0a1b      	lsrs	r3, r3, #8
 80223c4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80223c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80223cc:	431c      	orrs	r4, r3
 80223ce:	1c7b      	adds	r3, r7, #1
 80223d0:	f100 812b 	bmi.w	802262a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80223d4:	429e      	cmp	r6, r3
 80223d6:	f340 8128 	ble.w	802262a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80223da:	2900      	cmp	r1, #0
 80223dc:	f000 8128 	beq.w	8022630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80223e0:	9a01      	ldr	r2, [sp, #4]
 80223e2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80223e6:	8855      	ldrh	r5, [r2, #2]
 80223e8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80223ec:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80223f0:	fb08 f802 	mul.w	r8, r8, r2
 80223f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80223f8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80223fc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022400:	435d      	muls	r5, r3
 8022402:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022406:	44d0      	add	r8, sl
 8022408:	f105 0a20 	add.w	sl, r5, #32
 802240c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022410:	0a2d      	lsrs	r5, r5, #8
 8022412:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022416:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802241a:	432a      	orrs	r2, r5
 802241c:	3001      	adds	r0, #1
 802241e:	f100 810d 	bmi.w	802263c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022422:	4583      	cmp	fp, r0
 8022424:	f340 810a 	ble.w	802263c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022428:	f1be 0f00 	cmp.w	lr, #0
 802242c:	f000 810b 	beq.w	8022646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022430:	2f00      	cmp	r7, #0
 8022432:	f2c0 8100 	blt.w	8022636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022436:	42be      	cmp	r6, r7
 8022438:	f340 80fd 	ble.w	8022636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802243c:	9801      	ldr	r0, [sp, #4]
 802243e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022442:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022446:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802244a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802244e:	fb0a fa00 	mul.w	sl, sl, r0
 8022452:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022456:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802245a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802245e:	fb05 f808 	mul.w	r8, r5, r8
 8022462:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022466:	4482      	add	sl, r0
 8022468:	f108 0020 	add.w	r0, r8, #32
 802246c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022470:	0a00      	lsrs	r0, r0, #8
 8022472:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022476:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802247a:	ea4b 0b00 	orr.w	fp, fp, r0
 802247e:	3701      	adds	r7, #1
 8022480:	f100 80e6 	bmi.w	8022650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022484:	42be      	cmp	r6, r7
 8022486:	f340 80e3 	ble.w	8022650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802248a:	2900      	cmp	r1, #0
 802248c:	f000 80e3 	beq.w	8022656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022490:	3601      	adds	r6, #1
 8022492:	9801      	ldr	r0, [sp, #4]
 8022494:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022498:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802249c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80224a0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80224a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224a8:	fb09 f906 	mul.w	r9, r9, r6
 80224ac:	fb07 f800 	mul.w	r8, r7, r0
 80224b0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80224b4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80224b8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80224bc:	44d1      	add	r9, sl
 80224be:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80224c2:	f108 0020 	add.w	r0, r8, #32
 80224c6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80224ca:	0a00      	lsrs	r0, r0, #8
 80224cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224d0:	4330      	orrs	r0, r6
 80224d2:	b28e      	uxth	r6, r1
 80224d4:	fa1f f98e 	uxth.w	r9, lr
 80224d8:	fb06 f809 	mul.w	r8, r6, r9
 80224dc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80224e0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80224e4:	0136      	lsls	r6, r6, #4
 80224e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224ea:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80224ee:	9601      	str	r6, [sp, #4]
 80224f0:	ea4a 0404 	orr.w	r4, sl, r4
 80224f4:	fa1f f689 	uxth.w	r6, r9
 80224f8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80224fc:	fb11 f90e 	smulbb	r9, r1, lr
 8022500:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022504:	9602      	str	r6, [sp, #8]
 8022506:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802250a:	4626      	mov	r6, r4
 802250c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022510:	f1ce 0410 	rsb	r4, lr, #16
 8022514:	1a64      	subs	r4, r4, r1
 8022516:	ea4a 0202 	orr.w	r2, sl, r2
 802251a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802251e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022522:	434a      	muls	r2, r1
 8022524:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022528:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802252c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022530:	fb04 2406 	mla	r4, r4, r6, r2
 8022534:	ea4a 0000 	orr.w	r0, sl, r0
 8022538:	fb09 4200 	mla	r2, r9, r0, r4
 802253c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022540:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022544:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022548:	ea44 0b0b 	orr.w	fp, r4, fp
 802254c:	9c01      	ldr	r4, [sp, #4]
 802254e:	9e02      	ldr	r6, [sp, #8]
 8022550:	9903      	ldr	r1, [sp, #12]
 8022552:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022556:	1ba4      	subs	r4, r4, r6
 8022558:	9e01      	ldr	r6, [sp, #4]
 802255a:	8808      	ldrh	r0, [r1, #0]
 802255c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022560:	eba6 0608 	sub.w	r6, r6, r8
 8022564:	b2b6      	uxth	r6, r6
 8022566:	b2a4      	uxth	r4, r4
 8022568:	4373      	muls	r3, r6
 802256a:	fb0c 3304 	mla	r3, ip, r4, r3
 802256e:	9c02      	ldr	r4, [sp, #8]
 8022570:	fb04 3505 	mla	r5, r4, r5, r3
 8022574:	fb08 5707 	mla	r7, r8, r7, r5
 8022578:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802257c:	b289      	uxth	r1, r1
 802257e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022582:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022586:	434f      	muls	r7, r1
 8022588:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802258c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022590:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022594:	1c7b      	adds	r3, r7, #1
 8022596:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802259a:	ea42 0e0e 	orr.w	lr, r2, lr
 802259e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80225a2:	fa1f f28e 	uxth.w	r2, lr
 80225a6:	1203      	asrs	r3, r0, #8
 80225a8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80225ac:	b2ff      	uxtb	r7, r7
 80225ae:	1215      	asrs	r5, r2, #8
 80225b0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80225b4:	fb13 f307 	smulbb	r3, r3, r7
 80225b8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80225bc:	fb05 3501 	mla	r5, r5, r1, r3
 80225c0:	10c3      	asrs	r3, r0, #3
 80225c2:	10d4      	asrs	r4, r2, #3
 80225c4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80225c8:	fb13 f307 	smulbb	r3, r3, r7
 80225cc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80225d0:	fb04 3401 	mla	r4, r4, r1, r3
 80225d4:	00c3      	lsls	r3, r0, #3
 80225d6:	00d2      	lsls	r2, r2, #3
 80225d8:	b2db      	uxtb	r3, r3
 80225da:	fb13 f307 	smulbb	r3, r3, r7
 80225de:	b2d2      	uxtb	r2, r2
 80225e0:	fb02 3101 	mla	r1, r2, r1, r3
 80225e4:	b2ad      	uxth	r5, r5
 80225e6:	b289      	uxth	r1, r1
 80225e8:	b2a4      	uxth	r4, r4
 80225ea:	1c6b      	adds	r3, r5, #1
 80225ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80225f0:	1c62      	adds	r2, r4, #1
 80225f2:	1c4b      	adds	r3, r1, #1
 80225f4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80225f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80225fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022600:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022604:	0964      	lsrs	r4, r4, #5
 8022606:	432b      	orrs	r3, r5
 8022608:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802260c:	9a03      	ldr	r2, [sp, #12]
 802260e:	4323      	orrs	r3, r4
 8022610:	8013      	strh	r3, [r2, #0]
 8022612:	b005      	add	sp, #20
 8022614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022618:	f04f 0c00 	mov.w	ip, #0
 802261c:	4664      	mov	r4, ip
 802261e:	e6d6      	b.n	80223ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022620:	2300      	movs	r3, #0
 8022622:	469c      	mov	ip, r3
 8022624:	461a      	mov	r2, r3
 8022626:	461c      	mov	r4, r3
 8022628:	e6f8      	b.n	802241c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802262a:	2300      	movs	r3, #0
 802262c:	461a      	mov	r2, r3
 802262e:	e6f5      	b.n	802241c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022630:	460b      	mov	r3, r1
 8022632:	460a      	mov	r2, r1
 8022634:	e6f2      	b.n	802241c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022636:	2500      	movs	r5, #0
 8022638:	46ab      	mov	fp, r5
 802263a:	e720      	b.n	802247e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 802263c:	2700      	movs	r7, #0
 802263e:	463d      	mov	r5, r7
 8022640:	4638      	mov	r0, r7
 8022642:	46bb      	mov	fp, r7
 8022644:	e745      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022646:	4677      	mov	r7, lr
 8022648:	4675      	mov	r5, lr
 802264a:	4670      	mov	r0, lr
 802264c:	46f3      	mov	fp, lr
 802264e:	e740      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022650:	2700      	movs	r7, #0
 8022652:	4638      	mov	r0, r7
 8022654:	e73d      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022656:	460f      	mov	r7, r1
 8022658:	4608      	mov	r0, r1
 802265a:	e73a      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0802265c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802265c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022660:	b097      	sub	sp, #92	; 0x5c
 8022662:	9214      	str	r2, [sp, #80]	; 0x50
 8022664:	9308      	str	r3, [sp, #32]
 8022666:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022668:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802266c:	9312      	str	r3, [sp, #72]	; 0x48
 802266e:	9111      	str	r1, [sp, #68]	; 0x44
 8022670:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022674:	9015      	str	r0, [sp, #84]	; 0x54
 8022676:	6850      	ldr	r0, [r2, #4]
 8022678:	6812      	ldr	r2, [r2, #0]
 802267a:	fb00 1303 	mla	r3, r0, r3, r1
 802267e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022682:	9309      	str	r3, [sp, #36]	; 0x24
 8022684:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022686:	681b      	ldr	r3, [r3, #0]
 8022688:	930b      	str	r3, [sp, #44]	; 0x2c
 802268a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802268c:	685b      	ldr	r3, [r3, #4]
 802268e:	930c      	str	r3, [sp, #48]	; 0x30
 8022690:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022694:	930a      	str	r3, [sp, #40]	; 0x28
 8022696:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022698:	2b00      	cmp	r3, #0
 802269a:	dc03      	bgt.n	80226a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802269c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802269e:	2b00      	cmp	r3, #0
 80226a0:	f340 83cb 	ble.w	8022e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80226a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80226a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80226ae:	1e48      	subs	r0, r1, #1
 80226b0:	1e55      	subs	r5, r2, #1
 80226b2:	9b08      	ldr	r3, [sp, #32]
 80226b4:	2b00      	cmp	r3, #0
 80226b6:	f340 81a3 	ble.w	8022a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80226ba:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80226bc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80226be:	1436      	asrs	r6, r6, #16
 80226c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80226c4:	d406      	bmi.n	80226d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80226c6:	4286      	cmp	r6, r0
 80226c8:	da04      	bge.n	80226d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80226ca:	2b00      	cmp	r3, #0
 80226cc:	db02      	blt.n	80226d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80226ce:	42ab      	cmp	r3, r5
 80226d0:	f2c0 8197 	blt.w	8022a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80226d4:	3601      	adds	r6, #1
 80226d6:	f100 8184 	bmi.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226da:	42b1      	cmp	r1, r6
 80226dc:	f2c0 8181 	blt.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226e0:	3301      	adds	r3, #1
 80226e2:	f100 817e 	bmi.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226e6:	429a      	cmp	r2, r3
 80226e8:	f2c0 817b 	blt.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80226ec:	9b08      	ldr	r3, [sp, #32]
 80226ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80226f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80226f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80226f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80226f8:	2b00      	cmp	r3, #0
 80226fa:	f340 81a4 	ble.w	8022a46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80226fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022700:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022702:	1418      	asrs	r0, r3, #16
 8022704:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022706:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802270a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802270c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022710:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022712:	142d      	asrs	r5, r5, #16
 8022714:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022718:	f100 81f8 	bmi.w	8022b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802271c:	f102 3eff 	add.w	lr, r2, #4294967295
 8022720:	4575      	cmp	r5, lr
 8022722:	f280 81f3 	bge.w	8022b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022726:	2800      	cmp	r0, #0
 8022728:	f2c0 81f0 	blt.w	8022b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802272c:	f103 3eff 	add.w	lr, r3, #4294967295
 8022730:	4570      	cmp	r0, lr
 8022732:	f280 81eb 	bge.w	8022b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022736:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022738:	b212      	sxth	r2, r2
 802273a:	fb00 5002 	mla	r0, r0, r2, r5
 802273e:	fa1f fe81 	uxth.w	lr, r1
 8022742:	eb03 0a00 	add.w	sl, r3, r0
 8022746:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802274a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802274e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022752:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022756:	b29b      	uxth	r3, r3
 8022758:	f1bc 0f00 	cmp.w	ip, #0
 802275c:	f000 81b9 	beq.w	8022ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8022760:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022764:	940d      	str	r4, [sp, #52]	; 0x34
 8022766:	eb0a 0b02 	add.w	fp, sl, r2
 802276a:	fa1f fa8c 	uxth.w	sl, ip
 802276e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022772:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022776:	fa1f fa8a 	uxth.w	sl, sl
 802277a:	eba5 050e 	sub.w	r5, r5, lr
 802277e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022782:	940e      	str	r4, [sp, #56]	; 0x38
 8022784:	eba3 030a 	sub.w	r3, r3, sl
 8022788:	b2ad      	uxth	r5, r5
 802278a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802278c:	b29b      	uxth	r3, r3
 802278e:	fb08 f505 	mul.w	r5, r8, r5
 8022792:	fb09 5303 	mla	r3, r9, r3, r5
 8022796:	fb0a 3304 	mla	r3, sl, r4, r3
 802279a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802279c:	fb0e 3304 	mla	r3, lr, r4, r3
 80227a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80227a4:	2b00      	cmp	r3, #0
 80227a6:	f000 810f 	beq.w	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80227aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80227b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80227b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80227b8:	f000 8190 	beq.w	8022adc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80227bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80227c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80227c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80227c8:	fb09 f000 	mul.w	r0, r9, r0
 80227cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80227d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80227d4:	f100 0b20 	add.w	fp, r0, #32
 80227d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80227dc:	44ce      	add	lr, r9
 80227de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80227e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80227e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80227ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80227ee:	ea4e 0909 	orr.w	r9, lr, r9
 80227f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80227f6:	8868      	ldrh	r0, [r5, #2]
 80227f8:	d019      	beq.n	802282e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80227fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80227fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022802:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022806:	fb08 f800 	mul.w	r8, r8, r0
 802280a:	fb0a fe0e 	mul.w	lr, sl, lr
 802280e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022812:	f108 0b20 	add.w	fp, r8, #32
 8022816:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802281a:	4486      	add	lr, r0
 802281c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022820:	0a00      	lsrs	r0, r0, #8
 8022822:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022826:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802282a:	ea4e 0000 	orr.w	r0, lr, r0
 802282e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022832:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022836:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802283a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802283e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022842:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022846:	ea4e 0909 	orr.w	r9, lr, r9
 802284a:	ea4a 0000 	orr.w	r0, sl, r0
 802284e:	f1bc 0f00 	cmp.w	ip, #0
 8022852:	f000 8145 	beq.w	8022ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022856:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802285a:	3a01      	subs	r2, #1
 802285c:	0052      	lsls	r2, r2, #1
 802285e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022860:	3202      	adds	r2, #2
 8022862:	2cff      	cmp	r4, #255	; 0xff
 8022864:	eb05 0e02 	add.w	lr, r5, r2
 8022868:	5aaa      	ldrh	r2, [r5, r2]
 802286a:	d018      	beq.n	802289e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802286c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022870:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022874:	fb04 fa02 	mul.w	sl, r4, r2
 8022878:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802287c:	fb08 f805 	mul.w	r8, r8, r5
 8022880:	f10a 0520 	add.w	r5, sl, #32
 8022884:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022888:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802288c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022890:	4442      	add	r2, r8
 8022892:	0a2d      	lsrs	r5, r5, #8
 8022894:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022898:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802289c:	432a      	orrs	r2, r5
 802289e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80228a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80228a4:	2cff      	cmp	r4, #255	; 0xff
 80228a6:	d01a      	beq.n	80228de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80228a8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80228ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80228b0:	fb04 fa05 	mul.w	sl, r4, r5
 80228b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80228b8:	fb08 f80e 	mul.w	r8, r8, lr
 80228bc:	f10a 0e20 	add.w	lr, sl, #32
 80228c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80228c4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80228c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80228cc:	4445      	add	r5, r8
 80228ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80228d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80228d6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80228da:	ea45 050e 	orr.w	r5, r5, lr
 80228de:	fb1c fe01 	smulbb	lr, ip, r1
 80228e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80228e6:	f1cc 0810 	rsb	r8, ip, #16
 80228ea:	eba8 0801 	sub.w	r8, r8, r1
 80228ee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80228f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80228f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80228fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80228fe:	4341      	muls	r1, r0
 8022900:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022904:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022908:	ea4a 0202 	orr.w	r2, sl, r2
 802290c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022910:	fb09 1108 	mla	r1, r9, r8, r1
 8022914:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022918:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802291c:	fb0c 1102 	mla	r1, ip, r2, r1
 8022920:	ea4b 0505 	orr.w	r5, fp, r5
 8022924:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022928:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802292c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022930:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022934:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022938:	ea42 0e0e 	orr.w	lr, r2, lr
 802293c:	fa1f f28e 	uxth.w	r2, lr
 8022940:	2bff      	cmp	r3, #255	; 0xff
 8022942:	d103      	bne.n	802294c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022944:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022946:	29ff      	cmp	r1, #255	; 0xff
 8022948:	f000 80de 	beq.w	8022b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 802294c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802294e:	8838      	ldrh	r0, [r7, #0]
 8022950:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022952:	434b      	muls	r3, r1
 8022954:	f103 0c01 	add.w	ip, r3, #1
 8022958:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 802295c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022960:	fa5f fc83 	uxtb.w	ip, r3
 8022964:	1203      	asrs	r3, r0, #8
 8022966:	1215      	asrs	r5, r2, #8
 8022968:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802296c:	fb13 f30c 	smulbb	r3, r3, ip
 8022970:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022974:	fb05 3501 	mla	r5, r5, r1, r3
 8022978:	10c3      	asrs	r3, r0, #3
 802297a:	10d1      	asrs	r1, r2, #3
 802297c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022980:	fb13 f30c 	smulbb	r3, r3, ip
 8022984:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022988:	fb01 3104 	mla	r1, r1, r4, r3
 802298c:	00c3      	lsls	r3, r0, #3
 802298e:	00d2      	lsls	r2, r2, #3
 8022990:	b2db      	uxtb	r3, r3
 8022992:	b2d2      	uxtb	r2, r2
 8022994:	fb13 f30c 	smulbb	r3, r3, ip
 8022998:	b2ad      	uxth	r5, r5
 802299a:	fb02 3304 	mla	r3, r2, r4, r3
 802299e:	b29a      	uxth	r2, r3
 80229a0:	1c6b      	adds	r3, r5, #1
 80229a2:	b289      	uxth	r1, r1
 80229a4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80229a8:	1c53      	adds	r3, r2, #1
 80229aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80229ae:	1c4a      	adds	r2, r1, #1
 80229b0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80229b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80229b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80229bc:	0949      	lsrs	r1, r1, #5
 80229be:	432b      	orrs	r3, r5
 80229c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229c4:	430b      	orrs	r3, r1
 80229c6:	803b      	strh	r3, [r7, #0]
 80229c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80229ca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80229cc:	4413      	add	r3, r2
 80229ce:	9321      	str	r3, [sp, #132]	; 0x84
 80229d0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80229d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229d4:	441a      	add	r2, r3
 80229d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80229d8:	9222      	str	r2, [sp, #136]	; 0x88
 80229da:	3b01      	subs	r3, #1
 80229dc:	3702      	adds	r7, #2
 80229de:	9313      	str	r3, [sp, #76]	; 0x4c
 80229e0:	e689      	b.n	80226f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80229e4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80229e6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80229e8:	4433      	add	r3, r6
 80229ea:	9321      	str	r3, [sp, #132]	; 0x84
 80229ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229ee:	441c      	add	r4, r3
 80229f0:	9b08      	ldr	r3, [sp, #32]
 80229f2:	9422      	str	r4, [sp, #136]	; 0x88
 80229f4:	3b01      	subs	r3, #1
 80229f6:	9308      	str	r3, [sp, #32]
 80229f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229fa:	3302      	adds	r3, #2
 80229fc:	9309      	str	r3, [sp, #36]	; 0x24
 80229fe:	e658      	b.n	80226b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022a00:	d028      	beq.n	8022a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022a02:	9b08      	ldr	r3, [sp, #32]
 8022a04:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022a06:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022a08:	3b01      	subs	r3, #1
 8022a0a:	fb00 5003 	mla	r0, r0, r3, r5
 8022a0e:	1400      	asrs	r0, r0, #16
 8022a10:	f53f ae6c 	bmi.w	80226ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a14:	3901      	subs	r1, #1
 8022a16:	4288      	cmp	r0, r1
 8022a18:	f6bf ae68 	bge.w	80226ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a1c:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022a1e:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022a20:	fb01 0303 	mla	r3, r1, r3, r0
 8022a24:	141b      	asrs	r3, r3, #16
 8022a26:	f53f ae61 	bmi.w	80226ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a2a:	3a01      	subs	r2, #1
 8022a2c:	4293      	cmp	r3, r2
 8022a2e:	f6bf ae5d 	bge.w	80226ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a32:	9b08      	ldr	r3, [sp, #32]
 8022a34:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022a38:	9313      	str	r3, [sp, #76]	; 0x4c
 8022a3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022a3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022a40:	2b00      	cmp	r3, #0
 8022a42:	f300 8082 	bgt.w	8022b4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022a46:	9b08      	ldr	r3, [sp, #32]
 8022a48:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022a4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a4e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022a52:	9309      	str	r3, [sp, #36]	; 0x24
 8022a54:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022a56:	2b00      	cmp	r3, #0
 8022a58:	f340 81ef 	ble.w	8022e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022a5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a64:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a76:	eef0 6a62 	vmov.f32	s13, s5
 8022a7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a86:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8022a8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a8e:	eef0 6a43 	vmov.f32	s13, s6
 8022a92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a96:	ee12 2a90 	vmov	r2, s5
 8022a9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aa2:	ee13 2a10 	vmov	r2, s6
 8022aa6:	9323      	str	r3, [sp, #140]	; 0x8c
 8022aa8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022aaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aae:	9324      	str	r3, [sp, #144]	; 0x90
 8022ab0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022ab2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022ab4:	3b01      	subs	r3, #1
 8022ab6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022aba:	9311      	str	r3, [sp, #68]	; 0x44
 8022abc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022abe:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022ac2:	bf08      	it	eq
 8022ac4:	4613      	moveq	r3, r2
 8022ac6:	9308      	str	r3, [sp, #32]
 8022ac8:	eeb0 3a67 	vmov.f32	s6, s15
 8022acc:	eef0 2a47 	vmov.f32	s5, s14
 8022ad0:	e5e1      	b.n	8022696 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022ad2:	fb08 f505 	mul.w	r5, r8, r5
 8022ad6:	fb09 5303 	mla	r3, r9, r3, r5
 8022ada:	e661      	b.n	80227a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022adc:	4681      	mov	r9, r0
 8022ade:	e688      	b.n	80227f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022ae0:	f1c1 0210 	rsb	r2, r1, #16
 8022ae4:	4341      	muls	r1, r0
 8022ae6:	fb09 1902 	mla	r9, r9, r2, r1
 8022aea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022aee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022af2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022af6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022afa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022afe:	ea42 0909 	orr.w	r9, r2, r9
 8022b02:	fa1f f289 	uxth.w	r2, r9
 8022b06:	e71b      	b.n	8022940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022b08:	803a      	strh	r2, [r7, #0]
 8022b0a:	e75d      	b.n	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b0c:	f115 0e01 	adds.w	lr, r5, #1
 8022b10:	f53f af5a 	bmi.w	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b14:	4572      	cmp	r2, lr
 8022b16:	f6ff af57 	blt.w	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b1a:	f110 0e01 	adds.w	lr, r0, #1
 8022b1e:	f53f af53 	bmi.w	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b22:	4573      	cmp	r3, lr
 8022b24:	f6ff af50 	blt.w	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022b2a:	9502      	str	r5, [sp, #8]
 8022b2c:	b21b      	sxth	r3, r3
 8022b2e:	b212      	sxth	r2, r2
 8022b30:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022b34:	9301      	str	r3, [sp, #4]
 8022b36:	9200      	str	r2, [sp, #0]
 8022b38:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022b3c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022b40:	4639      	mov	r1, r7
 8022b42:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022b44:	f7ff fc04 	bl	8022350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022b48:	e73e      	b.n	80229c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b4a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022b50:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022b52:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022b56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b5c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022b5e:	141f      	asrs	r7, r3, #16
 8022b60:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b62:	141b      	asrs	r3, r3, #16
 8022b64:	fb01 3707 	mla	r7, r1, r7, r3
 8022b68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022b6a:	fa1f fc82 	uxth.w	ip, r2
 8022b6e:	eb03 0a07 	add.w	sl, r3, r7
 8022b72:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022b76:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022b7a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022b7e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022b82:	b29b      	uxth	r3, r3
 8022b84:	2d00      	cmp	r5, #0
 8022b86:	f000 813d 	beq.w	8022e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022b8a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022b8e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022b90:	eb0a 0b01 	add.w	fp, sl, r1
 8022b94:	fa1f fa85 	uxth.w	sl, r5
 8022b98:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b9c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022ba0:	fa1f fa8a 	uxth.w	sl, sl
 8022ba4:	eba0 000c 	sub.w	r0, r0, ip
 8022ba8:	eba3 030a 	sub.w	r3, r3, sl
 8022bac:	b280      	uxth	r0, r0
 8022bae:	fb08 f000 	mul.w	r0, r8, r0
 8022bb2:	b29b      	uxth	r3, r3
 8022bb4:	fb09 0303 	mla	r3, r9, r3, r0
 8022bb8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022bba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022bbe:	9410      	str	r4, [sp, #64]	; 0x40
 8022bc0:	fb0a 3300 	mla	r3, sl, r0, r3
 8022bc4:	fb0c 3304 	mla	r3, ip, r4, r3
 8022bc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022bcc:	2b00      	cmp	r3, #0
 8022bce:	f000 810b 	beq.w	8022de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022bd2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022bd4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022bd6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022bda:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022bde:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022be2:	f000 8114 	beq.w	8022e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022be6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022bea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022bee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bf2:	fb09 f707 	mul.w	r7, r9, r7
 8022bf6:	fb0a fc0c 	mul.w	ip, sl, ip
 8022bfa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022bfe:	f107 0b20 	add.w	fp, r7, #32
 8022c02:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022c06:	44cc      	add	ip, r9
 8022c08:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022c0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022c10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022c14:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022c18:	ea4c 0909 	orr.w	r9, ip, r9
 8022c1c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022c20:	8847      	ldrh	r7, [r0, #2]
 8022c22:	d019      	beq.n	8022c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022c24:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022c28:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022c2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c30:	fb08 f807 	mul.w	r8, r8, r7
 8022c34:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c38:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022c3c:	f108 0b20 	add.w	fp, r8, #32
 8022c40:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022c44:	44bc      	add	ip, r7
 8022c46:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022c4a:	0a3f      	lsrs	r7, r7, #8
 8022c4c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022c50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c54:	ea4c 0707 	orr.w	r7, ip, r7
 8022c58:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022c5c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022c60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022c64:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022c68:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c6c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c70:	ea4c 0909 	orr.w	r9, ip, r9
 8022c74:	ea4a 0707 	orr.w	r7, sl, r7
 8022c78:	2d00      	cmp	r5, #0
 8022c7a:	f000 80ca 	beq.w	8022e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022c7e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022c82:	3901      	subs	r1, #1
 8022c84:	0049      	lsls	r1, r1, #1
 8022c86:	3102      	adds	r1, #2
 8022c88:	eb00 0c01 	add.w	ip, r0, r1
 8022c8c:	5a41      	ldrh	r1, [r0, r1]
 8022c8e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022c90:	28ff      	cmp	r0, #255	; 0xff
 8022c92:	d019      	beq.n	8022cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022c94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022c96:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022c9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c9e:	fb04 fa01 	mul.w	sl, r4, r1
 8022ca2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ca6:	fb08 f800 	mul.w	r8, r8, r0
 8022caa:	f10a 0020 	add.w	r0, sl, #32
 8022cae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022cb2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022cb6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022cba:	4441      	add	r1, r8
 8022cbc:	0a00      	lsrs	r0, r0, #8
 8022cbe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022cc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022cc6:	4301      	orrs	r1, r0
 8022cc8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022cca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022cce:	2cff      	cmp	r4, #255	; 0xff
 8022cd0:	d01a      	beq.n	8022d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022cd2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022cd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022cda:	fb04 fa00 	mul.w	sl, r4, r0
 8022cde:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ce2:	fb08 f80c 	mul.w	r8, r8, ip
 8022ce6:	f10a 0c20 	add.w	ip, sl, #32
 8022cea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022cee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022cf2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022cf6:	4440      	add	r0, r8
 8022cf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022cfc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022d00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022d04:	ea40 000c 	orr.w	r0, r0, ip
 8022d08:	fb15 fc02 	smulbb	ip, r5, r2
 8022d0c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022d10:	f1c5 0810 	rsb	r8, r5, #16
 8022d14:	eba8 0802 	sub.w	r8, r8, r2
 8022d18:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022d1c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022d20:	437a      	muls	r2, r7
 8022d22:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022d26:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022d2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d2e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d32:	fb09 2208 	mla	r2, r9, r8, r2
 8022d36:	ea4a 0101 	orr.w	r1, sl, r1
 8022d3a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022d3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d46:	fb05 2201 	mla	r2, r5, r1, r2
 8022d4a:	ea4b 0000 	orr.w	r0, fp, r0
 8022d4e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022d52:	0d57      	lsrs	r7, r2, #21
 8022d54:	0952      	lsrs	r2, r2, #5
 8022d56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d5e:	433a      	orrs	r2, r7
 8022d60:	2bff      	cmp	r3, #255	; 0xff
 8022d62:	b292      	uxth	r2, r2
 8022d64:	d102      	bne.n	8022d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022d66:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022d68:	29ff      	cmp	r1, #255	; 0xff
 8022d6a:	d063      	beq.n	8022e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022d6c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022d6e:	f8be 1000 	ldrh.w	r1, [lr]
 8022d72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022d74:	4343      	muls	r3, r0
 8022d76:	1c58      	adds	r0, r3, #1
 8022d78:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022d7c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022d80:	1208      	asrs	r0, r1, #8
 8022d82:	b2db      	uxtb	r3, r3
 8022d84:	1215      	asrs	r5, r2, #8
 8022d86:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022d8a:	fb10 f003 	smulbb	r0, r0, r3
 8022d8e:	10cf      	asrs	r7, r1, #3
 8022d90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022d94:	00c9      	lsls	r1, r1, #3
 8022d96:	fb05 0504 	mla	r5, r5, r4, r0
 8022d9a:	b2c9      	uxtb	r1, r1
 8022d9c:	10d0      	asrs	r0, r2, #3
 8022d9e:	00d2      	lsls	r2, r2, #3
 8022da0:	fb11 f103 	smulbb	r1, r1, r3
 8022da4:	b2d2      	uxtb	r2, r2
 8022da6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022daa:	fb02 1204 	mla	r2, r2, r4, r1
 8022dae:	fb17 f703 	smulbb	r7, r7, r3
 8022db2:	b2ad      	uxth	r5, r5
 8022db4:	b292      	uxth	r2, r2
 8022db6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022dba:	fb00 7004 	mla	r0, r0, r4, r7
 8022dbe:	1c6b      	adds	r3, r5, #1
 8022dc0:	1c57      	adds	r7, r2, #1
 8022dc2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022dc6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022dca:	b280      	uxth	r0, r0
 8022dcc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022dd0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022dd4:	433d      	orrs	r5, r7
 8022dd6:	1c47      	adds	r7, r0, #1
 8022dd8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022ddc:	097f      	lsrs	r7, r7, #5
 8022dde:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022de2:	433d      	orrs	r5, r7
 8022de4:	f8ae 5000 	strh.w	r5, [lr]
 8022de8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022dea:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022dec:	4413      	add	r3, r2
 8022dee:	9321      	str	r3, [sp, #132]	; 0x84
 8022df0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022df2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022df4:	441a      	add	r2, r3
 8022df6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022df8:	9222      	str	r2, [sp, #136]	; 0x88
 8022dfa:	3b01      	subs	r3, #1
 8022dfc:	f10e 0e02 	add.w	lr, lr, #2
 8022e00:	9313      	str	r3, [sp, #76]	; 0x4c
 8022e02:	e61c      	b.n	8022a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022e04:	fb08 f000 	mul.w	r0, r8, r0
 8022e08:	fb09 0303 	mla	r3, r9, r3, r0
 8022e0c:	e6dc      	b.n	8022bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022e0e:	46b9      	mov	r9, r7
 8022e10:	e704      	b.n	8022c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022e12:	f1c2 0110 	rsb	r1, r2, #16
 8022e16:	437a      	muls	r2, r7
 8022e18:	fb09 2901 	mla	r9, r9, r1, r2
 8022e1c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022e20:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022e24:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022e28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e30:	4302      	orrs	r2, r0
 8022e32:	e795      	b.n	8022d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022e34:	f8ae 2000 	strh.w	r2, [lr]
 8022e38:	e7d6      	b.n	8022de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022e3a:	b017      	add	sp, #92	; 0x5c
 8022e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022e40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e44:	b085      	sub	sp, #20
 8022e46:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022e4a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022e4e:	9103      	str	r1, [sp, #12]
 8022e50:	fb00 7406 	mla	r4, r0, r6, r7
 8022e54:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022e58:	2800      	cmp	r0, #0
 8022e5a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022e5e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022e62:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022e66:	9501      	str	r5, [sp, #4]
 8022e68:	eb02 0904 	add.w	r9, r2, r4
 8022e6c:	f2c0 8141 	blt.w	80230f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022e70:	4583      	cmp	fp, r0
 8022e72:	f340 813e 	ble.w	80230f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022e76:	2f00      	cmp	r7, #0
 8022e78:	f2c0 8137 	blt.w	80230ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022e7c:	42be      	cmp	r6, r7
 8022e7e:	f340 8134 	ble.w	80230ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022e82:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022e86:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022e8a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022e8e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022e92:	4355      	muls	r5, r2
 8022e94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e98:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022e9c:	fb0c f203 	mul.w	r2, ip, r3
 8022ea0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022ea4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022ea8:	441d      	add	r5, r3
 8022eaa:	f102 0320 	add.w	r3, r2, #32
 8022eae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022eb2:	0a1b      	lsrs	r3, r3, #8
 8022eb4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022eb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ebc:	431c      	orrs	r4, r3
 8022ebe:	1c7b      	adds	r3, r7, #1
 8022ec0:	f100 811c 	bmi.w	80230fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022ec4:	429e      	cmp	r6, r3
 8022ec6:	f340 8119 	ble.w	80230fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022eca:	2900      	cmp	r1, #0
 8022ecc:	f000 8119 	beq.w	8023102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022ed0:	9a01      	ldr	r2, [sp, #4]
 8022ed2:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022ed6:	8855      	ldrh	r5, [r2, #2]
 8022ed8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022edc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022ee0:	fb08 f802 	mul.w	r8, r8, r2
 8022ee4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ee8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022eec:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022ef0:	435d      	muls	r5, r3
 8022ef2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022ef6:	44d0      	add	r8, sl
 8022ef8:	f105 0a20 	add.w	sl, r5, #32
 8022efc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022f00:	0a2d      	lsrs	r5, r5, #8
 8022f02:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022f06:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022f0a:	432a      	orrs	r2, r5
 8022f0c:	3001      	adds	r0, #1
 8022f0e:	f100 80fe 	bmi.w	802310e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022f12:	4583      	cmp	fp, r0
 8022f14:	f340 80fb 	ble.w	802310e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022f18:	f1be 0f00 	cmp.w	lr, #0
 8022f1c:	f000 80fc 	beq.w	8023118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022f20:	2f00      	cmp	r7, #0
 8022f22:	f2c0 80f1 	blt.w	8023108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022f26:	42be      	cmp	r6, r7
 8022f28:	f340 80ee 	ble.w	8023108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022f2c:	9801      	ldr	r0, [sp, #4]
 8022f2e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022f32:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022f36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022f3a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022f3e:	fb0a fa00 	mul.w	sl, sl, r0
 8022f42:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022f46:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022f4a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022f4e:	fb05 f808 	mul.w	r8, r5, r8
 8022f52:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022f56:	4482      	add	sl, r0
 8022f58:	f108 0020 	add.w	r0, r8, #32
 8022f5c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022f60:	0a00      	lsrs	r0, r0, #8
 8022f62:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022f66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f6a:	ea4b 0b00 	orr.w	fp, fp, r0
 8022f6e:	3701      	adds	r7, #1
 8022f70:	f100 80d7 	bmi.w	8023122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022f74:	42be      	cmp	r6, r7
 8022f76:	f340 80d4 	ble.w	8023122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022f7a:	2900      	cmp	r1, #0
 8022f7c:	f000 80d4 	beq.w	8023128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022f80:	3601      	adds	r6, #1
 8022f82:	9801      	ldr	r0, [sp, #4]
 8022f84:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022f88:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022f8c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022f90:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022f94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f98:	fb09 f906 	mul.w	r9, r9, r6
 8022f9c:	fb07 f800 	mul.w	r8, r7, r0
 8022fa0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022fa4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022fa8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022fac:	44d1      	add	r9, sl
 8022fae:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022fb2:	f108 0020 	add.w	r0, r8, #32
 8022fb6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022fba:	0a00      	lsrs	r0, r0, #8
 8022fbc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022fc0:	4330      	orrs	r0, r6
 8022fc2:	b28e      	uxth	r6, r1
 8022fc4:	fa1f f98e 	uxth.w	r9, lr
 8022fc8:	fb06 f809 	mul.w	r8, r6, r9
 8022fcc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022fd0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022fd4:	0136      	lsls	r6, r6, #4
 8022fd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022fda:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022fde:	9601      	str	r6, [sp, #4]
 8022fe0:	ea4a 0404 	orr.w	r4, sl, r4
 8022fe4:	fa1f f689 	uxth.w	r6, r9
 8022fe8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022fec:	fb11 f90e 	smulbb	r9, r1, lr
 8022ff0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022ff4:	9602      	str	r6, [sp, #8]
 8022ff6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022ffa:	4626      	mov	r6, r4
 8022ffc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023000:	f1ce 0410 	rsb	r4, lr, #16
 8023004:	1a64      	subs	r4, r4, r1
 8023006:	ea4a 0202 	orr.w	r2, sl, r2
 802300a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802300e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023012:	434a      	muls	r2, r1
 8023014:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023018:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802301c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023020:	fb04 2406 	mla	r4, r4, r6, r2
 8023024:	ea4a 0000 	orr.w	r0, sl, r0
 8023028:	fb09 4200 	mla	r2, r9, r0, r4
 802302c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023030:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023034:	9801      	ldr	r0, [sp, #4]
 8023036:	9903      	ldr	r1, [sp, #12]
 8023038:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802303c:	ea44 0b0b 	orr.w	fp, r4, fp
 8023040:	9c02      	ldr	r4, [sp, #8]
 8023042:	8809      	ldrh	r1, [r1, #0]
 8023044:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023048:	1b00      	subs	r0, r0, r4
 802304a:	9c01      	ldr	r4, [sp, #4]
 802304c:	eba4 0608 	sub.w	r6, r4, r8
 8023050:	b2b6      	uxth	r6, r6
 8023052:	b280      	uxth	r0, r0
 8023054:	4373      	muls	r3, r6
 8023056:	fb0c 3300 	mla	r3, ip, r0, r3
 802305a:	9802      	ldr	r0, [sp, #8]
 802305c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023060:	fb00 3505 	mla	r5, r0, r5, r3
 8023064:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023068:	fb08 5707 	mla	r7, r8, r7, r5
 802306c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023070:	120b      	asrs	r3, r1, #8
 8023072:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023076:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802307a:	b2ff      	uxtb	r7, r7
 802307c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023080:	10c8      	asrs	r0, r1, #3
 8023082:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023086:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802308a:	00c9      	lsls	r1, r1, #3
 802308c:	437b      	muls	r3, r7
 802308e:	ea42 0e0e 	orr.w	lr, r2, lr
 8023092:	b2c9      	uxtb	r1, r1
 8023094:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023098:	fa1f f28e 	uxth.w	r2, lr
 802309c:	4378      	muls	r0, r7
 802309e:	434f      	muls	r7, r1
 80230a0:	1c59      	adds	r1, r3, #1
 80230a2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80230a6:	1213      	asrs	r3, r2, #8
 80230a8:	f023 0307 	bic.w	r3, r3, #7
 80230ac:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80230b0:	1c41      	adds	r1, r0, #1
 80230b2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80230b6:	10d1      	asrs	r1, r2, #3
 80230b8:	f021 0103 	bic.w	r1, r1, #3
 80230bc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80230c0:	021b      	lsls	r3, r3, #8
 80230c2:	00c9      	lsls	r1, r1, #3
 80230c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80230c8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80230cc:	430b      	orrs	r3, r1
 80230ce:	1c79      	adds	r1, r7, #1
 80230d0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80230d4:	00d2      	lsls	r2, r2, #3
 80230d6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80230da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80230de:	431a      	orrs	r2, r3
 80230e0:	9b03      	ldr	r3, [sp, #12]
 80230e2:	801a      	strh	r2, [r3, #0]
 80230e4:	b005      	add	sp, #20
 80230e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80230ea:	f04f 0c00 	mov.w	ip, #0
 80230ee:	4664      	mov	r4, ip
 80230f0:	e6e5      	b.n	8022ebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80230f2:	2300      	movs	r3, #0
 80230f4:	469c      	mov	ip, r3
 80230f6:	461a      	mov	r2, r3
 80230f8:	461c      	mov	r4, r3
 80230fa:	e707      	b.n	8022f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80230fc:	2300      	movs	r3, #0
 80230fe:	461a      	mov	r2, r3
 8023100:	e704      	b.n	8022f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023102:	460b      	mov	r3, r1
 8023104:	460a      	mov	r2, r1
 8023106:	e701      	b.n	8022f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023108:	2500      	movs	r5, #0
 802310a:	46ab      	mov	fp, r5
 802310c:	e72f      	b.n	8022f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802310e:	2700      	movs	r7, #0
 8023110:	463d      	mov	r5, r7
 8023112:	4638      	mov	r0, r7
 8023114:	46bb      	mov	fp, r7
 8023116:	e754      	b.n	8022fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023118:	4677      	mov	r7, lr
 802311a:	4675      	mov	r5, lr
 802311c:	4670      	mov	r0, lr
 802311e:	46f3      	mov	fp, lr
 8023120:	e74f      	b.n	8022fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023122:	2700      	movs	r7, #0
 8023124:	4638      	mov	r0, r7
 8023126:	e74c      	b.n	8022fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023128:	460f      	mov	r7, r1
 802312a:	4608      	mov	r0, r1
 802312c:	e749      	b.n	8022fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023134:	b093      	sub	sp, #76	; 0x4c
 8023136:	9210      	str	r2, [sp, #64]	; 0x40
 8023138:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802313a:	910e      	str	r1, [sp, #56]	; 0x38
 802313c:	9306      	str	r3, [sp, #24]
 802313e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023142:	9011      	str	r0, [sp, #68]	; 0x44
 8023144:	6850      	ldr	r0, [r2, #4]
 8023146:	6812      	ldr	r2, [r2, #0]
 8023148:	fb00 1303 	mla	r3, r0, r3, r1
 802314c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023150:	9307      	str	r3, [sp, #28]
 8023152:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023154:	681b      	ldr	r3, [r3, #0]
 8023156:	9308      	str	r3, [sp, #32]
 8023158:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802315a:	685b      	ldr	r3, [r3, #4]
 802315c:	9309      	str	r3, [sp, #36]	; 0x24
 802315e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023160:	2b00      	cmp	r3, #0
 8023162:	dc03      	bgt.n	802316c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023164:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023166:	2b00      	cmp	r3, #0
 8023168:	f340 83b4 	ble.w	80238d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802316c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802316e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023172:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023176:	1e48      	subs	r0, r1, #1
 8023178:	1e55      	subs	r5, r2, #1
 802317a:	9b06      	ldr	r3, [sp, #24]
 802317c:	2b00      	cmp	r3, #0
 802317e:	f340 8163 	ble.w	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023182:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023184:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023186:	1436      	asrs	r6, r6, #16
 8023188:	ea4f 4323 	mov.w	r3, r3, asr #16
 802318c:	d406      	bmi.n	802319c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802318e:	4286      	cmp	r6, r0
 8023190:	da04      	bge.n	802319c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023192:	2b00      	cmp	r3, #0
 8023194:	db02      	blt.n	802319c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023196:	42ab      	cmp	r3, r5
 8023198:	f2c0 8157 	blt.w	802344a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802319c:	3601      	adds	r6, #1
 802319e:	f100 8144 	bmi.w	802342a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231a2:	42b1      	cmp	r1, r6
 80231a4:	f2c0 8141 	blt.w	802342a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231a8:	3301      	adds	r3, #1
 80231aa:	f100 813e 	bmi.w	802342a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231ae:	429a      	cmp	r2, r3
 80231b0:	f2c0 813b 	blt.w	802342a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80231b4:	9b06      	ldr	r3, [sp, #24]
 80231b6:	9f07      	ldr	r7, [sp, #28]
 80231b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80231ba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80231be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80231c0:	2b00      	cmp	r3, #0
 80231c2:	f340 8164 	ble.w	802348e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80231c6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80231c8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80231ca:	1418      	asrs	r0, r3, #16
 80231cc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80231ce:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80231d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80231d4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80231d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80231da:	142d      	asrs	r5, r5, #16
 80231dc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80231e0:	f100 81ee 	bmi.w	80235c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80231e4:	f102 3eff 	add.w	lr, r2, #4294967295
 80231e8:	4575      	cmp	r5, lr
 80231ea:	f280 81e9 	bge.w	80235c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80231ee:	2800      	cmp	r0, #0
 80231f0:	f2c0 81e6 	blt.w	80235c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80231f4:	f103 3eff 	add.w	lr, r3, #4294967295
 80231f8:	4570      	cmp	r0, lr
 80231fa:	f280 81e1 	bge.w	80235c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80231fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023200:	b212      	sxth	r2, r2
 8023202:	fb00 5002 	mla	r0, r0, r2, r5
 8023206:	fa1f fe81 	uxth.w	lr, r1
 802320a:	eb03 0a00 	add.w	sl, r3, r0
 802320e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023212:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023216:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802321a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802321e:	b29b      	uxth	r3, r3
 8023220:	f1bc 0f00 	cmp.w	ip, #0
 8023224:	f000 8179 	beq.w	802351a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023228:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802322c:	940a      	str	r4, [sp, #40]	; 0x28
 802322e:	eb0a 0b02 	add.w	fp, sl, r2
 8023232:	fa1f fa8c 	uxth.w	sl, ip
 8023236:	fb0a fe0e 	mul.w	lr, sl, lr
 802323a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802323e:	fa1f fa8a 	uxth.w	sl, sl
 8023242:	eba5 050e 	sub.w	r5, r5, lr
 8023246:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802324a:	940b      	str	r4, [sp, #44]	; 0x2c
 802324c:	eba3 030a 	sub.w	r3, r3, sl
 8023250:	b2ad      	uxth	r5, r5
 8023252:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023254:	b29b      	uxth	r3, r3
 8023256:	fb08 f505 	mul.w	r5, r8, r5
 802325a:	fb09 5303 	mla	r3, r9, r3, r5
 802325e:	fb0a 3304 	mla	r3, sl, r4, r3
 8023262:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023264:	fb0e 3304 	mla	r3, lr, r4, r3
 8023268:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802326c:	2b00      	cmp	r3, #0
 802326e:	f000 80cf 	beq.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023272:	9c08      	ldr	r4, [sp, #32]
 8023274:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023278:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802327c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023280:	f000 8150 	beq.w	8023524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023284:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023288:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802328c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023290:	fb09 f000 	mul.w	r0, r9, r0
 8023294:	fb0a fe0e 	mul.w	lr, sl, lr
 8023298:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802329c:	f100 0b20 	add.w	fp, r0, #32
 80232a0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80232a4:	44ce      	add	lr, r9
 80232a6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80232aa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80232ae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80232b2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80232b6:	ea4e 0909 	orr.w	r9, lr, r9
 80232ba:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80232be:	8868      	ldrh	r0, [r5, #2]
 80232c0:	d019      	beq.n	80232f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80232c2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80232c6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80232ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232ce:	fb08 f800 	mul.w	r8, r8, r0
 80232d2:	fb0a fe0e 	mul.w	lr, sl, lr
 80232d6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80232da:	f108 0b20 	add.w	fp, r8, #32
 80232de:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80232e2:	4486      	add	lr, r0
 80232e4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80232e8:	0a00      	lsrs	r0, r0, #8
 80232ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80232ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232f2:	ea4e 0000 	orr.w	r0, lr, r0
 80232f6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80232fa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80232fe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023302:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023306:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802330a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802330e:	ea4e 0909 	orr.w	r9, lr, r9
 8023312:	ea4a 0000 	orr.w	r0, sl, r0
 8023316:	f1bc 0f00 	cmp.w	ip, #0
 802331a:	f000 8105 	beq.w	8023528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802331e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023322:	3a01      	subs	r2, #1
 8023324:	0052      	lsls	r2, r2, #1
 8023326:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023328:	3202      	adds	r2, #2
 802332a:	2cff      	cmp	r4, #255	; 0xff
 802332c:	eb05 0e02 	add.w	lr, r5, r2
 8023330:	5aaa      	ldrh	r2, [r5, r2]
 8023332:	d018      	beq.n	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023334:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023338:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802333c:	fb04 fa02 	mul.w	sl, r4, r2
 8023340:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023344:	fb08 f805 	mul.w	r8, r8, r5
 8023348:	f10a 0520 	add.w	r5, sl, #32
 802334c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023350:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023354:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023358:	4442      	add	r2, r8
 802335a:	0a2d      	lsrs	r5, r5, #8
 802335c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023360:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023364:	432a      	orrs	r2, r5
 8023366:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023368:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802336c:	2cff      	cmp	r4, #255	; 0xff
 802336e:	d01a      	beq.n	80233a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023370:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023374:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023378:	fb04 fa05 	mul.w	sl, r4, r5
 802337c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023380:	fb08 f80e 	mul.w	r8, r8, lr
 8023384:	f10a 0e20 	add.w	lr, sl, #32
 8023388:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802338c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023390:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023394:	4445      	add	r5, r8
 8023396:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802339a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802339e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80233a2:	ea45 050e 	orr.w	r5, r5, lr
 80233a6:	fb1c fe01 	smulbb	lr, ip, r1
 80233aa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80233ae:	f1cc 0810 	rsb	r8, ip, #16
 80233b2:	eba8 0801 	sub.w	r8, r8, r1
 80233b6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80233ba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80233be:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80233c2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80233c6:	4341      	muls	r1, r0
 80233c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80233cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80233d0:	ea4a 0202 	orr.w	r2, sl, r2
 80233d4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80233d8:	fb09 1108 	mla	r1, r9, r8, r1
 80233dc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233e0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80233e4:	fb0c 1102 	mla	r1, ip, r2, r1
 80233e8:	ea4b 0505 	orr.w	r5, fp, r5
 80233ec:	fb0e 1e05 	mla	lr, lr, r5, r1
 80233f0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80233f4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80233f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80233fc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023400:	ea42 0e0e 	orr.w	lr, r2, lr
 8023404:	fa1f f28e 	uxth.w	r2, lr
 8023408:	2bff      	cmp	r3, #255	; 0xff
 802340a:	f040 80a1 	bne.w	8023550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802340e:	803a      	strh	r2, [r7, #0]
 8023410:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023412:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023414:	4413      	add	r3, r2
 8023416:	931d      	str	r3, [sp, #116]	; 0x74
 8023418:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802341a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802341c:	441a      	add	r2, r3
 802341e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023420:	921e      	str	r2, [sp, #120]	; 0x78
 8023422:	3b01      	subs	r3, #1
 8023424:	3702      	adds	r7, #2
 8023426:	930f      	str	r3, [sp, #60]	; 0x3c
 8023428:	e6c9      	b.n	80231be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802342a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802342c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802342e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023430:	4433      	add	r3, r6
 8023432:	931d      	str	r3, [sp, #116]	; 0x74
 8023434:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023436:	441c      	add	r4, r3
 8023438:	9b06      	ldr	r3, [sp, #24]
 802343a:	941e      	str	r4, [sp, #120]	; 0x78
 802343c:	3b01      	subs	r3, #1
 802343e:	9306      	str	r3, [sp, #24]
 8023440:	9b07      	ldr	r3, [sp, #28]
 8023442:	3302      	adds	r3, #2
 8023444:	9307      	str	r3, [sp, #28]
 8023446:	e698      	b.n	802317a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023448:	d028      	beq.n	802349c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802344a:	9b06      	ldr	r3, [sp, #24]
 802344c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802344e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023450:	3b01      	subs	r3, #1
 8023452:	fb00 5003 	mla	r0, r0, r3, r5
 8023456:	1400      	asrs	r0, r0, #16
 8023458:	f53f aeac 	bmi.w	80231b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802345c:	3901      	subs	r1, #1
 802345e:	4288      	cmp	r0, r1
 8023460:	f6bf aea8 	bge.w	80231b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023464:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023466:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023468:	fb01 0303 	mla	r3, r1, r3, r0
 802346c:	141b      	asrs	r3, r3, #16
 802346e:	f53f aea1 	bmi.w	80231b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023472:	3a01      	subs	r2, #1
 8023474:	4293      	cmp	r3, r2
 8023476:	f6bf ae9d 	bge.w	80231b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802347a:	9b06      	ldr	r3, [sp, #24]
 802347c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023480:	930f      	str	r3, [sp, #60]	; 0x3c
 8023482:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023486:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023488:	2b00      	cmp	r3, #0
 802348a:	f300 80b6 	bgt.w	80235fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802348e:	9b06      	ldr	r3, [sp, #24]
 8023490:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023494:	9b07      	ldr	r3, [sp, #28]
 8023496:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802349a:	9307      	str	r3, [sp, #28]
 802349c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802349e:	2b00      	cmp	r3, #0
 80234a0:	f340 8218 	ble.w	80238d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80234a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80234a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80234ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80234b0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80234b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80234b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80234ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80234be:	eef0 6a62 	vmov.f32	s13, s5
 80234c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80234c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234ce:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80234d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234d6:	eef0 6a43 	vmov.f32	s13, s6
 80234da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234de:	ee12 2a90 	vmov	r2, s5
 80234e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80234ea:	ee13 2a10 	vmov	r2, s6
 80234ee:	931f      	str	r3, [sp, #124]	; 0x7c
 80234f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80234f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80234f6:	9320      	str	r3, [sp, #128]	; 0x80
 80234f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80234fc:	3b01      	subs	r3, #1
 80234fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023502:	930e      	str	r3, [sp, #56]	; 0x38
 8023504:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023506:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802350a:	bf08      	it	eq
 802350c:	4613      	moveq	r3, r2
 802350e:	9306      	str	r3, [sp, #24]
 8023510:	eeb0 3a67 	vmov.f32	s6, s15
 8023514:	eef0 2a47 	vmov.f32	s5, s14
 8023518:	e621      	b.n	802315e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802351a:	fb08 f505 	mul.w	r5, r8, r5
 802351e:	fb09 5303 	mla	r3, r9, r3, r5
 8023522:	e6a1      	b.n	8023268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023524:	4681      	mov	r9, r0
 8023526:	e6c8      	b.n	80232ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023528:	f1c1 0210 	rsb	r2, r1, #16
 802352c:	4341      	muls	r1, r0
 802352e:	fb09 1902 	mla	r9, r9, r2, r1
 8023532:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023536:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802353a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802353e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023542:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023546:	ea42 0909 	orr.w	r9, r2, r9
 802354a:	fa1f f289 	uxth.w	r2, r9
 802354e:	e75b      	b.n	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023550:	f8b7 c000 	ldrh.w	ip, [r7]
 8023554:	43db      	mvns	r3, r3
 8023556:	ea4f 202c 	mov.w	r0, ip, asr #8
 802355a:	fa5f fe83 	uxtb.w	lr, r3
 802355e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023562:	fb00 f00e 	mul.w	r0, r0, lr
 8023566:	1c41      	adds	r1, r0, #1
 8023568:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802356c:	1211      	asrs	r1, r2, #8
 802356e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023572:	f021 0107 	bic.w	r1, r1, #7
 8023576:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802357a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802357e:	48d7      	ldr	r0, [pc, #860]	; (80238dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023580:	fb05 f50e 	mul.w	r5, r5, lr
 8023584:	b2c9      	uxtb	r1, r1
 8023586:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802358a:	1c69      	adds	r1, r5, #1
 802358c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023590:	10d1      	asrs	r1, r2, #3
 8023592:	f021 0103 	bic.w	r1, r1, #3
 8023596:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802359a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802359e:	b2db      	uxtb	r3, r3
 80235a0:	00c9      	lsls	r1, r1, #3
 80235a2:	fb03 f30e 	mul.w	r3, r3, lr
 80235a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80235aa:	4301      	orrs	r1, r0
 80235ac:	1c58      	adds	r0, r3, #1
 80235ae:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80235b2:	00d2      	lsls	r2, r2, #3
 80235b4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80235b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80235bc:	430a      	orrs	r2, r1
 80235be:	e726      	b.n	802340e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80235c0:	f115 0e01 	adds.w	lr, r5, #1
 80235c4:	f53f af24 	bmi.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235c8:	4572      	cmp	r2, lr
 80235ca:	f6ff af21 	blt.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235ce:	f110 0e01 	adds.w	lr, r0, #1
 80235d2:	f53f af1d 	bmi.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235d6:	4573      	cmp	r3, lr
 80235d8:	f6ff af1a 	blt.w	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235dc:	b21b      	sxth	r3, r3
 80235de:	b212      	sxth	r2, r2
 80235e0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80235e4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80235e8:	9301      	str	r3, [sp, #4]
 80235ea:	9200      	str	r2, [sp, #0]
 80235ec:	4639      	mov	r1, r7
 80235ee:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80235f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80235f4:	f7ff fc24 	bl	8022e40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80235f8:	e70a      	b.n	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80235fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80235fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023600:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023602:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023606:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023608:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802360c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802360e:	141f      	asrs	r7, r3, #16
 8023610:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023612:	141b      	asrs	r3, r3, #16
 8023614:	fb01 3707 	mla	r7, r1, r7, r3
 8023618:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802361a:	fa1f fc82 	uxth.w	ip, r2
 802361e:	eb03 0a07 	add.w	sl, r3, r7
 8023622:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023626:	f813 9007 	ldrb.w	r9, [r3, r7]
 802362a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802362e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023632:	b29b      	uxth	r3, r3
 8023634:	2d00      	cmp	r5, #0
 8023636:	f000 80fe 	beq.w	8023836 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802363a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802363e:	940c      	str	r4, [sp, #48]	; 0x30
 8023640:	eb0a 0b01 	add.w	fp, sl, r1
 8023644:	fa1f fa85 	uxth.w	sl, r5
 8023648:	fb0a fc0c 	mul.w	ip, sl, ip
 802364c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023650:	fa1f fa8a 	uxth.w	sl, sl
 8023654:	eba0 000c 	sub.w	r0, r0, ip
 8023658:	eba3 030a 	sub.w	r3, r3, sl
 802365c:	b280      	uxth	r0, r0
 802365e:	fb08 f000 	mul.w	r0, r8, r0
 8023662:	b29b      	uxth	r3, r3
 8023664:	fb09 0303 	mla	r3, r9, r3, r0
 8023668:	980c      	ldr	r0, [sp, #48]	; 0x30
 802366a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802366e:	940d      	str	r4, [sp, #52]	; 0x34
 8023670:	fb0a 3300 	mla	r3, sl, r0, r3
 8023674:	fb0c 3304 	mla	r3, ip, r4, r3
 8023678:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802367c:	2b00      	cmp	r3, #0
 802367e:	f000 80cc 	beq.w	802381a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023682:	9808      	ldr	r0, [sp, #32]
 8023684:	9c08      	ldr	r4, [sp, #32]
 8023686:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802368a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802368e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023692:	f000 80d5 	beq.w	8023840 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023696:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802369a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802369e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80236a2:	fb09 f707 	mul.w	r7, r9, r7
 80236a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80236aa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80236ae:	f107 0b20 	add.w	fp, r7, #32
 80236b2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80236b6:	44cc      	add	ip, r9
 80236b8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80236bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80236c0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80236c4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80236c8:	ea4c 0909 	orr.w	r9, ip, r9
 80236cc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80236d0:	8847      	ldrh	r7, [r0, #2]
 80236d2:	d019      	beq.n	8023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80236d4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80236d8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80236dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80236e0:	fb08 f807 	mul.w	r8, r8, r7
 80236e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80236e8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80236ec:	f108 0b20 	add.w	fp, r8, #32
 80236f0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80236f4:	44bc      	add	ip, r7
 80236f6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80236fa:	0a3f      	lsrs	r7, r7, #8
 80236fc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023700:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023704:	ea4c 0707 	orr.w	r7, ip, r7
 8023708:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802370c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023710:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023714:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023718:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802371c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023720:	ea4c 0909 	orr.w	r9, ip, r9
 8023724:	ea4a 0707 	orr.w	r7, sl, r7
 8023728:	2d00      	cmp	r5, #0
 802372a:	f000 808b 	beq.w	8023844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802372e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023732:	3901      	subs	r1, #1
 8023734:	0049      	lsls	r1, r1, #1
 8023736:	3102      	adds	r1, #2
 8023738:	eb00 0c01 	add.w	ip, r0, r1
 802373c:	5a41      	ldrh	r1, [r0, r1]
 802373e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023740:	28ff      	cmp	r0, #255	; 0xff
 8023742:	d019      	beq.n	8023778 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023744:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023746:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802374a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802374e:	fb04 fa01 	mul.w	sl, r4, r1
 8023752:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023756:	fb08 f800 	mul.w	r8, r8, r0
 802375a:	f10a 0020 	add.w	r0, sl, #32
 802375e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023762:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023766:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802376a:	4441      	add	r1, r8
 802376c:	0a00      	lsrs	r0, r0, #8
 802376e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023772:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023776:	4301      	orrs	r1, r0
 8023778:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802377a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802377e:	2cff      	cmp	r4, #255	; 0xff
 8023780:	d01a      	beq.n	80237b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8023782:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023786:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802378a:	fb04 fa00 	mul.w	sl, r4, r0
 802378e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023792:	fb08 f80c 	mul.w	r8, r8, ip
 8023796:	f10a 0c20 	add.w	ip, sl, #32
 802379a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802379e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80237a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80237a6:	4440      	add	r0, r8
 80237a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237ac:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80237b0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80237b4:	ea40 000c 	orr.w	r0, r0, ip
 80237b8:	fb15 fc02 	smulbb	ip, r5, r2
 80237bc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80237c0:	f1c5 0810 	rsb	r8, r5, #16
 80237c4:	eba8 0802 	sub.w	r8, r8, r2
 80237c8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80237cc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80237d0:	437a      	muls	r2, r7
 80237d2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80237d6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80237da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80237e2:	fb09 2208 	mla	r2, r9, r8, r2
 80237e6:	ea4a 0101 	orr.w	r1, sl, r1
 80237ea:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80237ee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80237f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237f6:	fb05 2201 	mla	r2, r5, r1, r2
 80237fa:	ea4b 0000 	orr.w	r0, fp, r0
 80237fe:	fb0c 2200 	mla	r2, ip, r0, r2
 8023802:	0d57      	lsrs	r7, r2, #21
 8023804:	0952      	lsrs	r2, r2, #5
 8023806:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802380a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802380e:	433a      	orrs	r2, r7
 8023810:	2bff      	cmp	r3, #255	; 0xff
 8023812:	b292      	uxth	r2, r2
 8023814:	d127      	bne.n	8023866 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023816:	f8ae 2000 	strh.w	r2, [lr]
 802381a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802381c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802381e:	4413      	add	r3, r2
 8023820:	931d      	str	r3, [sp, #116]	; 0x74
 8023822:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023824:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023826:	441a      	add	r2, r3
 8023828:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802382a:	921e      	str	r2, [sp, #120]	; 0x78
 802382c:	3b01      	subs	r3, #1
 802382e:	f10e 0e02 	add.w	lr, lr, #2
 8023832:	930f      	str	r3, [sp, #60]	; 0x3c
 8023834:	e627      	b.n	8023486 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023836:	fb08 f000 	mul.w	r0, r8, r0
 802383a:	fb09 0303 	mla	r3, r9, r3, r0
 802383e:	e71b      	b.n	8023678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023840:	46b9      	mov	r9, r7
 8023842:	e743      	b.n	80236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023844:	f1c2 0110 	rsb	r1, r2, #16
 8023848:	437a      	muls	r2, r7
 802384a:	fb09 2901 	mla	r9, r9, r1, r2
 802384e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023852:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023856:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802385a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802385e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023862:	4302      	orrs	r2, r0
 8023864:	e7d4      	b.n	8023810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023866:	f8be 7000 	ldrh.w	r7, [lr]
 802386a:	4c1c      	ldr	r4, [pc, #112]	; (80238dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802386c:	43db      	mvns	r3, r3
 802386e:	1238      	asrs	r0, r7, #8
 8023870:	fa5f fc83 	uxtb.w	ip, r3
 8023874:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023878:	10fd      	asrs	r5, r7, #3
 802387a:	fb00 f00c 	mul.w	r0, r0, ip
 802387e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023882:	fb05 f10c 	mul.w	r1, r5, ip
 8023886:	1c45      	adds	r5, r0, #1
 8023888:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802388c:	1215      	asrs	r5, r2, #8
 802388e:	f025 0507 	bic.w	r5, r5, #7
 8023892:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023896:	1c4d      	adds	r5, r1, #1
 8023898:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802389c:	10d1      	asrs	r1, r2, #3
 802389e:	f021 0103 	bic.w	r1, r1, #3
 80238a2:	00fb      	lsls	r3, r7, #3
 80238a4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80238a8:	b2db      	uxtb	r3, r3
 80238aa:	b2c0      	uxtb	r0, r0
 80238ac:	00c9      	lsls	r1, r1, #3
 80238ae:	fb03 f30c 	mul.w	r3, r3, ip
 80238b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80238b6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80238ba:	4308      	orrs	r0, r1
 80238bc:	1c59      	adds	r1, r3, #1
 80238be:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80238c2:	00d2      	lsls	r2, r2, #3
 80238c4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80238c8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80238cc:	4318      	orrs	r0, r3
 80238ce:	f8ae 0000 	strh.w	r0, [lr]
 80238d2:	e7a2      	b.n	802381a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80238d4:	b013      	add	sp, #76	; 0x4c
 80238d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80238da:	bf00      	nop
 80238dc:	fffff800 	.word	0xfffff800

080238e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80238e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80238e4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80238e8:	fb05 4c03 	mla	ip, r5, r3, r4
 80238ec:	2d00      	cmp	r5, #0
 80238ee:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80238f2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80238f6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80238fa:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80238fe:	8808      	ldrh	r0, [r1, #0]
 8023900:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023904:	f2c0 80a7 	blt.w	8023a56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023908:	45aa      	cmp	sl, r5
 802390a:	f340 80a4 	ble.w	8023a56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802390e:	2c00      	cmp	r4, #0
 8023910:	f2c0 809f 	blt.w	8023a52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023914:	42a3      	cmp	r3, r4
 8023916:	f340 809c 	ble.w	8023a52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802391a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802391e:	1c62      	adds	r2, r4, #1
 8023920:	f100 809c 	bmi.w	8023a5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023924:	4293      	cmp	r3, r2
 8023926:	f340 8099 	ble.w	8023a5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802392a:	f1b9 0f00 	cmp.w	r9, #0
 802392e:	f000 8095 	beq.w	8023a5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023932:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023936:	3501      	adds	r5, #1
 8023938:	f100 8094 	bmi.w	8023a64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802393c:	45aa      	cmp	sl, r5
 802393e:	f340 8091 	ble.w	8023a64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023942:	2f00      	cmp	r7, #0
 8023944:	f000 808e 	beq.w	8023a64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023948:	2c00      	cmp	r4, #0
 802394a:	f2c0 8089 	blt.w	8023a60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802394e:	42a3      	cmp	r3, r4
 8023950:	f340 8086 	ble.w	8023a60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023954:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023958:	3401      	adds	r4, #1
 802395a:	f100 8086 	bmi.w	8023a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802395e:	42a3      	cmp	r3, r4
 8023960:	f340 8083 	ble.w	8023a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023964:	f1b9 0f00 	cmp.w	r9, #0
 8023968:	d07f      	beq.n	8023a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802396a:	3301      	adds	r3, #1
 802396c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023970:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023974:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023978:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802397c:	fb19 fe07 	smulbb	lr, r9, r7
 8023980:	ea44 0808 	orr.w	r8, r4, r8
 8023984:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023988:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802398c:	f1c7 0210 	rsb	r2, r7, #16
 8023990:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023994:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023998:	ea44 0c0c 	orr.w	ip, r4, ip
 802399c:	eba2 0209 	sub.w	r2, r2, r9
 80239a0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80239a4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80239a8:	fb04 f40c 	mul.w	r4, r4, ip
 80239ac:	fb02 4808 	mla	r8, r2, r8, r4
 80239b0:	041a      	lsls	r2, r3, #16
 80239b2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80239b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80239ba:	4313      	orrs	r3, r2
 80239bc:	042a      	lsls	r2, r5, #16
 80239be:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80239c2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80239c6:	fb0e 8303 	mla	r3, lr, r3, r8
 80239ca:	432a      	orrs	r2, r5
 80239cc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80239d0:	fb07 3202 	mla	r2, r7, r2, r3
 80239d4:	0d53      	lsrs	r3, r2, #21
 80239d6:	0952      	lsrs	r2, r2, #5
 80239d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80239dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80239e0:	431a      	orrs	r2, r3
 80239e2:	b293      	uxth	r3, r2
 80239e4:	b2b4      	uxth	r4, r6
 80239e6:	1202      	asrs	r2, r0, #8
 80239e8:	43f6      	mvns	r6, r6
 80239ea:	b2f6      	uxtb	r6, r6
 80239ec:	121d      	asrs	r5, r3, #8
 80239ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80239f2:	fb12 f206 	smulbb	r2, r2, r6
 80239f6:	10c7      	asrs	r7, r0, #3
 80239f8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80239fc:	00c0      	lsls	r0, r0, #3
 80239fe:	fb05 2504 	mla	r5, r5, r4, r2
 8023a02:	b2c0      	uxtb	r0, r0
 8023a04:	10da      	asrs	r2, r3, #3
 8023a06:	00db      	lsls	r3, r3, #3
 8023a08:	b2db      	uxtb	r3, r3
 8023a0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023a0e:	fb10 f006 	smulbb	r0, r0, r6
 8023a12:	b2ad      	uxth	r5, r5
 8023a14:	fb03 0004 	mla	r0, r3, r4, r0
 8023a18:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023a1c:	fb17 f706 	smulbb	r7, r7, r6
 8023a20:	b280      	uxth	r0, r0
 8023a22:	1c6b      	adds	r3, r5, #1
 8023a24:	fb02 7204 	mla	r2, r2, r4, r7
 8023a28:	b292      	uxth	r2, r2
 8023a2a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023a2e:	1c43      	adds	r3, r0, #1
 8023a30:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023a34:	1c50      	adds	r0, r2, #1
 8023a36:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8023a3a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023a3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a42:	0952      	lsrs	r2, r2, #5
 8023a44:	432b      	orrs	r3, r5
 8023a46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a4a:	4313      	orrs	r3, r2
 8023a4c:	800b      	strh	r3, [r1, #0]
 8023a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023a52:	4680      	mov	r8, r0
 8023a54:	e763      	b.n	802391e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023a56:	4684      	mov	ip, r0
 8023a58:	4680      	mov	r8, r0
 8023a5a:	e76c      	b.n	8023936 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023a5c:	4684      	mov	ip, r0
 8023a5e:	e76a      	b.n	8023936 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023a60:	4605      	mov	r5, r0
 8023a62:	e779      	b.n	8023958 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023a64:	4603      	mov	r3, r0
 8023a66:	4605      	mov	r5, r0
 8023a68:	e782      	b.n	8023970 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8023a6a:	4603      	mov	r3, r0
 8023a6c:	e780      	b.n	8023970 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08023a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023a6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a72:	b093      	sub	sp, #76	; 0x4c
 8023a74:	461d      	mov	r5, r3
 8023a76:	9210      	str	r2, [sp, #64]	; 0x40
 8023a78:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023a7a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8023a7e:	920b      	str	r2, [sp, #44]	; 0x2c
 8023a80:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023a84:	910a      	str	r1, [sp, #40]	; 0x28
 8023a86:	6859      	ldr	r1, [r3, #4]
 8023a88:	681b      	ldr	r3, [r3, #0]
 8023a8a:	9011      	str	r0, [sp, #68]	; 0x44
 8023a8c:	fb01 2707 	mla	r7, r1, r7, r2
 8023a90:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023a94:	9307      	str	r3, [sp, #28]
 8023a96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a98:	681b      	ldr	r3, [r3, #0]
 8023a9a:	9309      	str	r3, [sp, #36]	; 0x24
 8023a9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a9e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023aa2:	43db      	mvns	r3, r3
 8023aa4:	b2db      	uxtb	r3, r3
 8023aa6:	9308      	str	r3, [sp, #32]
 8023aa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023aaa:	2b00      	cmp	r3, #0
 8023aac:	dc03      	bgt.n	8023ab6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023aae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023ab0:	2b00      	cmp	r3, #0
 8023ab2:	f340 8203 	ble.w	8023ebc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023ab6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ab8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023abc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023ac0:	1e48      	subs	r0, r1, #1
 8023ac2:	f102 3cff 	add.w	ip, r2, #4294967295
 8023ac6:	2d00      	cmp	r5, #0
 8023ac8:	f340 80da 	ble.w	8023c80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023acc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023ad0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023ad4:	d406      	bmi.n	8023ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023ad6:	4586      	cmp	lr, r0
 8023ad8:	da04      	bge.n	8023ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023ada:	2b00      	cmp	r3, #0
 8023adc:	db02      	blt.n	8023ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023ade:	4563      	cmp	r3, ip
 8023ae0:	f2c0 80cf 	blt.w	8023c82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023ae4:	f11e 0e01 	adds.w	lr, lr, #1
 8023ae8:	f100 80c1 	bmi.w	8023c6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023aec:	4571      	cmp	r1, lr
 8023aee:	f2c0 80be 	blt.w	8023c6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023af2:	3301      	adds	r3, #1
 8023af4:	f100 80bb 	bmi.w	8023c6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023af8:	429a      	cmp	r2, r3
 8023afa:	f2c0 80b8 	blt.w	8023c6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023afe:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023b02:	46a9      	mov	r9, r5
 8023b04:	f1b9 0f00 	cmp.w	r9, #0
 8023b08:	f340 80d8 	ble.w	8023cbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023b0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b0e:	1421      	asrs	r1, r4, #16
 8023b10:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023b14:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b18:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023b1c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023b20:	f100 8111 	bmi.w	8023d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b24:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023b28:	4551      	cmp	r1, sl
 8023b2a:	f280 810c 	bge.w	8023d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b2e:	2800      	cmp	r0, #0
 8023b30:	f2c0 8109 	blt.w	8023d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b34:	f103 3aff 	add.w	sl, r3, #4294967295
 8023b38:	4550      	cmp	r0, sl
 8023b3a:	f280 8104 	bge.w	8023d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023b3e:	fa0f f38e 	sxth.w	r3, lr
 8023b42:	fb00 1103 	mla	r1, r0, r3, r1
 8023b46:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023b48:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023b4c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023b50:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023b54:	f1bc 0f00 	cmp.w	ip, #0
 8023b58:	d007      	beq.n	8023b6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023b5a:	005b      	lsls	r3, r3, #1
 8023b5c:	eb0a 0003 	add.w	r0, sl, r3
 8023b60:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023b64:	930c      	str	r3, [sp, #48]	; 0x30
 8023b66:	8843      	ldrh	r3, [r0, #2]
 8023b68:	930d      	str	r3, [sp, #52]	; 0x34
 8023b6a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023b6e:	fb12 f30c 	smulbb	r3, r2, ip
 8023b72:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023b76:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023b7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023b7e:	10db      	asrs	r3, r3, #3
 8023b80:	ea40 000e 	orr.w	r0, r0, lr
 8023b84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b88:	f1cc 0e10 	rsb	lr, ip, #16
 8023b8c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023b90:	ebae 0e02 	sub.w	lr, lr, r2
 8023b94:	ea4a 0101 	orr.w	r1, sl, r1
 8023b98:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023b9c:	4351      	muls	r1, r2
 8023b9e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023ba0:	9f08      	ldr	r7, [sp, #32]
 8023ba2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023ba6:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023baa:	0410      	lsls	r0, r2, #16
 8023bac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023bb0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023bb4:	4310      	orrs	r0, r2
 8023bb6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023bb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023bba:	0412      	lsls	r2, r2, #16
 8023bbc:	fb03 e000 	mla	r0, r3, r0, lr
 8023bc0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023bc4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023bc8:	ea42 020e 	orr.w	r2, r2, lr
 8023bcc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023bd0:	fb03 0302 	mla	r3, r3, r2, r0
 8023bd4:	0d5a      	lsrs	r2, r3, #21
 8023bd6:	095b      	lsrs	r3, r3, #5
 8023bd8:	f8b8 0000 	ldrh.w	r0, [r8]
 8023bdc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023be0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023be4:	4313      	orrs	r3, r2
 8023be6:	b29b      	uxth	r3, r3
 8023be8:	1201      	asrs	r1, r0, #8
 8023bea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023bee:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023bf2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023bf6:	fb11 f107 	smulbb	r1, r1, r7
 8023bfa:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023bfe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023c02:	00c0      	lsls	r0, r0, #3
 8023c04:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023c08:	b2c0      	uxtb	r0, r0
 8023c0a:	10d9      	asrs	r1, r3, #3
 8023c0c:	00db      	lsls	r3, r3, #3
 8023c0e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023c12:	b2db      	uxtb	r3, r3
 8023c14:	fb10 f007 	smulbb	r0, r0, r7
 8023c18:	fa1f fc8c 	uxth.w	ip, ip
 8023c1c:	fb03 0302 	mla	r3, r3, r2, r0
 8023c20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023c24:	fb1e fe07 	smulbb	lr, lr, r7
 8023c28:	fb01 e102 	mla	r1, r1, r2, lr
 8023c2c:	b29a      	uxth	r2, r3
 8023c2e:	f10c 0301 	add.w	r3, ip, #1
 8023c32:	b289      	uxth	r1, r1
 8023c34:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023c38:	1c53      	adds	r3, r2, #1
 8023c3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023c3e:	1c4a      	adds	r2, r1, #1
 8023c40:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023c44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023c48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c4c:	0949      	lsrs	r1, r1, #5
 8023c4e:	ea43 030c 	orr.w	r3, r3, ip
 8023c52:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c56:	430b      	orrs	r3, r1
 8023c58:	f8a8 3000 	strh.w	r3, [r8]
 8023c5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c5e:	441c      	add	r4, r3
 8023c60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c62:	f108 0802 	add.w	r8, r8, #2
 8023c66:	441e      	add	r6, r3
 8023c68:	f109 39ff 	add.w	r9, r9, #4294967295
 8023c6c:	e74a      	b.n	8023b04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023c6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c70:	441c      	add	r4, r3
 8023c72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c74:	441e      	add	r6, r3
 8023c76:	9b07      	ldr	r3, [sp, #28]
 8023c78:	3302      	adds	r3, #2
 8023c7a:	3d01      	subs	r5, #1
 8023c7c:	9307      	str	r3, [sp, #28]
 8023c7e:	e722      	b.n	8023ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023c80:	d022      	beq.n	8023cc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023c82:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023c84:	1e6b      	subs	r3, r5, #1
 8023c86:	fb00 4003 	mla	r0, r0, r3, r4
 8023c8a:	1400      	asrs	r0, r0, #16
 8023c8c:	f53f af37 	bmi.w	8023afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c90:	3901      	subs	r1, #1
 8023c92:	4288      	cmp	r0, r1
 8023c94:	f6bf af33 	bge.w	8023afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c98:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023c9a:	fb01 6303 	mla	r3, r1, r3, r6
 8023c9e:	141b      	asrs	r3, r3, #16
 8023ca0:	f53f af2d 	bmi.w	8023afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023ca4:	3a01      	subs	r2, #1
 8023ca6:	4293      	cmp	r3, r2
 8023ca8:	f6bf af29 	bge.w	8023afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023cac:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023cb0:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023cb4:	46a8      	mov	r8, r5
 8023cb6:	f1b8 0f00 	cmp.w	r8, #0
 8023cba:	dc5e      	bgt.n	8023d7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023cbc:	9b07      	ldr	r3, [sp, #28]
 8023cbe:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023cc2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023cc6:	9307      	str	r3, [sp, #28]
 8023cc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023cca:	2b00      	cmp	r3, #0
 8023ccc:	f340 80f6 	ble.w	8023ebc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023cd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023cd4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023cd8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023cdc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023cde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023ce2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023ce6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023cea:	eef0 6a62 	vmov.f32	s13, s5
 8023cee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023cf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023cf6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023cfa:	ee16 4a90 	vmov	r4, s13
 8023cfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d02:	eef0 6a43 	vmov.f32	s13, s6
 8023d06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d0a:	ee12 2a90 	vmov	r2, s5
 8023d0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d12:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d16:	ee13 2a10 	vmov	r2, s6
 8023d1a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d22:	9320      	str	r3, [sp, #128]	; 0x80
 8023d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023d28:	3b01      	subs	r3, #1
 8023d2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d2e:	930a      	str	r3, [sp, #40]	; 0x28
 8023d30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d32:	ee16 6a90 	vmov	r6, s13
 8023d36:	bf14      	ite	ne
 8023d38:	461d      	movne	r5, r3
 8023d3a:	4615      	moveq	r5, r2
 8023d3c:	eeb0 3a67 	vmov.f32	s6, s15
 8023d40:	eef0 2a47 	vmov.f32	s5, s14
 8023d44:	e6b0      	b.n	8023aa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023d46:	f111 0a01 	adds.w	sl, r1, #1
 8023d4a:	d487      	bmi.n	8023c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d4c:	45d6      	cmp	lr, sl
 8023d4e:	db85      	blt.n	8023c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d50:	f110 0a01 	adds.w	sl, r0, #1
 8023d54:	d482      	bmi.n	8023c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d56:	4553      	cmp	r3, sl
 8023d58:	db80      	blt.n	8023c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d5a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023d5c:	9101      	str	r1, [sp, #4]
 8023d5e:	b21b      	sxth	r3, r3
 8023d60:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023d64:	9300      	str	r3, [sp, #0]
 8023d66:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023d6a:	fa0f f38e 	sxth.w	r3, lr
 8023d6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023d70:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023d72:	4641      	mov	r1, r8
 8023d74:	f7ff fdb4 	bl	80238e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023d78:	e770      	b.n	8023c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d7c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023d7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d82:	1430      	asrs	r0, r6, #16
 8023d84:	1423      	asrs	r3, r4, #16
 8023d86:	fb01 3000 	mla	r0, r1, r0, r3
 8023d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d8c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023d90:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023d94:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023d98:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023d9c:	8858      	ldrh	r0, [r3, #2]
 8023d9e:	f1be 0f00 	cmp.w	lr, #0
 8023da2:	d00b      	beq.n	8023dbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023da4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023da8:	3901      	subs	r1, #1
 8023daa:	0049      	lsls	r1, r1, #1
 8023dac:	3102      	adds	r1, #2
 8023dae:	eb03 0b01 	add.w	fp, r3, r1
 8023db2:	5a5b      	ldrh	r3, [r3, r1]
 8023db4:	930e      	str	r3, [sp, #56]	; 0x38
 8023db6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023dba:	930f      	str	r3, [sp, #60]	; 0x3c
 8023dbc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023dc0:	fb12 f30e 	smulbb	r3, r2, lr
 8023dc4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023dc8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023dcc:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023dd0:	10db      	asrs	r3, r3, #3
 8023dd2:	ea41 010c 	orr.w	r1, r1, ip
 8023dd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023dda:	f1ce 0c10 	rsb	ip, lr, #16
 8023dde:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023de2:	ebac 0c02 	sub.w	ip, ip, r2
 8023de6:	ea4b 0000 	orr.w	r0, fp, r0
 8023dea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023dee:	4350      	muls	r0, r2
 8023df0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023df2:	9f08      	ldr	r7, [sp, #32]
 8023df4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023df8:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023dfc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023e00:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023e04:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023e06:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023e08:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023e0c:	0412      	lsls	r2, r2, #16
 8023e0e:	ea4b 0101 	orr.w	r1, fp, r1
 8023e12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023e16:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023e1a:	fb03 c101 	mla	r1, r3, r1, ip
 8023e1e:	4302      	orrs	r2, r0
 8023e20:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023e24:	fb03 1202 	mla	r2, r3, r2, r1
 8023e28:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023e2c:	0952      	lsrs	r2, r2, #5
 8023e2e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023e32:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023e36:	f8b9 2000 	ldrh.w	r2, [r9]
 8023e3a:	ea4b 0303 	orr.w	r3, fp, r3
 8023e3e:	b29b      	uxth	r3, r3
 8023e40:	1211      	asrs	r1, r2, #8
 8023e42:	1218      	asrs	r0, r3, #8
 8023e44:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e48:	fb11 f107 	smulbb	r1, r1, r7
 8023e4c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023e50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023e54:	00d2      	lsls	r2, r2, #3
 8023e56:	fb00 100a 	mla	r0, r0, sl, r1
 8023e5a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023e5e:	10d9      	asrs	r1, r3, #3
 8023e60:	b2d2      	uxtb	r2, r2
 8023e62:	00db      	lsls	r3, r3, #3
 8023e64:	fb1c fc07 	smulbb	ip, ip, r7
 8023e68:	fb12 f207 	smulbb	r2, r2, r7
 8023e6c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023e70:	b2db      	uxtb	r3, r3
 8023e72:	b280      	uxth	r0, r0
 8023e74:	fb01 c10a 	mla	r1, r1, sl, ip
 8023e78:	fb03 230a 	mla	r3, r3, sl, r2
 8023e7c:	b29b      	uxth	r3, r3
 8023e7e:	b289      	uxth	r1, r1
 8023e80:	1c42      	adds	r2, r0, #1
 8023e82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023e86:	f101 0c01 	add.w	ip, r1, #1
 8023e8a:	1c5a      	adds	r2, r3, #1
 8023e8c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023e90:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023e94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023e96:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023e9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023e9e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023ea2:	4310      	orrs	r0, r2
 8023ea4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023ea8:	441c      	add	r4, r3
 8023eaa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023eac:	ea40 000c 	orr.w	r0, r0, ip
 8023eb0:	f829 0b02 	strh.w	r0, [r9], #2
 8023eb4:	441e      	add	r6, r3
 8023eb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8023eba:	e6fc      	b.n	8023cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023ebc:	b013      	add	sp, #76	; 0x4c
 8023ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023ec2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023ec2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023ec6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023eca:	fb0e 4703 	mla	r7, lr, r3, r4
 8023ece:	f1be 0f00 	cmp.w	lr, #0
 8023ed2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023ed6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023eda:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023ede:	8808      	ldrh	r0, [r1, #0]
 8023ee0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023ee4:	db60      	blt.n	8023fa8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023ee6:	45f1      	cmp	r9, lr
 8023ee8:	dd5e      	ble.n	8023fa8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023eea:	2c00      	cmp	r4, #0
 8023eec:	db5a      	blt.n	8023fa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023eee:	42a3      	cmp	r3, r4
 8023ef0:	dd58      	ble.n	8023fa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023ef2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023ef6:	1c62      	adds	r2, r4, #1
 8023ef8:	d459      	bmi.n	8023fae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023efa:	4293      	cmp	r3, r2
 8023efc:	dd57      	ble.n	8023fae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023efe:	2d00      	cmp	r5, #0
 8023f00:	d055      	beq.n	8023fae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023f02:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023f06:	f11e 0e01 	adds.w	lr, lr, #1
 8023f0a:	d454      	bmi.n	8023fb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023f0c:	45f1      	cmp	r9, lr
 8023f0e:	dd52      	ble.n	8023fb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023f10:	2e00      	cmp	r6, #0
 8023f12:	d050      	beq.n	8023fb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023f14:	2c00      	cmp	r4, #0
 8023f16:	db4c      	blt.n	8023fb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023f18:	42a3      	cmp	r3, r4
 8023f1a:	dd4a      	ble.n	8023fb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023f1c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023f20:	3401      	adds	r4, #1
 8023f22:	d405      	bmi.n	8023f30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023f24:	42a3      	cmp	r3, r4
 8023f26:	dd03      	ble.n	8023f30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023f28:	b115      	cbz	r5, 8023f30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023f2a:	3301      	adds	r3, #1
 8023f2c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023f30:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023f34:	fb15 f406 	smulbb	r4, r5, r6
 8023f38:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023f3c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023f40:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023f44:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023f48:	ea43 0c0c 	orr.w	ip, r3, ip
 8023f4c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023f50:	f1c6 0310 	rsb	r3, r6, #16
 8023f54:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023f58:	1b5b      	subs	r3, r3, r5
 8023f5a:	ea4e 0707 	orr.w	r7, lr, r7
 8023f5e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023f62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023f66:	437d      	muls	r5, r7
 8023f68:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023f6c:	0403      	lsls	r3, r0, #16
 8023f6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023f72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f76:	4318      	orrs	r0, r3
 8023f78:	0413      	lsls	r3, r2, #16
 8023f7a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023f7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f82:	4313      	orrs	r3, r2
 8023f84:	fb04 c000 	mla	r0, r4, r0, ip
 8023f88:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023f8c:	fb06 0003 	mla	r0, r6, r3, r0
 8023f90:	0d43      	lsrs	r3, r0, #21
 8023f92:	0940      	lsrs	r0, r0, #5
 8023f94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f9c:	4318      	orrs	r0, r3
 8023f9e:	8008      	strh	r0, [r1, #0]
 8023fa0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023fa4:	4684      	mov	ip, r0
 8023fa6:	e7a6      	b.n	8023ef6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023fa8:	4607      	mov	r7, r0
 8023faa:	4684      	mov	ip, r0
 8023fac:	e7ab      	b.n	8023f06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023fae:	4607      	mov	r7, r0
 8023fb0:	e7a9      	b.n	8023f06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023fb2:	4602      	mov	r2, r0
 8023fb4:	e7b4      	b.n	8023f20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023fb6:	4602      	mov	r2, r0
 8023fb8:	e7ba      	b.n	8023f30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023fba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023fba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fbe:	b08f      	sub	sp, #60	; 0x3c
 8023fc0:	461d      	mov	r5, r3
 8023fc2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023fc4:	920c      	str	r2, [sp, #48]	; 0x30
 8023fc6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023fca:	9107      	str	r1, [sp, #28]
 8023fcc:	6859      	ldr	r1, [r3, #4]
 8023fce:	681b      	ldr	r3, [r3, #0]
 8023fd0:	900d      	str	r0, [sp, #52]	; 0x34
 8023fd2:	fb01 2707 	mla	r7, r1, r7, r2
 8023fd6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023fda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fdc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023fe0:	f8d3 8000 	ldr.w	r8, [r3]
 8023fe4:	9b07      	ldr	r3, [sp, #28]
 8023fe6:	2b00      	cmp	r3, #0
 8023fe8:	dc03      	bgt.n	8023ff2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023fea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023fec:	2b00      	cmp	r3, #0
 8023fee:	f340 8181 	ble.w	80242f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023ff2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ff4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ff8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023ffc:	1e48      	subs	r0, r1, #1
 8023ffe:	f102 3cff 	add.w	ip, r2, #4294967295
 8024002:	2d00      	cmp	r5, #0
 8024004:	f340 809b 	ble.w	802413e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024008:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802400c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024010:	d406      	bmi.n	8024020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024012:	4586      	cmp	lr, r0
 8024014:	da04      	bge.n	8024020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024016:	2b00      	cmp	r3, #0
 8024018:	db02      	blt.n	8024020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802401a:	4563      	cmp	r3, ip
 802401c:	f2c0 8090 	blt.w	8024140 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024020:	f11e 0e01 	adds.w	lr, lr, #1
 8024024:	f100 8084 	bmi.w	8024130 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024028:	4571      	cmp	r1, lr
 802402a:	f2c0 8081 	blt.w	8024130 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802402e:	3301      	adds	r3, #1
 8024030:	d47e      	bmi.n	8024130 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024032:	429a      	cmp	r2, r3
 8024034:	db7c      	blt.n	8024130 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024036:	46aa      	mov	sl, r5
 8024038:	46b9      	mov	r9, r7
 802403a:	f1ba 0f00 	cmp.w	sl, #0
 802403e:	f340 8099 	ble.w	8024174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024042:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024044:	1421      	asrs	r1, r4, #16
 8024046:	ea4f 4026 	mov.w	r0, r6, asr #16
 802404a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802404e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024052:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024056:	f100 80d0 	bmi.w	80241fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802405a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802405e:	4559      	cmp	r1, fp
 8024060:	f280 80cb 	bge.w	80241fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024064:	2800      	cmp	r0, #0
 8024066:	f2c0 80c8 	blt.w	80241fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802406a:	f103 3bff 	add.w	fp, r3, #4294967295
 802406e:	4558      	cmp	r0, fp
 8024070:	f280 80c3 	bge.w	80241fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024074:	fa0f fe8e 	sxth.w	lr, lr
 8024078:	fb00 110e 	mla	r1, r0, lr, r1
 802407c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024080:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024084:	8841      	ldrh	r1, [r0, #2]
 8024086:	f1bc 0f00 	cmp.w	ip, #0
 802408a:	d00b      	beq.n	80240a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802408c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024090:	3b01      	subs	r3, #1
 8024092:	005b      	lsls	r3, r3, #1
 8024094:	3302      	adds	r3, #2
 8024096:	eb00 0e03 	add.w	lr, r0, r3
 802409a:	5ac3      	ldrh	r3, [r0, r3]
 802409c:	9308      	str	r3, [sp, #32]
 802409e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80240a2:	9309      	str	r3, [sp, #36]	; 0x24
 80240a4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80240a8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80240ac:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80240b0:	ea40 000b 	orr.w	r0, r0, fp
 80240b4:	fb12 f30c 	smulbb	r3, r2, ip
 80240b8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80240bc:	10db      	asrs	r3, r3, #3
 80240be:	f1cc 0e10 	rsb	lr, ip, #16
 80240c2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80240c6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80240ca:	ebae 0e02 	sub.w	lr, lr, r2
 80240ce:	ea4b 0101 	orr.w	r1, fp, r1
 80240d2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80240d6:	4351      	muls	r1, r2
 80240d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80240da:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80240de:	fb0e 1e00 	mla	lr, lr, r0, r1
 80240e2:	0410      	lsls	r0, r2, #16
 80240e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80240e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80240ec:	4310      	orrs	r0, r2
 80240ee:	9a08      	ldr	r2, [sp, #32]
 80240f0:	9908      	ldr	r1, [sp, #32]
 80240f2:	0412      	lsls	r2, r2, #16
 80240f4:	fb03 e000 	mla	r0, r3, r0, lr
 80240f8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80240fc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024100:	ea42 020e 	orr.w	r2, r2, lr
 8024104:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024108:	fb03 0302 	mla	r3, r3, r2, r0
 802410c:	0d5a      	lsrs	r2, r3, #21
 802410e:	095b      	lsrs	r3, r3, #5
 8024110:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024114:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024118:	4313      	orrs	r3, r2
 802411a:	f8a9 3000 	strh.w	r3, [r9]
 802411e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024120:	441c      	add	r4, r3
 8024122:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024124:	f109 0902 	add.w	r9, r9, #2
 8024128:	441e      	add	r6, r3
 802412a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802412e:	e784      	b.n	802403a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024130:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024132:	441c      	add	r4, r3
 8024134:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024136:	3d01      	subs	r5, #1
 8024138:	441e      	add	r6, r3
 802413a:	3702      	adds	r7, #2
 802413c:	e761      	b.n	8024002 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802413e:	d01d      	beq.n	802417c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024140:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024142:	1e6b      	subs	r3, r5, #1
 8024144:	fb00 4003 	mla	r0, r0, r3, r4
 8024148:	1400      	asrs	r0, r0, #16
 802414a:	f53f af74 	bmi.w	8024036 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802414e:	3901      	subs	r1, #1
 8024150:	4288      	cmp	r0, r1
 8024152:	f6bf af70 	bge.w	8024036 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024156:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024158:	fb01 6303 	mla	r3, r1, r3, r6
 802415c:	141b      	asrs	r3, r3, #16
 802415e:	f53f af6a 	bmi.w	8024036 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024162:	3a01      	subs	r2, #1
 8024164:	4293      	cmp	r3, r2
 8024166:	f6bf af66 	bge.w	8024036 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802416a:	46a9      	mov	r9, r5
 802416c:	46ba      	mov	sl, r7
 802416e:	f1b9 0f00 	cmp.w	r9, #0
 8024172:	dc5a      	bgt.n	802422a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024174:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024178:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802417c:	9b07      	ldr	r3, [sp, #28]
 802417e:	2b00      	cmp	r3, #0
 8024180:	f340 80b8 	ble.w	80242f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024184:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024188:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802418c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024190:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024192:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024196:	ee31 1a05 	vadd.f32	s2, s2, s10
 802419a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802419e:	eef0 6a62 	vmov.f32	s13, s5
 80241a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80241a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80241aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80241ae:	ee16 4a90 	vmov	r4, s13
 80241b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80241b6:	eef0 6a43 	vmov.f32	s13, s6
 80241ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80241be:	ee12 2a90 	vmov	r2, s5
 80241c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80241c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80241ca:	ee13 2a10 	vmov	r2, s6
 80241ce:	931b      	str	r3, [sp, #108]	; 0x6c
 80241d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80241d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80241d6:	931c      	str	r3, [sp, #112]	; 0x70
 80241d8:	9b07      	ldr	r3, [sp, #28]
 80241da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80241dc:	3b01      	subs	r3, #1
 80241de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80241e2:	9307      	str	r3, [sp, #28]
 80241e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80241e6:	ee16 6a90 	vmov	r6, s13
 80241ea:	bf14      	ite	ne
 80241ec:	461d      	movne	r5, r3
 80241ee:	4615      	moveq	r5, r2
 80241f0:	eeb0 3a67 	vmov.f32	s6, s15
 80241f4:	eef0 2a47 	vmov.f32	s5, s14
 80241f8:	e6f4      	b.n	8023fe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80241fa:	f111 0b01 	adds.w	fp, r1, #1
 80241fe:	d48e      	bmi.n	802411e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024200:	45de      	cmp	lr, fp
 8024202:	db8c      	blt.n	802411e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024204:	f110 0b01 	adds.w	fp, r0, #1
 8024208:	d489      	bmi.n	802411e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802420a:	455b      	cmp	r3, fp
 802420c:	db87      	blt.n	802411e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802420e:	b21b      	sxth	r3, r3
 8024210:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024214:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024218:	9300      	str	r3, [sp, #0]
 802421a:	4642      	mov	r2, r8
 802421c:	fa0f f38e 	sxth.w	r3, lr
 8024220:	4649      	mov	r1, r9
 8024222:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024224:	f7ff fe4d 	bl	8023ec2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024228:	e779      	b.n	802411e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802422a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802422c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024230:	1420      	asrs	r0, r4, #16
 8024232:	1431      	asrs	r1, r6, #16
 8024234:	fb03 0101 	mla	r1, r3, r1, r0
 8024238:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802423c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024240:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024244:	8841      	ldrh	r1, [r0, #2]
 8024246:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802424a:	f1be 0f00 	cmp.w	lr, #0
 802424e:	d00b      	beq.n	8024268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024250:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024254:	3b01      	subs	r3, #1
 8024256:	005b      	lsls	r3, r3, #1
 8024258:	3302      	adds	r3, #2
 802425a:	eb00 0b03 	add.w	fp, r0, r3
 802425e:	5ac3      	ldrh	r3, [r0, r3]
 8024260:	930a      	str	r3, [sp, #40]	; 0x28
 8024262:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024266:	930b      	str	r3, [sp, #44]	; 0x2c
 8024268:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802426c:	fb12 f30e 	smulbb	r3, r2, lr
 8024270:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024274:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024278:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802427c:	10db      	asrs	r3, r3, #3
 802427e:	ea40 000c 	orr.w	r0, r0, ip
 8024282:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024286:	f1ce 0c10 	rsb	ip, lr, #16
 802428a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802428e:	ebac 0c02 	sub.w	ip, ip, r2
 8024292:	ea4b 0101 	orr.w	r1, fp, r1
 8024296:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802429a:	4351      	muls	r1, r2
 802429c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802429e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80242a2:	fb0c 1c00 	mla	ip, ip, r0, r1
 80242a6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80242aa:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80242ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80242b0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80242b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80242b6:	0412      	lsls	r2, r2, #16
 80242b8:	ea4b 0000 	orr.w	r0, fp, r0
 80242bc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80242c0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80242c4:	fb03 c000 	mla	r0, r3, r0, ip
 80242c8:	ea42 0b0b 	orr.w	fp, r2, fp
 80242cc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80242d0:	fb03 000b 	mla	r0, r3, fp, r0
 80242d4:	0d43      	lsrs	r3, r0, #21
 80242d6:	0940      	lsrs	r0, r0, #5
 80242d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80242dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80242e0:	4318      	orrs	r0, r3
 80242e2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80242e4:	f82a 0b02 	strh.w	r0, [sl], #2
 80242e8:	441c      	add	r4, r3
 80242ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80242ec:	f109 39ff 	add.w	r9, r9, #4294967295
 80242f0:	441e      	add	r6, r3
 80242f2:	e73c      	b.n	802416e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80242f4:	b00f      	add	sp, #60	; 0x3c
 80242f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080242fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80242fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242fe:	b085      	sub	sp, #20
 8024300:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024304:	9102      	str	r1, [sp, #8]
 8024306:	2c00      	cmp	r4, #0
 8024308:	fb04 7103 	mla	r1, r4, r3, r7
 802430c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024310:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024314:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024318:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802431c:	f2c0 811b 	blt.w	8024556 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024320:	45a6      	cmp	lr, r4
 8024322:	f340 8118 	ble.w	8024556 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024326:	2f00      	cmp	r7, #0
 8024328:	f2c0 8113 	blt.w	8024552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802432c:	42bb      	cmp	r3, r7
 802432e:	f340 8110 	ble.w	8024552 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024332:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024336:	1c7a      	adds	r2, r7, #1
 8024338:	f100 8110 	bmi.w	802455c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802433c:	4293      	cmp	r3, r2
 802433e:	f340 810d 	ble.w	802455c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024342:	2e00      	cmp	r6, #0
 8024344:	f000 810c 	beq.w	8024560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024348:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802434c:	3401      	adds	r4, #1
 802434e:	f100 810b 	bmi.w	8024568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024352:	45a6      	cmp	lr, r4
 8024354:	f340 8108 	ble.w	8024568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024358:	2800      	cmp	r0, #0
 802435a:	f000 8108 	beq.w	802456e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802435e:	2f00      	cmp	r7, #0
 8024360:	f2c0 8100 	blt.w	8024564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024364:	42bb      	cmp	r3, r7
 8024366:	f340 80fd 	ble.w	8024564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802436a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802436e:	3701      	adds	r7, #1
 8024370:	f100 8100 	bmi.w	8024574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024374:	42bb      	cmp	r3, r7
 8024376:	f340 80fd 	ble.w	8024574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802437a:	2e00      	cmp	r6, #0
 802437c:	f000 80fc 	beq.w	8024578 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024380:	3301      	adds	r3, #1
 8024382:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024386:	b2b6      	uxth	r6, r6
 8024388:	b280      	uxth	r0, r0
 802438a:	fb00 fe06 	mul.w	lr, r0, r6
 802438e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024392:	0136      	lsls	r6, r6, #4
 8024394:	eba6 070e 	sub.w	r7, r6, lr
 8024398:	b280      	uxth	r0, r0
 802439a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802439e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80243a2:	b2bf      	uxth	r7, r7
 80243a4:	1a1b      	subs	r3, r3, r0
 80243a6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80243aa:	b29b      	uxth	r3, r3
 80243ac:	fb0a f607 	mul.w	r6, sl, r7
 80243b0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80243b4:	fb0b 6603 	mla	r6, fp, r3, r6
 80243b8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80243bc:	fb00 6609 	mla	r6, r0, r9, r6
 80243c0:	fb0e 6608 	mla	r6, lr, r8, r6
 80243c4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80243c8:	9600      	str	r6, [sp, #0]
 80243ca:	2e00      	cmp	r6, #0
 80243cc:	f000 80be 	beq.w	802454c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80243d0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80243d4:	fb0b fc0c 	mul.w	ip, fp, ip
 80243d8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80243dc:	fb0b f505 	mul.w	r5, fp, r5
 80243e0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80243e4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80243e8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243ec:	44dc      	add	ip, fp
 80243ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243f2:	9501      	str	r5, [sp, #4]
 80243f4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80243f8:	9503      	str	r5, [sp, #12]
 80243fa:	9d01      	ldr	r5, [sp, #4]
 80243fc:	9e02      	ldr	r6, [sp, #8]
 80243fe:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024402:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024406:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802440a:	fb0a fc0c 	mul.w	ip, sl, ip
 802440e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024412:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024416:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802441a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802441e:	4465      	add	r5, ip
 8024420:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024424:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024428:	fb09 fc0c 	mul.w	ip, r9, ip
 802442c:	fb09 f904 	mul.w	r9, r9, r4
 8024430:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024434:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024438:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802443c:	fb08 f404 	mul.w	r4, r8, r4
 8024440:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024444:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024448:	fb08 f802 	mul.w	r8, r8, r2
 802444c:	fb0a fa01 	mul.w	sl, sl, r1
 8024450:	0a22      	lsrs	r2, r4, #8
 8024452:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024456:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802445a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802445e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024462:	4414      	add	r4, r2
 8024464:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024468:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802446c:	0a2d      	lsrs	r5, r5, #8
 802446e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024472:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024476:	9a03      	ldr	r2, [sp, #12]
 8024478:	8836      	ldrh	r6, [r6, #0]
 802447a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802447e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024482:	437d      	muls	r5, r7
 8024484:	4461      	add	r1, ip
 8024486:	0a24      	lsrs	r4, r4, #8
 8024488:	fb02 5503 	mla	r5, r2, r3, r5
 802448c:	0a09      	lsrs	r1, r1, #8
 802448e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024492:	fb04 540e 	mla	r4, r4, lr, r5
 8024496:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802449a:	fb01 4100 	mla	r1, r1, r0, r4
 802449e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244a2:	0a09      	lsrs	r1, r1, #8
 80244a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244a8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80244ac:	fb07 f70a 	mul.w	r7, r7, sl
 80244b0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80244b4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80244b8:	fb03 7101 	mla	r1, r3, r1, r7
 80244bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80244c0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80244c4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80244c8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80244cc:	fb00 e101 	mla	r1, r0, r1, lr
 80244d0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80244d4:	9a00      	ldr	r2, [sp, #0]
 80244d6:	b287      	uxth	r7, r0
 80244d8:	437a      	muls	r2, r7
 80244da:	0a09      	lsrs	r1, r1, #8
 80244dc:	1c53      	adds	r3, r2, #1
 80244de:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80244e2:	4321      	orrs	r1, r4
 80244e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80244e8:	1235      	asrs	r5, r6, #8
 80244ea:	0c0a      	lsrs	r2, r1, #16
 80244ec:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80244f0:	b2db      	uxtb	r3, r3
 80244f2:	fb12 f207 	smulbb	r2, r2, r7
 80244f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80244fa:	fb05 2503 	mla	r5, r5, r3, r2
 80244fe:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024502:	10f2      	asrs	r2, r6, #3
 8024504:	b2c8      	uxtb	r0, r1
 8024506:	00f6      	lsls	r6, r6, #3
 8024508:	fb14 f407 	smulbb	r4, r4, r7
 802450c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024510:	b2f6      	uxtb	r6, r6
 8024512:	fb10 f007 	smulbb	r0, r0, r7
 8024516:	fb02 4203 	mla	r2, r2, r3, r4
 802451a:	b2ad      	uxth	r5, r5
 802451c:	fb06 0303 	mla	r3, r6, r3, r0
 8024520:	b299      	uxth	r1, r3
 8024522:	b294      	uxth	r4, r2
 8024524:	1c6b      	adds	r3, r5, #1
 8024526:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802452a:	1c62      	adds	r2, r4, #1
 802452c:	1c4b      	adds	r3, r1, #1
 802452e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024532:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024536:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802453a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802453e:	0952      	lsrs	r2, r2, #5
 8024540:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024544:	432b      	orrs	r3, r5
 8024546:	4313      	orrs	r3, r2
 8024548:	9a02      	ldr	r2, [sp, #8]
 802454a:	8013      	strh	r3, [r2, #0]
 802454c:	b005      	add	sp, #20
 802454e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024552:	2500      	movs	r5, #0
 8024554:	e6ef      	b.n	8024336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024556:	2100      	movs	r1, #0
 8024558:	460d      	mov	r5, r1
 802455a:	e6f7      	b.n	802434c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802455c:	2100      	movs	r1, #0
 802455e:	e6f5      	b.n	802434c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024560:	4631      	mov	r1, r6
 8024562:	e6f3      	b.n	802434c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024564:	2400      	movs	r4, #0
 8024566:	e702      	b.n	802436e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024568:	2200      	movs	r2, #0
 802456a:	4614      	mov	r4, r2
 802456c:	e70b      	b.n	8024386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802456e:	4602      	mov	r2, r0
 8024570:	4604      	mov	r4, r0
 8024572:	e708      	b.n	8024386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024574:	2200      	movs	r2, #0
 8024576:	e706      	b.n	8024386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024578:	4632      	mov	r2, r6
 802457a:	e704      	b.n	8024386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802457c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802457c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024580:	b09d      	sub	sp, #116	; 0x74
 8024582:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024586:	9219      	str	r2, [sp, #100]	; 0x64
 8024588:	9307      	str	r3, [sp, #28]
 802458a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802458c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024590:	931a      	str	r3, [sp, #104]	; 0x68
 8024592:	9117      	str	r1, [sp, #92]	; 0x5c
 8024594:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024598:	901b      	str	r0, [sp, #108]	; 0x6c
 802459a:	6850      	ldr	r0, [r2, #4]
 802459c:	6812      	ldr	r2, [r2, #0]
 802459e:	fb00 1303 	mla	r3, r0, r3, r1
 80245a2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80245a6:	930a      	str	r3, [sp, #40]	; 0x28
 80245a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80245aa:	681b      	ldr	r3, [r3, #0]
 80245ac:	9310      	str	r3, [sp, #64]	; 0x40
 80245ae:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80245b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80245b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80245b6:	2b00      	cmp	r3, #0
 80245b8:	dc03      	bgt.n	80245c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80245ba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80245bc:	2b00      	cmp	r3, #0
 80245be:	f340 8375 	ble.w	8024cac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80245c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80245c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80245c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80245cc:	1e48      	subs	r0, r1, #1
 80245ce:	1e57      	subs	r7, r2, #1
 80245d0:	9b07      	ldr	r3, [sp, #28]
 80245d2:	2b00      	cmp	r3, #0
 80245d4:	f340 818e 	ble.w	80248f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80245d8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80245dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80245e0:	d406      	bmi.n	80245f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80245e2:	4584      	cmp	ip, r0
 80245e4:	da04      	bge.n	80245f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80245e6:	2b00      	cmp	r3, #0
 80245e8:	db02      	blt.n	80245f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80245ea:	42bb      	cmp	r3, r7
 80245ec:	f2c0 8183 	blt.w	80248f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80245f0:	f11c 0c01 	adds.w	ip, ip, #1
 80245f4:	f100 8173 	bmi.w	80248de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80245f8:	4561      	cmp	r1, ip
 80245fa:	f2c0 8170 	blt.w	80248de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80245fe:	3301      	adds	r3, #1
 8024600:	f100 816d 	bmi.w	80248de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024604:	429a      	cmp	r2, r3
 8024606:	f2c0 816a 	blt.w	80248de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802460a:	9b07      	ldr	r3, [sp, #28]
 802460c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802460e:	9318      	str	r3, [sp, #96]	; 0x60
 8024610:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024612:	2b00      	cmp	r3, #0
 8024614:	f340 818c 	ble.w	8024930 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024618:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802461a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802461c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024620:	689b      	ldr	r3, [r3, #8]
 8024622:	1422      	asrs	r2, r4, #16
 8024624:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024628:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802462c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024630:	f100 81cd 	bmi.w	80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024634:	f103 38ff 	add.w	r8, r3, #4294967295
 8024638:	4542      	cmp	r2, r8
 802463a:	f280 81c8 	bge.w	80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802463e:	f1bc 0f00 	cmp.w	ip, #0
 8024642:	f2c0 81c4 	blt.w	80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024646:	f10e 38ff 	add.w	r8, lr, #4294967295
 802464a:	45c4      	cmp	ip, r8
 802464c:	f280 81bf 	bge.w	80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024650:	b21b      	sxth	r3, r3
 8024652:	fb0c 2203 	mla	r2, ip, r3, r2
 8024656:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024658:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802465c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024660:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024664:	2800      	cmp	r0, #0
 8024666:	f000 81a9 	beq.w	80249bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802466a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802466e:	950c      	str	r5, [sp, #48]	; 0x30
 8024670:	0e2d      	lsrs	r5, r5, #24
 8024672:	9513      	str	r5, [sp, #76]	; 0x4c
 8024674:	b181      	cbz	r1, 8024698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024676:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802467a:	3b01      	subs	r3, #1
 802467c:	009b      	lsls	r3, r3, #2
 802467e:	3304      	adds	r3, #4
 8024680:	eb08 0c03 	add.w	ip, r8, r3
 8024684:	f858 3003 	ldr.w	r3, [r8, r3]
 8024688:	9308      	str	r3, [sp, #32]
 802468a:	0e1b      	lsrs	r3, r3, #24
 802468c:	9311      	str	r3, [sp, #68]	; 0x44
 802468e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024692:	930d      	str	r3, [sp, #52]	; 0x34
 8024694:	0e1b      	lsrs	r3, r3, #24
 8024696:	9314      	str	r3, [sp, #80]	; 0x50
 8024698:	b280      	uxth	r0, r0
 802469a:	b289      	uxth	r1, r1
 802469c:	fb00 f901 	mul.w	r9, r0, r1
 80246a0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80246a4:	0100      	lsls	r0, r0, #4
 80246a6:	eba0 0809 	sub.w	r8, r0, r9
 80246aa:	b289      	uxth	r1, r1
 80246ac:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80246b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80246b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246b4:	fa1f f888 	uxth.w	r8, r8
 80246b8:	1a5b      	subs	r3, r3, r1
 80246ba:	b29b      	uxth	r3, r3
 80246bc:	fb08 f000 	mul.w	r0, r8, r0
 80246c0:	fb03 000e 	mla	r0, r3, lr, r0
 80246c4:	fb01 0005 	mla	r0, r1, r5, r0
 80246c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80246ca:	fb09 0005 	mla	r0, r9, r5, r0
 80246ce:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80246d2:	2800      	cmp	r0, #0
 80246d4:	f000 80fa 	beq.w	80248cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80246d8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80246dc:	d01b      	beq.n	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80246de:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80246e2:	fb0e fa0a 	mul.w	sl, lr, sl
 80246e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80246ea:	fb0e fe02 	mul.w	lr, lr, r2
 80246ee:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80246f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80246f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80246fa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80246fe:	4452      	add	r2, sl
 8024700:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024704:	0a12      	lsrs	r2, r2, #8
 8024706:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802470a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802470e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024712:	ea42 020c 	orr.w	r2, r2, ip
 8024716:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024718:	2dff      	cmp	r5, #255	; 0xff
 802471a:	d021      	beq.n	8024760 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802471c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802471e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024722:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024724:	fb05 fb0b 	mul.w	fp, r5, fp
 8024728:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802472a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802472e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024730:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024734:	fb05 fa0a 	mul.w	sl, r5, sl
 8024738:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802473c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024740:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024744:	44de      	add	lr, fp
 8024746:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802474a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802474e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024752:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024756:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802475a:	ea4e 050a 	orr.w	r5, lr, sl
 802475e:	950c      	str	r5, [sp, #48]	; 0x30
 8024760:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024762:	2dff      	cmp	r5, #255	; 0xff
 8024764:	d021      	beq.n	80247aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024766:	9d08      	ldr	r5, [sp, #32]
 8024768:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802476c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802476e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024772:	9d08      	ldr	r5, [sp, #32]
 8024774:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024778:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802477a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802477e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024782:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024786:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802478a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802478e:	44de      	add	lr, fp
 8024790:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024794:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024798:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802479c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247a4:	ea4e 050a 	orr.w	r5, lr, sl
 80247a8:	9508      	str	r5, [sp, #32]
 80247aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247ac:	2dff      	cmp	r5, #255	; 0xff
 80247ae:	d021      	beq.n	80247f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80247b0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80247b2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80247b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247b8:	fb05 fb0b 	mul.w	fp, r5, fp
 80247bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80247be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80247c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80247cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80247d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80247d8:	44de      	add	lr, fp
 80247da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247ee:	ea4e 050a 	orr.w	r5, lr, sl
 80247f2:	950d      	str	r5, [sp, #52]	; 0x34
 80247f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80247f6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80247fa:	9d08      	ldr	r5, [sp, #32]
 80247fc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024800:	fb08 fc0c 	mul.w	ip, r8, ip
 8024804:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024808:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802480c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802480e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024812:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024816:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024818:	fb09 cc0e 	mla	ip, r9, lr, ip
 802481c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024820:	fb08 f80e 	mul.w	r8, r8, lr
 8024824:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024828:	fb03 8202 	mla	r2, r3, r2, r8
 802482c:	9b08      	ldr	r3, [sp, #32]
 802482e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024830:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024834:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024836:	fb01 220a 	mla	r2, r1, sl, r2
 802483a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802483e:	fb09 2901 	mla	r9, r9, r1, r2
 8024842:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024844:	883b      	ldrh	r3, [r7, #0]
 8024846:	4342      	muls	r2, r0
 8024848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802484c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024850:	1c50      	adds	r0, r2, #1
 8024852:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024856:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802485a:	ea4c 0c09 	orr.w	ip, ip, r9
 802485e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024862:	1219      	asrs	r1, r3, #8
 8024864:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024868:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802486c:	b2c0      	uxtb	r0, r0
 802486e:	fb12 f205 	smulbb	r2, r2, r5
 8024872:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024876:	fb01 2100 	mla	r1, r1, r0, r2
 802487a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802487e:	10da      	asrs	r2, r3, #3
 8024880:	fa5f fc8c 	uxtb.w	ip, ip
 8024884:	00db      	lsls	r3, r3, #3
 8024886:	fb1c fc05 	smulbb	ip, ip, r5
 802488a:	b2db      	uxtb	r3, r3
 802488c:	b289      	uxth	r1, r1
 802488e:	fb03 c300 	mla	r3, r3, r0, ip
 8024892:	fa1f fc83 	uxth.w	ip, r3
 8024896:	1c4b      	adds	r3, r1, #1
 8024898:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802489c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80248a0:	fb1e fe05 	smulbb	lr, lr, r5
 80248a4:	f10c 0301 	add.w	r3, ip, #1
 80248a8:	fb02 e200 	mla	r2, r2, r0, lr
 80248ac:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80248b0:	b292      	uxth	r2, r2
 80248b2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80248b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80248ba:	430b      	orrs	r3, r1
 80248bc:	1c51      	adds	r1, r2, #1
 80248be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80248c2:	0952      	lsrs	r2, r2, #5
 80248c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248c8:	4313      	orrs	r3, r2
 80248ca:	803b      	strh	r3, [r7, #0]
 80248cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80248ce:	441c      	add	r4, r3
 80248d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80248d2:	441e      	add	r6, r3
 80248d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248d6:	3b01      	subs	r3, #1
 80248d8:	3702      	adds	r7, #2
 80248da:	9318      	str	r3, [sp, #96]	; 0x60
 80248dc:	e698      	b.n	8024610 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80248de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80248e0:	441c      	add	r4, r3
 80248e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80248e4:	441e      	add	r6, r3
 80248e6:	9b07      	ldr	r3, [sp, #28]
 80248e8:	3b01      	subs	r3, #1
 80248ea:	9307      	str	r3, [sp, #28]
 80248ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80248ee:	3302      	adds	r3, #2
 80248f0:	930a      	str	r3, [sp, #40]	; 0x28
 80248f2:	e66d      	b.n	80245d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80248f4:	d023      	beq.n	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80248f6:	9b07      	ldr	r3, [sp, #28]
 80248f8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80248fa:	3b01      	subs	r3, #1
 80248fc:	fb00 4003 	mla	r0, r0, r3, r4
 8024900:	1400      	asrs	r0, r0, #16
 8024902:	f53f ae82 	bmi.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024906:	3901      	subs	r1, #1
 8024908:	4288      	cmp	r0, r1
 802490a:	f6bf ae7e 	bge.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802490e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024910:	fb01 6303 	mla	r3, r1, r3, r6
 8024914:	141b      	asrs	r3, r3, #16
 8024916:	f53f ae78 	bmi.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802491a:	3a01      	subs	r2, #1
 802491c:	4293      	cmp	r3, r2
 802491e:	f6bf ae74 	bge.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024922:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024926:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802492a:	f1bb 0f00 	cmp.w	fp, #0
 802492e:	dc6c      	bgt.n	8024a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024930:	9b07      	ldr	r3, [sp, #28]
 8024932:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024936:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024938:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802493c:	930a      	str	r3, [sp, #40]	; 0x28
 802493e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024940:	2b00      	cmp	r3, #0
 8024942:	f340 81b3 	ble.w	8024cac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024946:	ee30 0a04 	vadd.f32	s0, s0, s8
 802494a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802494e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024952:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024954:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024958:	ee31 1a05 	vadd.f32	s2, s2, s10
 802495c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024960:	eef0 6a62 	vmov.f32	s13, s5
 8024964:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024968:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802496c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024970:	ee16 4a90 	vmov	r4, s13
 8024974:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024978:	eef0 6a43 	vmov.f32	s13, s6
 802497c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024980:	ee12 2a90 	vmov	r2, s5
 8024984:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024988:	fb92 f3f3 	sdiv	r3, r2, r3
 802498c:	ee13 2a10 	vmov	r2, s6
 8024990:	9329      	str	r3, [sp, #164]	; 0xa4
 8024992:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024994:	fb92 f3f3 	sdiv	r3, r2, r3
 8024998:	932a      	str	r3, [sp, #168]	; 0xa8
 802499a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802499c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802499e:	3b01      	subs	r3, #1
 80249a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80249a4:	9317      	str	r3, [sp, #92]	; 0x5c
 80249a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80249a8:	bf08      	it	eq
 80249aa:	4613      	moveq	r3, r2
 80249ac:	ee16 6a90 	vmov	r6, s13
 80249b0:	9307      	str	r3, [sp, #28]
 80249b2:	eeb0 3a67 	vmov.f32	s6, s15
 80249b6:	eef0 2a47 	vmov.f32	s5, s14
 80249ba:	e5fb      	b.n	80245b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80249bc:	2900      	cmp	r1, #0
 80249be:	f43f ae6b 	beq.w	8024698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80249c2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80249c6:	9308      	str	r3, [sp, #32]
 80249c8:	0e1b      	lsrs	r3, r3, #24
 80249ca:	9311      	str	r3, [sp, #68]	; 0x44
 80249cc:	e664      	b.n	8024698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80249ce:	f112 0801 	adds.w	r8, r2, #1
 80249d2:	f53f af7b 	bmi.w	80248cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249d6:	4543      	cmp	r3, r8
 80249d8:	f6ff af78 	blt.w	80248cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249dc:	f11c 0801 	adds.w	r8, ip, #1
 80249e0:	f53f af74 	bmi.w	80248cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249e4:	45c6      	cmp	lr, r8
 80249e6:	f6ff af71 	blt.w	80248cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80249ea:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80249ec:	9201      	str	r2, [sp, #4]
 80249ee:	fa0f f28e 	sxth.w	r2, lr
 80249f2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80249f6:	e9cd c002 	strd	ip, r0, [sp, #8]
 80249fa:	9200      	str	r2, [sp, #0]
 80249fc:	b21b      	sxth	r3, r3
 80249fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024a00:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024a02:	4639      	mov	r1, r7
 8024a04:	f7ff fc79 	bl	80242fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024a08:	e760      	b.n	80248cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024a0a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024a0c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024a0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a12:	1427      	asrs	r7, r4, #16
 8024a14:	1433      	asrs	r3, r6, #16
 8024a16:	fb01 7303 	mla	r3, r1, r3, r7
 8024a1a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8024a1e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024a22:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024a26:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024a2a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024a2e:	2a00      	cmp	r2, #0
 8024a30:	f000 8133 	beq.w	8024c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024a34:	687d      	ldr	r5, [r7, #4]
 8024a36:	950e      	str	r5, [sp, #56]	; 0x38
 8024a38:	0e2d      	lsrs	r5, r5, #24
 8024a3a:	9515      	str	r5, [sp, #84]	; 0x54
 8024a3c:	b178      	cbz	r0, 8024a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024a3e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024a42:	3901      	subs	r1, #1
 8024a44:	0089      	lsls	r1, r1, #2
 8024a46:	3104      	adds	r1, #4
 8024a48:	eb07 0e01 	add.w	lr, r7, r1
 8024a4c:	5879      	ldr	r1, [r7, r1]
 8024a4e:	9109      	str	r1, [sp, #36]	; 0x24
 8024a50:	0e09      	lsrs	r1, r1, #24
 8024a52:	9112      	str	r1, [sp, #72]	; 0x48
 8024a54:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024a58:	910f      	str	r1, [sp, #60]	; 0x3c
 8024a5a:	0e09      	lsrs	r1, r1, #24
 8024a5c:	9116      	str	r1, [sp, #88]	; 0x58
 8024a5e:	b292      	uxth	r2, r2
 8024a60:	b280      	uxth	r0, r0
 8024a62:	fb02 f800 	mul.w	r8, r2, r0
 8024a66:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024a6a:	0112      	lsls	r2, r2, #4
 8024a6c:	eba2 0e08 	sub.w	lr, r2, r8
 8024a70:	b280      	uxth	r0, r0
 8024a72:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024a76:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024a78:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a7a:	fa1f fe8e 	uxth.w	lr, lr
 8024a7e:	1a12      	subs	r2, r2, r0
 8024a80:	b292      	uxth	r2, r2
 8024a82:	fb0e f101 	mul.w	r1, lr, r1
 8024a86:	fb02 110c 	mla	r1, r2, ip, r1
 8024a8a:	fb00 1105 	mla	r1, r0, r5, r1
 8024a8e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024a90:	fb08 1105 	mla	r1, r8, r5, r1
 8024a94:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024a98:	2900      	cmp	r1, #0
 8024a9a:	f000 80f5 	beq.w	8024c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024a9e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024aa2:	d019      	beq.n	8024ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024aa4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024aa8:	fb0c fa0a 	mul.w	sl, ip, sl
 8024aac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ab0:	fb0c fc03 	mul.w	ip, ip, r3
 8024ab4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024ab8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024abc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ac0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024ac4:	4453      	add	r3, sl
 8024ac6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024aca:	0a1b      	lsrs	r3, r3, #8
 8024acc:	0a3f      	lsrs	r7, r7, #8
 8024ace:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ad2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024ad6:	433b      	orrs	r3, r7
 8024ad8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024ada:	2dff      	cmp	r5, #255	; 0xff
 8024adc:	d020      	beq.n	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024ade:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024ae0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024ae4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024ae6:	436f      	muls	r7, r5
 8024ae8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024aea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024af0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024af4:	fb05 fa0a 	mul.w	sl, r5, sl
 8024af8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024afc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b00:	44bc      	add	ip, r7
 8024b02:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b06:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b1a:	ea4c 050a 	orr.w	r5, ip, sl
 8024b1e:	950e      	str	r5, [sp, #56]	; 0x38
 8024b20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b22:	2dff      	cmp	r5, #255	; 0xff
 8024b24:	d020      	beq.n	8024b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024b26:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b28:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b2e:	436f      	muls	r7, r5
 8024b30:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024b36:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b38:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b3c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b40:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b48:	44bc      	add	ip, r7
 8024b4a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b4e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b62:	ea4c 050a 	orr.w	r5, ip, sl
 8024b66:	9509      	str	r5, [sp, #36]	; 0x24
 8024b68:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b6a:	2dff      	cmp	r5, #255	; 0xff
 8024b6c:	d020      	beq.n	8024bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024b6e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b70:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b74:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b76:	436f      	muls	r7, r5
 8024b78:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b7a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024b7e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b80:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b84:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b88:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b90:	44bc      	add	ip, r7
 8024b92:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b96:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ba2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ba6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024baa:	ea4c 050a 	orr.w	r5, ip, sl
 8024bae:	950f      	str	r5, [sp, #60]	; 0x3c
 8024bb0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bb2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024bb6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024bb8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024bbc:	fb0e f707 	mul.w	r7, lr, r7
 8024bc0:	fb02 770c 	mla	r7, r2, ip, r7
 8024bc4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024bc8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024bca:	fb00 770c 	mla	r7, r0, ip, r7
 8024bce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024bd2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bd4:	fb08 770c 	mla	r7, r8, ip, r7
 8024bd8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024bdc:	fb0e fe0c 	mul.w	lr, lr, ip
 8024be0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024be4:	fb02 e303 	mla	r3, r2, r3, lr
 8024be8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024bea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024bec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024bf0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024bf2:	fb00 330a 	mla	r3, r0, sl, r3
 8024bf6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024bfa:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024bfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024c00:	f8b9 0000 	ldrh.w	r0, [r9]
 8024c04:	4359      	muls	r1, r3
 8024c06:	0a3f      	lsrs	r7, r7, #8
 8024c08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024c10:	1c4b      	adds	r3, r1, #1
 8024c12:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024c16:	ea47 070c 	orr.w	r7, r7, ip
 8024c1a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024c1e:	1202      	asrs	r2, r0, #8
 8024c20:	0c3b      	lsrs	r3, r7, #16
 8024c22:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024c26:	b2c9      	uxtb	r1, r1
 8024c28:	fb13 f305 	smulbb	r3, r3, r5
 8024c2c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024c30:	fb02 3201 	mla	r2, r2, r1, r3
 8024c34:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024c38:	10c3      	asrs	r3, r0, #3
 8024c3a:	b2ff      	uxtb	r7, r7
 8024c3c:	00c0      	lsls	r0, r0, #3
 8024c3e:	b2c0      	uxtb	r0, r0
 8024c40:	fb17 f705 	smulbb	r7, r7, r5
 8024c44:	fb00 7001 	mla	r0, r0, r1, r7
 8024c48:	b292      	uxth	r2, r2
 8024c4a:	fb1c fc05 	smulbb	ip, ip, r5
 8024c4e:	b280      	uxth	r0, r0
 8024c50:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024c54:	fb03 c301 	mla	r3, r3, r1, ip
 8024c58:	1c51      	adds	r1, r2, #1
 8024c5a:	f100 0c01 	add.w	ip, r0, #1
 8024c5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024c62:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024c66:	b29b      	uxth	r3, r3
 8024c68:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024c6c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024c70:	ea4c 0202 	orr.w	r2, ip, r2
 8024c74:	f103 0c01 	add.w	ip, r3, #1
 8024c78:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024c7c:	095b      	lsrs	r3, r3, #5
 8024c7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024c82:	431a      	orrs	r2, r3
 8024c84:	f8a9 2000 	strh.w	r2, [r9]
 8024c88:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024c8a:	441c      	add	r4, r3
 8024c8c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024c8e:	f109 0902 	add.w	r9, r9, #2
 8024c92:	441e      	add	r6, r3
 8024c94:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024c98:	e647      	b.n	802492a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024c9a:	2800      	cmp	r0, #0
 8024c9c:	f43f aedf 	beq.w	8024a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024ca0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024ca4:	9109      	str	r1, [sp, #36]	; 0x24
 8024ca6:	0e09      	lsrs	r1, r1, #24
 8024ca8:	9112      	str	r1, [sp, #72]	; 0x48
 8024caa:	e6d8      	b.n	8024a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024cac:	b01d      	add	sp, #116	; 0x74
 8024cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024cb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024cb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cb6:	b085      	sub	sp, #20
 8024cb8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024cbc:	9102      	str	r1, [sp, #8]
 8024cbe:	2c00      	cmp	r4, #0
 8024cc0:	fb04 7103 	mla	r1, r4, r3, r7
 8024cc4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024cc8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024ccc:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024cd0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024cd4:	f2c0 810c 	blt.w	8024ef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024cd8:	45a6      	cmp	lr, r4
 8024cda:	f340 8109 	ble.w	8024ef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024cde:	2f00      	cmp	r7, #0
 8024ce0:	f2c0 8104 	blt.w	8024eec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024ce4:	42bb      	cmp	r3, r7
 8024ce6:	f340 8101 	ble.w	8024eec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024cea:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024cee:	1c7a      	adds	r2, r7, #1
 8024cf0:	f100 8101 	bmi.w	8024ef6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024cf4:	4293      	cmp	r3, r2
 8024cf6:	f340 80fe 	ble.w	8024ef6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024cfa:	2e00      	cmp	r6, #0
 8024cfc:	f000 80fd 	beq.w	8024efa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024d00:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024d04:	3401      	adds	r4, #1
 8024d06:	f100 80fc 	bmi.w	8024f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024d0a:	45a6      	cmp	lr, r4
 8024d0c:	f340 80f9 	ble.w	8024f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024d10:	2800      	cmp	r0, #0
 8024d12:	f000 80f9 	beq.w	8024f08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024d16:	2f00      	cmp	r7, #0
 8024d18:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024d1c:	f2c0 80ef 	blt.w	8024efe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024d20:	42bb      	cmp	r3, r7
 8024d22:	f340 80ec 	ble.w	8024efe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024d26:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024d2a:	3701      	adds	r7, #1
 8024d2c:	f100 80ef 	bmi.w	8024f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024d30:	42bb      	cmp	r3, r7
 8024d32:	f340 80ec 	ble.w	8024f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024d36:	2e00      	cmp	r6, #0
 8024d38:	f000 80eb 	beq.w	8024f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024d3c:	6852      	ldr	r2, [r2, #4]
 8024d3e:	b2b6      	uxth	r6, r6
 8024d40:	b280      	uxth	r0, r0
 8024d42:	fb00 fe06 	mul.w	lr, r0, r6
 8024d46:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024d4a:	0136      	lsls	r6, r6, #4
 8024d4c:	eba6 070e 	sub.w	r7, r6, lr
 8024d50:	b280      	uxth	r0, r0
 8024d52:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024d56:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024d5a:	b2bf      	uxth	r7, r7
 8024d5c:	1a1b      	subs	r3, r3, r0
 8024d5e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024d62:	b29b      	uxth	r3, r3
 8024d64:	fb07 f60a 	mul.w	r6, r7, sl
 8024d68:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024d6c:	fb0b 6603 	mla	r6, fp, r3, r6
 8024d70:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024d74:	fb00 6609 	mla	r6, r0, r9, r6
 8024d78:	fb0e 6608 	mla	r6, lr, r8, r6
 8024d7c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024d80:	9600      	str	r6, [sp, #0]
 8024d82:	2e00      	cmp	r6, #0
 8024d84:	f000 80af 	beq.w	8024ee6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024d88:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024d8c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024d90:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024d94:	fb0b f505 	mul.w	r5, fp, r5
 8024d98:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024d9c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024da0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024da4:	44dc      	add	ip, fp
 8024da6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024daa:	9501      	str	r5, [sp, #4]
 8024dac:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024db0:	9503      	str	r5, [sp, #12]
 8024db2:	9d01      	ldr	r5, [sp, #4]
 8024db4:	9e02      	ldr	r6, [sp, #8]
 8024db6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024dba:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024dbe:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024dc2:	fb0a fc0c 	mul.w	ip, sl, ip
 8024dc6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024dca:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024dce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024dd2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024dd6:	4465      	add	r5, ip
 8024dd8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ddc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024de0:	fb09 fc0c 	mul.w	ip, r9, ip
 8024de4:	fb09 f904 	mul.w	r9, r9, r4
 8024de8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024dec:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024df0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024df4:	fb08 f404 	mul.w	r4, r8, r4
 8024df8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024dfc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024e00:	fb08 f802 	mul.w	r8, r8, r2
 8024e04:	fb0a fa01 	mul.w	sl, sl, r1
 8024e08:	0a22      	lsrs	r2, r4, #8
 8024e0a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024e0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e12:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024e16:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024e1a:	4414      	add	r4, r2
 8024e1c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024e20:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024e24:	0a2d      	lsrs	r5, r5, #8
 8024e26:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024e2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e2e:	9a03      	ldr	r2, [sp, #12]
 8024e30:	8836      	ldrh	r6, [r6, #0]
 8024e32:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024e36:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e3a:	437d      	muls	r5, r7
 8024e3c:	4461      	add	r1, ip
 8024e3e:	0a24      	lsrs	r4, r4, #8
 8024e40:	fb02 5503 	mla	r5, r2, r3, r5
 8024e44:	0a09      	lsrs	r1, r1, #8
 8024e46:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024e4a:	fb04 540e 	mla	r4, r4, lr, r5
 8024e4e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024e52:	fb01 4100 	mla	r1, r1, r0, r4
 8024e56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e5a:	0a09      	lsrs	r1, r1, #8
 8024e5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e60:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024e64:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024e68:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024e6c:	fb07 f70a 	mul.w	r7, r7, sl
 8024e70:	fb03 7101 	mla	r1, r3, r1, r7
 8024e74:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024e78:	9b00      	ldr	r3, [sp, #0]
 8024e7a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024e7e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024e82:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024e86:	fb00 e101 	mla	r1, r0, r1, lr
 8024e8a:	43da      	mvns	r2, r3
 8024e8c:	1233      	asrs	r3, r6, #8
 8024e8e:	b2d2      	uxtb	r2, r2
 8024e90:	10f0      	asrs	r0, r6, #3
 8024e92:	0a09      	lsrs	r1, r1, #8
 8024e94:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024e98:	00f6      	lsls	r6, r6, #3
 8024e9a:	4353      	muls	r3, r2
 8024e9c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024ea0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024ea4:	b2f6      	uxtb	r6, r6
 8024ea6:	4321      	orrs	r1, r4
 8024ea8:	4350      	muls	r0, r2
 8024eaa:	4356      	muls	r6, r2
 8024eac:	1c5a      	adds	r2, r3, #1
 8024eae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024eb2:	0c0b      	lsrs	r3, r1, #16
 8024eb4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024eb8:	1c42      	adds	r2, r0, #1
 8024eba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ebe:	0a0a      	lsrs	r2, r1, #8
 8024ec0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024ec4:	021b      	lsls	r3, r3, #8
 8024ec6:	00d2      	lsls	r2, r2, #3
 8024ec8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ecc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024ed0:	4313      	orrs	r3, r2
 8024ed2:	1c72      	adds	r2, r6, #1
 8024ed4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024ed8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024edc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024ee0:	4319      	orrs	r1, r3
 8024ee2:	9b02      	ldr	r3, [sp, #8]
 8024ee4:	8019      	strh	r1, [r3, #0]
 8024ee6:	b005      	add	sp, #20
 8024ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024eec:	2500      	movs	r5, #0
 8024eee:	e6fe      	b.n	8024cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024ef0:	2100      	movs	r1, #0
 8024ef2:	460d      	mov	r5, r1
 8024ef4:	e706      	b.n	8024d04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024ef6:	2100      	movs	r1, #0
 8024ef8:	e704      	b.n	8024d04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024efa:	4631      	mov	r1, r6
 8024efc:	e702      	b.n	8024d04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024efe:	2400      	movs	r4, #0
 8024f00:	e713      	b.n	8024d2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024f02:	2200      	movs	r2, #0
 8024f04:	4614      	mov	r4, r2
 8024f06:	e71a      	b.n	8024d3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024f08:	4602      	mov	r2, r0
 8024f0a:	4604      	mov	r4, r0
 8024f0c:	e717      	b.n	8024d3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024f0e:	2200      	movs	r2, #0
 8024f10:	e715      	b.n	8024d3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024f12:	4632      	mov	r2, r6
 8024f14:	e713      	b.n	8024d3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f1c:	b09b      	sub	sp, #108	; 0x6c
 8024f1e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024f22:	9218      	str	r2, [sp, #96]	; 0x60
 8024f24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024f26:	9116      	str	r1, [sp, #88]	; 0x58
 8024f28:	9307      	str	r3, [sp, #28]
 8024f2a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024f2e:	9019      	str	r0, [sp, #100]	; 0x64
 8024f30:	6850      	ldr	r0, [r2, #4]
 8024f32:	6812      	ldr	r2, [r2, #0]
 8024f34:	fb00 1303 	mla	r3, r0, r3, r1
 8024f38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024f3c:	930a      	str	r3, [sp, #40]	; 0x28
 8024f3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f40:	681b      	ldr	r3, [r3, #0]
 8024f42:	930f      	str	r3, [sp, #60]	; 0x3c
 8024f44:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024f46:	2b00      	cmp	r3, #0
 8024f48:	dc03      	bgt.n	8024f52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024f4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024f4c:	2b00      	cmp	r3, #0
 8024f4e:	f340 8386 	ble.w	802565e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024f52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f5c:	1e48      	subs	r0, r1, #1
 8024f5e:	1e57      	subs	r7, r2, #1
 8024f60:	9b07      	ldr	r3, [sp, #28]
 8024f62:	2b00      	cmp	r3, #0
 8024f64:	f340 8166 	ble.w	8025234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024f68:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024f6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f70:	d406      	bmi.n	8024f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024f72:	4584      	cmp	ip, r0
 8024f74:	da04      	bge.n	8024f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024f76:	2b00      	cmp	r3, #0
 8024f78:	db02      	blt.n	8024f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024f7a:	42bb      	cmp	r3, r7
 8024f7c:	f2c0 815b 	blt.w	8025236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024f80:	f11c 0c01 	adds.w	ip, ip, #1
 8024f84:	f100 814b 	bmi.w	802521e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f88:	4561      	cmp	r1, ip
 8024f8a:	f2c0 8148 	blt.w	802521e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f8e:	3301      	adds	r3, #1
 8024f90:	f100 8145 	bmi.w	802521e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f94:	429a      	cmp	r2, r3
 8024f96:	f2c0 8142 	blt.w	802521e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f9a:	9b07      	ldr	r3, [sp, #28]
 8024f9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024f9e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024fa0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024fa2:	2b00      	cmp	r3, #0
 8024fa4:	f340 8165 	ble.w	8025272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024fa8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024faa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024fac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024fb0:	689b      	ldr	r3, [r3, #8]
 8024fb2:	1422      	asrs	r2, r4, #16
 8024fb4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024fb8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024fbc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024fc0:	f100 81d5 	bmi.w	802536e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fc4:	f103 38ff 	add.w	r8, r3, #4294967295
 8024fc8:	4542      	cmp	r2, r8
 8024fca:	f280 81d0 	bge.w	802536e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fce:	f1bc 0f00 	cmp.w	ip, #0
 8024fd2:	f2c0 81cc 	blt.w	802536e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fd6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024fda:	45c4      	cmp	ip, r8
 8024fdc:	f280 81c7 	bge.w	802536e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024fe0:	b21b      	sxth	r3, r3
 8024fe2:	fb0c 2203 	mla	r2, ip, r3, r2
 8024fe6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024fe8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024fec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024ff0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024ff4:	2900      	cmp	r1, #0
 8024ff6:	f000 8182 	beq.w	80252fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024ffa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024ffe:	950b      	str	r5, [sp, #44]	; 0x2c
 8025000:	0e2d      	lsrs	r5, r5, #24
 8025002:	9512      	str	r5, [sp, #72]	; 0x48
 8025004:	b180      	cbz	r0, 8025028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025006:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802500a:	3b01      	subs	r3, #1
 802500c:	009b      	lsls	r3, r3, #2
 802500e:	3304      	adds	r3, #4
 8025010:	eb08 0c03 	add.w	ip, r8, r3
 8025014:	f858 3003 	ldr.w	r3, [r8, r3]
 8025018:	9308      	str	r3, [sp, #32]
 802501a:	0e1b      	lsrs	r3, r3, #24
 802501c:	9310      	str	r3, [sp, #64]	; 0x40
 802501e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025022:	930c      	str	r3, [sp, #48]	; 0x30
 8025024:	0e1b      	lsrs	r3, r3, #24
 8025026:	9313      	str	r3, [sp, #76]	; 0x4c
 8025028:	b289      	uxth	r1, r1
 802502a:	b280      	uxth	r0, r0
 802502c:	fb01 f900 	mul.w	r9, r1, r0
 8025030:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025034:	0109      	lsls	r1, r1, #4
 8025036:	eba1 0809 	sub.w	r8, r1, r9
 802503a:	b280      	uxth	r0, r0
 802503c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025040:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025042:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025044:	fa1f f888 	uxth.w	r8, r8
 8025048:	1a09      	subs	r1, r1, r0
 802504a:	b289      	uxth	r1, r1
 802504c:	fb08 f303 	mul.w	r3, r8, r3
 8025050:	fb01 330e 	mla	r3, r1, lr, r3
 8025054:	fb00 3305 	mla	r3, r0, r5, r3
 8025058:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802505a:	fb09 3305 	mla	r3, r9, r5, r3
 802505e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025062:	2b00      	cmp	r3, #0
 8025064:	f000 80d2 	beq.w	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025068:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802506c:	d01b      	beq.n	80250a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802506e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8025072:	fb0e fa0a 	mul.w	sl, lr, sl
 8025076:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802507a:	fb0e fe02 	mul.w	lr, lr, r2
 802507e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025082:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025086:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802508a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802508e:	4452      	add	r2, sl
 8025090:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025094:	0a12      	lsrs	r2, r2, #8
 8025096:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802509a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802509e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80250a2:	ea42 020c 	orr.w	r2, r2, ip
 80250a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80250a8:	2dff      	cmp	r5, #255	; 0xff
 80250aa:	d021      	beq.n	80250f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80250ac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250ae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80250b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80250b4:	fb05 fb0b 	mul.w	fp, r5, fp
 80250b8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80250be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80250c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80250c4:	fb05 fa0a 	mul.w	sl, r5, sl
 80250c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80250d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80250d4:	44de      	add	lr, fp
 80250d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80250da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80250de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250ea:	ea4e 050a 	orr.w	r5, lr, sl
 80250ee:	950b      	str	r5, [sp, #44]	; 0x2c
 80250f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80250f2:	2dff      	cmp	r5, #255	; 0xff
 80250f4:	d021      	beq.n	802513a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80250f6:	9d08      	ldr	r5, [sp, #32]
 80250f8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80250fc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80250fe:	fb05 fb0b 	mul.w	fp, r5, fp
 8025102:	9d08      	ldr	r5, [sp, #32]
 8025104:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025108:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802510a:	fb05 fa0e 	mul.w	sl, r5, lr
 802510e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025112:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025116:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802511a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802511e:	44de      	add	lr, fp
 8025120:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025124:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025128:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802512c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025130:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025134:	ea4e 050a 	orr.w	r5, lr, sl
 8025138:	9508      	str	r5, [sp, #32]
 802513a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802513c:	2dff      	cmp	r5, #255	; 0xff
 802513e:	d021      	beq.n	8025184 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025140:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025142:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025146:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025148:	fb05 fb0b 	mul.w	fp, r5, fp
 802514c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802514e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025152:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025154:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025158:	fb05 fa0a 	mul.w	sl, r5, sl
 802515c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025160:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025164:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025168:	44de      	add	lr, fp
 802516a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802516e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025172:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025176:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802517a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802517e:	ea4e 050a 	orr.w	r5, lr, sl
 8025182:	950c      	str	r5, [sp, #48]	; 0x30
 8025184:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025186:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802518a:	9d08      	ldr	r5, [sp, #32]
 802518c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025190:	fb08 fc0c 	mul.w	ip, r8, ip
 8025194:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025198:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802519c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802519e:	fb00 cc0e 	mla	ip, r0, lr, ip
 80251a2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80251a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80251a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80251ac:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80251b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80251b4:	fb08 f80e 	mul.w	r8, r8, lr
 80251b8:	fb01 8202 	mla	r2, r1, r2, r8
 80251bc:	9908      	ldr	r1, [sp, #32]
 80251be:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80251c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80251c4:	fb00 220a 	mla	r2, r0, sl, r2
 80251c8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80251cc:	fb09 2900 	mla	r9, r9, r0, r2
 80251d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80251d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80251dc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80251e0:	ea4c 0c09 	orr.w	ip, ip, r9
 80251e4:	2bff      	cmp	r3, #255	; 0xff
 80251e6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80251ea:	f040 8091 	bne.w	8025310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80251ee:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80251f2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80251f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80251fa:	f022 0207 	bic.w	r2, r2, #7
 80251fe:	431a      	orrs	r2, r3
 8025200:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025204:	ea4c 0c02 	orr.w	ip, ip, r2
 8025208:	f8a7 c000 	strh.w	ip, [r7]
 802520c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802520e:	441c      	add	r4, r3
 8025210:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025212:	441e      	add	r6, r3
 8025214:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025216:	3b01      	subs	r3, #1
 8025218:	3702      	adds	r7, #2
 802521a:	9317      	str	r3, [sp, #92]	; 0x5c
 802521c:	e6c0      	b.n	8024fa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802521e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025220:	441c      	add	r4, r3
 8025222:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025224:	441e      	add	r6, r3
 8025226:	9b07      	ldr	r3, [sp, #28]
 8025228:	3b01      	subs	r3, #1
 802522a:	9307      	str	r3, [sp, #28]
 802522c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802522e:	3302      	adds	r3, #2
 8025230:	930a      	str	r3, [sp, #40]	; 0x28
 8025232:	e695      	b.n	8024f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025234:	d024      	beq.n	8025280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025236:	9b07      	ldr	r3, [sp, #28]
 8025238:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802523a:	3b01      	subs	r3, #1
 802523c:	fb00 4003 	mla	r0, r0, r3, r4
 8025240:	1400      	asrs	r0, r0, #16
 8025242:	f53f aeaa 	bmi.w	8024f9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025246:	3901      	subs	r1, #1
 8025248:	4288      	cmp	r0, r1
 802524a:	f6bf aea6 	bge.w	8024f9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802524e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025250:	fb01 6303 	mla	r3, r1, r3, r6
 8025254:	141b      	asrs	r3, r3, #16
 8025256:	f53f aea0 	bmi.w	8024f9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802525a:	3a01      	subs	r2, #1
 802525c:	4293      	cmp	r3, r2
 802525e:	f6bf ae9c 	bge.w	8024f9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025262:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025266:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802526a:	f1bb 0f00 	cmp.w	fp, #0
 802526e:	f300 809a 	bgt.w	80253a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025272:	9b07      	ldr	r3, [sp, #28]
 8025274:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025278:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802527a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802527e:	930a      	str	r3, [sp, #40]	; 0x28
 8025280:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025282:	2b00      	cmp	r3, #0
 8025284:	f340 81eb 	ble.w	802565e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025288:	ee30 0a04 	vadd.f32	s0, s0, s8
 802528c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025290:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025294:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025296:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802529a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802529e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80252a2:	eef0 6a62 	vmov.f32	s13, s5
 80252a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80252aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80252b2:	ee16 4a90 	vmov	r4, s13
 80252b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80252ba:	eef0 6a43 	vmov.f32	s13, s6
 80252be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80252c2:	ee12 2a90 	vmov	r2, s5
 80252c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80252ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80252ce:	ee13 2a10 	vmov	r2, s6
 80252d2:	9327      	str	r3, [sp, #156]	; 0x9c
 80252d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80252da:	9328      	str	r3, [sp, #160]	; 0xa0
 80252dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80252de:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80252e0:	3b01      	subs	r3, #1
 80252e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252e6:	9316      	str	r3, [sp, #88]	; 0x58
 80252e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252ea:	bf08      	it	eq
 80252ec:	4613      	moveq	r3, r2
 80252ee:	ee16 6a90 	vmov	r6, s13
 80252f2:	9307      	str	r3, [sp, #28]
 80252f4:	eeb0 3a67 	vmov.f32	s6, s15
 80252f8:	eef0 2a47 	vmov.f32	s5, s14
 80252fc:	e622      	b.n	8024f44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80252fe:	2800      	cmp	r0, #0
 8025300:	f43f ae92 	beq.w	8025028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025304:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025308:	9308      	str	r3, [sp, #32]
 802530a:	0e1b      	lsrs	r3, r3, #24
 802530c:	9310      	str	r3, [sp, #64]	; 0x40
 802530e:	e68b      	b.n	8025028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025310:	8839      	ldrh	r1, [r7, #0]
 8025312:	4dd4      	ldr	r5, [pc, #848]	; (8025664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025314:	43db      	mvns	r3, r3
 8025316:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802531a:	fa5f f883 	uxtb.w	r8, r3
 802531e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025322:	fb0e fe08 	mul.w	lr, lr, r8
 8025326:	10c8      	asrs	r0, r1, #3
 8025328:	00cb      	lsls	r3, r1, #3
 802532a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802532e:	f10e 0101 	add.w	r1, lr, #1
 8025332:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025336:	fb00 f008 	mul.w	r0, r0, r8
 802533a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802533e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025342:	f100 0e01 	add.w	lr, r0, #1
 8025346:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802534a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802534e:	b2db      	uxtb	r3, r3
 8025350:	b2c9      	uxtb	r1, r1
 8025352:	00d2      	lsls	r2, r2, #3
 8025354:	fb03 f308 	mul.w	r3, r3, r8
 8025358:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802535c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025360:	430a      	orrs	r2, r1
 8025362:	1c59      	adds	r1, r3, #1
 8025364:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025368:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802536c:	e748      	b.n	8025200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802536e:	f112 0801 	adds.w	r8, r2, #1
 8025372:	f53f af4b 	bmi.w	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025376:	4543      	cmp	r3, r8
 8025378:	f6ff af48 	blt.w	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802537c:	f11c 0801 	adds.w	r8, ip, #1
 8025380:	f53f af44 	bmi.w	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025384:	45c6      	cmp	lr, r8
 8025386:	f6ff af41 	blt.w	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802538a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802538e:	fa0f f28e 	sxth.w	r2, lr
 8025392:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025396:	9200      	str	r2, [sp, #0]
 8025398:	b21b      	sxth	r3, r3
 802539a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802539c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802539e:	4639      	mov	r1, r7
 80253a0:	f7ff fc87 	bl	8024cb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80253a4:	e732      	b.n	802520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80253a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80253a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80253aa:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80253ae:	1421      	asrs	r1, r4, #16
 80253b0:	1433      	asrs	r3, r6, #16
 80253b2:	fb07 1303 	mla	r3, r7, r3, r1
 80253b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80253b8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80253bc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80253c0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80253c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80253c8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80253cc:	2a00      	cmp	r2, #0
 80253ce:	f000 8107 	beq.w	80255e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80253d2:	684d      	ldr	r5, [r1, #4]
 80253d4:	950d      	str	r5, [sp, #52]	; 0x34
 80253d6:	0e2d      	lsrs	r5, r5, #24
 80253d8:	9514      	str	r5, [sp, #80]	; 0x50
 80253da:	b178      	cbz	r0, 80253fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80253dc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80253e0:	3f01      	subs	r7, #1
 80253e2:	00bf      	lsls	r7, r7, #2
 80253e4:	3704      	adds	r7, #4
 80253e6:	eb01 0e07 	add.w	lr, r1, r7
 80253ea:	59c9      	ldr	r1, [r1, r7]
 80253ec:	9109      	str	r1, [sp, #36]	; 0x24
 80253ee:	0e09      	lsrs	r1, r1, #24
 80253f0:	9111      	str	r1, [sp, #68]	; 0x44
 80253f2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80253f6:	910e      	str	r1, [sp, #56]	; 0x38
 80253f8:	0e09      	lsrs	r1, r1, #24
 80253fa:	9115      	str	r1, [sp, #84]	; 0x54
 80253fc:	b292      	uxth	r2, r2
 80253fe:	b280      	uxth	r0, r0
 8025400:	fb02 f900 	mul.w	r9, r2, r0
 8025404:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025408:	0112      	lsls	r2, r2, #4
 802540a:	eba2 0e09 	sub.w	lr, r2, r9
 802540e:	b280      	uxth	r0, r0
 8025410:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025414:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025416:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025418:	fa1f fe8e 	uxth.w	lr, lr
 802541c:	1a09      	subs	r1, r1, r0
 802541e:	b289      	uxth	r1, r1
 8025420:	fb0e f202 	mul.w	r2, lr, r2
 8025424:	fb01 220c 	mla	r2, r1, ip, r2
 8025428:	fb00 2205 	mla	r2, r0, r5, r2
 802542c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802542e:	fb09 2205 	mla	r2, r9, r5, r2
 8025432:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025436:	2a00      	cmp	r2, #0
 8025438:	f000 80c9 	beq.w	80255ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802543c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025440:	d019      	beq.n	8025476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025442:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025446:	fb0c fa0a 	mul.w	sl, ip, sl
 802544a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802544e:	fb0c fc03 	mul.w	ip, ip, r3
 8025452:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025456:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802545a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802545e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025462:	4453      	add	r3, sl
 8025464:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025468:	0a1b      	lsrs	r3, r3, #8
 802546a:	0a3f      	lsrs	r7, r7, #8
 802546c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025470:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025474:	433b      	orrs	r3, r7
 8025476:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025478:	2dff      	cmp	r5, #255	; 0xff
 802547a:	d020      	beq.n	80254be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802547c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802547e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025482:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025484:	436f      	muls	r7, r5
 8025486:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025488:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802548c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802548e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025492:	fb05 fa0a 	mul.w	sl, r5, sl
 8025496:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802549a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802549e:	44bc      	add	ip, r7
 80254a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254b8:	ea4c 050a 	orr.w	r5, ip, sl
 80254bc:	950d      	str	r5, [sp, #52]	; 0x34
 80254be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80254c0:	2dff      	cmp	r5, #255	; 0xff
 80254c2:	d020      	beq.n	8025506 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80254c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80254c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80254ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80254cc:	436f      	muls	r7, r5
 80254ce:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80254d0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80254d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80254d6:	fb05 fa0c 	mul.w	sl, r5, ip
 80254da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80254de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80254e6:	44bc      	add	ip, r7
 80254e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025500:	ea4c 050a 	orr.w	r5, ip, sl
 8025504:	9509      	str	r5, [sp, #36]	; 0x24
 8025506:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025508:	2dff      	cmp	r5, #255	; 0xff
 802550a:	d020      	beq.n	802554e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802550c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802550e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025512:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025514:	436f      	muls	r7, r5
 8025516:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025518:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802551c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802551e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025522:	fb05 fa0a 	mul.w	sl, r5, sl
 8025526:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802552a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802552e:	44bc      	add	ip, r7
 8025530:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025534:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025538:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802553c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025540:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025544:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025548:	ea4c 050a 	orr.w	r5, ip, sl
 802554c:	950e      	str	r5, [sp, #56]	; 0x38
 802554e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025550:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025554:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025556:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802555a:	fb0e f707 	mul.w	r7, lr, r7
 802555e:	fb01 770c 	mla	r7, r1, ip, r7
 8025562:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025566:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025568:	fb00 770c 	mla	r7, r0, ip, r7
 802556c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025570:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025572:	fb09 770c 	mla	r7, r9, ip, r7
 8025576:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802557a:	fb0e fe0c 	mul.w	lr, lr, ip
 802557e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025582:	fb01 e303 	mla	r3, r1, r3, lr
 8025586:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025588:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802558c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802558e:	fb00 330a 	mla	r3, r0, sl, r3
 8025592:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025596:	fb09 3c0c 	mla	ip, r9, ip, r3
 802559a:	0a3f      	lsrs	r7, r7, #8
 802559c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255a0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80255a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80255a8:	ea47 070c 	orr.w	r7, r7, ip
 80255ac:	2aff      	cmp	r2, #255	; 0xff
 80255ae:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80255b2:	d11e      	bne.n	80255f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80255b4:	097a      	lsrs	r2, r7, #5
 80255b6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80255ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255be:	f023 0307 	bic.w	r3, r3, #7
 80255c2:	4313      	orrs	r3, r2
 80255c4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80255c8:	431f      	orrs	r7, r3
 80255ca:	f8a8 7000 	strh.w	r7, [r8]
 80255ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80255d0:	441c      	add	r4, r3
 80255d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255d4:	f108 0802 	add.w	r8, r8, #2
 80255d8:	441e      	add	r6, r3
 80255da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80255de:	e644      	b.n	802526a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80255e0:	2800      	cmp	r0, #0
 80255e2:	f43f af0b 	beq.w	80253fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80255e6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80255ea:	9109      	str	r1, [sp, #36]	; 0x24
 80255ec:	0e09      	lsrs	r1, r1, #24
 80255ee:	9111      	str	r1, [sp, #68]	; 0x44
 80255f0:	e704      	b.n	80253fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80255f2:	f8b8 1000 	ldrh.w	r1, [r8]
 80255f6:	43d2      	mvns	r2, r2
 80255f8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80255fc:	fa5f fe82 	uxtb.w	lr, r2
 8025600:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025604:	fb0c fc0e 	mul.w	ip, ip, lr
 8025608:	10c8      	asrs	r0, r1, #3
 802560a:	00ca      	lsls	r2, r1, #3
 802560c:	f10c 0101 	add.w	r1, ip, #1
 8025610:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025614:	0c39      	lsrs	r1, r7, #16
 8025616:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802561a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802561e:	4911      	ldr	r1, [pc, #68]	; (8025664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025620:	fb00 f00e 	mul.w	r0, r0, lr
 8025624:	fa5f fc8c 	uxtb.w	ip, ip
 8025628:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802562c:	b2d2      	uxtb	r2, r2
 802562e:	1c41      	adds	r1, r0, #1
 8025630:	fb02 f20e 	mul.w	r2, r2, lr
 8025634:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025638:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802563c:	1c51      	adds	r1, r2, #1
 802563e:	00c0      	lsls	r0, r0, #3
 8025640:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025644:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025648:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802564c:	ea4c 0c00 	orr.w	ip, ip, r0
 8025650:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025654:	ea47 0c0c 	orr.w	ip, r7, ip
 8025658:	f8a8 c000 	strh.w	ip, [r8]
 802565c:	e7b7      	b.n	80255ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802565e:	b01b      	add	sp, #108	; 0x6c
 8025660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025664:	fffff800 	.word	0xfffff800

08025668 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025668:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802566c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025670:	2d00      	cmp	r5, #0
 8025672:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025676:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802567a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802567e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025682:	fb05 0e03 	mla	lr, r5, r3, r0
 8025686:	f2c0 808c 	blt.w	80257a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802568a:	45a9      	cmp	r9, r5
 802568c:	f340 8089 	ble.w	80257a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025690:	2800      	cmp	r0, #0
 8025692:	f2c0 8084 	blt.w	802579e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025696:	4580      	cmp	r8, r0
 8025698:	f340 8081 	ble.w	802579e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802569c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80256a0:	f01e 0f01 	tst.w	lr, #1
 80256a4:	5d16      	ldrb	r6, [r2, r4]
 80256a6:	bf0c      	ite	eq
 80256a8:	f006 060f 	andeq.w	r6, r6, #15
 80256ac:	1136      	asrne	r6, r6, #4
 80256ae:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80256b2:	b2f6      	uxtb	r6, r6
 80256b4:	1c44      	adds	r4, r0, #1
 80256b6:	d477      	bmi.n	80257a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80256b8:	45a0      	cmp	r8, r4
 80256ba:	dd75      	ble.n	80257a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80256bc:	2f00      	cmp	r7, #0
 80256be:	d075      	beq.n	80257ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80256c0:	f10e 0a01 	add.w	sl, lr, #1
 80256c4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80256c8:	f01a 0f01 	tst.w	sl, #1
 80256cc:	5d14      	ldrb	r4, [r2, r4]
 80256ce:	bf0c      	ite	eq
 80256d0:	f004 040f 	andeq.w	r4, r4, #15
 80256d4:	1124      	asrne	r4, r4, #4
 80256d6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80256da:	b2e4      	uxtb	r4, r4
 80256dc:	3501      	adds	r5, #1
 80256de:	d469      	bmi.n	80257b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80256e0:	45a9      	cmp	r9, r5
 80256e2:	dd67      	ble.n	80257b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80256e4:	f1bc 0f00 	cmp.w	ip, #0
 80256e8:	d067      	beq.n	80257ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80256ea:	2800      	cmp	r0, #0
 80256ec:	db60      	blt.n	80257b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80256ee:	4580      	cmp	r8, r0
 80256f0:	dd5e      	ble.n	80257b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80256f2:	eb03 090e 	add.w	r9, r3, lr
 80256f6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80256fa:	f019 0f01 	tst.w	r9, #1
 80256fe:	5d55      	ldrb	r5, [r2, r5]
 8025700:	bf0c      	ite	eq
 8025702:	f005 050f 	andeq.w	r5, r5, #15
 8025706:	112d      	asrne	r5, r5, #4
 8025708:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802570c:	b2ed      	uxtb	r5, r5
 802570e:	3001      	adds	r0, #1
 8025710:	d456      	bmi.n	80257c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025712:	4580      	cmp	r8, r0
 8025714:	dd54      	ble.n	80257c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025716:	2f00      	cmp	r7, #0
 8025718:	d054      	beq.n	80257c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802571a:	3301      	adds	r3, #1
 802571c:	449e      	add	lr, r3
 802571e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025722:	f01e 0f01 	tst.w	lr, #1
 8025726:	5cd0      	ldrb	r0, [r2, r3]
 8025728:	bf0c      	ite	eq
 802572a:	f000 000f 	andeq.w	r0, r0, #15
 802572e:	1100      	asrne	r0, r0, #4
 8025730:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025734:	b2c3      	uxtb	r3, r0
 8025736:	b2ba      	uxth	r2, r7
 8025738:	fa1f fc8c 	uxth.w	ip, ip
 802573c:	fb02 f00c 	mul.w	r0, r2, ip
 8025740:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025744:	0112      	lsls	r2, r2, #4
 8025746:	fa1f fc8c 	uxth.w	ip, ip
 802574a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802574e:	1a12      	subs	r2, r2, r0
 8025750:	eba7 070c 	sub.w	r7, r7, ip
 8025754:	b292      	uxth	r2, r2
 8025756:	b2bf      	uxth	r7, r7
 8025758:	4362      	muls	r2, r4
 802575a:	fb06 2207 	mla	r2, r6, r7, r2
 802575e:	fb0c 2505 	mla	r5, ip, r5, r2
 8025762:	fb00 5303 	mla	r3, r0, r3, r5
 8025766:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802576a:	b1b3      	cbz	r3, 802579a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802576c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8025770:	435a      	muls	r2, r3
 8025772:	1c53      	adds	r3, r2, #1
 8025774:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025778:	4a2d      	ldr	r2, [pc, #180]	; (8025830 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802577a:	121b      	asrs	r3, r3, #8
 802577c:	6812      	ldr	r2, [r2, #0]
 802577e:	2bff      	cmp	r3, #255	; 0xff
 8025780:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025784:	d120      	bne.n	80257c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025786:	4b2b      	ldr	r3, [pc, #172]	; (8025834 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025788:	0950      	lsrs	r0, r2, #5
 802578a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802578e:	4033      	ands	r3, r6
 8025790:	4318      	orrs	r0, r3
 8025792:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025796:	4302      	orrs	r2, r0
 8025798:	800a      	strh	r2, [r1, #0]
 802579a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802579e:	2600      	movs	r6, #0
 80257a0:	e788      	b.n	80256b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80257a2:	2400      	movs	r4, #0
 80257a4:	4626      	mov	r6, r4
 80257a6:	e799      	b.n	80256dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80257a8:	2400      	movs	r4, #0
 80257aa:	e797      	b.n	80256dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80257ac:	463c      	mov	r4, r7
 80257ae:	e795      	b.n	80256dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80257b0:	2500      	movs	r5, #0
 80257b2:	e7ac      	b.n	802570e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80257b4:	2300      	movs	r3, #0
 80257b6:	461d      	mov	r5, r3
 80257b8:	e7bd      	b.n	8025736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257ba:	4663      	mov	r3, ip
 80257bc:	4665      	mov	r5, ip
 80257be:	e7ba      	b.n	8025736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257c0:	2300      	movs	r3, #0
 80257c2:	e7b8      	b.n	8025736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257c4:	463b      	mov	r3, r7
 80257c6:	e7b6      	b.n	8025736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80257c8:	880d      	ldrh	r5, [r1, #0]
 80257ca:	b29f      	uxth	r7, r3
 80257cc:	122c      	asrs	r4, r5, #8
 80257ce:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80257d2:	43db      	mvns	r3, r3
 80257d4:	b2db      	uxtb	r3, r3
 80257d6:	fb10 f007 	smulbb	r0, r0, r7
 80257da:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80257de:	fb04 0403 	mla	r4, r4, r3, r0
 80257e2:	b2f6      	uxtb	r6, r6
 80257e4:	10e8      	asrs	r0, r5, #3
 80257e6:	b2d2      	uxtb	r2, r2
 80257e8:	00ed      	lsls	r5, r5, #3
 80257ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80257ee:	fb12 f207 	smulbb	r2, r2, r7
 80257f2:	fb16 f607 	smulbb	r6, r6, r7
 80257f6:	b2ed      	uxtb	r5, r5
 80257f8:	b2a4      	uxth	r4, r4
 80257fa:	fb00 6603 	mla	r6, r0, r3, r6
 80257fe:	fb05 2303 	mla	r3, r5, r3, r2
 8025802:	b29a      	uxth	r2, r3
 8025804:	1c63      	adds	r3, r4, #1
 8025806:	b2b0      	uxth	r0, r6
 8025808:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802580c:	1c53      	adds	r3, r2, #1
 802580e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025812:	1c42      	adds	r2, r0, #1
 8025814:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025818:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802581c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025820:	0940      	lsrs	r0, r0, #5
 8025822:	4323      	orrs	r3, r4
 8025824:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025828:	4303      	orrs	r3, r0
 802582a:	800b      	strh	r3, [r1, #0]
 802582c:	e7b5      	b.n	802579a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802582e:	bf00      	nop
 8025830:	20012db4 	.word	0x20012db4
 8025834:	00fff800 	.word	0x00fff800

08025838 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802583c:	b097      	sub	sp, #92	; 0x5c
 802583e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025842:	9214      	str	r2, [sp, #80]	; 0x50
 8025844:	9309      	str	r3, [sp, #36]	; 0x24
 8025846:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025848:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802584c:	910d      	str	r1, [sp, #52]	; 0x34
 802584e:	930f      	str	r3, [sp, #60]	; 0x3c
 8025850:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025854:	9015      	str	r0, [sp, #84]	; 0x54
 8025856:	6850      	ldr	r0, [r2, #4]
 8025858:	6812      	ldr	r2, [r2, #0]
 802585a:	fb00 1303 	mla	r3, r0, r3, r1
 802585e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025862:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025864:	689b      	ldr	r3, [r3, #8]
 8025866:	3301      	adds	r3, #1
 8025868:	f023 0301 	bic.w	r3, r3, #1
 802586c:	930a      	str	r3, [sp, #40]	; 0x28
 802586e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025870:	681f      	ldr	r7, [r3, #0]
 8025872:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025874:	2b00      	cmp	r3, #0
 8025876:	dc03      	bgt.n	8025880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025878:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802587a:	2b00      	cmp	r3, #0
 802587c:	f340 8287 	ble.w	8025d8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025880:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025882:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025886:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802588a:	1e48      	subs	r0, r1, #1
 802588c:	f102 3cff 	add.w	ip, r2, #4294967295
 8025890:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025892:	2b00      	cmp	r3, #0
 8025894:	f340 80c4 	ble.w	8025a20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025898:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802589c:	ea4f 4326 	mov.w	r3, r6, asr #16
 80258a0:	d406      	bmi.n	80258b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80258a2:	4586      	cmp	lr, r0
 80258a4:	da04      	bge.n	80258b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80258a6:	2b00      	cmp	r3, #0
 80258a8:	db02      	blt.n	80258b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80258aa:	4563      	cmp	r3, ip
 80258ac:	f2c0 80b9 	blt.w	8025a22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80258b0:	f11e 0e01 	adds.w	lr, lr, #1
 80258b4:	f100 80aa 	bmi.w	8025a0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258b8:	4571      	cmp	r1, lr
 80258ba:	f2c0 80a7 	blt.w	8025a0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258be:	3301      	adds	r3, #1
 80258c0:	f100 80a4 	bmi.w	8025a0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258c4:	429a      	cmp	r2, r3
 80258c6:	f2c0 80a1 	blt.w	8025a0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80258ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80258cc:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80258d0:	930e      	str	r3, [sp, #56]	; 0x38
 80258d2:	46c8      	mov	r8, r9
 80258d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80258d6:	2b00      	cmp	r3, #0
 80258d8:	f340 80c3 	ble.w	8025a62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80258dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80258de:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80258e2:	1423      	asrs	r3, r4, #16
 80258e4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80258e8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80258ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80258f0:	f100 814d 	bmi.w	8025b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80258f4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80258f8:	455b      	cmp	r3, fp
 80258fa:	f280 8148 	bge.w	8025b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80258fe:	2800      	cmp	r0, #0
 8025900:	f2c0 8145 	blt.w	8025b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025904:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025908:	4558      	cmp	r0, fp
 802590a:	f280 8140 	bge.w	8025b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802590e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025910:	fb00 3305 	mla	r3, r0, r5, r3
 8025914:	0858      	lsrs	r0, r3, #1
 8025916:	07dd      	lsls	r5, r3, #31
 8025918:	f817 c000 	ldrb.w	ip, [r7, r0]
 802591c:	bf54      	ite	pl
 802591e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025922:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025926:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802592a:	fa5f fc8c 	uxtb.w	ip, ip
 802592e:	2a00      	cmp	r2, #0
 8025930:	f000 80db 	beq.w	8025aea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025934:	1c58      	adds	r0, r3, #1
 8025936:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802593a:	07c0      	lsls	r0, r0, #31
 802593c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025940:	bf54      	ite	pl
 8025942:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025946:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802594a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802594e:	fa5f f08e 	uxtb.w	r0, lr
 8025952:	9010      	str	r0, [sp, #64]	; 0x40
 8025954:	b1c9      	cbz	r1, 802598a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025956:	4453      	add	r3, sl
 8025958:	0858      	lsrs	r0, r3, #1
 802595a:	07dd      	lsls	r5, r3, #31
 802595c:	5c38      	ldrb	r0, [r7, r0]
 802595e:	bf54      	ite	pl
 8025960:	f000 000f 	andpl.w	r0, r0, #15
 8025964:	1100      	asrmi	r0, r0, #4
 8025966:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802596a:	3301      	adds	r3, #1
 802596c:	b2c0      	uxtb	r0, r0
 802596e:	900b      	str	r0, [sp, #44]	; 0x2c
 8025970:	0858      	lsrs	r0, r3, #1
 8025972:	07dd      	lsls	r5, r3, #31
 8025974:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025978:	bf54      	ite	pl
 802597a:	f00e 030f 	andpl.w	r3, lr, #15
 802597e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025982:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025986:	b2db      	uxtb	r3, r3
 8025988:	9311      	str	r3, [sp, #68]	; 0x44
 802598a:	b292      	uxth	r2, r2
 802598c:	b289      	uxth	r1, r1
 802598e:	fb02 f301 	mul.w	r3, r2, r1
 8025992:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025996:	0112      	lsls	r2, r2, #4
 8025998:	b289      	uxth	r1, r1
 802599a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802599e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80259a0:	1ad2      	subs	r2, r2, r3
 80259a2:	1a40      	subs	r0, r0, r1
 80259a4:	b292      	uxth	r2, r2
 80259a6:	436a      	muls	r2, r5
 80259a8:	b280      	uxth	r0, r0
 80259aa:	fb0c 2c00 	mla	ip, ip, r0, r2
 80259ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80259b0:	fb01 c102 	mla	r1, r1, r2, ip
 80259b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80259b6:	fb03 1302 	mla	r3, r3, r2, r1
 80259ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80259be:	b1db      	cbz	r3, 80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80259c2:	4353      	muls	r3, r2
 80259c4:	1c5a      	adds	r2, r3, #1
 80259c6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80259ca:	4ac6      	ldr	r2, [pc, #792]	; (8025ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80259cc:	121b      	asrs	r3, r3, #8
 80259ce:	6812      	ldr	r2, [r2, #0]
 80259d0:	2bff      	cmp	r3, #255	; 0xff
 80259d2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80259d6:	f040 8099 	bne.w	8025b0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80259da:	0953      	lsrs	r3, r2, #5
 80259dc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80259e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80259e4:	f02c 0c07 	bic.w	ip, ip, #7
 80259e8:	ea43 0c0c 	orr.w	ip, r3, ip
 80259ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80259f0:	ea4c 0202 	orr.w	r2, ip, r2
 80259f4:	f8a8 2000 	strh.w	r2, [r8]
 80259f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80259fa:	441c      	add	r4, r3
 80259fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80259fe:	441e      	add	r6, r3
 8025a00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025a02:	3b01      	subs	r3, #1
 8025a04:	f108 0802 	add.w	r8, r8, #2
 8025a08:	930e      	str	r3, [sp, #56]	; 0x38
 8025a0a:	e763      	b.n	80258d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025a0c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025a0e:	441c      	add	r4, r3
 8025a10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a12:	441e      	add	r6, r3
 8025a14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a16:	3b01      	subs	r3, #1
 8025a18:	9309      	str	r3, [sp, #36]	; 0x24
 8025a1a:	f109 0902 	add.w	r9, r9, #2
 8025a1e:	e737      	b.n	8025890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025a20:	d024      	beq.n	8025a6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a24:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025a26:	3b01      	subs	r3, #1
 8025a28:	fb00 4003 	mla	r0, r0, r3, r4
 8025a2c:	1400      	asrs	r0, r0, #16
 8025a2e:	f53f af4c 	bmi.w	80258ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a32:	3901      	subs	r1, #1
 8025a34:	4288      	cmp	r0, r1
 8025a36:	f6bf af48 	bge.w	80258ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a3a:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025a3c:	fb01 6303 	mla	r3, r1, r3, r6
 8025a40:	141b      	asrs	r3, r3, #16
 8025a42:	f53f af42 	bmi.w	80258ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a46:	3a01      	subs	r2, #1
 8025a48:	4293      	cmp	r3, r2
 8025a4a:	f6bf af3e 	bge.w	80258ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a4e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025a52:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025a56:	930e      	str	r3, [sp, #56]	; 0x38
 8025a58:	46c8      	mov	r8, r9
 8025a5a:	f1bb 0f00 	cmp.w	fp, #0
 8025a5e:	f300 80b7 	bgt.w	8025bd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025a62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a64:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025a68:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025a6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025a6e:	2b00      	cmp	r3, #0
 8025a70:	f340 818d 	ble.w	8025d8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025a74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025a78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025a7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025a80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025a86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025a8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025a8e:	eef0 6a62 	vmov.f32	s13, s5
 8025a92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025a96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025a9e:	ee16 4a90 	vmov	r4, s13
 8025aa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025aa6:	eef0 6a43 	vmov.f32	s13, s6
 8025aaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025aae:	ee12 2a90 	vmov	r2, s5
 8025ab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025ab6:	fb92 f3f3 	sdiv	r3, r2, r3
 8025aba:	ee13 2a10 	vmov	r2, s6
 8025abe:	9323      	str	r3, [sp, #140]	; 0x8c
 8025ac0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025ac2:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ac6:	9324      	str	r3, [sp, #144]	; 0x90
 8025ac8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025aca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025acc:	3b01      	subs	r3, #1
 8025ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025ad2:	930d      	str	r3, [sp, #52]	; 0x34
 8025ad4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025ad6:	bf08      	it	eq
 8025ad8:	4613      	moveq	r3, r2
 8025ada:	ee16 6a90 	vmov	r6, s13
 8025ade:	9309      	str	r3, [sp, #36]	; 0x24
 8025ae0:	eeb0 3a67 	vmov.f32	s6, s15
 8025ae4:	eef0 2a47 	vmov.f32	s5, s14
 8025ae8:	e6c3      	b.n	8025872 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025aea:	2900      	cmp	r1, #0
 8025aec:	f43f af4d 	beq.w	802598a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025af0:	eb0a 0003 	add.w	r0, sl, r3
 8025af4:	0843      	lsrs	r3, r0, #1
 8025af6:	07c0      	lsls	r0, r0, #31
 8025af8:	5cfb      	ldrb	r3, [r7, r3]
 8025afa:	bf54      	ite	pl
 8025afc:	f003 030f 	andpl.w	r3, r3, #15
 8025b00:	111b      	asrmi	r3, r3, #4
 8025b02:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025b06:	b2db      	uxtb	r3, r3
 8025b08:	930b      	str	r3, [sp, #44]	; 0x2c
 8025b0a:	e73e      	b.n	802598a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025b0c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025b10:	fa1f fb83 	uxth.w	fp, r3
 8025b14:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025b18:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025b1c:	43db      	mvns	r3, r3
 8025b1e:	b2db      	uxtb	r3, r3
 8025b20:	fb11 f10b 	smulbb	r1, r1, fp
 8025b24:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b28:	fb00 1003 	mla	r0, r0, r3, r1
 8025b2c:	fa5f fc8c 	uxtb.w	ip, ip
 8025b30:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025b34:	b2d2      	uxtb	r2, r2
 8025b36:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025b3a:	b280      	uxth	r0, r0
 8025b3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025b40:	fb1c fc0b 	smulbb	ip, ip, fp
 8025b44:	fa5f fe8e 	uxtb.w	lr, lr
 8025b48:	fb12 fb0b 	smulbb	fp, r2, fp
 8025b4c:	fb01 cc03 	mla	ip, r1, r3, ip
 8025b50:	fb0e bb03 	mla	fp, lr, r3, fp
 8025b54:	1c43      	adds	r3, r0, #1
 8025b56:	fa1f fc8c 	uxth.w	ip, ip
 8025b5a:	fa1f fb8b 	uxth.w	fp, fp
 8025b5e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025b62:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025b66:	f10c 0101 	add.w	r1, ip, #1
 8025b6a:	f10b 0001 	add.w	r0, fp, #1
 8025b6e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025b72:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025b76:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025b7a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025b7e:	4318      	orrs	r0, r3
 8025b80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025b84:	ea40 000c 	orr.w	r0, r0, ip
 8025b88:	f8a8 0000 	strh.w	r0, [r8]
 8025b8c:	e734      	b.n	80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b8e:	f113 0b01 	adds.w	fp, r3, #1
 8025b92:	f53f af31 	bmi.w	80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b96:	45dc      	cmp	ip, fp
 8025b98:	f6ff af2e 	blt.w	80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b9c:	f110 0b01 	adds.w	fp, r0, #1
 8025ba0:	f53f af2a 	bmi.w	80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025ba4:	45de      	cmp	lr, fp
 8025ba6:	f6ff af27 	blt.w	80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025baa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025bac:	9302      	str	r3, [sp, #8]
 8025bae:	fa0f f38e 	sxth.w	r3, lr
 8025bb2:	9301      	str	r3, [sp, #4]
 8025bb4:	fa0f f38c 	sxth.w	r3, ip
 8025bb8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025bbc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025bc0:	9300      	str	r3, [sp, #0]
 8025bc2:	463a      	mov	r2, r7
 8025bc4:	4653      	mov	r3, sl
 8025bc6:	4641      	mov	r1, r8
 8025bc8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025bca:	f7ff fd4d 	bl	8025668 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025bce:	e713      	b.n	80259f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025bd0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025bd2:	1422      	asrs	r2, r4, #16
 8025bd4:	1433      	asrs	r3, r6, #16
 8025bd6:	fb05 2303 	mla	r3, r5, r3, r2
 8025bda:	085a      	lsrs	r2, r3, #1
 8025bdc:	07dd      	lsls	r5, r3, #31
 8025bde:	5cba      	ldrb	r2, [r7, r2]
 8025be0:	bf54      	ite	pl
 8025be2:	f002 020f 	andpl.w	r2, r2, #15
 8025be6:	1112      	asrmi	r2, r2, #4
 8025be8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025bec:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025bf0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025bf4:	b2d2      	uxtb	r2, r2
 8025bf6:	2900      	cmp	r1, #0
 8025bf8:	d076      	beq.n	8025ce8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025bfa:	f103 0e01 	add.w	lr, r3, #1
 8025bfe:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025c02:	f01e 0f01 	tst.w	lr, #1
 8025c06:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c0a:	bf0c      	ite	eq
 8025c0c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025c10:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025c14:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c18:	fa5f f58c 	uxtb.w	r5, ip
 8025c1c:	9512      	str	r5, [sp, #72]	; 0x48
 8025c1e:	b300      	cbz	r0, 8025c62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025c20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c22:	442b      	add	r3, r5
 8025c24:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025c28:	07dd      	lsls	r5, r3, #31
 8025c2a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c2e:	bf54      	ite	pl
 8025c30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025c34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025c38:	3301      	adds	r3, #1
 8025c3a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c3e:	fa5f f58c 	uxtb.w	r5, ip
 8025c42:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025c46:	950c      	str	r5, [sp, #48]	; 0x30
 8025c48:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c4c:	07dd      	lsls	r5, r3, #31
 8025c4e:	bf54      	ite	pl
 8025c50:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025c54:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025c58:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c5c:	fa5f f38c 	uxtb.w	r3, ip
 8025c60:	9313      	str	r3, [sp, #76]	; 0x4c
 8025c62:	b289      	uxth	r1, r1
 8025c64:	b280      	uxth	r0, r0
 8025c66:	fb01 f300 	mul.w	r3, r1, r0
 8025c6a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025c6e:	0109      	lsls	r1, r1, #4
 8025c70:	b280      	uxth	r0, r0
 8025c72:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025c76:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c78:	1ac9      	subs	r1, r1, r3
 8025c7a:	ebac 0c00 	sub.w	ip, ip, r0
 8025c7e:	b289      	uxth	r1, r1
 8025c80:	4369      	muls	r1, r5
 8025c82:	fa1f fc8c 	uxth.w	ip, ip
 8025c86:	fb02 120c 	mla	r2, r2, ip, r1
 8025c8a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025c8c:	fb00 2001 	mla	r0, r0, r1, r2
 8025c90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025c92:	fb03 0302 	mla	r3, r3, r2, r0
 8025c96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025c9a:	b1d3      	cbz	r3, 8025cd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025c9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025c9e:	4353      	muls	r3, r2
 8025ca0:	1c5a      	adds	r2, r3, #1
 8025ca2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025ca6:	4a0f      	ldr	r2, [pc, #60]	; (8025ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025ca8:	121b      	asrs	r3, r3, #8
 8025caa:	6812      	ldr	r2, [r2, #0]
 8025cac:	2bff      	cmp	r3, #255	; 0xff
 8025cae:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025cb2:	d12d      	bne.n	8025d10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025cb4:	0953      	lsrs	r3, r2, #5
 8025cb6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025cba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025cbe:	f02c 0c07 	bic.w	ip, ip, #7
 8025cc2:	ea43 0c0c 	orr.w	ip, r3, ip
 8025cc6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025cca:	ea4c 0202 	orr.w	r2, ip, r2
 8025cce:	f8a8 2000 	strh.w	r2, [r8]
 8025cd2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025cd4:	441c      	add	r4, r3
 8025cd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cd8:	f108 0802 	add.w	r8, r8, #2
 8025cdc:	441e      	add	r6, r3
 8025cde:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025ce2:	e6ba      	b.n	8025a5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025ce4:	20012db4 	.word	0x20012db4
 8025ce8:	2800      	cmp	r0, #0
 8025cea:	d0ba      	beq.n	8025c62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025cec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025cee:	442b      	add	r3, r5
 8025cf0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025cf4:	07db      	lsls	r3, r3, #31
 8025cf6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025cfa:	bf54      	ite	pl
 8025cfc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025d00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025d04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025d08:	fa5f f38c 	uxtb.w	r3, ip
 8025d0c:	930c      	str	r3, [sp, #48]	; 0x30
 8025d0e:	e7a8      	b.n	8025c62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025d10:	f8b8 e000 	ldrh.w	lr, [r8]
 8025d14:	fa1f fa83 	uxth.w	sl, r3
 8025d18:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025d1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025d20:	43db      	mvns	r3, r3
 8025d22:	b2db      	uxtb	r3, r3
 8025d24:	fb11 f10a 	smulbb	r1, r1, sl
 8025d28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025d2c:	fb00 1003 	mla	r0, r0, r3, r1
 8025d30:	b2d2      	uxtb	r2, r2
 8025d32:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025d36:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025d3a:	fa5f fe8e 	uxtb.w	lr, lr
 8025d3e:	fb12 f20a 	smulbb	r2, r2, sl
 8025d42:	fb0e 2203 	mla	r2, lr, r3, r2
 8025d46:	fa5f fc8c 	uxtb.w	ip, ip
 8025d4a:	b280      	uxth	r0, r0
 8025d4c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025d50:	b292      	uxth	r2, r2
 8025d52:	fb1c fc0a 	smulbb	ip, ip, sl
 8025d56:	fb01 cc03 	mla	ip, r1, r3, ip
 8025d5a:	1c43      	adds	r3, r0, #1
 8025d5c:	1c51      	adds	r1, r2, #1
 8025d5e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025d62:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025d66:	fa1f fc8c 	uxth.w	ip, ip
 8025d6a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025d6e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025d72:	4308      	orrs	r0, r1
 8025d74:	f10c 0101 	add.w	r1, ip, #1
 8025d78:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025d7c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025d80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025d84:	ea40 000c 	orr.w	r0, r0, ip
 8025d88:	f8a8 0000 	strh.w	r0, [r8]
 8025d8c:	e7a1      	b.n	8025cd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025d8e:	b017      	add	sp, #92	; 0x5c
 8025d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025d94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025d98:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025d9c:	2d00      	cmp	r5, #0
 8025d9e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025da2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025da6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025daa:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025dae:	fb05 0e03 	mla	lr, r5, r3, r0
 8025db2:	f2c0 80b0 	blt.w	8025f16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025db6:	45a9      	cmp	r9, r5
 8025db8:	f340 80ad 	ble.w	8025f16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025dbc:	2800      	cmp	r0, #0
 8025dbe:	f2c0 80a8 	blt.w	8025f12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025dc2:	4580      	cmp	r8, r0
 8025dc4:	f340 80a5 	ble.w	8025f12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025dc8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025dcc:	f01e 0f01 	tst.w	lr, #1
 8025dd0:	5d16      	ldrb	r6, [r2, r4]
 8025dd2:	bf0c      	ite	eq
 8025dd4:	f006 060f 	andeq.w	r6, r6, #15
 8025dd8:	1136      	asrne	r6, r6, #4
 8025dda:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025dde:	b2f6      	uxtb	r6, r6
 8025de0:	1c44      	adds	r4, r0, #1
 8025de2:	f100 809b 	bmi.w	8025f1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025de6:	45a0      	cmp	r8, r4
 8025de8:	f340 8098 	ble.w	8025f1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025dec:	2f00      	cmp	r7, #0
 8025dee:	f000 8097 	beq.w	8025f20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025df2:	f10e 0a01 	add.w	sl, lr, #1
 8025df6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025dfa:	f01a 0f01 	tst.w	sl, #1
 8025dfe:	5d14      	ldrb	r4, [r2, r4]
 8025e00:	bf0c      	ite	eq
 8025e02:	f004 040f 	andeq.w	r4, r4, #15
 8025e06:	1124      	asrne	r4, r4, #4
 8025e08:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025e0c:	b2e4      	uxtb	r4, r4
 8025e0e:	3501      	adds	r5, #1
 8025e10:	f100 808a 	bmi.w	8025f28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025e14:	45a9      	cmp	r9, r5
 8025e16:	f340 8087 	ble.w	8025f28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025e1a:	f1bc 0f00 	cmp.w	ip, #0
 8025e1e:	f000 8086 	beq.w	8025f2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025e22:	2800      	cmp	r0, #0
 8025e24:	db7e      	blt.n	8025f24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025e26:	4580      	cmp	r8, r0
 8025e28:	dd7c      	ble.n	8025f24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025e2a:	eb03 090e 	add.w	r9, r3, lr
 8025e2e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025e32:	f019 0f01 	tst.w	r9, #1
 8025e36:	5d55      	ldrb	r5, [r2, r5]
 8025e38:	bf0c      	ite	eq
 8025e3a:	f005 050f 	andeq.w	r5, r5, #15
 8025e3e:	112d      	asrne	r5, r5, #4
 8025e40:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025e44:	b2ed      	uxtb	r5, r5
 8025e46:	3001      	adds	r0, #1
 8025e48:	d474      	bmi.n	8025f34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025e4a:	4580      	cmp	r8, r0
 8025e4c:	dd72      	ble.n	8025f34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025e4e:	2f00      	cmp	r7, #0
 8025e50:	d072      	beq.n	8025f38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025e52:	3301      	adds	r3, #1
 8025e54:	449e      	add	lr, r3
 8025e56:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025e5a:	f01e 0f01 	tst.w	lr, #1
 8025e5e:	5cd0      	ldrb	r0, [r2, r3]
 8025e60:	bf0c      	ite	eq
 8025e62:	f000 000f 	andeq.w	r0, r0, #15
 8025e66:	1100      	asrne	r0, r0, #4
 8025e68:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025e6c:	b2c3      	uxtb	r3, r0
 8025e6e:	b2ba      	uxth	r2, r7
 8025e70:	fa1f fc8c 	uxth.w	ip, ip
 8025e74:	fb02 f00c 	mul.w	r0, r2, ip
 8025e78:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025e7c:	0112      	lsls	r2, r2, #4
 8025e7e:	fa1f fc8c 	uxth.w	ip, ip
 8025e82:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025e86:	1a12      	subs	r2, r2, r0
 8025e88:	eba7 070c 	sub.w	r7, r7, ip
 8025e8c:	b292      	uxth	r2, r2
 8025e8e:	b2bf      	uxth	r7, r7
 8025e90:	4362      	muls	r2, r4
 8025e92:	fb06 2207 	mla	r2, r6, r7, r2
 8025e96:	fb0c 2505 	mla	r5, ip, r5, r2
 8025e9a:	fb00 5303 	mla	r3, r0, r3, r5
 8025e9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ea2:	b3a3      	cbz	r3, 8025f0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025ea4:	4a25      	ldr	r2, [pc, #148]	; (8025f3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025ea6:	880e      	ldrh	r6, [r1, #0]
 8025ea8:	6815      	ldr	r5, [r2, #0]
 8025eaa:	1234      	asrs	r4, r6, #8
 8025eac:	b29a      	uxth	r2, r3
 8025eae:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025eb2:	43db      	mvns	r3, r3
 8025eb4:	b2db      	uxtb	r3, r3
 8025eb6:	fb10 f002 	smulbb	r0, r0, r2
 8025eba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025ebe:	fb04 0403 	mla	r4, r4, r3, r0
 8025ec2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025ec6:	10f0      	asrs	r0, r6, #3
 8025ec8:	b2ed      	uxtb	r5, r5
 8025eca:	00f6      	lsls	r6, r6, #3
 8025ecc:	fb17 f702 	smulbb	r7, r7, r2
 8025ed0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025ed4:	fb15 f202 	smulbb	r2, r5, r2
 8025ed8:	b2f6      	uxtb	r6, r6
 8025eda:	b2a4      	uxth	r4, r4
 8025edc:	fb00 7003 	mla	r0, r0, r3, r7
 8025ee0:	fb06 2303 	mla	r3, r6, r3, r2
 8025ee4:	b29a      	uxth	r2, r3
 8025ee6:	1c63      	adds	r3, r4, #1
 8025ee8:	b280      	uxth	r0, r0
 8025eea:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025eee:	1c53      	adds	r3, r2, #1
 8025ef0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025ef4:	1c42      	adds	r2, r0, #1
 8025ef6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025efa:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025efe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025f02:	0940      	lsrs	r0, r0, #5
 8025f04:	4323      	orrs	r3, r4
 8025f06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f0a:	4303      	orrs	r3, r0
 8025f0c:	800b      	strh	r3, [r1, #0]
 8025f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025f12:	2600      	movs	r6, #0
 8025f14:	e764      	b.n	8025de0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025f16:	2400      	movs	r4, #0
 8025f18:	4626      	mov	r6, r4
 8025f1a:	e778      	b.n	8025e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025f1c:	2400      	movs	r4, #0
 8025f1e:	e776      	b.n	8025e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025f20:	463c      	mov	r4, r7
 8025f22:	e774      	b.n	8025e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025f24:	2500      	movs	r5, #0
 8025f26:	e78e      	b.n	8025e46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025f28:	2300      	movs	r3, #0
 8025f2a:	461d      	mov	r5, r3
 8025f2c:	e79f      	b.n	8025e6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f2e:	4663      	mov	r3, ip
 8025f30:	4665      	mov	r5, ip
 8025f32:	e79c      	b.n	8025e6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f34:	2300      	movs	r3, #0
 8025f36:	e79a      	b.n	8025e6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f38:	463b      	mov	r3, r7
 8025f3a:	e798      	b.n	8025e6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025f3c:	20012db4 	.word	0x20012db4

08025f40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f44:	b093      	sub	sp, #76	; 0x4c
 8025f46:	461d      	mov	r5, r3
 8025f48:	920c      	str	r2, [sp, #48]	; 0x30
 8025f4a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025f4c:	9107      	str	r1, [sp, #28]
 8025f4e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025f52:	9011      	str	r0, [sp, #68]	; 0x44
 8025f54:	6850      	ldr	r0, [r2, #4]
 8025f56:	6812      	ldr	r2, [r2, #0]
 8025f58:	fb00 1303 	mla	r3, r0, r3, r1
 8025f5c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025f60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f62:	689b      	ldr	r3, [r3, #8]
 8025f64:	3301      	adds	r3, #1
 8025f66:	f023 0301 	bic.w	r3, r3, #1
 8025f6a:	9306      	str	r3, [sp, #24]
 8025f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f6e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025f72:	681f      	ldr	r7, [r3, #0]
 8025f74:	9b07      	ldr	r3, [sp, #28]
 8025f76:	2b00      	cmp	r3, #0
 8025f78:	dc03      	bgt.n	8025f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025f7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025f7c:	2b00      	cmp	r3, #0
 8025f7e:	f340 8267 	ble.w	8026450 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025f82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025f88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025f8c:	1e48      	subs	r0, r1, #1
 8025f8e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025f92:	2d00      	cmp	r5, #0
 8025f94:	f340 80b8 	ble.w	8026108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025f98:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025f9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025fa0:	d406      	bmi.n	8025fb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025fa2:	4586      	cmp	lr, r0
 8025fa4:	da04      	bge.n	8025fb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025fa6:	2b00      	cmp	r3, #0
 8025fa8:	db02      	blt.n	8025fb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025faa:	4563      	cmp	r3, ip
 8025fac:	f2c0 80ad 	blt.w	802610a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025fb0:	f11e 0e01 	adds.w	lr, lr, #1
 8025fb4:	f100 80a0 	bmi.w	80260f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fb8:	4571      	cmp	r1, lr
 8025fba:	f2c0 809d 	blt.w	80260f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fbe:	3301      	adds	r3, #1
 8025fc0:	f100 809a 	bmi.w	80260f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fc4:	429a      	cmp	r2, r3
 8025fc6:	f2c0 8097 	blt.w	80260f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025fca:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025fce:	9509      	str	r5, [sp, #36]	; 0x24
 8025fd0:	46c8      	mov	r8, r9
 8025fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025fd4:	2b00      	cmp	r3, #0
 8025fd6:	f340 80b6 	ble.w	8026146 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025fda:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025fde:	9308      	str	r3, [sp, #32]
 8025fe0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025fe2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025fe6:	1423      	asrs	r3, r4, #16
 8025fe8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025fec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025ff0:	f100 813e 	bmi.w	8026270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025ff4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025ff8:	455b      	cmp	r3, fp
 8025ffa:	f280 8139 	bge.w	8026270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025ffe:	2800      	cmp	r0, #0
 8026000:	f2c0 8136 	blt.w	8026270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026004:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026008:	4558      	cmp	r0, fp
 802600a:	f280 8131 	bge.w	8026270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802600e:	9a06      	ldr	r2, [sp, #24]
 8026010:	fb00 3302 	mla	r3, r0, r2, r3
 8026014:	0858      	lsrs	r0, r3, #1
 8026016:	07da      	lsls	r2, r3, #31
 8026018:	f817 c000 	ldrb.w	ip, [r7, r0]
 802601c:	9a08      	ldr	r2, [sp, #32]
 802601e:	bf54      	ite	pl
 8026020:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026024:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026028:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802602c:	fa5f fc8c 	uxtb.w	ip, ip
 8026030:	2a00      	cmp	r2, #0
 8026032:	f000 80cb 	beq.w	80261cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026036:	1c58      	adds	r0, r3, #1
 8026038:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802603c:	07c0      	lsls	r0, r0, #31
 802603e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026042:	bf54      	ite	pl
 8026044:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026048:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802604c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026050:	fa5f fe8e 	uxtb.w	lr, lr
 8026054:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026058:	b1b9      	cbz	r1, 802608a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802605a:	4453      	add	r3, sl
 802605c:	0858      	lsrs	r0, r3, #1
 802605e:	07da      	lsls	r2, r3, #31
 8026060:	5c38      	ldrb	r0, [r7, r0]
 8026062:	bf54      	ite	pl
 8026064:	f000 000f 	andpl.w	r0, r0, #15
 8026068:	1100      	asrmi	r0, r0, #4
 802606a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802606e:	b2c0      	uxtb	r0, r0
 8026070:	900a      	str	r0, [sp, #40]	; 0x28
 8026072:	1c58      	adds	r0, r3, #1
 8026074:	0843      	lsrs	r3, r0, #1
 8026076:	07c2      	lsls	r2, r0, #31
 8026078:	5cfb      	ldrb	r3, [r7, r3]
 802607a:	bf54      	ite	pl
 802607c:	f003 030f 	andpl.w	r3, r3, #15
 8026080:	111b      	asrmi	r3, r3, #4
 8026082:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026086:	b2db      	uxtb	r3, r3
 8026088:	930e      	str	r3, [sp, #56]	; 0x38
 802608a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802608e:	b289      	uxth	r1, r1
 8026090:	fb02 f301 	mul.w	r3, r2, r1
 8026094:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026098:	0112      	lsls	r2, r2, #4
 802609a:	b289      	uxth	r1, r1
 802609c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80260a0:	1a40      	subs	r0, r0, r1
 80260a2:	fa1f fe80 	uxth.w	lr, r0
 80260a6:	1ad2      	subs	r2, r2, r3
 80260a8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80260aa:	b292      	uxth	r2, r2
 80260ac:	4342      	muls	r2, r0
 80260ae:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80260b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80260b4:	fb01 c102 	mla	r1, r1, r2, ip
 80260b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80260ba:	fb03 1302 	mla	r3, r3, r2, r1
 80260be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80260c2:	2bff      	cmp	r3, #255	; 0xff
 80260c4:	f040 8093 	bne.w	80261ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80260c8:	4bbe      	ldr	r3, [pc, #760]	; (80263c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80260ca:	681a      	ldr	r2, [r3, #0]
 80260cc:	4bbe      	ldr	r3, [pc, #760]	; (80263c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80260ce:	0951      	lsrs	r1, r2, #5
 80260d0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80260d4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80260d8:	430b      	orrs	r3, r1
 80260da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80260de:	4313      	orrs	r3, r2
 80260e0:	f8a8 3000 	strh.w	r3, [r8]
 80260e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80260e6:	441c      	add	r4, r3
 80260e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260ea:	441e      	add	r6, r3
 80260ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260ee:	3b01      	subs	r3, #1
 80260f0:	f108 0802 	add.w	r8, r8, #2
 80260f4:	9309      	str	r3, [sp, #36]	; 0x24
 80260f6:	e76c      	b.n	8025fd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80260f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80260fa:	441c      	add	r4, r3
 80260fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260fe:	3d01      	subs	r5, #1
 8026100:	441e      	add	r6, r3
 8026102:	f109 0902 	add.w	r9, r9, #2
 8026106:	e744      	b.n	8025f92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026108:	d021      	beq.n	802614e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802610a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802610c:	1e6b      	subs	r3, r5, #1
 802610e:	fb00 4003 	mla	r0, r0, r3, r4
 8026112:	1400      	asrs	r0, r0, #16
 8026114:	f53f af59 	bmi.w	8025fca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026118:	3901      	subs	r1, #1
 802611a:	4288      	cmp	r0, r1
 802611c:	f6bf af55 	bge.w	8025fca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026120:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026122:	fb01 6303 	mla	r3, r1, r3, r6
 8026126:	141b      	asrs	r3, r3, #16
 8026128:	f53f af4f 	bmi.w	8025fca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802612c:	3a01      	subs	r2, #1
 802612e:	4293      	cmp	r3, r2
 8026130:	f6bf af4b 	bge.w	8025fca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026134:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026138:	9308      	str	r3, [sp, #32]
 802613a:	46a8      	mov	r8, r5
 802613c:	46ce      	mov	lr, r9
 802613e:	f1b8 0f00 	cmp.w	r8, #0
 8026142:	f300 80b5 	bgt.w	80262b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026146:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802614a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802614e:	9b07      	ldr	r3, [sp, #28]
 8026150:	2b00      	cmp	r3, #0
 8026152:	f340 817d 	ble.w	8026450 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026156:	ee30 0a04 	vadd.f32	s0, s0, s8
 802615a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802615e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026162:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026164:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026168:	ee31 1a05 	vadd.f32	s2, s2, s10
 802616c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026170:	eef0 6a62 	vmov.f32	s13, s5
 8026174:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026178:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802617c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026180:	ee16 4a90 	vmov	r4, s13
 8026184:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026188:	eef0 6a43 	vmov.f32	s13, s6
 802618c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026190:	ee12 2a90 	vmov	r2, s5
 8026194:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026198:	fb92 f3f3 	sdiv	r3, r2, r3
 802619c:	ee13 2a10 	vmov	r2, s6
 80261a0:	931f      	str	r3, [sp, #124]	; 0x7c
 80261a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80261a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80261a8:	9320      	str	r3, [sp, #128]	; 0x80
 80261aa:	9b07      	ldr	r3, [sp, #28]
 80261ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80261ae:	3b01      	subs	r3, #1
 80261b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80261b4:	9307      	str	r3, [sp, #28]
 80261b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80261b8:	ee16 6a90 	vmov	r6, s13
 80261bc:	bf14      	ite	ne
 80261be:	461d      	movne	r5, r3
 80261c0:	4615      	moveq	r5, r2
 80261c2:	eeb0 3a67 	vmov.f32	s6, s15
 80261c6:	eef0 2a47 	vmov.f32	s5, s14
 80261ca:	e6d3      	b.n	8025f74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80261cc:	2900      	cmp	r1, #0
 80261ce:	f43f af5c 	beq.w	802608a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80261d2:	eb0a 0003 	add.w	r0, sl, r3
 80261d6:	0843      	lsrs	r3, r0, #1
 80261d8:	07c0      	lsls	r0, r0, #31
 80261da:	5cfb      	ldrb	r3, [r7, r3]
 80261dc:	bf54      	ite	pl
 80261de:	f003 030f 	andpl.w	r3, r3, #15
 80261e2:	111b      	asrmi	r3, r3, #4
 80261e4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80261e8:	b2db      	uxtb	r3, r3
 80261ea:	930a      	str	r3, [sp, #40]	; 0x28
 80261ec:	e74d      	b.n	802608a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80261ee:	2b00      	cmp	r3, #0
 80261f0:	f43f af78 	beq.w	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261f4:	4a73      	ldr	r2, [pc, #460]	; (80263c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80261f6:	f8b8 c000 	ldrh.w	ip, [r8]
 80261fa:	6810      	ldr	r0, [r2, #0]
 80261fc:	fa1f fe83 	uxth.w	lr, r3
 8026200:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026204:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026208:	43db      	mvns	r3, r3
 802620a:	b2db      	uxtb	r3, r3
 802620c:	fb12 f20e 	smulbb	r2, r2, lr
 8026210:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026214:	fb01 2103 	mla	r1, r1, r3, r2
 8026218:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802621c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026220:	b2c0      	uxtb	r0, r0
 8026222:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026226:	fb1b fb0e 	smulbb	fp, fp, lr
 802622a:	b289      	uxth	r1, r1
 802622c:	fb10 fe0e 	smulbb	lr, r0, lr
 8026230:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026234:	fa5f fc8c 	uxtb.w	ip, ip
 8026238:	fb02 b203 	mla	r2, r2, r3, fp
 802623c:	1c48      	adds	r0, r1, #1
 802623e:	fb0c e303 	mla	r3, ip, r3, lr
 8026242:	b292      	uxth	r2, r2
 8026244:	b29b      	uxth	r3, r3
 8026246:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802624a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802624e:	f102 0b01 	add.w	fp, r2, #1
 8026252:	1c59      	adds	r1, r3, #1
 8026254:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026258:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802625c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026260:	0952      	lsrs	r2, r2, #5
 8026262:	4301      	orrs	r1, r0
 8026264:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026268:	4311      	orrs	r1, r2
 802626a:	f8a8 1000 	strh.w	r1, [r8]
 802626e:	e739      	b.n	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026270:	f113 0b01 	adds.w	fp, r3, #1
 8026274:	f53f af36 	bmi.w	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026278:	45dc      	cmp	ip, fp
 802627a:	f6ff af33 	blt.w	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802627e:	f110 0b01 	adds.w	fp, r0, #1
 8026282:	f53f af2f 	bmi.w	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026286:	45de      	cmp	lr, fp
 8026288:	f6ff af2c 	blt.w	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802628c:	9a08      	ldr	r2, [sp, #32]
 802628e:	9302      	str	r3, [sp, #8]
 8026290:	fa0f f38e 	sxth.w	r3, lr
 8026294:	9301      	str	r3, [sp, #4]
 8026296:	fa0f f38c 	sxth.w	r3, ip
 802629a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802629e:	9105      	str	r1, [sp, #20]
 80262a0:	9300      	str	r3, [sp, #0]
 80262a2:	463a      	mov	r2, r7
 80262a4:	4653      	mov	r3, sl
 80262a6:	4641      	mov	r1, r8
 80262a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80262aa:	f7ff fd73 	bl	8025d94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80262ae:	e719      	b.n	80260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80262b0:	9906      	ldr	r1, [sp, #24]
 80262b2:	1422      	asrs	r2, r4, #16
 80262b4:	1433      	asrs	r3, r6, #16
 80262b6:	fb01 2303 	mla	r3, r1, r3, r2
 80262ba:	085a      	lsrs	r2, r3, #1
 80262bc:	07d9      	lsls	r1, r3, #31
 80262be:	5cba      	ldrb	r2, [r7, r2]
 80262c0:	bf54      	ite	pl
 80262c2:	f002 020f 	andpl.w	r2, r2, #15
 80262c6:	1112      	asrmi	r2, r2, #4
 80262c8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80262cc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80262d0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80262d4:	b2d2      	uxtb	r2, r2
 80262d6:	2800      	cmp	r0, #0
 80262d8:	d062      	beq.n	80263a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80262da:	f103 0a01 	add.w	sl, r3, #1
 80262de:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80262e2:	f01a 0f01 	tst.w	sl, #1
 80262e6:	5c79      	ldrb	r1, [r7, r1]
 80262e8:	bf0c      	ite	eq
 80262ea:	f001 010f 	andeq.w	r1, r1, #15
 80262ee:	1109      	asrne	r1, r1, #4
 80262f0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80262f4:	b2c9      	uxtb	r1, r1
 80262f6:	910f      	str	r1, [sp, #60]	; 0x3c
 80262f8:	f1bc 0f00 	cmp.w	ip, #0
 80262fc:	d019      	beq.n	8026332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80262fe:	9908      	ldr	r1, [sp, #32]
 8026300:	440b      	add	r3, r1
 8026302:	0859      	lsrs	r1, r3, #1
 8026304:	f013 0f01 	tst.w	r3, #1
 8026308:	5c79      	ldrb	r1, [r7, r1]
 802630a:	bf0c      	ite	eq
 802630c:	f001 010f 	andeq.w	r1, r1, #15
 8026310:	1109      	asrne	r1, r1, #4
 8026312:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026316:	b2c9      	uxtb	r1, r1
 8026318:	3301      	adds	r3, #1
 802631a:	910b      	str	r1, [sp, #44]	; 0x2c
 802631c:	0859      	lsrs	r1, r3, #1
 802631e:	07db      	lsls	r3, r3, #31
 8026320:	5c79      	ldrb	r1, [r7, r1]
 8026322:	bf54      	ite	pl
 8026324:	f001 010f 	andpl.w	r1, r1, #15
 8026328:	1109      	asrmi	r1, r1, #4
 802632a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802632e:	b2c9      	uxtb	r1, r1
 8026330:	9110      	str	r1, [sp, #64]	; 0x40
 8026332:	b280      	uxth	r0, r0
 8026334:	fa1f fc8c 	uxth.w	ip, ip
 8026338:	fb00 f30c 	mul.w	r3, r0, ip
 802633c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026340:	0100      	lsls	r0, r0, #4
 8026342:	fa1f fc8c 	uxth.w	ip, ip
 8026346:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802634a:	eba1 010c 	sub.w	r1, r1, ip
 802634e:	fa1f fa81 	uxth.w	sl, r1
 8026352:	1ac0      	subs	r0, r0, r3
 8026354:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026356:	b280      	uxth	r0, r0
 8026358:	4348      	muls	r0, r1
 802635a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802635c:	fb02 020a 	mla	r2, r2, sl, r0
 8026360:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026364:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026366:	fb03 c302 	mla	r3, r3, r2, ip
 802636a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802636e:	2bff      	cmp	r3, #255	; 0xff
 8026370:	d12c      	bne.n	80263cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026372:	4b14      	ldr	r3, [pc, #80]	; (80263c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026374:	681a      	ldr	r2, [r3, #0]
 8026376:	4b14      	ldr	r3, [pc, #80]	; (80263c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026378:	0951      	lsrs	r1, r2, #5
 802637a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802637e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026382:	430b      	orrs	r3, r1
 8026384:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026388:	4313      	orrs	r3, r2
 802638a:	f8ae 3000 	strh.w	r3, [lr]
 802638e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026390:	441c      	add	r4, r3
 8026392:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026394:	f10e 0e02 	add.w	lr, lr, #2
 8026398:	441e      	add	r6, r3
 802639a:	f108 38ff 	add.w	r8, r8, #4294967295
 802639e:	e6ce      	b.n	802613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80263a0:	f1bc 0f00 	cmp.w	ip, #0
 80263a4:	d0c5      	beq.n	8026332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80263a6:	9908      	ldr	r1, [sp, #32]
 80263a8:	440b      	add	r3, r1
 80263aa:	0859      	lsrs	r1, r3, #1
 80263ac:	07db      	lsls	r3, r3, #31
 80263ae:	5c79      	ldrb	r1, [r7, r1]
 80263b0:	bf54      	ite	pl
 80263b2:	f001 010f 	andpl.w	r1, r1, #15
 80263b6:	1109      	asrmi	r1, r1, #4
 80263b8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80263bc:	b2c9      	uxtb	r1, r1
 80263be:	910b      	str	r1, [sp, #44]	; 0x2c
 80263c0:	e7b7      	b.n	8026332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80263c2:	bf00      	nop
 80263c4:	20012db4 	.word	0x20012db4
 80263c8:	fffff800 	.word	0xfffff800
 80263cc:	2b00      	cmp	r3, #0
 80263ce:	d0de      	beq.n	802638e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80263d0:	4a21      	ldr	r2, [pc, #132]	; (8026458 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80263d2:	f8be c000 	ldrh.w	ip, [lr]
 80263d6:	6810      	ldr	r0, [r2, #0]
 80263d8:	fa1f fa83 	uxth.w	sl, r3
 80263dc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80263e0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80263e4:	43db      	mvns	r3, r3
 80263e6:	b2db      	uxtb	r3, r3
 80263e8:	fb12 f20a 	smulbb	r2, r2, sl
 80263ec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80263f0:	fb01 2103 	mla	r1, r1, r3, r2
 80263f4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80263f8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80263fc:	b2c0      	uxtb	r0, r0
 80263fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026402:	fa5f fc8c 	uxtb.w	ip, ip
 8026406:	fb10 f00a 	smulbb	r0, r0, sl
 802640a:	fb0c 0003 	mla	r0, ip, r3, r0
 802640e:	b289      	uxth	r1, r1
 8026410:	fb1b fb0a 	smulbb	fp, fp, sl
 8026414:	b280      	uxth	r0, r0
 8026416:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802641a:	fb02 b203 	mla	r2, r2, r3, fp
 802641e:	1c4b      	adds	r3, r1, #1
 8026420:	f100 0b01 	add.w	fp, r0, #1
 8026424:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026428:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802642c:	b292      	uxth	r2, r2
 802642e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026432:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026436:	ea4b 0101 	orr.w	r1, fp, r1
 802643a:	f102 0b01 	add.w	fp, r2, #1
 802643e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026442:	0952      	lsrs	r2, r2, #5
 8026444:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026448:	4311      	orrs	r1, r2
 802644a:	f8ae 1000 	strh.w	r1, [lr]
 802644e:	e79e      	b.n	802638e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026450:	b013      	add	sp, #76	; 0x4c
 8026452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026456:	bf00      	nop
 8026458:	20012db4 	.word	0x20012db4

0802645c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802645c:	b570      	push	{r4, r5, r6, lr}
 802645e:	1208      	asrs	r0, r1, #8
 8026460:	b29e      	uxth	r6, r3
 8026462:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026466:	1213      	asrs	r3, r2, #8
 8026468:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802646c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026470:	fb13 f305 	smulbb	r3, r3, r5
 8026474:	fb10 f006 	smulbb	r0, r0, r6
 8026478:	4418      	add	r0, r3
 802647a:	10cc      	asrs	r4, r1, #3
 802647c:	10d3      	asrs	r3, r2, #3
 802647e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026482:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026486:	fb13 f305 	smulbb	r3, r3, r5
 802648a:	fb14 f406 	smulbb	r4, r4, r6
 802648e:	00c9      	lsls	r1, r1, #3
 8026490:	00d2      	lsls	r2, r2, #3
 8026492:	441c      	add	r4, r3
 8026494:	b2d2      	uxtb	r2, r2
 8026496:	b2cb      	uxtb	r3, r1
 8026498:	fb12 f205 	smulbb	r2, r2, r5
 802649c:	b280      	uxth	r0, r0
 802649e:	fb13 f306 	smulbb	r3, r3, r6
 80264a2:	4413      	add	r3, r2
 80264a4:	1c42      	adds	r2, r0, #1
 80264a6:	b29b      	uxth	r3, r3
 80264a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80264ac:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80264b0:	1c58      	adds	r0, r3, #1
 80264b2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80264b6:	b2a4      	uxth	r4, r4
 80264b8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80264bc:	4310      	orrs	r0, r2
 80264be:	1c62      	adds	r2, r4, #1
 80264c0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80264c4:	0964      	lsrs	r4, r4, #5
 80264c6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80264ca:	4320      	orrs	r0, r4
 80264cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080264d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80264d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80264d4:	b08f      	sub	sp, #60	; 0x3c
 80264d6:	461c      	mov	r4, r3
 80264d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80264dc:	9004      	str	r0, [sp, #16]
 80264de:	460d      	mov	r5, r1
 80264e0:	4616      	mov	r6, r2
 80264e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80264e4:	2f00      	cmp	r7, #0
 80264e6:	f000 80f6 	beq.w	80266d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80264ea:	6820      	ldr	r0, [r4, #0]
 80264ec:	6861      	ldr	r1, [r4, #4]
 80264ee:	aa0a      	add	r2, sp, #40	; 0x28
 80264f0:	c203      	stmia	r2!, {r0, r1}
 80264f2:	6818      	ldr	r0, [r3, #0]
 80264f4:	6859      	ldr	r1, [r3, #4]
 80264f6:	aa0c      	add	r2, sp, #48	; 0x30
 80264f8:	c203      	stmia	r2!, {r0, r1}
 80264fa:	a80a      	add	r0, sp, #40	; 0x28
 80264fc:	f7ef fa9c 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026500:	4621      	mov	r1, r4
 8026502:	a80c      	add	r0, sp, #48	; 0x30
 8026504:	f7ef fadc 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026508:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802650c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026510:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026514:	f002 0301 	and.w	r3, r2, #1
 8026518:	9306      	str	r3, [sp, #24]
 802651a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802651e:	f003 0101 	and.w	r1, r3, #1
 8026522:	9105      	str	r1, [sp, #20]
 8026524:	9805      	ldr	r0, [sp, #20]
 8026526:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802652a:	4403      	add	r3, r0
 802652c:	fb01 2303 	mla	r3, r1, r3, r2
 8026530:	f04f 0802 	mov.w	r8, #2
 8026534:	fb93 f3f8 	sdiv	r3, r3, r8
 8026538:	441d      	add	r5, r3
 802653a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802653e:	441a      	add	r2, r3
 8026540:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026544:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026548:	4419      	add	r1, r3
 802654a:	4b64      	ldr	r3, [pc, #400]	; (80266dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802654c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026550:	6818      	ldr	r0, [r3, #0]
 8026552:	6803      	ldr	r3, [r0, #0]
 8026554:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026556:	4798      	blx	r3
 8026558:	4a61      	ldr	r2, [pc, #388]	; (80266e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802655a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802655e:	8813      	ldrh	r3, [r2, #0]
 8026560:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026564:	2fff      	cmp	r7, #255	; 0xff
 8026566:	fb03 a404 	mla	r4, r3, r4, sl
 802656a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802656e:	f106 0604 	add.w	r6, r6, #4
 8026572:	4611      	mov	r1, r2
 8026574:	fb03 fb0b 	mul.w	fp, r3, fp
 8026578:	d06b      	beq.n	8026652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802657a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802657e:	9303      	str	r3, [sp, #12]
 8026580:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026584:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026588:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802658c:	9b07      	ldr	r3, [sp, #28]
 802658e:	42a3      	cmp	r3, r4
 8026590:	f240 809c 	bls.w	80266cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026594:	9b06      	ldr	r3, [sp, #24]
 8026596:	2b00      	cmp	r3, #0
 8026598:	d039      	beq.n	802660e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802659a:	782b      	ldrb	r3, [r5, #0]
 802659c:	8822      	ldrh	r2, [r4, #0]
 802659e:	9804      	ldr	r0, [sp, #16]
 80265a0:	f003 030f 	and.w	r3, r3, #15
 80265a4:	f105 0801 	add.w	r8, r5, #1
 80265a8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80265ac:	9b03      	ldr	r3, [sp, #12]
 80265ae:	9300      	str	r3, [sp, #0]
 80265b0:	463b      	mov	r3, r7
 80265b2:	f7ff ff53 	bl	802645c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80265b6:	f824 0b02 	strh.w	r0, [r4], #2
 80265ba:	f109 3bff 	add.w	fp, r9, #4294967295
 80265be:	f1bb 0f01 	cmp.w	fp, #1
 80265c2:	46a2      	mov	sl, r4
 80265c4:	f104 0404 	add.w	r4, r4, #4
 80265c8:	dd24      	ble.n	8026614 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80265ca:	f898 3000 	ldrb.w	r3, [r8]
 80265ce:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80265d2:	9804      	ldr	r0, [sp, #16]
 80265d4:	091b      	lsrs	r3, r3, #4
 80265d6:	f1ab 0b02 	sub.w	fp, fp, #2
 80265da:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80265de:	9b03      	ldr	r3, [sp, #12]
 80265e0:	9300      	str	r3, [sp, #0]
 80265e2:	463b      	mov	r3, r7
 80265e4:	f7ff ff3a 	bl	802645c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80265e8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80265ec:	f818 3b01 	ldrb.w	r3, [r8], #1
 80265f0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80265f4:	9804      	ldr	r0, [sp, #16]
 80265f6:	f003 030f 	and.w	r3, r3, #15
 80265fa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80265fe:	9b03      	ldr	r3, [sp, #12]
 8026600:	9300      	str	r3, [sp, #0]
 8026602:	463b      	mov	r3, r7
 8026604:	f7ff ff2a 	bl	802645c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026608:	f824 0c02 	strh.w	r0, [r4, #-2]
 802660c:	e7d7      	b.n	80265be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802660e:	46a8      	mov	r8, r5
 8026610:	46cb      	mov	fp, r9
 8026612:	e7d4      	b.n	80265be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026614:	d10e      	bne.n	8026634 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026616:	f898 3000 	ldrb.w	r3, [r8]
 802661a:	f8ba 2000 	ldrh.w	r2, [sl]
 802661e:	9804      	ldr	r0, [sp, #16]
 8026620:	091b      	lsrs	r3, r3, #4
 8026622:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026626:	9b03      	ldr	r3, [sp, #12]
 8026628:	9300      	str	r3, [sp, #0]
 802662a:	463b      	mov	r3, r7
 802662c:	f7ff ff16 	bl	802645c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026630:	f82a 0b02 	strh.w	r0, [sl], #2
 8026634:	9b08      	ldr	r3, [sp, #32]
 8026636:	9a05      	ldr	r2, [sp, #20]
 8026638:	881c      	ldrh	r4, [r3, #0]
 802663a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802663e:	eba4 0409 	sub.w	r4, r4, r9
 8026642:	4413      	add	r3, r2
 8026644:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026648:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802664a:	fb93 f3f2 	sdiv	r3, r3, r2
 802664e:	441d      	add	r5, r3
 8026650:	e79c      	b.n	802658c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8026652:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026656:	45a3      	cmp	fp, r4
 8026658:	d938      	bls.n	80266cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802665a:	9b06      	ldr	r3, [sp, #24]
 802665c:	b1f3      	cbz	r3, 802669c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802665e:	782b      	ldrb	r3, [r5, #0]
 8026660:	f003 030f 	and.w	r3, r3, #15
 8026664:	1c6a      	adds	r2, r5, #1
 8026666:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802666a:	8023      	strh	r3, [r4, #0]
 802666c:	f109 30ff 	add.w	r0, r9, #4294967295
 8026670:	3402      	adds	r4, #2
 8026672:	2801      	cmp	r0, #1
 8026674:	4623      	mov	r3, r4
 8026676:	f104 0404 	add.w	r4, r4, #4
 802667a:	dd12      	ble.n	80266a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802667c:	7813      	ldrb	r3, [r2, #0]
 802667e:	091b      	lsrs	r3, r3, #4
 8026680:	3802      	subs	r0, #2
 8026682:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026686:	f824 3c04 	strh.w	r3, [r4, #-4]
 802668a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802668e:	f003 030f 	and.w	r3, r3, #15
 8026692:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026696:	f824 3c02 	strh.w	r3, [r4, #-2]
 802669a:	e7ea      	b.n	8026672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802669c:	462a      	mov	r2, r5
 802669e:	4648      	mov	r0, r9
 80266a0:	e7e7      	b.n	8026672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80266a2:	d106      	bne.n	80266b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80266a4:	7812      	ldrb	r2, [r2, #0]
 80266a6:	0912      	lsrs	r2, r2, #4
 80266a8:	3302      	adds	r3, #2
 80266aa:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80266ae:	f823 2c02 	strh.w	r2, [r3, #-2]
 80266b2:	880c      	ldrh	r4, [r1, #0]
 80266b4:	9a05      	ldr	r2, [sp, #20]
 80266b6:	eba4 0409 	sub.w	r4, r4, r9
 80266ba:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80266be:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80266c2:	4413      	add	r3, r2
 80266c4:	fb93 f3f8 	sdiv	r3, r3, r8
 80266c8:	441d      	add	r5, r3
 80266ca:	e7c4      	b.n	8026656 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80266cc:	4b03      	ldr	r3, [pc, #12]	; (80266dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80266ce:	6818      	ldr	r0, [r3, #0]
 80266d0:	6803      	ldr	r3, [r0, #0]
 80266d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80266d4:	4798      	blx	r3
 80266d6:	b00f      	add	sp, #60	; 0x3c
 80266d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266dc:	20012da4 	.word	0x20012da4
 80266e0:	20012d9e 	.word	0x20012d9e

080266e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80266e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80266e6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80266ea:	2dff      	cmp	r5, #255	; 0xff
 80266ec:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80266f0:	d10c      	bne.n	802670c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80266f2:	2bff      	cmp	r3, #255	; 0xff
 80266f4:	d10a      	bne.n	802670c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80266f6:	4b25      	ldr	r3, [pc, #148]	; (802678c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80266f8:	0948      	lsrs	r0, r1, #5
 80266fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80266fe:	403b      	ands	r3, r7
 8026700:	4318      	orrs	r0, r3
 8026702:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026706:	4308      	orrs	r0, r1
 8026708:	b280      	uxth	r0, r0
 802670a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802670c:	fb15 f503 	smulbb	r5, r5, r3
 8026710:	b2ab      	uxth	r3, r5
 8026712:	1c5d      	adds	r5, r3, #1
 8026714:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026718:	1214      	asrs	r4, r2, #8
 802671a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802671e:	fa1f fc85 	uxth.w	ip, r5
 8026722:	10d6      	asrs	r6, r2, #3
 8026724:	00d0      	lsls	r0, r2, #3
 8026726:	43ed      	mvns	r5, r5
 8026728:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802672c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026730:	b2eb      	uxtb	r3, r5
 8026732:	b2c0      	uxtb	r0, r0
 8026734:	fb12 f20c 	smulbb	r2, r2, ip
 8026738:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802673c:	fb04 2403 	mla	r4, r4, r3, r2
 8026740:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026744:	b2c8      	uxtb	r0, r1
 8026746:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802674a:	b2fd      	uxtb	r5, r7
 802674c:	fb10 f00c 	smulbb	r0, r0, ip
 8026750:	b2a4      	uxth	r4, r4
 8026752:	fb02 0003 	mla	r0, r2, r3, r0
 8026756:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802675a:	fb15 f50c 	smulbb	r5, r5, ip
 802675e:	fb06 5503 	mla	r5, r6, r3, r5
 8026762:	b283      	uxth	r3, r0
 8026764:	1c60      	adds	r0, r4, #1
 8026766:	b2ad      	uxth	r5, r5
 8026768:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802676c:	1c58      	adds	r0, r3, #1
 802676e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026772:	1c6b      	adds	r3, r5, #1
 8026774:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026778:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802677c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026780:	096d      	lsrs	r5, r5, #5
 8026782:	4320      	orrs	r0, r4
 8026784:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026788:	4328      	orrs	r0, r5
 802678a:	e7be      	b.n	802670a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802678c:	00fff800 	.word	0x00fff800

08026790 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026794:	461c      	mov	r4, r3
 8026796:	b08d      	sub	sp, #52	; 0x34
 8026798:	460d      	mov	r5, r1
 802679a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802679c:	6861      	ldr	r1, [r4, #4]
 802679e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80267a2:	4680      	mov	r8, r0
 80267a4:	6820      	ldr	r0, [r4, #0]
 80267a6:	4616      	mov	r6, r2
 80267a8:	aa08      	add	r2, sp, #32
 80267aa:	c203      	stmia	r2!, {r0, r1}
 80267ac:	6818      	ldr	r0, [r3, #0]
 80267ae:	6859      	ldr	r1, [r3, #4]
 80267b0:	aa0a      	add	r2, sp, #40	; 0x28
 80267b2:	c203      	stmia	r2!, {r0, r1}
 80267b4:	a808      	add	r0, sp, #32
 80267b6:	f7ef f93f 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80267ba:	4621      	mov	r1, r4
 80267bc:	a80a      	add	r0, sp, #40	; 0x28
 80267be:	f7ef f97f 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80267c2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80267c6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80267ca:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80267ce:	f002 0301 	and.w	r3, r2, #1
 80267d2:	9303      	str	r3, [sp, #12]
 80267d4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80267d8:	f003 0101 	and.w	r1, r3, #1
 80267dc:	9102      	str	r1, [sp, #8]
 80267de:	9802      	ldr	r0, [sp, #8]
 80267e0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80267e4:	4403      	add	r3, r0
 80267e6:	fb01 2303 	mla	r3, r1, r3, r2
 80267ea:	f04f 0a02 	mov.w	sl, #2
 80267ee:	fb93 f3fa 	sdiv	r3, r3, sl
 80267f2:	441d      	add	r5, r3
 80267f4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80267f8:	441a      	add	r2, r3
 80267fa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80267fe:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8026802:	4a3f      	ldr	r2, [pc, #252]	; (8026900 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026804:	9205      	str	r2, [sp, #20]
 8026806:	4419      	add	r1, r3
 8026808:	6810      	ldr	r0, [r2, #0]
 802680a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802680e:	6803      	ldr	r3, [r0, #0]
 8026810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026812:	4798      	blx	r3
 8026814:	4b3b      	ldr	r3, [pc, #236]	; (8026904 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026816:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802681a:	8819      	ldrh	r1, [r3, #0]
 802681c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026820:	fb01 c404 	mla	r4, r1, r4, ip
 8026824:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026828:	434f      	muls	r7, r1
 802682a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802682e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026832:	3604      	adds	r6, #4
 8026834:	9204      	str	r2, [sp, #16]
 8026836:	9b04      	ldr	r3, [sp, #16]
 8026838:	429c      	cmp	r4, r3
 802683a:	d258      	bcs.n	80268ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802683c:	9b03      	ldr	r3, [sp, #12]
 802683e:	2b00      	cmp	r3, #0
 8026840:	d034      	beq.n	80268ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026842:	782b      	ldrb	r3, [r5, #0]
 8026844:	f003 030f 	and.w	r3, r3, #15
 8026848:	1c6f      	adds	r7, r5, #1
 802684a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802684e:	0e0b      	lsrs	r3, r1, #24
 8026850:	d006      	beq.n	8026860 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026852:	8822      	ldrh	r2, [r4, #0]
 8026854:	9300      	str	r3, [sp, #0]
 8026856:	4640      	mov	r0, r8
 8026858:	464b      	mov	r3, r9
 802685a:	f7ff ff43 	bl	80266e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802685e:	8020      	strh	r0, [r4, #0]
 8026860:	3402      	adds	r4, #2
 8026862:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026866:	f1ba 0f01 	cmp.w	sl, #1
 802686a:	dd22      	ble.n	80268b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802686c:	783b      	ldrb	r3, [r7, #0]
 802686e:	091b      	lsrs	r3, r3, #4
 8026870:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026874:	0e0b      	lsrs	r3, r1, #24
 8026876:	d006      	beq.n	8026886 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026878:	8822      	ldrh	r2, [r4, #0]
 802687a:	9300      	str	r3, [sp, #0]
 802687c:	4640      	mov	r0, r8
 802687e:	464b      	mov	r3, r9
 8026880:	f7ff ff30 	bl	80266e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026884:	8020      	strh	r0, [r4, #0]
 8026886:	f817 3b01 	ldrb.w	r3, [r7], #1
 802688a:	f003 030f 	and.w	r3, r3, #15
 802688e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026892:	0e0b      	lsrs	r3, r1, #24
 8026894:	d006      	beq.n	80268a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026896:	8862      	ldrh	r2, [r4, #2]
 8026898:	9300      	str	r3, [sp, #0]
 802689a:	4640      	mov	r0, r8
 802689c:	464b      	mov	r3, r9
 802689e:	f7ff ff21 	bl	80266e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80268a2:	8060      	strh	r0, [r4, #2]
 80268a4:	3404      	adds	r4, #4
 80268a6:	f1aa 0a02 	sub.w	sl, sl, #2
 80268aa:	e7dc      	b.n	8026866 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80268ac:	462f      	mov	r7, r5
 80268ae:	46da      	mov	sl, fp
 80268b0:	e7d9      	b.n	8026866 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80268b2:	d10d      	bne.n	80268d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80268b4:	783b      	ldrb	r3, [r7, #0]
 80268b6:	091b      	lsrs	r3, r3, #4
 80268b8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80268bc:	0e0b      	lsrs	r3, r1, #24
 80268be:	d006      	beq.n	80268ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80268c0:	8822      	ldrh	r2, [r4, #0]
 80268c2:	9300      	str	r3, [sp, #0]
 80268c4:	4640      	mov	r0, r8
 80268c6:	464b      	mov	r3, r9
 80268c8:	f7ff ff0c 	bl	80266e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80268cc:	8020      	strh	r0, [r4, #0]
 80268ce:	3402      	adds	r4, #2
 80268d0:	9b06      	ldr	r3, [sp, #24]
 80268d2:	9a02      	ldr	r2, [sp, #8]
 80268d4:	881b      	ldrh	r3, [r3, #0]
 80268d6:	eba3 030b 	sub.w	r3, r3, fp
 80268da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80268de:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80268e2:	4413      	add	r3, r2
 80268e4:	9a07      	ldr	r2, [sp, #28]
 80268e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80268ea:	441d      	add	r5, r3
 80268ec:	e7a3      	b.n	8026836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80268ee:	9b05      	ldr	r3, [sp, #20]
 80268f0:	6818      	ldr	r0, [r3, #0]
 80268f2:	6803      	ldr	r3, [r0, #0]
 80268f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80268f6:	4798      	blx	r3
 80268f8:	b00d      	add	sp, #52	; 0x34
 80268fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268fe:	bf00      	nop
 8026900:	20012da4 	.word	0x20012da4
 8026904:	20012d9e 	.word	0x20012d9e

08026908 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026908:	b570      	push	{r4, r5, r6, lr}
 802690a:	1214      	asrs	r4, r2, #8
 802690c:	788d      	ldrb	r5, [r1, #2]
 802690e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026912:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026916:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802691a:	fb15 f503 	smulbb	r5, r5, r3
 802691e:	fb04 5506 	mla	r5, r4, r6, r5
 8026922:	10d0      	asrs	r0, r2, #3
 8026924:	784c      	ldrb	r4, [r1, #1]
 8026926:	7809      	ldrb	r1, [r1, #0]
 8026928:	00d2      	lsls	r2, r2, #3
 802692a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802692e:	b2d2      	uxtb	r2, r2
 8026930:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026934:	fb14 f403 	smulbb	r4, r4, r3
 8026938:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802693c:	fb11 f303 	smulbb	r3, r1, r3
 8026940:	fb00 4406 	mla	r4, r0, r6, r4
 8026944:	fb02 3306 	mla	r3, r2, r6, r3
 8026948:	b2ad      	uxth	r5, r5
 802694a:	b29b      	uxth	r3, r3
 802694c:	b2a4      	uxth	r4, r4
 802694e:	1c68      	adds	r0, r5, #1
 8026950:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026954:	1c62      	adds	r2, r4, #1
 8026956:	1c58      	adds	r0, r3, #1
 8026958:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802695c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026960:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026964:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026968:	0964      	lsrs	r4, r4, #5
 802696a:	4328      	orrs	r0, r5
 802696c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026970:	4320      	orrs	r0, r4
 8026972:	bd70      	pop	{r4, r5, r6, pc}

08026974 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026978:	b08f      	sub	sp, #60	; 0x3c
 802697a:	461c      	mov	r4, r3
 802697c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026980:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026982:	4682      	mov	sl, r0
 8026984:	460e      	mov	r6, r1
 8026986:	4615      	mov	r5, r2
 8026988:	2f00      	cmp	r7, #0
 802698a:	f000 8142 	beq.w	8026c12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802698e:	6820      	ldr	r0, [r4, #0]
 8026990:	6861      	ldr	r1, [r4, #4]
 8026992:	aa0a      	add	r2, sp, #40	; 0x28
 8026994:	c203      	stmia	r2!, {r0, r1}
 8026996:	6818      	ldr	r0, [r3, #0]
 8026998:	6859      	ldr	r1, [r3, #4]
 802699a:	aa0c      	add	r2, sp, #48	; 0x30
 802699c:	c203      	stmia	r2!, {r0, r1}
 802699e:	a80a      	add	r0, sp, #40	; 0x28
 80269a0:	f7ef f84a 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80269a4:	4621      	mov	r1, r4
 80269a6:	a80c      	add	r0, sp, #48	; 0x30
 80269a8:	f7ef f88a 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80269ac:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80269b0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80269b4:	f002 0301 	and.w	r3, r2, #1
 80269b8:	9306      	str	r3, [sp, #24]
 80269ba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80269be:	f003 0101 	and.w	r1, r3, #1
 80269c2:	9105      	str	r1, [sp, #20]
 80269c4:	9805      	ldr	r0, [sp, #20]
 80269c6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80269ca:	4403      	add	r3, r0
 80269cc:	fb01 2303 	mla	r3, r1, r3, r2
 80269d0:	f04f 0802 	mov.w	r8, #2
 80269d4:	fb93 f3f8 	sdiv	r3, r3, r8
 80269d8:	441e      	add	r6, r3
 80269da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80269de:	441a      	add	r2, r3
 80269e0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80269e4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80269e8:	4419      	add	r1, r3
 80269ea:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80269ee:	9303      	str	r3, [sp, #12]
 80269f0:	4b89      	ldr	r3, [pc, #548]	; (8026c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80269f2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80269f6:	6818      	ldr	r0, [r3, #0]
 80269f8:	6803      	ldr	r3, [r0, #0]
 80269fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80269fc:	4798      	blx	r3
 80269fe:	4a87      	ldr	r2, [pc, #540]	; (8026c1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026a00:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026a04:	8813      	ldrh	r3, [r2, #0]
 8026a06:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8026a0a:	2fff      	cmp	r7, #255	; 0xff
 8026a0c:	fb03 9404 	mla	r4, r3, r4, r9
 8026a10:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026a14:	f105 0504 	add.w	r5, r5, #4
 8026a18:	4694      	mov	ip, r2
 8026a1a:	fb03 f30b 	mul.w	r3, r3, fp
 8026a1e:	d071      	beq.n	8026b04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026a20:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026a24:	43f9      	mvns	r1, r7
 8026a26:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026a2a:	b2c9      	uxtb	r1, r1
 8026a2c:	9104      	str	r1, [sp, #16]
 8026a2e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026a32:	9b07      	ldr	r3, [sp, #28]
 8026a34:	42a3      	cmp	r3, r4
 8026a36:	f240 80e7 	bls.w	8026c08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026a3a:	9b06      	ldr	r3, [sp, #24]
 8026a3c:	2b00      	cmp	r3, #0
 8026a3e:	d03d      	beq.n	8026abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026a40:	7831      	ldrb	r1, [r6, #0]
 8026a42:	9b04      	ldr	r3, [sp, #16]
 8026a44:	8822      	ldrh	r2, [r4, #0]
 8026a46:	9300      	str	r3, [sp, #0]
 8026a48:	f001 010f 	and.w	r1, r1, #15
 8026a4c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a50:	463b      	mov	r3, r7
 8026a52:	4429      	add	r1, r5
 8026a54:	4650      	mov	r0, sl
 8026a56:	f7ff ff57 	bl	8026908 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a5a:	9b03      	ldr	r3, [sp, #12]
 8026a5c:	f824 0b02 	strh.w	r0, [r4], #2
 8026a60:	f106 0801 	add.w	r8, r6, #1
 8026a64:	f103 3bff 	add.w	fp, r3, #4294967295
 8026a68:	f1bb 0f01 	cmp.w	fp, #1
 8026a6c:	46a1      	mov	r9, r4
 8026a6e:	f104 0404 	add.w	r4, r4, #4
 8026a72:	dd27      	ble.n	8026ac4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026a74:	f898 1000 	ldrb.w	r1, [r8]
 8026a78:	9b04      	ldr	r3, [sp, #16]
 8026a7a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026a7e:	9300      	str	r3, [sp, #0]
 8026a80:	0909      	lsrs	r1, r1, #4
 8026a82:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a86:	463b      	mov	r3, r7
 8026a88:	4429      	add	r1, r5
 8026a8a:	4650      	mov	r0, sl
 8026a8c:	f7ff ff3c 	bl	8026908 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a90:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026a94:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026a98:	9b04      	ldr	r3, [sp, #16]
 8026a9a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026a9e:	9300      	str	r3, [sp, #0]
 8026aa0:	f001 010f 	and.w	r1, r1, #15
 8026aa4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026aa8:	463b      	mov	r3, r7
 8026aaa:	4429      	add	r1, r5
 8026aac:	4650      	mov	r0, sl
 8026aae:	f7ff ff2b 	bl	8026908 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026ab2:	f1ab 0b02 	sub.w	fp, fp, #2
 8026ab6:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026aba:	e7d5      	b.n	8026a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026abc:	46b0      	mov	r8, r6
 8026abe:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026ac2:	e7d1      	b.n	8026a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026ac4:	d10f      	bne.n	8026ae6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026ac6:	f898 1000 	ldrb.w	r1, [r8]
 8026aca:	9b04      	ldr	r3, [sp, #16]
 8026acc:	f8b9 2000 	ldrh.w	r2, [r9]
 8026ad0:	9300      	str	r3, [sp, #0]
 8026ad2:	0909      	lsrs	r1, r1, #4
 8026ad4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026ad8:	463b      	mov	r3, r7
 8026ada:	4429      	add	r1, r5
 8026adc:	4650      	mov	r0, sl
 8026ade:	f7ff ff13 	bl	8026908 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026ae2:	f829 0b02 	strh.w	r0, [r9], #2
 8026ae6:	9b08      	ldr	r3, [sp, #32]
 8026ae8:	9a05      	ldr	r2, [sp, #20]
 8026aea:	881c      	ldrh	r4, [r3, #0]
 8026aec:	9b03      	ldr	r3, [sp, #12]
 8026aee:	1ae4      	subs	r4, r4, r3
 8026af0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026af4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026af8:	4413      	add	r3, r2
 8026afa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026afc:	fb93 f3f2 	sdiv	r3, r3, r2
 8026b00:	441e      	add	r6, r3
 8026b02:	e796      	b.n	8026a32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026b04:	4f46      	ldr	r7, [pc, #280]	; (8026c20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026b06:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026b0a:	42a3      	cmp	r3, r4
 8026b0c:	d97c      	bls.n	8026c08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026b0e:	9a06      	ldr	r2, [sp, #24]
 8026b10:	2a00      	cmp	r2, #0
 8026b12:	d054      	beq.n	8026bbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026b14:	7830      	ldrb	r0, [r6, #0]
 8026b16:	f000 000f 	and.w	r0, r0, #15
 8026b1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b1e:	eb05 0e00 	add.w	lr, r5, r0
 8026b22:	5c28      	ldrb	r0, [r5, r0]
 8026b24:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026b28:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026b2c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026b30:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026b34:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026b38:	ea42 020e 	orr.w	r2, r2, lr
 8026b3c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026b40:	f824 2b02 	strh.w	r2, [r4], #2
 8026b44:	9a03      	ldr	r2, [sp, #12]
 8026b46:	1c71      	adds	r1, r6, #1
 8026b48:	f102 3eff 	add.w	lr, r2, #4294967295
 8026b4c:	f1be 0f01 	cmp.w	lr, #1
 8026b50:	4620      	mov	r0, r4
 8026b52:	f104 0404 	add.w	r4, r4, #4
 8026b56:	dd36      	ble.n	8026bc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026b58:	7808      	ldrb	r0, [r1, #0]
 8026b5a:	0900      	lsrs	r0, r0, #4
 8026b5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b60:	eb05 0a00 	add.w	sl, r5, r0
 8026b64:	f1ae 0e02 	sub.w	lr, lr, #2
 8026b68:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026b6c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026b70:	00d2      	lsls	r2, r2, #3
 8026b72:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026b76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b7a:	ea49 0202 	orr.w	r2, r9, r2
 8026b7e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026b82:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026b86:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026b8a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026b8e:	f000 000f 	and.w	r0, r0, #15
 8026b92:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b96:	eb05 0a00 	add.w	sl, r5, r0
 8026b9a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026b9e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026ba2:	00d2      	lsls	r2, r2, #3
 8026ba4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026ba8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026bac:	ea49 0202 	orr.w	r2, r9, r2
 8026bb0:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026bb4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026bb8:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026bbc:	e7c6      	b.n	8026b4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026bbe:	4631      	mov	r1, r6
 8026bc0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026bc4:	e7c2      	b.n	8026b4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026bc6:	d111      	bne.n	8026bec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026bc8:	7809      	ldrb	r1, [r1, #0]
 8026bca:	0909      	lsrs	r1, r1, #4
 8026bcc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026bd0:	186c      	adds	r4, r5, r1
 8026bd2:	5c69      	ldrb	r1, [r5, r1]
 8026bd4:	78a2      	ldrb	r2, [r4, #2]
 8026bd6:	7864      	ldrb	r4, [r4, #1]
 8026bd8:	00e4      	lsls	r4, r4, #3
 8026bda:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026bde:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026be2:	4322      	orrs	r2, r4
 8026be4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026be8:	f820 2b02 	strh.w	r2, [r0], #2
 8026bec:	9a03      	ldr	r2, [sp, #12]
 8026bee:	f8bc 4000 	ldrh.w	r4, [ip]
 8026bf2:	9905      	ldr	r1, [sp, #20]
 8026bf4:	1aa4      	subs	r4, r4, r2
 8026bf6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026bfa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026bfe:	440a      	add	r2, r1
 8026c00:	fb92 f2f8 	sdiv	r2, r2, r8
 8026c04:	4416      	add	r6, r2
 8026c06:	e780      	b.n	8026b0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026c08:	4b03      	ldr	r3, [pc, #12]	; (8026c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026c0a:	6818      	ldr	r0, [r3, #0]
 8026c0c:	6803      	ldr	r3, [r0, #0]
 8026c0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026c10:	4798      	blx	r3
 8026c12:	b00f      	add	sp, #60	; 0x3c
 8026c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c18:	20012da4 	.word	0x20012da4
 8026c1c:	20012d9e 	.word	0x20012d9e
 8026c20:	fffff800 	.word	0xfffff800

08026c24 <CRC_Lock>:
 8026c24:	b530      	push	{r4, r5, lr}
 8026c26:	4a20      	ldr	r2, [pc, #128]	; (8026ca8 <CRC_Lock+0x84>)
 8026c28:	6813      	ldr	r3, [r2, #0]
 8026c2a:	f023 0301 	bic.w	r3, r3, #1
 8026c2e:	6013      	str	r3, [r2, #0]
 8026c30:	4b1e      	ldr	r3, [pc, #120]	; (8026cac <CRC_Lock+0x88>)
 8026c32:	681a      	ldr	r2, [r3, #0]
 8026c34:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026c38:	4022      	ands	r2, r4
 8026c3a:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026c3e:	42aa      	cmp	r2, r5
 8026c40:	d005      	beq.n	8026c4e <CRC_Lock+0x2a>
 8026c42:	681b      	ldr	r3, [r3, #0]
 8026c44:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026c48:	4023      	ands	r3, r4
 8026c4a:	4293      	cmp	r3, r2
 8026c4c:	d124      	bne.n	8026c98 <CRC_Lock+0x74>
 8026c4e:	4b18      	ldr	r3, [pc, #96]	; (8026cb0 <CRC_Lock+0x8c>)
 8026c50:	681b      	ldr	r3, [r3, #0]
 8026c52:	bb0b      	cbnz	r3, 8026c98 <CRC_Lock+0x74>
 8026c54:	4b17      	ldr	r3, [pc, #92]	; (8026cb4 <CRC_Lock+0x90>)
 8026c56:	681a      	ldr	r2, [r3, #0]
 8026c58:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026c5c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026c60:	d00d      	beq.n	8026c7e <CRC_Lock+0x5a>
 8026c62:	681a      	ldr	r2, [r3, #0]
 8026c64:	f240 4483 	movw	r4, #1155	; 0x483
 8026c68:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026c6c:	42a2      	cmp	r2, r4
 8026c6e:	d006      	beq.n	8026c7e <CRC_Lock+0x5a>
 8026c70:	681b      	ldr	r3, [r3, #0]
 8026c72:	f240 4285 	movw	r2, #1157	; 0x485
 8026c76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026c7a:	4293      	cmp	r3, r2
 8026c7c:	d10c      	bne.n	8026c98 <CRC_Lock+0x74>
 8026c7e:	4b0e      	ldr	r3, [pc, #56]	; (8026cb8 <CRC_Lock+0x94>)
 8026c80:	2201      	movs	r2, #1
 8026c82:	601a      	str	r2, [r3, #0]
 8026c84:	681a      	ldr	r2, [r3, #0]
 8026c86:	2a00      	cmp	r2, #0
 8026c88:	d1fc      	bne.n	8026c84 <CRC_Lock+0x60>
 8026c8a:	4b0c      	ldr	r3, [pc, #48]	; (8026cbc <CRC_Lock+0x98>)
 8026c8c:	6018      	str	r0, [r3, #0]
 8026c8e:	6818      	ldr	r0, [r3, #0]
 8026c90:	1a43      	subs	r3, r0, r1
 8026c92:	4258      	negs	r0, r3
 8026c94:	4158      	adcs	r0, r3
 8026c96:	bd30      	pop	{r4, r5, pc}
 8026c98:	4b09      	ldr	r3, [pc, #36]	; (8026cc0 <CRC_Lock+0x9c>)
 8026c9a:	2201      	movs	r2, #1
 8026c9c:	601a      	str	r2, [r3, #0]
 8026c9e:	681a      	ldr	r2, [r3, #0]
 8026ca0:	2a00      	cmp	r2, #0
 8026ca2:	d1fc      	bne.n	8026c9e <CRC_Lock+0x7a>
 8026ca4:	4b07      	ldr	r3, [pc, #28]	; (8026cc4 <CRC_Lock+0xa0>)
 8026ca6:	e7f1      	b.n	8026c8c <CRC_Lock+0x68>
 8026ca8:	e0002000 	.word	0xe0002000
 8026cac:	e000ed00 	.word	0xe000ed00
 8026cb0:	e0042000 	.word	0xe0042000
 8026cb4:	5c001000 	.word	0x5c001000
 8026cb8:	58024c08 	.word	0x58024c08
 8026cbc:	58024c00 	.word	0x58024c00
 8026cc0:	40023008 	.word	0x40023008
 8026cc4:	40023000 	.word	0x40023000

08026cc8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026cc8:	6101      	str	r1, [r0, #16]
 8026cca:	4770      	bx	lr

08026ccc <_ZN8touchgfx8Gestures4tickEv>:
 8026ccc:	7b83      	ldrb	r3, [r0, #14]
 8026cce:	b14b      	cbz	r3, 8026ce4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026cd0:	8903      	ldrh	r3, [r0, #8]
 8026cd2:	3301      	adds	r3, #1
 8026cd4:	b29b      	uxth	r3, r3
 8026cd6:	2b07      	cmp	r3, #7
 8026cd8:	8103      	strh	r3, [r0, #8]
 8026cda:	bf81      	itttt	hi
 8026cdc:	2300      	movhi	r3, #0
 8026cde:	8143      	strhhi	r3, [r0, #10]
 8026ce0:	8183      	strhhi	r3, [r0, #12]
 8026ce2:	7383      	strbhi	r3, [r0, #14]
 8026ce4:	4770      	bx	lr
	...

08026ce8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026ce8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026cec:	4698      	mov	r8, r3
 8026cee:	8883      	ldrh	r3, [r0, #4]
 8026cf0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026cf4:	eba8 0303 	sub.w	r3, r8, r3
 8026cf8:	b21b      	sxth	r3, r3
 8026cfa:	4604      	mov	r4, r0
 8026cfc:	2b00      	cmp	r3, #0
 8026cfe:	4617      	mov	r7, r2
 8026d00:	4a18      	ldr	r2, [pc, #96]	; (8026d64 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026d02:	9200      	str	r2, [sp, #0]
 8026d04:	bfb8      	it	lt
 8026d06:	425b      	neglt	r3, r3
 8026d08:	8aa2      	ldrh	r2, [r4, #20]
 8026d0a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026d0e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026d12:	b21b      	sxth	r3, r3
 8026d14:	460e      	mov	r6, r1
 8026d16:	4293      	cmp	r3, r2
 8026d18:	88c1      	ldrh	r1, [r0, #6]
 8026d1a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026d1e:	f04f 0000 	mov.w	r0, #0
 8026d22:	f88d 0004 	strb.w	r0, [sp, #4]
 8026d26:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026d2a:	dc07      	bgt.n	8026d3c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026d2c:	1a69      	subs	r1, r5, r1
 8026d2e:	b209      	sxth	r1, r1
 8026d30:	2900      	cmp	r1, #0
 8026d32:	bfb8      	it	lt
 8026d34:	4249      	neglt	r1, r1
 8026d36:	b209      	sxth	r1, r1
 8026d38:	428a      	cmp	r2, r1
 8026d3a:	da10      	bge.n	8026d5e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026d3c:	6920      	ldr	r0, [r4, #16]
 8026d3e:	6803      	ldr	r3, [r0, #0]
 8026d40:	4669      	mov	r1, sp
 8026d42:	685b      	ldr	r3, [r3, #4]
 8026d44:	4798      	blx	r3
 8026d46:	eba8 0606 	sub.w	r6, r8, r6
 8026d4a:	2300      	movs	r3, #0
 8026d4c:	1bef      	subs	r7, r5, r7
 8026d4e:	2001      	movs	r0, #1
 8026d50:	8123      	strh	r3, [r4, #8]
 8026d52:	8166      	strh	r6, [r4, #10]
 8026d54:	81a7      	strh	r7, [r4, #12]
 8026d56:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026d5a:	80e5      	strh	r5, [r4, #6]
 8026d5c:	73a0      	strb	r0, [r4, #14]
 8026d5e:	b004      	add	sp, #16
 8026d60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026d64:	0802f600 	.word	0x0802f600

08026d68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026d68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026d6a:	461e      	mov	r6, r3
 8026d6c:	1e4b      	subs	r3, r1, #1
 8026d6e:	2b01      	cmp	r3, #1
 8026d70:	b085      	sub	sp, #20
 8026d72:	4604      	mov	r4, r0
 8026d74:	460d      	mov	r5, r1
 8026d76:	4617      	mov	r7, r2
 8026d78:	d84b      	bhi.n	8026e12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026d7a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026d7e:	1cd3      	adds	r3, r2, #3
 8026d80:	b29b      	uxth	r3, r3
 8026d82:	2b06      	cmp	r3, #6
 8026d84:	d916      	bls.n	8026db4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026d86:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026e28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026d8a:	f8cd c004 	str.w	ip, [sp, #4]
 8026d8e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026d92:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026d96:	6900      	ldr	r0, [r0, #16]
 8026d98:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026d9c:	f04f 0c00 	mov.w	ip, #0
 8026da0:	f88d c008 	strb.w	ip, [sp, #8]
 8026da4:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026da8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026dac:	6803      	ldr	r3, [r0, #0]
 8026dae:	a901      	add	r1, sp, #4
 8026db0:	689b      	ldr	r3, [r3, #8]
 8026db2:	4798      	blx	r3
 8026db4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026db8:	1cd3      	adds	r3, r2, #3
 8026dba:	b29b      	uxth	r3, r3
 8026dbc:	2b06      	cmp	r3, #6
 8026dbe:	d916      	bls.n	8026dee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026dc0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026e28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026dc4:	f8cd c004 	str.w	ip, [sp, #4]
 8026dc8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026dcc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026dd0:	6920      	ldr	r0, [r4, #16]
 8026dd2:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026dd6:	f04f 0c01 	mov.w	ip, #1
 8026dda:	f88d c008 	strb.w	ip, [sp, #8]
 8026dde:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026de2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026de6:	6803      	ldr	r3, [r0, #0]
 8026de8:	a901      	add	r1, sp, #4
 8026dea:	689b      	ldr	r3, [r3, #8]
 8026dec:	4798      	blx	r3
 8026dee:	4b0d      	ldr	r3, [pc, #52]	; (8026e24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026df0:	9301      	str	r3, [sp, #4]
 8026df2:	6920      	ldr	r0, [r4, #16]
 8026df4:	f88d 5008 	strb.w	r5, [sp, #8]
 8026df8:	2300      	movs	r3, #0
 8026dfa:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026dfe:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026e02:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026e06:	6803      	ldr	r3, [r0, #0]
 8026e08:	a901      	add	r1, sp, #4
 8026e0a:	681b      	ldr	r3, [r3, #0]
 8026e0c:	4798      	blx	r3
 8026e0e:	b005      	add	sp, #20
 8026e10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026e12:	2900      	cmp	r1, #0
 8026e14:	d1eb      	bne.n	8026dee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026e16:	80a2      	strh	r2, [r4, #4]
 8026e18:	80c6      	strh	r6, [r0, #6]
 8026e1a:	60a1      	str	r1, [r4, #8]
 8026e1c:	81a1      	strh	r1, [r4, #12]
 8026e1e:	73a1      	strb	r1, [r4, #14]
 8026e20:	e7e5      	b.n	8026dee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026e22:	bf00      	nop
 8026e24:	0802f5ec 	.word	0x0802f5ec
 8026e28:	0802f614 	.word	0x0802f614

08026e2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026e2c:	10c9      	asrs	r1, r1, #3
 8026e2e:	2900      	cmp	r1, #0
 8026e30:	bfb8      	it	lt
 8026e32:	4249      	neglt	r1, r1
 8026e34:	2801      	cmp	r0, #1
 8026e36:	d108      	bne.n	8026e4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026e38:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026e3c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026e40:	4601      	mov	r1, r0
 8026e42:	dd02      	ble.n	8026e4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026e44:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026e48:	4770      	bx	lr
 8026e4a:	29ff      	cmp	r1, #255	; 0xff
 8026e4c:	bfa8      	it	ge
 8026e4e:	21ff      	movge	r1, #255	; 0xff
 8026e50:	4608      	mov	r0, r1
 8026e52:	4770      	bx	lr

08026e54 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026e54:	b410      	push	{r4}
 8026e56:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026e5a:	429c      	cmp	r4, r3
 8026e5c:	d803      	bhi.n	8026e66 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026e5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026e62:	f7ed b8ef 	b.w	8014044 <_ZN8touchgfx7Outline6lineToEii>
 8026e66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026e6a:	4770      	bx	lr

08026e6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026e70:	b08b      	sub	sp, #44	; 0x2c
 8026e72:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026e76:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026e7a:	9308      	str	r3, [sp, #32]
 8026e7c:	4606      	mov	r6, r0
 8026e7e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026e82:	9309      	str	r3, [sp, #36]	; 0x24
 8026e84:	468a      	mov	sl, r1
 8026e86:	f7ed fa4a 	bl	801431e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026e8a:	68b5      	ldr	r5, [r6, #8]
 8026e8c:	4604      	mov	r4, r0
 8026e8e:	2d00      	cmp	r5, #0
 8026e90:	d044      	beq.n	8026f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026e92:	6873      	ldr	r3, [r6, #4]
 8026e94:	42ab      	cmp	r3, r5
 8026e96:	d33d      	bcc.n	8026f14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026e98:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026e9c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026ea0:	eb02 0b03 	add.w	fp, r2, r3
 8026ea4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026ea8:	fb02 1203 	mla	r2, r2, r3, r1
 8026eac:	9205      	str	r2, [sp, #20]
 8026eae:	1e6a      	subs	r2, r5, #1
 8026eb0:	9204      	str	r2, [sp, #16]
 8026eb2:	f04f 0800 	mov.w	r8, #0
 8026eb6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026eba:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026ebe:	454b      	cmp	r3, r9
 8026ec0:	463a      	mov	r2, r7
 8026ec2:	d008      	beq.n	8026ed6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026ec4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026ec8:	eb03 0b09 	add.w	fp, r3, r9
 8026ecc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026ed0:	fb03 1309 	mla	r3, r3, r9, r1
 8026ed4:	9305      	str	r3, [sp, #20]
 8026ed6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026eda:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026ede:	4498      	add	r8, r3
 8026ee0:	9b04      	ldr	r3, [sp, #16]
 8026ee2:	3b01      	subs	r3, #1
 8026ee4:	9304      	str	r3, [sp, #16]
 8026ee6:	9b04      	ldr	r3, [sp, #16]
 8026ee8:	3301      	adds	r3, #1
 8026eea:	d015      	beq.n	8026f18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026eec:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026ef0:	42bb      	cmp	r3, r7
 8026ef2:	d117      	bne.n	8026f24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026ef4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026ef8:	9b04      	ldr	r3, [sp, #16]
 8026efa:	4548      	cmp	r0, r9
 8026efc:	f103 33ff 	add.w	r3, r3, #4294967295
 8026f00:	d17f      	bne.n	8027002 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026f02:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026f06:	4401      	add	r1, r0
 8026f08:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026f0c:	4480      	add	r8, r0
 8026f0e:	e7e9      	b.n	8026ee4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026f10:	461f      	mov	r7, r3
 8026f12:	e044      	b.n	8026f9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026f14:	2000      	movs	r0, #0
 8026f16:	e002      	b.n	8026f1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026f18:	2900      	cmp	r1, #0
 8026f1a:	d16f      	bne.n	8026ffc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026f1c:	2001      	movs	r0, #1
 8026f1e:	b00b      	add	sp, #44	; 0x2c
 8026f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026f24:	2900      	cmp	r1, #0
 8026f26:	d030      	beq.n	8026f8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026f28:	2f00      	cmp	r7, #0
 8026f2a:	db29      	blt.n	8026f80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026f2c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026f30:	42bb      	cmp	r3, r7
 8026f32:	dd25      	ble.n	8026f80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026f34:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026f38:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026f3c:	f7ff ff76 	bl	8026e2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f42:	fb10 f003 	smulbb	r0, r0, r3
 8026f46:	b280      	uxth	r0, r0
 8026f48:	1c41      	adds	r1, r0, #1
 8026f4a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026f4e:	1209      	asrs	r1, r1, #8
 8026f50:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026f54:	d014      	beq.n	8026f80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026f56:	9808      	ldr	r0, [sp, #32]
 8026f58:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026f5a:	b2c9      	uxtb	r1, r1
 8026f5c:	b2ba      	uxth	r2, r7
 8026f5e:	9102      	str	r1, [sp, #8]
 8026f60:	2101      	movs	r1, #1
 8026f62:	4413      	add	r3, r2
 8026f64:	9101      	str	r1, [sp, #4]
 8026f66:	4402      	add	r2, r0
 8026f68:	fa0f f18b 	sxth.w	r1, fp
 8026f6c:	f8da 0000 	ldr.w	r0, [sl]
 8026f70:	9100      	str	r1, [sp, #0]
 8026f72:	6941      	ldr	r1, [r0, #20]
 8026f74:	b21b      	sxth	r3, r3
 8026f76:	460d      	mov	r5, r1
 8026f78:	b212      	sxth	r2, r2
 8026f7a:	9905      	ldr	r1, [sp, #20]
 8026f7c:	4650      	mov	r0, sl
 8026f7e:	47a8      	blx	r5
 8026f80:	9b04      	ldr	r3, [sp, #16]
 8026f82:	3301      	adds	r3, #1
 8026f84:	f107 0201 	add.w	r2, r7, #1
 8026f88:	d0c8      	beq.n	8026f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026f8a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026f8e:	1abb      	subs	r3, r7, r2
 8026f90:	2b00      	cmp	r3, #0
 8026f92:	dd31      	ble.n	8026ff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f94:	2a00      	cmp	r2, #0
 8026f96:	dabb      	bge.n	8026f10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026f98:	2f00      	cmp	r7, #0
 8026f9a:	dd2d      	ble.n	8026ff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f9c:	2200      	movs	r2, #0
 8026f9e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026fa2:	19d1      	adds	r1, r2, r7
 8026fa4:	4299      	cmp	r1, r3
 8026fa6:	db02      	blt.n	8026fae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026fa8:	1a9f      	subs	r7, r3, r2
 8026faa:	2f00      	cmp	r7, #0
 8026fac:	dd24      	ble.n	8026ff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026fae:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026fb2:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026fb6:	f7ff ff39 	bl	8026e2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026fba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026fbc:	fb10 f003 	smulbb	r0, r0, r3
 8026fc0:	b280      	uxth	r0, r0
 8026fc2:	1c41      	adds	r1, r0, #1
 8026fc4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026fc8:	1209      	asrs	r1, r1, #8
 8026fca:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026fce:	d013      	beq.n	8026ff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026fd0:	9808      	ldr	r0, [sp, #32]
 8026fd2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026fd4:	b292      	uxth	r2, r2
 8026fd6:	b2c9      	uxtb	r1, r1
 8026fd8:	4413      	add	r3, r2
 8026fda:	9102      	str	r1, [sp, #8]
 8026fdc:	4402      	add	r2, r0
 8026fde:	b23f      	sxth	r7, r7
 8026fe0:	f8da 0000 	ldr.w	r0, [sl]
 8026fe4:	9701      	str	r7, [sp, #4]
 8026fe6:	fa0f f18b 	sxth.w	r1, fp
 8026fea:	9100      	str	r1, [sp, #0]
 8026fec:	6947      	ldr	r7, [r0, #20]
 8026fee:	9905      	ldr	r1, [sp, #20]
 8026ff0:	b21b      	sxth	r3, r3
 8026ff2:	b212      	sxth	r2, r2
 8026ff4:	4650      	mov	r0, sl
 8026ff6:	47b8      	blx	r7
 8026ff8:	464b      	mov	r3, r9
 8026ffa:	e75c      	b.n	8026eb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026ffc:	2f00      	cmp	r7, #0
 8026ffe:	da95      	bge.n	8026f2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027000:	e78c      	b.n	8026f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027002:	2900      	cmp	r1, #0
 8027004:	d0f8      	beq.n	8026ff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027006:	e78f      	b.n	8026f28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027008 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027008:	4b4b      	ldr	r3, [pc, #300]	; (8027138 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802700a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802700e:	2500      	movs	r5, #0
 8027010:	f100 0620 	add.w	r6, r0, #32
 8027014:	4604      	mov	r4, r0
 8027016:	e9c0 3100 	strd	r3, r1, [r0]
 802701a:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802701e:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027022:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027026:	f100 0718 	add.w	r7, r0, #24
 802702a:	4630      	mov	r0, r6
 802702c:	4690      	mov	r8, r2
 802702e:	f7ec fb41 	bl	80136b4 <_ZN8touchgfx7OutlineC1Ev>
 8027032:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027036:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802703a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802703e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027042:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027046:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802704a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802704e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027052:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027056:	f9b8 2000 	ldrsh.w	r2, [r8]
 802705a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802705e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027062:	9500      	str	r5, [sp, #0]
 8027064:	4410      	add	r0, r2
 8027066:	b280      	uxth	r0, r0
 8027068:	fa0f fa80 	sxth.w	sl, r0
 802706c:	45aa      	cmp	sl, r5
 802706e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8027072:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027076:	dd5c      	ble.n	8027132 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027078:	4591      	cmp	r9, r2
 802707a:	dd5a      	ble.n	8027132 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802707c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8027080:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027084:	440b      	add	r3, r1
 8027086:	b29b      	uxth	r3, r3
 8027088:	b21d      	sxth	r5, r3
 802708a:	2d00      	cmp	r5, #0
 802708c:	dd51      	ble.n	8027132 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802708e:	458e      	cmp	lr, r1
 8027090:	dd4f      	ble.n	8027132 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027092:	45d1      	cmp	r9, sl
 8027094:	bfb8      	it	lt
 8027096:	fa1f f089 	uxthlt.w	r0, r9
 802709a:	45ae      	cmp	lr, r5
 802709c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80270a0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80270a4:	bfb8      	it	lt
 80270a6:	fa1f f38e 	uxthlt.w	r3, lr
 80270aa:	1a80      	subs	r0, r0, r2
 80270ac:	1a5b      	subs	r3, r3, r1
 80270ae:	f8ad 0004 	strh.w	r0, [sp, #4]
 80270b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80270b6:	f8ad 2000 	strh.w	r2, [sp]
 80270ba:	f8ad 1002 	strh.w	r1, [sp, #2]
 80270be:	466d      	mov	r5, sp
 80270c0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80270c4:	e887 0003 	stmia.w	r7, {r0, r1}
 80270c8:	f8dc 3000 	ldr.w	r3, [ip]
 80270cc:	4660      	mov	r0, ip
 80270ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80270d0:	4639      	mov	r1, r7
 80270d2:	4798      	blx	r3
 80270d4:	6861      	ldr	r1, [r4, #4]
 80270d6:	4628      	mov	r0, r5
 80270d8:	3104      	adds	r1, #4
 80270da:	f7ee fcf1 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80270de:	4638      	mov	r0, r7
 80270e0:	f7ee fcaa 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80270e4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80270e8:	f8bd 2000 	ldrh.w	r2, [sp]
 80270ec:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80270f0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80270f4:	4630      	mov	r0, r6
 80270f6:	f7ec fac1 	bl	801367c <_ZN8touchgfx7Outline5resetEv>
 80270fa:	f9bd 3000 	ldrsh.w	r3, [sp]
 80270fe:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8027102:	015b      	lsls	r3, r3, #5
 8027104:	60a3      	str	r3, [r4, #8]
 8027106:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802710a:	015b      	lsls	r3, r3, #5
 802710c:	60e3      	str	r3, [r4, #12]
 802710e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027112:	015b      	lsls	r3, r3, #5
 8027114:	6123      	str	r3, [r4, #16]
 8027116:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802711a:	015b      	lsls	r3, r3, #5
 802711c:	6163      	str	r3, [r4, #20]
 802711e:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027122:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027126:	4620      	mov	r0, r4
 8027128:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802712c:	b002      	add	sp, #8
 802712e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027132:	2300      	movs	r3, #0
 8027134:	9301      	str	r3, [sp, #4]
 8027136:	e7c2      	b.n	80270be <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027138:	0802f938 	.word	0x0802f938

0802713c <_ZN8touchgfx6Canvas5closeEv>:
 802713c:	b538      	push	{r3, r4, r5, lr}
 802713e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027142:	4604      	mov	r4, r0
 8027144:	b193      	cbz	r3, 802716c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027146:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802714a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802714e:	4213      	tst	r3, r2
 8027150:	d10c      	bne.n	802716c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027152:	f100 0520 	add.w	r5, r0, #32
 8027156:	b123      	cbz	r3, 8027162 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027158:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802715c:	4628      	mov	r0, r5
 802715e:	f7ff fe79 	bl	8026e54 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027162:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027166:	4628      	mov	r0, r5
 8027168:	f7ff fe74 	bl	8026e54 <_ZN8touchgfx10Rasterizer6lineToEii>
 802716c:	2300      	movs	r3, #0
 802716e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027172:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027176:	4298      	cmp	r0, r3
 8027178:	bf34      	ite	cc
 802717a:	2000      	movcc	r0, #0
 802717c:	2001      	movcs	r0, #1
 802717e:	bd38      	pop	{r3, r4, r5, pc}

08027180 <_ZN8touchgfx6Canvas6renderEh>:
 8027180:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027184:	4604      	mov	r4, r0
 8027186:	6840      	ldr	r0, [r0, #4]
 8027188:	6803      	ldr	r3, [r0, #0]
 802718a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802718c:	460d      	mov	r5, r1
 802718e:	4798      	blx	r3
 8027190:	fb10 f105 	smulbb	r1, r0, r5
 8027194:	b289      	uxth	r1, r1
 8027196:	1c4d      	adds	r5, r1, #1
 8027198:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802719c:	122d      	asrs	r5, r5, #8
 802719e:	f000 809d 	beq.w	80272dc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80271a2:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80271a6:	2b00      	cmp	r3, #0
 80271a8:	f000 8098 	beq.w	80272dc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80271ac:	4620      	mov	r0, r4
 80271ae:	f7ff ffc5 	bl	802713c <_ZN8touchgfx6Canvas5closeEv>
 80271b2:	4607      	mov	r7, r0
 80271b4:	2800      	cmp	r0, #0
 80271b6:	d048      	beq.n	802724a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80271b8:	6863      	ldr	r3, [r4, #4]
 80271ba:	4e49      	ldr	r6, [pc, #292]	; (80272e0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80271bc:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80271be:	6837      	ldr	r7, [r6, #0]
 80271c0:	6803      	ldr	r3, [r0, #0]
 80271c2:	689b      	ldr	r3, [r3, #8]
 80271c4:	4798      	blx	r3
 80271c6:	4601      	mov	r1, r0
 80271c8:	4638      	mov	r0, r7
 80271ca:	f7ea fbc5 	bl	8011958 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80271ce:	4607      	mov	r7, r0
 80271d0:	f7dd fb98 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 80271d4:	6803      	ldr	r3, [r0, #0]
 80271d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80271d8:	4798      	blx	r3
 80271da:	4680      	mov	r8, r0
 80271dc:	f7dd fb92 	bl	8004904 <_ZN8touchgfx3HAL3lcdEv>
 80271e0:	6803      	ldr	r3, [r0, #0]
 80271e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80271e4:	4798      	blx	r3
 80271e6:	280b      	cmp	r0, #11
 80271e8:	d85d      	bhi.n	80272a6 <_ZN8touchgfx6Canvas6renderEh+0x126>
 80271ea:	e8df f000 	tbb	[pc, r0]
 80271ee:	5e53      	.short	0x5e53
 80271f0:	325c066e 	.word	0x325c066e
 80271f4:	67676742 	.word	0x67676742
 80271f8:	6767      	.short	0x6767
 80271fa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271fe:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027202:	2208      	movs	r2, #8
 8027204:	fb91 f2f2 	sdiv	r2, r1, r2
 8027208:	fb08 2303 	mla	r3, r8, r3, r2
 802720c:	441f      	add	r7, r3
 802720e:	424b      	negs	r3, r1
 8027210:	f003 0307 	and.w	r3, r3, #7
 8027214:	f001 0107 	and.w	r1, r1, #7
 8027218:	bf58      	it	pl
 802721a:	4259      	negpl	r1, r3
 802721c:	b2c9      	uxtb	r1, r1
 802721e:	b2ed      	uxtb	r5, r5
 8027220:	e9cd 1500 	strd	r1, r5, [sp]
 8027224:	6860      	ldr	r0, [r4, #4]
 8027226:	463a      	mov	r2, r7
 8027228:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802722a:	fa0f f388 	sxth.w	r3, r8
 802722e:	f104 0020 	add.w	r0, r4, #32
 8027232:	f7ff fe1b 	bl	8026e6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027236:	6863      	ldr	r3, [r4, #4]
 8027238:	4607      	mov	r7, r0
 802723a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802723c:	6803      	ldr	r3, [r0, #0]
 802723e:	691b      	ldr	r3, [r3, #16]
 8027240:	4798      	blx	r3
 8027242:	6830      	ldr	r0, [r6, #0]
 8027244:	6803      	ldr	r3, [r0, #0]
 8027246:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027248:	4798      	blx	r3
 802724a:	4638      	mov	r0, r7
 802724c:	b002      	add	sp, #8
 802724e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027252:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027256:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802725a:	2204      	movs	r2, #4
 802725c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027260:	fb08 2303 	mla	r3, r8, r3, r2
 8027264:	441f      	add	r7, r3
 8027266:	424b      	negs	r3, r1
 8027268:	f003 0303 	and.w	r3, r3, #3
 802726c:	f001 0103 	and.w	r1, r1, #3
 8027270:	e7d2      	b.n	8027218 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027272:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027276:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802727a:	2900      	cmp	r1, #0
 802727c:	f04f 0202 	mov.w	r2, #2
 8027280:	fb91 f2f2 	sdiv	r2, r1, r2
 8027284:	f001 0101 	and.w	r1, r1, #1
 8027288:	fb08 2303 	mla	r3, r8, r3, r2
 802728c:	441f      	add	r7, r3
 802728e:	bfb8      	it	lt
 8027290:	4249      	neglt	r1, r1
 8027292:	e7c3      	b.n	802721c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027294:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027298:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802729c:	fb08 f303 	mul.w	r3, r8, r3
 80272a0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80272a4:	441f      	add	r7, r3
 80272a6:	2100      	movs	r1, #0
 80272a8:	e7b9      	b.n	802721e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80272aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272ae:	fb08 f203 	mul.w	r2, r8, r3
 80272b2:	8b23      	ldrh	r3, [r4, #24]
 80272b4:	2103      	movs	r1, #3
 80272b6:	fb13 2301 	smlabb	r3, r3, r1, r2
 80272ba:	e7f3      	b.n	80272a4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80272bc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272c0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80272c4:	fb08 2303 	mla	r3, r8, r3, r2
 80272c8:	e7ec      	b.n	80272a4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80272ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272ce:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80272d2:	fb08 f303 	mul.w	r3, r8, r3
 80272d6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80272da:	e7e3      	b.n	80272a4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80272dc:	2701      	movs	r7, #1
 80272de:	e7b4      	b.n	802724a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80272e0:	20012da4 	.word	0x20012da4

080272e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80272e4:	b510      	push	{r4, lr}
 80272e6:	4b07      	ldr	r3, [pc, #28]	; (8027304 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80272e8:	781b      	ldrb	r3, [r3, #0]
 80272ea:	2b01      	cmp	r3, #1
 80272ec:	d108      	bne.n	8027300 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80272ee:	6843      	ldr	r3, [r0, #4]
 80272f0:	6814      	ldr	r4, [r2, #0]
 80272f2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80272f6:	680b      	ldr	r3, [r1, #0]
 80272f8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80272fc:	6013      	str	r3, [r2, #0]
 80272fe:	600c      	str	r4, [r1, #0]
 8027300:	bd10      	pop	{r4, pc}
 8027302:	bf00      	nop
 8027304:	20012d9c 	.word	0x20012d9c

08027308 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027308:	b513      	push	{r0, r1, r4, lr}
 802730a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802730e:	4604      	mov	r4, r0
 8027310:	e9cd 2100 	strd	r2, r1, [sp]
 8027314:	b9a3      	cbnz	r3, 8027340 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027316:	466a      	mov	r2, sp
 8027318:	a901      	add	r1, sp, #4
 802731a:	4620      	mov	r0, r4
 802731c:	f7ff ffe2 	bl	80272e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027320:	68a3      	ldr	r3, [r4, #8]
 8027322:	9901      	ldr	r1, [sp, #4]
 8027324:	9a00      	ldr	r2, [sp, #0]
 8027326:	1ac9      	subs	r1, r1, r3
 8027328:	68e3      	ldr	r3, [r4, #12]
 802732a:	9101      	str	r1, [sp, #4]
 802732c:	1ad2      	subs	r2, r2, r3
 802732e:	2a00      	cmp	r2, #0
 8027330:	9200      	str	r2, [sp, #0]
 8027332:	da0b      	bge.n	802734c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027334:	2301      	movs	r3, #1
 8027336:	2900      	cmp	r1, #0
 8027338:	da0e      	bge.n	8027358 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802733a:	f043 0304 	orr.w	r3, r3, #4
 802733e:	e013      	b.n	8027368 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027340:	f7ff fefc 	bl	802713c <_ZN8touchgfx6Canvas5closeEv>
 8027344:	2800      	cmp	r0, #0
 8027346:	d1e6      	bne.n	8027316 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027348:	b002      	add	sp, #8
 802734a:	bd10      	pop	{r4, pc}
 802734c:	6963      	ldr	r3, [r4, #20]
 802734e:	429a      	cmp	r2, r3
 8027350:	bfac      	ite	ge
 8027352:	2302      	movge	r3, #2
 8027354:	2300      	movlt	r3, #0
 8027356:	e7ee      	b.n	8027336 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027358:	6920      	ldr	r0, [r4, #16]
 802735a:	4281      	cmp	r1, r0
 802735c:	bfac      	ite	ge
 802735e:	2008      	movge	r0, #8
 8027360:	2000      	movlt	r0, #0
 8027362:	4318      	orrs	r0, r3
 8027364:	b2c3      	uxtb	r3, r0
 8027366:	b158      	cbz	r0, 8027380 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027368:	2200      	movs	r2, #0
 802736a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802736e:	9901      	ldr	r1, [sp, #4]
 8027370:	9a00      	ldr	r2, [sp, #0]
 8027372:	66a1      	str	r1, [r4, #104]	; 0x68
 8027374:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027376:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802737a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802737e:	e7e3      	b.n	8027348 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027380:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027384:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027388:	4298      	cmp	r0, r3
 802738a:	d803      	bhi.n	8027394 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802738c:	f104 0020 	add.w	r0, r4, #32
 8027390:	f7ec fe72 	bl	8014078 <_ZN8touchgfx7Outline6moveToEii>
 8027394:	2301      	movs	r3, #1
 8027396:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802739a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802739e:	2300      	movs	r3, #0
 80273a0:	e7e5      	b.n	802736e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80273a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80273a4:	ab02      	add	r3, sp, #8
 80273a6:	4604      	mov	r4, r0
 80273a8:	f843 2d08 	str.w	r2, [r3, #-8]!
 80273ac:	9101      	str	r1, [sp, #4]
 80273ae:	461a      	mov	r2, r3
 80273b0:	a901      	add	r1, sp, #4
 80273b2:	f7ff ff97 	bl	80272e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80273b6:	68a3      	ldr	r3, [r4, #8]
 80273b8:	9901      	ldr	r1, [sp, #4]
 80273ba:	9a00      	ldr	r2, [sp, #0]
 80273bc:	1ac9      	subs	r1, r1, r3
 80273be:	68e3      	ldr	r3, [r4, #12]
 80273c0:	9101      	str	r1, [sp, #4]
 80273c2:	1ad2      	subs	r2, r2, r3
 80273c4:	2a00      	cmp	r2, #0
 80273c6:	9200      	str	r2, [sp, #0]
 80273c8:	db1c      	blt.n	8027404 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80273ca:	6963      	ldr	r3, [r4, #20]
 80273cc:	429a      	cmp	r2, r3
 80273ce:	bfac      	ite	ge
 80273d0:	2002      	movge	r0, #2
 80273d2:	2000      	movlt	r0, #0
 80273d4:	2900      	cmp	r1, #0
 80273d6:	db17      	blt.n	8027408 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80273d8:	6923      	ldr	r3, [r4, #16]
 80273da:	4299      	cmp	r1, r3
 80273dc:	bfac      	ite	ge
 80273de:	2308      	movge	r3, #8
 80273e0:	2300      	movlt	r3, #0
 80273e2:	4303      	orrs	r3, r0
 80273e4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80273e8:	b2dd      	uxtb	r5, r3
 80273ea:	b978      	cbnz	r0, 802740c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80273ec:	f104 0020 	add.w	r0, r4, #32
 80273f0:	f7ff fd30 	bl	8026e54 <_ZN8touchgfx10Rasterizer6lineToEii>
 80273f4:	9b01      	ldr	r3, [sp, #4]
 80273f6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80273f8:	9b00      	ldr	r3, [sp, #0]
 80273fa:	6623      	str	r3, [r4, #96]	; 0x60
 80273fc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027400:	b002      	add	sp, #8
 8027402:	bd70      	pop	{r4, r5, r6, pc}
 8027404:	2001      	movs	r0, #1
 8027406:	e7e5      	b.n	80273d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027408:	2304      	movs	r3, #4
 802740a:	e7ea      	b.n	80273e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802740c:	b113      	cbz	r3, 8027414 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802740e:	ea10 0305 	ands.w	r3, r0, r5
 8027412:	d11c      	bne.n	802744e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027414:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027418:	f104 0620 	add.w	r6, r4, #32
 802741c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027420:	b98b      	cbnz	r3, 8027446 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027422:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027426:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802742a:	4298      	cmp	r0, r3
 802742c:	d802      	bhi.n	8027434 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802742e:	4630      	mov	r0, r6
 8027430:	f7ec fe22 	bl	8014078 <_ZN8touchgfx7Outline6moveToEii>
 8027434:	2301      	movs	r3, #1
 8027436:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802743a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802743e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027442:	4630      	mov	r0, r6
 8027444:	e7d4      	b.n	80273f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027446:	4630      	mov	r0, r6
 8027448:	f7ff fd04 	bl	8026e54 <_ZN8touchgfx10Rasterizer6lineToEii>
 802744c:	e7f7      	b.n	802743e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802744e:	461d      	mov	r5, r3
 8027450:	e7d0      	b.n	80273f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027454 <_ZN8touchgfx6CanvasD1Ev>:
 8027454:	b510      	push	{r4, lr}
 8027456:	4b04      	ldr	r3, [pc, #16]	; (8027468 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027458:	4604      	mov	r4, r0
 802745a:	f840 3b20 	str.w	r3, [r0], #32
 802745e:	f7ec f905 	bl	801366c <_ZN8touchgfx7OutlineD1Ev>
 8027462:	4620      	mov	r0, r4
 8027464:	bd10      	pop	{r4, pc}
 8027466:	bf00      	nop
 8027468:	0802f938 	.word	0x0802f938

0802746c <_ZN8touchgfx6CanvasD0Ev>:
 802746c:	b510      	push	{r4, lr}
 802746e:	4604      	mov	r4, r0
 8027470:	f7ff fff0 	bl	8027454 <_ZN8touchgfx6CanvasD1Ev>
 8027474:	4620      	mov	r0, r4
 8027476:	2170      	movs	r1, #112	; 0x70
 8027478:	f002 fd3d 	bl	8029ef6 <_ZdlPvj>
 802747c:	4620      	mov	r0, r4
 802747e:	bd10      	pop	{r4, pc}

08027480 <_ZN8touchgfx6CircleD1Ev>:
 8027480:	4770      	bx	lr

08027482 <_ZN8touchgfx6CircleD0Ev>:
 8027482:	b510      	push	{r4, lr}
 8027484:	2148      	movs	r1, #72	; 0x48
 8027486:	4604      	mov	r4, r0
 8027488:	f002 fd35 	bl	8029ef6 <_ZdlPvj>
 802748c:	4620      	mov	r0, r4
 802748e:	bd10      	pop	{r4, pc}

08027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027490:	b508      	push	{r3, lr}
 8027492:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027496:	f7ea fdb5 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802749a:	bd08      	pop	{r3, pc}

0802749c <_ZN8touchgfx6CircleC1Ev>:
 802749c:	b510      	push	{r4, lr}
 802749e:	4604      	mov	r4, r0
 80274a0:	f7ea fc4c 	bl	8011d3c <_ZN8touchgfx12CanvasWidgetC1Ev>
 80274a4:	4b08      	ldr	r3, [pc, #32]	; (80274c8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80274a6:	6023      	str	r3, [r4, #0]
 80274a8:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80274ac:	2300      	movs	r3, #0
 80274ae:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80274b2:	f24b 4205 	movw	r2, #46085	; 0xb405
 80274b6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80274ba:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80274be:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80274c2:	60a3      	str	r3, [r4, #8]
 80274c4:	4620      	mov	r0, r4
 80274c6:	bd10      	pop	{r4, pc}
 80274c8:	0802f94c 	.word	0x0802f94c

080274cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80274cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80274d0:	428a      	cmp	r2, r1
 80274d2:	4680      	mov	r8, r0
 80274d4:	4610      	mov	r0, r2
 80274d6:	4699      	mov	r9, r3
 80274d8:	bfa6      	itte	ge
 80274da:	460a      	movge	r2, r1
 80274dc:	4603      	movge	r3, r0
 80274de:	460b      	movlt	r3, r1
 80274e0:	1a99      	subs	r1, r3, r2
 80274e2:	b085      	sub	sp, #20
 80274e4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80274e8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80274ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80274ee:	bfa4      	itt	ge
 80274f0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80274f4:	2200      	movge	r2, #0
 80274f6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80274fa:	9300      	str	r3, [sp, #0]
 80274fc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027500:	f102 0b01 	add.w	fp, r2, #1
 8027504:	2c00      	cmp	r4, #0
 8027506:	f040 80af 	bne.w	8027668 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802750a:	4610      	mov	r0, r2
 802750c:	9201      	str	r2, [sp, #4]
 802750e:	f7ea fd79 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027512:	a903      	add	r1, sp, #12
 8027514:	9003      	str	r0, [sp, #12]
 8027516:	4650      	mov	r0, sl
 8027518:	f7ea fc3c 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802751c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027520:	9a01      	ldr	r2, [sp, #4]
 8027522:	4408      	add	r0, r1
 8027524:	f8d9 1000 	ldr.w	r1, [r9]
 8027528:	4281      	cmp	r1, r0
 802752a:	bfc8      	it	gt
 802752c:	f8c9 0000 	strgt.w	r0, [r9]
 8027530:	6839      	ldr	r1, [r7, #0]
 8027532:	4288      	cmp	r0, r1
 8027534:	bfc8      	it	gt
 8027536:	6038      	strgt	r0, [r7, #0]
 8027538:	4610      	mov	r0, r2
 802753a:	f7ff ffa9 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802753e:	a903      	add	r1, sp, #12
 8027540:	9003      	str	r0, [sp, #12]
 8027542:	4650      	mov	r0, sl
 8027544:	f7ea fc26 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027548:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802754c:	1a10      	subs	r0, r2, r0
 802754e:	6832      	ldr	r2, [r6, #0]
 8027550:	4282      	cmp	r2, r0
 8027552:	bfc8      	it	gt
 8027554:	6030      	strgt	r0, [r6, #0]
 8027556:	682a      	ldr	r2, [r5, #0]
 8027558:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802755c:	4290      	cmp	r0, r2
 802755e:	fb9b f2f1 	sdiv	r2, fp, r1
 8027562:	fb01 b212 	mls	r2, r1, r2, fp
 8027566:	eba1 0202 	sub.w	r2, r1, r2
 802756a:	bfc8      	it	gt
 802756c:	6028      	strgt	r0, [r5, #0]
 802756e:	fb92 f0f1 	sdiv	r0, r2, r1
 8027572:	fb01 2210 	mls	r2, r1, r0, r2
 8027576:	4493      	add	fp, r2
 8027578:	9b00      	ldr	r3, [sp, #0]
 802757a:	455b      	cmp	r3, fp
 802757c:	db2a      	blt.n	80275d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802757e:	4658      	mov	r0, fp
 8027580:	f7ea fd40 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027584:	a903      	add	r1, sp, #12
 8027586:	9003      	str	r0, [sp, #12]
 8027588:	4650      	mov	r0, sl
 802758a:	f7ea fc03 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802758e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027592:	4410      	add	r0, r2
 8027594:	f8d9 2000 	ldr.w	r2, [r9]
 8027598:	4282      	cmp	r2, r0
 802759a:	bfc8      	it	gt
 802759c:	f8c9 0000 	strgt.w	r0, [r9]
 80275a0:	683a      	ldr	r2, [r7, #0]
 80275a2:	4290      	cmp	r0, r2
 80275a4:	bfc8      	it	gt
 80275a6:	6038      	strgt	r0, [r7, #0]
 80275a8:	4658      	mov	r0, fp
 80275aa:	f7ff ff71 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80275ae:	a903      	add	r1, sp, #12
 80275b0:	9003      	str	r0, [sp, #12]
 80275b2:	4650      	mov	r0, sl
 80275b4:	f7ea fbee 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275b8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80275bc:	1a10      	subs	r0, r2, r0
 80275be:	6832      	ldr	r2, [r6, #0]
 80275c0:	4282      	cmp	r2, r0
 80275c2:	bfc8      	it	gt
 80275c4:	6030      	strgt	r0, [r6, #0]
 80275c6:	682a      	ldr	r2, [r5, #0]
 80275c8:	4290      	cmp	r0, r2
 80275ca:	bfc8      	it	gt
 80275cc:	6028      	strgt	r0, [r5, #0]
 80275ce:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80275d2:	e7d1      	b.n	8027578 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80275d4:	9b00      	ldr	r3, [sp, #0]
 80275d6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80275da:	455b      	cmp	r3, fp
 80275dc:	dd27      	ble.n	802762e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80275de:	4618      	mov	r0, r3
 80275e0:	f7ea fd10 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80275e4:	a903      	add	r1, sp, #12
 80275e6:	9003      	str	r0, [sp, #12]
 80275e8:	4650      	mov	r0, sl
 80275ea:	f7ea fbd3 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275ee:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80275f2:	4410      	add	r0, r2
 80275f4:	f8d9 2000 	ldr.w	r2, [r9]
 80275f8:	4282      	cmp	r2, r0
 80275fa:	bfc8      	it	gt
 80275fc:	f8c9 0000 	strgt.w	r0, [r9]
 8027600:	683a      	ldr	r2, [r7, #0]
 8027602:	4290      	cmp	r0, r2
 8027604:	bfc8      	it	gt
 8027606:	6038      	strgt	r0, [r7, #0]
 8027608:	9800      	ldr	r0, [sp, #0]
 802760a:	f7ff ff41 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802760e:	a903      	add	r1, sp, #12
 8027610:	9003      	str	r0, [sp, #12]
 8027612:	4650      	mov	r0, sl
 8027614:	f7ea fbbe 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027618:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802761c:	1a10      	subs	r0, r2, r0
 802761e:	6832      	ldr	r2, [r6, #0]
 8027620:	4282      	cmp	r2, r0
 8027622:	bfc8      	it	gt
 8027624:	6030      	strgt	r0, [r6, #0]
 8027626:	682a      	ldr	r2, [r5, #0]
 8027628:	4290      	cmp	r0, r2
 802762a:	bfc8      	it	gt
 802762c:	6028      	strgt	r0, [r5, #0]
 802762e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027632:	f8d9 1000 	ldr.w	r1, [r9]
 8027636:	4291      	cmp	r1, r2
 8027638:	bfc8      	it	gt
 802763a:	f8c9 2000 	strgt.w	r2, [r9]
 802763e:	683a      	ldr	r2, [r7, #0]
 8027640:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027644:	429a      	cmp	r2, r3
 8027646:	bfb8      	it	lt
 8027648:	603b      	strlt	r3, [r7, #0]
 802764a:	6832      	ldr	r2, [r6, #0]
 802764c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027650:	429a      	cmp	r2, r3
 8027652:	bfc8      	it	gt
 8027654:	6033      	strgt	r3, [r6, #0]
 8027656:	682a      	ldr	r2, [r5, #0]
 8027658:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802765c:	429a      	cmp	r2, r3
 802765e:	da00      	bge.n	8027662 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027660:	602b      	str	r3, [r5, #0]
 8027662:	b005      	add	sp, #20
 8027664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027668:	2002      	movs	r0, #2
 802766a:	3401      	adds	r4, #1
 802766c:	fb94 f4f0 	sdiv	r4, r4, r0
 8027670:	4610      	mov	r0, r2
 8027672:	9201      	str	r2, [sp, #4]
 8027674:	f7ea fcc6 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027678:	a903      	add	r1, sp, #12
 802767a:	9003      	str	r0, [sp, #12]
 802767c:	4650      	mov	r0, sl
 802767e:	f7ea fb89 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027682:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027686:	9a01      	ldr	r2, [sp, #4]
 8027688:	4408      	add	r0, r1
 802768a:	f8d9 1000 	ldr.w	r1, [r9]
 802768e:	1b03      	subs	r3, r0, r4
 8027690:	4299      	cmp	r1, r3
 8027692:	bfc8      	it	gt
 8027694:	f8c9 3000 	strgt.w	r3, [r9]
 8027698:	6839      	ldr	r1, [r7, #0]
 802769a:	428b      	cmp	r3, r1
 802769c:	bfc8      	it	gt
 802769e:	603b      	strgt	r3, [r7, #0]
 80276a0:	f8d9 1000 	ldr.w	r1, [r9]
 80276a4:	4420      	add	r0, r4
 80276a6:	4281      	cmp	r1, r0
 80276a8:	bfc8      	it	gt
 80276aa:	f8c9 0000 	strgt.w	r0, [r9]
 80276ae:	6839      	ldr	r1, [r7, #0]
 80276b0:	4288      	cmp	r0, r1
 80276b2:	bfc8      	it	gt
 80276b4:	6038      	strgt	r0, [r7, #0]
 80276b6:	4610      	mov	r0, r2
 80276b8:	f7ff feea 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80276bc:	a903      	add	r1, sp, #12
 80276be:	9003      	str	r0, [sp, #12]
 80276c0:	4650      	mov	r0, sl
 80276c2:	f7ea fb67 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276c6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80276ca:	1a10      	subs	r0, r2, r0
 80276cc:	6832      	ldr	r2, [r6, #0]
 80276ce:	1b01      	subs	r1, r0, r4
 80276d0:	428a      	cmp	r2, r1
 80276d2:	bfc8      	it	gt
 80276d4:	6031      	strgt	r1, [r6, #0]
 80276d6:	682a      	ldr	r2, [r5, #0]
 80276d8:	4291      	cmp	r1, r2
 80276da:	bfc8      	it	gt
 80276dc:	6029      	strgt	r1, [r5, #0]
 80276de:	6832      	ldr	r2, [r6, #0]
 80276e0:	4420      	add	r0, r4
 80276e2:	4282      	cmp	r2, r0
 80276e4:	bfc8      	it	gt
 80276e6:	6030      	strgt	r0, [r6, #0]
 80276e8:	682a      	ldr	r2, [r5, #0]
 80276ea:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80276ee:	4290      	cmp	r0, r2
 80276f0:	fb9b f2f1 	sdiv	r2, fp, r1
 80276f4:	fb01 b212 	mls	r2, r1, r2, fp
 80276f8:	eba1 0202 	sub.w	r2, r1, r2
 80276fc:	bfc8      	it	gt
 80276fe:	6028      	strgt	r0, [r5, #0]
 8027700:	fb92 f0f1 	sdiv	r0, r2, r1
 8027704:	fb01 2210 	mls	r2, r1, r0, r2
 8027708:	4493      	add	fp, r2
 802770a:	9b00      	ldr	r3, [sp, #0]
 802770c:	455b      	cmp	r3, fp
 802770e:	db40      	blt.n	8027792 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027710:	4658      	mov	r0, fp
 8027712:	f7ea fc77 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027716:	a903      	add	r1, sp, #12
 8027718:	9003      	str	r0, [sp, #12]
 802771a:	4650      	mov	r0, sl
 802771c:	f7ea fb3a 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027720:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027724:	4410      	add	r0, r2
 8027726:	f8d9 2000 	ldr.w	r2, [r9]
 802772a:	1b01      	subs	r1, r0, r4
 802772c:	428a      	cmp	r2, r1
 802772e:	bfc8      	it	gt
 8027730:	f8c9 1000 	strgt.w	r1, [r9]
 8027734:	683a      	ldr	r2, [r7, #0]
 8027736:	4291      	cmp	r1, r2
 8027738:	bfc8      	it	gt
 802773a:	6039      	strgt	r1, [r7, #0]
 802773c:	f8d9 2000 	ldr.w	r2, [r9]
 8027740:	4420      	add	r0, r4
 8027742:	4282      	cmp	r2, r0
 8027744:	bfc8      	it	gt
 8027746:	f8c9 0000 	strgt.w	r0, [r9]
 802774a:	683a      	ldr	r2, [r7, #0]
 802774c:	4290      	cmp	r0, r2
 802774e:	bfc8      	it	gt
 8027750:	6038      	strgt	r0, [r7, #0]
 8027752:	4658      	mov	r0, fp
 8027754:	f7ff fe9c 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027758:	a903      	add	r1, sp, #12
 802775a:	9003      	str	r0, [sp, #12]
 802775c:	4650      	mov	r0, sl
 802775e:	f7ea fb19 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027762:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027766:	1a10      	subs	r0, r2, r0
 8027768:	6832      	ldr	r2, [r6, #0]
 802776a:	1b01      	subs	r1, r0, r4
 802776c:	428a      	cmp	r2, r1
 802776e:	bfc8      	it	gt
 8027770:	6031      	strgt	r1, [r6, #0]
 8027772:	682a      	ldr	r2, [r5, #0]
 8027774:	4291      	cmp	r1, r2
 8027776:	bfc8      	it	gt
 8027778:	6029      	strgt	r1, [r5, #0]
 802777a:	6832      	ldr	r2, [r6, #0]
 802777c:	4420      	add	r0, r4
 802777e:	4282      	cmp	r2, r0
 8027780:	bfc8      	it	gt
 8027782:	6030      	strgt	r0, [r6, #0]
 8027784:	682a      	ldr	r2, [r5, #0]
 8027786:	4290      	cmp	r0, r2
 8027788:	bfc8      	it	gt
 802778a:	6028      	strgt	r0, [r5, #0]
 802778c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027790:	e7bb      	b.n	802770a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027792:	9b00      	ldr	r3, [sp, #0]
 8027794:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027798:	455b      	cmp	r3, fp
 802779a:	f77f af62 	ble.w	8027662 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802779e:	4618      	mov	r0, r3
 80277a0:	f7ea fc30 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80277a4:	a903      	add	r1, sp, #12
 80277a6:	9003      	str	r0, [sp, #12]
 80277a8:	4650      	mov	r0, sl
 80277aa:	f7ea faf3 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277ae:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80277b2:	4410      	add	r0, r2
 80277b4:	f8d9 2000 	ldr.w	r2, [r9]
 80277b8:	1b01      	subs	r1, r0, r4
 80277ba:	428a      	cmp	r2, r1
 80277bc:	bfc8      	it	gt
 80277be:	f8c9 1000 	strgt.w	r1, [r9]
 80277c2:	683a      	ldr	r2, [r7, #0]
 80277c4:	4291      	cmp	r1, r2
 80277c6:	bfc8      	it	gt
 80277c8:	6039      	strgt	r1, [r7, #0]
 80277ca:	f8d9 2000 	ldr.w	r2, [r9]
 80277ce:	4420      	add	r0, r4
 80277d0:	4282      	cmp	r2, r0
 80277d2:	bfc8      	it	gt
 80277d4:	f8c9 0000 	strgt.w	r0, [r9]
 80277d8:	683b      	ldr	r3, [r7, #0]
 80277da:	4298      	cmp	r0, r3
 80277dc:	bfc8      	it	gt
 80277de:	6038      	strgt	r0, [r7, #0]
 80277e0:	9800      	ldr	r0, [sp, #0]
 80277e2:	f7ff fe55 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80277e6:	a903      	add	r1, sp, #12
 80277e8:	9003      	str	r0, [sp, #12]
 80277ea:	4650      	mov	r0, sl
 80277ec:	f7ea fad2 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277f0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80277f4:	6832      	ldr	r2, [r6, #0]
 80277f6:	1a18      	subs	r0, r3, r0
 80277f8:	1b03      	subs	r3, r0, r4
 80277fa:	429a      	cmp	r2, r3
 80277fc:	bfc8      	it	gt
 80277fe:	6033      	strgt	r3, [r6, #0]
 8027800:	682a      	ldr	r2, [r5, #0]
 8027802:	4293      	cmp	r3, r2
 8027804:	bfc8      	it	gt
 8027806:	602b      	strgt	r3, [r5, #0]
 8027808:	6833      	ldr	r3, [r6, #0]
 802780a:	4404      	add	r4, r0
 802780c:	42a3      	cmp	r3, r4
 802780e:	bfc8      	it	gt
 8027810:	6034      	strgt	r4, [r6, #0]
 8027812:	682b      	ldr	r3, [r5, #0]
 8027814:	429c      	cmp	r4, r3
 8027816:	bfc8      	it	gt
 8027818:	602c      	strgt	r4, [r5, #0]
 802781a:	e722      	b.n	8027662 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802781c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802781c:	b530      	push	{r4, r5, lr}
 802781e:	4604      	mov	r4, r0
 8027820:	4608      	mov	r0, r1
 8027822:	4611      	mov	r1, r2
 8027824:	461a      	mov	r2, r3
 8027826:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802782a:	b089      	sub	sp, #36	; 0x24
 802782c:	015b      	lsls	r3, r3, #5
 802782e:	9304      	str	r3, [sp, #16]
 8027830:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027834:	2500      	movs	r5, #0
 8027836:	015b      	lsls	r3, r3, #5
 8027838:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802783c:	ab07      	add	r3, sp, #28
 802783e:	9302      	str	r3, [sp, #8]
 8027840:	ab06      	add	r3, sp, #24
 8027842:	9301      	str	r3, [sp, #4]
 8027844:	ab05      	add	r3, sp, #20
 8027846:	9300      	str	r3, [sp, #0]
 8027848:	ab04      	add	r3, sp, #16
 802784a:	9505      	str	r5, [sp, #20]
 802784c:	f7ff fe3e 	bl	80274cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8027850:	2520      	movs	r5, #32
 8027852:	9a04      	ldr	r2, [sp, #16]
 8027854:	9805      	ldr	r0, [sp, #20]
 8027856:	fb92 f2f5 	sdiv	r2, r2, r5
 802785a:	fb90 f0f5 	sdiv	r0, r0, r5
 802785e:	b292      	uxth	r2, r2
 8027860:	3002      	adds	r0, #2
 8027862:	1a80      	subs	r0, r0, r2
 8027864:	9b06      	ldr	r3, [sp, #24]
 8027866:	9907      	ldr	r1, [sp, #28]
 8027868:	fb93 f3f5 	sdiv	r3, r3, r5
 802786c:	fb91 f1f5 	sdiv	r1, r1, r5
 8027870:	b29b      	uxth	r3, r3
 8027872:	3102      	adds	r1, #2
 8027874:	1ac9      	subs	r1, r1, r3
 8027876:	3a01      	subs	r2, #1
 8027878:	3b01      	subs	r3, #1
 802787a:	80a0      	strh	r0, [r4, #4]
 802787c:	4620      	mov	r0, r4
 802787e:	8022      	strh	r2, [r4, #0]
 8027880:	8063      	strh	r3, [r4, #2]
 8027882:	80e1      	strh	r1, [r4, #6]
 8027884:	b009      	add	sp, #36	; 0x24
 8027886:	bd30      	pop	{r4, r5, pc}

08027888 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027888:	b510      	push	{r4, lr}
 802788a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802788e:	4604      	mov	r4, r0
 8027890:	f7ff ffc4 	bl	802781c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027894:	4620      	mov	r0, r4
 8027896:	bd10      	pop	{r4, pc}

08027898 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802789a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802789e:	4606      	mov	r6, r0
 80278a0:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80278a4:	6813      	ldr	r3, [r2, #0]
 80278a6:	42a5      	cmp	r5, r4
 80278a8:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80278ac:	da2b      	bge.n	8027906 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80278ae:	42a3      	cmp	r3, r4
 80278b0:	dd14      	ble.n	80278dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80278b2:	b168      	cbz	r0, 80278d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80278b4:	4267      	negs	r7, r4
 80278b6:	fb97 f2f0 	sdiv	r2, r7, r0
 80278ba:	fb00 7212 	mls	r2, r0, r2, r7
 80278be:	1a82      	subs	r2, r0, r2
 80278c0:	fb92 f7f0 	sdiv	r7, r2, r0
 80278c4:	fb00 2017 	mls	r0, r0, r7, r2
 80278c8:	1a24      	subs	r4, r4, r0
 80278ca:	42ac      	cmp	r4, r5
 80278cc:	bfb8      	it	lt
 80278ce:	462c      	movlt	r4, r5
 80278d0:	4630      	mov	r0, r6
 80278d2:	4622      	mov	r2, r4
 80278d4:	f7ff ffa2 	bl	802781c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80278d8:	4630      	mov	r0, r6
 80278da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80278dc:	42ab      	cmp	r3, r5
 80278de:	dd0e      	ble.n	80278fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80278e0:	b168      	cbz	r0, 80278fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80278e2:	425f      	negs	r7, r3
 80278e4:	fb97 f2f0 	sdiv	r2, r7, r0
 80278e8:	fb00 7212 	mls	r2, r0, r2, r7
 80278ec:	1a82      	subs	r2, r0, r2
 80278ee:	fb92 f7f0 	sdiv	r7, r2, r0
 80278f2:	fb00 2017 	mls	r0, r0, r7, r2
 80278f6:	1a1b      	subs	r3, r3, r0
 80278f8:	42ab      	cmp	r3, r5
 80278fa:	bfb8      	it	lt
 80278fc:	462b      	movlt	r3, r5
 80278fe:	4622      	mov	r2, r4
 8027900:	461c      	mov	r4, r3
 8027902:	4613      	mov	r3, r2
 8027904:	e7e4      	b.n	80278d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027906:	42a3      	cmp	r3, r4
 8027908:	da10      	bge.n	802792c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802790a:	b148      	cbz	r0, 8027920 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802790c:	fb94 f2f0 	sdiv	r2, r4, r0
 8027910:	fb00 4212 	mls	r2, r0, r2, r4
 8027914:	1a82      	subs	r2, r0, r2
 8027916:	fb92 f7f0 	sdiv	r7, r2, r0
 802791a:	fb00 2017 	mls	r0, r0, r7, r2
 802791e:	4404      	add	r4, r0
 8027920:	42a5      	cmp	r5, r4
 8027922:	bfa8      	it	ge
 8027924:	4625      	movge	r5, r4
 8027926:	461c      	mov	r4, r3
 8027928:	462b      	mov	r3, r5
 802792a:	e7d1      	b.n	80278d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802792c:	42ab      	cmp	r3, r5
 802792e:	dacf      	bge.n	80278d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027930:	2800      	cmp	r0, #0
 8027932:	d0cd      	beq.n	80278d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027934:	fb93 f2f0 	sdiv	r2, r3, r0
 8027938:	fb00 3212 	mls	r2, r0, r2, r3
 802793c:	1a82      	subs	r2, r0, r2
 802793e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027942:	fb00 2017 	mls	r0, r0, r7, r2
 8027946:	4403      	add	r3, r0
 8027948:	42ab      	cmp	r3, r5
 802794a:	bfa8      	it	ge
 802794c:	462b      	movge	r3, r5
 802794e:	e7bf      	b.n	80278d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08027950 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8027950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027954:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027958:	42ae      	cmp	r6, r5
 802795a:	bfa2      	ittt	ge
 802795c:	4633      	movge	r3, r6
 802795e:	462e      	movge	r6, r5
 8027960:	461d      	movge	r5, r3
 8027962:	1bab      	subs	r3, r5, r6
 8027964:	468b      	mov	fp, r1
 8027966:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027968:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802796c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8027970:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027974:	f04f 0220 	mov.w	r2, #32
 8027978:	b0ab      	sub	sp, #172	; 0xac
 802797a:	4604      	mov	r4, r0
 802797c:	bfa4      	itt	ge
 802797e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027982:	2600      	movge	r6, #0
 8027984:	fb99 f9f2 	sdiv	r9, r9, r2
 8027988:	fb9a faf2 	sdiv	sl, sl, r2
 802798c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802798e:	2900      	cmp	r1, #0
 8027990:	f000 80f5 	beq.w	8027b7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027994:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027998:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802799c:	eba9 0700 	sub.w	r7, r9, r0
 80279a0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80279a4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80279a8:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80279ac:	ebaa 0802 	sub.w	r8, sl, r2
 80279b0:	4407      	add	r7, r0
 80279b2:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80279b6:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80279ba:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80279be:	b23f      	sxth	r7, r7
 80279c0:	4490      	add	r8, r2
 80279c2:	eba9 0707 	sub.w	r7, r9, r7
 80279c6:	fa0f f888 	sxth.w	r8, r8
 80279ca:	ebaa 0808 	sub.w	r8, sl, r8
 80279ce:	2f00      	cmp	r7, #0
 80279d0:	bfb8      	it	lt
 80279d2:	427f      	neglt	r7, r7
 80279d4:	f1b8 0f00 	cmp.w	r8, #0
 80279d8:	bfb8      	it	lt
 80279da:	f1c8 0800 	rsblt	r8, r8, #0
 80279de:	45bc      	cmp	ip, r7
 80279e0:	bfcc      	ite	gt
 80279e2:	f10c 0701 	addgt.w	r7, ip, #1
 80279e6:	3701      	addle	r7, #1
 80279e8:	4540      	cmp	r0, r8
 80279ea:	bfc8      	it	gt
 80279ec:	f100 0801 	addgt.w	r8, r0, #1
 80279f0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80279f4:	f100 0001 	add.w	r0, r0, #1
 80279f8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80279fc:	f04f 0202 	mov.w	r2, #2
 8027a00:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027a04:	fb91 f1f2 	sdiv	r1, r1, r2
 8027a08:	eba3 0301 	sub.w	r3, r3, r1
 8027a0c:	bfd8      	it	le
 8027a0e:	f108 0801 	addle.w	r8, r8, #1
 8027a12:	9201      	str	r2, [sp, #4]
 8027a14:	930d      	str	r3, [sp, #52]	; 0x34
 8027a16:	f7ea fad5 	bl	8011fc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8027a1a:	a92a      	add	r1, sp, #168	; 0xa8
 8027a1c:	fb08 f808 	mul.w	r8, r8, r8
 8027a20:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027a24:	a80d      	add	r0, sp, #52	; 0x34
 8027a26:	f7ea f9b5 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a2a:	fb07 8707 	mla	r7, r7, r7, r8
 8027a2e:	f04f 0c20 	mov.w	ip, #32
 8027a32:	fb90 f0fc 	sdiv	r0, r0, ip
 8027a36:	4340      	muls	r0, r0
 8027a38:	4287      	cmp	r7, r0
 8027a3a:	9a01      	ldr	r2, [sp, #4]
 8027a3c:	da04      	bge.n	8027a48 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8027a3e:	2401      	movs	r4, #1
 8027a40:	4620      	mov	r0, r4
 8027a42:	b02b      	add	sp, #172	; 0xac
 8027a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a48:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8027a4a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8027a4c:	fb91 f3f2 	sdiv	r3, r1, r2
 8027a50:	4403      	add	r3, r0
 8027a52:	fb93 f3fc 	sdiv	r3, r3, ip
 8027a56:	f9bb 1000 	ldrsh.w	r1, [fp]
 8027a5a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8027a5e:	440a      	add	r2, r1
 8027a60:	b212      	sxth	r2, r2
 8027a62:	454a      	cmp	r2, r9
 8027a64:	bfa8      	it	ge
 8027a66:	464a      	movge	r2, r9
 8027a68:	428a      	cmp	r2, r1
 8027a6a:	bfac      	ite	ge
 8027a6c:	eba9 0902 	subge.w	r9, r9, r2
 8027a70:	eba9 0901 	sublt.w	r9, r9, r1
 8027a74:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027a78:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8027a7c:	440a      	add	r2, r1
 8027a7e:	b212      	sxth	r2, r2
 8027a80:	4552      	cmp	r2, sl
 8027a82:	bfa8      	it	ge
 8027a84:	4652      	movge	r2, sl
 8027a86:	428a      	cmp	r2, r1
 8027a88:	bfac      	ite	ge
 8027a8a:	ebaa 0a02 	subge.w	sl, sl, r2
 8027a8e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027a92:	3301      	adds	r3, #1
 8027a94:	fb0a fa0a 	mul.w	sl, sl, sl
 8027a98:	fb09 a909 	mla	r9, r9, r9, sl
 8027a9c:	435b      	muls	r3, r3
 8027a9e:	4599      	cmp	r9, r3
 8027aa0:	dccd      	bgt.n	8027a3e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027aa2:	465a      	mov	r2, fp
 8027aa4:	4621      	mov	r1, r4
 8027aa6:	a80e      	add	r0, sp, #56	; 0x38
 8027aa8:	f7ff faae 	bl	8027008 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8027aac:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8027aae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027ab0:	9209      	str	r2, [sp, #36]	; 0x24
 8027ab2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027ab6:	930a      	str	r3, [sp, #40]	; 0x28
 8027ab8:	dd07      	ble.n	8027aca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8027aba:	2102      	movs	r1, #2
 8027abc:	fb93 f3f1 	sdiv	r3, r3, r1
 8027ac0:	4413      	add	r3, r2
 8027ac2:	930a      	str	r3, [sp, #40]	; 0x28
 8027ac4:	fb93 f3f1 	sdiv	r3, r3, r1
 8027ac8:	9309      	str	r3, [sp, #36]	; 0x24
 8027aca:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027ace:	4630      	mov	r0, r6
 8027ad0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027ad4:	930b      	str	r3, [sp, #44]	; 0x2c
 8027ad6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8027ada:	f7ea fa93 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ade:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027ae2:	f04f 0a02 	mov.w	sl, #2
 8027ae6:	f849 0d74 	str.w	r0, [r9, #-116]!
 8027aea:	a80b      	add	r0, sp, #44	; 0x2c
 8027aec:	4649      	mov	r1, r9
 8027aee:	f7ea f951 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027af2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027af4:	fb90 f0fa 	sdiv	r0, r0, sl
 8027af8:	eb00 0b03 	add.w	fp, r0, r3
 8027afc:	4630      	mov	r0, r6
 8027afe:	f7ff fcc7 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b02:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027b06:	017f      	lsls	r7, r7, #5
 8027b08:	f848 0d78 	str.w	r0, [r8, #-120]!
 8027b0c:	a80b      	add	r0, sp, #44	; 0x2c
 8027b0e:	4641      	mov	r1, r8
 8027b10:	f7ea f940 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b14:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b16:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b1a:	4659      	mov	r1, fp
 8027b1c:	1a12      	subs	r2, r2, r0
 8027b1e:	a80e      	add	r0, sp, #56	; 0x38
 8027b20:	f7ff fbf2 	bl	8027308 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027b24:	f106 0a20 	add.w	sl, r6, #32
 8027b28:	bb67      	cbnz	r7, 8027b84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027b2a:	46b3      	mov	fp, r6
 8027b2c:	45aa      	cmp	sl, r5
 8027b2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027b30:	dc33      	bgt.n	8027b9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027b32:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027b34:	4650      	mov	r0, sl
 8027b36:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027b3a:	920b      	str	r2, [sp, #44]	; 0x2c
 8027b3c:	f7ea fa62 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b40:	4641      	mov	r1, r8
 8027b42:	900c      	str	r0, [sp, #48]	; 0x30
 8027b44:	a80b      	add	r0, sp, #44	; 0x2c
 8027b46:	f7ea f925 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027b4c:	2302      	movs	r3, #2
 8027b4e:	fb90 f0f3 	sdiv	r0, r0, r3
 8027b52:	eb00 0b02 	add.w	fp, r0, r2
 8027b56:	4650      	mov	r0, sl
 8027b58:	f7ff fc9a 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b5c:	4649      	mov	r1, r9
 8027b5e:	900d      	str	r0, [sp, #52]	; 0x34
 8027b60:	a80b      	add	r0, sp, #44	; 0x2c
 8027b62:	f7ea f917 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b66:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b68:	2302      	movs	r3, #2
 8027b6a:	4659      	mov	r1, fp
 8027b6c:	fb90 f0f3 	sdiv	r0, r0, r3
 8027b70:	1a12      	subs	r2, r2, r0
 8027b72:	a80e      	add	r0, sp, #56	; 0x38
 8027b74:	46d3      	mov	fp, sl
 8027b76:	f7ff fc14 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b7a:	44ba      	add	sl, r7
 8027b7c:	e7d6      	b.n	8027b2c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027b7e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027b82:	e768      	b.n	8027a56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027b84:	fb9a f2f7 	sdiv	r2, sl, r7
 8027b88:	fb07 a212 	mls	r2, r7, r2, sl
 8027b8c:	1aba      	subs	r2, r7, r2
 8027b8e:	fb92 f1f7 	sdiv	r1, r2, r7
 8027b92:	fb07 2211 	mls	r2, r7, r1, r2
 8027b96:	4492      	add	sl, r2
 8027b98:	e7c7      	b.n	8027b2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027b9a:	45ab      	cmp	fp, r5
 8027b9c:	da23      	bge.n	8027be6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027b9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027ba0:	4628      	mov	r0, r5
 8027ba2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027ba6:	920b      	str	r2, [sp, #44]	; 0x2c
 8027ba8:	f7ea fa2c 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bac:	4641      	mov	r1, r8
 8027bae:	900c      	str	r0, [sp, #48]	; 0x30
 8027bb0:	a80b      	add	r0, sp, #44	; 0x2c
 8027bb2:	f7ea f8ef 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bb6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027bb8:	f04f 0a02 	mov.w	sl, #2
 8027bbc:	fb90 f0fa 	sdiv	r0, r0, sl
 8027bc0:	4403      	add	r3, r0
 8027bc2:	4628      	mov	r0, r5
 8027bc4:	9301      	str	r3, [sp, #4]
 8027bc6:	f7ff fc63 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bca:	4649      	mov	r1, r9
 8027bcc:	900d      	str	r0, [sp, #52]	; 0x34
 8027bce:	a80b      	add	r0, sp, #44	; 0x2c
 8027bd0:	f7ea f8e0 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bd4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027bd6:	9b01      	ldr	r3, [sp, #4]
 8027bd8:	fb90 f0fa 	sdiv	r0, r0, sl
 8027bdc:	4619      	mov	r1, r3
 8027bde:	1a12      	subs	r2, r2, r0
 8027be0:	a80e      	add	r0, sp, #56	; 0x38
 8027be2:	f7ff fbde 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027be6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027be8:	b99b      	cbnz	r3, 8027c12 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027bea:	1bad      	subs	r5, r5, r6
 8027bec:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027bf0:	da04      	bge.n	8027bfc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027bf2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027bf6:	a80e      	add	r0, sp, #56	; 0x38
 8027bf8:	f7ff fbd3 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027bfc:	21ff      	movs	r1, #255	; 0xff
 8027bfe:	a80e      	add	r0, sp, #56	; 0x38
 8027c00:	f7ff fabe 	bl	8027180 <_ZN8touchgfx6Canvas6renderEh>
 8027c04:	4604      	mov	r4, r0
 8027c06:	4b8a      	ldr	r3, [pc, #552]	; (8027e30 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027c08:	930e      	str	r3, [sp, #56]	; 0x38
 8027c0a:	a816      	add	r0, sp, #88	; 0x58
 8027c0c:	f7eb fd2e 	bl	801366c <_ZN8touchgfx7OutlineD1Ev>
 8027c10:	e716      	b.n	8027a40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027c12:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027c16:	429a      	cmp	r2, r3
 8027c18:	f0c0 8107 	bcc.w	8027e2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027c1c:	1bab      	subs	r3, r5, r6
 8027c1e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027c22:	9301      	str	r3, [sp, #4]
 8027c24:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027c28:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027c2c:	da43      	bge.n	8027cb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027c2e:	4628      	mov	r0, r5
 8027c30:	f7ea f9e8 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c34:	4649      	mov	r1, r9
 8027c36:	900d      	str	r0, [sp, #52]	; 0x34
 8027c38:	a809      	add	r0, sp, #36	; 0x24
 8027c3a:	f7ea f8ab 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c40:	18c3      	adds	r3, r0, r3
 8027c42:	4628      	mov	r0, r5
 8027c44:	9303      	str	r3, [sp, #12]
 8027c46:	f7ff fc23 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c4a:	4649      	mov	r1, r9
 8027c4c:	900d      	str	r0, [sp, #52]	; 0x34
 8027c4e:	a809      	add	r0, sp, #36	; 0x24
 8027c50:	f7ea f8a0 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027c56:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027c5a:	1a1b      	subs	r3, r3, r0
 8027c5c:	9302      	str	r3, [sp, #8]
 8027c5e:	9204      	str	r2, [sp, #16]
 8027c60:	eb0a 0305 	add.w	r3, sl, r5
 8027c64:	9a04      	ldr	r2, [sp, #16]
 8027c66:	4293      	cmp	r3, r2
 8027c68:	da25      	bge.n	8027cb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027c6a:	4618      	mov	r0, r3
 8027c6c:	9306      	str	r3, [sp, #24]
 8027c6e:	f7ea f9c9 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c72:	4649      	mov	r1, r9
 8027c74:	900d      	str	r0, [sp, #52]	; 0x34
 8027c76:	a80a      	add	r0, sp, #40	; 0x28
 8027c78:	f7ea f88c 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c7c:	9b03      	ldr	r3, [sp, #12]
 8027c7e:	2202      	movs	r2, #2
 8027c80:	fb90 f0f2 	sdiv	r0, r0, r2
 8027c84:	18c3      	adds	r3, r0, r3
 8027c86:	9305      	str	r3, [sp, #20]
 8027c88:	9b06      	ldr	r3, [sp, #24]
 8027c8a:	9207      	str	r2, [sp, #28]
 8027c8c:	4618      	mov	r0, r3
 8027c8e:	f7ff fbff 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c92:	a92a      	add	r1, sp, #168	; 0xa8
 8027c94:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027c98:	a80a      	add	r0, sp, #40	; 0x28
 8027c9a:	f7ea f87b 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c9e:	9b02      	ldr	r3, [sp, #8]
 8027ca0:	9a07      	ldr	r2, [sp, #28]
 8027ca2:	9905      	ldr	r1, [sp, #20]
 8027ca4:	fb90 f2f2 	sdiv	r2, r0, r2
 8027ca8:	a80e      	add	r0, sp, #56	; 0x38
 8027caa:	1a9a      	subs	r2, r3, r2
 8027cac:	f7ff fb79 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027cb0:	9b06      	ldr	r3, [sp, #24]
 8027cb2:	4453      	add	r3, sl
 8027cb4:	e7d6      	b.n	8027c64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027cb6:	45ab      	cmp	fp, r5
 8027cb8:	da25      	bge.n	8027d06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027cba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027cbe:	4628      	mov	r0, r5
 8027cc0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027cc4:	930b      	str	r3, [sp, #44]	; 0x2c
 8027cc6:	f7ea f99d 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027cca:	4641      	mov	r1, r8
 8027ccc:	900c      	str	r0, [sp, #48]	; 0x30
 8027cce:	a80b      	add	r0, sp, #44	; 0x2c
 8027cd0:	f7ea f860 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027cd6:	2202      	movs	r2, #2
 8027cd8:	fb90 f0f2 	sdiv	r0, r0, r2
 8027cdc:	eb00 0903 	add.w	r9, r0, r3
 8027ce0:	4628      	mov	r0, r5
 8027ce2:	9202      	str	r2, [sp, #8]
 8027ce4:	f7ff fbd4 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ce8:	a92a      	add	r1, sp, #168	; 0xa8
 8027cea:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027cee:	a80b      	add	r0, sp, #44	; 0x2c
 8027cf0:	f7ea f850 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cf4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027cf6:	9a02      	ldr	r2, [sp, #8]
 8027cf8:	fb90 f2f2 	sdiv	r2, r0, r2
 8027cfc:	4649      	mov	r1, r9
 8027cfe:	1a9a      	subs	r2, r3, r2
 8027d00:	a80e      	add	r0, sp, #56	; 0x38
 8027d02:	f7ff fb4e 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d06:	46d9      	mov	r9, fp
 8027d08:	2502      	movs	r5, #2
 8027d0a:	45b1      	cmp	r9, r6
 8027d0c:	db25      	blt.n	8027d5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027d0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027d12:	4648      	mov	r0, r9
 8027d14:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027d18:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d1a:	f7ea f973 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d1e:	4641      	mov	r1, r8
 8027d20:	900c      	str	r0, [sp, #48]	; 0x30
 8027d22:	a80b      	add	r0, sp, #44	; 0x2c
 8027d24:	f7ea f836 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027d2a:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d2e:	eb00 0b03 	add.w	fp, r0, r3
 8027d32:	4648      	mov	r0, r9
 8027d34:	f7ff fbac 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d38:	a90d      	add	r1, sp, #52	; 0x34
 8027d3a:	900d      	str	r0, [sp, #52]	; 0x34
 8027d3c:	a80b      	add	r0, sp, #44	; 0x2c
 8027d3e:	f7ea f829 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d42:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027d44:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d48:	4659      	mov	r1, fp
 8027d4a:	1a12      	subs	r2, r2, r0
 8027d4c:	a80e      	add	r0, sp, #56	; 0x38
 8027d4e:	46cb      	mov	fp, r9
 8027d50:	f7ff fb27 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d54:	eba9 0907 	sub.w	r9, r9, r7
 8027d58:	e7d7      	b.n	8027d0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027d5a:	455e      	cmp	r6, fp
 8027d5c:	da22      	bge.n	8027da4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027d5e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027d62:	4630      	mov	r0, r6
 8027d64:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027d68:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d6a:	f7ea f94b 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d6e:	4641      	mov	r1, r8
 8027d70:	900c      	str	r0, [sp, #48]	; 0x30
 8027d72:	a80b      	add	r0, sp, #44	; 0x2c
 8027d74:	f7ea f80e 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d78:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027d7a:	2502      	movs	r5, #2
 8027d7c:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d80:	4407      	add	r7, r0
 8027d82:	4630      	mov	r0, r6
 8027d84:	f7ff fb84 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d88:	a92a      	add	r1, sp, #168	; 0xa8
 8027d8a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027d8e:	a80b      	add	r0, sp, #44	; 0x2c
 8027d90:	f7ea f800 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d94:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027d96:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d9a:	4639      	mov	r1, r7
 8027d9c:	1a12      	subs	r2, r2, r0
 8027d9e:	a80e      	add	r0, sp, #56	; 0x38
 8027da0:	f7ff faff 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027da4:	9b01      	ldr	r3, [sp, #4]
 8027da6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027daa:	f6bf af27 	bge.w	8027bfc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027dae:	4630      	mov	r0, r6
 8027db0:	f7ea f928 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027db4:	ad2a      	add	r5, sp, #168	; 0xa8
 8027db6:	f04f 0b02 	mov.w	fp, #2
 8027dba:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027dbe:	a809      	add	r0, sp, #36	; 0x24
 8027dc0:	4629      	mov	r1, r5
 8027dc2:	f7e9 ffe7 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dc6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027dc8:	eb00 0903 	add.w	r9, r0, r3
 8027dcc:	4630      	mov	r0, r6
 8027dce:	f7ff fb5f 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027dd2:	4629      	mov	r1, r5
 8027dd4:	900d      	str	r0, [sp, #52]	; 0x34
 8027dd6:	a809      	add	r0, sp, #36	; 0x24
 8027dd8:	f7e9 ffdc 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ddc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027dde:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027de2:	eba3 0800 	sub.w	r8, r3, r0
 8027de6:	4454      	add	r4, sl
 8027de8:	42a6      	cmp	r6, r4
 8027dea:	f77f af07 	ble.w	8027bfc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027dee:	4620      	mov	r0, r4
 8027df0:	f7ea f908 	bl	8012004 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027df4:	4629      	mov	r1, r5
 8027df6:	900d      	str	r0, [sp, #52]	; 0x34
 8027df8:	a80a      	add	r0, sp, #40	; 0x28
 8027dfa:	f7e9 ffcb 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dfe:	fb90 f0fb 	sdiv	r0, r0, fp
 8027e02:	eb00 0709 	add.w	r7, r0, r9
 8027e06:	4620      	mov	r0, r4
 8027e08:	f7ff fb42 	bl	8027490 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e0c:	a90c      	add	r1, sp, #48	; 0x30
 8027e0e:	900c      	str	r0, [sp, #48]	; 0x30
 8027e10:	a80a      	add	r0, sp, #40	; 0x28
 8027e12:	f7e9 ffbf 	bl	8011d94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e16:	4639      	mov	r1, r7
 8027e18:	fb90 f2fb 	sdiv	r2, r0, fp
 8027e1c:	a80e      	add	r0, sp, #56	; 0x38
 8027e1e:	eba8 0202 	sub.w	r2, r8, r2
 8027e22:	f7ff fabe 	bl	80273a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027e26:	4454      	add	r4, sl
 8027e28:	e7de      	b.n	8027de8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027e2a:	2400      	movs	r4, #0
 8027e2c:	e6eb      	b.n	8027c06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027e2e:	bf00      	nop
 8027e30:	0802f938 	.word	0x0802f938

08027e34 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027e34:	b570      	push	{r4, r5, r6, lr}
 8027e36:	790b      	ldrb	r3, [r1, #4]
 8027e38:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027e3c:	2b00      	cmp	r3, #0
 8027e3e:	bf0c      	ite	eq
 8027e40:	2301      	moveq	r3, #1
 8027e42:	2300      	movne	r3, #0
 8027e44:	4604      	mov	r4, r0
 8027e46:	460e      	mov	r6, r1
 8027e48:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027e4c:	d109      	bne.n	8027e62 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027e4e:	b14d      	cbz	r5, 8027e64 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027e50:	7933      	ldrb	r3, [r6, #4]
 8027e52:	2b01      	cmp	r3, #1
 8027e54:	d10c      	bne.n	8027e70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027e56:	6823      	ldr	r3, [r4, #0]
 8027e58:	4620      	mov	r0, r4
 8027e5a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027e5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027e60:	4718      	bx	r3
 8027e62:	b12d      	cbz	r5, 8027e70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027e64:	6823      	ldr	r3, [r4, #0]
 8027e66:	4620      	mov	r0, r4
 8027e68:	695b      	ldr	r3, [r3, #20]
 8027e6a:	4798      	blx	r3
 8027e6c:	2d00      	cmp	r5, #0
 8027e6e:	d1ef      	bne.n	8027e50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027e70:	bd70      	pop	{r4, r5, r6, pc}

08027e72 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027e72:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027e76:	4770      	bx	lr

08027e78 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027e78:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027e7c:	4770      	bx	lr

08027e7e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027e7e:	6802      	ldr	r2, [r0, #0]
 8027e80:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e84:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e86:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e8a:	4710      	bx	r2

08027e8c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027e8c:	6802      	ldr	r2, [r0, #0]
 8027e8e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e92:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e94:	eef0 0a40 	vmov.f32	s1, s0
 8027e98:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e9c:	4710      	bx	r2

08027e9e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027e9e:	6802      	ldr	r2, [r0, #0]
 8027ea0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027ea4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027ea6:	eeb0 1a40 	vmov.f32	s2, s0
 8027eaa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027eae:	4710      	bx	r2

08027eb0 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027eb0:	6802      	ldr	r2, [r0, #0]
 8027eb2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027eb6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027eb8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027ebc:	4710      	bx	r2

08027ebe <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027ebe:	6802      	ldr	r2, [r0, #0]
 8027ec0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027ec4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027ec6:	eef0 0a40 	vmov.f32	s1, s0
 8027eca:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027ece:	4710      	bx	r2

08027ed0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027ed0:	6802      	ldr	r2, [r0, #0]
 8027ed2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027ed6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027ed8:	eeb0 1a40 	vmov.f32	s2, s0
 8027edc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027ee0:	4710      	bx	r2

08027ee2 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027ee2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027ee6:	4770      	bx	lr

08027ee8 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027ee8:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027eec:	4770      	bx	lr

08027eee <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027eee:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027ef2:	4770      	bx	lr

08027ef4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027ef4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027ef8:	4770      	bx	lr

08027efa <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027efa:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027efe:	4770      	bx	lr

08027f00 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027f00:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027f04:	4770      	bx	lr

08027f06 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027f06:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027f0a:	4770      	bx	lr

08027f0c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027f0c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027f10:	4770      	bx	lr

08027f12 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027f12:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027f16:	4770      	bx	lr

08027f18 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027f18:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027f1c:	4770      	bx	lr

08027f1e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027f1e:	ee07 2a90 	vmov	s15, r2
 8027f22:	6803      	ldr	r3, [r0, #0]
 8027f24:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027f28:	ee07 1a90 	vmov	s15, r1
 8027f2c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027f30:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027f34:	4718      	bx	r3

08027f36 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027f36:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027f3a:	4770      	bx	lr

08027f3c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027f3c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027f40:	4770      	bx	lr

08027f42 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027f42:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027f46:	4770      	bx	lr

08027f48 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027f48:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027f4c:	4770      	bx	lr

08027f4e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027f4e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027f52:	4770      	bx	lr

08027f54 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027f54:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027f58:	4770      	bx	lr

08027f5a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027f5a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027f5e:	4770      	bx	lr

08027f60 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027f60:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027f64:	4770      	bx	lr

08027f66 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027f66:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027f6a:	4770      	bx	lr

08027f6c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027f6c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027f70:	4770      	bx	lr

08027f72 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027f72:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027f76:	4770      	bx	lr

08027f78 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027f78:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027f7c:	4770      	bx	lr

08027f7e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027f7e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027f82:	4770      	bx	lr

08027f84 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027f84:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027f88:	4770      	bx	lr

08027f8a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027f8a:	b510      	push	{r4, lr}
 8027f8c:	ed2d 8b04 	vpush	{d8-d9}
 8027f90:	6803      	ldr	r3, [r0, #0]
 8027f92:	4604      	mov	r4, r0
 8027f94:	699b      	ldr	r3, [r3, #24]
 8027f96:	eeb0 8a40 	vmov.f32	s16, s0
 8027f9a:	eef0 8a60 	vmov.f32	s17, s1
 8027f9e:	eeb0 9a41 	vmov.f32	s18, s2
 8027fa2:	4798      	blx	r3
 8027fa4:	6823      	ldr	r3, [r4, #0]
 8027fa6:	4620      	mov	r0, r4
 8027fa8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027faa:	eeb0 1a49 	vmov.f32	s2, s18
 8027fae:	eef0 0a68 	vmov.f32	s1, s17
 8027fb2:	eeb0 0a48 	vmov.f32	s0, s16
 8027fb6:	4798      	blx	r3
 8027fb8:	ecbd 8b04 	vpop	{d8-d9}
 8027fbc:	6823      	ldr	r3, [r4, #0]
 8027fbe:	4620      	mov	r0, r4
 8027fc0:	699b      	ldr	r3, [r3, #24]
 8027fc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027fc6:	4718      	bx	r3

08027fc8 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027fc8:	b510      	push	{r4, lr}
 8027fca:	ed2d 8b02 	vpush	{d8}
 8027fce:	6803      	ldr	r3, [r0, #0]
 8027fd0:	4604      	mov	r4, r0
 8027fd2:	699b      	ldr	r3, [r3, #24]
 8027fd4:	eeb0 8a40 	vmov.f32	s16, s0
 8027fd8:	4798      	blx	r3
 8027fda:	6823      	ldr	r3, [r4, #0]
 8027fdc:	4620      	mov	r0, r4
 8027fde:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027fe2:	eeb0 0a48 	vmov.f32	s0, s16
 8027fe6:	4798      	blx	r3
 8027fe8:	ecbd 8b02 	vpop	{d8}
 8027fec:	6823      	ldr	r3, [r4, #0]
 8027fee:	4620      	mov	r0, r4
 8027ff0:	699b      	ldr	r3, [r3, #24]
 8027ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027ff6:	4718      	bx	r3

08027ff8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027ff8:	2200      	movs	r2, #0
 8027ffa:	8002      	strh	r2, [r0, #0]
 8027ffc:	8042      	strh	r2, [r0, #2]
 8027ffe:	8082      	strh	r2, [r0, #4]
 8028000:	80c2      	strh	r2, [r0, #6]
 8028002:	4770      	bx	lr

08028004 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028004:	4770      	bx	lr

08028006 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028006:	b510      	push	{r4, lr}
 8028008:	2190      	movs	r1, #144	; 0x90
 802800a:	4604      	mov	r4, r0
 802800c:	f001 ff73 	bl	8029ef6 <_ZdlPvj>
 8028010:	4620      	mov	r0, r4
 8028012:	bd10      	pop	{r4, pc}

08028014 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028014:	b538      	push	{r3, r4, r5, lr}
 8028016:	2500      	movs	r5, #0
 8028018:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802801c:	2301      	movs	r3, #1
 802801e:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028022:	4b1f      	ldr	r3, [pc, #124]	; (80280a0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028024:	8085      	strh	r5, [r0, #4]
 8028026:	80c5      	strh	r5, [r0, #6]
 8028028:	8105      	strh	r5, [r0, #8]
 802802a:	8145      	strh	r5, [r0, #10]
 802802c:	8185      	strh	r5, [r0, #12]
 802802e:	81c5      	strh	r5, [r0, #14]
 8028030:	8205      	strh	r5, [r0, #16]
 8028032:	8245      	strh	r5, [r0, #18]
 8028034:	61c5      	str	r5, [r0, #28]
 8028036:	8405      	strh	r5, [r0, #32]
 8028038:	8445      	strh	r5, [r0, #34]	; 0x22
 802803a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802803e:	6003      	str	r3, [r0, #0]
 8028040:	880b      	ldrh	r3, [r1, #0]
 8028042:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028044:	23ff      	movs	r3, #255	; 0xff
 8028046:	4604      	mov	r4, r0
 8028048:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802804c:	f7eb f99f 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028050:	4b14      	ldr	r3, [pc, #80]	; (80280a4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028052:	6023      	str	r3, [r4, #0]
 8028054:	2300      	movs	r3, #0
 8028056:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802805a:	4913      	ldr	r1, [pc, #76]	; (80280a8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802805c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802805e:	6323      	str	r3, [r4, #48]	; 0x30
 8028060:	6363      	str	r3, [r4, #52]	; 0x34
 8028062:	63a3      	str	r3, [r4, #56]	; 0x38
 8028064:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028066:	6463      	str	r3, [r4, #68]	; 0x44
 8028068:	64a3      	str	r3, [r4, #72]	; 0x48
 802806a:	6523      	str	r3, [r4, #80]	; 0x50
 802806c:	6563      	str	r3, [r4, #84]	; 0x54
 802806e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028070:	6623      	str	r3, [r4, #96]	; 0x60
 8028072:	66a3      	str	r3, [r4, #104]	; 0x68
 8028074:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028076:	6763      	str	r3, [r4, #116]	; 0x74
 8028078:	67a3      	str	r3, [r4, #120]	; 0x78
 802807a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802807e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8028082:	230c      	movs	r3, #12
 8028084:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8028088:	6422      	str	r2, [r4, #64]	; 0x40
 802808a:	64e1      	str	r1, [r4, #76]	; 0x4c
 802808c:	65a1      	str	r1, [r4, #88]	; 0x58
 802808e:	6662      	str	r2, [r4, #100]	; 0x64
 8028090:	6722      	str	r2, [r4, #112]	; 0x70
 8028092:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028094:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028098:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802809c:	4620      	mov	r0, r4
 802809e:	bd38      	pop	{r3, r4, r5, pc}
 80280a0:	0802f3e0 	.word	0x0802f3e0
 80280a4:	0802f9c4 	.word	0x0802f9c4
 80280a8:	447a0000 	.word	0x447a0000

080280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80280ac:	b570      	push	{r4, r5, r6, lr}
 80280ae:	ed2d 8b04 	vpush	{d8-d9}
 80280b2:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80280b6:	add0      	add	r5, sp, #832	; 0x340
 80280b8:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80280ba:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80280be:	4604      	mov	r4, r0
 80280c0:	4628      	mov	r0, r5
 80280c2:	f7f1 fa7f 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80280c6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80280c8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80280cc:	4606      	mov	r6, r0
 80280ce:	4628      	mov	r0, r5
 80280d0:	f7f1 faac 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80280d4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80280d8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80280dc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80280de:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80280e2:	9312      	str	r3, [sp, #72]	; 0x48
 80280e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80280e8:	1c72      	adds	r2, r6, #1
 80280ea:	3001      	adds	r0, #1
 80280ec:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80280f0:	ee07 2a90 	vmov	s15, r2
 80280f4:	ee06 0a90 	vmov	s13, r0
 80280f8:	ee36 6a47 	vsub.f32	s12, s12, s14
 80280fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028100:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028104:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028108:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802810c:	9316      	str	r3, [sp, #88]	; 0x58
 802810e:	931a      	str	r3, [sp, #104]	; 0x68
 8028110:	931e      	str	r3, [sp, #120]	; 0x78
 8028112:	2300      	movs	r3, #0
 8028114:	9320      	str	r3, [sp, #128]	; 0x80
 8028116:	9321      	str	r3, [sp, #132]	; 0x84
 8028118:	9322      	str	r3, [sp, #136]	; 0x88
 802811a:	9324      	str	r3, [sp, #144]	; 0x90
 802811c:	9325      	str	r3, [sp, #148]	; 0x94
 802811e:	9326      	str	r3, [sp, #152]	; 0x98
 8028120:	9328      	str	r3, [sp, #160]	; 0xa0
 8028122:	9329      	str	r3, [sp, #164]	; 0xa4
 8028124:	932a      	str	r3, [sp, #168]	; 0xa8
 8028126:	932c      	str	r3, [sp, #176]	; 0xb0
 8028128:	932d      	str	r3, [sp, #180]	; 0xb4
 802812a:	932e      	str	r3, [sp, #184]	; 0xb8
 802812c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028130:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028134:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028138:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802813c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028140:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028144:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028148:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802814c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8028150:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028154:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028158:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802815c:	a830      	add	r0, sp, #192	; 0xc0
 802815e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028162:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028166:	f000 fc43 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802816a:	eeb1 0a49 	vneg.f32	s0, s18
 802816e:	a830      	add	r0, sp, #192	; 0xc0
 8028170:	f000 fd12 	bl	8028b98 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028174:	eeb1 0a68 	vneg.f32	s0, s17
 8028178:	f000 fd1c 	bl	8028bb4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802817c:	eeb1 0a48 	vneg.f32	s0, s16
 8028180:	f000 fd27 	bl	8028bd2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028184:	a840      	add	r0, sp, #256	; 0x100
 8028186:	f000 fc33 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802818a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802818e:	a840      	add	r0, sp, #256	; 0x100
 8028190:	f000 fc86 	bl	8028aa0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028194:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028198:	f000 fcac 	bl	8028af4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802819c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80281a0:	f000 fcd1 	bl	8028b46 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80281a4:	a850      	add	r0, sp, #320	; 0x140
 80281a6:	f000 fc23 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80281aa:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80281ae:	a850      	add	r0, sp, #320	; 0x140
 80281b0:	f000 fd1e 	bl	8028bf0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80281b4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80281b8:	f000 fd26 	bl	8028c08 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80281bc:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80281c0:	f000 fd2f 	bl	8028c22 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80281c4:	a860      	add	r0, sp, #384	; 0x180
 80281c6:	f000 fc13 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80281ca:	eeb0 0a49 	vmov.f32	s0, s18
 80281ce:	a860      	add	r0, sp, #384	; 0x180
 80281d0:	f000 fce2 	bl	8028b98 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80281d4:	eeb0 0a68 	vmov.f32	s0, s17
 80281d8:	f000 fcec 	bl	8028bb4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80281dc:	eeb0 0a48 	vmov.f32	s0, s16
 80281e0:	f000 fcf7 	bl	8028bd2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80281e4:	aa50      	add	r2, sp, #320	; 0x140
 80281e6:	a960      	add	r1, sp, #384	; 0x180
 80281e8:	a8b0      	add	r0, sp, #704	; 0x2c0
 80281ea:	f000 fc1b 	bl	8028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281ee:	4628      	mov	r0, r5
 80281f0:	aa40      	add	r2, sp, #256	; 0x100
 80281f2:	a9b0      	add	r1, sp, #704	; 0x2c0
 80281f4:	f000 fc16 	bl	8028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281f8:	4629      	mov	r1, r5
 80281fa:	aa30      	add	r2, sp, #192	; 0xc0
 80281fc:	a870      	add	r0, sp, #448	; 0x1c0
 80281fe:	f000 fc11 	bl	8028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028202:	a880      	add	r0, sp, #512	; 0x200
 8028204:	f000 fbf4 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028208:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802820c:	a880      	add	r0, sp, #512	; 0x200
 802820e:	eeb1 0a40 	vneg.f32	s0, s0
 8028212:	f000 fcc1 	bl	8028b98 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028216:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802821a:	a880      	add	r0, sp, #512	; 0x200
 802821c:	eeb1 0a40 	vneg.f32	s0, s0
 8028220:	f000 fcc8 	bl	8028bb4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028224:	a890      	add	r0, sp, #576	; 0x240
 8028226:	f000 fbe3 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802822a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802822e:	a890      	add	r0, sp, #576	; 0x240
 8028230:	f000 fc26 	bl	8028a80 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028234:	a8a0      	add	r0, sp, #640	; 0x280
 8028236:	f000 fbdb 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802823a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802823e:	a8a0      	add	r0, sp, #640	; 0x280
 8028240:	f000 fcaa 	bl	8028b98 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028244:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028248:	f000 fcb4 	bl	8028bb4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802824c:	aa90      	add	r2, sp, #576	; 0x240
 802824e:	a9a0      	add	r1, sp, #640	; 0x280
 8028250:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028252:	f000 fbe7 	bl	8028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028256:	4628      	mov	r0, r5
 8028258:	aa80      	add	r2, sp, #512	; 0x200
 802825a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802825c:	f000 fbe2 	bl	8028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028260:	4629      	mov	r1, r5
 8028262:	aa70      	add	r2, sp, #448	; 0x1c0
 8028264:	4668      	mov	r0, sp
 8028266:	466d      	mov	r5, sp
 8028268:	f000 fbdc 	bl	8028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802826c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802826e:	ae70      	add	r6, sp, #448	; 0x1c0
 8028270:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028272:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028274:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028276:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028278:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802827a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802827e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028282:	2500      	movs	r5, #0
 8028284:	0129      	lsls	r1, r5, #4
 8028286:	ab20      	add	r3, sp, #128	; 0x80
 8028288:	185e      	adds	r6, r3, r1
 802828a:	ab10      	add	r3, sp, #64	; 0x40
 802828c:	4419      	add	r1, r3
 802828e:	a870      	add	r0, sp, #448	; 0x1c0
 8028290:	f000 fb7e 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028294:	3501      	adds	r5, #1
 8028296:	2d04      	cmp	r5, #4
 8028298:	ed86 0a00 	vstr	s0, [r6]
 802829c:	edc6 0a01 	vstr	s1, [r6, #4]
 80282a0:	ed86 1a02 	vstr	s2, [r6, #8]
 80282a4:	edc6 1a03 	vstr	s3, [r6, #12]
 80282a8:	d1ec      	bne.n	8028284 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80282aa:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80282ae:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80282b2:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80282b6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282ba:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80282be:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282c2:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80282c6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80282ca:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282ce:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282d2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80282d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80282da:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80282de:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282e2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80282e6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282ea:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80282ee:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80282f2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282f6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282fa:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80282fe:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028302:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028306:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802830a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802830e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028312:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028316:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802831a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802831e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028322:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028326:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802832a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802832e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028332:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028336:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802833a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802833e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028342:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028346:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802834a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802834e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028352:	ecbd 8b04 	vpop	{d8-d9}
 8028356:	bd70      	pop	{r4, r5, r6, pc}

08028358 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028358:	b510      	push	{r4, lr}
 802835a:	4604      	mov	r4, r0
 802835c:	f7eb f817 	bl	801338e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028360:	4620      	mov	r0, r4
 8028362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028366:	f7ff bea1 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802836a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802836a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802836e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028372:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028376:	f7ff be99 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802837a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802837a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802837e:	f7ff be95 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028382 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028382:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028386:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802838a:	f7ff be8f 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802838e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802838e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028392:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802839a:	bfd8      	it	le
 802839c:	eeb0 0a67 	vmovle.f32	s0, s15
 80283a0:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80283a4:	f7ff be82 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283a8 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80283a8:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80283ac:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80283b0:	f7ff be7c 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283b4 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80283b4:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80283b8:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80283bc:	f7ff be76 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283c0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80283c0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80283c4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80283c8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80283cc:	f7ff be6e 	b.w	80280ac <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080283d0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80283d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80283d4:	ed2d 8b04 	vpush	{d8-d9}
 80283d8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80283dc:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80283e0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80283e4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80283e8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80283ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283f0:	bf54      	ite	pl
 80283f2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80283f6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80283fa:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80283fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028402:	bfd8      	it	le
 8028404:	eeb0 0a49 	vmovle.f32	s0, s18
 8028408:	eef4 8ac0 	vcmpe.f32	s17, s0
 802840c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028410:	bfd8      	it	le
 8028412:	eeb0 0a68 	vmovle.f32	s0, s17
 8028416:	460c      	mov	r4, r1
 8028418:	4607      	mov	r7, r0
 802841a:	f001 ff5f 	bl	802a2dc <floorf>
 802841e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028426:	bf58      	it	pl
 8028428:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802842c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028430:	bf56      	itet	pl
 8028432:	ee10 3a10 	vmovpl	r3, s0
 8028436:	2600      	movmi	r6, #0
 8028438:	b21e      	sxthpl	r6, r3
 802843a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802843e:	bfd8      	it	le
 8028440:	eeb0 8a69 	vmovle.f32	s16, s19
 8028444:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802844c:	bf58      	it	pl
 802844e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028452:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802845a:	bf54      	ite	pl
 802845c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028460:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028464:	f001 fef8 	bl	802a258 <ceilf>
 8028468:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802846c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028470:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028474:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028478:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802847c:	ee07 8a90 	vmov	s15, r8
 8028480:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028484:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802848c:	bfd8      	it	le
 802848e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028492:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028496:	bfdc      	itt	le
 8028498:	ee10 3a10 	vmovle	r3, s0
 802849c:	fa0f f883 	sxthle.w	r8, r3
 80284a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284a4:	bf54      	ite	pl
 80284a6:	eeb0 0a69 	vmovpl.f32	s0, s19
 80284aa:	eeb0 0a48 	vmovmi.f32	s0, s16
 80284ae:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80284b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284b6:	bfd8      	it	le
 80284b8:	eeb0 0a49 	vmovle.f32	s0, s18
 80284bc:	eef4 8ac0 	vcmpe.f32	s17, s0
 80284c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284c4:	bfd8      	it	le
 80284c6:	eeb0 0a68 	vmovle.f32	s0, s17
 80284ca:	f001 ff07 	bl	802a2dc <floorf>
 80284ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80284d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284d6:	bf58      	it	pl
 80284d8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80284dc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80284e0:	bf56      	itet	pl
 80284e2:	ee10 3a10 	vmovpl	r3, s0
 80284e6:	2500      	movmi	r5, #0
 80284e8:	b21d      	sxthpl	r5, r3
 80284ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284ee:	bfd8      	it	le
 80284f0:	eeb0 8a69 	vmovle.f32	s16, s19
 80284f4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80284f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284fc:	bf58      	it	pl
 80284fe:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028502:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802850a:	bf54      	ite	pl
 802850c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028510:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028514:	f001 fea0 	bl	802a258 <ceilf>
 8028518:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802851c:	803e      	strh	r6, [r7, #0]
 802851e:	ee07 3a90 	vmov	s15, r3
 8028522:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028526:	807d      	strh	r5, [r7, #2]
 8028528:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802852c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028530:	bfd8      	it	le
 8028532:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028536:	eba8 0606 	sub.w	r6, r8, r6
 802853a:	bfdc      	itt	le
 802853c:	ee10 3a10 	vmovle	r3, s0
 8028540:	b21b      	sxthle	r3, r3
 8028542:	1b5d      	subs	r5, r3, r5
 8028544:	80be      	strh	r6, [r7, #4]
 8028546:	80fd      	strh	r5, [r7, #6]
 8028548:	ecbd 8b04 	vpop	{d8-d9}
 802854c:	4638      	mov	r0, r7
 802854e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028552 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028552:	b513      	push	{r0, r1, r4, lr}
 8028554:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028558:	4604      	mov	r4, r0
 802855a:	b143      	cbz	r3, 802856e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802855c:	4601      	mov	r1, r0
 802855e:	4668      	mov	r0, sp
 8028560:	f7ff ff36 	bl	80283d0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028564:	6823      	ldr	r3, [r4, #0]
 8028566:	4669      	mov	r1, sp
 8028568:	691b      	ldr	r3, [r3, #16]
 802856a:	4620      	mov	r0, r4
 802856c:	4798      	blx	r3
 802856e:	b002      	add	sp, #8
 8028570:	bd10      	pop	{r4, pc}

08028572 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028572:	4603      	mov	r3, r0
 8028574:	3026      	adds	r0, #38	; 0x26
 8028576:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802857a:	b90b      	cbnz	r3, 8028580 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802857c:	f7ee be38 	b.w	80171f0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028580:	f7ee be46 	b.w	8017210 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028584 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028588:	ed2d 8b04 	vpush	{d8-d9}
 802858c:	4604      	mov	r4, r0
 802858e:	469b      	mov	fp, r3
 8028590:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028594:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028598:	f9b1 6000 	ldrsh.w	r6, [r1]
 802859c:	8888      	ldrh	r0, [r1, #4]
 802859e:	b0b3      	sub	sp, #204	; 0xcc
 80285a0:	4430      	add	r0, r6
 80285a2:	b280      	uxth	r0, r0
 80285a4:	9206      	str	r2, [sp, #24]
 80285a6:	fa0f fe80 	sxth.w	lr, r0
 80285aa:	2200      	movs	r2, #0
 80285ac:	4596      	cmp	lr, r2
 80285ae:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80285b2:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80285b6:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80285ba:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80285bc:	9211      	str	r2, [sp, #68]	; 0x44
 80285be:	f340 8129 	ble.w	8028814 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285c2:	45b4      	cmp	ip, r6
 80285c4:	f340 8126 	ble.w	8028814 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285c8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80285cc:	88ca      	ldrh	r2, [r1, #6]
 80285ce:	442a      	add	r2, r5
 80285d0:	b292      	uxth	r2, r2
 80285d2:	b211      	sxth	r1, r2
 80285d4:	2900      	cmp	r1, #0
 80285d6:	f340 811d 	ble.w	8028814 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285da:	42ab      	cmp	r3, r5
 80285dc:	f340 811a 	ble.w	8028814 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80285e0:	45f4      	cmp	ip, lr
 80285e2:	bfb8      	it	lt
 80285e4:	fa1f f08c 	uxthlt.w	r0, ip
 80285e8:	428b      	cmp	r3, r1
 80285ea:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80285ee:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80285f2:	bfb8      	it	lt
 80285f4:	b29a      	uxthlt	r2, r3
 80285f6:	1b80      	subs	r0, r0, r6
 80285f8:	1b52      	subs	r2, r2, r5
 80285fa:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80285fe:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028602:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028606:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802860a:	ab11      	add	r3, sp, #68	; 0x44
 802860c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028610:	6822      	ldr	r2, [r4, #0]
 8028612:	9307      	str	r3, [sp, #28]
 8028614:	ad13      	add	r5, sp, #76	; 0x4c
 8028616:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028618:	e885 0003 	stmia.w	r5, {r0, r1}
 802861c:	4629      	mov	r1, r5
 802861e:	4620      	mov	r0, r4
 8028620:	4790      	blx	r2
 8028622:	4621      	mov	r1, r4
 8028624:	a815      	add	r0, sp, #84	; 0x54
 8028626:	f7ee fd3f 	bl	80170a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802862a:	a815      	add	r0, sp, #84	; 0x54
 802862c:	f7ed fa04 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028630:	9b07      	ldr	r3, [sp, #28]
 8028632:	1d26      	adds	r6, r4, #4
 8028634:	4618      	mov	r0, r3
 8028636:	4631      	mov	r1, r6
 8028638:	f7ed fa42 	bl	8015ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802863c:	4628      	mov	r0, r5
 802863e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028642:	f7ed f9f9 	bl	8015a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028646:	4628      	mov	r0, r5
 8028648:	f7f1 f8a8 	bl	801979c <_ZNK8touchgfx6Bitmap7getDataEv>
 802864c:	9007      	str	r0, [sp, #28]
 802864e:	2800      	cmp	r0, #0
 8028650:	f000 80db 	beq.w	802880a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028654:	f8db 2000 	ldr.w	r2, [fp]
 8028658:	9209      	str	r2, [sp, #36]	; 0x24
 802865a:	f8db 2004 	ldr.w	r2, [fp, #4]
 802865e:	920a      	str	r2, [sp, #40]	; 0x28
 8028660:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028664:	920b      	str	r2, [sp, #44]	; 0x2c
 8028666:	f8db 200c 	ldr.w	r2, [fp, #12]
 802866a:	920c      	str	r2, [sp, #48]	; 0x30
 802866c:	f8da 2000 	ldr.w	r2, [sl]
 8028670:	920d      	str	r2, [sp, #52]	; 0x34
 8028672:	f8da 2004 	ldr.w	r2, [sl, #4]
 8028676:	920e      	str	r2, [sp, #56]	; 0x38
 8028678:	f8da 2008 	ldr.w	r2, [sl, #8]
 802867c:	920f      	str	r2, [sp, #60]	; 0x3c
 802867e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028682:	9210      	str	r2, [sp, #64]	; 0x40
 8028684:	a90d      	add	r1, sp, #52	; 0x34
 8028686:	4632      	mov	r2, r6
 8028688:	a809      	add	r0, sp, #36	; 0x24
 802868a:	f7ed f9fd 	bl	8015a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802868e:	4632      	mov	r2, r6
 8028690:	a90e      	add	r1, sp, #56	; 0x38
 8028692:	a80a      	add	r0, sp, #40	; 0x28
 8028694:	f7ed f9f8 	bl	8015a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028698:	4632      	mov	r2, r6
 802869a:	a90f      	add	r1, sp, #60	; 0x3c
 802869c:	a80b      	add	r0, sp, #44	; 0x2c
 802869e:	f7ed f9f3 	bl	8015a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80286a2:	4632      	mov	r2, r6
 80286a4:	a910      	add	r1, sp, #64	; 0x40
 80286a6:	a80c      	add	r0, sp, #48	; 0x30
 80286a8:	f7ed f9ee 	bl	8015a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80286ac:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80286b0:	edd7 4a00 	vldr	s9, [r7]
 80286b4:	edd7 5a01 	vldr	s11, [r7, #4]
 80286b8:	ed98 4a00 	vldr	s8, [r8]
 80286bc:	ed98 5a01 	vldr	s10, [r8, #4]
 80286c0:	ed99 9a00 	vldr	s18, [r9]
 80286c4:	ed99 8a01 	vldr	s16, [r9, #4]
 80286c8:	edd9 8a02 	vldr	s17, [r9, #8]
 80286cc:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80286d0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80286d4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80286d8:	eef0 6a67 	vmov.f32	s13, s15
 80286dc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80286e0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80286e4:	eeb0 7a67 	vmov.f32	s14, s15
 80286e8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80286ec:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80286f0:	eeb0 6a67 	vmov.f32	s12, s15
 80286f4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80286f8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80286fc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028700:	ee16 6a10 	vmov	r6, s12
 8028704:	eeb0 6a67 	vmov.f32	s12, s15
 8028708:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802870c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028710:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028714:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028718:	68ff      	ldr	r7, [r7, #12]
 802871a:	9624      	str	r6, [sp, #144]	; 0x90
 802871c:	ee16 0a10 	vmov	r0, s12
 8028720:	eeb0 6a67 	vmov.f32	s12, s15
 8028724:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028728:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802872c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028730:	ee16 1a10 	vmov	r1, s12
 8028734:	eeb0 6a67 	vmov.f32	s12, s15
 8028738:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802873c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028740:	ee16 2a10 	vmov	r2, s12
 8028744:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028748:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802874c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8028750:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8028754:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028758:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802875c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8028760:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8028764:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8028768:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802876c:	922d      	str	r2, [sp, #180]	; 0xb4
 802876e:	4a2b      	ldr	r2, [pc, #172]	; (802881c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8028770:	9b06      	ldr	r3, [sp, #24]
 8028772:	8812      	ldrh	r2, [r2, #0]
 8028774:	9317      	str	r3, [sp, #92]	; 0x5c
 8028776:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802877a:	9b07      	ldr	r3, [sp, #28]
 802877c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8028780:	4628      	mov	r0, r5
 8028782:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8028786:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802878a:	9218      	str	r2, [sp, #96]	; 0x60
 802878c:	9319      	str	r3, [sp, #100]	; 0x64
 802878e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028792:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028796:	9731      	str	r7, [sp, #196]	; 0xc4
 8028798:	f7f1 f830 	bl	80197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802879c:	901a      	str	r0, [sp, #104]	; 0x68
 802879e:	4628      	mov	r0, r5
 80287a0:	f7f0 ff10 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80287a4:	901b      	str	r0, [sp, #108]	; 0x6c
 80287a6:	4628      	mov	r0, r5
 80287a8:	f7f0 ff40 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80287ac:	901c      	str	r0, [sp, #112]	; 0x70
 80287ae:	4628      	mov	r0, r5
 80287b0:	f7f0 ff08 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80287b4:	eeb4 9a48 	vcmp.f32	s18, s16
 80287b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287bc:	901d      	str	r0, [sp, #116]	; 0x74
 80287be:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80287c2:	d107      	bne.n	80287d4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80287c4:	eeb4 8a68 	vcmp.f32	s16, s17
 80287c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80287d0:	bf08      	it	eq
 80287d2:	461e      	moveq	r6, r3
 80287d4:	4b12      	ldr	r3, [pc, #72]	; (8028820 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80287d6:	681b      	ldr	r3, [r3, #0]
 80287d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80287dc:	b10a      	cbz	r2, 80287e2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80287de:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80287e0:	b905      	cbnz	r5, 80287e4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80287e2:	689d      	ldr	r5, [r3, #8]
 80287e4:	682b      	ldr	r3, [r5, #0]
 80287e6:	4620      	mov	r0, r4
 80287e8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80287ea:	f7ff fec2 	bl	8028572 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80287ee:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80287f2:	9604      	str	r6, [sp, #16]
 80287f4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80287f8:	ab13      	add	r3, sp, #76	; 0x4c
 80287fa:	9301      	str	r3, [sp, #4]
 80287fc:	ab15      	add	r3, sp, #84	; 0x54
 80287fe:	9300      	str	r3, [sp, #0]
 8028800:	aa1e      	add	r2, sp, #120	; 0x78
 8028802:	ab19      	add	r3, sp, #100	; 0x64
 8028804:	a917      	add	r1, sp, #92	; 0x5c
 8028806:	4628      	mov	r0, r5
 8028808:	47b8      	blx	r7
 802880a:	b033      	add	sp, #204	; 0xcc
 802880c:	ecbd 8b04 	vpop	{d8-d9}
 8028810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028814:	2300      	movs	r3, #0
 8028816:	9312      	str	r3, [sp, #72]	; 0x48
 8028818:	e6f7      	b.n	802860a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802881a:	bf00      	nop
 802881c:	20012d9e 	.word	0x20012d9e
 8028820:	20012da4 	.word	0x20012da4

08028824 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028828:	ed2d 8b02 	vpush	{d8}
 802882c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028830:	b098      	sub	sp, #96	; 0x60
 8028832:	4604      	mov	r4, r0
 8028834:	4688      	mov	r8, r1
 8028836:	2b00      	cmp	r3, #0
 8028838:	d077      	beq.n	802892a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802883a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802883e:	4628      	mov	r0, r5
 8028840:	f7f0 fec0 	bl	80195c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028844:	ee07 0a90 	vmov	s15, r0
 8028848:	4628      	mov	r0, r5
 802884a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802884e:	f7f0 feed 	bl	801962c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028852:	4b4e      	ldr	r3, [pc, #312]	; (802898c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028854:	781b      	ldrb	r3, [r3, #0]
 8028856:	ee07 0a90 	vmov	s15, r0
 802885a:	2b01      	cmp	r3, #1
 802885c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8028860:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028864:	d066      	beq.n	8028934 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8028866:	eeb0 6a47 	vmov.f32	s12, s14
 802886a:	ee17 3a10 	vmov	r3, s14
 802886e:	eeb0 4a48 	vmov.f32	s8, s16
 8028872:	eeb0 7a48 	vmov.f32	s14, s16
 8028876:	eef0 4a67 	vmov.f32	s9, s15
 802887a:	eeb0 8a67 	vmov.f32	s16, s15
 802887e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028882:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028886:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802888a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802888e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028892:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028896:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028898:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802889a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802889c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80288a0:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80288a4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80288a8:	ee73 1a65 	vsub.f32	s3, s6, s11
 80288ac:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80288b0:	ee32 1a45 	vsub.f32	s2, s4, s10
 80288b4:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80288b8:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80288bc:	eee1 6a21 	vfma.f32	s13, s2, s3
 80288c0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80288c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288c8:	dd3d      	ble.n	8028946 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80288ca:	ed8d 5a04 	vstr	s10, [sp, #16]
 80288ce:	ed8d 2a05 	vstr	s4, [sp, #20]
 80288d2:	edcd 2a06 	vstr	s5, [sp, #24]
 80288d6:	f8cd c01c 	str.w	ip, [sp, #28]
 80288da:	edcd 5a08 	vstr	s11, [sp, #32]
 80288de:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80288e2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80288e6:	970b      	str	r7, [sp, #44]	; 0x2c
 80288e8:	960c      	str	r6, [sp, #48]	; 0x30
 80288ea:	950d      	str	r5, [sp, #52]	; 0x34
 80288ec:	920e      	str	r2, [sp, #56]	; 0x38
 80288ee:	900f      	str	r0, [sp, #60]	; 0x3c
 80288f0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80288f4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80288f8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80288fc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8028900:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028904:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028908:	9316      	str	r3, [sp, #88]	; 0x58
 802890a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802890e:	ab14      	add	r3, sp, #80	; 0x50
 8028910:	9303      	str	r3, [sp, #12]
 8028912:	ab10      	add	r3, sp, #64	; 0x40
 8028914:	9302      	str	r3, [sp, #8]
 8028916:	ab0c      	add	r3, sp, #48	; 0x30
 8028918:	9301      	str	r3, [sp, #4]
 802891a:	ab08      	add	r3, sp, #32
 802891c:	9300      	str	r3, [sp, #0]
 802891e:	2200      	movs	r2, #0
 8028920:	ab04      	add	r3, sp, #16
 8028922:	4641      	mov	r1, r8
 8028924:	4620      	mov	r0, r4
 8028926:	f7ff fe2d 	bl	8028584 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802892a:	b018      	add	sp, #96	; 0x60
 802892c:	ecbd 8b02 	vpop	{d8}
 8028930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028934:	eeb0 6a48 	vmov.f32	s12, s16
 8028938:	eef0 4a47 	vmov.f32	s9, s14
 802893c:	ee17 3a90 	vmov	r3, s15
 8028940:	eeb0 4a67 	vmov.f32	s8, s15
 8028944:	e79b      	b.n	802887e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028946:	ed8d 5a05 	vstr	s10, [sp, #20]
 802894a:	ed8d 2a04 	vstr	s4, [sp, #16]
 802894e:	f8cd c018 	str.w	ip, [sp, #24]
 8028952:	edcd 2a07 	vstr	s5, [sp, #28]
 8028956:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802895a:	ed8d 3a08 	vstr	s6, [sp, #32]
 802895e:	970a      	str	r7, [sp, #40]	; 0x28
 8028960:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028964:	960d      	str	r6, [sp, #52]	; 0x34
 8028966:	950c      	str	r5, [sp, #48]	; 0x30
 8028968:	900e      	str	r0, [sp, #56]	; 0x38
 802896a:	920f      	str	r2, [sp, #60]	; 0x3c
 802896c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8028970:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028974:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028978:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802897c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028980:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028984:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028988:	9317      	str	r3, [sp, #92]	; 0x5c
 802898a:	e7c0      	b.n	802890e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802898c:	20012d9c 	.word	0x20012d9c

08028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028990:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028992:	b08d      	sub	sp, #52	; 0x34
 8028994:	2300      	movs	r3, #0
 8028996:	9304      	str	r3, [sp, #16]
 8028998:	9305      	str	r3, [sp, #20]
 802899a:	9306      	str	r3, [sp, #24]
 802899c:	aa04      	add	r2, sp, #16
 802899e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80289a2:	9307      	str	r3, [sp, #28]
 80289a4:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80289a8:	4613      	mov	r3, r2
 80289aa:	f101 0710 	add.w	r7, r1, #16
 80289ae:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80289ec <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80289b2:	460c      	mov	r4, r1
 80289b4:	4605      	mov	r5, r0
 80289b6:	ecb4 7a01 	vldmia	r4!, {s14}
 80289ba:	ecf5 6a01 	vldmia	r5!, {s13}
 80289be:	42bc      	cmp	r4, r7
 80289c0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80289c4:	d1f7      	bne.n	80289b6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80289c6:	3010      	adds	r0, #16
 80289c8:	42b0      	cmp	r0, r6
 80289ca:	ece2 7a01 	vstmia	r2!, {s15}
 80289ce:	d1ee      	bne.n	80289ae <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80289d0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80289d2:	ac0c      	add	r4, sp, #48	; 0x30
 80289d4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80289d8:	ed9d 0a08 	vldr	s0, [sp, #32]
 80289dc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80289e0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80289e4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80289e8:	b00d      	add	sp, #52	; 0x34
 80289ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80289ec:	00000000 	.word	0x00000000

080289f0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80289f0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028a20 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80289f4:	2300      	movs	r3, #0
 80289f6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80289fa:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80289fe:	2200      	movs	r2, #0
 8028a00:	4293      	cmp	r3, r2
 8028a02:	f102 0201 	add.w	r2, r2, #1
 8028a06:	bf14      	ite	ne
 8028a08:	eef0 6a47 	vmovne.f32	s13, s14
 8028a0c:	eef0 6a67 	vmoveq.f32	s13, s15
 8028a10:	2a04      	cmp	r2, #4
 8028a12:	ece1 6a01 	vstmia	r1!, {s13}
 8028a16:	d1f3      	bne.n	8028a00 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028a18:	3301      	adds	r3, #1
 8028a1a:	2b04      	cmp	r3, #4
 8028a1c:	d1ed      	bne.n	80289fa <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8028a1e:	4770      	bx	lr
 8028a20:	00000000 	.word	0x00000000

08028a24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028a28:	460c      	mov	r4, r1
 8028a2a:	4605      	mov	r5, r0
 8028a2c:	4690      	mov	r8, r2
 8028a2e:	f7ff ffdf 	bl	80289f0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028a32:	4628      	mov	r0, r5
 8028a34:	4621      	mov	r1, r4
 8028a36:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8028a3a:	2300      	movs	r3, #0
 8028a3c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028a7c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028a40:	eb08 0603 	add.w	r6, r8, r3
 8028a44:	460f      	mov	r7, r1
 8028a46:	2400      	movs	r4, #0
 8028a48:	4632      	mov	r2, r6
 8028a4a:	ecf7 6a01 	vldmia	r7!, {s13}
 8028a4e:	ed92 7a00 	vldr	s14, [r2]
 8028a52:	3401      	adds	r4, #1
 8028a54:	2c04      	cmp	r4, #4
 8028a56:	f106 0610 	add.w	r6, r6, #16
 8028a5a:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028a5e:	d1f3      	bne.n	8028a48 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028a60:	18c2      	adds	r2, r0, r3
 8028a62:	3304      	adds	r3, #4
 8028a64:	2b10      	cmp	r3, #16
 8028a66:	edc2 7a00 	vstr	s15, [r2]
 8028a6a:	d1e7      	bne.n	8028a3c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8028a6c:	3110      	adds	r1, #16
 8028a6e:	4561      	cmp	r1, ip
 8028a70:	f100 0010 	add.w	r0, r0, #16
 8028a74:	d1e1      	bne.n	8028a3a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028a76:	4628      	mov	r0, r5
 8028a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a7c:	00000000 	.word	0x00000000

08028a80 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028a80:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028a84:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028a88:	f100 0320 	add.w	r3, r0, #32
 8028a8c:	3030      	adds	r0, #48	; 0x30
 8028a8e:	ecf3 7a01 	vldmia	r3!, {s15}
 8028a92:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028a96:	4283      	cmp	r3, r0
 8028a98:	edc3 7a03 	vstr	s15, [r3, #12]
 8028a9c:	d1f7      	bne.n	8028a8e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8028a9e:	4770      	bx	lr

08028aa0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028aa0:	b510      	push	{r4, lr}
 8028aa2:	ed2d 8b02 	vpush	{d8}
 8028aa6:	4604      	mov	r4, r0
 8028aa8:	eef0 8a40 	vmov.f32	s17, s0
 8028aac:	f001 fb8a 	bl	802a1c4 <sinf>
 8028ab0:	eeb0 8a40 	vmov.f32	s16, s0
 8028ab4:	eeb0 0a68 	vmov.f32	s0, s17
 8028ab8:	f001 fb38 	bl	802a12c <cosf>
 8028abc:	f104 0310 	add.w	r3, r4, #16
 8028ac0:	f104 0220 	add.w	r2, r4, #32
 8028ac4:	eeb1 6a48 	vneg.f32	s12, s16
 8028ac8:	edd3 7a04 	vldr	s15, [r3, #16]
 8028acc:	edd3 6a00 	vldr	s13, [r3]
 8028ad0:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028ad4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028ad8:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028adc:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028ae0:	eca3 7a01 	vstmia	r3!, {s14}
 8028ae4:	429a      	cmp	r2, r3
 8028ae6:	edc3 7a03 	vstr	s15, [r3, #12]
 8028aea:	d1ed      	bne.n	8028ac8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8028aec:	ecbd 8b02 	vpop	{d8}
 8028af0:	4620      	mov	r0, r4
 8028af2:	bd10      	pop	{r4, pc}

08028af4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028af4:	b510      	push	{r4, lr}
 8028af6:	ed2d 8b02 	vpush	{d8}
 8028afa:	4604      	mov	r4, r0
 8028afc:	eef0 8a40 	vmov.f32	s17, s0
 8028b00:	f001 fb60 	bl	802a1c4 <sinf>
 8028b04:	eeb0 8a40 	vmov.f32	s16, s0
 8028b08:	eeb0 0a68 	vmov.f32	s0, s17
 8028b0c:	f001 fb0e 	bl	802a12c <cosf>
 8028b10:	4623      	mov	r3, r4
 8028b12:	f104 0210 	add.w	r2, r4, #16
 8028b16:	eeb1 6a48 	vneg.f32	s12, s16
 8028b1a:	edd3 7a08 	vldr	s15, [r3, #32]
 8028b1e:	edd3 6a00 	vldr	s13, [r3]
 8028b22:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028b26:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b2a:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028b2e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028b32:	eca3 7a01 	vstmia	r3!, {s14}
 8028b36:	429a      	cmp	r2, r3
 8028b38:	edc3 7a07 	vstr	s15, [r3, #28]
 8028b3c:	d1ed      	bne.n	8028b1a <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028b3e:	ecbd 8b02 	vpop	{d8}
 8028b42:	4620      	mov	r0, r4
 8028b44:	bd10      	pop	{r4, pc}

08028b46 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028b46:	b510      	push	{r4, lr}
 8028b48:	ed2d 8b02 	vpush	{d8}
 8028b4c:	4604      	mov	r4, r0
 8028b4e:	eef0 8a40 	vmov.f32	s17, s0
 8028b52:	f001 fb37 	bl	802a1c4 <sinf>
 8028b56:	eeb0 8a40 	vmov.f32	s16, s0
 8028b5a:	eeb0 0a68 	vmov.f32	s0, s17
 8028b5e:	f001 fae5 	bl	802a12c <cosf>
 8028b62:	4623      	mov	r3, r4
 8028b64:	f104 0210 	add.w	r2, r4, #16
 8028b68:	eeb1 6a48 	vneg.f32	s12, s16
 8028b6c:	edd3 7a04 	vldr	s15, [r3, #16]
 8028b70:	edd3 6a00 	vldr	s13, [r3]
 8028b74:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028b78:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b7c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028b80:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028b84:	eca3 7a01 	vstmia	r3!, {s14}
 8028b88:	429a      	cmp	r2, r3
 8028b8a:	edc3 7a03 	vstr	s15, [r3, #12]
 8028b8e:	d1ed      	bne.n	8028b6c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028b90:	ecbd 8b02 	vpop	{d8}
 8028b94:	4620      	mov	r0, r4
 8028b96:	bd10      	pop	{r4, pc}

08028b98 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028b98:	4603      	mov	r3, r0
 8028b9a:	f100 0210 	add.w	r2, r0, #16
 8028b9e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028ba2:	edd3 7a00 	vldr	s15, [r3]
 8028ba6:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028baa:	ece3 7a01 	vstmia	r3!, {s15}
 8028bae:	4293      	cmp	r3, r2
 8028bb0:	d1f5      	bne.n	8028b9e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028bb2:	4770      	bx	lr

08028bb4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028bb4:	f100 0310 	add.w	r3, r0, #16
 8028bb8:	f100 0220 	add.w	r2, r0, #32
 8028bbc:	ed93 7a08 	vldr	s14, [r3, #32]
 8028bc0:	edd3 7a00 	vldr	s15, [r3]
 8028bc4:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028bc8:	ece3 7a01 	vstmia	r3!, {s15}
 8028bcc:	4293      	cmp	r3, r2
 8028bce:	d1f5      	bne.n	8028bbc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028bd0:	4770      	bx	lr

08028bd2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028bd2:	f100 0320 	add.w	r3, r0, #32
 8028bd6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028bda:	ed93 7a04 	vldr	s14, [r3, #16]
 8028bde:	edd3 7a00 	vldr	s15, [r3]
 8028be2:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028be6:	ece3 7a01 	vstmia	r3!, {s15}
 8028bea:	4293      	cmp	r3, r2
 8028bec:	d1f5      	bne.n	8028bda <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028bee:	4770      	bx	lr

08028bf0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028bf0:	4603      	mov	r3, r0
 8028bf2:	f100 0210 	add.w	r2, r0, #16
 8028bf6:	edd3 7a00 	vldr	s15, [r3]
 8028bfa:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028bfe:	ece3 7a01 	vstmia	r3!, {s15}
 8028c02:	4293      	cmp	r3, r2
 8028c04:	d1f7      	bne.n	8028bf6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028c06:	4770      	bx	lr

08028c08 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028c08:	f100 0310 	add.w	r3, r0, #16
 8028c0c:	f100 0220 	add.w	r2, r0, #32
 8028c10:	edd3 7a00 	vldr	s15, [r3]
 8028c14:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c18:	ece3 7a01 	vstmia	r3!, {s15}
 8028c1c:	4293      	cmp	r3, r2
 8028c1e:	d1f7      	bne.n	8028c10 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028c20:	4770      	bx	lr

08028c22 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028c22:	f100 0320 	add.w	r3, r0, #32
 8028c26:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028c2a:	edd3 7a00 	vldr	s15, [r3]
 8028c2e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c32:	ece3 7a01 	vstmia	r3!, {s15}
 8028c36:	4293      	cmp	r3, r2
 8028c38:	d1f7      	bne.n	8028c2a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028c3a:	4770      	bx	lr

08028c3c <arm_mean_f32>:
 8028c3c:	b430      	push	{r4, r5}
 8028c3e:	088d      	lsrs	r5, r1, #2
 8028c40:	eddf 7a17 	vldr	s15, [pc, #92]	; 8028ca0 <arm_mean_f32+0x64>
 8028c44:	d018      	beq.n	8028c78 <arm_mean_f32+0x3c>
 8028c46:	f100 0310 	add.w	r3, r0, #16
 8028c4a:	462c      	mov	r4, r5
 8028c4c:	ed13 7a04 	vldr	s14, [r3, #-16]
 8028c50:	ed53 5a03 	vldr	s11, [r3, #-12]
 8028c54:	ed13 6a02 	vldr	s12, [r3, #-8]
 8028c58:	ed53 6a01 	vldr	s13, [r3, #-4]
 8028c5c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8028c60:	3c01      	subs	r4, #1
 8028c62:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028c66:	f103 0310 	add.w	r3, r3, #16
 8028c6a:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028c6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028c72:	d1eb      	bne.n	8028c4c <arm_mean_f32+0x10>
 8028c74:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 8028c78:	f011 0303 	ands.w	r3, r1, #3
 8028c7c:	d005      	beq.n	8028c8a <arm_mean_f32+0x4e>
 8028c7e:	ecb0 7a01 	vldmia	r0!, {s14}
 8028c82:	3b01      	subs	r3, #1
 8028c84:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028c88:	d1f9      	bne.n	8028c7e <arm_mean_f32+0x42>
 8028c8a:	ee07 1a10 	vmov	s14, r1
 8028c8e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8028c92:	bc30      	pop	{r4, r5}
 8028c94:	eec7 7a87 	vdiv.f32	s15, s15, s14
 8028c98:	edc2 7a00 	vstr	s15, [r2]
 8028c9c:	4770      	bx	lr
 8028c9e:	bf00      	nop
 8028ca0:	00000000 	.word	0x00000000

08028ca4 <arm_max_f32>:
 8028ca4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028ca8:	1e4f      	subs	r7, r1, #1
 8028caa:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028cae:	f100 0e04 	add.w	lr, r0, #4
 8028cb2:	edd0 7a00 	vldr	s15, [r0]
 8028cb6:	d058      	beq.n	8028d6a <arm_max_f32+0xc6>
 8028cb8:	3014      	adds	r0, #20
 8028cba:	46c4      	mov	ip, r8
 8028cbc:	2604      	movs	r6, #4
 8028cbe:	2400      	movs	r4, #0
 8028cc0:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028cc4:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028cc8:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028ccc:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028cd0:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028cd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cd8:	bfc8      	it	gt
 8028cda:	eef0 7a46 	vmovgt.f32	s15, s12
 8028cde:	f1a6 0503 	sub.w	r5, r6, #3
 8028ce2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028ce6:	bfc8      	it	gt
 8028ce8:	462c      	movgt	r4, r5
 8028cea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cee:	bf48      	it	mi
 8028cf0:	eef0 7a66 	vmovmi.f32	s15, s13
 8028cf4:	f1a6 0502 	sub.w	r5, r6, #2
 8028cf8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028cfc:	bf48      	it	mi
 8028cfe:	462c      	movmi	r4, r5
 8028d00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d04:	bf48      	it	mi
 8028d06:	eef0 7a47 	vmovmi.f32	s15, s14
 8028d0a:	f106 35ff 	add.w	r5, r6, #4294967295
 8028d0e:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028d12:	bf48      	it	mi
 8028d14:	462c      	movmi	r4, r5
 8028d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d1a:	bf48      	it	mi
 8028d1c:	4634      	movmi	r4, r6
 8028d1e:	bf48      	it	mi
 8028d20:	eef0 7a65 	vmovmi.f32	s15, s11
 8028d24:	f1bc 0c01 	subs.w	ip, ip, #1
 8028d28:	f106 0604 	add.w	r6, r6, #4
 8028d2c:	f100 0010 	add.w	r0, r0, #16
 8028d30:	d1c6      	bne.n	8028cc0 <arm_max_f32+0x1c>
 8028d32:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028d36:	f017 0003 	ands.w	r0, r7, #3
 8028d3a:	d018      	beq.n	8028d6e <arm_max_f32+0xca>
 8028d3c:	1a08      	subs	r0, r1, r0
 8028d3e:	ecbe 7a01 	vldmia	lr!, {s14}
 8028d42:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d4a:	bfc8      	it	gt
 8028d4c:	4604      	movgt	r4, r0
 8028d4e:	f100 0001 	add.w	r0, r0, #1
 8028d52:	bfd8      	it	le
 8028d54:	eeb0 7a67 	vmovle.f32	s14, s15
 8028d58:	4288      	cmp	r0, r1
 8028d5a:	eef0 7a47 	vmov.f32	s15, s14
 8028d5e:	d1ee      	bne.n	8028d3e <arm_max_f32+0x9a>
 8028d60:	ed82 7a00 	vstr	s14, [r2]
 8028d64:	601c      	str	r4, [r3, #0]
 8028d66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d6a:	4644      	mov	r4, r8
 8028d6c:	e7e3      	b.n	8028d36 <arm_max_f32+0x92>
 8028d6e:	eeb0 7a67 	vmov.f32	s14, s15
 8028d72:	e7f5      	b.n	8028d60 <arm_max_f32+0xbc>

08028d74 <arm_rfft_fast_init_f32>:
 8028d74:	084b      	lsrs	r3, r1, #1
 8028d76:	2b80      	cmp	r3, #128	; 0x80
 8028d78:	b410      	push	{r4}
 8028d7a:	8201      	strh	r1, [r0, #16]
 8028d7c:	8003      	strh	r3, [r0, #0]
 8028d7e:	d047      	beq.n	8028e10 <arm_rfft_fast_init_f32+0x9c>
 8028d80:	d917      	bls.n	8028db2 <arm_rfft_fast_init_f32+0x3e>
 8028d82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028d86:	d03d      	beq.n	8028e04 <arm_rfft_fast_init_f32+0x90>
 8028d88:	d929      	bls.n	8028dde <arm_rfft_fast_init_f32+0x6a>
 8028d8a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028d8e:	d020      	beq.n	8028dd2 <arm_rfft_fast_init_f32+0x5e>
 8028d90:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028d94:	d113      	bne.n	8028dbe <arm_rfft_fast_init_f32+0x4a>
 8028d96:	4921      	ldr	r1, [pc, #132]	; (8028e1c <arm_rfft_fast_init_f32+0xa8>)
 8028d98:	4a21      	ldr	r2, [pc, #132]	; (8028e20 <arm_rfft_fast_init_f32+0xac>)
 8028d9a:	4b22      	ldr	r3, [pc, #136]	; (8028e24 <arm_rfft_fast_init_f32+0xb0>)
 8028d9c:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028da0:	8184      	strh	r4, [r0, #12]
 8028da2:	6081      	str	r1, [r0, #8]
 8028da4:	6042      	str	r2, [r0, #4]
 8028da6:	6143      	str	r3, [r0, #20]
 8028da8:	2000      	movs	r0, #0
 8028daa:	b240      	sxtb	r0, r0
 8028dac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028db0:	4770      	bx	lr
 8028db2:	2b20      	cmp	r3, #32
 8028db4:	d01c      	beq.n	8028df0 <arm_rfft_fast_init_f32+0x7c>
 8028db6:	2b40      	cmp	r3, #64	; 0x40
 8028db8:	d006      	beq.n	8028dc8 <arm_rfft_fast_init_f32+0x54>
 8028dba:	2b10      	cmp	r3, #16
 8028dbc:	d01d      	beq.n	8028dfa <arm_rfft_fast_init_f32+0x86>
 8028dbe:	20ff      	movs	r0, #255	; 0xff
 8028dc0:	b240      	sxtb	r0, r0
 8028dc2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028dc6:	4770      	bx	lr
 8028dc8:	2438      	movs	r4, #56	; 0x38
 8028dca:	4917      	ldr	r1, [pc, #92]	; (8028e28 <arm_rfft_fast_init_f32+0xb4>)
 8028dcc:	4a17      	ldr	r2, [pc, #92]	; (8028e2c <arm_rfft_fast_init_f32+0xb8>)
 8028dce:	4b18      	ldr	r3, [pc, #96]	; (8028e30 <arm_rfft_fast_init_f32+0xbc>)
 8028dd0:	e7e6      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028dd2:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028dd6:	4917      	ldr	r1, [pc, #92]	; (8028e34 <arm_rfft_fast_init_f32+0xc0>)
 8028dd8:	4a17      	ldr	r2, [pc, #92]	; (8028e38 <arm_rfft_fast_init_f32+0xc4>)
 8028dda:	4b18      	ldr	r3, [pc, #96]	; (8028e3c <arm_rfft_fast_init_f32+0xc8>)
 8028ddc:	e7e0      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028dde:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028de2:	d1ec      	bne.n	8028dbe <arm_rfft_fast_init_f32+0x4a>
 8028de4:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028de8:	4915      	ldr	r1, [pc, #84]	; (8028e40 <arm_rfft_fast_init_f32+0xcc>)
 8028dea:	4a16      	ldr	r2, [pc, #88]	; (8028e44 <arm_rfft_fast_init_f32+0xd0>)
 8028dec:	4b16      	ldr	r3, [pc, #88]	; (8028e48 <arm_rfft_fast_init_f32+0xd4>)
 8028dee:	e7d7      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028df0:	2430      	movs	r4, #48	; 0x30
 8028df2:	4916      	ldr	r1, [pc, #88]	; (8028e4c <arm_rfft_fast_init_f32+0xd8>)
 8028df4:	4a16      	ldr	r2, [pc, #88]	; (8028e50 <arm_rfft_fast_init_f32+0xdc>)
 8028df6:	4b17      	ldr	r3, [pc, #92]	; (8028e54 <arm_rfft_fast_init_f32+0xe0>)
 8028df8:	e7d2      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028dfa:	2414      	movs	r4, #20
 8028dfc:	4916      	ldr	r1, [pc, #88]	; (8028e58 <arm_rfft_fast_init_f32+0xe4>)
 8028dfe:	4a17      	ldr	r2, [pc, #92]	; (8028e5c <arm_rfft_fast_init_f32+0xe8>)
 8028e00:	4b17      	ldr	r3, [pc, #92]	; (8028e60 <arm_rfft_fast_init_f32+0xec>)
 8028e02:	e7cd      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028e04:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028e08:	4916      	ldr	r1, [pc, #88]	; (8028e64 <arm_rfft_fast_init_f32+0xf0>)
 8028e0a:	4a17      	ldr	r2, [pc, #92]	; (8028e68 <arm_rfft_fast_init_f32+0xf4>)
 8028e0c:	4b17      	ldr	r3, [pc, #92]	; (8028e6c <arm_rfft_fast_init_f32+0xf8>)
 8028e0e:	e7c7      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028e10:	24d0      	movs	r4, #208	; 0xd0
 8028e12:	4917      	ldr	r1, [pc, #92]	; (8028e70 <arm_rfft_fast_init_f32+0xfc>)
 8028e14:	4a17      	ldr	r2, [pc, #92]	; (8028e74 <arm_rfft_fast_init_f32+0x100>)
 8028e16:	4b18      	ldr	r3, [pc, #96]	; (8028e78 <arm_rfft_fast_init_f32+0x104>)
 8028e18:	e7c2      	b.n	8028da0 <arm_rfft_fast_init_f32+0x2c>
 8028e1a:	bf00      	nop
 8028e1c:	0803e8d8 	.word	0x0803e8d8
 8028e20:	0802fad0 	.word	0x0802fad0
 8028e24:	08035c40 	.word	0x08035c40
 8028e28:	08033bd0 	.word	0x08033bd0
 8028e2c:	08040698 	.word	0x08040698
 8028e30:	08042b88 	.word	0x08042b88
 8028e34:	0803c5c0 	.word	0x0803c5c0
 8028e38:	0803a4c0 	.word	0x0803a4c0
 8028e3c:	08033c40 	.word	0x08033c40
 8028e40:	08042818 	.word	0x08042818
 8028e44:	08039c40 	.word	0x08039c40
 8028e48:	08040898 	.word	0x08040898
 8028e4c:	0803d478 	.word	0x0803d478
 8028e50:	0803c4c0 	.word	0x0803c4c0
 8028e54:	08033ad0 	.word	0x08033ad0
 8028e58:	0803d3d0 	.word	0x0803d3d0
 8028e5c:	0803a440 	.word	0x0803a440
 8028e60:	0803d3f8 	.word	0x0803d3f8
 8028e64:	08041098 	.word	0x08041098
 8028e68:	0803d8d8 	.word	0x0803d8d8
 8028e6c:	08041418 	.word	0x08041418
 8028e70:	08042d88 	.word	0x08042d88
 8028e74:	0803d4d8 	.word	0x0803d4d8
 8028e78:	08042418 	.word	0x08042418

08028e7c <arm_rfft_fast_f32>:
 8028e7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028e80:	8a06      	ldrh	r6, [r0, #16]
 8028e82:	0876      	lsrs	r6, r6, #1
 8028e84:	4607      	mov	r7, r0
 8028e86:	4615      	mov	r5, r2
 8028e88:	8006      	strh	r6, [r0, #0]
 8028e8a:	460c      	mov	r4, r1
 8028e8c:	2b00      	cmp	r3, #0
 8028e8e:	d15c      	bne.n	8028f4a <arm_rfft_fast_f32+0xce>
 8028e90:	461a      	mov	r2, r3
 8028e92:	2301      	movs	r3, #1
 8028e94:	f000 fbe6 	bl	8029664 <arm_cfft_f32>
 8028e98:	edd4 7a00 	vldr	s15, [r4]
 8028e9c:	ed94 7a01 	vldr	s14, [r4, #4]
 8028ea0:	883e      	ldrh	r6, [r7, #0]
 8028ea2:	6978      	ldr	r0, [r7, #20]
 8028ea4:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028ea8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028eac:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028eb0:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028eb4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028eb8:	3e01      	subs	r6, #1
 8028eba:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028ebe:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ec2:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028ec6:	ed85 7a00 	vstr	s14, [r5]
 8028eca:	edc5 7a01 	vstr	s15, [r5, #4]
 8028ece:	3010      	adds	r0, #16
 8028ed0:	f105 0210 	add.w	r2, r5, #16
 8028ed4:	3b08      	subs	r3, #8
 8028ed6:	f104 0110 	add.w	r1, r4, #16
 8028eda:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028ede:	ed93 5a02 	vldr	s10, [r3, #8]
 8028ee2:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028ee6:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028eea:	edd3 5a03 	vldr	s11, [r3, #12]
 8028eee:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028ef2:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028ef6:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028efa:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028efe:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028f02:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028f06:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028f0a:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028f0e:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028f12:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028f16:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028f1a:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028f1e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028f22:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028f26:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f2a:	3e01      	subs	r6, #1
 8028f2c:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028f30:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028f34:	f1a3 0308 	sub.w	r3, r3, #8
 8028f38:	f101 0108 	add.w	r1, r1, #8
 8028f3c:	f100 0008 	add.w	r0, r0, #8
 8028f40:	f102 0208 	add.w	r2, r2, #8
 8028f44:	d1c9      	bne.n	8028eda <arm_rfft_fast_f32+0x5e>
 8028f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028f4a:	edd1 7a00 	vldr	s15, [r1]
 8028f4e:	edd1 6a01 	vldr	s13, [r1, #4]
 8028f52:	6941      	ldr	r1, [r0, #20]
 8028f54:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028f58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028f5c:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028f60:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028f64:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f68:	3e01      	subs	r6, #1
 8028f6a:	ed82 7a00 	vstr	s14, [r2]
 8028f6e:	edc2 7a01 	vstr	s15, [r2, #4]
 8028f72:	00f0      	lsls	r0, r6, #3
 8028f74:	b3ee      	cbz	r6, 8028ff2 <arm_rfft_fast_f32+0x176>
 8028f76:	3808      	subs	r0, #8
 8028f78:	f101 0e10 	add.w	lr, r1, #16
 8028f7c:	4420      	add	r0, r4
 8028f7e:	f104 0110 	add.w	r1, r4, #16
 8028f82:	f102 0c10 	add.w	ip, r2, #16
 8028f86:	ed90 7a02 	vldr	s14, [r0, #8]
 8028f8a:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028f8e:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028f92:	ed90 4a03 	vldr	s8, [r0, #12]
 8028f96:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028f9a:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028f9e:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028fa2:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028fa6:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028faa:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028fae:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028fb2:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028fb6:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028fba:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028fbe:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028fc2:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028fc6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028fca:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028fce:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028fd2:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028fd6:	3e01      	subs	r6, #1
 8028fd8:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028fdc:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028fe0:	f1a0 0008 	sub.w	r0, r0, #8
 8028fe4:	f101 0108 	add.w	r1, r1, #8
 8028fe8:	f10e 0e08 	add.w	lr, lr, #8
 8028fec:	f10c 0c08 	add.w	ip, ip, #8
 8028ff0:	d1c9      	bne.n	8028f86 <arm_rfft_fast_f32+0x10a>
 8028ff2:	4638      	mov	r0, r7
 8028ff4:	4629      	mov	r1, r5
 8028ff6:	461a      	mov	r2, r3
 8028ff8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028ffc:	2301      	movs	r3, #1
 8028ffe:	f000 bb31 	b.w	8029664 <arm_cfft_f32>
 8029002:	bf00      	nop

08029004 <arm_cfft_radix8by2_f32>:
 8029004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029008:	ed2d 8b08 	vpush	{d8-d11}
 802900c:	f8b0 e000 	ldrh.w	lr, [r0]
 8029010:	6842      	ldr	r2, [r0, #4]
 8029012:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029016:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802901a:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802901e:	4607      	mov	r7, r0
 8029020:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029024:	f000 80af 	beq.w	8029186 <arm_cfft_radix8by2_f32+0x182>
 8029028:	3310      	adds	r3, #16
 802902a:	18ce      	adds	r6, r1, r3
 802902c:	3210      	adds	r2, #16
 802902e:	4443      	add	r3, r8
 8029030:	f101 0510 	add.w	r5, r1, #16
 8029034:	f108 0410 	add.w	r4, r8, #16
 8029038:	ed54 1a04 	vldr	s3, [r4, #-16]
 802903c:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029040:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029044:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029048:	ed13 5a01 	vldr	s10, [r3, #-4]
 802904c:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029050:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029054:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029058:	ed56 2a03 	vldr	s5, [r6, #-12]
 802905c:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029060:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029064:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029068:	ed54 7a01 	vldr	s15, [r4, #-4]
 802906c:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029070:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029074:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029078:	ee73 ba21 	vadd.f32	s23, s6, s3
 802907c:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029080:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029084:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029088:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802908c:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029090:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029094:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029098:	ed45 ba04 	vstr	s23, [r5, #-16]
 802909c:	ed05 ba03 	vstr	s22, [r5, #-12]
 80290a0:	ed45 aa02 	vstr	s21, [r5, #-8]
 80290a4:	ed05 aa01 	vstr	s20, [r5, #-4]
 80290a8:	ed06 8a01 	vstr	s16, [r6, #-4]
 80290ac:	ed46 9a04 	vstr	s19, [r6, #-16]
 80290b0:	ed06 9a03 	vstr	s18, [r6, #-12]
 80290b4:	ed46 8a02 	vstr	s17, [r6, #-8]
 80290b8:	ee76 6a66 	vsub.f32	s13, s12, s13
 80290bc:	ee73 3ae2 	vsub.f32	s7, s7, s5
 80290c0:	ed12 6a03 	vldr	s12, [r2, #-12]
 80290c4:	ed52 2a04 	vldr	s5, [r2, #-16]
 80290c8:	ee33 3a61 	vsub.f32	s6, s6, s3
 80290cc:	ee34 4a42 	vsub.f32	s8, s8, s4
 80290d0:	ee26 8a86 	vmul.f32	s16, s13, s12
 80290d4:	ee24 2a06 	vmul.f32	s4, s8, s12
 80290d8:	ee63 1a22 	vmul.f32	s3, s6, s5
 80290dc:	ee24 4a22 	vmul.f32	s8, s8, s5
 80290e0:	ee23 3a06 	vmul.f32	s6, s6, s12
 80290e4:	ee66 6aa2 	vmul.f32	s13, s13, s5
 80290e8:	ee23 6a86 	vmul.f32	s12, s7, s12
 80290ec:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80290f0:	ee36 6a04 	vadd.f32	s12, s12, s8
 80290f4:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80290f8:	ee72 3a63 	vsub.f32	s7, s4, s7
 80290fc:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029100:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029104:	ed44 2a04 	vstr	s5, [r4, #-16]
 8029108:	ed43 3a04 	vstr	s7, [r3, #-16]
 802910c:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029110:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029114:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8029118:	ed12 7a01 	vldr	s14, [r2, #-4]
 802911c:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029120:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029124:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8029128:	ee67 3a87 	vmul.f32	s7, s15, s14
 802912c:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029130:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029134:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029138:	ee64 4a87 	vmul.f32	s9, s9, s14
 802913c:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029140:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029144:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029148:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802914c:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029150:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029154:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029158:	f1be 0e01 	subs.w	lr, lr, #1
 802915c:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029160:	f105 0510 	add.w	r5, r5, #16
 8029164:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029168:	f106 0610 	add.w	r6, r6, #16
 802916c:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029170:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029174:	f102 0210 	add.w	r2, r2, #16
 8029178:	f104 0410 	add.w	r4, r4, #16
 802917c:	f103 0310 	add.w	r3, r3, #16
 8029180:	f47f af5a 	bne.w	8029038 <arm_cfft_radix8by2_f32+0x34>
 8029184:	687a      	ldr	r2, [r7, #4]
 8029186:	fa1f f48c 	uxth.w	r4, ip
 802918a:	4608      	mov	r0, r1
 802918c:	2302      	movs	r3, #2
 802918e:	4621      	mov	r1, r4
 8029190:	f000 fbca 	bl	8029928 <arm_radix8_butterfly_f32>
 8029194:	ecbd 8b08 	vpop	{d8-d11}
 8029198:	4640      	mov	r0, r8
 802919a:	4621      	mov	r1, r4
 802919c:	687a      	ldr	r2, [r7, #4]
 802919e:	2302      	movs	r3, #2
 80291a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80291a4:	f000 bbc0 	b.w	8029928 <arm_radix8_butterfly_f32>

080291a8 <arm_cfft_radix8by4_f32>:
 80291a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80291ac:	ed2d 8b0a 	vpush	{d8-d12}
 80291b0:	8802      	ldrh	r2, [r0, #0]
 80291b2:	ed91 6a00 	vldr	s12, [r1]
 80291b6:	b08f      	sub	sp, #60	; 0x3c
 80291b8:	460f      	mov	r7, r1
 80291ba:	0852      	lsrs	r2, r2, #1
 80291bc:	0093      	lsls	r3, r2, #2
 80291be:	900c      	str	r0, [sp, #48]	; 0x30
 80291c0:	9103      	str	r1, [sp, #12]
 80291c2:	6841      	ldr	r1, [r0, #4]
 80291c4:	ed97 7a01 	vldr	s14, [r7, #4]
 80291c8:	4638      	mov	r0, r7
 80291ca:	4418      	add	r0, r3
 80291cc:	4606      	mov	r6, r0
 80291ce:	9009      	str	r0, [sp, #36]	; 0x24
 80291d0:	4418      	add	r0, r3
 80291d2:	edd0 6a00 	vldr	s13, [r0]
 80291d6:	edd6 3a00 	vldr	s7, [r6]
 80291da:	edd6 2a01 	vldr	s5, [r6, #4]
 80291de:	edd0 7a01 	vldr	s15, [r0, #4]
 80291e2:	900a      	str	r0, [sp, #40]	; 0x28
 80291e4:	ee76 5a26 	vadd.f32	s11, s12, s13
 80291e8:	4604      	mov	r4, r0
 80291ea:	4625      	mov	r5, r4
 80291ec:	441c      	add	r4, r3
 80291ee:	ed94 4a00 	vldr	s8, [r4]
 80291f2:	ed94 5a01 	vldr	s10, [r4, #4]
 80291f6:	9401      	str	r4, [sp, #4]
 80291f8:	ee75 4aa3 	vadd.f32	s9, s11, s7
 80291fc:	4630      	mov	r0, r6
 80291fe:	ee74 4a24 	vadd.f32	s9, s8, s9
 8029202:	463e      	mov	r6, r7
 8029204:	ee14 ea90 	vmov	lr, s9
 8029208:	ee76 6a66 	vsub.f32	s13, s12, s13
 802920c:	f846 eb08 	str.w	lr, [r6], #8
 8029210:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029214:	edd0 4a01 	vldr	s9, [r0, #4]
 8029218:	9604      	str	r6, [sp, #16]
 802921a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802921e:	9e01      	ldr	r6, [sp, #4]
 8029220:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029224:	ed96 2a01 	vldr	s4, [r6, #4]
 8029228:	ee36 7a24 	vadd.f32	s14, s12, s9
 802922c:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029230:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029234:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029238:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802923c:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029240:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029244:	4604      	mov	r4, r0
 8029246:	ee36 6a45 	vsub.f32	s12, s12, s10
 802924a:	ee75 6a26 	vadd.f32	s13, s10, s13
 802924e:	46a3      	mov	fp, r4
 8029250:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029254:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029258:	ee13 8a90 	vmov	r8, s7
 802925c:	46a4      	mov	ip, r4
 802925e:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029262:	ed87 7a01 	vstr	s14, [r7, #4]
 8029266:	f84b 8b08 	str.w	r8, [fp], #8
 802926a:	f1ac 0704 	sub.w	r7, ip, #4
 802926e:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029272:	f101 0c08 	add.w	ip, r1, #8
 8029276:	462c      	mov	r4, r5
 8029278:	f8cd c014 	str.w	ip, [sp, #20]
 802927c:	ee15 ca90 	vmov	ip, s11
 8029280:	f844 cb08 	str.w	ip, [r4], #8
 8029284:	9407      	str	r4, [sp, #28]
 8029286:	f101 0410 	add.w	r4, r1, #16
 802928a:	ed85 6a01 	vstr	s12, [r5, #4]
 802928e:	0852      	lsrs	r2, r2, #1
 8029290:	9402      	str	r4, [sp, #8]
 8029292:	462c      	mov	r4, r5
 8029294:	f101 0518 	add.w	r5, r1, #24
 8029298:	920b      	str	r2, [sp, #44]	; 0x2c
 802929a:	46b2      	mov	sl, r6
 802929c:	9506      	str	r5, [sp, #24]
 802929e:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80292a2:	3a02      	subs	r2, #2
 80292a4:	ee16 5a90 	vmov	r5, s13
 80292a8:	46b6      	mov	lr, r6
 80292aa:	4630      	mov	r0, r6
 80292ac:	0852      	lsrs	r2, r2, #1
 80292ae:	f84a 5b08 	str.w	r5, [sl], #8
 80292b2:	f1a0 0604 	sub.w	r6, r0, #4
 80292b6:	edce 7a01 	vstr	s15, [lr, #4]
 80292ba:	9208      	str	r2, [sp, #32]
 80292bc:	f000 8130 	beq.w	8029520 <arm_cfft_radix8by4_f32+0x378>
 80292c0:	4691      	mov	r9, r2
 80292c2:	9a03      	ldr	r2, [sp, #12]
 80292c4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80292c8:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80292cc:	3b08      	subs	r3, #8
 80292ce:	f102 0510 	add.w	r5, r2, #16
 80292d2:	f101 0c20 	add.w	ip, r1, #32
 80292d6:	f1a4 020c 	sub.w	r2, r4, #12
 80292da:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80292de:	4433      	add	r3, r6
 80292e0:	3410      	adds	r4, #16
 80292e2:	4650      	mov	r0, sl
 80292e4:	4659      	mov	r1, fp
 80292e6:	ed55 3a02 	vldr	s7, [r5, #-8]
 80292ea:	ed14 5a02 	vldr	s10, [r4, #-8]
 80292ee:	ed91 7a00 	vldr	s14, [r1]
 80292f2:	edd0 7a00 	vldr	s15, [r0]
 80292f6:	ed15 4a01 	vldr	s8, [r5, #-4]
 80292fa:	ed54 5a01 	vldr	s11, [r4, #-4]
 80292fe:	edd0 6a01 	vldr	s13, [r0, #4]
 8029302:	ed91 6a01 	vldr	s12, [r1, #4]
 8029306:	ee33 8a85 	vadd.f32	s16, s7, s10
 802930a:	ee34 0a25 	vadd.f32	s0, s8, s11
 802930e:	ee78 4a07 	vadd.f32	s9, s16, s14
 8029312:	ee74 5a65 	vsub.f32	s11, s8, s11
 8029316:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802931a:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802931e:	ed45 4a02 	vstr	s9, [r5, #-8]
 8029322:	edd1 4a01 	vldr	s9, [r1, #4]
 8029326:	ed90 4a01 	vldr	s8, [r0, #4]
 802932a:	ee70 4a24 	vadd.f32	s9, s0, s9
 802932e:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029332:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029336:	ee35 aac7 	vsub.f32	s20, s11, s14
 802933a:	ed45 4a01 	vstr	s9, [r5, #-4]
 802933e:	edd6 1a00 	vldr	s3, [r6]
 8029342:	edd7 0a00 	vldr	s1, [r7]
 8029346:	ed92 4a02 	vldr	s8, [r2, #8]
 802934a:	edd3 3a02 	vldr	s7, [r3, #8]
 802934e:	ed93 2a01 	vldr	s4, [r3, #4]
 8029352:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029356:	edd2 2a01 	vldr	s5, [r2, #4]
 802935a:	ed57 9a01 	vldr	s19, [r7, #-4]
 802935e:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029362:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029366:	ee74 8a84 	vadd.f32	s17, s9, s8
 802936a:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802936e:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029372:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029376:	ee18 aa90 	vmov	sl, s17
 802937a:	f847 a908 	str.w	sl, [r7], #-8
 802937e:	edd2 8a01 	vldr	s17, [r2, #4]
 8029382:	ed93 9a01 	vldr	s18, [r3, #4]
 8029386:	ee73 8a28 	vadd.f32	s17, s6, s17
 802938a:	ee3a aa27 	vadd.f32	s20, s20, s15
 802938e:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029392:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029396:	edc7 8a01 	vstr	s17, [r7, #4]
 802939a:	ed18 ba02 	vldr	s22, [r8, #-8]
 802939e:	ed58 8a01 	vldr	s17, [r8, #-4]
 80293a2:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80293a6:	ee6a ba28 	vmul.f32	s23, s20, s17
 80293aa:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80293ae:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80293b2:	ee30 9a81 	vadd.f32	s18, s1, s2
 80293b6:	ee79 9a82 	vadd.f32	s19, s19, s4
 80293ba:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80293be:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80293c2:	ee69 baa8 	vmul.f32	s23, s19, s17
 80293c6:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80293ca:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80293ce:	ee69 8a28 	vmul.f32	s17, s18, s17
 80293d2:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80293d6:	ee1c aa10 	vmov	sl, s24
 80293da:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80293de:	f841 ab08 	str.w	sl, [r1], #8
 80293e2:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80293e6:	ee3b bacb 	vsub.f32	s22, s23, s22
 80293ea:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80293ee:	ee33 3a62 	vsub.f32	s6, s6, s5
 80293f2:	ed01 aa01 	vstr	s20, [r1, #-4]
 80293f6:	edc2 8a01 	vstr	s17, [r2, #4]
 80293fa:	ed82 ba02 	vstr	s22, [r2, #8]
 80293fe:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029402:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029406:	ee38 8a47 	vsub.f32	s16, s16, s14
 802940a:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802940e:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029412:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029416:	ee38 8a67 	vsub.f32	s16, s16, s15
 802941a:	ee30 0a66 	vsub.f32	s0, s0, s13
 802941e:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029422:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029426:	ee28 aa24 	vmul.f32	s20, s16, s9
 802942a:	ee60 9a04 	vmul.f32	s19, s0, s8
 802942e:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029432:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029436:	ee63 3a84 	vmul.f32	s7, s7, s8
 802943a:	ee39 4a68 	vsub.f32	s8, s18, s17
 802943e:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029442:	ee14 aa10 	vmov	sl, s8
 8029446:	ee30 0a48 	vsub.f32	s0, s0, s16
 802944a:	ee63 4a24 	vmul.f32	s9, s6, s9
 802944e:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029452:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029456:	ed04 0a01 	vstr	s0, [r4, #-4]
 802945a:	f846 a908 	str.w	sl, [r6], #-8
 802945e:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029462:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029466:	edc6 3a01 	vstr	s7, [r6, #4]
 802946a:	ee76 6a86 	vadd.f32	s13, s13, s12
 802946e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029472:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029476:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802947a:	ee67 5a86 	vmul.f32	s11, s15, s12
 802947e:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029482:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029486:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802948a:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802948e:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029492:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029496:	ee66 6a86 	vmul.f32	s13, s13, s12
 802949a:	ee67 7a87 	vmul.f32	s15, s15, s14
 802949e:	ee21 6a06 	vmul.f32	s12, s2, s12
 80294a2:	ee62 2a87 	vmul.f32	s5, s5, s14
 80294a6:	ee21 1a07 	vmul.f32	s2, s2, s14
 80294aa:	ee15 aa90 	vmov	sl, s11
 80294ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80294b2:	f840 ab08 	str.w	sl, [r0], #8
 80294b6:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80294ba:	ee76 2a22 	vadd.f32	s5, s12, s5
 80294be:	f1b9 0901 	subs.w	r9, r9, #1
 80294c2:	ed40 7a01 	vstr	s15, [r0, #-4]
 80294c6:	f105 0508 	add.w	r5, r5, #8
 80294ca:	ed83 1a02 	vstr	s2, [r3, #8]
 80294ce:	edc3 2a01 	vstr	s5, [r3, #4]
 80294d2:	f108 0808 	add.w	r8, r8, #8
 80294d6:	f1a2 0208 	sub.w	r2, r2, #8
 80294da:	f10c 0c10 	add.w	ip, ip, #16
 80294de:	f104 0408 	add.w	r4, r4, #8
 80294e2:	f10e 0e18 	add.w	lr, lr, #24
 80294e6:	f1a3 0308 	sub.w	r3, r3, #8
 80294ea:	f47f aefc 	bne.w	80292e6 <arm_cfft_radix8by4_f32+0x13e>
 80294ee:	9908      	ldr	r1, [sp, #32]
 80294f0:	9802      	ldr	r0, [sp, #8]
 80294f2:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80294f6:	00cb      	lsls	r3, r1, #3
 80294f8:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 80294fc:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029500:	9102      	str	r1, [sp, #8]
 8029502:	9904      	ldr	r1, [sp, #16]
 8029504:	4419      	add	r1, r3
 8029506:	9104      	str	r1, [sp, #16]
 8029508:	9905      	ldr	r1, [sp, #20]
 802950a:	4419      	add	r1, r3
 802950c:	9105      	str	r1, [sp, #20]
 802950e:	9907      	ldr	r1, [sp, #28]
 8029510:	449b      	add	fp, r3
 8029512:	4419      	add	r1, r3
 8029514:	449a      	add	sl, r3
 8029516:	9b06      	ldr	r3, [sp, #24]
 8029518:	9107      	str	r1, [sp, #28]
 802951a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802951e:	9306      	str	r3, [sp, #24]
 8029520:	9a04      	ldr	r2, [sp, #16]
 8029522:	9807      	ldr	r0, [sp, #28]
 8029524:	edd2 3a00 	vldr	s7, [r2]
 8029528:	ed90 4a00 	vldr	s8, [r0]
 802952c:	eddb 7a00 	vldr	s15, [fp]
 8029530:	ed9a 3a00 	vldr	s6, [sl]
 8029534:	edd2 4a01 	vldr	s9, [r2, #4]
 8029538:	ed90 7a01 	vldr	s14, [r0, #4]
 802953c:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029540:	edda 5a01 	vldr	s11, [sl, #4]
 8029544:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029548:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802954a:	ee73 6a84 	vadd.f32	s13, s7, s8
 802954e:	ee34 6a87 	vadd.f32	s12, s9, s14
 8029552:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8029556:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802955a:	ee33 5a05 	vadd.f32	s10, s6, s10
 802955e:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029562:	ed82 5a00 	vstr	s10, [r2]
 8029566:	ed9b 5a01 	vldr	s10, [fp, #4]
 802956a:	edda 4a01 	vldr	s9, [sl, #4]
 802956e:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029572:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029576:	ee35 5a24 	vadd.f32	s10, s10, s9
 802957a:	ee77 4a67 	vsub.f32	s9, s14, s15
 802957e:	ed82 5a01 	vstr	s10, [r2, #4]
 8029582:	9a05      	ldr	r2, [sp, #20]
 8029584:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029588:	edd2 1a00 	vldr	s3, [r2]
 802958c:	edd2 2a01 	vldr	s5, [r2, #4]
 8029590:	9a02      	ldr	r2, [sp, #8]
 8029592:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029596:	ee36 6a42 	vsub.f32	s12, s12, s4
 802959a:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802959e:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80295a2:	ee65 2a22 	vmul.f32	s5, s10, s5
 80295a6:	ee25 5a21 	vmul.f32	s10, s10, s3
 80295aa:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80295ae:	ee35 5a63 	vsub.f32	s10, s10, s7
 80295b2:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80295b6:	edcb 2a00 	vstr	s5, [fp]
 80295ba:	ed8b 5a01 	vstr	s10, [fp, #4]
 80295be:	edd2 3a01 	vldr	s7, [r2, #4]
 80295c2:	ed92 5a00 	vldr	s10, [r2]
 80295c6:	9a06      	ldr	r2, [sp, #24]
 80295c8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80295cc:	ee36 6a65 	vsub.f32	s12, s12, s11
 80295d0:	ee66 4a85 	vmul.f32	s9, s13, s10
 80295d4:	ee26 5a05 	vmul.f32	s10, s12, s10
 80295d8:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80295dc:	ee26 6a23 	vmul.f32	s12, s12, s7
 80295e0:	ee75 6a66 	vsub.f32	s13, s10, s13
 80295e4:	ee34 6a86 	vadd.f32	s12, s9, s12
 80295e8:	ee34 4a42 	vsub.f32	s8, s8, s4
 80295ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80295f0:	edc0 6a01 	vstr	s13, [r0, #4]
 80295f4:	ed80 6a00 	vstr	s12, [r0]
 80295f8:	ed92 6a01 	vldr	s12, [r2, #4]
 80295fc:	9803      	ldr	r0, [sp, #12]
 80295fe:	ee77 7a43 	vsub.f32	s15, s14, s6
 8029602:	ee75 5a84 	vadd.f32	s11, s11, s8
 8029606:	ed92 7a00 	vldr	s14, [r2]
 802960a:	ee65 6a87 	vmul.f32	s13, s11, s14
 802960e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029612:	ee65 5a86 	vmul.f32	s11, s11, s12
 8029616:	ee67 7a86 	vmul.f32	s15, s15, s12
 802961a:	ee77 5a65 	vsub.f32	s11, s14, s11
 802961e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8029622:	edca 5a01 	vstr	s11, [sl, #4]
 8029626:	edca 7a00 	vstr	s15, [sl]
 802962a:	6872      	ldr	r2, [r6, #4]
 802962c:	4621      	mov	r1, r4
 802962e:	2304      	movs	r3, #4
 8029630:	f000 f97a 	bl	8029928 <arm_radix8_butterfly_f32>
 8029634:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029636:	6872      	ldr	r2, [r6, #4]
 8029638:	4621      	mov	r1, r4
 802963a:	2304      	movs	r3, #4
 802963c:	f000 f974 	bl	8029928 <arm_radix8_butterfly_f32>
 8029640:	980a      	ldr	r0, [sp, #40]	; 0x28
 8029642:	6872      	ldr	r2, [r6, #4]
 8029644:	4621      	mov	r1, r4
 8029646:	2304      	movs	r3, #4
 8029648:	f000 f96e 	bl	8029928 <arm_radix8_butterfly_f32>
 802964c:	9801      	ldr	r0, [sp, #4]
 802964e:	6872      	ldr	r2, [r6, #4]
 8029650:	4621      	mov	r1, r4
 8029652:	2304      	movs	r3, #4
 8029654:	b00f      	add	sp, #60	; 0x3c
 8029656:	ecbd 8b0a 	vpop	{d8-d12}
 802965a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802965e:	f000 b963 	b.w	8029928 <arm_radix8_butterfly_f32>
 8029662:	bf00      	nop

08029664 <arm_cfft_f32>:
 8029664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029668:	2a01      	cmp	r2, #1
 802966a:	4606      	mov	r6, r0
 802966c:	4617      	mov	r7, r2
 802966e:	460c      	mov	r4, r1
 8029670:	4698      	mov	r8, r3
 8029672:	8805      	ldrh	r5, [r0, #0]
 8029674:	d054      	beq.n	8029720 <arm_cfft_f32+0xbc>
 8029676:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802967a:	d04c      	beq.n	8029716 <arm_cfft_f32+0xb2>
 802967c:	d916      	bls.n	80296ac <arm_cfft_f32+0x48>
 802967e:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8029682:	d01a      	beq.n	80296ba <arm_cfft_f32+0x56>
 8029684:	d95c      	bls.n	8029740 <arm_cfft_f32+0xdc>
 8029686:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802968a:	d044      	beq.n	8029716 <arm_cfft_f32+0xb2>
 802968c:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029690:	d105      	bne.n	802969e <arm_cfft_f32+0x3a>
 8029692:	4620      	mov	r0, r4
 8029694:	4629      	mov	r1, r5
 8029696:	6872      	ldr	r2, [r6, #4]
 8029698:	2301      	movs	r3, #1
 802969a:	f000 f945 	bl	8029928 <arm_radix8_butterfly_f32>
 802969e:	f1b8 0f00 	cmp.w	r8, #0
 80296a2:	d111      	bne.n	80296c8 <arm_cfft_f32+0x64>
 80296a4:	2f01      	cmp	r7, #1
 80296a6:	d016      	beq.n	80296d6 <arm_cfft_f32+0x72>
 80296a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80296ac:	2d20      	cmp	r5, #32
 80296ae:	d032      	beq.n	8029716 <arm_cfft_f32+0xb2>
 80296b0:	d94a      	bls.n	8029748 <arm_cfft_f32+0xe4>
 80296b2:	2d40      	cmp	r5, #64	; 0x40
 80296b4:	d0ed      	beq.n	8029692 <arm_cfft_f32+0x2e>
 80296b6:	2d80      	cmp	r5, #128	; 0x80
 80296b8:	d1f1      	bne.n	802969e <arm_cfft_f32+0x3a>
 80296ba:	4630      	mov	r0, r6
 80296bc:	4621      	mov	r1, r4
 80296be:	f7ff fca1 	bl	8029004 <arm_cfft_radix8by2_f32>
 80296c2:	f1b8 0f00 	cmp.w	r8, #0
 80296c6:	d0ed      	beq.n	80296a4 <arm_cfft_f32+0x40>
 80296c8:	4620      	mov	r0, r4
 80296ca:	89b1      	ldrh	r1, [r6, #12]
 80296cc:	68b2      	ldr	r2, [r6, #8]
 80296ce:	f7d6 fd8f 	bl	80001f0 <arm_bitreversal_32>
 80296d2:	2f01      	cmp	r7, #1
 80296d4:	d1e8      	bne.n	80296a8 <arm_cfft_f32+0x44>
 80296d6:	ee07 5a90 	vmov	s15, r5
 80296da:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80296de:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80296e2:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80296e6:	2d00      	cmp	r5, #0
 80296e8:	d0de      	beq.n	80296a8 <arm_cfft_f32+0x44>
 80296ea:	f104 0108 	add.w	r1, r4, #8
 80296ee:	2300      	movs	r3, #0
 80296f0:	3301      	adds	r3, #1
 80296f2:	429d      	cmp	r5, r3
 80296f4:	f101 0108 	add.w	r1, r1, #8
 80296f8:	ed11 7a04 	vldr	s14, [r1, #-16]
 80296fc:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029700:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029704:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029708:	ed01 7a04 	vstr	s14, [r1, #-16]
 802970c:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029710:	d1ee      	bne.n	80296f0 <arm_cfft_f32+0x8c>
 8029712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029716:	4630      	mov	r0, r6
 8029718:	4621      	mov	r1, r4
 802971a:	f7ff fd45 	bl	80291a8 <arm_cfft_radix8by4_f32>
 802971e:	e7be      	b.n	802969e <arm_cfft_f32+0x3a>
 8029720:	b1ad      	cbz	r5, 802974e <arm_cfft_f32+0xea>
 8029722:	f101 030c 	add.w	r3, r1, #12
 8029726:	2200      	movs	r2, #0
 8029728:	ed53 7a02 	vldr	s15, [r3, #-8]
 802972c:	3201      	adds	r2, #1
 802972e:	eef1 7a67 	vneg.f32	s15, s15
 8029732:	4295      	cmp	r5, r2
 8029734:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029738:	f103 0308 	add.w	r3, r3, #8
 802973c:	d1f4      	bne.n	8029728 <arm_cfft_f32+0xc4>
 802973e:	e79a      	b.n	8029676 <arm_cfft_f32+0x12>
 8029740:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8029744:	d0a5      	beq.n	8029692 <arm_cfft_f32+0x2e>
 8029746:	e7aa      	b.n	802969e <arm_cfft_f32+0x3a>
 8029748:	2d10      	cmp	r5, #16
 802974a:	d0b6      	beq.n	80296ba <arm_cfft_f32+0x56>
 802974c:	e7a7      	b.n	802969e <arm_cfft_f32+0x3a>
 802974e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029752:	d894      	bhi.n	802967e <arm_cfft_f32+0x1a>
 8029754:	e7aa      	b.n	80296ac <arm_cfft_f32+0x48>
 8029756:	bf00      	nop

08029758 <arm_cmplx_mag_f32>:
 8029758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802975c:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029760:	b084      	sub	sp, #16
 8029762:	d07f      	beq.n	8029864 <arm_cmplx_mag_f32+0x10c>
 8029764:	2700      	movs	r7, #0
 8029766:	f100 0420 	add.w	r4, r0, #32
 802976a:	f101 0510 	add.w	r5, r1, #16
 802976e:	4646      	mov	r6, r8
 8029770:	e05a      	b.n	8029828 <arm_cmplx_mag_f32+0xd0>
 8029772:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029776:	eeb4 0a40 	vcmp.f32	s0, s0
 802977a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802977e:	f040 80a4 	bne.w	80298ca <arm_cmplx_mag_f32+0x172>
 8029782:	ed05 0a04 	vstr	s0, [r5, #-16]
 8029786:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802978a:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802978e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029792:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029796:	ee77 7a80 	vadd.f32	s15, s15, s0
 802979a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802979e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297a2:	f2c0 808f 	blt.w	80298c4 <arm_cmplx_mag_f32+0x16c>
 80297a6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80297aa:	eeb4 0a40 	vcmp.f32	s0, s0
 80297ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297b2:	f040 80af 	bne.w	8029914 <arm_cmplx_mag_f32+0x1bc>
 80297b6:	ed05 0a03 	vstr	s0, [r5, #-12]
 80297ba:	ed54 7a04 	vldr	s15, [r4, #-16]
 80297be:	ed14 0a03 	vldr	s0, [r4, #-12]
 80297c2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80297c6:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297ca:	ee77 7a80 	vadd.f32	s15, s15, s0
 80297ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80297d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297d6:	db72      	blt.n	80298be <arm_cmplx_mag_f32+0x166>
 80297d8:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80297dc:	eeb4 0a40 	vcmp.f32	s0, s0
 80297e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297e4:	f040 808c 	bne.w	8029900 <arm_cmplx_mag_f32+0x1a8>
 80297e8:	ed05 0a02 	vstr	s0, [r5, #-8]
 80297ec:	ed54 7a02 	vldr	s15, [r4, #-8]
 80297f0:	ed14 0a01 	vldr	s0, [r4, #-4]
 80297f4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80297f8:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297fc:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029800:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029808:	db20      	blt.n	802984c <arm_cmplx_mag_f32+0xf4>
 802980a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802980e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029816:	d169      	bne.n	80298ec <arm_cmplx_mag_f32+0x194>
 8029818:	3e01      	subs	r6, #1
 802981a:	ed05 0a01 	vstr	s0, [r5, #-4]
 802981e:	f104 0420 	add.w	r4, r4, #32
 8029822:	f105 0510 	add.w	r5, r5, #16
 8029826:	d019      	beq.n	802985c <arm_cmplx_mag_f32+0x104>
 8029828:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802982c:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029830:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029834:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029838:	ee77 7a80 	vadd.f32	s15, s15, s0
 802983c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029844:	da95      	bge.n	8029772 <arm_cmplx_mag_f32+0x1a>
 8029846:	f845 7c10 	str.w	r7, [r5, #-16]
 802984a:	e79c      	b.n	8029786 <arm_cmplx_mag_f32+0x2e>
 802984c:	3e01      	subs	r6, #1
 802984e:	f845 7c04 	str.w	r7, [r5, #-4]
 8029852:	f104 0420 	add.w	r4, r4, #32
 8029856:	f105 0510 	add.w	r5, r5, #16
 802985a:	d1e5      	bne.n	8029828 <arm_cmplx_mag_f32+0xd0>
 802985c:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029860:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8029864:	f012 0503 	ands.w	r5, r2, #3
 8029868:	d026      	beq.n	80298b8 <arm_cmplx_mag_f32+0x160>
 802986a:	2600      	movs	r6, #0
 802986c:	f100 0408 	add.w	r4, r0, #8
 8029870:	e00c      	b.n	802988c <arm_cmplx_mag_f32+0x134>
 8029872:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029876:	eeb4 0a40 	vcmp.f32	s0, s0
 802987a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802987e:	d12e      	bne.n	80298de <arm_cmplx_mag_f32+0x186>
 8029880:	3d01      	subs	r5, #1
 8029882:	ed01 0a01 	vstr	s0, [r1, #-4]
 8029886:	f104 0408 	add.w	r4, r4, #8
 802988a:	d015      	beq.n	80298b8 <arm_cmplx_mag_f32+0x160>
 802988c:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029890:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029894:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029898:	ee20 0a00 	vmul.f32	s0, s0, s0
 802989c:	3104      	adds	r1, #4
 802989e:	ee77 7a80 	vadd.f32	s15, s15, s0
 80298a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80298a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298aa:	dae2      	bge.n	8029872 <arm_cmplx_mag_f32+0x11a>
 80298ac:	3d01      	subs	r5, #1
 80298ae:	f841 6c04 	str.w	r6, [r1, #-4]
 80298b2:	f104 0408 	add.w	r4, r4, #8
 80298b6:	d1e9      	bne.n	802988c <arm_cmplx_mag_f32+0x134>
 80298b8:	b004      	add	sp, #16
 80298ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80298be:	f845 7c08 	str.w	r7, [r5, #-8]
 80298c2:	e793      	b.n	80297ec <arm_cmplx_mag_f32+0x94>
 80298c4:	f845 7c0c 	str.w	r7, [r5, #-12]
 80298c8:	e777      	b.n	80297ba <arm_cmplx_mag_f32+0x62>
 80298ca:	eeb0 0a67 	vmov.f32	s0, s15
 80298ce:	9203      	str	r2, [sp, #12]
 80298d0:	9102      	str	r1, [sp, #8]
 80298d2:	9001      	str	r0, [sp, #4]
 80298d4:	f000 fb38 	bl	8029f48 <sqrtf>
 80298d8:	a801      	add	r0, sp, #4
 80298da:	c807      	ldmia	r0, {r0, r1, r2}
 80298dc:	e751      	b.n	8029782 <arm_cmplx_mag_f32+0x2a>
 80298de:	eeb0 0a67 	vmov.f32	s0, s15
 80298e2:	9101      	str	r1, [sp, #4]
 80298e4:	f000 fb30 	bl	8029f48 <sqrtf>
 80298e8:	9901      	ldr	r1, [sp, #4]
 80298ea:	e7c9      	b.n	8029880 <arm_cmplx_mag_f32+0x128>
 80298ec:	eeb0 0a67 	vmov.f32	s0, s15
 80298f0:	9203      	str	r2, [sp, #12]
 80298f2:	9102      	str	r1, [sp, #8]
 80298f4:	9001      	str	r0, [sp, #4]
 80298f6:	f000 fb27 	bl	8029f48 <sqrtf>
 80298fa:	a801      	add	r0, sp, #4
 80298fc:	c807      	ldmia	r0, {r0, r1, r2}
 80298fe:	e78b      	b.n	8029818 <arm_cmplx_mag_f32+0xc0>
 8029900:	eeb0 0a67 	vmov.f32	s0, s15
 8029904:	9203      	str	r2, [sp, #12]
 8029906:	9102      	str	r1, [sp, #8]
 8029908:	9001      	str	r0, [sp, #4]
 802990a:	f000 fb1d 	bl	8029f48 <sqrtf>
 802990e:	a801      	add	r0, sp, #4
 8029910:	c807      	ldmia	r0, {r0, r1, r2}
 8029912:	e769      	b.n	80297e8 <arm_cmplx_mag_f32+0x90>
 8029914:	eeb0 0a67 	vmov.f32	s0, s15
 8029918:	9203      	str	r2, [sp, #12]
 802991a:	9102      	str	r1, [sp, #8]
 802991c:	9001      	str	r0, [sp, #4]
 802991e:	f000 fb13 	bl	8029f48 <sqrtf>
 8029922:	a801      	add	r0, sp, #4
 8029924:	c807      	ldmia	r0, {r0, r1, r2}
 8029926:	e746      	b.n	80297b6 <arm_cmplx_mag_f32+0x5e>

08029928 <arm_radix8_butterfly_f32>:
 8029928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802992c:	ed2d 8b10 	vpush	{d8-d15}
 8029930:	b09d      	sub	sp, #116	; 0x74
 8029932:	461c      	mov	r4, r3
 8029934:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029c58 <arm_radix8_butterfly_f32+0x330>
 8029938:	921a      	str	r2, [sp, #104]	; 0x68
 802993a:	1d03      	adds	r3, r0, #4
 802993c:	4682      	mov	sl, r0
 802993e:	4689      	mov	r9, r1
 8029940:	468b      	mov	fp, r1
 8029942:	931b      	str	r3, [sp, #108]	; 0x6c
 8029944:	9400      	str	r4, [sp, #0]
 8029946:	469e      	mov	lr, r3
 8029948:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802994c:	005a      	lsls	r2, r3, #1
 802994e:	18d6      	adds	r6, r2, r3
 8029950:	18f5      	adds	r5, r6, r3
 8029952:	9203      	str	r2, [sp, #12]
 8029954:	195a      	adds	r2, r3, r5
 8029956:	18d0      	adds	r0, r2, r3
 8029958:	00df      	lsls	r7, r3, #3
 802995a:	1819      	adds	r1, r3, r0
 802995c:	463c      	mov	r4, r7
 802995e:	9701      	str	r7, [sp, #4]
 8029960:	4457      	add	r7, sl
 8029962:	930c      	str	r3, [sp, #48]	; 0x30
 8029964:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8029968:	011b      	lsls	r3, r3, #4
 802996a:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802996e:	eb07 0c04 	add.w	ip, r7, r4
 8029972:	9c00      	ldr	r4, [sp, #0]
 8029974:	9302      	str	r3, [sp, #8]
 8029976:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802997a:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802997e:	3204      	adds	r2, #4
 8029980:	3104      	adds	r1, #4
 8029982:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8029986:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802998a:	f04f 0800 	mov.w	r8, #0
 802998e:	eddc 7a00 	vldr	s15, [ip]
 8029992:	edd7 6a00 	vldr	s13, [r7]
 8029996:	edd6 3a00 	vldr	s7, [r6]
 802999a:	ed5e aa01 	vldr	s21, [lr, #-4]
 802999e:	edd5 4a00 	vldr	s9, [r5]
 80299a2:	ed90 2a00 	vldr	s4, [r0]
 80299a6:	ed12 7a01 	vldr	s14, [r2, #-4]
 80299aa:	ed51 0a01 	vldr	s1, [r1, #-4]
 80299ae:	ee77 8a82 	vadd.f32	s17, s15, s4
 80299b2:	ee33 4aa0 	vadd.f32	s8, s7, s1
 80299b6:	ee76 1a87 	vadd.f32	s3, s13, s14
 80299ba:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 80299be:	ee31 6a84 	vadd.f32	s12, s3, s8
 80299c2:	ee33 5a28 	vadd.f32	s10, s6, s17
 80299c6:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80299ca:	ee75 6a06 	vadd.f32	s13, s10, s12
 80299ce:	ee35 5a46 	vsub.f32	s10, s10, s12
 80299d2:	ed4e 6a01 	vstr	s13, [lr, #-4]
 80299d6:	ed85 5a00 	vstr	s10, [r5]
 80299da:	ed96 1a01 	vldr	s2, [r6, #4]
 80299de:	edd7 5a01 	vldr	s11, [r7, #4]
 80299e2:	ed92 aa00 	vldr	s20, [r2]
 80299e6:	ed91 6a00 	vldr	s12, [r1]
 80299ea:	ed9e 9a00 	vldr	s18, [lr]
 80299ee:	ed95 5a01 	vldr	s10, [r5, #4]
 80299f2:	eddc 6a01 	vldr	s13, [ip, #4]
 80299f6:	edd0 9a01 	vldr	s19, [r0, #4]
 80299fa:	ee73 0ae0 	vsub.f32	s1, s7, s1
 80299fe:	ee71 2a46 	vsub.f32	s5, s2, s12
 8029a02:	ee75 3aca 	vsub.f32	s7, s11, s20
 8029a06:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029a0a:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029a0e:	ee37 7a20 	vadd.f32	s14, s14, s1
 8029a12:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8029a16:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029a1a:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029a1e:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8029a22:	ee39 5a45 	vsub.f32	s10, s18, s10
 8029a26:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8029a2a:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029a2e:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8029a32:	ee31 6a06 	vadd.f32	s12, s2, s12
 8029a36:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029a3a:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029a3e:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8029a42:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8029a46:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029a4a:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029a4e:	ee75 8a86 	vadd.f32	s17, s11, s12
 8029a52:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8029a56:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029a5a:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029a5e:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8029a62:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8029a66:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029a6a:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029a6e:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8029a72:	ee75 4a22 	vadd.f32	s9, s10, s5
 8029a76:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029a7a:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029a7e:	ee33 8a06 	vadd.f32	s16, s6, s12
 8029a82:	ee75 2a87 	vadd.f32	s5, s11, s14
 8029a86:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029a8a:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029a8e:	ee74 0a61 	vsub.f32	s1, s8, s3
 8029a92:	ee33 2a80 	vadd.f32	s4, s7, s0
 8029a96:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029a9a:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029a9e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029aa2:	ee31 1a68 	vsub.f32	s2, s2, s17
 8029aa6:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029aaa:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029aae:	ee74 4a85 	vadd.f32	s9, s9, s10
 8029ab2:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8029ab6:	44d8      	add	r8, fp
 8029ab8:	45c1      	cmp	r9, r8
 8029aba:	ed8e 9a00 	vstr	s18, [lr]
 8029abe:	ed85 1a01 	vstr	s2, [r5, #4]
 8029ac2:	449e      	add	lr, r3
 8029ac4:	ed8c 8a00 	vstr	s16, [ip]
 8029ac8:	441d      	add	r5, r3
 8029aca:	ed80 6a00 	vstr	s12, [r0]
 8029ace:	edcc 0a01 	vstr	s1, [ip, #4]
 8029ad2:	ed80 4a01 	vstr	s8, [r0, #4]
 8029ad6:	449c      	add	ip, r3
 8029ad8:	ed87 2a00 	vstr	s4, [r7]
 8029adc:	4418      	add	r0, r3
 8029ade:	ed41 3a01 	vstr	s7, [r1, #-4]
 8029ae2:	ed42 2a01 	vstr	s5, [r2, #-4]
 8029ae6:	ed86 7a00 	vstr	s14, [r6]
 8029aea:	ed87 3a01 	vstr	s6, [r7, #4]
 8029aee:	edc1 4a00 	vstr	s9, [r1]
 8029af2:	441f      	add	r7, r3
 8029af4:	edc2 5a00 	vstr	s11, [r2]
 8029af8:	4419      	add	r1, r3
 8029afa:	edc6 6a01 	vstr	s13, [r6, #4]
 8029afe:	441a      	add	r2, r3
 8029b00:	441e      	add	r6, r3
 8029b02:	f63f af44 	bhi.w	802998e <arm_radix8_butterfly_f32+0x66>
 8029b06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029b08:	2907      	cmp	r1, #7
 8029b0a:	4620      	mov	r0, r4
 8029b0c:	f240 81e9 	bls.w	8029ee2 <arm_radix8_butterfly_f32+0x5ba>
 8029b10:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029b14:	193e      	adds	r6, r7, r4
 8029b16:	1935      	adds	r5, r6, r4
 8029b18:	9c03      	ldr	r4, [sp, #12]
 8029b1a:	9000      	str	r0, [sp, #0]
 8029b1c:	4622      	mov	r2, r4
 8029b1e:	3201      	adds	r2, #1
 8029b20:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029b24:	9900      	ldr	r1, [sp, #0]
 8029b26:	1828      	adds	r0, r5, r0
 8029b28:	eb00 0e01 	add.w	lr, r0, r1
 8029b2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029b2e:	440a      	add	r2, r1
 8029b30:	eb04 0c01 	add.w	ip, r4, r1
 8029b34:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029b38:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029b3c:	9a00      	ldr	r2, [sp, #0]
 8029b3e:	940f      	str	r4, [sp, #60]	; 0x3c
 8029b40:	00ed      	lsls	r5, r5, #3
 8029b42:	9511      	str	r5, [sp, #68]	; 0x44
 8029b44:	00d5      	lsls	r5, r2, #3
 8029b46:	950d      	str	r5, [sp, #52]	; 0x34
 8029b48:	9d01      	ldr	r5, [sp, #4]
 8029b4a:	3508      	adds	r5, #8
 8029b4c:	9516      	str	r5, [sp, #88]	; 0x58
 8029b4e:	9d02      	ldr	r5, [sp, #8]
 8029b50:	3508      	adds	r5, #8
 8029b52:	0114      	lsls	r4, r2, #4
 8029b54:	9517      	str	r5, [sp, #92]	; 0x5c
 8029b56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029b58:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029b5a:	940e      	str	r4, [sp, #56]	; 0x38
 8029b5c:	00c0      	lsls	r0, r0, #3
 8029b5e:	9010      	str	r0, [sp, #64]	; 0x40
 8029b60:	18aa      	adds	r2, r5, r2
 8029b62:	9207      	str	r2, [sp, #28]
 8029b64:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029b66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029b68:	18aa      	adds	r2, r5, r2
 8029b6a:	9208      	str	r2, [sp, #32]
 8029b6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029b6e:	18aa      	adds	r2, r5, r2
 8029b70:	9209      	str	r2, [sp, #36]	; 0x24
 8029b72:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029b76:	f10e 0204 	add.w	r2, lr, #4
 8029b7a:	920a      	str	r2, [sp, #40]	; 0x28
 8029b7c:	00c9      	lsls	r1, r1, #3
 8029b7e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029b80:	310c      	adds	r1, #12
 8029b82:	00f6      	lsls	r6, r6, #3
 8029b84:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029b88:	9114      	str	r1, [sp, #80]	; 0x50
 8029b8a:	18a9      	adds	r1, r5, r2
 8029b8c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029b8e:	9612      	str	r6, [sp, #72]	; 0x48
 8029b90:	00ff      	lsls	r7, r7, #3
 8029b92:	19ae      	adds	r6, r5, r6
 8029b94:	3008      	adds	r0, #8
 8029b96:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029b9a:	9606      	str	r6, [sp, #24]
 8029b9c:	9019      	str	r0, [sp, #100]	; 0x64
 8029b9e:	18aa      	adds	r2, r5, r2
 8029ba0:	0164      	lsls	r4, r4, #5
 8029ba2:	19ee      	adds	r6, r5, r7
 8029ba4:	f10c 000c 	add.w	r0, ip, #12
 8029ba8:	9713      	str	r7, [sp, #76]	; 0x4c
 8029baa:	9604      	str	r6, [sp, #16]
 8029bac:	9015      	str	r0, [sp, #84]	; 0x54
 8029bae:	9103      	str	r1, [sp, #12]
 8029bb0:	9205      	str	r2, [sp, #20]
 8029bb2:	f104 0208 	add.w	r2, r4, #8
 8029bb6:	9218      	str	r2, [sp, #96]	; 0x60
 8029bb8:	f04f 0801 	mov.w	r8, #1
 8029bbc:	2200      	movs	r2, #0
 8029bbe:	f102 0108 	add.w	r1, r2, #8
 8029bc2:	460f      	mov	r7, r1
 8029bc4:	910b      	str	r1, [sp, #44]	; 0x2c
 8029bc6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029bc8:	188e      	adds	r6, r1, r2
 8029bca:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029bcc:	188d      	adds	r5, r1, r2
 8029bce:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029bd0:	188c      	adds	r4, r1, r2
 8029bd2:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029bd4:	1888      	adds	r0, r1, r2
 8029bd6:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029bd8:	eb01 0c02 	add.w	ip, r1, r2
 8029bdc:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029bde:	440a      	add	r2, r1
 8029be0:	9903      	ldr	r1, [sp, #12]
 8029be2:	edd1 fa00 	vldr	s31, [r1]
 8029be6:	9905      	ldr	r1, [sp, #20]
 8029be8:	ed91 fa00 	vldr	s30, [r1]
 8029bec:	9904      	ldr	r1, [sp, #16]
 8029bee:	edd1 ea00 	vldr	s29, [r1]
 8029bf2:	9906      	ldr	r1, [sp, #24]
 8029bf4:	ed91 ea00 	vldr	s28, [r1]
 8029bf8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029bfa:	edd1 da00 	vldr	s27, [r1]
 8029bfe:	9908      	ldr	r1, [sp, #32]
 8029c00:	ed91 da00 	vldr	s26, [r1]
 8029c04:	9907      	ldr	r1, [sp, #28]
 8029c06:	edd1 ca00 	vldr	s25, [r1]
 8029c0a:	9903      	ldr	r1, [sp, #12]
 8029c0c:	ed91 ca01 	vldr	s24, [r1, #4]
 8029c10:	9905      	ldr	r1, [sp, #20]
 8029c12:	edd1 ba01 	vldr	s23, [r1, #4]
 8029c16:	9904      	ldr	r1, [sp, #16]
 8029c18:	edd1 aa01 	vldr	s21, [r1, #4]
 8029c1c:	9906      	ldr	r1, [sp, #24]
 8029c1e:	ed91 aa01 	vldr	s20, [r1, #4]
 8029c22:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029c24:	edd1 7a01 	vldr	s15, [r1, #4]
 8029c28:	9908      	ldr	r1, [sp, #32]
 8029c2a:	edcd 7a00 	vstr	s15, [sp]
 8029c2e:	edd1 7a01 	vldr	s15, [r1, #4]
 8029c32:	9907      	ldr	r1, [sp, #28]
 8029c34:	edcd 7a01 	vstr	s15, [sp, #4]
 8029c38:	edd1 7a01 	vldr	s15, [r1, #4]
 8029c3c:	eb0a 0e07 	add.w	lr, sl, r7
 8029c40:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029c42:	edcd 7a02 	vstr	s15, [sp, #8]
 8029c46:	eb0c 010a 	add.w	r1, ip, sl
 8029c4a:	4456      	add	r6, sl
 8029c4c:	4455      	add	r5, sl
 8029c4e:	4454      	add	r4, sl
 8029c50:	4450      	add	r0, sl
 8029c52:	4452      	add	r2, sl
 8029c54:	46c4      	mov	ip, r8
 8029c56:	e001      	b.n	8029c5c <arm_radix8_butterfly_f32+0x334>
 8029c58:	3f3504f3 	.word	0x3f3504f3
 8029c5c:	ed96 5a00 	vldr	s10, [r6]
 8029c60:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029c64:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029c68:	edd0 7a00 	vldr	s15, [r0]
 8029c6c:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029c70:	edde 3a00 	vldr	s7, [lr]
 8029c74:	ed94 3a00 	vldr	s6, [r4]
 8029c78:	ed95 2a00 	vldr	s4, [r5]
 8029c7c:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029c80:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029c84:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029c88:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029c8c:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029c90:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029c94:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029c98:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029c9c:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029ca0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029ca4:	ed8e 6a00 	vstr	s12, [lr]
 8029ca8:	edd0 8a01 	vldr	s17, [r0, #4]
 8029cac:	ed95 9a01 	vldr	s18, [r5, #4]
 8029cb0:	edd1 2a00 	vldr	s5, [r1]
 8029cb4:	ed97 7a00 	vldr	s14, [r7]
 8029cb8:	edd4 0a01 	vldr	s1, [r4, #4]
 8029cbc:	ed96 6a01 	vldr	s12, [r6, #4]
 8029cc0:	edd2 5a00 	vldr	s11, [r2]
 8029cc4:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029cc8:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029ccc:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029cd0:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029cd4:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029cd8:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029cdc:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029ce0:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029ce4:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029ce8:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029cec:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029cf0:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029cf4:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029cf8:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029cfc:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029d00:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029d04:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029d08:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029d0c:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029d10:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029d14:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029d18:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029d1c:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029d20:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029d24:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029d28:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029d2c:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029d30:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029d34:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029d38:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029d3c:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029d40:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029d44:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029d48:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029d4c:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029d50:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029d54:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029d58:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029d5c:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029d60:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029d64:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029d68:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029d6c:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029d70:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029d74:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029d78:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029d7c:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029d80:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029d84:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029d88:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029d8c:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029d90:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029d94:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029d98:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029d9c:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029da0:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029da4:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029da8:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029dac:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029db0:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029db4:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029db8:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029dbc:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029dc0:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029dc4:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029dc8:	ed86 3a00 	vstr	s6, [r6]
 8029dcc:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029dd0:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029dd4:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029dd8:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029ddc:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029de0:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029de4:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029de8:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029dec:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029df0:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029df4:	ed9d 4a00 	vldr	s8, [sp]
 8029df8:	edc6 6a01 	vstr	s13, [r6, #4]
 8029dfc:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029e00:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029e04:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029e08:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029e0c:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029e10:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029e14:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029e18:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029e1c:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029e20:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029e24:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029e28:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029e2c:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029e30:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029e34:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029e38:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029e3c:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029e40:	44dc      	add	ip, fp
 8029e42:	45e1      	cmp	r9, ip
 8029e44:	ed84 9a00 	vstr	s18, [r4]
 8029e48:	edc4 3a01 	vstr	s7, [r4, #4]
 8029e4c:	449e      	add	lr, r3
 8029e4e:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029e52:	edc2 2a00 	vstr	s5, [r2]
 8029e56:	441e      	add	r6, r3
 8029e58:	ed85 2a00 	vstr	s4, [r5]
 8029e5c:	ed85 8a01 	vstr	s16, [r5, #4]
 8029e60:	441c      	add	r4, r3
 8029e62:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029e66:	ed87 0a00 	vstr	s0, [r7]
 8029e6a:	441a      	add	r2, r3
 8029e6c:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029e70:	edc1 9a00 	vstr	s19, [r1]
 8029e74:	441d      	add	r5, r3
 8029e76:	edc0 0a00 	vstr	s1, [r0]
 8029e7a:	441f      	add	r7, r3
 8029e7c:	ed80 6a01 	vstr	s12, [r0, #4]
 8029e80:	4419      	add	r1, r3
 8029e82:	4418      	add	r0, r3
 8029e84:	f63f aeea 	bhi.w	8029c5c <arm_radix8_butterfly_f32+0x334>
 8029e88:	9a03      	ldr	r2, [sp, #12]
 8029e8a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029e8c:	440a      	add	r2, r1
 8029e8e:	9203      	str	r2, [sp, #12]
 8029e90:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029e92:	9a05      	ldr	r2, [sp, #20]
 8029e94:	440a      	add	r2, r1
 8029e96:	9205      	str	r2, [sp, #20]
 8029e98:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029e9a:	9a04      	ldr	r2, [sp, #16]
 8029e9c:	440a      	add	r2, r1
 8029e9e:	9204      	str	r2, [sp, #16]
 8029ea0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029ea2:	9a06      	ldr	r2, [sp, #24]
 8029ea4:	440a      	add	r2, r1
 8029ea6:	9206      	str	r2, [sp, #24]
 8029ea8:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029eaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029eac:	440a      	add	r2, r1
 8029eae:	9209      	str	r2, [sp, #36]	; 0x24
 8029eb0:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029eb2:	9a08      	ldr	r2, [sp, #32]
 8029eb4:	440a      	add	r2, r1
 8029eb6:	9208      	str	r2, [sp, #32]
 8029eb8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029eba:	9a07      	ldr	r2, [sp, #28]
 8029ebc:	440a      	add	r2, r1
 8029ebe:	9207      	str	r2, [sp, #28]
 8029ec0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029ec2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029ec4:	f108 0801 	add.w	r8, r8, #1
 8029ec8:	3208      	adds	r2, #8
 8029eca:	4588      	cmp	r8, r1
 8029ecc:	920a      	str	r2, [sp, #40]	; 0x28
 8029ece:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029ed0:	f47f ae75 	bne.w	8029bbe <arm_radix8_butterfly_f32+0x296>
 8029ed4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029ed8:	9300      	str	r3, [sp, #0]
 8029eda:	46c3      	mov	fp, r8
 8029edc:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029ee0:	e532      	b.n	8029948 <arm_radix8_butterfly_f32+0x20>
 8029ee2:	b01d      	add	sp, #116	; 0x74
 8029ee4:	ecbd 8b10 	vpop	{d8-d15}
 8029ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029eec <__aeabi_atexit>:
 8029eec:	460b      	mov	r3, r1
 8029eee:	4601      	mov	r1, r0
 8029ef0:	4618      	mov	r0, r3
 8029ef2:	f000 bfc7 	b.w	802ae84 <__cxa_atexit>

08029ef6 <_ZdlPvj>:
 8029ef6:	f000 b812 	b.w	8029f1e <_ZdlPv>

08029efa <__cxa_guard_acquire>:
 8029efa:	6803      	ldr	r3, [r0, #0]
 8029efc:	07db      	lsls	r3, r3, #31
 8029efe:	d406      	bmi.n	8029f0e <__cxa_guard_acquire+0x14>
 8029f00:	7843      	ldrb	r3, [r0, #1]
 8029f02:	b103      	cbz	r3, 8029f06 <__cxa_guard_acquire+0xc>
 8029f04:	deff      	udf	#255	; 0xff
 8029f06:	2301      	movs	r3, #1
 8029f08:	7043      	strb	r3, [r0, #1]
 8029f0a:	4618      	mov	r0, r3
 8029f0c:	4770      	bx	lr
 8029f0e:	2000      	movs	r0, #0
 8029f10:	4770      	bx	lr

08029f12 <__cxa_guard_release>:
 8029f12:	2301      	movs	r3, #1
 8029f14:	6003      	str	r3, [r0, #0]
 8029f16:	4770      	bx	lr

08029f18 <__cxa_pure_virtual>:
 8029f18:	b508      	push	{r3, lr}
 8029f1a:	f000 f80f 	bl	8029f3c <_ZSt9terminatev>

08029f1e <_ZdlPv>:
 8029f1e:	f000 befd 	b.w	802ad1c <free>

08029f22 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029f22:	b508      	push	{r3, lr}
 8029f24:	4780      	blx	r0
 8029f26:	f000 fec5 	bl	802acb4 <abort>
	...

08029f2c <_ZSt13get_terminatev>:
 8029f2c:	4b02      	ldr	r3, [pc, #8]	; (8029f38 <_ZSt13get_terminatev+0xc>)
 8029f2e:	6818      	ldr	r0, [r3, #0]
 8029f30:	f3bf 8f5b 	dmb	ish
 8029f34:	4770      	bx	lr
 8029f36:	bf00      	nop
 8029f38:	20000104 	.word	0x20000104

08029f3c <_ZSt9terminatev>:
 8029f3c:	b508      	push	{r3, lr}
 8029f3e:	f7ff fff5 	bl	8029f2c <_ZSt13get_terminatev>
 8029f42:	f7ff ffee 	bl	8029f22 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029f48 <sqrtf>:
 8029f48:	b508      	push	{r3, lr}
 8029f4a:	ed2d 8b02 	vpush	{d8}
 8029f4e:	eeb0 8a40 	vmov.f32	s16, s0
 8029f52:	f000 f97d 	bl	802a250 <__ieee754_sqrtf>
 8029f56:	eeb4 8a48 	vcmp.f32	s16, s16
 8029f5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f5e:	d60c      	bvs.n	8029f7a <sqrtf+0x32>
 8029f60:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029f80 <sqrtf+0x38>
 8029f64:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029f68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f6c:	d505      	bpl.n	8029f7a <sqrtf+0x32>
 8029f6e:	f001 f9a7 	bl	802b2c0 <__errno>
 8029f72:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029f76:	2321      	movs	r3, #33	; 0x21
 8029f78:	6003      	str	r3, [r0, #0]
 8029f7a:	ecbd 8b02 	vpop	{d8}
 8029f7e:	bd08      	pop	{r3, pc}
 8029f80:	00000000 	.word	0x00000000

08029f84 <atanf>:
 8029f84:	b538      	push	{r3, r4, r5, lr}
 8029f86:	ee10 5a10 	vmov	r5, s0
 8029f8a:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8029f8e:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8029f92:	eef0 7a40 	vmov.f32	s15, s0
 8029f96:	db10      	blt.n	8029fba <atanf+0x36>
 8029f98:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8029f9c:	dd04      	ble.n	8029fa8 <atanf+0x24>
 8029f9e:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029fa2:	eeb0 0a67 	vmov.f32	s0, s15
 8029fa6:	bd38      	pop	{r3, r4, r5, pc}
 8029fa8:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802a0e0 <atanf+0x15c>
 8029fac:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802a0e4 <atanf+0x160>
 8029fb0:	2d00      	cmp	r5, #0
 8029fb2:	bfd8      	it	le
 8029fb4:	eef0 7a47 	vmovle.f32	s15, s14
 8029fb8:	e7f3      	b.n	8029fa2 <atanf+0x1e>
 8029fba:	4b4b      	ldr	r3, [pc, #300]	; (802a0e8 <atanf+0x164>)
 8029fbc:	429c      	cmp	r4, r3
 8029fbe:	dc10      	bgt.n	8029fe2 <atanf+0x5e>
 8029fc0:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8029fc4:	da0a      	bge.n	8029fdc <atanf+0x58>
 8029fc6:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802a0ec <atanf+0x168>
 8029fca:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029fce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029fd2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029fd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fda:	dce2      	bgt.n	8029fa2 <atanf+0x1e>
 8029fdc:	f04f 33ff 	mov.w	r3, #4294967295
 8029fe0:	e013      	b.n	802a00a <atanf+0x86>
 8029fe2:	f000 f8e7 	bl	802a1b4 <fabsf>
 8029fe6:	4b42      	ldr	r3, [pc, #264]	; (802a0f0 <atanf+0x16c>)
 8029fe8:	429c      	cmp	r4, r3
 8029fea:	dc4f      	bgt.n	802a08c <atanf+0x108>
 8029fec:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8029ff0:	429c      	cmp	r4, r3
 8029ff2:	dc41      	bgt.n	802a078 <atanf+0xf4>
 8029ff4:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8029ff8:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029ffc:	eea0 7a27 	vfma.f32	s14, s0, s15
 802a000:	2300      	movs	r3, #0
 802a002:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a006:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a00a:	1c5a      	adds	r2, r3, #1
 802a00c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802a010:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802a0f4 <atanf+0x170>
 802a014:	eddf 5a38 	vldr	s11, [pc, #224]	; 802a0f8 <atanf+0x174>
 802a018:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802a0fc <atanf+0x178>
 802a01c:	ee66 6a06 	vmul.f32	s13, s12, s12
 802a020:	eee6 5a87 	vfma.f32	s11, s13, s14
 802a024:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802a100 <atanf+0x17c>
 802a028:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802a02c:	eddf 5a35 	vldr	s11, [pc, #212]	; 802a104 <atanf+0x180>
 802a030:	eee7 5a26 	vfma.f32	s11, s14, s13
 802a034:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802a108 <atanf+0x184>
 802a038:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802a03c:	eddf 5a33 	vldr	s11, [pc, #204]	; 802a10c <atanf+0x188>
 802a040:	eee7 5a26 	vfma.f32	s11, s14, s13
 802a044:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802a110 <atanf+0x18c>
 802a048:	eea6 5a87 	vfma.f32	s10, s13, s14
 802a04c:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802a114 <atanf+0x190>
 802a050:	eea5 7a26 	vfma.f32	s14, s10, s13
 802a054:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802a118 <atanf+0x194>
 802a058:	eea7 5a26 	vfma.f32	s10, s14, s13
 802a05c:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802a11c <atanf+0x198>
 802a060:	eea5 7a26 	vfma.f32	s14, s10, s13
 802a064:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a068:	eea5 7a86 	vfma.f32	s14, s11, s12
 802a06c:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a070:	d121      	bne.n	802a0b6 <atanf+0x132>
 802a072:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a076:	e794      	b.n	8029fa2 <atanf+0x1e>
 802a078:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a07c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a080:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a084:	2301      	movs	r3, #1
 802a086:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a08a:	e7be      	b.n	802a00a <atanf+0x86>
 802a08c:	4b24      	ldr	r3, [pc, #144]	; (802a120 <atanf+0x19c>)
 802a08e:	429c      	cmp	r4, r3
 802a090:	dc0b      	bgt.n	802a0aa <atanf+0x126>
 802a092:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802a096:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802a09a:	eea0 7a27 	vfma.f32	s14, s0, s15
 802a09e:	2302      	movs	r3, #2
 802a0a0:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a0a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802a0a8:	e7af      	b.n	802a00a <atanf+0x86>
 802a0aa:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802a0ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a0b2:	2303      	movs	r3, #3
 802a0b4:	e7a9      	b.n	802a00a <atanf+0x86>
 802a0b6:	4a1b      	ldr	r2, [pc, #108]	; (802a124 <atanf+0x1a0>)
 802a0b8:	491b      	ldr	r1, [pc, #108]	; (802a128 <atanf+0x1a4>)
 802a0ba:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a0be:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802a0c2:	edd3 6a00 	vldr	s13, [r3]
 802a0c6:	ee37 7a66 	vsub.f32	s14, s14, s13
 802a0ca:	2d00      	cmp	r5, #0
 802a0cc:	ee37 7a67 	vsub.f32	s14, s14, s15
 802a0d0:	edd2 7a00 	vldr	s15, [r2]
 802a0d4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a0d8:	bfb8      	it	lt
 802a0da:	eef1 7a67 	vneglt.f32	s15, s15
 802a0de:	e760      	b.n	8029fa2 <atanf+0x1e>
 802a0e0:	3fc90fdb 	.word	0x3fc90fdb
 802a0e4:	bfc90fdb 	.word	0xbfc90fdb
 802a0e8:	3edfffff 	.word	0x3edfffff
 802a0ec:	7149f2ca 	.word	0x7149f2ca
 802a0f0:	3f97ffff 	.word	0x3f97ffff
 802a0f4:	3c8569d7 	.word	0x3c8569d7
 802a0f8:	3d4bda59 	.word	0x3d4bda59
 802a0fc:	bd6ef16b 	.word	0xbd6ef16b
 802a100:	3d886b35 	.word	0x3d886b35
 802a104:	3dba2e6e 	.word	0x3dba2e6e
 802a108:	3e124925 	.word	0x3e124925
 802a10c:	3eaaaaab 	.word	0x3eaaaaab
 802a110:	bd15a221 	.word	0xbd15a221
 802a114:	bd9d8795 	.word	0xbd9d8795
 802a118:	bde38e38 	.word	0xbde38e38
 802a11c:	be4ccccd 	.word	0xbe4ccccd
 802a120:	401bffff 	.word	0x401bffff
 802a124:	08042f28 	.word	0x08042f28
 802a128:	08042f38 	.word	0x08042f38

0802a12c <cosf>:
 802a12c:	ee10 3a10 	vmov	r3, s0
 802a130:	b507      	push	{r0, r1, r2, lr}
 802a132:	4a1e      	ldr	r2, [pc, #120]	; (802a1ac <cosf+0x80>)
 802a134:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a138:	4293      	cmp	r3, r2
 802a13a:	dc06      	bgt.n	802a14a <cosf+0x1e>
 802a13c:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a1b0 <cosf+0x84>
 802a140:	b003      	add	sp, #12
 802a142:	f85d eb04 	ldr.w	lr, [sp], #4
 802a146:	f000 b90b 	b.w	802a360 <__kernel_cosf>
 802a14a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a14e:	db04      	blt.n	802a15a <cosf+0x2e>
 802a150:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a154:	b003      	add	sp, #12
 802a156:	f85d fb04 	ldr.w	pc, [sp], #4
 802a15a:	4668      	mov	r0, sp
 802a15c:	f000 f9a6 	bl	802a4ac <__ieee754_rem_pio2f>
 802a160:	f000 0003 	and.w	r0, r0, #3
 802a164:	2801      	cmp	r0, #1
 802a166:	d009      	beq.n	802a17c <cosf+0x50>
 802a168:	2802      	cmp	r0, #2
 802a16a:	d010      	beq.n	802a18e <cosf+0x62>
 802a16c:	b9b0      	cbnz	r0, 802a19c <cosf+0x70>
 802a16e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a172:	ed9d 0a00 	vldr	s0, [sp]
 802a176:	f000 f8f3 	bl	802a360 <__kernel_cosf>
 802a17a:	e7eb      	b.n	802a154 <cosf+0x28>
 802a17c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a180:	ed9d 0a00 	vldr	s0, [sp]
 802a184:	f000 f94a 	bl	802a41c <__kernel_sinf>
 802a188:	eeb1 0a40 	vneg.f32	s0, s0
 802a18c:	e7e2      	b.n	802a154 <cosf+0x28>
 802a18e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a192:	ed9d 0a00 	vldr	s0, [sp]
 802a196:	f000 f8e3 	bl	802a360 <__kernel_cosf>
 802a19a:	e7f5      	b.n	802a188 <cosf+0x5c>
 802a19c:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1a0:	ed9d 0a00 	vldr	s0, [sp]
 802a1a4:	2001      	movs	r0, #1
 802a1a6:	f000 f939 	bl	802a41c <__kernel_sinf>
 802a1aa:	e7d3      	b.n	802a154 <cosf+0x28>
 802a1ac:	3f490fd8 	.word	0x3f490fd8
 802a1b0:	00000000 	.word	0x00000000

0802a1b4 <fabsf>:
 802a1b4:	ee10 3a10 	vmov	r3, s0
 802a1b8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a1bc:	ee00 3a10 	vmov	s0, r3
 802a1c0:	4770      	bx	lr
	...

0802a1c4 <sinf>:
 802a1c4:	ee10 3a10 	vmov	r3, s0
 802a1c8:	b507      	push	{r0, r1, r2, lr}
 802a1ca:	4a1f      	ldr	r2, [pc, #124]	; (802a248 <sinf+0x84>)
 802a1cc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a1d0:	4293      	cmp	r3, r2
 802a1d2:	dc07      	bgt.n	802a1e4 <sinf+0x20>
 802a1d4:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a24c <sinf+0x88>
 802a1d8:	2000      	movs	r0, #0
 802a1da:	b003      	add	sp, #12
 802a1dc:	f85d eb04 	ldr.w	lr, [sp], #4
 802a1e0:	f000 b91c 	b.w	802a41c <__kernel_sinf>
 802a1e4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a1e8:	db04      	blt.n	802a1f4 <sinf+0x30>
 802a1ea:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a1ee:	b003      	add	sp, #12
 802a1f0:	f85d fb04 	ldr.w	pc, [sp], #4
 802a1f4:	4668      	mov	r0, sp
 802a1f6:	f000 f959 	bl	802a4ac <__ieee754_rem_pio2f>
 802a1fa:	f000 0003 	and.w	r0, r0, #3
 802a1fe:	2801      	cmp	r0, #1
 802a200:	d00a      	beq.n	802a218 <sinf+0x54>
 802a202:	2802      	cmp	r0, #2
 802a204:	d00f      	beq.n	802a226 <sinf+0x62>
 802a206:	b9c0      	cbnz	r0, 802a23a <sinf+0x76>
 802a208:	eddd 0a01 	vldr	s1, [sp, #4]
 802a20c:	ed9d 0a00 	vldr	s0, [sp]
 802a210:	2001      	movs	r0, #1
 802a212:	f000 f903 	bl	802a41c <__kernel_sinf>
 802a216:	e7ea      	b.n	802a1ee <sinf+0x2a>
 802a218:	eddd 0a01 	vldr	s1, [sp, #4]
 802a21c:	ed9d 0a00 	vldr	s0, [sp]
 802a220:	f000 f89e 	bl	802a360 <__kernel_cosf>
 802a224:	e7e3      	b.n	802a1ee <sinf+0x2a>
 802a226:	eddd 0a01 	vldr	s1, [sp, #4]
 802a22a:	ed9d 0a00 	vldr	s0, [sp]
 802a22e:	2001      	movs	r0, #1
 802a230:	f000 f8f4 	bl	802a41c <__kernel_sinf>
 802a234:	eeb1 0a40 	vneg.f32	s0, s0
 802a238:	e7d9      	b.n	802a1ee <sinf+0x2a>
 802a23a:	eddd 0a01 	vldr	s1, [sp, #4]
 802a23e:	ed9d 0a00 	vldr	s0, [sp]
 802a242:	f000 f88d 	bl	802a360 <__kernel_cosf>
 802a246:	e7f5      	b.n	802a234 <sinf+0x70>
 802a248:	3f490fd8 	.word	0x3f490fd8
 802a24c:	00000000 	.word	0x00000000

0802a250 <__ieee754_sqrtf>:
 802a250:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a254:	4770      	bx	lr
	...

0802a258 <ceilf>:
 802a258:	ee10 3a10 	vmov	r3, s0
 802a25c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a260:	3a7f      	subs	r2, #127	; 0x7f
 802a262:	2a16      	cmp	r2, #22
 802a264:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a268:	dc2a      	bgt.n	802a2c0 <ceilf+0x68>
 802a26a:	2a00      	cmp	r2, #0
 802a26c:	da11      	bge.n	802a292 <ceilf+0x3a>
 802a26e:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a2d4 <ceilf+0x7c>
 802a272:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a276:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a27a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a27e:	dd05      	ble.n	802a28c <ceilf+0x34>
 802a280:	2b00      	cmp	r3, #0
 802a282:	db23      	blt.n	802a2cc <ceilf+0x74>
 802a284:	2900      	cmp	r1, #0
 802a286:	bf18      	it	ne
 802a288:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a28c:	ee00 3a10 	vmov	s0, r3
 802a290:	4770      	bx	lr
 802a292:	4911      	ldr	r1, [pc, #68]	; (802a2d8 <ceilf+0x80>)
 802a294:	4111      	asrs	r1, r2
 802a296:	420b      	tst	r3, r1
 802a298:	d0fa      	beq.n	802a290 <ceilf+0x38>
 802a29a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a2d4 <ceilf+0x7c>
 802a29e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a2a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2aa:	ddef      	ble.n	802a28c <ceilf+0x34>
 802a2ac:	2b00      	cmp	r3, #0
 802a2ae:	bfc2      	ittt	gt
 802a2b0:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a2b4:	fa40 f202 	asrgt.w	r2, r0, r2
 802a2b8:	189b      	addgt	r3, r3, r2
 802a2ba:	ea23 0301 	bic.w	r3, r3, r1
 802a2be:	e7e5      	b.n	802a28c <ceilf+0x34>
 802a2c0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a2c4:	d3e4      	bcc.n	802a290 <ceilf+0x38>
 802a2c6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a2ca:	4770      	bx	lr
 802a2cc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a2d0:	e7dc      	b.n	802a28c <ceilf+0x34>
 802a2d2:	bf00      	nop
 802a2d4:	7149f2ca 	.word	0x7149f2ca
 802a2d8:	007fffff 	.word	0x007fffff

0802a2dc <floorf>:
 802a2dc:	ee10 3a10 	vmov	r3, s0
 802a2e0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a2e4:	3a7f      	subs	r2, #127	; 0x7f
 802a2e6:	2a16      	cmp	r2, #22
 802a2e8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a2ec:	dc2a      	bgt.n	802a344 <floorf+0x68>
 802a2ee:	2a00      	cmp	r2, #0
 802a2f0:	da11      	bge.n	802a316 <floorf+0x3a>
 802a2f2:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a354 <floorf+0x78>
 802a2f6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a2fa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a2fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a302:	dd05      	ble.n	802a310 <floorf+0x34>
 802a304:	2b00      	cmp	r3, #0
 802a306:	da23      	bge.n	802a350 <floorf+0x74>
 802a308:	4a13      	ldr	r2, [pc, #76]	; (802a358 <floorf+0x7c>)
 802a30a:	2900      	cmp	r1, #0
 802a30c:	bf18      	it	ne
 802a30e:	4613      	movne	r3, r2
 802a310:	ee00 3a10 	vmov	s0, r3
 802a314:	4770      	bx	lr
 802a316:	4911      	ldr	r1, [pc, #68]	; (802a35c <floorf+0x80>)
 802a318:	4111      	asrs	r1, r2
 802a31a:	420b      	tst	r3, r1
 802a31c:	d0fa      	beq.n	802a314 <floorf+0x38>
 802a31e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a354 <floorf+0x78>
 802a322:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a326:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a32a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a32e:	ddef      	ble.n	802a310 <floorf+0x34>
 802a330:	2b00      	cmp	r3, #0
 802a332:	bfbe      	ittt	lt
 802a334:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a338:	fa40 f202 	asrlt.w	r2, r0, r2
 802a33c:	189b      	addlt	r3, r3, r2
 802a33e:	ea23 0301 	bic.w	r3, r3, r1
 802a342:	e7e5      	b.n	802a310 <floorf+0x34>
 802a344:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a348:	d3e4      	bcc.n	802a314 <floorf+0x38>
 802a34a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a34e:	4770      	bx	lr
 802a350:	2300      	movs	r3, #0
 802a352:	e7dd      	b.n	802a310 <floorf+0x34>
 802a354:	7149f2ca 	.word	0x7149f2ca
 802a358:	bf800000 	.word	0xbf800000
 802a35c:	007fffff 	.word	0x007fffff

0802a360 <__kernel_cosf>:
 802a360:	ee10 3a10 	vmov	r3, s0
 802a364:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a368:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a36c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a370:	da05      	bge.n	802a37e <__kernel_cosf+0x1e>
 802a372:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a376:	ee17 2a90 	vmov	r2, s15
 802a37a:	2a00      	cmp	r2, #0
 802a37c:	d03b      	beq.n	802a3f6 <__kernel_cosf+0x96>
 802a37e:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a382:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a3fc <__kernel_cosf+0x9c>
 802a386:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a400 <__kernel_cosf+0xa0>
 802a38a:	4a1e      	ldr	r2, [pc, #120]	; (802a404 <__kernel_cosf+0xa4>)
 802a38c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a390:	4293      	cmp	r3, r2
 802a392:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a408 <__kernel_cosf+0xa8>
 802a396:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a39a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a40c <__kernel_cosf+0xac>
 802a39e:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a3a2:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a410 <__kernel_cosf+0xb0>
 802a3a6:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a3aa:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a414 <__kernel_cosf+0xb4>
 802a3ae:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a3b2:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a3b6:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a3ba:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a3be:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a3c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a3c6:	dc04      	bgt.n	802a3d2 <__kernel_cosf+0x72>
 802a3c8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a3cc:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a3d0:	4770      	bx	lr
 802a3d2:	4a11      	ldr	r2, [pc, #68]	; (802a418 <__kernel_cosf+0xb8>)
 802a3d4:	4293      	cmp	r3, r2
 802a3d6:	bfda      	itte	le
 802a3d8:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a3dc:	ee07 3a10 	vmovle	s14, r3
 802a3e0:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a3e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3e8:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a3ec:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a3f0:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a3f4:	4770      	bx	lr
 802a3f6:	eeb0 0a66 	vmov.f32	s0, s13
 802a3fa:	4770      	bx	lr
 802a3fc:	ad47d74e 	.word	0xad47d74e
 802a400:	310f74f6 	.word	0x310f74f6
 802a404:	3e999999 	.word	0x3e999999
 802a408:	b493f27c 	.word	0xb493f27c
 802a40c:	37d00d01 	.word	0x37d00d01
 802a410:	bab60b61 	.word	0xbab60b61
 802a414:	3d2aaaab 	.word	0x3d2aaaab
 802a418:	3f480000 	.word	0x3f480000

0802a41c <__kernel_sinf>:
 802a41c:	ee10 3a10 	vmov	r3, s0
 802a420:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a424:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a428:	da04      	bge.n	802a434 <__kernel_sinf+0x18>
 802a42a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a42e:	ee17 3a90 	vmov	r3, s15
 802a432:	b35b      	cbz	r3, 802a48c <__kernel_sinf+0x70>
 802a434:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a438:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a490 <__kernel_sinf+0x74>
 802a43c:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a494 <__kernel_sinf+0x78>
 802a440:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a444:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a498 <__kernel_sinf+0x7c>
 802a448:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a44c:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a49c <__kernel_sinf+0x80>
 802a450:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a454:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a4a0 <__kernel_sinf+0x84>
 802a458:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a45c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a460:	b930      	cbnz	r0, 802a470 <__kernel_sinf+0x54>
 802a462:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a4a4 <__kernel_sinf+0x88>
 802a466:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a46a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a46e:	4770      	bx	lr
 802a470:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a474:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a478:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a47c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a480:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a4a8 <__kernel_sinf+0x8c>
 802a484:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a488:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a48c:	4770      	bx	lr
 802a48e:	bf00      	nop
 802a490:	2f2ec9d3 	.word	0x2f2ec9d3
 802a494:	b2d72f34 	.word	0xb2d72f34
 802a498:	3638ef1b 	.word	0x3638ef1b
 802a49c:	b9500d01 	.word	0xb9500d01
 802a4a0:	3c088889 	.word	0x3c088889
 802a4a4:	be2aaaab 	.word	0xbe2aaaab
 802a4a8:	3e2aaaab 	.word	0x3e2aaaab

0802a4ac <__ieee754_rem_pio2f>:
 802a4ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a4ae:	ee10 6a10 	vmov	r6, s0
 802a4b2:	4b86      	ldr	r3, [pc, #536]	; (802a6cc <__ieee754_rem_pio2f+0x220>)
 802a4b4:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a4b8:	429d      	cmp	r5, r3
 802a4ba:	b087      	sub	sp, #28
 802a4bc:	4604      	mov	r4, r0
 802a4be:	dc05      	bgt.n	802a4cc <__ieee754_rem_pio2f+0x20>
 802a4c0:	2300      	movs	r3, #0
 802a4c2:	ed80 0a00 	vstr	s0, [r0]
 802a4c6:	6043      	str	r3, [r0, #4]
 802a4c8:	2000      	movs	r0, #0
 802a4ca:	e020      	b.n	802a50e <__ieee754_rem_pio2f+0x62>
 802a4cc:	4b80      	ldr	r3, [pc, #512]	; (802a6d0 <__ieee754_rem_pio2f+0x224>)
 802a4ce:	429d      	cmp	r5, r3
 802a4d0:	dc38      	bgt.n	802a544 <__ieee754_rem_pio2f+0x98>
 802a4d2:	2e00      	cmp	r6, #0
 802a4d4:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a6d4 <__ieee754_rem_pio2f+0x228>
 802a4d8:	4b7f      	ldr	r3, [pc, #508]	; (802a6d8 <__ieee754_rem_pio2f+0x22c>)
 802a4da:	f025 050f 	bic.w	r5, r5, #15
 802a4de:	dd18      	ble.n	802a512 <__ieee754_rem_pio2f+0x66>
 802a4e0:	429d      	cmp	r5, r3
 802a4e2:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a4e6:	bf09      	itett	eq
 802a4e8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a6dc <__ieee754_rem_pio2f+0x230>
 802a4ec:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a6e0 <__ieee754_rem_pio2f+0x234>
 802a4f0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a4f4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a6e4 <__ieee754_rem_pio2f+0x238>
 802a4f8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a4fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a500:	edc0 6a00 	vstr	s13, [r0]
 802a504:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a508:	edc0 7a01 	vstr	s15, [r0, #4]
 802a50c:	2001      	movs	r0, #1
 802a50e:	b007      	add	sp, #28
 802a510:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a512:	429d      	cmp	r5, r3
 802a514:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a518:	bf09      	itett	eq
 802a51a:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a6dc <__ieee754_rem_pio2f+0x230>
 802a51e:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a6e0 <__ieee754_rem_pio2f+0x234>
 802a522:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a526:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a6e4 <__ieee754_rem_pio2f+0x238>
 802a52a:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a52e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a532:	edc0 6a00 	vstr	s13, [r0]
 802a536:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a53a:	edc0 7a01 	vstr	s15, [r0, #4]
 802a53e:	f04f 30ff 	mov.w	r0, #4294967295
 802a542:	e7e4      	b.n	802a50e <__ieee754_rem_pio2f+0x62>
 802a544:	4b68      	ldr	r3, [pc, #416]	; (802a6e8 <__ieee754_rem_pio2f+0x23c>)
 802a546:	429d      	cmp	r5, r3
 802a548:	dc71      	bgt.n	802a62e <__ieee754_rem_pio2f+0x182>
 802a54a:	f7ff fe33 	bl	802a1b4 <fabsf>
 802a54e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a6ec <__ieee754_rem_pio2f+0x240>
 802a552:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a556:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a55a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a55e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a562:	ee17 0a90 	vmov	r0, s15
 802a566:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a6d4 <__ieee754_rem_pio2f+0x228>
 802a56a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a56e:	281f      	cmp	r0, #31
 802a570:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a6e0 <__ieee754_rem_pio2f+0x234>
 802a574:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a578:	eeb1 6a47 	vneg.f32	s12, s14
 802a57c:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a580:	ee16 2a90 	vmov	r2, s13
 802a584:	dc1c      	bgt.n	802a5c0 <__ieee754_rem_pio2f+0x114>
 802a586:	495a      	ldr	r1, [pc, #360]	; (802a6f0 <__ieee754_rem_pio2f+0x244>)
 802a588:	1e47      	subs	r7, r0, #1
 802a58a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a58e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a592:	428b      	cmp	r3, r1
 802a594:	d014      	beq.n	802a5c0 <__ieee754_rem_pio2f+0x114>
 802a596:	6022      	str	r2, [r4, #0]
 802a598:	ed94 7a00 	vldr	s14, [r4]
 802a59c:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a5a0:	2e00      	cmp	r6, #0
 802a5a2:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a5a6:	ed84 0a01 	vstr	s0, [r4, #4]
 802a5aa:	dab0      	bge.n	802a50e <__ieee754_rem_pio2f+0x62>
 802a5ac:	eeb1 7a47 	vneg.f32	s14, s14
 802a5b0:	eeb1 0a40 	vneg.f32	s0, s0
 802a5b4:	ed84 7a00 	vstr	s14, [r4]
 802a5b8:	ed84 0a01 	vstr	s0, [r4, #4]
 802a5bc:	4240      	negs	r0, r0
 802a5be:	e7a6      	b.n	802a50e <__ieee754_rem_pio2f+0x62>
 802a5c0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a5c4:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a5c8:	2908      	cmp	r1, #8
 802a5ca:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a5ce:	dde2      	ble.n	802a596 <__ieee754_rem_pio2f+0xea>
 802a5d0:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a6dc <__ieee754_rem_pio2f+0x230>
 802a5d4:	eef0 6a40 	vmov.f32	s13, s0
 802a5d8:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a5dc:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a5e0:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a5e4:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a6e4 <__ieee754_rem_pio2f+0x238>
 802a5e8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a5ec:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a5f0:	ee15 2a90 	vmov	r2, s11
 802a5f4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a5f8:	1a5b      	subs	r3, r3, r1
 802a5fa:	2b19      	cmp	r3, #25
 802a5fc:	dc04      	bgt.n	802a608 <__ieee754_rem_pio2f+0x15c>
 802a5fe:	edc4 5a00 	vstr	s11, [r4]
 802a602:	eeb0 0a66 	vmov.f32	s0, s13
 802a606:	e7c7      	b.n	802a598 <__ieee754_rem_pio2f+0xec>
 802a608:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a6f4 <__ieee754_rem_pio2f+0x248>
 802a60c:	eeb0 0a66 	vmov.f32	s0, s13
 802a610:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a614:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a618:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a6f8 <__ieee754_rem_pio2f+0x24c>
 802a61c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a620:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a624:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a628:	ed84 7a00 	vstr	s14, [r4]
 802a62c:	e7b4      	b.n	802a598 <__ieee754_rem_pio2f+0xec>
 802a62e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a632:	db06      	blt.n	802a642 <__ieee754_rem_pio2f+0x196>
 802a634:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a638:	edc0 7a01 	vstr	s15, [r0, #4]
 802a63c:	edc0 7a00 	vstr	s15, [r0]
 802a640:	e742      	b.n	802a4c8 <__ieee754_rem_pio2f+0x1c>
 802a642:	15ea      	asrs	r2, r5, #23
 802a644:	3a86      	subs	r2, #134	; 0x86
 802a646:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a64a:	ee07 3a90 	vmov	s15, r3
 802a64e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a652:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a6fc <__ieee754_rem_pio2f+0x250>
 802a656:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a65a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a65e:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a662:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a666:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a66a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a66e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a672:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a676:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a67a:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a67e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a682:	edcd 7a05 	vstr	s15, [sp, #20]
 802a686:	d11e      	bne.n	802a6c6 <__ieee754_rem_pio2f+0x21a>
 802a688:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a68c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a690:	bf14      	ite	ne
 802a692:	2302      	movne	r3, #2
 802a694:	2301      	moveq	r3, #1
 802a696:	491a      	ldr	r1, [pc, #104]	; (802a700 <__ieee754_rem_pio2f+0x254>)
 802a698:	9101      	str	r1, [sp, #4]
 802a69a:	2102      	movs	r1, #2
 802a69c:	9100      	str	r1, [sp, #0]
 802a69e:	a803      	add	r0, sp, #12
 802a6a0:	4621      	mov	r1, r4
 802a6a2:	f000 f895 	bl	802a7d0 <__kernel_rem_pio2f>
 802a6a6:	2e00      	cmp	r6, #0
 802a6a8:	f6bf af31 	bge.w	802a50e <__ieee754_rem_pio2f+0x62>
 802a6ac:	edd4 7a00 	vldr	s15, [r4]
 802a6b0:	eef1 7a67 	vneg.f32	s15, s15
 802a6b4:	edc4 7a00 	vstr	s15, [r4]
 802a6b8:	edd4 7a01 	vldr	s15, [r4, #4]
 802a6bc:	eef1 7a67 	vneg.f32	s15, s15
 802a6c0:	edc4 7a01 	vstr	s15, [r4, #4]
 802a6c4:	e77a      	b.n	802a5bc <__ieee754_rem_pio2f+0x110>
 802a6c6:	2303      	movs	r3, #3
 802a6c8:	e7e5      	b.n	802a696 <__ieee754_rem_pio2f+0x1ea>
 802a6ca:	bf00      	nop
 802a6cc:	3f490fd8 	.word	0x3f490fd8
 802a6d0:	4016cbe3 	.word	0x4016cbe3
 802a6d4:	3fc90f80 	.word	0x3fc90f80
 802a6d8:	3fc90fd0 	.word	0x3fc90fd0
 802a6dc:	37354400 	.word	0x37354400
 802a6e0:	37354443 	.word	0x37354443
 802a6e4:	2e85a308 	.word	0x2e85a308
 802a6e8:	43490f80 	.word	0x43490f80
 802a6ec:	3f22f984 	.word	0x3f22f984
 802a6f0:	08042f48 	.word	0x08042f48
 802a6f4:	2e85a300 	.word	0x2e85a300
 802a6f8:	248d3132 	.word	0x248d3132
 802a6fc:	43800000 	.word	0x43800000
 802a700:	08042fc8 	.word	0x08042fc8

0802a704 <scalbnf>:
 802a704:	ee10 3a10 	vmov	r3, s0
 802a708:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a70c:	d02b      	beq.n	802a766 <scalbnf+0x62>
 802a70e:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a712:	d302      	bcc.n	802a71a <scalbnf+0x16>
 802a714:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a718:	4770      	bx	lr
 802a71a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a71e:	d123      	bne.n	802a768 <scalbnf+0x64>
 802a720:	4b24      	ldr	r3, [pc, #144]	; (802a7b4 <scalbnf+0xb0>)
 802a722:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a7b8 <scalbnf+0xb4>
 802a726:	4298      	cmp	r0, r3
 802a728:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a72c:	db17      	blt.n	802a75e <scalbnf+0x5a>
 802a72e:	ee10 3a10 	vmov	r3, s0
 802a732:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a736:	3a19      	subs	r2, #25
 802a738:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a73c:	4288      	cmp	r0, r1
 802a73e:	dd15      	ble.n	802a76c <scalbnf+0x68>
 802a740:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a7bc <scalbnf+0xb8>
 802a744:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a7c0 <scalbnf+0xbc>
 802a748:	ee10 3a10 	vmov	r3, s0
 802a74c:	eeb0 7a67 	vmov.f32	s14, s15
 802a750:	2b00      	cmp	r3, #0
 802a752:	bfb8      	it	lt
 802a754:	eef0 7a66 	vmovlt.f32	s15, s13
 802a758:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a75c:	4770      	bx	lr
 802a75e:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a7c4 <scalbnf+0xc0>
 802a762:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a766:	4770      	bx	lr
 802a768:	0dd2      	lsrs	r2, r2, #23
 802a76a:	e7e5      	b.n	802a738 <scalbnf+0x34>
 802a76c:	4410      	add	r0, r2
 802a76e:	28fe      	cmp	r0, #254	; 0xfe
 802a770:	dce6      	bgt.n	802a740 <scalbnf+0x3c>
 802a772:	2800      	cmp	r0, #0
 802a774:	dd06      	ble.n	802a784 <scalbnf+0x80>
 802a776:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a77a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a77e:	ee00 3a10 	vmov	s0, r3
 802a782:	4770      	bx	lr
 802a784:	f110 0f16 	cmn.w	r0, #22
 802a788:	da09      	bge.n	802a79e <scalbnf+0x9a>
 802a78a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a7c4 <scalbnf+0xc0>
 802a78e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a7c8 <scalbnf+0xc4>
 802a792:	ee10 3a10 	vmov	r3, s0
 802a796:	eeb0 7a67 	vmov.f32	s14, s15
 802a79a:	2b00      	cmp	r3, #0
 802a79c:	e7d9      	b.n	802a752 <scalbnf+0x4e>
 802a79e:	3019      	adds	r0, #25
 802a7a0:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a7a4:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a7a8:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a7cc <scalbnf+0xc8>
 802a7ac:	ee07 3a90 	vmov	s15, r3
 802a7b0:	e7d7      	b.n	802a762 <scalbnf+0x5e>
 802a7b2:	bf00      	nop
 802a7b4:	ffff3cb0 	.word	0xffff3cb0
 802a7b8:	4c000000 	.word	0x4c000000
 802a7bc:	7149f2ca 	.word	0x7149f2ca
 802a7c0:	f149f2ca 	.word	0xf149f2ca
 802a7c4:	0da24260 	.word	0x0da24260
 802a7c8:	8da24260 	.word	0x8da24260
 802a7cc:	33000000 	.word	0x33000000

0802a7d0 <__kernel_rem_pio2f>:
 802a7d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a7d4:	ed2d 8b04 	vpush	{d8-d9}
 802a7d8:	b0d9      	sub	sp, #356	; 0x164
 802a7da:	4688      	mov	r8, r1
 802a7dc:	9002      	str	r0, [sp, #8]
 802a7de:	49b8      	ldr	r1, [pc, #736]	; (802aac0 <__kernel_rem_pio2f+0x2f0>)
 802a7e0:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a7e2:	9301      	str	r3, [sp, #4]
 802a7e4:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a7e8:	9901      	ldr	r1, [sp, #4]
 802a7ea:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a7ec:	f101 3bff 	add.w	fp, r1, #4294967295
 802a7f0:	1d11      	adds	r1, r2, #4
 802a7f2:	db25      	blt.n	802a840 <__kernel_rem_pio2f+0x70>
 802a7f4:	1ed0      	subs	r0, r2, #3
 802a7f6:	bf48      	it	mi
 802a7f8:	1d10      	addmi	r0, r2, #4
 802a7fa:	10c0      	asrs	r0, r0, #3
 802a7fc:	1c45      	adds	r5, r0, #1
 802a7fe:	00e9      	lsls	r1, r5, #3
 802a800:	eba0 070b 	sub.w	r7, r0, fp
 802a804:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802a808:	9103      	str	r1, [sp, #12]
 802a80a:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a80e:	eb0a 0c0b 	add.w	ip, sl, fp
 802a812:	ae1c      	add	r6, sp, #112	; 0x70
 802a814:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a818:	2400      	movs	r4, #0
 802a81a:	4564      	cmp	r4, ip
 802a81c:	dd12      	ble.n	802a844 <__kernel_rem_pio2f+0x74>
 802a81e:	9901      	ldr	r1, [sp, #4]
 802a820:	ac1c      	add	r4, sp, #112	; 0x70
 802a822:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a826:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a82a:	f04f 0c00 	mov.w	ip, #0
 802a82e:	45d4      	cmp	ip, sl
 802a830:	dc27      	bgt.n	802a882 <__kernel_rem_pio2f+0xb2>
 802a832:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a836:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802a83a:	4627      	mov	r7, r4
 802a83c:	2600      	movs	r6, #0
 802a83e:	e016      	b.n	802a86e <__kernel_rem_pio2f+0x9e>
 802a840:	2000      	movs	r0, #0
 802a842:	e7db      	b.n	802a7fc <__kernel_rem_pio2f+0x2c>
 802a844:	42e7      	cmn	r7, r4
 802a846:	bf5d      	ittte	pl
 802a848:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a84c:	ee07 1a90 	vmovpl	s15, r1
 802a850:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a854:	eef0 7a47 	vmovmi.f32	s15, s14
 802a858:	ece6 7a01 	vstmia	r6!, {s15}
 802a85c:	3401      	adds	r4, #1
 802a85e:	e7dc      	b.n	802a81a <__kernel_rem_pio2f+0x4a>
 802a860:	ecfe 6a01 	vldmia	lr!, {s13}
 802a864:	ed97 7a00 	vldr	s14, [r7]
 802a868:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a86c:	3601      	adds	r6, #1
 802a86e:	455e      	cmp	r6, fp
 802a870:	f1a7 0704 	sub.w	r7, r7, #4
 802a874:	ddf4      	ble.n	802a860 <__kernel_rem_pio2f+0x90>
 802a876:	ece9 7a01 	vstmia	r9!, {s15}
 802a87a:	f10c 0c01 	add.w	ip, ip, #1
 802a87e:	3404      	adds	r4, #4
 802a880:	e7d5      	b.n	802a82e <__kernel_rem_pio2f+0x5e>
 802a882:	a908      	add	r1, sp, #32
 802a884:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a888:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a88c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802aacc <__kernel_rem_pio2f+0x2fc>
 802a890:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802aac8 <__kernel_rem_pio2f+0x2f8>
 802a894:	9105      	str	r1, [sp, #20]
 802a896:	9304      	str	r3, [sp, #16]
 802a898:	4656      	mov	r6, sl
 802a89a:	00b3      	lsls	r3, r6, #2
 802a89c:	9306      	str	r3, [sp, #24]
 802a89e:	ab58      	add	r3, sp, #352	; 0x160
 802a8a0:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a8a4:	ac08      	add	r4, sp, #32
 802a8a6:	ab44      	add	r3, sp, #272	; 0x110
 802a8a8:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a8ac:	46a4      	mov	ip, r4
 802a8ae:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a8b2:	4637      	mov	r7, r6
 802a8b4:	2f00      	cmp	r7, #0
 802a8b6:	f1a0 0004 	sub.w	r0, r0, #4
 802a8ba:	dc4a      	bgt.n	802a952 <__kernel_rem_pio2f+0x182>
 802a8bc:	4628      	mov	r0, r5
 802a8be:	9207      	str	r2, [sp, #28]
 802a8c0:	f7ff ff20 	bl	802a704 <scalbnf>
 802a8c4:	eeb0 8a40 	vmov.f32	s16, s0
 802a8c8:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a8cc:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a8d0:	f7ff fd04 	bl	802a2dc <floorf>
 802a8d4:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a8d8:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a8dc:	2d00      	cmp	r5, #0
 802a8de:	9a07      	ldr	r2, [sp, #28]
 802a8e0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a8e4:	ee17 9a90 	vmov	r9, s15
 802a8e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a8ec:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a8f0:	dd41      	ble.n	802a976 <__kernel_rem_pio2f+0x1a6>
 802a8f2:	f106 3cff 	add.w	ip, r6, #4294967295
 802a8f6:	ab08      	add	r3, sp, #32
 802a8f8:	f1c5 0e08 	rsb	lr, r5, #8
 802a8fc:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a900:	fa47 f00e 	asr.w	r0, r7, lr
 802a904:	4481      	add	r9, r0
 802a906:	fa00 f00e 	lsl.w	r0, r0, lr
 802a90a:	1a3f      	subs	r7, r7, r0
 802a90c:	f1c5 0007 	rsb	r0, r5, #7
 802a910:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a914:	4107      	asrs	r7, r0
 802a916:	2f00      	cmp	r7, #0
 802a918:	dd3c      	ble.n	802a994 <__kernel_rem_pio2f+0x1c4>
 802a91a:	f04f 0e00 	mov.w	lr, #0
 802a91e:	f109 0901 	add.w	r9, r9, #1
 802a922:	4671      	mov	r1, lr
 802a924:	4576      	cmp	r6, lr
 802a926:	dc67      	bgt.n	802a9f8 <__kernel_rem_pio2f+0x228>
 802a928:	2d00      	cmp	r5, #0
 802a92a:	dd03      	ble.n	802a934 <__kernel_rem_pio2f+0x164>
 802a92c:	2d01      	cmp	r5, #1
 802a92e:	d074      	beq.n	802aa1a <__kernel_rem_pio2f+0x24a>
 802a930:	2d02      	cmp	r5, #2
 802a932:	d07b      	beq.n	802aa2c <__kernel_rem_pio2f+0x25c>
 802a934:	2f02      	cmp	r7, #2
 802a936:	d12d      	bne.n	802a994 <__kernel_rem_pio2f+0x1c4>
 802a938:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a93c:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a940:	b341      	cbz	r1, 802a994 <__kernel_rem_pio2f+0x1c4>
 802a942:	4628      	mov	r0, r5
 802a944:	9207      	str	r2, [sp, #28]
 802a946:	f7ff fedd 	bl	802a704 <scalbnf>
 802a94a:	9a07      	ldr	r2, [sp, #28]
 802a94c:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a950:	e020      	b.n	802a994 <__kernel_rem_pio2f+0x1c4>
 802a952:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a956:	3f01      	subs	r7, #1
 802a958:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a95c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a960:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a964:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a968:	ecac 0a01 	vstmia	ip!, {s0}
 802a96c:	ed90 0a00 	vldr	s0, [r0]
 802a970:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a974:	e79e      	b.n	802a8b4 <__kernel_rem_pio2f+0xe4>
 802a976:	d105      	bne.n	802a984 <__kernel_rem_pio2f+0x1b4>
 802a978:	1e70      	subs	r0, r6, #1
 802a97a:	ab08      	add	r3, sp, #32
 802a97c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a980:	11ff      	asrs	r7, r7, #7
 802a982:	e7c8      	b.n	802a916 <__kernel_rem_pio2f+0x146>
 802a984:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a988:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a98c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a990:	da30      	bge.n	802a9f4 <__kernel_rem_pio2f+0x224>
 802a992:	2700      	movs	r7, #0
 802a994:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a998:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a99c:	f040 809a 	bne.w	802aad4 <__kernel_rem_pio2f+0x304>
 802a9a0:	1e74      	subs	r4, r6, #1
 802a9a2:	46a4      	mov	ip, r4
 802a9a4:	2100      	movs	r1, #0
 802a9a6:	45d4      	cmp	ip, sl
 802a9a8:	da47      	bge.n	802aa3a <__kernel_rem_pio2f+0x26a>
 802a9aa:	2900      	cmp	r1, #0
 802a9ac:	d063      	beq.n	802aa76 <__kernel_rem_pio2f+0x2a6>
 802a9ae:	ab08      	add	r3, sp, #32
 802a9b0:	3d08      	subs	r5, #8
 802a9b2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a9b6:	2b00      	cmp	r3, #0
 802a9b8:	d07f      	beq.n	802aaba <__kernel_rem_pio2f+0x2ea>
 802a9ba:	4628      	mov	r0, r5
 802a9bc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a9c0:	f7ff fea0 	bl	802a704 <scalbnf>
 802a9c4:	1c63      	adds	r3, r4, #1
 802a9c6:	aa44      	add	r2, sp, #272	; 0x110
 802a9c8:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802aacc <__kernel_rem_pio2f+0x2fc>
 802a9cc:	0099      	lsls	r1, r3, #2
 802a9ce:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a9d2:	4623      	mov	r3, r4
 802a9d4:	2b00      	cmp	r3, #0
 802a9d6:	f280 80ad 	bge.w	802ab34 <__kernel_rem_pio2f+0x364>
 802a9da:	4623      	mov	r3, r4
 802a9dc:	2b00      	cmp	r3, #0
 802a9de:	f2c0 80cb 	blt.w	802ab78 <__kernel_rem_pio2f+0x3a8>
 802a9e2:	aa44      	add	r2, sp, #272	; 0x110
 802a9e4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a9e8:	4e36      	ldr	r6, [pc, #216]	; (802aac4 <__kernel_rem_pio2f+0x2f4>)
 802a9ea:	eddf 7a39 	vldr	s15, [pc, #228]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802a9ee:	2000      	movs	r0, #0
 802a9f0:	1ae2      	subs	r2, r4, r3
 802a9f2:	e0b6      	b.n	802ab62 <__kernel_rem_pio2f+0x392>
 802a9f4:	2702      	movs	r7, #2
 802a9f6:	e790      	b.n	802a91a <__kernel_rem_pio2f+0x14a>
 802a9f8:	6820      	ldr	r0, [r4, #0]
 802a9fa:	b949      	cbnz	r1, 802aa10 <__kernel_rem_pio2f+0x240>
 802a9fc:	b118      	cbz	r0, 802aa06 <__kernel_rem_pio2f+0x236>
 802a9fe:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802aa02:	6020      	str	r0, [r4, #0]
 802aa04:	2001      	movs	r0, #1
 802aa06:	f10e 0e01 	add.w	lr, lr, #1
 802aa0a:	3404      	adds	r4, #4
 802aa0c:	4601      	mov	r1, r0
 802aa0e:	e789      	b.n	802a924 <__kernel_rem_pio2f+0x154>
 802aa10:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802aa14:	6020      	str	r0, [r4, #0]
 802aa16:	4608      	mov	r0, r1
 802aa18:	e7f5      	b.n	802aa06 <__kernel_rem_pio2f+0x236>
 802aa1a:	1e74      	subs	r4, r6, #1
 802aa1c:	ab08      	add	r3, sp, #32
 802aa1e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802aa22:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802aa26:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802aa2a:	e783      	b.n	802a934 <__kernel_rem_pio2f+0x164>
 802aa2c:	1e74      	subs	r4, r6, #1
 802aa2e:	ab08      	add	r3, sp, #32
 802aa30:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802aa34:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802aa38:	e7f5      	b.n	802aa26 <__kernel_rem_pio2f+0x256>
 802aa3a:	ab08      	add	r3, sp, #32
 802aa3c:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802aa40:	f10c 3cff 	add.w	ip, ip, #4294967295
 802aa44:	4301      	orrs	r1, r0
 802aa46:	e7ae      	b.n	802a9a6 <__kernel_rem_pio2f+0x1d6>
 802aa48:	3001      	adds	r0, #1
 802aa4a:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802aa4e:	2f00      	cmp	r7, #0
 802aa50:	d0fa      	beq.n	802aa48 <__kernel_rem_pio2f+0x278>
 802aa52:	9b06      	ldr	r3, [sp, #24]
 802aa54:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802aa58:	eb0d 0403 	add.w	r4, sp, r3
 802aa5c:	9b01      	ldr	r3, [sp, #4]
 802aa5e:	18f7      	adds	r7, r6, r3
 802aa60:	ab1c      	add	r3, sp, #112	; 0x70
 802aa62:	f106 0c01 	add.w	ip, r6, #1
 802aa66:	3c4c      	subs	r4, #76	; 0x4c
 802aa68:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802aa6c:	4430      	add	r0, r6
 802aa6e:	4560      	cmp	r0, ip
 802aa70:	da04      	bge.n	802aa7c <__kernel_rem_pio2f+0x2ac>
 802aa72:	4606      	mov	r6, r0
 802aa74:	e711      	b.n	802a89a <__kernel_rem_pio2f+0xca>
 802aa76:	9c05      	ldr	r4, [sp, #20]
 802aa78:	2001      	movs	r0, #1
 802aa7a:	e7e6      	b.n	802aa4a <__kernel_rem_pio2f+0x27a>
 802aa7c:	9b04      	ldr	r3, [sp, #16]
 802aa7e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802aa82:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802aa86:	9306      	str	r3, [sp, #24]
 802aa88:	ee07 3a90 	vmov	s15, r3
 802aa8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aa90:	2600      	movs	r6, #0
 802aa92:	ece7 7a01 	vstmia	r7!, {s15}
 802aa96:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802aa9a:	46b9      	mov	r9, r7
 802aa9c:	455e      	cmp	r6, fp
 802aa9e:	dd04      	ble.n	802aaaa <__kernel_rem_pio2f+0x2da>
 802aaa0:	ece4 7a01 	vstmia	r4!, {s15}
 802aaa4:	f10c 0c01 	add.w	ip, ip, #1
 802aaa8:	e7e1      	b.n	802aa6e <__kernel_rem_pio2f+0x29e>
 802aaaa:	ecfe 6a01 	vldmia	lr!, {s13}
 802aaae:	ed39 7a01 	vldmdb	r9!, {s14}
 802aab2:	3601      	adds	r6, #1
 802aab4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aab8:	e7f0      	b.n	802aa9c <__kernel_rem_pio2f+0x2cc>
 802aaba:	3c01      	subs	r4, #1
 802aabc:	e777      	b.n	802a9ae <__kernel_rem_pio2f+0x1de>
 802aabe:	bf00      	nop
 802aac0:	0804330c 	.word	0x0804330c
 802aac4:	080432e0 	.word	0x080432e0
 802aac8:	43800000 	.word	0x43800000
 802aacc:	3b800000 	.word	0x3b800000
 802aad0:	00000000 	.word	0x00000000
 802aad4:	9b03      	ldr	r3, [sp, #12]
 802aad6:	eeb0 0a48 	vmov.f32	s0, s16
 802aada:	1a98      	subs	r0, r3, r2
 802aadc:	f7ff fe12 	bl	802a704 <scalbnf>
 802aae0:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802aac8 <__kernel_rem_pio2f+0x2f8>
 802aae4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802aae8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aaec:	db19      	blt.n	802ab22 <__kernel_rem_pio2f+0x352>
 802aaee:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802aacc <__kernel_rem_pio2f+0x2fc>
 802aaf2:	ee60 7a27 	vmul.f32	s15, s0, s15
 802aaf6:	aa08      	add	r2, sp, #32
 802aaf8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aafc:	1c74      	adds	r4, r6, #1
 802aafe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab02:	3508      	adds	r5, #8
 802ab04:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802ab08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ab0c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ab10:	ee10 3a10 	vmov	r3, s0
 802ab14:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802ab18:	ee17 3a90 	vmov	r3, s15
 802ab1c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802ab20:	e74b      	b.n	802a9ba <__kernel_rem_pio2f+0x1ea>
 802ab22:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ab26:	aa08      	add	r2, sp, #32
 802ab28:	ee10 3a10 	vmov	r3, s0
 802ab2c:	4634      	mov	r4, r6
 802ab2e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802ab32:	e742      	b.n	802a9ba <__kernel_rem_pio2f+0x1ea>
 802ab34:	a808      	add	r0, sp, #32
 802ab36:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802ab3a:	9001      	str	r0, [sp, #4]
 802ab3c:	ee07 0a90 	vmov	s15, r0
 802ab40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab44:	3b01      	subs	r3, #1
 802ab46:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ab4a:	ee20 0a07 	vmul.f32	s0, s0, s14
 802ab4e:	ed62 7a01 	vstmdb	r2!, {s15}
 802ab52:	e73f      	b.n	802a9d4 <__kernel_rem_pio2f+0x204>
 802ab54:	ecf6 6a01 	vldmia	r6!, {s13}
 802ab58:	ecb5 7a01 	vldmia	r5!, {s14}
 802ab5c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ab60:	3001      	adds	r0, #1
 802ab62:	4550      	cmp	r0, sl
 802ab64:	dc01      	bgt.n	802ab6a <__kernel_rem_pio2f+0x39a>
 802ab66:	4290      	cmp	r0, r2
 802ab68:	ddf4      	ble.n	802ab54 <__kernel_rem_pio2f+0x384>
 802ab6a:	a858      	add	r0, sp, #352	; 0x160
 802ab6c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802ab70:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802ab74:	3b01      	subs	r3, #1
 802ab76:	e731      	b.n	802a9dc <__kernel_rem_pio2f+0x20c>
 802ab78:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802ab7a:	2b02      	cmp	r3, #2
 802ab7c:	dc09      	bgt.n	802ab92 <__kernel_rem_pio2f+0x3c2>
 802ab7e:	2b00      	cmp	r3, #0
 802ab80:	dc2b      	bgt.n	802abda <__kernel_rem_pio2f+0x40a>
 802ab82:	d044      	beq.n	802ac0e <__kernel_rem_pio2f+0x43e>
 802ab84:	f009 0007 	and.w	r0, r9, #7
 802ab88:	b059      	add	sp, #356	; 0x164
 802ab8a:	ecbd 8b04 	vpop	{d8-d9}
 802ab8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ab92:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802ab94:	2b03      	cmp	r3, #3
 802ab96:	d1f5      	bne.n	802ab84 <__kernel_rem_pio2f+0x3b4>
 802ab98:	aa30      	add	r2, sp, #192	; 0xc0
 802ab9a:	1f0b      	subs	r3, r1, #4
 802ab9c:	4413      	add	r3, r2
 802ab9e:	461a      	mov	r2, r3
 802aba0:	4620      	mov	r0, r4
 802aba2:	2800      	cmp	r0, #0
 802aba4:	f1a2 0204 	sub.w	r2, r2, #4
 802aba8:	dc52      	bgt.n	802ac50 <__kernel_rem_pio2f+0x480>
 802abaa:	4622      	mov	r2, r4
 802abac:	2a01      	cmp	r2, #1
 802abae:	f1a3 0304 	sub.w	r3, r3, #4
 802abb2:	dc5d      	bgt.n	802ac70 <__kernel_rem_pio2f+0x4a0>
 802abb4:	ab30      	add	r3, sp, #192	; 0xc0
 802abb6:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802abba:	440b      	add	r3, r1
 802abbc:	2c01      	cmp	r4, #1
 802abbe:	dc67      	bgt.n	802ac90 <__kernel_rem_pio2f+0x4c0>
 802abc0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802abc4:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802abc8:	2f00      	cmp	r7, #0
 802abca:	d167      	bne.n	802ac9c <__kernel_rem_pio2f+0x4cc>
 802abcc:	edc8 6a00 	vstr	s13, [r8]
 802abd0:	ed88 7a01 	vstr	s14, [r8, #4]
 802abd4:	edc8 7a02 	vstr	s15, [r8, #8]
 802abd8:	e7d4      	b.n	802ab84 <__kernel_rem_pio2f+0x3b4>
 802abda:	ab30      	add	r3, sp, #192	; 0xc0
 802abdc:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802abe0:	440b      	add	r3, r1
 802abe2:	4622      	mov	r2, r4
 802abe4:	2a00      	cmp	r2, #0
 802abe6:	da24      	bge.n	802ac32 <__kernel_rem_pio2f+0x462>
 802abe8:	b34f      	cbz	r7, 802ac3e <__kernel_rem_pio2f+0x46e>
 802abea:	eef1 7a47 	vneg.f32	s15, s14
 802abee:	edc8 7a00 	vstr	s15, [r8]
 802abf2:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802abf6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abfa:	aa31      	add	r2, sp, #196	; 0xc4
 802abfc:	2301      	movs	r3, #1
 802abfe:	429c      	cmp	r4, r3
 802ac00:	da20      	bge.n	802ac44 <__kernel_rem_pio2f+0x474>
 802ac02:	b10f      	cbz	r7, 802ac08 <__kernel_rem_pio2f+0x438>
 802ac04:	eef1 7a67 	vneg.f32	s15, s15
 802ac08:	edc8 7a01 	vstr	s15, [r8, #4]
 802ac0c:	e7ba      	b.n	802ab84 <__kernel_rem_pio2f+0x3b4>
 802ac0e:	ab30      	add	r3, sp, #192	; 0xc0
 802ac10:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802aad0 <__kernel_rem_pio2f+0x300>
 802ac14:	440b      	add	r3, r1
 802ac16:	2c00      	cmp	r4, #0
 802ac18:	da05      	bge.n	802ac26 <__kernel_rem_pio2f+0x456>
 802ac1a:	b10f      	cbz	r7, 802ac20 <__kernel_rem_pio2f+0x450>
 802ac1c:	eef1 7a67 	vneg.f32	s15, s15
 802ac20:	edc8 7a00 	vstr	s15, [r8]
 802ac24:	e7ae      	b.n	802ab84 <__kernel_rem_pio2f+0x3b4>
 802ac26:	ed33 7a01 	vldmdb	r3!, {s14}
 802ac2a:	3c01      	subs	r4, #1
 802ac2c:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac30:	e7f1      	b.n	802ac16 <__kernel_rem_pio2f+0x446>
 802ac32:	ed73 7a01 	vldmdb	r3!, {s15}
 802ac36:	3a01      	subs	r2, #1
 802ac38:	ee37 7a27 	vadd.f32	s14, s14, s15
 802ac3c:	e7d2      	b.n	802abe4 <__kernel_rem_pio2f+0x414>
 802ac3e:	eef0 7a47 	vmov.f32	s15, s14
 802ac42:	e7d4      	b.n	802abee <__kernel_rem_pio2f+0x41e>
 802ac44:	ecb2 7a01 	vldmia	r2!, {s14}
 802ac48:	3301      	adds	r3, #1
 802ac4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac4e:	e7d6      	b.n	802abfe <__kernel_rem_pio2f+0x42e>
 802ac50:	edd2 7a00 	vldr	s15, [r2]
 802ac54:	edd2 6a01 	vldr	s13, [r2, #4]
 802ac58:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac5c:	3801      	subs	r0, #1
 802ac5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac62:	ed82 7a00 	vstr	s14, [r2]
 802ac66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ac6a:	edc2 7a01 	vstr	s15, [r2, #4]
 802ac6e:	e798      	b.n	802aba2 <__kernel_rem_pio2f+0x3d2>
 802ac70:	edd3 7a00 	vldr	s15, [r3]
 802ac74:	edd3 6a01 	vldr	s13, [r3, #4]
 802ac78:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac7c:	3a01      	subs	r2, #1
 802ac7e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac82:	ed83 7a00 	vstr	s14, [r3]
 802ac86:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ac8a:	edc3 7a01 	vstr	s15, [r3, #4]
 802ac8e:	e78d      	b.n	802abac <__kernel_rem_pio2f+0x3dc>
 802ac90:	ed33 7a01 	vldmdb	r3!, {s14}
 802ac94:	3c01      	subs	r4, #1
 802ac96:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac9a:	e78f      	b.n	802abbc <__kernel_rem_pio2f+0x3ec>
 802ac9c:	eef1 6a66 	vneg.f32	s13, s13
 802aca0:	eeb1 7a47 	vneg.f32	s14, s14
 802aca4:	edc8 6a00 	vstr	s13, [r8]
 802aca8:	ed88 7a01 	vstr	s14, [r8, #4]
 802acac:	eef1 7a67 	vneg.f32	s15, s15
 802acb0:	e790      	b.n	802abd4 <__kernel_rem_pio2f+0x404>
 802acb2:	bf00      	nop

0802acb4 <abort>:
 802acb4:	b508      	push	{r3, lr}
 802acb6:	2006      	movs	r0, #6
 802acb8:	f000 fa3a 	bl	802b130 <raise>
 802acbc:	2001      	movs	r0, #1
 802acbe:	f7d7 fb99 	bl	80023f4 <_exit>
	...

0802acc4 <__assert_func>:
 802acc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802acc6:	4614      	mov	r4, r2
 802acc8:	461a      	mov	r2, r3
 802acca:	4b09      	ldr	r3, [pc, #36]	; (802acf0 <__assert_func+0x2c>)
 802accc:	681b      	ldr	r3, [r3, #0]
 802acce:	4605      	mov	r5, r0
 802acd0:	68d8      	ldr	r0, [r3, #12]
 802acd2:	b14c      	cbz	r4, 802ace8 <__assert_func+0x24>
 802acd4:	4b07      	ldr	r3, [pc, #28]	; (802acf4 <__assert_func+0x30>)
 802acd6:	9100      	str	r1, [sp, #0]
 802acd8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802acdc:	4906      	ldr	r1, [pc, #24]	; (802acf8 <__assert_func+0x34>)
 802acde:	462b      	mov	r3, r5
 802ace0:	f000 f982 	bl	802afe8 <fiprintf>
 802ace4:	f7ff ffe6 	bl	802acb4 <abort>
 802ace8:	4b04      	ldr	r3, [pc, #16]	; (802acfc <__assert_func+0x38>)
 802acea:	461c      	mov	r4, r3
 802acec:	e7f3      	b.n	802acd6 <__assert_func+0x12>
 802acee:	bf00      	nop
 802acf0:	20000160 	.word	0x20000160
 802acf4:	08043318 	.word	0x08043318
 802acf8:	08043325 	.word	0x08043325
 802acfc:	08043353 	.word	0x08043353

0802ad00 <atexit>:
 802ad00:	2300      	movs	r3, #0
 802ad02:	4601      	mov	r1, r0
 802ad04:	461a      	mov	r2, r3
 802ad06:	4618      	mov	r0, r3
 802ad08:	f000 bb16 	b.w	802b338 <__register_exitproc>

0802ad0c <malloc>:
 802ad0c:	4b02      	ldr	r3, [pc, #8]	; (802ad18 <malloc+0xc>)
 802ad0e:	4601      	mov	r1, r0
 802ad10:	6818      	ldr	r0, [r3, #0]
 802ad12:	f000 b82b 	b.w	802ad6c <_malloc_r>
 802ad16:	bf00      	nop
 802ad18:	20000160 	.word	0x20000160

0802ad1c <free>:
 802ad1c:	4b02      	ldr	r3, [pc, #8]	; (802ad28 <free+0xc>)
 802ad1e:	4601      	mov	r1, r0
 802ad20:	6818      	ldr	r0, [r3, #0]
 802ad22:	f000 bb67 	b.w	802b3f4 <_free_r>
 802ad26:	bf00      	nop
 802ad28:	20000160 	.word	0x20000160

0802ad2c <sbrk_aligned>:
 802ad2c:	b570      	push	{r4, r5, r6, lr}
 802ad2e:	4e0e      	ldr	r6, [pc, #56]	; (802ad68 <sbrk_aligned+0x3c>)
 802ad30:	460c      	mov	r4, r1
 802ad32:	6831      	ldr	r1, [r6, #0]
 802ad34:	4605      	mov	r5, r0
 802ad36:	b911      	cbnz	r1, 802ad3e <sbrk_aligned+0x12>
 802ad38:	f000 faa0 	bl	802b27c <_sbrk_r>
 802ad3c:	6030      	str	r0, [r6, #0]
 802ad3e:	4621      	mov	r1, r4
 802ad40:	4628      	mov	r0, r5
 802ad42:	f000 fa9b 	bl	802b27c <_sbrk_r>
 802ad46:	1c43      	adds	r3, r0, #1
 802ad48:	d00a      	beq.n	802ad60 <sbrk_aligned+0x34>
 802ad4a:	1cc4      	adds	r4, r0, #3
 802ad4c:	f024 0403 	bic.w	r4, r4, #3
 802ad50:	42a0      	cmp	r0, r4
 802ad52:	d007      	beq.n	802ad64 <sbrk_aligned+0x38>
 802ad54:	1a21      	subs	r1, r4, r0
 802ad56:	4628      	mov	r0, r5
 802ad58:	f000 fa90 	bl	802b27c <_sbrk_r>
 802ad5c:	3001      	adds	r0, #1
 802ad5e:	d101      	bne.n	802ad64 <sbrk_aligned+0x38>
 802ad60:	f04f 34ff 	mov.w	r4, #4294967295
 802ad64:	4620      	mov	r0, r4
 802ad66:	bd70      	pop	{r4, r5, r6, pc}
 802ad68:	200136fc 	.word	0x200136fc

0802ad6c <_malloc_r>:
 802ad6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ad70:	1ccd      	adds	r5, r1, #3
 802ad72:	f025 0503 	bic.w	r5, r5, #3
 802ad76:	3508      	adds	r5, #8
 802ad78:	2d0c      	cmp	r5, #12
 802ad7a:	bf38      	it	cc
 802ad7c:	250c      	movcc	r5, #12
 802ad7e:	2d00      	cmp	r5, #0
 802ad80:	4607      	mov	r7, r0
 802ad82:	db01      	blt.n	802ad88 <_malloc_r+0x1c>
 802ad84:	42a9      	cmp	r1, r5
 802ad86:	d905      	bls.n	802ad94 <_malloc_r+0x28>
 802ad88:	230c      	movs	r3, #12
 802ad8a:	603b      	str	r3, [r7, #0]
 802ad8c:	2600      	movs	r6, #0
 802ad8e:	4630      	mov	r0, r6
 802ad90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ad94:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ae68 <_malloc_r+0xfc>
 802ad98:	f000 f868 	bl	802ae6c <__malloc_lock>
 802ad9c:	f8d8 3000 	ldr.w	r3, [r8]
 802ada0:	461c      	mov	r4, r3
 802ada2:	bb5c      	cbnz	r4, 802adfc <_malloc_r+0x90>
 802ada4:	4629      	mov	r1, r5
 802ada6:	4638      	mov	r0, r7
 802ada8:	f7ff ffc0 	bl	802ad2c <sbrk_aligned>
 802adac:	1c43      	adds	r3, r0, #1
 802adae:	4604      	mov	r4, r0
 802adb0:	d155      	bne.n	802ae5e <_malloc_r+0xf2>
 802adb2:	f8d8 4000 	ldr.w	r4, [r8]
 802adb6:	4626      	mov	r6, r4
 802adb8:	2e00      	cmp	r6, #0
 802adba:	d145      	bne.n	802ae48 <_malloc_r+0xdc>
 802adbc:	2c00      	cmp	r4, #0
 802adbe:	d048      	beq.n	802ae52 <_malloc_r+0xe6>
 802adc0:	6823      	ldr	r3, [r4, #0]
 802adc2:	4631      	mov	r1, r6
 802adc4:	4638      	mov	r0, r7
 802adc6:	eb04 0903 	add.w	r9, r4, r3
 802adca:	f000 fa57 	bl	802b27c <_sbrk_r>
 802adce:	4581      	cmp	r9, r0
 802add0:	d13f      	bne.n	802ae52 <_malloc_r+0xe6>
 802add2:	6821      	ldr	r1, [r4, #0]
 802add4:	1a6d      	subs	r5, r5, r1
 802add6:	4629      	mov	r1, r5
 802add8:	4638      	mov	r0, r7
 802adda:	f7ff ffa7 	bl	802ad2c <sbrk_aligned>
 802adde:	3001      	adds	r0, #1
 802ade0:	d037      	beq.n	802ae52 <_malloc_r+0xe6>
 802ade2:	6823      	ldr	r3, [r4, #0]
 802ade4:	442b      	add	r3, r5
 802ade6:	6023      	str	r3, [r4, #0]
 802ade8:	f8d8 3000 	ldr.w	r3, [r8]
 802adec:	2b00      	cmp	r3, #0
 802adee:	d038      	beq.n	802ae62 <_malloc_r+0xf6>
 802adf0:	685a      	ldr	r2, [r3, #4]
 802adf2:	42a2      	cmp	r2, r4
 802adf4:	d12b      	bne.n	802ae4e <_malloc_r+0xe2>
 802adf6:	2200      	movs	r2, #0
 802adf8:	605a      	str	r2, [r3, #4]
 802adfa:	e00f      	b.n	802ae1c <_malloc_r+0xb0>
 802adfc:	6822      	ldr	r2, [r4, #0]
 802adfe:	1b52      	subs	r2, r2, r5
 802ae00:	d41f      	bmi.n	802ae42 <_malloc_r+0xd6>
 802ae02:	2a0b      	cmp	r2, #11
 802ae04:	d917      	bls.n	802ae36 <_malloc_r+0xca>
 802ae06:	1961      	adds	r1, r4, r5
 802ae08:	42a3      	cmp	r3, r4
 802ae0a:	6025      	str	r5, [r4, #0]
 802ae0c:	bf18      	it	ne
 802ae0e:	6059      	strne	r1, [r3, #4]
 802ae10:	6863      	ldr	r3, [r4, #4]
 802ae12:	bf08      	it	eq
 802ae14:	f8c8 1000 	streq.w	r1, [r8]
 802ae18:	5162      	str	r2, [r4, r5]
 802ae1a:	604b      	str	r3, [r1, #4]
 802ae1c:	4638      	mov	r0, r7
 802ae1e:	f104 060b 	add.w	r6, r4, #11
 802ae22:	f000 f829 	bl	802ae78 <__malloc_unlock>
 802ae26:	f026 0607 	bic.w	r6, r6, #7
 802ae2a:	1d23      	adds	r3, r4, #4
 802ae2c:	1af2      	subs	r2, r6, r3
 802ae2e:	d0ae      	beq.n	802ad8e <_malloc_r+0x22>
 802ae30:	1b9b      	subs	r3, r3, r6
 802ae32:	50a3      	str	r3, [r4, r2]
 802ae34:	e7ab      	b.n	802ad8e <_malloc_r+0x22>
 802ae36:	42a3      	cmp	r3, r4
 802ae38:	6862      	ldr	r2, [r4, #4]
 802ae3a:	d1dd      	bne.n	802adf8 <_malloc_r+0x8c>
 802ae3c:	f8c8 2000 	str.w	r2, [r8]
 802ae40:	e7ec      	b.n	802ae1c <_malloc_r+0xb0>
 802ae42:	4623      	mov	r3, r4
 802ae44:	6864      	ldr	r4, [r4, #4]
 802ae46:	e7ac      	b.n	802ada2 <_malloc_r+0x36>
 802ae48:	4634      	mov	r4, r6
 802ae4a:	6876      	ldr	r6, [r6, #4]
 802ae4c:	e7b4      	b.n	802adb8 <_malloc_r+0x4c>
 802ae4e:	4613      	mov	r3, r2
 802ae50:	e7cc      	b.n	802adec <_malloc_r+0x80>
 802ae52:	230c      	movs	r3, #12
 802ae54:	603b      	str	r3, [r7, #0]
 802ae56:	4638      	mov	r0, r7
 802ae58:	f000 f80e 	bl	802ae78 <__malloc_unlock>
 802ae5c:	e797      	b.n	802ad8e <_malloc_r+0x22>
 802ae5e:	6025      	str	r5, [r4, #0]
 802ae60:	e7dc      	b.n	802ae1c <_malloc_r+0xb0>
 802ae62:	605b      	str	r3, [r3, #4]
 802ae64:	deff      	udf	#255	; 0xff
 802ae66:	bf00      	nop
 802ae68:	200136f8 	.word	0x200136f8

0802ae6c <__malloc_lock>:
 802ae6c:	4801      	ldr	r0, [pc, #4]	; (802ae74 <__malloc_lock+0x8>)
 802ae6e:	f000 ba52 	b.w	802b316 <__retarget_lock_acquire_recursive>
 802ae72:	bf00      	nop
 802ae74:	20013841 	.word	0x20013841

0802ae78 <__malloc_unlock>:
 802ae78:	4801      	ldr	r0, [pc, #4]	; (802ae80 <__malloc_unlock+0x8>)
 802ae7a:	f000 ba4d 	b.w	802b318 <__retarget_lock_release_recursive>
 802ae7e:	bf00      	nop
 802ae80:	20013841 	.word	0x20013841

0802ae84 <__cxa_atexit>:
 802ae84:	b510      	push	{r4, lr}
 802ae86:	4c05      	ldr	r4, [pc, #20]	; (802ae9c <__cxa_atexit+0x18>)
 802ae88:	4613      	mov	r3, r2
 802ae8a:	b12c      	cbz	r4, 802ae98 <__cxa_atexit+0x14>
 802ae8c:	460a      	mov	r2, r1
 802ae8e:	4601      	mov	r1, r0
 802ae90:	2002      	movs	r0, #2
 802ae92:	f000 fa51 	bl	802b338 <__register_exitproc>
 802ae96:	bd10      	pop	{r4, pc}
 802ae98:	4620      	mov	r0, r4
 802ae9a:	e7fc      	b.n	802ae96 <__cxa_atexit+0x12>
 802ae9c:	0802b339 	.word	0x0802b339

0802aea0 <std>:
 802aea0:	2300      	movs	r3, #0
 802aea2:	b510      	push	{r4, lr}
 802aea4:	4604      	mov	r4, r0
 802aea6:	e9c0 3300 	strd	r3, r3, [r0]
 802aeaa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802aeae:	6083      	str	r3, [r0, #8]
 802aeb0:	8181      	strh	r1, [r0, #12]
 802aeb2:	6643      	str	r3, [r0, #100]	; 0x64
 802aeb4:	81c2      	strh	r2, [r0, #14]
 802aeb6:	6183      	str	r3, [r0, #24]
 802aeb8:	4619      	mov	r1, r3
 802aeba:	2208      	movs	r2, #8
 802aebc:	305c      	adds	r0, #92	; 0x5c
 802aebe:	f000 f906 	bl	802b0ce <memset>
 802aec2:	4b0d      	ldr	r3, [pc, #52]	; (802aef8 <std+0x58>)
 802aec4:	6263      	str	r3, [r4, #36]	; 0x24
 802aec6:	4b0d      	ldr	r3, [pc, #52]	; (802aefc <std+0x5c>)
 802aec8:	62a3      	str	r3, [r4, #40]	; 0x28
 802aeca:	4b0d      	ldr	r3, [pc, #52]	; (802af00 <std+0x60>)
 802aecc:	62e3      	str	r3, [r4, #44]	; 0x2c
 802aece:	4b0d      	ldr	r3, [pc, #52]	; (802af04 <std+0x64>)
 802aed0:	6323      	str	r3, [r4, #48]	; 0x30
 802aed2:	4b0d      	ldr	r3, [pc, #52]	; (802af08 <std+0x68>)
 802aed4:	6224      	str	r4, [r4, #32]
 802aed6:	429c      	cmp	r4, r3
 802aed8:	d006      	beq.n	802aee8 <std+0x48>
 802aeda:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802aede:	4294      	cmp	r4, r2
 802aee0:	d002      	beq.n	802aee8 <std+0x48>
 802aee2:	33d0      	adds	r3, #208	; 0xd0
 802aee4:	429c      	cmp	r4, r3
 802aee6:	d105      	bne.n	802aef4 <std+0x54>
 802aee8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802aeec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aef0:	f000 ba10 	b.w	802b314 <__retarget_lock_init_recursive>
 802aef4:	bd10      	pop	{r4, pc}
 802aef6:	bf00      	nop
 802aef8:	0802b049 	.word	0x0802b049
 802aefc:	0802b06b 	.word	0x0802b06b
 802af00:	0802b0a3 	.word	0x0802b0a3
 802af04:	0802b0c7 	.word	0x0802b0c7
 802af08:	20013700 	.word	0x20013700

0802af0c <stdio_exit_handler>:
 802af0c:	4a02      	ldr	r2, [pc, #8]	; (802af18 <stdio_exit_handler+0xc>)
 802af0e:	4903      	ldr	r1, [pc, #12]	; (802af1c <stdio_exit_handler+0x10>)
 802af10:	4803      	ldr	r0, [pc, #12]	; (802af20 <stdio_exit_handler+0x14>)
 802af12:	f000 b87b 	b.w	802b00c <_fwalk_sglue>
 802af16:	bf00      	nop
 802af18:	20000108 	.word	0x20000108
 802af1c:	0802bb41 	.word	0x0802bb41
 802af20:	20000114 	.word	0x20000114

0802af24 <cleanup_stdio>:
 802af24:	6841      	ldr	r1, [r0, #4]
 802af26:	4b0c      	ldr	r3, [pc, #48]	; (802af58 <cleanup_stdio+0x34>)
 802af28:	4299      	cmp	r1, r3
 802af2a:	b510      	push	{r4, lr}
 802af2c:	4604      	mov	r4, r0
 802af2e:	d001      	beq.n	802af34 <cleanup_stdio+0x10>
 802af30:	f000 fe06 	bl	802bb40 <_fflush_r>
 802af34:	68a1      	ldr	r1, [r4, #8]
 802af36:	4b09      	ldr	r3, [pc, #36]	; (802af5c <cleanup_stdio+0x38>)
 802af38:	4299      	cmp	r1, r3
 802af3a:	d002      	beq.n	802af42 <cleanup_stdio+0x1e>
 802af3c:	4620      	mov	r0, r4
 802af3e:	f000 fdff 	bl	802bb40 <_fflush_r>
 802af42:	68e1      	ldr	r1, [r4, #12]
 802af44:	4b06      	ldr	r3, [pc, #24]	; (802af60 <cleanup_stdio+0x3c>)
 802af46:	4299      	cmp	r1, r3
 802af48:	d004      	beq.n	802af54 <cleanup_stdio+0x30>
 802af4a:	4620      	mov	r0, r4
 802af4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af50:	f000 bdf6 	b.w	802bb40 <_fflush_r>
 802af54:	bd10      	pop	{r4, pc}
 802af56:	bf00      	nop
 802af58:	20013700 	.word	0x20013700
 802af5c:	20013768 	.word	0x20013768
 802af60:	200137d0 	.word	0x200137d0

0802af64 <global_stdio_init.part.0>:
 802af64:	b510      	push	{r4, lr}
 802af66:	4b0b      	ldr	r3, [pc, #44]	; (802af94 <global_stdio_init.part.0+0x30>)
 802af68:	4c0b      	ldr	r4, [pc, #44]	; (802af98 <global_stdio_init.part.0+0x34>)
 802af6a:	4a0c      	ldr	r2, [pc, #48]	; (802af9c <global_stdio_init.part.0+0x38>)
 802af6c:	601a      	str	r2, [r3, #0]
 802af6e:	4620      	mov	r0, r4
 802af70:	2200      	movs	r2, #0
 802af72:	2104      	movs	r1, #4
 802af74:	f7ff ff94 	bl	802aea0 <std>
 802af78:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802af7c:	2201      	movs	r2, #1
 802af7e:	2109      	movs	r1, #9
 802af80:	f7ff ff8e 	bl	802aea0 <std>
 802af84:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802af88:	2202      	movs	r2, #2
 802af8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af8e:	2112      	movs	r1, #18
 802af90:	f7ff bf86 	b.w	802aea0 <std>
 802af94:	20013838 	.word	0x20013838
 802af98:	20013700 	.word	0x20013700
 802af9c:	0802af0d 	.word	0x0802af0d

0802afa0 <__sfp_lock_acquire>:
 802afa0:	4801      	ldr	r0, [pc, #4]	; (802afa8 <__sfp_lock_acquire+0x8>)
 802afa2:	f000 b9b8 	b.w	802b316 <__retarget_lock_acquire_recursive>
 802afa6:	bf00      	nop
 802afa8:	20013842 	.word	0x20013842

0802afac <__sfp_lock_release>:
 802afac:	4801      	ldr	r0, [pc, #4]	; (802afb4 <__sfp_lock_release+0x8>)
 802afae:	f000 b9b3 	b.w	802b318 <__retarget_lock_release_recursive>
 802afb2:	bf00      	nop
 802afb4:	20013842 	.word	0x20013842

0802afb8 <__sinit>:
 802afb8:	b510      	push	{r4, lr}
 802afba:	4604      	mov	r4, r0
 802afbc:	f7ff fff0 	bl	802afa0 <__sfp_lock_acquire>
 802afc0:	6a23      	ldr	r3, [r4, #32]
 802afc2:	b11b      	cbz	r3, 802afcc <__sinit+0x14>
 802afc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802afc8:	f7ff bff0 	b.w	802afac <__sfp_lock_release>
 802afcc:	4b04      	ldr	r3, [pc, #16]	; (802afe0 <__sinit+0x28>)
 802afce:	6223      	str	r3, [r4, #32]
 802afd0:	4b04      	ldr	r3, [pc, #16]	; (802afe4 <__sinit+0x2c>)
 802afd2:	681b      	ldr	r3, [r3, #0]
 802afd4:	2b00      	cmp	r3, #0
 802afd6:	d1f5      	bne.n	802afc4 <__sinit+0xc>
 802afd8:	f7ff ffc4 	bl	802af64 <global_stdio_init.part.0>
 802afdc:	e7f2      	b.n	802afc4 <__sinit+0xc>
 802afde:	bf00      	nop
 802afe0:	0802af25 	.word	0x0802af25
 802afe4:	20013838 	.word	0x20013838

0802afe8 <fiprintf>:
 802afe8:	b40e      	push	{r1, r2, r3}
 802afea:	b503      	push	{r0, r1, lr}
 802afec:	4601      	mov	r1, r0
 802afee:	ab03      	add	r3, sp, #12
 802aff0:	4805      	ldr	r0, [pc, #20]	; (802b008 <fiprintf+0x20>)
 802aff2:	f853 2b04 	ldr.w	r2, [r3], #4
 802aff6:	6800      	ldr	r0, [r0, #0]
 802aff8:	9301      	str	r3, [sp, #4]
 802affa:	f000 fa71 	bl	802b4e0 <_vfiprintf_r>
 802affe:	b002      	add	sp, #8
 802b000:	f85d eb04 	ldr.w	lr, [sp], #4
 802b004:	b003      	add	sp, #12
 802b006:	4770      	bx	lr
 802b008:	20000160 	.word	0x20000160

0802b00c <_fwalk_sglue>:
 802b00c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b010:	4607      	mov	r7, r0
 802b012:	4688      	mov	r8, r1
 802b014:	4614      	mov	r4, r2
 802b016:	2600      	movs	r6, #0
 802b018:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b01c:	f1b9 0901 	subs.w	r9, r9, #1
 802b020:	d505      	bpl.n	802b02e <_fwalk_sglue+0x22>
 802b022:	6824      	ldr	r4, [r4, #0]
 802b024:	2c00      	cmp	r4, #0
 802b026:	d1f7      	bne.n	802b018 <_fwalk_sglue+0xc>
 802b028:	4630      	mov	r0, r6
 802b02a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b02e:	89ab      	ldrh	r3, [r5, #12]
 802b030:	2b01      	cmp	r3, #1
 802b032:	d907      	bls.n	802b044 <_fwalk_sglue+0x38>
 802b034:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b038:	3301      	adds	r3, #1
 802b03a:	d003      	beq.n	802b044 <_fwalk_sglue+0x38>
 802b03c:	4629      	mov	r1, r5
 802b03e:	4638      	mov	r0, r7
 802b040:	47c0      	blx	r8
 802b042:	4306      	orrs	r6, r0
 802b044:	3568      	adds	r5, #104	; 0x68
 802b046:	e7e9      	b.n	802b01c <_fwalk_sglue+0x10>

0802b048 <__sread>:
 802b048:	b510      	push	{r4, lr}
 802b04a:	460c      	mov	r4, r1
 802b04c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b050:	f000 f8ee 	bl	802b230 <_read_r>
 802b054:	2800      	cmp	r0, #0
 802b056:	bfab      	itete	ge
 802b058:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b05a:	89a3      	ldrhlt	r3, [r4, #12]
 802b05c:	181b      	addge	r3, r3, r0
 802b05e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b062:	bfac      	ite	ge
 802b064:	6563      	strge	r3, [r4, #84]	; 0x54
 802b066:	81a3      	strhlt	r3, [r4, #12]
 802b068:	bd10      	pop	{r4, pc}

0802b06a <__swrite>:
 802b06a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b06e:	461f      	mov	r7, r3
 802b070:	898b      	ldrh	r3, [r1, #12]
 802b072:	05db      	lsls	r3, r3, #23
 802b074:	4605      	mov	r5, r0
 802b076:	460c      	mov	r4, r1
 802b078:	4616      	mov	r6, r2
 802b07a:	d505      	bpl.n	802b088 <__swrite+0x1e>
 802b07c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b080:	2302      	movs	r3, #2
 802b082:	2200      	movs	r2, #0
 802b084:	f000 f8c2 	bl	802b20c <_lseek_r>
 802b088:	89a3      	ldrh	r3, [r4, #12]
 802b08a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b08e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b092:	81a3      	strh	r3, [r4, #12]
 802b094:	4632      	mov	r2, r6
 802b096:	463b      	mov	r3, r7
 802b098:	4628      	mov	r0, r5
 802b09a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b09e:	f000 b8fd 	b.w	802b29c <_write_r>

0802b0a2 <__sseek>:
 802b0a2:	b510      	push	{r4, lr}
 802b0a4:	460c      	mov	r4, r1
 802b0a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0aa:	f000 f8af 	bl	802b20c <_lseek_r>
 802b0ae:	1c43      	adds	r3, r0, #1
 802b0b0:	89a3      	ldrh	r3, [r4, #12]
 802b0b2:	bf15      	itete	ne
 802b0b4:	6560      	strne	r0, [r4, #84]	; 0x54
 802b0b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b0ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b0be:	81a3      	strheq	r3, [r4, #12]
 802b0c0:	bf18      	it	ne
 802b0c2:	81a3      	strhne	r3, [r4, #12]
 802b0c4:	bd10      	pop	{r4, pc}

0802b0c6 <__sclose>:
 802b0c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0ca:	f000 b839 	b.w	802b140 <_close_r>

0802b0ce <memset>:
 802b0ce:	4402      	add	r2, r0
 802b0d0:	4603      	mov	r3, r0
 802b0d2:	4293      	cmp	r3, r2
 802b0d4:	d100      	bne.n	802b0d8 <memset+0xa>
 802b0d6:	4770      	bx	lr
 802b0d8:	f803 1b01 	strb.w	r1, [r3], #1
 802b0dc:	e7f9      	b.n	802b0d2 <memset+0x4>

0802b0de <_raise_r>:
 802b0de:	291f      	cmp	r1, #31
 802b0e0:	b538      	push	{r3, r4, r5, lr}
 802b0e2:	4604      	mov	r4, r0
 802b0e4:	460d      	mov	r5, r1
 802b0e6:	d904      	bls.n	802b0f2 <_raise_r+0x14>
 802b0e8:	2316      	movs	r3, #22
 802b0ea:	6003      	str	r3, [r0, #0]
 802b0ec:	f04f 30ff 	mov.w	r0, #4294967295
 802b0f0:	bd38      	pop	{r3, r4, r5, pc}
 802b0f2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b0f4:	b112      	cbz	r2, 802b0fc <_raise_r+0x1e>
 802b0f6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b0fa:	b94b      	cbnz	r3, 802b110 <_raise_r+0x32>
 802b0fc:	4620      	mov	r0, r4
 802b0fe:	f000 f8bb 	bl	802b278 <_getpid_r>
 802b102:	462a      	mov	r2, r5
 802b104:	4601      	mov	r1, r0
 802b106:	4620      	mov	r0, r4
 802b108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b10c:	f000 b8a2 	b.w	802b254 <_kill_r>
 802b110:	2b01      	cmp	r3, #1
 802b112:	d00a      	beq.n	802b12a <_raise_r+0x4c>
 802b114:	1c59      	adds	r1, r3, #1
 802b116:	d103      	bne.n	802b120 <_raise_r+0x42>
 802b118:	2316      	movs	r3, #22
 802b11a:	6003      	str	r3, [r0, #0]
 802b11c:	2001      	movs	r0, #1
 802b11e:	e7e7      	b.n	802b0f0 <_raise_r+0x12>
 802b120:	2400      	movs	r4, #0
 802b122:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b126:	4628      	mov	r0, r5
 802b128:	4798      	blx	r3
 802b12a:	2000      	movs	r0, #0
 802b12c:	e7e0      	b.n	802b0f0 <_raise_r+0x12>
	...

0802b130 <raise>:
 802b130:	4b02      	ldr	r3, [pc, #8]	; (802b13c <raise+0xc>)
 802b132:	4601      	mov	r1, r0
 802b134:	6818      	ldr	r0, [r3, #0]
 802b136:	f7ff bfd2 	b.w	802b0de <_raise_r>
 802b13a:	bf00      	nop
 802b13c:	20000160 	.word	0x20000160

0802b140 <_close_r>:
 802b140:	b538      	push	{r3, r4, r5, lr}
 802b142:	4d06      	ldr	r5, [pc, #24]	; (802b15c <_close_r+0x1c>)
 802b144:	2300      	movs	r3, #0
 802b146:	4604      	mov	r4, r0
 802b148:	4608      	mov	r0, r1
 802b14a:	602b      	str	r3, [r5, #0]
 802b14c:	f7d7 f974 	bl	8002438 <_close>
 802b150:	1c43      	adds	r3, r0, #1
 802b152:	d102      	bne.n	802b15a <_close_r+0x1a>
 802b154:	682b      	ldr	r3, [r5, #0]
 802b156:	b103      	cbz	r3, 802b15a <_close_r+0x1a>
 802b158:	6023      	str	r3, [r4, #0]
 802b15a:	bd38      	pop	{r3, r4, r5, pc}
 802b15c:	2001383c 	.word	0x2001383c

0802b160 <_reclaim_reent>:
 802b160:	4b29      	ldr	r3, [pc, #164]	; (802b208 <_reclaim_reent+0xa8>)
 802b162:	681b      	ldr	r3, [r3, #0]
 802b164:	4283      	cmp	r3, r0
 802b166:	b570      	push	{r4, r5, r6, lr}
 802b168:	4604      	mov	r4, r0
 802b16a:	d04b      	beq.n	802b204 <_reclaim_reent+0xa4>
 802b16c:	69c3      	ldr	r3, [r0, #28]
 802b16e:	b143      	cbz	r3, 802b182 <_reclaim_reent+0x22>
 802b170:	68db      	ldr	r3, [r3, #12]
 802b172:	2b00      	cmp	r3, #0
 802b174:	d144      	bne.n	802b200 <_reclaim_reent+0xa0>
 802b176:	69e3      	ldr	r3, [r4, #28]
 802b178:	6819      	ldr	r1, [r3, #0]
 802b17a:	b111      	cbz	r1, 802b182 <_reclaim_reent+0x22>
 802b17c:	4620      	mov	r0, r4
 802b17e:	f000 f939 	bl	802b3f4 <_free_r>
 802b182:	6961      	ldr	r1, [r4, #20]
 802b184:	b111      	cbz	r1, 802b18c <_reclaim_reent+0x2c>
 802b186:	4620      	mov	r0, r4
 802b188:	f000 f934 	bl	802b3f4 <_free_r>
 802b18c:	69e1      	ldr	r1, [r4, #28]
 802b18e:	b111      	cbz	r1, 802b196 <_reclaim_reent+0x36>
 802b190:	4620      	mov	r0, r4
 802b192:	f000 f92f 	bl	802b3f4 <_free_r>
 802b196:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b198:	b111      	cbz	r1, 802b1a0 <_reclaim_reent+0x40>
 802b19a:	4620      	mov	r0, r4
 802b19c:	f000 f92a 	bl	802b3f4 <_free_r>
 802b1a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b1a2:	b111      	cbz	r1, 802b1aa <_reclaim_reent+0x4a>
 802b1a4:	4620      	mov	r0, r4
 802b1a6:	f000 f925 	bl	802b3f4 <_free_r>
 802b1aa:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b1ac:	b111      	cbz	r1, 802b1b4 <_reclaim_reent+0x54>
 802b1ae:	4620      	mov	r0, r4
 802b1b0:	f000 f920 	bl	802b3f4 <_free_r>
 802b1b4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b1b6:	b111      	cbz	r1, 802b1be <_reclaim_reent+0x5e>
 802b1b8:	4620      	mov	r0, r4
 802b1ba:	f000 f91b 	bl	802b3f4 <_free_r>
 802b1be:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b1c0:	b111      	cbz	r1, 802b1c8 <_reclaim_reent+0x68>
 802b1c2:	4620      	mov	r0, r4
 802b1c4:	f000 f916 	bl	802b3f4 <_free_r>
 802b1c8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b1ca:	b111      	cbz	r1, 802b1d2 <_reclaim_reent+0x72>
 802b1cc:	4620      	mov	r0, r4
 802b1ce:	f000 f911 	bl	802b3f4 <_free_r>
 802b1d2:	6a23      	ldr	r3, [r4, #32]
 802b1d4:	b1b3      	cbz	r3, 802b204 <_reclaim_reent+0xa4>
 802b1d6:	4620      	mov	r0, r4
 802b1d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b1dc:	4718      	bx	r3
 802b1de:	5949      	ldr	r1, [r1, r5]
 802b1e0:	b941      	cbnz	r1, 802b1f4 <_reclaim_reent+0x94>
 802b1e2:	3504      	adds	r5, #4
 802b1e4:	69e3      	ldr	r3, [r4, #28]
 802b1e6:	2d80      	cmp	r5, #128	; 0x80
 802b1e8:	68d9      	ldr	r1, [r3, #12]
 802b1ea:	d1f8      	bne.n	802b1de <_reclaim_reent+0x7e>
 802b1ec:	4620      	mov	r0, r4
 802b1ee:	f000 f901 	bl	802b3f4 <_free_r>
 802b1f2:	e7c0      	b.n	802b176 <_reclaim_reent+0x16>
 802b1f4:	680e      	ldr	r6, [r1, #0]
 802b1f6:	4620      	mov	r0, r4
 802b1f8:	f000 f8fc 	bl	802b3f4 <_free_r>
 802b1fc:	4631      	mov	r1, r6
 802b1fe:	e7ef      	b.n	802b1e0 <_reclaim_reent+0x80>
 802b200:	2500      	movs	r5, #0
 802b202:	e7ef      	b.n	802b1e4 <_reclaim_reent+0x84>
 802b204:	bd70      	pop	{r4, r5, r6, pc}
 802b206:	bf00      	nop
 802b208:	20000160 	.word	0x20000160

0802b20c <_lseek_r>:
 802b20c:	b538      	push	{r3, r4, r5, lr}
 802b20e:	4d07      	ldr	r5, [pc, #28]	; (802b22c <_lseek_r+0x20>)
 802b210:	4604      	mov	r4, r0
 802b212:	4608      	mov	r0, r1
 802b214:	4611      	mov	r1, r2
 802b216:	2200      	movs	r2, #0
 802b218:	602a      	str	r2, [r5, #0]
 802b21a:	461a      	mov	r2, r3
 802b21c:	f7d7 f918 	bl	8002450 <_lseek>
 802b220:	1c43      	adds	r3, r0, #1
 802b222:	d102      	bne.n	802b22a <_lseek_r+0x1e>
 802b224:	682b      	ldr	r3, [r5, #0]
 802b226:	b103      	cbz	r3, 802b22a <_lseek_r+0x1e>
 802b228:	6023      	str	r3, [r4, #0]
 802b22a:	bd38      	pop	{r3, r4, r5, pc}
 802b22c:	2001383c 	.word	0x2001383c

0802b230 <_read_r>:
 802b230:	b538      	push	{r3, r4, r5, lr}
 802b232:	4d07      	ldr	r5, [pc, #28]	; (802b250 <_read_r+0x20>)
 802b234:	4604      	mov	r4, r0
 802b236:	4608      	mov	r0, r1
 802b238:	4611      	mov	r1, r2
 802b23a:	2200      	movs	r2, #0
 802b23c:	602a      	str	r2, [r5, #0]
 802b23e:	461a      	mov	r2, r3
 802b240:	f7d7 f8de 	bl	8002400 <_read>
 802b244:	1c43      	adds	r3, r0, #1
 802b246:	d102      	bne.n	802b24e <_read_r+0x1e>
 802b248:	682b      	ldr	r3, [r5, #0]
 802b24a:	b103      	cbz	r3, 802b24e <_read_r+0x1e>
 802b24c:	6023      	str	r3, [r4, #0]
 802b24e:	bd38      	pop	{r3, r4, r5, pc}
 802b250:	2001383c 	.word	0x2001383c

0802b254 <_kill_r>:
 802b254:	b538      	push	{r3, r4, r5, lr}
 802b256:	4d07      	ldr	r5, [pc, #28]	; (802b274 <_kill_r+0x20>)
 802b258:	2300      	movs	r3, #0
 802b25a:	4604      	mov	r4, r0
 802b25c:	4608      	mov	r0, r1
 802b25e:	4611      	mov	r1, r2
 802b260:	602b      	str	r3, [r5, #0]
 802b262:	f7d7 f8bf 	bl	80023e4 <_kill>
 802b266:	1c43      	adds	r3, r0, #1
 802b268:	d102      	bne.n	802b270 <_kill_r+0x1c>
 802b26a:	682b      	ldr	r3, [r5, #0]
 802b26c:	b103      	cbz	r3, 802b270 <_kill_r+0x1c>
 802b26e:	6023      	str	r3, [r4, #0]
 802b270:	bd38      	pop	{r3, r4, r5, pc}
 802b272:	bf00      	nop
 802b274:	2001383c 	.word	0x2001383c

0802b278 <_getpid_r>:
 802b278:	f7d7 b8b2 	b.w	80023e0 <_getpid>

0802b27c <_sbrk_r>:
 802b27c:	b538      	push	{r3, r4, r5, lr}
 802b27e:	4d06      	ldr	r5, [pc, #24]	; (802b298 <_sbrk_r+0x1c>)
 802b280:	2300      	movs	r3, #0
 802b282:	4604      	mov	r4, r0
 802b284:	4608      	mov	r0, r1
 802b286:	602b      	str	r3, [r5, #0]
 802b288:	f7d7 f8e4 	bl	8002454 <_sbrk>
 802b28c:	1c43      	adds	r3, r0, #1
 802b28e:	d102      	bne.n	802b296 <_sbrk_r+0x1a>
 802b290:	682b      	ldr	r3, [r5, #0]
 802b292:	b103      	cbz	r3, 802b296 <_sbrk_r+0x1a>
 802b294:	6023      	str	r3, [r4, #0]
 802b296:	bd38      	pop	{r3, r4, r5, pc}
 802b298:	2001383c 	.word	0x2001383c

0802b29c <_write_r>:
 802b29c:	b538      	push	{r3, r4, r5, lr}
 802b29e:	4d07      	ldr	r5, [pc, #28]	; (802b2bc <_write_r+0x20>)
 802b2a0:	4604      	mov	r4, r0
 802b2a2:	4608      	mov	r0, r1
 802b2a4:	4611      	mov	r1, r2
 802b2a6:	2200      	movs	r2, #0
 802b2a8:	602a      	str	r2, [r5, #0]
 802b2aa:	461a      	mov	r2, r3
 802b2ac:	f7d7 f8b6 	bl	800241c <_write>
 802b2b0:	1c43      	adds	r3, r0, #1
 802b2b2:	d102      	bne.n	802b2ba <_write_r+0x1e>
 802b2b4:	682b      	ldr	r3, [r5, #0]
 802b2b6:	b103      	cbz	r3, 802b2ba <_write_r+0x1e>
 802b2b8:	6023      	str	r3, [r4, #0]
 802b2ba:	bd38      	pop	{r3, r4, r5, pc}
 802b2bc:	2001383c 	.word	0x2001383c

0802b2c0 <__errno>:
 802b2c0:	4b01      	ldr	r3, [pc, #4]	; (802b2c8 <__errno+0x8>)
 802b2c2:	6818      	ldr	r0, [r3, #0]
 802b2c4:	4770      	bx	lr
 802b2c6:	bf00      	nop
 802b2c8:	20000160 	.word	0x20000160

0802b2cc <__libc_init_array>:
 802b2cc:	b570      	push	{r4, r5, r6, lr}
 802b2ce:	4d0d      	ldr	r5, [pc, #52]	; (802b304 <__libc_init_array+0x38>)
 802b2d0:	4c0d      	ldr	r4, [pc, #52]	; (802b308 <__libc_init_array+0x3c>)
 802b2d2:	1b64      	subs	r4, r4, r5
 802b2d4:	10a4      	asrs	r4, r4, #2
 802b2d6:	2600      	movs	r6, #0
 802b2d8:	42a6      	cmp	r6, r4
 802b2da:	d109      	bne.n	802b2f0 <__libc_init_array+0x24>
 802b2dc:	4d0b      	ldr	r5, [pc, #44]	; (802b30c <__libc_init_array+0x40>)
 802b2de:	4c0c      	ldr	r4, [pc, #48]	; (802b310 <__libc_init_array+0x44>)
 802b2e0:	f000 fd70 	bl	802bdc4 <_init>
 802b2e4:	1b64      	subs	r4, r4, r5
 802b2e6:	10a4      	asrs	r4, r4, #2
 802b2e8:	2600      	movs	r6, #0
 802b2ea:	42a6      	cmp	r6, r4
 802b2ec:	d105      	bne.n	802b2fa <__libc_init_array+0x2e>
 802b2ee:	bd70      	pop	{r4, r5, r6, pc}
 802b2f0:	f855 3b04 	ldr.w	r3, [r5], #4
 802b2f4:	4798      	blx	r3
 802b2f6:	3601      	adds	r6, #1
 802b2f8:	e7ee      	b.n	802b2d8 <__libc_init_array+0xc>
 802b2fa:	f855 3b04 	ldr.w	r3, [r5], #4
 802b2fe:	4798      	blx	r3
 802b300:	3601      	adds	r6, #1
 802b302:	e7f2      	b.n	802b2ea <__libc_init_array+0x1e>
 802b304:	08160acc 	.word	0x08160acc
 802b308:	08160acc 	.word	0x08160acc
 802b30c:	08160acc 	.word	0x08160acc
 802b310:	08160ae0 	.word	0x08160ae0

0802b314 <__retarget_lock_init_recursive>:
 802b314:	4770      	bx	lr

0802b316 <__retarget_lock_acquire_recursive>:
 802b316:	4770      	bx	lr

0802b318 <__retarget_lock_release_recursive>:
 802b318:	4770      	bx	lr

0802b31a <memcpy>:
 802b31a:	440a      	add	r2, r1
 802b31c:	4291      	cmp	r1, r2
 802b31e:	f100 33ff 	add.w	r3, r0, #4294967295
 802b322:	d100      	bne.n	802b326 <memcpy+0xc>
 802b324:	4770      	bx	lr
 802b326:	b510      	push	{r4, lr}
 802b328:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b32c:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b330:	4291      	cmp	r1, r2
 802b332:	d1f9      	bne.n	802b328 <memcpy+0xe>
 802b334:	bd10      	pop	{r4, pc}
	...

0802b338 <__register_exitproc>:
 802b338:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b33c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b3f0 <__register_exitproc+0xb8>
 802b340:	4606      	mov	r6, r0
 802b342:	f8d8 0000 	ldr.w	r0, [r8]
 802b346:	461f      	mov	r7, r3
 802b348:	460d      	mov	r5, r1
 802b34a:	4691      	mov	r9, r2
 802b34c:	f7ff ffe3 	bl	802b316 <__retarget_lock_acquire_recursive>
 802b350:	4b23      	ldr	r3, [pc, #140]	; (802b3e0 <__register_exitproc+0xa8>)
 802b352:	681c      	ldr	r4, [r3, #0]
 802b354:	b934      	cbnz	r4, 802b364 <__register_exitproc+0x2c>
 802b356:	4c23      	ldr	r4, [pc, #140]	; (802b3e4 <__register_exitproc+0xac>)
 802b358:	601c      	str	r4, [r3, #0]
 802b35a:	4b23      	ldr	r3, [pc, #140]	; (802b3e8 <__register_exitproc+0xb0>)
 802b35c:	b113      	cbz	r3, 802b364 <__register_exitproc+0x2c>
 802b35e:	681b      	ldr	r3, [r3, #0]
 802b360:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b364:	6863      	ldr	r3, [r4, #4]
 802b366:	2b1f      	cmp	r3, #31
 802b368:	dd07      	ble.n	802b37a <__register_exitproc+0x42>
 802b36a:	f8d8 0000 	ldr.w	r0, [r8]
 802b36e:	f7ff ffd3 	bl	802b318 <__retarget_lock_release_recursive>
 802b372:	f04f 30ff 	mov.w	r0, #4294967295
 802b376:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b37a:	b32e      	cbz	r6, 802b3c8 <__register_exitproc+0x90>
 802b37c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b380:	b968      	cbnz	r0, 802b39e <__register_exitproc+0x66>
 802b382:	4b1a      	ldr	r3, [pc, #104]	; (802b3ec <__register_exitproc+0xb4>)
 802b384:	2b00      	cmp	r3, #0
 802b386:	d0f0      	beq.n	802b36a <__register_exitproc+0x32>
 802b388:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b38c:	f7ff fcbe 	bl	802ad0c <malloc>
 802b390:	2800      	cmp	r0, #0
 802b392:	d0ea      	beq.n	802b36a <__register_exitproc+0x32>
 802b394:	2300      	movs	r3, #0
 802b396:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b39a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b39e:	6863      	ldr	r3, [r4, #4]
 802b3a0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b3a4:	2201      	movs	r2, #1
 802b3a6:	409a      	lsls	r2, r3
 802b3a8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b3ac:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b3b0:	4313      	orrs	r3, r2
 802b3b2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b3b6:	2e02      	cmp	r6, #2
 802b3b8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b3bc:	bf02      	ittt	eq
 802b3be:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b3c2:	4313      	orreq	r3, r2
 802b3c4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b3c8:	6863      	ldr	r3, [r4, #4]
 802b3ca:	f8d8 0000 	ldr.w	r0, [r8]
 802b3ce:	1c5a      	adds	r2, r3, #1
 802b3d0:	3302      	adds	r3, #2
 802b3d2:	6062      	str	r2, [r4, #4]
 802b3d4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b3d8:	f7ff ff9e 	bl	802b318 <__retarget_lock_release_recursive>
 802b3dc:	2000      	movs	r0, #0
 802b3de:	e7ca      	b.n	802b376 <__register_exitproc+0x3e>
 802b3e0:	200138d0 	.word	0x200138d0
 802b3e4:	20013844 	.word	0x20013844
 802b3e8:	08043354 	.word	0x08043354
 802b3ec:	0802ad0d 	.word	0x0802ad0d
 802b3f0:	20000164 	.word	0x20000164

0802b3f4 <_free_r>:
 802b3f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b3f6:	2900      	cmp	r1, #0
 802b3f8:	d044      	beq.n	802b484 <_free_r+0x90>
 802b3fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b3fe:	9001      	str	r0, [sp, #4]
 802b400:	2b00      	cmp	r3, #0
 802b402:	f1a1 0404 	sub.w	r4, r1, #4
 802b406:	bfb8      	it	lt
 802b408:	18e4      	addlt	r4, r4, r3
 802b40a:	f7ff fd2f 	bl	802ae6c <__malloc_lock>
 802b40e:	4a1e      	ldr	r2, [pc, #120]	; (802b488 <_free_r+0x94>)
 802b410:	9801      	ldr	r0, [sp, #4]
 802b412:	6813      	ldr	r3, [r2, #0]
 802b414:	b933      	cbnz	r3, 802b424 <_free_r+0x30>
 802b416:	6063      	str	r3, [r4, #4]
 802b418:	6014      	str	r4, [r2, #0]
 802b41a:	b003      	add	sp, #12
 802b41c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b420:	f7ff bd2a 	b.w	802ae78 <__malloc_unlock>
 802b424:	42a3      	cmp	r3, r4
 802b426:	d908      	bls.n	802b43a <_free_r+0x46>
 802b428:	6825      	ldr	r5, [r4, #0]
 802b42a:	1961      	adds	r1, r4, r5
 802b42c:	428b      	cmp	r3, r1
 802b42e:	bf01      	itttt	eq
 802b430:	6819      	ldreq	r1, [r3, #0]
 802b432:	685b      	ldreq	r3, [r3, #4]
 802b434:	1949      	addeq	r1, r1, r5
 802b436:	6021      	streq	r1, [r4, #0]
 802b438:	e7ed      	b.n	802b416 <_free_r+0x22>
 802b43a:	461a      	mov	r2, r3
 802b43c:	685b      	ldr	r3, [r3, #4]
 802b43e:	b10b      	cbz	r3, 802b444 <_free_r+0x50>
 802b440:	42a3      	cmp	r3, r4
 802b442:	d9fa      	bls.n	802b43a <_free_r+0x46>
 802b444:	6811      	ldr	r1, [r2, #0]
 802b446:	1855      	adds	r5, r2, r1
 802b448:	42a5      	cmp	r5, r4
 802b44a:	d10b      	bne.n	802b464 <_free_r+0x70>
 802b44c:	6824      	ldr	r4, [r4, #0]
 802b44e:	4421      	add	r1, r4
 802b450:	1854      	adds	r4, r2, r1
 802b452:	42a3      	cmp	r3, r4
 802b454:	6011      	str	r1, [r2, #0]
 802b456:	d1e0      	bne.n	802b41a <_free_r+0x26>
 802b458:	681c      	ldr	r4, [r3, #0]
 802b45a:	685b      	ldr	r3, [r3, #4]
 802b45c:	6053      	str	r3, [r2, #4]
 802b45e:	440c      	add	r4, r1
 802b460:	6014      	str	r4, [r2, #0]
 802b462:	e7da      	b.n	802b41a <_free_r+0x26>
 802b464:	d902      	bls.n	802b46c <_free_r+0x78>
 802b466:	230c      	movs	r3, #12
 802b468:	6003      	str	r3, [r0, #0]
 802b46a:	e7d6      	b.n	802b41a <_free_r+0x26>
 802b46c:	6825      	ldr	r5, [r4, #0]
 802b46e:	1961      	adds	r1, r4, r5
 802b470:	428b      	cmp	r3, r1
 802b472:	bf04      	itt	eq
 802b474:	6819      	ldreq	r1, [r3, #0]
 802b476:	685b      	ldreq	r3, [r3, #4]
 802b478:	6063      	str	r3, [r4, #4]
 802b47a:	bf04      	itt	eq
 802b47c:	1949      	addeq	r1, r1, r5
 802b47e:	6021      	streq	r1, [r4, #0]
 802b480:	6054      	str	r4, [r2, #4]
 802b482:	e7ca      	b.n	802b41a <_free_r+0x26>
 802b484:	b003      	add	sp, #12
 802b486:	bd30      	pop	{r4, r5, pc}
 802b488:	200136f8 	.word	0x200136f8

0802b48c <__sfputc_r>:
 802b48c:	6893      	ldr	r3, [r2, #8]
 802b48e:	3b01      	subs	r3, #1
 802b490:	2b00      	cmp	r3, #0
 802b492:	b410      	push	{r4}
 802b494:	6093      	str	r3, [r2, #8]
 802b496:	da08      	bge.n	802b4aa <__sfputc_r+0x1e>
 802b498:	6994      	ldr	r4, [r2, #24]
 802b49a:	42a3      	cmp	r3, r4
 802b49c:	db01      	blt.n	802b4a2 <__sfputc_r+0x16>
 802b49e:	290a      	cmp	r1, #10
 802b4a0:	d103      	bne.n	802b4aa <__sfputc_r+0x1e>
 802b4a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b4a6:	f000 bb73 	b.w	802bb90 <__swbuf_r>
 802b4aa:	6813      	ldr	r3, [r2, #0]
 802b4ac:	1c58      	adds	r0, r3, #1
 802b4ae:	6010      	str	r0, [r2, #0]
 802b4b0:	7019      	strb	r1, [r3, #0]
 802b4b2:	4608      	mov	r0, r1
 802b4b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b4b8:	4770      	bx	lr

0802b4ba <__sfputs_r>:
 802b4ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b4bc:	4606      	mov	r6, r0
 802b4be:	460f      	mov	r7, r1
 802b4c0:	4614      	mov	r4, r2
 802b4c2:	18d5      	adds	r5, r2, r3
 802b4c4:	42ac      	cmp	r4, r5
 802b4c6:	d101      	bne.n	802b4cc <__sfputs_r+0x12>
 802b4c8:	2000      	movs	r0, #0
 802b4ca:	e007      	b.n	802b4dc <__sfputs_r+0x22>
 802b4cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b4d0:	463a      	mov	r2, r7
 802b4d2:	4630      	mov	r0, r6
 802b4d4:	f7ff ffda 	bl	802b48c <__sfputc_r>
 802b4d8:	1c43      	adds	r3, r0, #1
 802b4da:	d1f3      	bne.n	802b4c4 <__sfputs_r+0xa>
 802b4dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b4e0 <_vfiprintf_r>:
 802b4e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4e4:	460d      	mov	r5, r1
 802b4e6:	b09d      	sub	sp, #116	; 0x74
 802b4e8:	4614      	mov	r4, r2
 802b4ea:	4698      	mov	r8, r3
 802b4ec:	4606      	mov	r6, r0
 802b4ee:	b118      	cbz	r0, 802b4f8 <_vfiprintf_r+0x18>
 802b4f0:	6a03      	ldr	r3, [r0, #32]
 802b4f2:	b90b      	cbnz	r3, 802b4f8 <_vfiprintf_r+0x18>
 802b4f4:	f7ff fd60 	bl	802afb8 <__sinit>
 802b4f8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b4fa:	07d9      	lsls	r1, r3, #31
 802b4fc:	d405      	bmi.n	802b50a <_vfiprintf_r+0x2a>
 802b4fe:	89ab      	ldrh	r3, [r5, #12]
 802b500:	059a      	lsls	r2, r3, #22
 802b502:	d402      	bmi.n	802b50a <_vfiprintf_r+0x2a>
 802b504:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b506:	f7ff ff06 	bl	802b316 <__retarget_lock_acquire_recursive>
 802b50a:	89ab      	ldrh	r3, [r5, #12]
 802b50c:	071b      	lsls	r3, r3, #28
 802b50e:	d501      	bpl.n	802b514 <_vfiprintf_r+0x34>
 802b510:	692b      	ldr	r3, [r5, #16]
 802b512:	b99b      	cbnz	r3, 802b53c <_vfiprintf_r+0x5c>
 802b514:	4629      	mov	r1, r5
 802b516:	4630      	mov	r0, r6
 802b518:	f000 fb78 	bl	802bc0c <__swsetup_r>
 802b51c:	b170      	cbz	r0, 802b53c <_vfiprintf_r+0x5c>
 802b51e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b520:	07dc      	lsls	r4, r3, #31
 802b522:	d504      	bpl.n	802b52e <_vfiprintf_r+0x4e>
 802b524:	f04f 30ff 	mov.w	r0, #4294967295
 802b528:	b01d      	add	sp, #116	; 0x74
 802b52a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b52e:	89ab      	ldrh	r3, [r5, #12]
 802b530:	0598      	lsls	r0, r3, #22
 802b532:	d4f7      	bmi.n	802b524 <_vfiprintf_r+0x44>
 802b534:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b536:	f7ff feef 	bl	802b318 <__retarget_lock_release_recursive>
 802b53a:	e7f3      	b.n	802b524 <_vfiprintf_r+0x44>
 802b53c:	2300      	movs	r3, #0
 802b53e:	9309      	str	r3, [sp, #36]	; 0x24
 802b540:	2320      	movs	r3, #32
 802b542:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b546:	f8cd 800c 	str.w	r8, [sp, #12]
 802b54a:	2330      	movs	r3, #48	; 0x30
 802b54c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b700 <_vfiprintf_r+0x220>
 802b550:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b554:	f04f 0901 	mov.w	r9, #1
 802b558:	4623      	mov	r3, r4
 802b55a:	469a      	mov	sl, r3
 802b55c:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b560:	b10a      	cbz	r2, 802b566 <_vfiprintf_r+0x86>
 802b562:	2a25      	cmp	r2, #37	; 0x25
 802b564:	d1f9      	bne.n	802b55a <_vfiprintf_r+0x7a>
 802b566:	ebba 0b04 	subs.w	fp, sl, r4
 802b56a:	d00b      	beq.n	802b584 <_vfiprintf_r+0xa4>
 802b56c:	465b      	mov	r3, fp
 802b56e:	4622      	mov	r2, r4
 802b570:	4629      	mov	r1, r5
 802b572:	4630      	mov	r0, r6
 802b574:	f7ff ffa1 	bl	802b4ba <__sfputs_r>
 802b578:	3001      	adds	r0, #1
 802b57a:	f000 80a9 	beq.w	802b6d0 <_vfiprintf_r+0x1f0>
 802b57e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b580:	445a      	add	r2, fp
 802b582:	9209      	str	r2, [sp, #36]	; 0x24
 802b584:	f89a 3000 	ldrb.w	r3, [sl]
 802b588:	2b00      	cmp	r3, #0
 802b58a:	f000 80a1 	beq.w	802b6d0 <_vfiprintf_r+0x1f0>
 802b58e:	2300      	movs	r3, #0
 802b590:	f04f 32ff 	mov.w	r2, #4294967295
 802b594:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b598:	f10a 0a01 	add.w	sl, sl, #1
 802b59c:	9304      	str	r3, [sp, #16]
 802b59e:	9307      	str	r3, [sp, #28]
 802b5a0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b5a4:	931a      	str	r3, [sp, #104]	; 0x68
 802b5a6:	4654      	mov	r4, sl
 802b5a8:	2205      	movs	r2, #5
 802b5aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b5ae:	4854      	ldr	r0, [pc, #336]	; (802b700 <_vfiprintf_r+0x220>)
 802b5b0:	f7d4 fe7e 	bl	80002b0 <memchr>
 802b5b4:	9a04      	ldr	r2, [sp, #16]
 802b5b6:	b9d8      	cbnz	r0, 802b5f0 <_vfiprintf_r+0x110>
 802b5b8:	06d1      	lsls	r1, r2, #27
 802b5ba:	bf44      	itt	mi
 802b5bc:	2320      	movmi	r3, #32
 802b5be:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b5c2:	0713      	lsls	r3, r2, #28
 802b5c4:	bf44      	itt	mi
 802b5c6:	232b      	movmi	r3, #43	; 0x2b
 802b5c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b5cc:	f89a 3000 	ldrb.w	r3, [sl]
 802b5d0:	2b2a      	cmp	r3, #42	; 0x2a
 802b5d2:	d015      	beq.n	802b600 <_vfiprintf_r+0x120>
 802b5d4:	9a07      	ldr	r2, [sp, #28]
 802b5d6:	4654      	mov	r4, sl
 802b5d8:	2000      	movs	r0, #0
 802b5da:	f04f 0c0a 	mov.w	ip, #10
 802b5de:	4621      	mov	r1, r4
 802b5e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b5e4:	3b30      	subs	r3, #48	; 0x30
 802b5e6:	2b09      	cmp	r3, #9
 802b5e8:	d94d      	bls.n	802b686 <_vfiprintf_r+0x1a6>
 802b5ea:	b1b0      	cbz	r0, 802b61a <_vfiprintf_r+0x13a>
 802b5ec:	9207      	str	r2, [sp, #28]
 802b5ee:	e014      	b.n	802b61a <_vfiprintf_r+0x13a>
 802b5f0:	eba0 0308 	sub.w	r3, r0, r8
 802b5f4:	fa09 f303 	lsl.w	r3, r9, r3
 802b5f8:	4313      	orrs	r3, r2
 802b5fa:	9304      	str	r3, [sp, #16]
 802b5fc:	46a2      	mov	sl, r4
 802b5fe:	e7d2      	b.n	802b5a6 <_vfiprintf_r+0xc6>
 802b600:	9b03      	ldr	r3, [sp, #12]
 802b602:	1d19      	adds	r1, r3, #4
 802b604:	681b      	ldr	r3, [r3, #0]
 802b606:	9103      	str	r1, [sp, #12]
 802b608:	2b00      	cmp	r3, #0
 802b60a:	bfbb      	ittet	lt
 802b60c:	425b      	neglt	r3, r3
 802b60e:	f042 0202 	orrlt.w	r2, r2, #2
 802b612:	9307      	strge	r3, [sp, #28]
 802b614:	9307      	strlt	r3, [sp, #28]
 802b616:	bfb8      	it	lt
 802b618:	9204      	strlt	r2, [sp, #16]
 802b61a:	7823      	ldrb	r3, [r4, #0]
 802b61c:	2b2e      	cmp	r3, #46	; 0x2e
 802b61e:	d10c      	bne.n	802b63a <_vfiprintf_r+0x15a>
 802b620:	7863      	ldrb	r3, [r4, #1]
 802b622:	2b2a      	cmp	r3, #42	; 0x2a
 802b624:	d134      	bne.n	802b690 <_vfiprintf_r+0x1b0>
 802b626:	9b03      	ldr	r3, [sp, #12]
 802b628:	1d1a      	adds	r2, r3, #4
 802b62a:	681b      	ldr	r3, [r3, #0]
 802b62c:	9203      	str	r2, [sp, #12]
 802b62e:	2b00      	cmp	r3, #0
 802b630:	bfb8      	it	lt
 802b632:	f04f 33ff 	movlt.w	r3, #4294967295
 802b636:	3402      	adds	r4, #2
 802b638:	9305      	str	r3, [sp, #20]
 802b63a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b710 <_vfiprintf_r+0x230>
 802b63e:	7821      	ldrb	r1, [r4, #0]
 802b640:	2203      	movs	r2, #3
 802b642:	4650      	mov	r0, sl
 802b644:	f7d4 fe34 	bl	80002b0 <memchr>
 802b648:	b138      	cbz	r0, 802b65a <_vfiprintf_r+0x17a>
 802b64a:	9b04      	ldr	r3, [sp, #16]
 802b64c:	eba0 000a 	sub.w	r0, r0, sl
 802b650:	2240      	movs	r2, #64	; 0x40
 802b652:	4082      	lsls	r2, r0
 802b654:	4313      	orrs	r3, r2
 802b656:	3401      	adds	r4, #1
 802b658:	9304      	str	r3, [sp, #16]
 802b65a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b65e:	4829      	ldr	r0, [pc, #164]	; (802b704 <_vfiprintf_r+0x224>)
 802b660:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b664:	2206      	movs	r2, #6
 802b666:	f7d4 fe23 	bl	80002b0 <memchr>
 802b66a:	2800      	cmp	r0, #0
 802b66c:	d03f      	beq.n	802b6ee <_vfiprintf_r+0x20e>
 802b66e:	4b26      	ldr	r3, [pc, #152]	; (802b708 <_vfiprintf_r+0x228>)
 802b670:	bb1b      	cbnz	r3, 802b6ba <_vfiprintf_r+0x1da>
 802b672:	9b03      	ldr	r3, [sp, #12]
 802b674:	3307      	adds	r3, #7
 802b676:	f023 0307 	bic.w	r3, r3, #7
 802b67a:	3308      	adds	r3, #8
 802b67c:	9303      	str	r3, [sp, #12]
 802b67e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b680:	443b      	add	r3, r7
 802b682:	9309      	str	r3, [sp, #36]	; 0x24
 802b684:	e768      	b.n	802b558 <_vfiprintf_r+0x78>
 802b686:	fb0c 3202 	mla	r2, ip, r2, r3
 802b68a:	460c      	mov	r4, r1
 802b68c:	2001      	movs	r0, #1
 802b68e:	e7a6      	b.n	802b5de <_vfiprintf_r+0xfe>
 802b690:	2300      	movs	r3, #0
 802b692:	3401      	adds	r4, #1
 802b694:	9305      	str	r3, [sp, #20]
 802b696:	4619      	mov	r1, r3
 802b698:	f04f 0c0a 	mov.w	ip, #10
 802b69c:	4620      	mov	r0, r4
 802b69e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b6a2:	3a30      	subs	r2, #48	; 0x30
 802b6a4:	2a09      	cmp	r2, #9
 802b6a6:	d903      	bls.n	802b6b0 <_vfiprintf_r+0x1d0>
 802b6a8:	2b00      	cmp	r3, #0
 802b6aa:	d0c6      	beq.n	802b63a <_vfiprintf_r+0x15a>
 802b6ac:	9105      	str	r1, [sp, #20]
 802b6ae:	e7c4      	b.n	802b63a <_vfiprintf_r+0x15a>
 802b6b0:	fb0c 2101 	mla	r1, ip, r1, r2
 802b6b4:	4604      	mov	r4, r0
 802b6b6:	2301      	movs	r3, #1
 802b6b8:	e7f0      	b.n	802b69c <_vfiprintf_r+0x1bc>
 802b6ba:	ab03      	add	r3, sp, #12
 802b6bc:	9300      	str	r3, [sp, #0]
 802b6be:	462a      	mov	r2, r5
 802b6c0:	4b12      	ldr	r3, [pc, #72]	; (802b70c <_vfiprintf_r+0x22c>)
 802b6c2:	a904      	add	r1, sp, #16
 802b6c4:	4630      	mov	r0, r6
 802b6c6:	f3af 8000 	nop.w
 802b6ca:	4607      	mov	r7, r0
 802b6cc:	1c78      	adds	r0, r7, #1
 802b6ce:	d1d6      	bne.n	802b67e <_vfiprintf_r+0x19e>
 802b6d0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b6d2:	07d9      	lsls	r1, r3, #31
 802b6d4:	d405      	bmi.n	802b6e2 <_vfiprintf_r+0x202>
 802b6d6:	89ab      	ldrh	r3, [r5, #12]
 802b6d8:	059a      	lsls	r2, r3, #22
 802b6da:	d402      	bmi.n	802b6e2 <_vfiprintf_r+0x202>
 802b6dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b6de:	f7ff fe1b 	bl	802b318 <__retarget_lock_release_recursive>
 802b6e2:	89ab      	ldrh	r3, [r5, #12]
 802b6e4:	065b      	lsls	r3, r3, #25
 802b6e6:	f53f af1d 	bmi.w	802b524 <_vfiprintf_r+0x44>
 802b6ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b6ec:	e71c      	b.n	802b528 <_vfiprintf_r+0x48>
 802b6ee:	ab03      	add	r3, sp, #12
 802b6f0:	9300      	str	r3, [sp, #0]
 802b6f2:	462a      	mov	r2, r5
 802b6f4:	4b05      	ldr	r3, [pc, #20]	; (802b70c <_vfiprintf_r+0x22c>)
 802b6f6:	a904      	add	r1, sp, #16
 802b6f8:	4630      	mov	r0, r6
 802b6fa:	f000 f879 	bl	802b7f0 <_printf_i>
 802b6fe:	e7e4      	b.n	802b6ca <_vfiprintf_r+0x1ea>
 802b700:	08043358 	.word	0x08043358
 802b704:	08043362 	.word	0x08043362
 802b708:	00000000 	.word	0x00000000
 802b70c:	0802b4bb 	.word	0x0802b4bb
 802b710:	0804335e 	.word	0x0804335e

0802b714 <_printf_common>:
 802b714:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b718:	4616      	mov	r6, r2
 802b71a:	4699      	mov	r9, r3
 802b71c:	688a      	ldr	r2, [r1, #8]
 802b71e:	690b      	ldr	r3, [r1, #16]
 802b720:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b724:	4293      	cmp	r3, r2
 802b726:	bfb8      	it	lt
 802b728:	4613      	movlt	r3, r2
 802b72a:	6033      	str	r3, [r6, #0]
 802b72c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b730:	4607      	mov	r7, r0
 802b732:	460c      	mov	r4, r1
 802b734:	b10a      	cbz	r2, 802b73a <_printf_common+0x26>
 802b736:	3301      	adds	r3, #1
 802b738:	6033      	str	r3, [r6, #0]
 802b73a:	6823      	ldr	r3, [r4, #0]
 802b73c:	0699      	lsls	r1, r3, #26
 802b73e:	bf42      	ittt	mi
 802b740:	6833      	ldrmi	r3, [r6, #0]
 802b742:	3302      	addmi	r3, #2
 802b744:	6033      	strmi	r3, [r6, #0]
 802b746:	6825      	ldr	r5, [r4, #0]
 802b748:	f015 0506 	ands.w	r5, r5, #6
 802b74c:	d106      	bne.n	802b75c <_printf_common+0x48>
 802b74e:	f104 0a19 	add.w	sl, r4, #25
 802b752:	68e3      	ldr	r3, [r4, #12]
 802b754:	6832      	ldr	r2, [r6, #0]
 802b756:	1a9b      	subs	r3, r3, r2
 802b758:	42ab      	cmp	r3, r5
 802b75a:	dc26      	bgt.n	802b7aa <_printf_common+0x96>
 802b75c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b760:	1e13      	subs	r3, r2, #0
 802b762:	6822      	ldr	r2, [r4, #0]
 802b764:	bf18      	it	ne
 802b766:	2301      	movne	r3, #1
 802b768:	0692      	lsls	r2, r2, #26
 802b76a:	d42b      	bmi.n	802b7c4 <_printf_common+0xb0>
 802b76c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b770:	4649      	mov	r1, r9
 802b772:	4638      	mov	r0, r7
 802b774:	47c0      	blx	r8
 802b776:	3001      	adds	r0, #1
 802b778:	d01e      	beq.n	802b7b8 <_printf_common+0xa4>
 802b77a:	6823      	ldr	r3, [r4, #0]
 802b77c:	6922      	ldr	r2, [r4, #16]
 802b77e:	f003 0306 	and.w	r3, r3, #6
 802b782:	2b04      	cmp	r3, #4
 802b784:	bf02      	ittt	eq
 802b786:	68e5      	ldreq	r5, [r4, #12]
 802b788:	6833      	ldreq	r3, [r6, #0]
 802b78a:	1aed      	subeq	r5, r5, r3
 802b78c:	68a3      	ldr	r3, [r4, #8]
 802b78e:	bf0c      	ite	eq
 802b790:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b794:	2500      	movne	r5, #0
 802b796:	4293      	cmp	r3, r2
 802b798:	bfc4      	itt	gt
 802b79a:	1a9b      	subgt	r3, r3, r2
 802b79c:	18ed      	addgt	r5, r5, r3
 802b79e:	2600      	movs	r6, #0
 802b7a0:	341a      	adds	r4, #26
 802b7a2:	42b5      	cmp	r5, r6
 802b7a4:	d11a      	bne.n	802b7dc <_printf_common+0xc8>
 802b7a6:	2000      	movs	r0, #0
 802b7a8:	e008      	b.n	802b7bc <_printf_common+0xa8>
 802b7aa:	2301      	movs	r3, #1
 802b7ac:	4652      	mov	r2, sl
 802b7ae:	4649      	mov	r1, r9
 802b7b0:	4638      	mov	r0, r7
 802b7b2:	47c0      	blx	r8
 802b7b4:	3001      	adds	r0, #1
 802b7b6:	d103      	bne.n	802b7c0 <_printf_common+0xac>
 802b7b8:	f04f 30ff 	mov.w	r0, #4294967295
 802b7bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b7c0:	3501      	adds	r5, #1
 802b7c2:	e7c6      	b.n	802b752 <_printf_common+0x3e>
 802b7c4:	18e1      	adds	r1, r4, r3
 802b7c6:	1c5a      	adds	r2, r3, #1
 802b7c8:	2030      	movs	r0, #48	; 0x30
 802b7ca:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b7ce:	4422      	add	r2, r4
 802b7d0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b7d4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b7d8:	3302      	adds	r3, #2
 802b7da:	e7c7      	b.n	802b76c <_printf_common+0x58>
 802b7dc:	2301      	movs	r3, #1
 802b7de:	4622      	mov	r2, r4
 802b7e0:	4649      	mov	r1, r9
 802b7e2:	4638      	mov	r0, r7
 802b7e4:	47c0      	blx	r8
 802b7e6:	3001      	adds	r0, #1
 802b7e8:	d0e6      	beq.n	802b7b8 <_printf_common+0xa4>
 802b7ea:	3601      	adds	r6, #1
 802b7ec:	e7d9      	b.n	802b7a2 <_printf_common+0x8e>
	...

0802b7f0 <_printf_i>:
 802b7f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b7f4:	7e0f      	ldrb	r7, [r1, #24]
 802b7f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b7f8:	2f78      	cmp	r7, #120	; 0x78
 802b7fa:	4691      	mov	r9, r2
 802b7fc:	4680      	mov	r8, r0
 802b7fe:	460c      	mov	r4, r1
 802b800:	469a      	mov	sl, r3
 802b802:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b806:	d807      	bhi.n	802b818 <_printf_i+0x28>
 802b808:	2f62      	cmp	r7, #98	; 0x62
 802b80a:	d80a      	bhi.n	802b822 <_printf_i+0x32>
 802b80c:	2f00      	cmp	r7, #0
 802b80e:	f000 80d4 	beq.w	802b9ba <_printf_i+0x1ca>
 802b812:	2f58      	cmp	r7, #88	; 0x58
 802b814:	f000 80c0 	beq.w	802b998 <_printf_i+0x1a8>
 802b818:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b81c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b820:	e03a      	b.n	802b898 <_printf_i+0xa8>
 802b822:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b826:	2b15      	cmp	r3, #21
 802b828:	d8f6      	bhi.n	802b818 <_printf_i+0x28>
 802b82a:	a101      	add	r1, pc, #4	; (adr r1, 802b830 <_printf_i+0x40>)
 802b82c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b830:	0802b889 	.word	0x0802b889
 802b834:	0802b89d 	.word	0x0802b89d
 802b838:	0802b819 	.word	0x0802b819
 802b83c:	0802b819 	.word	0x0802b819
 802b840:	0802b819 	.word	0x0802b819
 802b844:	0802b819 	.word	0x0802b819
 802b848:	0802b89d 	.word	0x0802b89d
 802b84c:	0802b819 	.word	0x0802b819
 802b850:	0802b819 	.word	0x0802b819
 802b854:	0802b819 	.word	0x0802b819
 802b858:	0802b819 	.word	0x0802b819
 802b85c:	0802b9a1 	.word	0x0802b9a1
 802b860:	0802b8c9 	.word	0x0802b8c9
 802b864:	0802b95b 	.word	0x0802b95b
 802b868:	0802b819 	.word	0x0802b819
 802b86c:	0802b819 	.word	0x0802b819
 802b870:	0802b9c3 	.word	0x0802b9c3
 802b874:	0802b819 	.word	0x0802b819
 802b878:	0802b8c9 	.word	0x0802b8c9
 802b87c:	0802b819 	.word	0x0802b819
 802b880:	0802b819 	.word	0x0802b819
 802b884:	0802b963 	.word	0x0802b963
 802b888:	682b      	ldr	r3, [r5, #0]
 802b88a:	1d1a      	adds	r2, r3, #4
 802b88c:	681b      	ldr	r3, [r3, #0]
 802b88e:	602a      	str	r2, [r5, #0]
 802b890:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b894:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b898:	2301      	movs	r3, #1
 802b89a:	e09f      	b.n	802b9dc <_printf_i+0x1ec>
 802b89c:	6820      	ldr	r0, [r4, #0]
 802b89e:	682b      	ldr	r3, [r5, #0]
 802b8a0:	0607      	lsls	r7, r0, #24
 802b8a2:	f103 0104 	add.w	r1, r3, #4
 802b8a6:	6029      	str	r1, [r5, #0]
 802b8a8:	d501      	bpl.n	802b8ae <_printf_i+0xbe>
 802b8aa:	681e      	ldr	r6, [r3, #0]
 802b8ac:	e003      	b.n	802b8b6 <_printf_i+0xc6>
 802b8ae:	0646      	lsls	r6, r0, #25
 802b8b0:	d5fb      	bpl.n	802b8aa <_printf_i+0xba>
 802b8b2:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b8b6:	2e00      	cmp	r6, #0
 802b8b8:	da03      	bge.n	802b8c2 <_printf_i+0xd2>
 802b8ba:	232d      	movs	r3, #45	; 0x2d
 802b8bc:	4276      	negs	r6, r6
 802b8be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b8c2:	485a      	ldr	r0, [pc, #360]	; (802ba2c <_printf_i+0x23c>)
 802b8c4:	230a      	movs	r3, #10
 802b8c6:	e012      	b.n	802b8ee <_printf_i+0xfe>
 802b8c8:	682b      	ldr	r3, [r5, #0]
 802b8ca:	6820      	ldr	r0, [r4, #0]
 802b8cc:	1d19      	adds	r1, r3, #4
 802b8ce:	6029      	str	r1, [r5, #0]
 802b8d0:	0605      	lsls	r5, r0, #24
 802b8d2:	d501      	bpl.n	802b8d8 <_printf_i+0xe8>
 802b8d4:	681e      	ldr	r6, [r3, #0]
 802b8d6:	e002      	b.n	802b8de <_printf_i+0xee>
 802b8d8:	0641      	lsls	r1, r0, #25
 802b8da:	d5fb      	bpl.n	802b8d4 <_printf_i+0xe4>
 802b8dc:	881e      	ldrh	r6, [r3, #0]
 802b8de:	4853      	ldr	r0, [pc, #332]	; (802ba2c <_printf_i+0x23c>)
 802b8e0:	2f6f      	cmp	r7, #111	; 0x6f
 802b8e2:	bf0c      	ite	eq
 802b8e4:	2308      	moveq	r3, #8
 802b8e6:	230a      	movne	r3, #10
 802b8e8:	2100      	movs	r1, #0
 802b8ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b8ee:	6865      	ldr	r5, [r4, #4]
 802b8f0:	60a5      	str	r5, [r4, #8]
 802b8f2:	2d00      	cmp	r5, #0
 802b8f4:	bfa2      	ittt	ge
 802b8f6:	6821      	ldrge	r1, [r4, #0]
 802b8f8:	f021 0104 	bicge.w	r1, r1, #4
 802b8fc:	6021      	strge	r1, [r4, #0]
 802b8fe:	b90e      	cbnz	r6, 802b904 <_printf_i+0x114>
 802b900:	2d00      	cmp	r5, #0
 802b902:	d04b      	beq.n	802b99c <_printf_i+0x1ac>
 802b904:	4615      	mov	r5, r2
 802b906:	fbb6 f1f3 	udiv	r1, r6, r3
 802b90a:	fb03 6711 	mls	r7, r3, r1, r6
 802b90e:	5dc7      	ldrb	r7, [r0, r7]
 802b910:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b914:	4637      	mov	r7, r6
 802b916:	42bb      	cmp	r3, r7
 802b918:	460e      	mov	r6, r1
 802b91a:	d9f4      	bls.n	802b906 <_printf_i+0x116>
 802b91c:	2b08      	cmp	r3, #8
 802b91e:	d10b      	bne.n	802b938 <_printf_i+0x148>
 802b920:	6823      	ldr	r3, [r4, #0]
 802b922:	07de      	lsls	r6, r3, #31
 802b924:	d508      	bpl.n	802b938 <_printf_i+0x148>
 802b926:	6923      	ldr	r3, [r4, #16]
 802b928:	6861      	ldr	r1, [r4, #4]
 802b92a:	4299      	cmp	r1, r3
 802b92c:	bfde      	ittt	le
 802b92e:	2330      	movle	r3, #48	; 0x30
 802b930:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b934:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b938:	1b52      	subs	r2, r2, r5
 802b93a:	6122      	str	r2, [r4, #16]
 802b93c:	f8cd a000 	str.w	sl, [sp]
 802b940:	464b      	mov	r3, r9
 802b942:	aa03      	add	r2, sp, #12
 802b944:	4621      	mov	r1, r4
 802b946:	4640      	mov	r0, r8
 802b948:	f7ff fee4 	bl	802b714 <_printf_common>
 802b94c:	3001      	adds	r0, #1
 802b94e:	d14a      	bne.n	802b9e6 <_printf_i+0x1f6>
 802b950:	f04f 30ff 	mov.w	r0, #4294967295
 802b954:	b004      	add	sp, #16
 802b956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b95a:	6823      	ldr	r3, [r4, #0]
 802b95c:	f043 0320 	orr.w	r3, r3, #32
 802b960:	6023      	str	r3, [r4, #0]
 802b962:	4833      	ldr	r0, [pc, #204]	; (802ba30 <_printf_i+0x240>)
 802b964:	2778      	movs	r7, #120	; 0x78
 802b966:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b96a:	6823      	ldr	r3, [r4, #0]
 802b96c:	6829      	ldr	r1, [r5, #0]
 802b96e:	061f      	lsls	r7, r3, #24
 802b970:	f851 6b04 	ldr.w	r6, [r1], #4
 802b974:	d402      	bmi.n	802b97c <_printf_i+0x18c>
 802b976:	065f      	lsls	r7, r3, #25
 802b978:	bf48      	it	mi
 802b97a:	b2b6      	uxthmi	r6, r6
 802b97c:	07df      	lsls	r7, r3, #31
 802b97e:	bf48      	it	mi
 802b980:	f043 0320 	orrmi.w	r3, r3, #32
 802b984:	6029      	str	r1, [r5, #0]
 802b986:	bf48      	it	mi
 802b988:	6023      	strmi	r3, [r4, #0]
 802b98a:	b91e      	cbnz	r6, 802b994 <_printf_i+0x1a4>
 802b98c:	6823      	ldr	r3, [r4, #0]
 802b98e:	f023 0320 	bic.w	r3, r3, #32
 802b992:	6023      	str	r3, [r4, #0]
 802b994:	2310      	movs	r3, #16
 802b996:	e7a7      	b.n	802b8e8 <_printf_i+0xf8>
 802b998:	4824      	ldr	r0, [pc, #144]	; (802ba2c <_printf_i+0x23c>)
 802b99a:	e7e4      	b.n	802b966 <_printf_i+0x176>
 802b99c:	4615      	mov	r5, r2
 802b99e:	e7bd      	b.n	802b91c <_printf_i+0x12c>
 802b9a0:	682b      	ldr	r3, [r5, #0]
 802b9a2:	6826      	ldr	r6, [r4, #0]
 802b9a4:	6961      	ldr	r1, [r4, #20]
 802b9a6:	1d18      	adds	r0, r3, #4
 802b9a8:	6028      	str	r0, [r5, #0]
 802b9aa:	0635      	lsls	r5, r6, #24
 802b9ac:	681b      	ldr	r3, [r3, #0]
 802b9ae:	d501      	bpl.n	802b9b4 <_printf_i+0x1c4>
 802b9b0:	6019      	str	r1, [r3, #0]
 802b9b2:	e002      	b.n	802b9ba <_printf_i+0x1ca>
 802b9b4:	0670      	lsls	r0, r6, #25
 802b9b6:	d5fb      	bpl.n	802b9b0 <_printf_i+0x1c0>
 802b9b8:	8019      	strh	r1, [r3, #0]
 802b9ba:	2300      	movs	r3, #0
 802b9bc:	6123      	str	r3, [r4, #16]
 802b9be:	4615      	mov	r5, r2
 802b9c0:	e7bc      	b.n	802b93c <_printf_i+0x14c>
 802b9c2:	682b      	ldr	r3, [r5, #0]
 802b9c4:	1d1a      	adds	r2, r3, #4
 802b9c6:	602a      	str	r2, [r5, #0]
 802b9c8:	681d      	ldr	r5, [r3, #0]
 802b9ca:	6862      	ldr	r2, [r4, #4]
 802b9cc:	2100      	movs	r1, #0
 802b9ce:	4628      	mov	r0, r5
 802b9d0:	f7d4 fc6e 	bl	80002b0 <memchr>
 802b9d4:	b108      	cbz	r0, 802b9da <_printf_i+0x1ea>
 802b9d6:	1b40      	subs	r0, r0, r5
 802b9d8:	6060      	str	r0, [r4, #4]
 802b9da:	6863      	ldr	r3, [r4, #4]
 802b9dc:	6123      	str	r3, [r4, #16]
 802b9de:	2300      	movs	r3, #0
 802b9e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b9e4:	e7aa      	b.n	802b93c <_printf_i+0x14c>
 802b9e6:	6923      	ldr	r3, [r4, #16]
 802b9e8:	462a      	mov	r2, r5
 802b9ea:	4649      	mov	r1, r9
 802b9ec:	4640      	mov	r0, r8
 802b9ee:	47d0      	blx	sl
 802b9f0:	3001      	adds	r0, #1
 802b9f2:	d0ad      	beq.n	802b950 <_printf_i+0x160>
 802b9f4:	6823      	ldr	r3, [r4, #0]
 802b9f6:	079b      	lsls	r3, r3, #30
 802b9f8:	d413      	bmi.n	802ba22 <_printf_i+0x232>
 802b9fa:	68e0      	ldr	r0, [r4, #12]
 802b9fc:	9b03      	ldr	r3, [sp, #12]
 802b9fe:	4298      	cmp	r0, r3
 802ba00:	bfb8      	it	lt
 802ba02:	4618      	movlt	r0, r3
 802ba04:	e7a6      	b.n	802b954 <_printf_i+0x164>
 802ba06:	2301      	movs	r3, #1
 802ba08:	4632      	mov	r2, r6
 802ba0a:	4649      	mov	r1, r9
 802ba0c:	4640      	mov	r0, r8
 802ba0e:	47d0      	blx	sl
 802ba10:	3001      	adds	r0, #1
 802ba12:	d09d      	beq.n	802b950 <_printf_i+0x160>
 802ba14:	3501      	adds	r5, #1
 802ba16:	68e3      	ldr	r3, [r4, #12]
 802ba18:	9903      	ldr	r1, [sp, #12]
 802ba1a:	1a5b      	subs	r3, r3, r1
 802ba1c:	42ab      	cmp	r3, r5
 802ba1e:	dcf2      	bgt.n	802ba06 <_printf_i+0x216>
 802ba20:	e7eb      	b.n	802b9fa <_printf_i+0x20a>
 802ba22:	2500      	movs	r5, #0
 802ba24:	f104 0619 	add.w	r6, r4, #25
 802ba28:	e7f5      	b.n	802ba16 <_printf_i+0x226>
 802ba2a:	bf00      	nop
 802ba2c:	08043369 	.word	0x08043369
 802ba30:	0804337a 	.word	0x0804337a

0802ba34 <__sflush_r>:
 802ba34:	898a      	ldrh	r2, [r1, #12]
 802ba36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ba3a:	4605      	mov	r5, r0
 802ba3c:	0710      	lsls	r0, r2, #28
 802ba3e:	460c      	mov	r4, r1
 802ba40:	d458      	bmi.n	802baf4 <__sflush_r+0xc0>
 802ba42:	684b      	ldr	r3, [r1, #4]
 802ba44:	2b00      	cmp	r3, #0
 802ba46:	dc05      	bgt.n	802ba54 <__sflush_r+0x20>
 802ba48:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802ba4a:	2b00      	cmp	r3, #0
 802ba4c:	dc02      	bgt.n	802ba54 <__sflush_r+0x20>
 802ba4e:	2000      	movs	r0, #0
 802ba50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba54:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ba56:	2e00      	cmp	r6, #0
 802ba58:	d0f9      	beq.n	802ba4e <__sflush_r+0x1a>
 802ba5a:	2300      	movs	r3, #0
 802ba5c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802ba60:	682f      	ldr	r7, [r5, #0]
 802ba62:	6a21      	ldr	r1, [r4, #32]
 802ba64:	602b      	str	r3, [r5, #0]
 802ba66:	d032      	beq.n	802bace <__sflush_r+0x9a>
 802ba68:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802ba6a:	89a3      	ldrh	r3, [r4, #12]
 802ba6c:	075a      	lsls	r2, r3, #29
 802ba6e:	d505      	bpl.n	802ba7c <__sflush_r+0x48>
 802ba70:	6863      	ldr	r3, [r4, #4]
 802ba72:	1ac0      	subs	r0, r0, r3
 802ba74:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802ba76:	b10b      	cbz	r3, 802ba7c <__sflush_r+0x48>
 802ba78:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ba7a:	1ac0      	subs	r0, r0, r3
 802ba7c:	2300      	movs	r3, #0
 802ba7e:	4602      	mov	r2, r0
 802ba80:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ba82:	6a21      	ldr	r1, [r4, #32]
 802ba84:	4628      	mov	r0, r5
 802ba86:	47b0      	blx	r6
 802ba88:	1c43      	adds	r3, r0, #1
 802ba8a:	89a3      	ldrh	r3, [r4, #12]
 802ba8c:	d106      	bne.n	802ba9c <__sflush_r+0x68>
 802ba8e:	6829      	ldr	r1, [r5, #0]
 802ba90:	291d      	cmp	r1, #29
 802ba92:	d82b      	bhi.n	802baec <__sflush_r+0xb8>
 802ba94:	4a29      	ldr	r2, [pc, #164]	; (802bb3c <__sflush_r+0x108>)
 802ba96:	410a      	asrs	r2, r1
 802ba98:	07d6      	lsls	r6, r2, #31
 802ba9a:	d427      	bmi.n	802baec <__sflush_r+0xb8>
 802ba9c:	2200      	movs	r2, #0
 802ba9e:	6062      	str	r2, [r4, #4]
 802baa0:	04d9      	lsls	r1, r3, #19
 802baa2:	6922      	ldr	r2, [r4, #16]
 802baa4:	6022      	str	r2, [r4, #0]
 802baa6:	d504      	bpl.n	802bab2 <__sflush_r+0x7e>
 802baa8:	1c42      	adds	r2, r0, #1
 802baaa:	d101      	bne.n	802bab0 <__sflush_r+0x7c>
 802baac:	682b      	ldr	r3, [r5, #0]
 802baae:	b903      	cbnz	r3, 802bab2 <__sflush_r+0x7e>
 802bab0:	6560      	str	r0, [r4, #84]	; 0x54
 802bab2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bab4:	602f      	str	r7, [r5, #0]
 802bab6:	2900      	cmp	r1, #0
 802bab8:	d0c9      	beq.n	802ba4e <__sflush_r+0x1a>
 802baba:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802babe:	4299      	cmp	r1, r3
 802bac0:	d002      	beq.n	802bac8 <__sflush_r+0x94>
 802bac2:	4628      	mov	r0, r5
 802bac4:	f7ff fc96 	bl	802b3f4 <_free_r>
 802bac8:	2000      	movs	r0, #0
 802baca:	6360      	str	r0, [r4, #52]	; 0x34
 802bacc:	e7c0      	b.n	802ba50 <__sflush_r+0x1c>
 802bace:	2301      	movs	r3, #1
 802bad0:	4628      	mov	r0, r5
 802bad2:	47b0      	blx	r6
 802bad4:	1c41      	adds	r1, r0, #1
 802bad6:	d1c8      	bne.n	802ba6a <__sflush_r+0x36>
 802bad8:	682b      	ldr	r3, [r5, #0]
 802bada:	2b00      	cmp	r3, #0
 802badc:	d0c5      	beq.n	802ba6a <__sflush_r+0x36>
 802bade:	2b1d      	cmp	r3, #29
 802bae0:	d001      	beq.n	802bae6 <__sflush_r+0xb2>
 802bae2:	2b16      	cmp	r3, #22
 802bae4:	d101      	bne.n	802baea <__sflush_r+0xb6>
 802bae6:	602f      	str	r7, [r5, #0]
 802bae8:	e7b1      	b.n	802ba4e <__sflush_r+0x1a>
 802baea:	89a3      	ldrh	r3, [r4, #12]
 802baec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802baf0:	81a3      	strh	r3, [r4, #12]
 802baf2:	e7ad      	b.n	802ba50 <__sflush_r+0x1c>
 802baf4:	690f      	ldr	r7, [r1, #16]
 802baf6:	2f00      	cmp	r7, #0
 802baf8:	d0a9      	beq.n	802ba4e <__sflush_r+0x1a>
 802bafa:	0793      	lsls	r3, r2, #30
 802bafc:	680e      	ldr	r6, [r1, #0]
 802bafe:	bf08      	it	eq
 802bb00:	694b      	ldreq	r3, [r1, #20]
 802bb02:	600f      	str	r7, [r1, #0]
 802bb04:	bf18      	it	ne
 802bb06:	2300      	movne	r3, #0
 802bb08:	eba6 0807 	sub.w	r8, r6, r7
 802bb0c:	608b      	str	r3, [r1, #8]
 802bb0e:	f1b8 0f00 	cmp.w	r8, #0
 802bb12:	dd9c      	ble.n	802ba4e <__sflush_r+0x1a>
 802bb14:	6a21      	ldr	r1, [r4, #32]
 802bb16:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802bb18:	4643      	mov	r3, r8
 802bb1a:	463a      	mov	r2, r7
 802bb1c:	4628      	mov	r0, r5
 802bb1e:	47b0      	blx	r6
 802bb20:	2800      	cmp	r0, #0
 802bb22:	dc06      	bgt.n	802bb32 <__sflush_r+0xfe>
 802bb24:	89a3      	ldrh	r3, [r4, #12]
 802bb26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bb2a:	81a3      	strh	r3, [r4, #12]
 802bb2c:	f04f 30ff 	mov.w	r0, #4294967295
 802bb30:	e78e      	b.n	802ba50 <__sflush_r+0x1c>
 802bb32:	4407      	add	r7, r0
 802bb34:	eba8 0800 	sub.w	r8, r8, r0
 802bb38:	e7e9      	b.n	802bb0e <__sflush_r+0xda>
 802bb3a:	bf00      	nop
 802bb3c:	dfbffffe 	.word	0xdfbffffe

0802bb40 <_fflush_r>:
 802bb40:	b538      	push	{r3, r4, r5, lr}
 802bb42:	690b      	ldr	r3, [r1, #16]
 802bb44:	4605      	mov	r5, r0
 802bb46:	460c      	mov	r4, r1
 802bb48:	b913      	cbnz	r3, 802bb50 <_fflush_r+0x10>
 802bb4a:	2500      	movs	r5, #0
 802bb4c:	4628      	mov	r0, r5
 802bb4e:	bd38      	pop	{r3, r4, r5, pc}
 802bb50:	b118      	cbz	r0, 802bb5a <_fflush_r+0x1a>
 802bb52:	6a03      	ldr	r3, [r0, #32]
 802bb54:	b90b      	cbnz	r3, 802bb5a <_fflush_r+0x1a>
 802bb56:	f7ff fa2f 	bl	802afb8 <__sinit>
 802bb5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bb5e:	2b00      	cmp	r3, #0
 802bb60:	d0f3      	beq.n	802bb4a <_fflush_r+0xa>
 802bb62:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802bb64:	07d0      	lsls	r0, r2, #31
 802bb66:	d404      	bmi.n	802bb72 <_fflush_r+0x32>
 802bb68:	0599      	lsls	r1, r3, #22
 802bb6a:	d402      	bmi.n	802bb72 <_fflush_r+0x32>
 802bb6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bb6e:	f7ff fbd2 	bl	802b316 <__retarget_lock_acquire_recursive>
 802bb72:	4628      	mov	r0, r5
 802bb74:	4621      	mov	r1, r4
 802bb76:	f7ff ff5d 	bl	802ba34 <__sflush_r>
 802bb7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802bb7c:	07da      	lsls	r2, r3, #31
 802bb7e:	4605      	mov	r5, r0
 802bb80:	d4e4      	bmi.n	802bb4c <_fflush_r+0xc>
 802bb82:	89a3      	ldrh	r3, [r4, #12]
 802bb84:	059b      	lsls	r3, r3, #22
 802bb86:	d4e1      	bmi.n	802bb4c <_fflush_r+0xc>
 802bb88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bb8a:	f7ff fbc5 	bl	802b318 <__retarget_lock_release_recursive>
 802bb8e:	e7dd      	b.n	802bb4c <_fflush_r+0xc>

0802bb90 <__swbuf_r>:
 802bb90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb92:	460e      	mov	r6, r1
 802bb94:	4614      	mov	r4, r2
 802bb96:	4605      	mov	r5, r0
 802bb98:	b118      	cbz	r0, 802bba2 <__swbuf_r+0x12>
 802bb9a:	6a03      	ldr	r3, [r0, #32]
 802bb9c:	b90b      	cbnz	r3, 802bba2 <__swbuf_r+0x12>
 802bb9e:	f7ff fa0b 	bl	802afb8 <__sinit>
 802bba2:	69a3      	ldr	r3, [r4, #24]
 802bba4:	60a3      	str	r3, [r4, #8]
 802bba6:	89a3      	ldrh	r3, [r4, #12]
 802bba8:	071a      	lsls	r2, r3, #28
 802bbaa:	d525      	bpl.n	802bbf8 <__swbuf_r+0x68>
 802bbac:	6923      	ldr	r3, [r4, #16]
 802bbae:	b31b      	cbz	r3, 802bbf8 <__swbuf_r+0x68>
 802bbb0:	6823      	ldr	r3, [r4, #0]
 802bbb2:	6922      	ldr	r2, [r4, #16]
 802bbb4:	1a98      	subs	r0, r3, r2
 802bbb6:	6963      	ldr	r3, [r4, #20]
 802bbb8:	b2f6      	uxtb	r6, r6
 802bbba:	4283      	cmp	r3, r0
 802bbbc:	4637      	mov	r7, r6
 802bbbe:	dc04      	bgt.n	802bbca <__swbuf_r+0x3a>
 802bbc0:	4621      	mov	r1, r4
 802bbc2:	4628      	mov	r0, r5
 802bbc4:	f7ff ffbc 	bl	802bb40 <_fflush_r>
 802bbc8:	b9e0      	cbnz	r0, 802bc04 <__swbuf_r+0x74>
 802bbca:	68a3      	ldr	r3, [r4, #8]
 802bbcc:	3b01      	subs	r3, #1
 802bbce:	60a3      	str	r3, [r4, #8]
 802bbd0:	6823      	ldr	r3, [r4, #0]
 802bbd2:	1c5a      	adds	r2, r3, #1
 802bbd4:	6022      	str	r2, [r4, #0]
 802bbd6:	701e      	strb	r6, [r3, #0]
 802bbd8:	6962      	ldr	r2, [r4, #20]
 802bbda:	1c43      	adds	r3, r0, #1
 802bbdc:	429a      	cmp	r2, r3
 802bbde:	d004      	beq.n	802bbea <__swbuf_r+0x5a>
 802bbe0:	89a3      	ldrh	r3, [r4, #12]
 802bbe2:	07db      	lsls	r3, r3, #31
 802bbe4:	d506      	bpl.n	802bbf4 <__swbuf_r+0x64>
 802bbe6:	2e0a      	cmp	r6, #10
 802bbe8:	d104      	bne.n	802bbf4 <__swbuf_r+0x64>
 802bbea:	4621      	mov	r1, r4
 802bbec:	4628      	mov	r0, r5
 802bbee:	f7ff ffa7 	bl	802bb40 <_fflush_r>
 802bbf2:	b938      	cbnz	r0, 802bc04 <__swbuf_r+0x74>
 802bbf4:	4638      	mov	r0, r7
 802bbf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802bbf8:	4621      	mov	r1, r4
 802bbfa:	4628      	mov	r0, r5
 802bbfc:	f000 f806 	bl	802bc0c <__swsetup_r>
 802bc00:	2800      	cmp	r0, #0
 802bc02:	d0d5      	beq.n	802bbb0 <__swbuf_r+0x20>
 802bc04:	f04f 37ff 	mov.w	r7, #4294967295
 802bc08:	e7f4      	b.n	802bbf4 <__swbuf_r+0x64>
	...

0802bc0c <__swsetup_r>:
 802bc0c:	b538      	push	{r3, r4, r5, lr}
 802bc0e:	4b2a      	ldr	r3, [pc, #168]	; (802bcb8 <__swsetup_r+0xac>)
 802bc10:	4605      	mov	r5, r0
 802bc12:	6818      	ldr	r0, [r3, #0]
 802bc14:	460c      	mov	r4, r1
 802bc16:	b118      	cbz	r0, 802bc20 <__swsetup_r+0x14>
 802bc18:	6a03      	ldr	r3, [r0, #32]
 802bc1a:	b90b      	cbnz	r3, 802bc20 <__swsetup_r+0x14>
 802bc1c:	f7ff f9cc 	bl	802afb8 <__sinit>
 802bc20:	89a3      	ldrh	r3, [r4, #12]
 802bc22:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bc26:	0718      	lsls	r0, r3, #28
 802bc28:	d422      	bmi.n	802bc70 <__swsetup_r+0x64>
 802bc2a:	06d9      	lsls	r1, r3, #27
 802bc2c:	d407      	bmi.n	802bc3e <__swsetup_r+0x32>
 802bc2e:	2309      	movs	r3, #9
 802bc30:	602b      	str	r3, [r5, #0]
 802bc32:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802bc36:	81a3      	strh	r3, [r4, #12]
 802bc38:	f04f 30ff 	mov.w	r0, #4294967295
 802bc3c:	e034      	b.n	802bca8 <__swsetup_r+0x9c>
 802bc3e:	0758      	lsls	r0, r3, #29
 802bc40:	d512      	bpl.n	802bc68 <__swsetup_r+0x5c>
 802bc42:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bc44:	b141      	cbz	r1, 802bc58 <__swsetup_r+0x4c>
 802bc46:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bc4a:	4299      	cmp	r1, r3
 802bc4c:	d002      	beq.n	802bc54 <__swsetup_r+0x48>
 802bc4e:	4628      	mov	r0, r5
 802bc50:	f7ff fbd0 	bl	802b3f4 <_free_r>
 802bc54:	2300      	movs	r3, #0
 802bc56:	6363      	str	r3, [r4, #52]	; 0x34
 802bc58:	89a3      	ldrh	r3, [r4, #12]
 802bc5a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802bc5e:	81a3      	strh	r3, [r4, #12]
 802bc60:	2300      	movs	r3, #0
 802bc62:	6063      	str	r3, [r4, #4]
 802bc64:	6923      	ldr	r3, [r4, #16]
 802bc66:	6023      	str	r3, [r4, #0]
 802bc68:	89a3      	ldrh	r3, [r4, #12]
 802bc6a:	f043 0308 	orr.w	r3, r3, #8
 802bc6e:	81a3      	strh	r3, [r4, #12]
 802bc70:	6923      	ldr	r3, [r4, #16]
 802bc72:	b94b      	cbnz	r3, 802bc88 <__swsetup_r+0x7c>
 802bc74:	89a3      	ldrh	r3, [r4, #12]
 802bc76:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802bc7a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bc7e:	d003      	beq.n	802bc88 <__swsetup_r+0x7c>
 802bc80:	4621      	mov	r1, r4
 802bc82:	4628      	mov	r0, r5
 802bc84:	f000 f840 	bl	802bd08 <__smakebuf_r>
 802bc88:	89a0      	ldrh	r0, [r4, #12]
 802bc8a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bc8e:	f010 0301 	ands.w	r3, r0, #1
 802bc92:	d00a      	beq.n	802bcaa <__swsetup_r+0x9e>
 802bc94:	2300      	movs	r3, #0
 802bc96:	60a3      	str	r3, [r4, #8]
 802bc98:	6963      	ldr	r3, [r4, #20]
 802bc9a:	425b      	negs	r3, r3
 802bc9c:	61a3      	str	r3, [r4, #24]
 802bc9e:	6923      	ldr	r3, [r4, #16]
 802bca0:	b943      	cbnz	r3, 802bcb4 <__swsetup_r+0xa8>
 802bca2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802bca6:	d1c4      	bne.n	802bc32 <__swsetup_r+0x26>
 802bca8:	bd38      	pop	{r3, r4, r5, pc}
 802bcaa:	0781      	lsls	r1, r0, #30
 802bcac:	bf58      	it	pl
 802bcae:	6963      	ldrpl	r3, [r4, #20]
 802bcb0:	60a3      	str	r3, [r4, #8]
 802bcb2:	e7f4      	b.n	802bc9e <__swsetup_r+0x92>
 802bcb4:	2000      	movs	r0, #0
 802bcb6:	e7f7      	b.n	802bca8 <__swsetup_r+0x9c>
 802bcb8:	20000160 	.word	0x20000160

0802bcbc <__swhatbuf_r>:
 802bcbc:	b570      	push	{r4, r5, r6, lr}
 802bcbe:	460c      	mov	r4, r1
 802bcc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bcc4:	2900      	cmp	r1, #0
 802bcc6:	b096      	sub	sp, #88	; 0x58
 802bcc8:	4615      	mov	r5, r2
 802bcca:	461e      	mov	r6, r3
 802bccc:	da0d      	bge.n	802bcea <__swhatbuf_r+0x2e>
 802bcce:	89a3      	ldrh	r3, [r4, #12]
 802bcd0:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bcd4:	f04f 0100 	mov.w	r1, #0
 802bcd8:	bf0c      	ite	eq
 802bcda:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bcde:	2340      	movne	r3, #64	; 0x40
 802bce0:	2000      	movs	r0, #0
 802bce2:	6031      	str	r1, [r6, #0]
 802bce4:	602b      	str	r3, [r5, #0]
 802bce6:	b016      	add	sp, #88	; 0x58
 802bce8:	bd70      	pop	{r4, r5, r6, pc}
 802bcea:	466a      	mov	r2, sp
 802bcec:	f000 f848 	bl	802bd80 <_fstat_r>
 802bcf0:	2800      	cmp	r0, #0
 802bcf2:	dbec      	blt.n	802bcce <__swhatbuf_r+0x12>
 802bcf4:	9901      	ldr	r1, [sp, #4]
 802bcf6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bcfa:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bcfe:	4259      	negs	r1, r3
 802bd00:	4159      	adcs	r1, r3
 802bd02:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bd06:	e7eb      	b.n	802bce0 <__swhatbuf_r+0x24>

0802bd08 <__smakebuf_r>:
 802bd08:	898b      	ldrh	r3, [r1, #12]
 802bd0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bd0c:	079d      	lsls	r5, r3, #30
 802bd0e:	4606      	mov	r6, r0
 802bd10:	460c      	mov	r4, r1
 802bd12:	d507      	bpl.n	802bd24 <__smakebuf_r+0x1c>
 802bd14:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bd18:	6023      	str	r3, [r4, #0]
 802bd1a:	6123      	str	r3, [r4, #16]
 802bd1c:	2301      	movs	r3, #1
 802bd1e:	6163      	str	r3, [r4, #20]
 802bd20:	b002      	add	sp, #8
 802bd22:	bd70      	pop	{r4, r5, r6, pc}
 802bd24:	ab01      	add	r3, sp, #4
 802bd26:	466a      	mov	r2, sp
 802bd28:	f7ff ffc8 	bl	802bcbc <__swhatbuf_r>
 802bd2c:	9900      	ldr	r1, [sp, #0]
 802bd2e:	4605      	mov	r5, r0
 802bd30:	4630      	mov	r0, r6
 802bd32:	f7ff f81b 	bl	802ad6c <_malloc_r>
 802bd36:	b948      	cbnz	r0, 802bd4c <__smakebuf_r+0x44>
 802bd38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bd3c:	059a      	lsls	r2, r3, #22
 802bd3e:	d4ef      	bmi.n	802bd20 <__smakebuf_r+0x18>
 802bd40:	f023 0303 	bic.w	r3, r3, #3
 802bd44:	f043 0302 	orr.w	r3, r3, #2
 802bd48:	81a3      	strh	r3, [r4, #12]
 802bd4a:	e7e3      	b.n	802bd14 <__smakebuf_r+0xc>
 802bd4c:	89a3      	ldrh	r3, [r4, #12]
 802bd4e:	6020      	str	r0, [r4, #0]
 802bd50:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bd54:	81a3      	strh	r3, [r4, #12]
 802bd56:	9b00      	ldr	r3, [sp, #0]
 802bd58:	6163      	str	r3, [r4, #20]
 802bd5a:	9b01      	ldr	r3, [sp, #4]
 802bd5c:	6120      	str	r0, [r4, #16]
 802bd5e:	b15b      	cbz	r3, 802bd78 <__smakebuf_r+0x70>
 802bd60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bd64:	4630      	mov	r0, r6
 802bd66:	f000 f81d 	bl	802bda4 <_isatty_r>
 802bd6a:	b128      	cbz	r0, 802bd78 <__smakebuf_r+0x70>
 802bd6c:	89a3      	ldrh	r3, [r4, #12]
 802bd6e:	f023 0303 	bic.w	r3, r3, #3
 802bd72:	f043 0301 	orr.w	r3, r3, #1
 802bd76:	81a3      	strh	r3, [r4, #12]
 802bd78:	89a3      	ldrh	r3, [r4, #12]
 802bd7a:	431d      	orrs	r5, r3
 802bd7c:	81a5      	strh	r5, [r4, #12]
 802bd7e:	e7cf      	b.n	802bd20 <__smakebuf_r+0x18>

0802bd80 <_fstat_r>:
 802bd80:	b538      	push	{r3, r4, r5, lr}
 802bd82:	4d07      	ldr	r5, [pc, #28]	; (802bda0 <_fstat_r+0x20>)
 802bd84:	2300      	movs	r3, #0
 802bd86:	4604      	mov	r4, r0
 802bd88:	4608      	mov	r0, r1
 802bd8a:	4611      	mov	r1, r2
 802bd8c:	602b      	str	r3, [r5, #0]
 802bd8e:	f7d6 fb57 	bl	8002440 <_fstat>
 802bd92:	1c43      	adds	r3, r0, #1
 802bd94:	d102      	bne.n	802bd9c <_fstat_r+0x1c>
 802bd96:	682b      	ldr	r3, [r5, #0]
 802bd98:	b103      	cbz	r3, 802bd9c <_fstat_r+0x1c>
 802bd9a:	6023      	str	r3, [r4, #0]
 802bd9c:	bd38      	pop	{r3, r4, r5, pc}
 802bd9e:	bf00      	nop
 802bda0:	2001383c 	.word	0x2001383c

0802bda4 <_isatty_r>:
 802bda4:	b538      	push	{r3, r4, r5, lr}
 802bda6:	4d06      	ldr	r5, [pc, #24]	; (802bdc0 <_isatty_r+0x1c>)
 802bda8:	2300      	movs	r3, #0
 802bdaa:	4604      	mov	r4, r0
 802bdac:	4608      	mov	r0, r1
 802bdae:	602b      	str	r3, [r5, #0]
 802bdb0:	f7d6 fb4c 	bl	800244c <_isatty>
 802bdb4:	1c43      	adds	r3, r0, #1
 802bdb6:	d102      	bne.n	802bdbe <_isatty_r+0x1a>
 802bdb8:	682b      	ldr	r3, [r5, #0]
 802bdba:	b103      	cbz	r3, 802bdbe <_isatty_r+0x1a>
 802bdbc:	6023      	str	r3, [r4, #0]
 802bdbe:	bd38      	pop	{r3, r4, r5, pc}
 802bdc0:	2001383c 	.word	0x2001383c

0802bdc4 <_init>:
 802bdc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bdc6:	bf00      	nop
 802bdc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bdca:	bc08      	pop	{r3}
 802bdcc:	469e      	mov	lr, r3
 802bdce:	4770      	bx	lr

0802bdd0 <_fini>:
 802bdd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bdd2:	bf00      	nop
 802bdd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bdd6:	bc08      	pop	{r3}
 802bdd8:	469e      	mov	lr, r3
 802bdda:	4770      	bx	lr
